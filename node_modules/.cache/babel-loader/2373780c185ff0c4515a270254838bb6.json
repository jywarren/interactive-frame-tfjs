{"ast":null,"code":"import _toConsumableArray from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _possibleConstructorReturn from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/warren/sites/interactive-frame-tfjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _FN;\n\n/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nvar REVISION = '142';\nvar MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2\n};\nvar TOUCH = {\n  ROTATE: 0,\n  PAN: 1,\n  DOLLY_PAN: 2,\n  DOLLY_ROTATE: 3\n};\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar VSMShadowMap = 3;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar CineonToneMapping = 3;\nvar ACESFilmicToneMapping = 4;\nvar CustomToneMapping = 5;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar CubeUVReflectionMapping = 306;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipmapNearestFilter = 1004;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipmapLinearFilter = 1005;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipmapNearestFilter = 1007;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipmapLinearFilter = 1008;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RedIntegerFormat = 1029;\nvar RGFormat = 1030;\nvar RGIntegerFormat = 1031;\nvar RGBAIntegerFormat = 1033;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGB_ETC2_Format = 37492;\nvar RGBA_ETC2_EAC_Format = 37496;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar RGBA_BPTC_Format = 36492;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar NormalAnimationBlendMode = 2500;\nvar AdditiveAnimationBlendMode = 2501;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1; // Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\n\nvar NoColorSpace = '';\nvar SRGBColorSpace = 'srgb';\nvar LinearSRGBColorSpace = 'srgb-linear';\nvar ZeroStencilOp = 0;\nvar KeepStencilOp = 7680;\nvar ReplaceStencilOp = 7681;\nvar IncrementStencilOp = 7682;\nvar DecrementStencilOp = 7683;\nvar IncrementWrapStencilOp = 34055;\nvar DecrementWrapStencilOp = 34056;\nvar InvertStencilOp = 5386;\nvar NeverStencilFunc = 512;\nvar LessStencilFunc = 513;\nvar EqualStencilFunc = 514;\nvar LessEqualStencilFunc = 515;\nvar GreaterStencilFunc = 516;\nvar NotEqualStencilFunc = 517;\nvar GreaterEqualStencilFunc = 518;\nvar AlwaysStencilFunc = 519;\nvar StaticDrawUsage = 35044;\nvar DynamicDrawUsage = 35048;\nvar StreamDrawUsage = 35040;\nvar StaticReadUsage = 35045;\nvar DynamicReadUsage = 35049;\nvar StreamReadUsage = 35041;\nvar StaticCopyUsage = 35046;\nvar DynamicCopyUsage = 35050;\nvar StreamCopyUsage = 35042;\nvar GLSL1 = '100';\nvar GLSL3 = '300 es';\nvar _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nvar EventDispatcher = /*#__PURE__*/function () {\n  function EventDispatcher() {\n    _classCallCheck(this, EventDispatcher);\n  }\n\n  _createClass(EventDispatcher, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    }\n  }, {\n    key: \"hasEventListener\",\n    value: function hasEventListener(type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this; // Make a copy, in case listeners are removed while iterating.\n\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n\n        event.target = null;\n      }\n    }\n  }]);\n\n  return EventDispatcher;\n}();\n\nvar _lut = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'];\nvar _seed = 1234567;\nvar DEG2RAD = Math.PI / 180;\nvar RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\nfunction generateUUID() {\n  var d0 = Math.random() * 0xffffffff | 0;\n  var d1 = Math.random() * 0xffffffff | 0;\n  var d2 = Math.random() * 0xffffffff | 0;\n  var d3 = Math.random() * 0xffffffff | 0;\n  var uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toLowerCase() here flattens concatenated strings to save heap memory space.\n\n  return uuid.toLowerCase();\n}\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n} // compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\n\n\nfunction euclideanModulo(n, m) {\n  return (n % m + m) % m;\n} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\nfunction mapLinear(x, a1, a2, b1, b2) {\n  return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\nfunction inverseLerp(x, y, value) {\n  if (x !== y) {\n    return (value - x) / (y - x);\n  } else {\n    return 0;\n  }\n} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\nfunction damp(x, y, lambda, dt) {\n  return lerp(x, y, 1 - Math.exp(-lambda * dt));\n} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\nfunction pingpong(x) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return length - Math.abs(euclideanModulo(x, length * 2) - length);\n} // http://en.wikipedia.org/wiki/Smoothstep\n\n\nfunction smoothstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\n\nfunction smootherstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * x * (x * (x * 6 - 15) + 10);\n} // Random integer from <low, high> interval\n\n\nfunction randInt(low, high) {\n  return low + Math.floor(Math.random() * (high - low + 1));\n} // Random float from <low, high> interval\n\n\nfunction randFloat(low, high) {\n  return low + Math.random() * (high - low);\n} // Random float from <-range/2, range/2> interval\n\n\nfunction randFloatSpread(range) {\n  return range * (0.5 - Math.random());\n} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\nfunction seededRandom(s) {\n  if (s !== undefined) _seed = s; // Mulberry32 generator\n\n  var t = _seed += 0x6D2B79F5;\n  t = Math.imul(t ^ t >>> 15, t | 1);\n  t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n  return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\n\nfunction degToRad(degrees) {\n  return degrees * DEG2RAD;\n}\n\nfunction radToDeg(radians) {\n  return radians * RAD2DEG;\n}\n\nfunction isPowerOfTwo(value) {\n  return (value & value - 1) === 0 && value !== 0;\n}\n\nfunction ceilPowerOfTwo(value) {\n  return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n}\n\nfunction floorPowerOfTwo(value) {\n  return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n}\n\nfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n  // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n  // rotations are applied to the axes in the order specified by 'order'\n  // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n  // angles are in radians\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var c2 = cos(b / 2);\n  var s2 = sin(b / 2);\n  var c13 = cos((a + c) / 2);\n  var s13 = sin((a + c) / 2);\n  var c1_3 = cos((a - c) / 2);\n  var s1_3 = sin((a - c) / 2);\n  var c3_1 = cos((c - a) / 2);\n  var s3_1 = sin((c - a) / 2);\n\n  switch (order) {\n    case 'XYX':\n      q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n      break;\n\n    case 'YZY':\n      q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n      break;\n\n    case 'ZXZ':\n      q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n      break;\n\n    case 'XZX':\n      q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n      break;\n\n    case 'YXY':\n      q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n      break;\n\n    case 'ZYZ':\n      q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n      break;\n\n    default:\n      console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n  }\n}\n\nfunction denormalize$1(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n\n    case Uint16Array:\n      return value / 65535.0;\n\n    case Uint8Array:\n      return value / 255.0;\n\n    case Int16Array:\n      return Math.max(value / 32767.0, -1.0);\n\n    case Int8Array:\n      return Math.max(value / 127.0, -1.0);\n\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\n\nfunction normalize(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n\n    case Uint16Array:\n      return Math.round(value * 65535.0);\n\n    case Uint8Array:\n      return Math.round(value * 255.0);\n\n    case Int16Array:\n      return Math.round(value * 32767.0);\n\n    case Int8Array:\n      return Math.round(value * 127.0);\n\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DEG2RAD: DEG2RAD,\n  RAD2DEG: RAD2DEG,\n  generateUUID: generateUUID,\n  clamp: clamp,\n  euclideanModulo: euclideanModulo,\n  mapLinear: mapLinear,\n  inverseLerp: inverseLerp,\n  lerp: lerp,\n  damp: damp,\n  pingpong: pingpong,\n  smoothstep: smoothstep,\n  smootherstep: smootherstep,\n  randInt: randInt,\n  randFloat: randFloat,\n  randFloatSpread: randFloatSpread,\n  seededRandom: seededRandom,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  isPowerOfTwo: isPowerOfTwo,\n  ceilPowerOfTwo: ceilPowerOfTwo,\n  floorPowerOfTwo: floorPowerOfTwo,\n  setQuaternionFromProperEuler: setQuaternionFromProperEuler,\n  normalize: normalize,\n  denormalize: denormalize$1\n});\n\nvar Vector2 = /*#__PURE__*/function () {\n  function Vector2() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Vector2);\n\n    Vector2.prototype.isVector2 = true;\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vector2, [{\n    key: \"width\",\n    get: function get() {\n      return this.x;\n    },\n    set: function set(value) {\n      this.x = value;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.y;\n    },\n    set: function set(value) {\n      this.y = value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    }\n  }, {\n    key: \"setX\",\n    value: function setX(x) {\n      this.x = x;\n      return this;\n    }\n  }, {\n    key: \"setY\",\n    value: function setY(y) {\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.x, this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    }\n  }, {\n    key: \"subScalar\",\n    value: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    }\n  }, {\n    key: \"applyMatrix3\",\n    value: function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6];\n      this.y = e[1] * x + e[4] * y + e[7];\n      return this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    }\n  }, {\n    key: \"clampScalar\",\n    value: function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      return this;\n    }\n  }, {\n    key: \"clampLength\",\n    value: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    }\n  }, {\n    key: \"roundToZero\",\n    value: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this.x * v.x + this.y * v.y;\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(v) {\n      return this.x * v.y - this.y * v.x;\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.x * this.x + this.y * this.y;\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n  }, {\n    key: \"manhattanLength\",\n    value: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    }\n  }, {\n    key: \"angle\",\n    value: function angle() {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(-this.y, -this.x) + Math.PI;\n      return angle;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    }\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpVectors\",\n    value: function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(v) {\n      return v.x === this.x && v.y === this.y;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    }\n  }, {\n    key: \"rotateAround\",\n    value: function rotateAround(center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  }, {\n    key: \"random\",\n    value: function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      return this;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.x;\n\n            case 2:\n              _context2.next = 4;\n              return this.y;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return Vector2;\n}();\n\nvar Matrix3 = /*#__PURE__*/function () {\n  function Matrix3() {\n    _classCallCheck(this, Matrix3);\n\n    Matrix3.prototype.isMatrix3 = true;\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  _createClass(Matrix3, [{\n    key: \"set\",\n    value: function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    }\n  }, {\n    key: \"extractBasis\",\n    value: function extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrix3Column(this, 0);\n      yAxis.setFromMatrix3Column(this, 1);\n      zAxis.setFromMatrix3Column(this, 2);\n      return this;\n    }\n  }, {\n    key: \"setFromMatrix4\",\n    value: function setFromMatrix4(m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(m) {\n      return this.multiplyMatrices(this, m);\n    }\n  }, {\n    key: \"premultiply\",\n    value: function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    }\n  }, {\n    key: \"multiplyMatrices\",\n    value: function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      var te = this.elements,\n          n11 = te[0],\n          n21 = te[1],\n          n31 = te[2],\n          n12 = te[3],\n          n22 = te[4],\n          n32 = te[5],\n          n13 = te[6],\n          n23 = te[7],\n          n33 = te[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      var tmp;\n      var m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    }\n  }, {\n    key: \"getNormalMatrix\",\n    value: function getNormalMatrix(matrix4) {\n      return this.setFromMatrix4(matrix4).invert().transpose();\n    }\n  }, {\n    key: \"transposeIntoArray\",\n    value: function transposeIntoArray(r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    }\n  }, {\n    key: \"setUvTransform\",\n    value: function setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy) {\n      var te = this.elements;\n      te[0] *= sx;\n      te[3] *= sx;\n      te[6] *= sx;\n      te[1] *= sy;\n      te[4] *= sy;\n      te[7] *= sy;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(theta) {\n      var c = Math.cos(theta);\n      var s = Math.sin(theta);\n      var te = this.elements;\n      var a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n      var a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n      te[0] = c * a11 + s * a21;\n      te[3] = c * a12 + s * a22;\n      te[6] = c * a13 + s * a23;\n      te[1] = -s * a11 + c * a21;\n      te[4] = -s * a12 + c * a22;\n      te[7] = -s * a13 + c * a23;\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(tx, ty) {\n      var te = this.elements;\n      te[0] += tx * te[2];\n      te[3] += tx * te[5];\n      te[6] += tx * te[8];\n      te[1] += ty * te[2];\n      te[4] += ty * te[5];\n      te[7] += ty * te[8];\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().fromArray(this.elements);\n    }\n  }]);\n\n  return Matrix3;\n}();\n\nfunction arrayNeedsUint32(array) {\n  // assumes larger values usually on last\n  for (var i = array.length - 1; i >= 0; --i) {\n    if (array[i] > 65535) return true;\n  }\n\n  return false;\n}\n\nvar TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  Uint8ClampedArray: Uint8ClampedArray,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\n\nfunction getTypedArray(type, buffer) {\n  return new TYPED_ARRAYS[type](buffer);\n}\n\nfunction createElementNS(name) {\n  return document.createElementNS('http://www.w3.org/1999/xhtml', name);\n}\n\nfunction SRGBToLinear(c) {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nfunction LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n} // JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\n\n\nvar FN = (_FN = {}, _defineProperty(_FN, SRGBColorSpace, _defineProperty({}, LinearSRGBColorSpace, SRGBToLinear)), _defineProperty(_FN, LinearSRGBColorSpace, _defineProperty({}, SRGBColorSpace, LinearToSRGB)), _FN);\nvar ColorManagement = {\n  legacyMode: true,\n\n  get workingColorSpace() {\n    return LinearSRGBColorSpace;\n  },\n\n  set workingColorSpace(colorSpace) {\n    console.warn('THREE.ColorManagement: .workingColorSpace is readonly.');\n  },\n\n  convert: function convert(color, sourceColorSpace, targetColorSpace) {\n    if (this.legacyMode || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {\n      return color;\n    }\n\n    if (FN[sourceColorSpace] && FN[sourceColorSpace][targetColorSpace] !== undefined) {\n      var fn = FN[sourceColorSpace][targetColorSpace];\n      color.r = fn(color.r);\n      color.g = fn(color.g);\n      color.b = fn(color.b);\n      return color;\n    }\n\n    throw new Error('Unsupported color space conversion.');\n  },\n  fromWorkingColorSpace: function fromWorkingColorSpace(color, targetColorSpace) {\n    return this.convert(color, this.workingColorSpace, targetColorSpace);\n  },\n  toWorkingColorSpace: function toWorkingColorSpace(color, sourceColorSpace) {\n    return this.convert(color, sourceColorSpace, this.workingColorSpace);\n  }\n};\nvar _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nvar _rgb = {\n  r: 0,\n  g: 0,\n  b: 0\n};\nvar _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nvar _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\n\nfunction toComponents(source, target) {\n  target.r = source.r;\n  target.g = source.g;\n  target.b = source.b;\n  return target;\n}\n\nvar Color = /*#__PURE__*/function () {\n  function Color(r, g, b) {\n    _classCallCheck(this, Color);\n\n    this.isColor = true;\n    this.r = 1;\n    this.g = 1;\n    this.b = 1;\n\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  _createClass(Color, [{\n    key: \"set\",\n    value: function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n  }, {\n    key: \"setHex\",\n    value: function setHex(hex) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setRGB\",\n    value: function setRGB(r, g, b) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setHSL\",\n    value: function setHSL(h, s, l) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n      h = euclideanModulo(h, 1);\n      s = clamp(s, 0, 1);\n      l = clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[4]);\n              return this.setHSL(h, s, l, colorSpace);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        return this.setColorName(style, colorSpace);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setColorName\",\n    value: function setColorName(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n\n      // color keywords\n      var hex = _colorKeywords[style.toLowerCase()];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex, colorSpace);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n  }, {\n    key: \"copySRGBToLinear\",\n    value: function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n  }, {\n    key: \"copyLinearToSRGB\",\n    value: function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n  }, {\n    key: \"convertSRGBToLinear\",\n    value: function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n  }, {\n    key: \"convertLinearToSRGB\",\n    value: function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n  }, {\n    key: \"getHex\",\n    value: function getHex() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      return clamp(_rgb.r * 255, 0, 255) << 16 ^ clamp(_rgb.g * 255, 0, 255) << 8 ^ clamp(_rgb.b * 255, 0, 255) << 0;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      return ('000000' + this.getHex(colorSpace).toString(16)).slice(-6);\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      var r = _rgb.r,\n          g = _rgb.g,\n          b = _rgb.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n  }, {\n    key: \"getRGB\",\n    value: function getRGB(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      target.r = _rgb.r;\n      target.g = _rgb.g;\n      target.b = _rgb.b;\n      return target;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n\n      if (colorSpace !== SRGBColorSpace) {\n        // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n        return \"color(\".concat(colorSpace, \" \").concat(_rgb.r, \" \").concat(_rgb.g, \" \").concat(_rgb.b, \")\");\n      }\n\n      return \"rgb(\".concat(_rgb.r * 255 | 0, \",\").concat(_rgb.g * 255 | 0, \",\").concat(_rgb.b * 255 | 0, \")\");\n    }\n  }, {\n    key: \"offsetHSL\",\n    value: function offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n  }, {\n    key: \"addColors\",\n    value: function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpColors\",\n    value: function lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpHSL\",\n    value: function lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      var h = lerp(_hslA.h, _hslB.h, alpha);\n      var s = lerp(_hslA.s, _hslB.s, alpha);\n      var l = lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n\n      if (attribute.normalized === true) {\n        // assuming Uint8Array\n        this.r /= 255;\n        this.g /= 255;\n        this.b /= 255;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getHex();\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.r;\n\n            case 2:\n              _context3.next = 4;\n              return this.g;\n\n            case 4:\n              _context3.next = 6;\n              return this.b;\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return Color;\n}();\n\nColor.NAMES = _colorKeywords;\n\nvar _canvas;\n\nvar ImageUtils = /*#__PURE__*/function () {\n  function ImageUtils() {\n    _classCallCheck(this, ImageUtils);\n  }\n\n  _createClass(ImageUtils, null, [{\n    key: \"getDataURL\",\n    value: function getDataURL(image) {\n      if (/^data:/i.test(image.src)) {\n        return image.src;\n      }\n\n      if (typeof HTMLCanvasElement == 'undefined') {\n        return image.src;\n      }\n\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        if (_canvas === undefined) _canvas = createElementNS('canvas');\n        _canvas.width = image.width;\n        _canvas.height = image.height;\n\n        var context = _canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        canvas = _canvas;\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  }, {\n    key: \"sRGBToLinear\",\n    value: function sRGBToLinear(image) {\n      if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        var canvas = createElementNS('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height);\n        var imageData = context.getImageData(0, 0, image.width, image.height);\n        var data = imageData.data;\n\n        for (var i = 0; i < data.length; i++) {\n          data[i] = SRGBToLinear(data[i] / 255) * 255;\n        }\n\n        context.putImageData(imageData, 0, 0);\n        return canvas;\n      } else if (image.data) {\n        var _data = image.data.slice(0);\n\n        for (var _i = 0; _i < _data.length; _i++) {\n          if (_data instanceof Uint8Array || _data instanceof Uint8ClampedArray) {\n            _data[_i] = Math.floor(SRGBToLinear(_data[_i] / 255) * 255);\n          } else {\n            // assuming float\n            _data[_i] = SRGBToLinear(_data[_i]);\n          }\n        }\n\n        return {\n          data: _data,\n          width: image.width,\n          height: image.height\n        };\n      } else {\n        console.warn('THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.');\n        return image;\n      }\n    }\n  }]);\n\n  return ImageUtils;\n}();\n\nvar Source = /*#__PURE__*/function () {\n  function Source() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, Source);\n\n    this.isSource = true;\n    this.uuid = generateUUID();\n    this.data = data;\n    this.version = 0;\n  }\n\n  _createClass(Source, [{\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.images[this.uuid] !== undefined) {\n        return meta.images[this.uuid];\n      }\n\n      var output = {\n        uuid: this.uuid,\n        url: ''\n      };\n      var data = this.data;\n\n      if (data !== null) {\n        var url;\n\n        if (Array.isArray(data)) {\n          // cube texture\n          url = [];\n\n          for (var i = 0, l = data.length; i < l; i++) {\n            if (data[i].isDataTexture) {\n              url.push(serializeImage(data[i].image));\n            } else {\n              url.push(serializeImage(data[i]));\n            }\n          }\n        } else {\n          // texture\n          url = serializeImage(data);\n        }\n\n        output.url = url;\n      }\n\n      if (!isRootObject) {\n        meta.images[this.uuid] = output;\n      }\n\n      return output;\n    }\n  }]);\n\n  return Source;\n}();\n\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n      return {\n        data: Array.from(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\n\nvar textureId = 0;\n\nvar Texture = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(Texture, _EventDispatcher);\n\n  var _super = _createSuper(Texture);\n\n  function Texture() {\n    var _this2;\n\n    var image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    var mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    var wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    var wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    var magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    var minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    var format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    var type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    var anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n    var encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n\n    _classCallCheck(this, Texture);\n\n    _this2 = _super.call(this);\n    _this2.isTexture = true;\n    Object.defineProperty(_assertThisInitialized(_this2), 'id', {\n      value: textureId++\n    });\n    _this2.uuid = generateUUID();\n    _this2.name = '';\n    _this2.source = new Source(image);\n    _this2.mipmaps = [];\n    _this2.mapping = mapping;\n    _this2.wrapS = wrapS;\n    _this2.wrapT = wrapT;\n    _this2.magFilter = magFilter;\n    _this2.minFilter = minFilter;\n    _this2.anisotropy = anisotropy;\n    _this2.format = format;\n    _this2.internalFormat = null;\n    _this2.type = type;\n    _this2.offset = new Vector2(0, 0);\n    _this2.repeat = new Vector2(1, 1);\n    _this2.center = new Vector2(0, 0);\n    _this2.rotation = 0;\n    _this2.matrixAutoUpdate = true;\n    _this2.matrix = new Matrix3();\n    _this2.generateMipmaps = true;\n    _this2.premultiplyAlpha = false;\n    _this2.flipY = true;\n    _this2.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    _this2.encoding = encoding;\n    _this2.userData = {};\n    _this2.version = 0;\n    _this2.onUpdate = null;\n    _this2.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\n    _this2.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n    return _this2;\n  }\n\n  _createClass(Texture, [{\n    key: \"image\",\n    get: function get() {\n      return this.source.data;\n    },\n    set: function set(value) {\n      this.source.data = value;\n    }\n  }, {\n    key: \"updateMatrix\",\n    value: function updateMatrix() {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.name = source.name;\n      this.source = source.source;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.internalFormat = source.internalFormat;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      this.needsUpdate = true;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        image: this.source.toJSON(meta).uuid,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n      if (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }, {\n    key: \"transformUv\",\n    value: function transformUv(uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) {\n        this.version++;\n        this.source.needsUpdate = true;\n      }\n    }\n  }]);\n\n  return Texture;\n}(EventDispatcher);\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nvar Vector4 = /*#__PURE__*/function () {\n  function Vector4() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, Vector4);\n\n    Vector4.prototype.isVector4 = true;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n\n  _createClass(Vector4, [{\n    key: \"width\",\n    get: function get() {\n      return this.z;\n    },\n    set: function set(value) {\n      this.z = value;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.w;\n    },\n    set: function set(value) {\n      this.w = value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    }\n  }, {\n    key: \"setX\",\n    value: function setX(x) {\n      this.x = x;\n      return this;\n    }\n  }, {\n    key: \"setY\",\n    value: function setY(y) {\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"setZ\",\n    value: function setZ(z) {\n      this.z = z;\n      return this;\n    }\n  }, {\n    key: \"setW\",\n    value: function setW(w) {\n      this.w = w;\n      return this;\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    }\n  }, {\n    key: \"subScalar\",\n    value: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      this.w *= v.w;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    }\n  }, {\n    key: \"setAxisAngleFromQuaternion\",\n    value: function setAxisAngleFromQuaternion(q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setAxisAngleFromRotationMatrix\",\n    value: function setAxisAngleFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle, x, y, z; // variables for result\n\n      var epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    }\n  }, {\n    key: \"clampScalar\",\n    value: function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      this.w = Math.max(minVal, Math.min(maxVal, this.w));\n      return this;\n    }\n  }, {\n    key: \"clampLength\",\n    value: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    }\n  }, {\n    key: \"roundToZero\",\n    value: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n  }, {\n    key: \"manhattanLength\",\n    value: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    }\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpVectors\",\n    value: function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      this.w = v1.w + (v2.w - v1.w) * alpha;\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    }\n  }, {\n    key: \"random\",\n    value: function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      this.w = Math.random();\n      return this;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.x;\n\n            case 2:\n              _context4.next = 4;\n              return this.y;\n\n            case 4:\n              _context4.next = 6;\n              return this.z;\n\n            case 6:\n              _context4.next = 8;\n              return this.w;\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return Vector4;\n}();\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\n\nvar WebGLRenderTarget = /*#__PURE__*/function (_EventDispatcher2) {\n  _inherits(WebGLRenderTarget, _EventDispatcher2);\n\n  var _super2 = _createSuper(WebGLRenderTarget);\n\n  function WebGLRenderTarget(width, height) {\n    var _this3;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, WebGLRenderTarget);\n\n    _this3 = _super2.call(this);\n    _this3.isWebGLRenderTarget = true;\n    _this3.width = width;\n    _this3.height = height;\n    _this3.depth = 1;\n    _this3.scissor = new Vector4(0, 0, width, height);\n    _this3.scissorTest = false;\n    _this3.viewport = new Vector4(0, 0, width, height);\n    var image = {\n      width: width,\n      height: height,\n      depth: 1\n    };\n    _this3.texture = new Texture(image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    _this3.texture.isRenderTargetTexture = true;\n    _this3.texture.flipY = false;\n    _this3.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    _this3.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n    _this3.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    _this3.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    _this3.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n    _this3.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n    _this3.samples = options.samples !== undefined ? options.samples : 0;\n    return _this3;\n  }\n\n  _createClass(WebGLRenderTarget, [{\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (this.width !== width || this.height !== height || this.depth !== depth) {\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.texture.image.width = width;\n        this.texture.image.height = height;\n        this.texture.image.depth = depth;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.depth = source.depth;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.texture.isRenderTargetTexture = true; // ensure image object is not shared, see #20328\n\n      var image = Object.assign({}, source.texture.image);\n      this.texture.source = new Source(image);\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n      this.samples = source.samples;\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }]);\n\n  return WebGLRenderTarget;\n}(EventDispatcher);\n\nvar DataArrayTexture = /*#__PURE__*/function (_Texture) {\n  _inherits(DataArrayTexture, _Texture);\n\n  var _super3 = _createSuper(DataArrayTexture);\n\n  function DataArrayTexture() {\n    var _this4;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, DataArrayTexture);\n\n    _this4 = _super3.call(this, null);\n    _this4.isDataArrayTexture = true;\n    _this4.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    _this4.magFilter = NearestFilter;\n    _this4.minFilter = NearestFilter;\n    _this4.wrapR = ClampToEdgeWrapping;\n    _this4.generateMipmaps = false;\n    _this4.flipY = false;\n    _this4.unpackAlignment = 1;\n    return _this4;\n  }\n\n  return DataArrayTexture;\n}(Texture);\n\nvar WebGLArrayRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget) {\n  _inherits(WebGLArrayRenderTarget, _WebGLRenderTarget);\n\n  var _super4 = _createSuper(WebGLArrayRenderTarget);\n\n  function WebGLArrayRenderTarget(width, height, depth) {\n    var _this5;\n\n    _classCallCheck(this, WebGLArrayRenderTarget);\n\n    _this5 = _super4.call(this, width, height);\n    _this5.isWebGLArrayRenderTarget = true;\n    _this5.depth = depth;\n    _this5.texture = new DataArrayTexture(null, width, height, depth);\n    _this5.texture.isRenderTargetTexture = true;\n    return _this5;\n  }\n\n  return WebGLArrayRenderTarget;\n}(WebGLRenderTarget);\n\nvar Data3DTexture = /*#__PURE__*/function (_Texture2) {\n  _inherits(Data3DTexture, _Texture2);\n\n  var _super5 = _createSuper(Data3DTexture);\n\n  function Data3DTexture() {\n    var _this6;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, Data3DTexture);\n\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n    _this6 = _super5.call(this, null);\n    _this6.isData3DTexture = true;\n    _this6.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    _this6.magFilter = NearestFilter;\n    _this6.minFilter = NearestFilter;\n    _this6.wrapR = ClampToEdgeWrapping;\n    _this6.generateMipmaps = false;\n    _this6.flipY = false;\n    _this6.unpackAlignment = 1;\n    return _this6;\n  }\n\n  return Data3DTexture;\n}(Texture);\n\nvar WebGL3DRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget2) {\n  _inherits(WebGL3DRenderTarget, _WebGLRenderTarget2);\n\n  var _super6 = _createSuper(WebGL3DRenderTarget);\n\n  function WebGL3DRenderTarget(width, height, depth) {\n    var _this7;\n\n    _classCallCheck(this, WebGL3DRenderTarget);\n\n    _this7 = _super6.call(this, width, height);\n    _this7.isWebGL3DRenderTarget = true;\n    _this7.depth = depth;\n    _this7.texture = new Data3DTexture(null, width, height, depth);\n    _this7.texture.isRenderTargetTexture = true;\n    return _this7;\n  }\n\n  return WebGL3DRenderTarget;\n}(WebGLRenderTarget);\n\nvar WebGLMultipleRenderTargets = /*#__PURE__*/function (_WebGLRenderTarget3) {\n  _inherits(WebGLMultipleRenderTargets, _WebGLRenderTarget3);\n\n  var _super7 = _createSuper(WebGLMultipleRenderTargets);\n\n  function WebGLMultipleRenderTargets(width, height, count) {\n    var _this8;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, WebGLMultipleRenderTargets);\n\n    _this8 = _super7.call(this, width, height, options);\n    _this8.isWebGLMultipleRenderTargets = true;\n    var texture = _this8.texture;\n    _this8.texture = [];\n\n    for (var i = 0; i < count; i++) {\n      _this8.texture[i] = texture.clone();\n      _this8.texture[i].isRenderTargetTexture = true;\n    }\n\n    return _this8;\n  }\n\n  _createClass(WebGLMultipleRenderTargets, [{\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (this.width !== width || this.height !== height || this.depth !== depth) {\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n\n        for (var i = 0, il = this.texture.length; i < il; i++) {\n          this.texture[i].image.width = width;\n          this.texture[i].image.height = height;\n          this.texture[i].image.depth = depth;\n        }\n\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.dispose();\n      this.width = source.width;\n      this.height = source.height;\n      this.depth = source.depth;\n      this.viewport.set(0, 0, this.width, this.height);\n      this.scissor.set(0, 0, this.width, this.height);\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n      this.texture.length = 0;\n\n      for (var i = 0, il = source.texture.length; i < il; i++) {\n        this.texture[i] = source.texture[i].clone();\n        this.texture[i].isRenderTargetTexture = true;\n      }\n\n      return this;\n    }\n  }]);\n\n  return WebGLMultipleRenderTargets;\n}(WebGLRenderTarget);\n\nvar Quaternion = /*#__PURE__*/function () {\n  function Quaternion() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, Quaternion);\n\n    this.isQuaternion = true;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n  }\n\n  _createClass(Quaternion, [{\n    key: \"x\",\n    get: function get() {\n      return this._x;\n    },\n    set: function set(value) {\n      this._x = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._y;\n    },\n    set: function set(value) {\n      this._y = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this._z;\n    },\n    set: function set(value) {\n      this._z = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"w\",\n    get: function get() {\n      return this._w;\n    },\n    set: function set(value) {\n      this._w = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"setFromEuler\",\n    value: function setFromEuler(euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      switch (order) {\n        case 'XYZ':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'YXZ':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        case 'ZXY':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'ZYX':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        case 'YZX':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'XZY':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        default:\n          console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n      }\n\n      if (update !== false) this._onChangeCallback();\n      return this;\n    }\n  }, {\n    key: \"setFromAxisAngle\",\n    value: function setFromAxisAngle(axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"setFromRotationMatrix\",\n    value: function setFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33;\n\n      if (trace > 0) {\n        var s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        var _s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n        this._w = (m32 - m23) / _s;\n        this._x = 0.25 * _s;\n        this._y = (m12 + m21) / _s;\n        this._z = (m13 + m31) / _s;\n      } else if (m22 > m33) {\n        var _s2 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n        this._w = (m13 - m31) / _s2;\n        this._x = (m12 + m21) / _s2;\n        this._y = 0.25 * _s2;\n        this._z = (m23 + m32) / _s2;\n      } else {\n        var _s3 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n        this._w = (m21 - m12) / _s3;\n        this._x = (m13 + m31) / _s3;\n        this._y = (m23 + m32) / _s3;\n        this._z = 0.25 * _s3;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"setFromUnitVectors\",\n    value: function setFromUnitVectors(vFrom, vTo) {\n      // assumes direction vectors vFrom and vTo are normalized\n      var r = vFrom.dot(vTo) + 1;\n\n      if (r < Number.EPSILON) {\n        // vFrom and vTo point in opposite directions\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          this._x = -vFrom.y;\n          this._y = vFrom.x;\n          this._z = 0;\n          this._w = r;\n        } else {\n          this._x = 0;\n          this._y = -vFrom.z;\n          this._z = vFrom.y;\n          this._w = r;\n        }\n      } else {\n        // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n        this._w = r;\n      }\n\n      return this.normalize();\n    }\n  }, {\n    key: \"angleTo\",\n    value: function angleTo(q) {\n      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n    }\n  }, {\n    key: \"rotateTowards\",\n    value: function rotateTowards(q, step) {\n      var angle = this.angleTo(q);\n      if (angle === 0) return this;\n      var t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      return this.set(0, 0, 0, 1);\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      // quaternion is assumed to have unit length\n      return this.conjugate();\n    }\n  }, {\n    key: \"conjugate\",\n    value: function conjugate() {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    }\n  }, {\n    key: \"premultiply\",\n    value: function premultiply(q) {\n      return this.multiplyQuaternions(q, this);\n    }\n  }, {\n    key: \"multiplyQuaternions\",\n    value: function multiplyQuaternions(a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"slerp\",\n    value: function slerp(qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        var s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        this.normalize();\n\n        this._onChangeCallback();\n\n        return this;\n      }\n\n      var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"slerpQuaternions\",\n    value: function slerpQuaternions(qa, qb, t) {\n      return this.copy(qa).slerp(qb, t);\n    }\n  }, {\n    key: \"random\",\n    value: function random() {\n      // Derived from http://planning.cs.uiuc.edu/node198.html\n      // Note, this source uses w, x, y, z ordering,\n      // so we swap the order below.\n      var u1 = Math.random();\n      var sqrt1u1 = Math.sqrt(1 - u1);\n      var sqrtu1 = Math.sqrt(u1);\n      var u2 = 2 * Math.PI * Math.random();\n      var u3 = 2 * Math.PI * Math.random();\n      return this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index) {\n      this._x = attribute.getX(index);\n      this._y = attribute.getY(index);\n      this._z = attribute.getZ(index);\n      this._w = attribute.getW(index);\n      return this;\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    }\n  }, {\n    key: \"_onChangeCallback\",\n    value: function _onChangeCallback() {}\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._x;\n\n            case 2:\n              _context5.next = 4;\n              return this._y;\n\n            case 4:\n              _context5.next = 6;\n              return this._z;\n\n            case 6:\n              _context5.next = 8;\n              return this._w;\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, value, this);\n    })\n  }], [{\n    key: \"slerp\",\n    value: function slerp(qa, qb, qm, t) {\n      console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n      return qm.slerpQuaternions(qa, qb, t);\n    }\n  }, {\n    key: \"slerpFlat\",\n    value: function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3];\n      var x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (t === 0) {\n        dst[dstOffset + 0] = x0;\n        dst[dstOffset + 1] = y0;\n        dst[dstOffset + 2] = z0;\n        dst[dstOffset + 3] = w0;\n        return;\n      }\n\n      if (t === 1) {\n        dst[dstOffset + 0] = x1;\n        dst[dstOffset + 1] = y1;\n        dst[dstOffset + 2] = z1;\n        dst[dstOffset + 3] = w1;\n        return;\n      }\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t;\n        var cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  }, {\n    key: \"multiplyQuaternionsFlat\",\n    value: function multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n      var x0 = src0[srcOffset0];\n      var y0 = src0[srcOffset0 + 1];\n      var z0 = src0[srcOffset0 + 2];\n      var w0 = src0[srcOffset0 + 3];\n      var x1 = src1[srcOffset1];\n      var y1 = src1[srcOffset1 + 1];\n      var z1 = src1[srcOffset1 + 2];\n      var w1 = src1[srcOffset1 + 3];\n      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n      return dst;\n    }\n  }]);\n\n  return Quaternion;\n}();\n\nvar Vector3 = /*#__PURE__*/function () {\n  function Vector3() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    Vector3.prototype.isVector3 = true;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    }\n  }, {\n    key: \"setX\",\n    value: function setX(x) {\n      this.x = x;\n      return this;\n    }\n  }, {\n    key: \"setY\",\n    value: function setY(y) {\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"setZ\",\n    value: function setZ(z) {\n      this.z = z;\n      return this;\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.x, this.y, this.z);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    }\n  }, {\n    key: \"subScalar\",\n    value: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    }\n  }, {\n    key: \"applyEuler\",\n    value: function applyEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n    }\n  }, {\n    key: \"applyAxisAngle\",\n    value: function applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n    }\n  }, {\n    key: \"applyMatrix3\",\n    value: function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    }\n  }, {\n    key: \"applyNormalMatrix\",\n    value: function applyNormalMatrix(m) {\n      return this.applyMatrix3(m).normalize();\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    }\n  }, {\n    key: \"applyQuaternion\",\n    value: function applyQuaternion(q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    }\n  }, {\n    key: \"project\",\n    value: function project(camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    }\n  }, {\n    key: \"unproject\",\n    value: function unproject(camera) {\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n    }\n  }, {\n    key: \"transformDirection\",\n    value: function transformDirection(m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    }\n  }, {\n    key: \"min\",\n    value: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    }\n  }, {\n    key: \"clampScalar\",\n    value: function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      return this;\n    }\n  }, {\n    key: \"clampLength\",\n    value: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    }\n  }, {\n    key: \"roundToZero\",\n    value: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    } // TODO lengthSquared?\n\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n  }, {\n    key: \"manhattanLength\",\n    value: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    }\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpVectors\",\n    value: function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      return this;\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      return this.crossVectors(this, v);\n    }\n  }, {\n    key: \"crossVectors\",\n    value: function crossVectors(a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    }\n  }, {\n    key: \"projectOnVector\",\n    value: function projectOnVector(v) {\n      var denominator = v.lengthSq();\n      if (denominator === 0) return this.set(0, 0, 0);\n      var scalar = v.dot(this) / denominator;\n      return this.copy(v).multiplyScalar(scalar);\n    }\n  }, {\n    key: \"projectOnPlane\",\n    value: function projectOnPlane(planeNormal) {\n      _vector$c.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(_vector$c);\n    }\n  }, {\n    key: \"reflect\",\n    value: function reflect(normal) {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    }\n  }, {\n    key: \"angleTo\",\n    value: function angleTo(v) {\n      var denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n      if (denominator === 0) return Math.PI / 2;\n      var theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n      return Math.acos(clamp(theta, -1, 1));\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    }\n  }, {\n    key: \"setFromSpherical\",\n    value: function setFromSpherical(s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    }\n  }, {\n    key: \"setFromSphericalCoords\",\n    value: function setFromSphericalCoords(radius, phi, theta) {\n      var sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    }\n  }, {\n    key: \"setFromCylindrical\",\n    value: function setFromCylindrical(c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    }\n  }, {\n    key: \"setFromCylindricalCoords\",\n    value: function setFromCylindricalCoords(radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    }\n  }, {\n    key: \"setFromMatrixPosition\",\n    value: function setFromMatrixPosition(m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    }\n  }, {\n    key: \"setFromMatrixScale\",\n    value: function setFromMatrixScale(m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    }\n  }, {\n    key: \"setFromMatrixColumn\",\n    value: function setFromMatrixColumn(m, index) {\n      return this.fromArray(m.elements, index * 4);\n    }\n  }, {\n    key: \"setFromMatrix3Column\",\n    value: function setFromMatrix3Column(m, index) {\n      return this.fromArray(m.elements, index * 3);\n    }\n  }, {\n    key: \"setFromEuler\",\n    value: function setFromEuler(e) {\n      this.x = e._x;\n      this.y = e._y;\n      this.z = e._z;\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n  }, {\n    key: \"random\",\n    value: function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      return this;\n    }\n  }, {\n    key: \"randomDirection\",\n    value: function randomDirection() {\n      // Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n      var u = (Math.random() - 0.5) * 2;\n      var t = Math.random() * Math.PI * 2;\n      var f = Math.sqrt(1 - Math.pow(u, 2));\n      this.x = f * Math.cos(t);\n      this.y = f * Math.sin(t);\n      this.z = u;\n      return this;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.x;\n\n            case 2:\n              _context6.next = 4;\n              return this.y;\n\n            case 4:\n              _context6.next = 6;\n              return this.z;\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return Vector3;\n}();\n\nvar _vector$c = /*@__PURE__*/new Vector3();\n\nvar _quaternion$4 = /*@__PURE__*/new Quaternion();\n\nvar Box3 = /*#__PURE__*/function () {\n  function Box3() {\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(+Infinity, +Infinity, +Infinity);\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(-Infinity, -Infinity, -Infinity);\n\n    _classCallCheck(this, Box3);\n\n    this.isBox3 = true;\n    this.min = min;\n    this.max = max;\n  }\n\n  _createClass(Box3, [{\n    key: \"set\",\n    value: function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    }\n  }, {\n    key: \"setFromArray\",\n    value: function setFromArray(array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    }\n  }, {\n    key: \"setFromBufferAttribute\",\n    value: function setFromBufferAttribute(attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    }\n  }, {\n    key: \"setFromPoints\",\n    value: function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setFromCenterAndSize\",\n    value: function setFromCenterAndSize(center, size) {\n      var halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    }\n  }, {\n    key: \"setFromObject\",\n    value: function setFromObject(object) {\n      var precise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.makeEmpty();\n      return this.expandByObject(object, precise);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    }\n  }, {\n    key: \"makeEmpty\",\n    value: function makeEmpty() {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    }\n  }, {\n    key: \"expandByPoint\",\n    value: function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    }\n  }, {\n    key: \"expandByVector\",\n    value: function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    }\n  }, {\n    key: \"expandByScalar\",\n    value: function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    }\n  }, {\n    key: \"expandByObject\",\n    value: function expandByObject(object) {\n      var precise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      object.updateWorldMatrix(false, false);\n      var geometry = object.geometry;\n\n      if (geometry !== undefined) {\n        if (precise && geometry.attributes != undefined && geometry.attributes.position !== undefined) {\n          var position = geometry.attributes.position;\n\n          for (var i = 0, l = position.count; i < l; i++) {\n            _vector$b.fromBufferAttribute(position, i).applyMatrix4(object.matrixWorld);\n\n            this.expandByPoint(_vector$b);\n          }\n        } else {\n          if (geometry.boundingBox === null) {\n            geometry.computeBoundingBox();\n          }\n\n          _box$3.copy(geometry.boundingBox);\n\n          _box$3.applyMatrix4(object.matrixWorld);\n\n          this.union(_box$3);\n        }\n      }\n\n      var children = object.children;\n\n      for (var _i2 = 0, _l = children.length; _i2 < _l; _i2++) {\n        this.expandByObject(children[_i2], precise);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    }\n  }, {\n    key: \"containsBox\",\n    value: function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    }\n  }, {\n    key: \"getParameter\",\n    value: function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    }\n  }, {\n    key: \"intersectsSphere\",\n    value: function intersectsSphere(sphere) {\n      // Find the point on the AABB closest to the sphere center.\n      this.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    }\n  }, {\n    key: \"intersectsPlane\",\n    value: function intersectsPlane(plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= -plane.constant && max >= -plane.constant;\n    }\n  }, {\n    key: \"intersectsTriangle\",\n    value: function intersectsTriangle(triangle) {\n      if (this.isEmpty()) {\n        return false;\n      } // compute box center and extents\n\n\n      this.getCenter(_center);\n\n      _extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n      _v0$2.subVectors(triangle.a, _center);\n\n      _v1$7.subVectors(triangle.b, _center);\n\n      _v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n      _f0.subVectors(_v1$7, _v0$2);\n\n      _f1.subVectors(_v2$3, _v1$7);\n\n      _f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n      // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n      // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n      var axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n        return false;\n      } // test 3 face normals from the aabb\n\n\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n        return false;\n      } // finally testing the face normal of the triangle\n      // use already existing triangle edge vectors here\n\n\n      _triangleNormal.crossVectors(_f0, _f1);\n\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n      return satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n    }\n  }, {\n    key: \"clampPoint\",\n    value: function clampPoint(point, target) {\n      return target.copy(point).clamp(this.min, this.max);\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      var clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    }\n  }, {\n    key: \"getBoundingSphere\",\n    value: function getBoundingSphere(target) {\n      this.getCenter(target.center);\n      target.radius = this.getSize(_vector$b).length() * 0.5;\n      return target;\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    }\n  }, {\n    key: \"union\",\n    value: function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n      this.setFromPoints(_points);\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  }]);\n\n  return Box3;\n}();\n\nvar _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\nvar _vector$b = /*@__PURE__*/new Vector3();\n\nvar _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\nvar _v0$2 = /*@__PURE__*/new Vector3();\n\nvar _v1$7 = /*@__PURE__*/new Vector3();\n\nvar _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\nvar _f0 = /*@__PURE__*/new Vector3();\n\nvar _f1 = /*@__PURE__*/new Vector3();\n\nvar _f2 = /*@__PURE__*/new Vector3();\n\nvar _center = /*@__PURE__*/new Vector3();\n\nvar _extents = /*@__PURE__*/new Vector3();\n\nvar _triangleNormal = /*@__PURE__*/new Vector3();\n\nvar _testAxis = /*@__PURE__*/new Vector3();\n\nfunction satForAxes(axes, v0, v1, v2, extents) {\n  for (var i = 0, j = axes.length - 3; i <= j; i += 3) {\n    _testAxis.fromArray(axes, i); // project the aabb onto the separating axis\n\n\n    var r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the separating axis\n\n    var p0 = v0.dot(_testAxis);\n    var p1 = v1.dot(_testAxis);\n    var p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n    if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n      // points of the projected triangle are outside the projected half-length of the aabb\n      // the axis is separating and we can exit\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _box$2 = /*@__PURE__*/new Box3();\n\nvar _v1$6 = /*@__PURE__*/new Vector3();\n\nvar _toFarthestPoint = /*@__PURE__*/new Vector3();\n\nvar _toPoint = /*@__PURE__*/new Vector3();\n\nvar Sphere = /*#__PURE__*/function () {\n  function Sphere() {\n    var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n    _classCallCheck(this, Sphere);\n\n    this.center = center;\n    this.radius = radius;\n  }\n\n  _createClass(Sphere, [{\n    key: \"set\",\n    value: function set(center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    }\n  }, {\n    key: \"setFromPoints\",\n    value: function setFromPoints(points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        _box$2.setFromPoints(points).getCenter(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.radius < 0;\n    }\n  }, {\n    key: \"makeEmpty\",\n    value: function makeEmpty() {\n      this.center.set(0, 0, 0);\n      this.radius = -1;\n      return this;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      return point.distanceTo(this.center) - this.radius;\n    }\n  }, {\n    key: \"intersectsSphere\",\n    value: function intersectsSphere(sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return box.intersectsSphere(this);\n    }\n  }, {\n    key: \"intersectsPlane\",\n    value: function intersectsPlane(plane) {\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n    }\n  }, {\n    key: \"clampPoint\",\n    value: function clampPoint(point, target) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n      target.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        target.sub(this.center).normalize();\n        target.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return target;\n    }\n  }, {\n    key: \"getBoundingBox\",\n    value: function getBoundingBox(target) {\n      if (this.isEmpty()) {\n        // Empty sphere produces empty bounding box\n        target.makeEmpty();\n        return target;\n      }\n\n      target.set(this.center, this.center);\n      target.expandByScalar(this.radius);\n      return target;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(offset) {\n      this.center.add(offset);\n      return this;\n    }\n  }, {\n    key: \"expandByPoint\",\n    value: function expandByPoint(point) {\n      // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n      _toPoint.subVectors(point, this.center);\n\n      var lengthSq = _toPoint.lengthSq();\n\n      if (lengthSq > this.radius * this.radius) {\n        var length = Math.sqrt(lengthSq);\n        var missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n        // and the other half to position. This gives a tighter enclosure, instead of if\n        // the whole missing distance were just added to radius.\n\n        this.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n        this.radius += missingRadiusHalf;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"union\",\n    value: function union(sphere) {\n      // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n      // To enclose another sphere into this sphere, we only need to enclose two points:\n      // 1) Enclose the farthest point on the other sphere into this sphere.\n      // 2) Enclose the opposite point of the farthest point into this sphere.\n      if (this.center.equals(sphere.center) === true) {\n        _toFarthestPoint.set(0, 0, 1).multiplyScalar(sphere.radius);\n      } else {\n        _toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n      }\n\n      this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n      this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Sphere;\n}();\n\nvar _vector$a = /*@__PURE__*/new Vector3();\n\nvar _segCenter = /*@__PURE__*/new Vector3();\n\nvar _segDir = /*@__PURE__*/new Vector3();\n\nvar _diff = /*@__PURE__*/new Vector3();\n\nvar _edge1 = /*@__PURE__*/new Vector3();\n\nvar _edge2 = /*@__PURE__*/new Vector3();\n\nvar _normal$1 = /*@__PURE__*/new Vector3();\n\nvar Ray = /*#__PURE__*/function () {\n  function Ray() {\n    var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, -1);\n\n    _classCallCheck(this, Ray);\n\n    this.origin = origin;\n    this.direction = direction;\n  }\n\n  _createClass(Ray, [{\n    key: \"set\",\n    value: function set(origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    }\n  }, {\n    key: \"at\",\n    value: function at(t, target) {\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    }\n  }, {\n    key: \"recast\",\n    value: function recast(t) {\n      this.origin.copy(this.at(t, _vector$a));\n      return this;\n    }\n  }, {\n    key: \"closestPointToPoint\",\n    value: function closestPointToPoint(point, target) {\n      target.subVectors(point, this.origin);\n      var directionDistance = target.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return target.copy(this.origin);\n      }\n\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    }\n  }, {\n    key: \"distanceSqToPoint\",\n    value: function distanceSqToPoint(point) {\n      var directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      _vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n      return _vector$a.distanceToSquared(point);\n    }\n  }, {\n    key: \"distanceSqToSegment\",\n    value: function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n      _segDir.copy(v1).sub(v0).normalize();\n\n      _diff.copy(this.origin).sub(_segCenter);\n\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(_segDir);\n\n      var b0 = _diff.dot(this.direction);\n\n      var b1 = -_diff.dot(_segDir);\n\n      var c = _diff.lengthSq();\n\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n      }\n\n      return sqrDist;\n    }\n  }, {\n    key: \"intersectSphere\",\n    value: function intersectSphere(sphere, target) {\n      _vector$a.subVectors(sphere.center, this.origin);\n\n      var tca = _vector$a.dot(this.direction);\n\n      var d2 = _vector$a.dot(_vector$a) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, target);\n    }\n  }, {\n    key: \"intersectsSphere\",\n    value: function intersectsSphere(sphere) {\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n    }\n  }, {\n    key: \"distanceToPlane\",\n    value: function distanceToPlane(plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(plane, target) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, target);\n    }\n  }, {\n    key: \"intersectsPlane\",\n    value: function intersectsPlane(plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    }\n  }, {\n    key: \"intersectBox\",\n    value: function intersectBox(box, target) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, target);\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return this.intersectBox(box, _vector$a) !== null;\n    }\n  }, {\n    key: \"intersectTriangle\",\n    value: function intersectTriangle(a, b, c, backfaceCulling, target) {\n      // Compute the offset origin, edges, and normal.\n      // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      _edge1.subVectors(b, a);\n\n      _edge2.subVectors(c, a);\n\n      _normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n      var DdN = this.direction.dot(_normal$1);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      _diff.subVectors(this.origin, a);\n\n      var DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, target);\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Ray;\n}();\n\nvar Matrix4 = /*#__PURE__*/function () {\n  function Matrix4() {\n    _classCallCheck(this, Matrix4);\n\n    Matrix4.prototype.isMatrix4 = true;\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  _createClass(Matrix4, [{\n    key: \"set\",\n    value: function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Matrix4().fromArray(this.elements);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    }\n  }, {\n    key: \"copyPosition\",\n    value: function copyPosition(m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    }\n  }, {\n    key: \"setFromMatrix3\",\n    value: function setFromMatrix3(m) {\n      var me = m.elements;\n      this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"extractBasis\",\n    value: function extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    }\n  }, {\n    key: \"makeBasis\",\n    value: function makeBasis(xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"extractRotation\",\n    value: function extractRotation(m) {\n      // this method does not support reflection matrices\n      var te = this.elements;\n      var me = m.elements;\n\n      var scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n      var scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n      var scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[3] = 0;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[7] = 0;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      te[11] = 0;\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    }\n  }, {\n    key: \"makeRotationFromEuler\",\n    value: function makeRotationFromEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var _ce = c * e,\n            _cf = c * f,\n            _de = d * e,\n            _df = d * f;\n\n        te[0] = _ce - _df * b;\n        te[4] = -a * f;\n        te[8] = _de + _cf * b;\n        te[1] = _cf + _de * b;\n        te[5] = a * e;\n        te[9] = _df - _ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var _ae = a * e,\n            _af = a * f,\n            _be = b * e,\n            _bf = b * f;\n\n        te[0] = c * e;\n        te[4] = _be * d - _af;\n        te[8] = _ae * d + _bf;\n        te[1] = c * f;\n        te[5] = _bf * d + _ae;\n        te[9] = _af * d - _be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var _ac = a * c,\n            _ad = a * d,\n            _bc = b * c,\n            _bd = b * d;\n\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = _ac * f + _bd;\n        te[5] = a * e;\n        te[9] = _ad * f - _bc;\n        te[2] = _bc * f - _ad;\n        te[6] = b * e;\n        te[10] = _bd * f + _ac;\n      } // bottom row\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // last column\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    }\n  }, {\n    key: \"makeRotationFromQuaternion\",\n    value: function makeRotationFromQuaternion(q) {\n      return this.compose(_zero, q, _one);\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(eye, target, up) {\n      var te = this.elements;\n\n      _z.subVectors(eye, target);\n\n      if (_z.lengthSq() === 0) {\n        // eye and target are in the same position\n        _z.z = 1;\n      }\n\n      _z.normalize();\n\n      _x.crossVectors(up, _z);\n\n      if (_x.lengthSq() === 0) {\n        // up and z are parallel\n        if (Math.abs(up.z) === 1) {\n          _z.x += 0.0001;\n        } else {\n          _z.z += 0.0001;\n        }\n\n        _z.normalize();\n\n        _x.crossVectors(up, _z);\n      }\n\n      _x.normalize();\n\n      _y.crossVectors(_z, _x);\n\n      te[0] = _x.x;\n      te[4] = _y.x;\n      te[8] = _z.x;\n      te[1] = _x.y;\n      te[5] = _y.y;\n      te[9] = _z.y;\n      te[2] = _x.z;\n      te[6] = _y.z;\n      te[10] = _z.z;\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    }\n  }, {\n    key: \"premultiply\",\n    value: function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    }\n  }, {\n    key: \"multiplyMatrices\",\n    value: function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(x, y, z) {\n      var te = this.elements;\n\n      if (x.isVector3) {\n        te[12] = x.x;\n        te[13] = x.y;\n        te[14] = x.z;\n      } else {\n        te[12] = x;\n        te[13] = y;\n        te[14] = z;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          n11 = te[0],\n          n21 = te[1],\n          n31 = te[2],\n          n41 = te[3],\n          n12 = te[4],\n          n22 = te[5],\n          n32 = te[6],\n          n42 = te[7],\n          n13 = te[8],\n          n23 = te[9],\n          n33 = te[10],\n          n43 = te[11],\n          n14 = te[12],\n          n24 = te[13],\n          n34 = te[14],\n          n44 = te[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    }\n  }, {\n    key: \"getMaxScaleOnAxis\",\n    value: function getMaxScaleOnAxis() {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    }\n  }, {\n    key: \"makeTranslation\",\n    value: function makeTranslation(x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeRotationX\",\n    value: function makeRotationX(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeRotationY\",\n    value: function makeRotationY(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeRotationZ\",\n    value: function makeRotationZ(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeRotationAxis\",\n    value: function makeRotationAxis(axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeScale\",\n    value: function makeScale(x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"makeShear\",\n    value: function makeShear(xy, xz, yx, yz, zx, zy) {\n      this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"compose\",\n    value: function compose(position, quaternion, scale) {\n      var te = this.elements;\n      var x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      var sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n      te[0] = (1 - (yy + zz)) * sx;\n      te[1] = (xy + wz) * sx;\n      te[2] = (xz - wy) * sx;\n      te[3] = 0;\n      te[4] = (xy - wz) * sy;\n      te[5] = (1 - (xx + zz)) * sy;\n      te[6] = (yz + wx) * sy;\n      te[7] = 0;\n      te[8] = (xz + wy) * sz;\n      te[9] = (yz - wx) * sz;\n      te[10] = (1 - (xx + yy)) * sz;\n      te[11] = 0;\n      te[12] = position.x;\n      te[13] = position.y;\n      te[14] = position.z;\n      te[15] = 1;\n      return this;\n    }\n  }, {\n    key: \"decompose\",\n    value: function decompose(position, quaternion, scale) {\n      var te = this.elements;\n\n      var sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n      var sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n      var sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n      var det = this.determinant();\n      if (det < 0) sx = -sx;\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      _m1$2.copy(this);\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      _m1$2.elements[0] *= invSX;\n      _m1$2.elements[1] *= invSX;\n      _m1$2.elements[2] *= invSX;\n      _m1$2.elements[4] *= invSY;\n      _m1$2.elements[5] *= invSY;\n      _m1$2.elements[6] *= invSY;\n      _m1$2.elements[8] *= invSZ;\n      _m1$2.elements[9] *= invSZ;\n      _m1$2.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(_m1$2);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    }\n  }, {\n    key: \"makePerspective\",\n    value: function makePerspective(left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    }\n  }, {\n    key: \"makeOrthographic\",\n    value: function makeOrthographic(left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  }]);\n\n  return Matrix4;\n}();\n\nvar _v1$5 = /*@__PURE__*/new Vector3();\n\nvar _m1$2 = /*@__PURE__*/new Matrix4();\n\nvar _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\nvar _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\nvar _x = /*@__PURE__*/new Vector3();\n\nvar _y = /*@__PURE__*/new Vector3();\n\nvar _z = /*@__PURE__*/new Vector3();\n\nvar _matrix$1 = /*@__PURE__*/new Matrix4();\n\nvar _quaternion$3 = /*@__PURE__*/new Quaternion();\n\nvar Euler = /*#__PURE__*/function () {\n  function Euler() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Euler.DefaultOrder;\n\n    _classCallCheck(this, Euler);\n\n    this.isEuler = true;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n  }\n\n  _createClass(Euler, [{\n    key: \"x\",\n    get: function get() {\n      return this._x;\n    },\n    set: function set(value) {\n      this._x = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._y;\n    },\n    set: function set(value) {\n      this._y = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this._z;\n    },\n    set: function set(value) {\n      this._z = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"order\",\n    get: function get() {\n      return this._order;\n    },\n    set: function set(value) {\n      this._order = value;\n\n      this._onChangeCallback();\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y, z) {\n      var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this._order;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"setFromRotationMatrix\",\n    value: function setFromRotationMatrix(m) {\n      var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n      var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      switch (order) {\n        case 'XYZ':\n          this._y = Math.asin(clamp(m13, -1, 1));\n\n          if (Math.abs(m13) < 0.9999999) {\n            this._x = Math.atan2(-m23, m33);\n            this._z = Math.atan2(-m12, m11);\n          } else {\n            this._x = Math.atan2(m32, m22);\n            this._z = 0;\n          }\n\n          break;\n\n        case 'YXZ':\n          this._x = Math.asin(-clamp(m23, -1, 1));\n\n          if (Math.abs(m23) < 0.9999999) {\n            this._y = Math.atan2(m13, m33);\n            this._z = Math.atan2(m21, m22);\n          } else {\n            this._y = Math.atan2(-m31, m11);\n            this._z = 0;\n          }\n\n          break;\n\n        case 'ZXY':\n          this._x = Math.asin(clamp(m32, -1, 1));\n\n          if (Math.abs(m32) < 0.9999999) {\n            this._y = Math.atan2(-m31, m33);\n            this._z = Math.atan2(-m12, m22);\n          } else {\n            this._y = 0;\n            this._z = Math.atan2(m21, m11);\n          }\n\n          break;\n\n        case 'ZYX':\n          this._y = Math.asin(-clamp(m31, -1, 1));\n\n          if (Math.abs(m31) < 0.9999999) {\n            this._x = Math.atan2(m32, m33);\n            this._z = Math.atan2(m21, m11);\n          } else {\n            this._x = 0;\n            this._z = Math.atan2(-m12, m22);\n          }\n\n          break;\n\n        case 'YZX':\n          this._z = Math.asin(clamp(m21, -1, 1));\n\n          if (Math.abs(m21) < 0.9999999) {\n            this._x = Math.atan2(-m23, m22);\n            this._y = Math.atan2(-m31, m11);\n          } else {\n            this._x = 0;\n            this._y = Math.atan2(m13, m33);\n          }\n\n          break;\n\n        case 'XZY':\n          this._z = Math.asin(-clamp(m12, -1, 1));\n\n          if (Math.abs(m12) < 0.9999999) {\n            this._x = Math.atan2(m32, m22);\n            this._y = Math.atan2(m13, m11);\n          } else {\n            this._x = Math.atan2(-m23, m33);\n            this._y = 0;\n          }\n\n          break;\n\n        default:\n          console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n      }\n\n      this._order = order;\n      if (update === true) this._onChangeCallback();\n      return this;\n    }\n  }, {\n    key: \"setFromQuaternion\",\n    value: function setFromQuaternion(q, order, update) {\n      _matrix$1.makeRotationFromQuaternion(q);\n\n      return this.setFromRotationMatrix(_matrix$1, order, update);\n    }\n  }, {\n    key: \"setFromVector3\",\n    value: function setFromVector3(v) {\n      var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n      return this.set(v.x, v.y, v.z, order);\n    }\n  }, {\n    key: \"reorder\",\n    value: function reorder(newOrder) {\n      // WARNING: this discards revolution information -bhouston\n      _quaternion$3.setFromEuler(this);\n\n      return this.setFromQuaternion(_quaternion$3, newOrder);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n\n      this._onChangeCallback();\n\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    }\n  }, {\n    key: \"_onChangeCallback\",\n    value: function _onChangeCallback() {}\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this._x;\n\n            case 2:\n              _context7.next = 4;\n              return this._y;\n\n            case 4:\n              _context7.next = 6;\n              return this._z;\n\n            case 6:\n              _context7.next = 8;\n              return this._order;\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, value, this);\n    }) // @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n  }, {\n    key: \"toVector3\",\n    value: function toVector3() {\n      console.error('THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead');\n    }\n  }]);\n\n  return Euler;\n}();\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\nvar Layers = /*#__PURE__*/function () {\n  function Layers() {\n    _classCallCheck(this, Layers);\n\n    this.mask = 1 | 0;\n  }\n\n  _createClass(Layers, [{\n    key: \"set\",\n    value: function set(channel) {\n      this.mask = (1 << channel | 0) >>> 0;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(channel) {\n      this.mask |= 1 << channel | 0;\n    }\n  }, {\n    key: \"enableAll\",\n    value: function enableAll() {\n      this.mask = 0xffffffff | 0;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(channel) {\n      this.mask ^= 1 << channel | 0;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable(channel) {\n      this.mask &= ~(1 << channel | 0);\n    }\n  }, {\n    key: \"disableAll\",\n    value: function disableAll() {\n      this.mask = 0;\n    }\n  }, {\n    key: \"test\",\n    value: function test(layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(channel) {\n      return (this.mask & (1 << channel | 0)) !== 0;\n    }\n  }]);\n\n  return Layers;\n}();\n\nvar _object3DId = 0;\n\nvar _v1$4 = /*@__PURE__*/new Vector3();\n\nvar _q1 = /*@__PURE__*/new Quaternion();\n\nvar _m1$1 = /*@__PURE__*/new Matrix4();\n\nvar _target = /*@__PURE__*/new Vector3();\n\nvar _position$3 = /*@__PURE__*/new Vector3();\n\nvar _scale$2 = /*@__PURE__*/new Vector3();\n\nvar _quaternion$2 = /*@__PURE__*/new Quaternion();\n\nvar _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\nvar _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\nvar _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\nvar _addedEvent = {\n  type: 'added'\n};\nvar _removedEvent = {\n  type: 'removed'\n};\n\nvar Object3D = /*#__PURE__*/function (_EventDispatcher3) {\n  _inherits(Object3D, _EventDispatcher3);\n\n  var _super8 = _createSuper(Object3D);\n\n  function Object3D() {\n    var _this9;\n\n    _classCallCheck(this, Object3D);\n\n    _this9 = _super8.call(this);\n    _this9.isObject3D = true;\n    Object.defineProperty(_assertThisInitialized(_this9), 'id', {\n      value: _object3DId++\n    });\n    _this9.uuid = generateUUID();\n    _this9.name = '';\n    _this9.type = 'Object3D';\n    _this9.parent = null;\n    _this9.children = [];\n    _this9.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation._onChange(onRotationChange);\n\n    quaternion._onChange(onQuaternionChange);\n\n    Object.defineProperties(_assertThisInitialized(_this9), {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    _this9.matrix = new Matrix4();\n    _this9.matrixWorld = new Matrix4();\n    _this9.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    _this9.matrixWorldNeedsUpdate = false;\n    _this9.layers = new Layers();\n    _this9.visible = true;\n    _this9.castShadow = false;\n    _this9.receiveShadow = false;\n    _this9.frustumCulled = true;\n    _this9.renderOrder = 0;\n    _this9.animations = [];\n    _this9.userData = {};\n    return _this9;\n  }\n\n  _createClass(Object3D, [{\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {}\n  }, {\n    key: \"onAfterRender\",\n    value: function onAfterRender() {}\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n      this.matrix.premultiply(matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    }\n  }, {\n    key: \"applyQuaternion\",\n    value: function applyQuaternion(q) {\n      this.quaternion.premultiply(q);\n      return this;\n    }\n  }, {\n    key: \"setRotationFromAxisAngle\",\n    value: function setRotationFromAxisAngle(axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    }\n  }, {\n    key: \"setRotationFromEuler\",\n    value: function setRotationFromEuler(euler) {\n      this.quaternion.setFromEuler(euler, true);\n    }\n  }, {\n    key: \"setRotationFromMatrix\",\n    value: function setRotationFromMatrix(m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    }\n  }, {\n    key: \"setRotationFromQuaternion\",\n    value: function setRotationFromQuaternion(q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    }\n  }, {\n    key: \"rotateOnAxis\",\n    value: function rotateOnAxis(axis, angle) {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.multiply(_q1);\n      return this;\n    }\n  }, {\n    key: \"rotateOnWorldAxis\",\n    value: function rotateOnWorldAxis(axis, angle) {\n      // rotate object on axis in world space\n      // axis is assumed to be normalized\n      // method assumes no rotated parent\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.premultiply(_q1);\n      return this;\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(angle) {\n      return this.rotateOnAxis(_xAxis, angle);\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(angle) {\n      return this.rotateOnAxis(_yAxis, angle);\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(angle) {\n      return this.rotateOnAxis(_zAxis, angle);\n    }\n  }, {\n    key: \"translateOnAxis\",\n    value: function translateOnAxis(axis, distance) {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      _v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n      this.position.add(_v1$4.multiplyScalar(distance));\n      return this;\n    }\n  }, {\n    key: \"translateX\",\n    value: function translateX(distance) {\n      return this.translateOnAxis(_xAxis, distance);\n    }\n  }, {\n    key: \"translateY\",\n    value: function translateY(distance) {\n      return this.translateOnAxis(_yAxis, distance);\n    }\n  }, {\n    key: \"translateZ\",\n    value: function translateZ(distance) {\n      return this.translateOnAxis(_zAxis, distance);\n    }\n  }, {\n    key: \"localToWorld\",\n    value: function localToWorld(vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    }\n  }, {\n    key: \"worldToLocal\",\n    value: function worldToLocal(vector) {\n      return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(x, y, z) {\n      // This method does not support objects having non-uniformly-scaled parent(s)\n      if (x.isVector3) {\n        _target.copy(x);\n      } else {\n        _target.set(x, y, z);\n      }\n\n      var parent = this.parent;\n      this.updateWorldMatrix(true, false);\n\n      _position$3.setFromMatrixPosition(this.matrixWorld);\n\n      if (this.isCamera || this.isLight) {\n        _m1$1.lookAt(_position$3, _target, this.up);\n      } else {\n        _m1$1.lookAt(_target, _position$3, this.up);\n      }\n\n      this.quaternion.setFromRotationMatrix(_m1$1);\n\n      if (parent) {\n        _m1$1.extractRotation(parent.matrixWorld);\n\n        _q1.setFromRotationMatrix(_m1$1);\n\n        this.quaternion.premultiply(_q1.invert());\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        this.children.push(object);\n        object.dispatchEvent(_addedEvent);\n      } else {\n        console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        this.children.splice(index, 1);\n        object.dispatchEvent(_removedEvent);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeFromParent\",\n    value: function removeFromParent() {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        parent.remove(this);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      for (var i = 0; i < this.children.length; i++) {\n        var object = this.children[i];\n        object.parent = null;\n        object.dispatchEvent(_removedEvent);\n      }\n\n      this.children.length = 0;\n      return this;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(object) {\n      // adds object as a child of this, while maintaining the object's world transform\n      // Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n      this.updateWorldMatrix(true, false);\n\n      _m1$1.copy(this.matrixWorld).invert();\n\n      if (object.parent !== null) {\n        object.parent.updateWorldMatrix(true, false);\n\n        _m1$1.multiply(object.parent.matrixWorld);\n      }\n\n      object.applyMatrix4(_m1$1);\n      this.add(object);\n      object.updateWorldMatrix(false, true);\n      return this;\n    }\n  }, {\n    key: \"getObjectById\",\n    value: function getObjectById(id) {\n      return this.getObjectByProperty('id', id);\n    }\n  }, {\n    key: \"getObjectByName\",\n    value: function getObjectByName(name) {\n      return this.getObjectByProperty('name', name);\n    }\n  }, {\n    key: \"getObjectByProperty\",\n    value: function getObjectByProperty(name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getWorldPosition\",\n    value: function getWorldPosition(target) {\n      this.updateWorldMatrix(true, false);\n      return target.setFromMatrixPosition(this.matrixWorld);\n    }\n  }, {\n    key: \"getWorldQuaternion\",\n    value: function getWorldQuaternion(target) {\n      this.updateWorldMatrix(true, false);\n      this.matrixWorld.decompose(_position$3, target, _scale$2);\n      return target;\n    }\n  }, {\n    key: \"getWorldScale\",\n    value: function getWorldScale(target) {\n      this.updateWorldMatrix(true, false);\n      this.matrixWorld.decompose(_position$3, _quaternion$2, target);\n      return target;\n    }\n  }, {\n    key: \"getWorldDirection\",\n    value: function getWorldDirection(target) {\n      this.updateWorldMatrix(true, false);\n      var e = this.matrixWorld.elements;\n      return target.set(e[8], e[9], e[10]).normalize();\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast() {}\n  }, {\n    key: \"traverse\",\n    value: function traverse(callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    }\n  }, {\n    key: \"traverseVisible\",\n    value: function traverseVisible(callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    }\n  }, {\n    key: \"traverseAncestors\",\n    value: function traverseAncestors(callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    }\n  }, {\n    key: \"updateMatrix\",\n    value: function updateMatrix() {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    }\n  }, {\n    key: \"updateWorldMatrix\",\n    value: function updateWorldMatrix(updateParents, updateChildren) {\n      var parent = this.parent;\n\n      if (updateParents === true && parent !== null) {\n        parent.updateWorldMatrix(true, false);\n      }\n\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      } // update children\n\n\n      if (updateChildren === true) {\n        var children = this.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateWorldMatrix(false, true);\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {},\n          skeletons: {},\n          animations: {},\n          nodes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.isInstancedMesh) {\n        object.type = 'InstancedMesh';\n        object.count = this.count;\n        object.instanceMatrix = this.instanceMatrix.toJSON();\n        if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n      } //\n\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.isScene) {\n        if (this.background) {\n          if (this.background.isColor) {\n            object.background = this.background.toJSON();\n          } else if (this.background.isTexture) {\n            object.background = this.background.toJSON(meta).uuid;\n          }\n        }\n\n        if (this.environment && this.environment.isTexture) {\n          object.environment = this.environment.toJSON(meta).uuid;\n        }\n      } else if (this.isMesh || this.isLine || this.isPoints) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n        var parameters = this.geometry.parameters;\n\n        if (parameters !== undefined && parameters.shapes !== undefined) {\n          var shapes = parameters.shapes;\n\n          if (Array.isArray(shapes)) {\n            for (var i = 0, l = shapes.length; i < l; i++) {\n              var shape = shapes[i];\n              serialize(meta.shapes, shape);\n            }\n          } else {\n            serialize(meta.shapes, shapes);\n          }\n        }\n      }\n\n      if (this.isSkinnedMesh) {\n        object.bindMode = this.bindMode;\n        object.bindMatrix = this.bindMatrix.toArray();\n\n        if (this.skeleton !== undefined) {\n          serialize(meta.skeletons, this.skeleton);\n          object.skeleton = this.skeleton.uuid;\n        }\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var _i3 = 0, _l2 = this.material.length; _i3 < _l2; _i3++) {\n            uuids.push(serialize(meta.materials, this.material[_i3]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var _i4 = 0; _i4 < this.children.length; _i4++) {\n          object.children.push(this.children[_i4].toJSON(meta).object);\n        }\n      } //\n\n\n      if (this.animations.length > 0) {\n        object.animations = [];\n\n        for (var _i5 = 0; _i5 < this.animations.length; _i5++) {\n          var animation = this.animations[_i5];\n          object.animations.push(serialize(meta.animations, animation));\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n\n        var _shapes = extractFromCache(meta.shapes);\n\n        var skeletons = extractFromCache(meta.skeletons);\n        var animations = extractFromCache(meta.animations);\n        var nodes = extractFromCache(meta.nodes);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n        if (_shapes.length > 0) output.shapes = _shapes;\n        if (skeletons.length > 0) output.skeletons = skeletons;\n        if (animations.length > 0) output.animations = animations;\n        if (nodes.length > 0) output.nodes = nodes;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(recursive) {\n      return new this.constructor().copy(this, recursive);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.rotation.order = source.rotation.order;\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return Object3D;\n}(EventDispatcher);\n\nObject3D.DefaultUp = /*@__PURE__*/new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\n\nvar _v0$1 = /*@__PURE__*/new Vector3();\n\nvar _v1$3 = /*@__PURE__*/new Vector3();\n\nvar _v2$2 = /*@__PURE__*/new Vector3();\n\nvar _v3$1 = /*@__PURE__*/new Vector3();\n\nvar _vab = /*@__PURE__*/new Vector3();\n\nvar _vac = /*@__PURE__*/new Vector3();\n\nvar _vbc = /*@__PURE__*/new Vector3();\n\nvar _vap = /*@__PURE__*/new Vector3();\n\nvar _vbp = /*@__PURE__*/new Vector3();\n\nvar _vcp = /*@__PURE__*/new Vector3();\n\nvar Triangle = /*#__PURE__*/function () {\n  function Triangle() {\n    var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n\n    _classCallCheck(this, Triangle);\n\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n\n  _createClass(Triangle, [{\n    key: \"set\",\n    value: function set(a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    }\n  }, {\n    key: \"setFromPointsAndIndices\",\n    value: function setFromPointsAndIndices(points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    }\n  }, {\n    key: \"setFromAttributeAndIndices\",\n    value: function setFromAttributeAndIndices(attribute, i0, i1, i2) {\n      this.a.fromBufferAttribute(attribute, i0);\n      this.b.fromBufferAttribute(attribute, i1);\n      this.c.fromBufferAttribute(attribute, i2);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    }\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      _v0$1.subVectors(this.c, this.b);\n\n      _v1$3.subVectors(this.a, this.b);\n\n      return _v0$1.cross(_v1$3).length() * 0.5;\n    }\n  }, {\n    key: \"getMidpoint\",\n    value: function getMidpoint(target) {\n      return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    }\n  }, {\n    key: \"getNormal\",\n    value: function getNormal(target) {\n      return Triangle.getNormal(this.a, this.b, this.c, target);\n    }\n  }, {\n    key: \"getPlane\",\n    value: function getPlane(target) {\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\n    }\n  }, {\n    key: \"getBarycoord\",\n    value: function getBarycoord(point, target) {\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n    }\n  }, {\n    key: \"getUV\",\n    value: function getUV(point, uv1, uv2, uv3, target) {\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    }\n  }, {\n    key: \"isFrontFacing\",\n    value: function isFrontFacing(direction) {\n      return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return box.intersectsTriangle(this);\n    }\n  }, {\n    key: \"closestPointToPoint\",\n    value: function closestPointToPoint(p, target) {\n      var a = this.a,\n          b = this.b,\n          c = this.c;\n      var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n      // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n      // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n      // basically, we're distinguishing which of the voronoi regions of the triangle\n      // the point lies in with the minimum amount of redundant computation.\n\n      _vab.subVectors(b, a);\n\n      _vac.subVectors(c, a);\n\n      _vap.subVectors(p, a);\n\n      var d1 = _vab.dot(_vap);\n\n      var d2 = _vac.dot(_vap);\n\n      if (d1 <= 0 && d2 <= 0) {\n        // vertex region of A; barycentric coords (1, 0, 0)\n        return target.copy(a);\n      }\n\n      _vbp.subVectors(p, b);\n\n      var d3 = _vab.dot(_vbp);\n\n      var d4 = _vac.dot(_vbp);\n\n      if (d3 >= 0 && d4 <= d3) {\n        // vertex region of B; barycentric coords (0, 1, 0)\n        return target.copy(b);\n      }\n\n      var vc = d1 * d4 - d3 * d2;\n\n      if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n        v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n        return target.copy(a).addScaledVector(_vab, v);\n      }\n\n      _vcp.subVectors(p, c);\n\n      var d5 = _vab.dot(_vcp);\n\n      var d6 = _vac.dot(_vcp);\n\n      if (d6 >= 0 && d5 <= d6) {\n        // vertex region of C; barycentric coords (0, 0, 1)\n        return target.copy(c);\n      }\n\n      var vb = d5 * d2 - d1 * d6;\n\n      if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n        w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n        return target.copy(a).addScaledVector(_vac, w);\n      }\n\n      var va = d3 * d6 - d5 * d4;\n\n      if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n        _vbc.subVectors(c, b);\n\n        w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n        return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n      } // face region\n\n\n      var denom = 1 / (va + vb + vc); // u = va * denom\n\n      v = vb * denom;\n      w = vc * denom;\n      return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  }], [{\n    key: \"getNormal\",\n    value: function getNormal(a, b, c, target) {\n      target.subVectors(c, b);\n\n      _v0$1.subVectors(a, b);\n\n      target.cross(_v0$1);\n      var targetLengthSq = target.lengthSq();\n\n      if (targetLengthSq > 0) {\n        return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n      }\n\n      return target.set(0, 0, 0);\n    } // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n  }, {\n    key: \"getBarycoord\",\n    value: function getBarycoord(point, a, b, c, target) {\n      _v0$1.subVectors(c, a);\n\n      _v1$3.subVectors(b, a);\n\n      _v2$2.subVectors(point, a);\n\n      var dot00 = _v0$1.dot(_v0$1);\n\n      var dot01 = _v0$1.dot(_v1$3);\n\n      var dot02 = _v0$1.dot(_v2$2);\n\n      var dot11 = _v1$3.dot(_v1$3);\n\n      var dot12 = _v1$3.dot(_v2$2);\n\n      var denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return target.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return target.set(1 - u - v, v, u);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point, a, b, c) {\n      this.getBarycoord(point, a, b, c, _v3$1);\n      return _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n    }\n  }, {\n    key: \"getUV\",\n    value: function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n      this.getBarycoord(point, p1, p2, p3, _v3$1);\n      target.set(0, 0);\n      target.addScaledVector(uv1, _v3$1.x);\n      target.addScaledVector(uv2, _v3$1.y);\n      target.addScaledVector(uv3, _v3$1.z);\n      return target;\n    }\n  }, {\n    key: \"isFrontFacing\",\n    value: function isFrontFacing(a, b, c, direction) {\n      _v0$1.subVectors(c, b);\n\n      _v1$3.subVectors(a, b); // strictly front facing\n\n\n      return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n    }\n  }]);\n\n  return Triangle;\n}();\n\nvar materialId = 0;\n\nvar Material = /*#__PURE__*/function (_EventDispatcher4) {\n  _inherits(Material, _EventDispatcher4);\n\n  var _super9 = _createSuper(Material);\n\n  function Material() {\n    var _this10;\n\n    _classCallCheck(this, Material);\n\n    _this10 = _super9.call(this);\n    _this10.isMaterial = true;\n    Object.defineProperty(_assertThisInitialized(_this10), 'id', {\n      value: materialId++\n    });\n    _this10.uuid = generateUUID();\n    _this10.name = '';\n    _this10.type = 'Material';\n    _this10.blending = NormalBlending;\n    _this10.side = FrontSide;\n    _this10.vertexColors = false;\n    _this10.opacity = 1;\n    _this10.transparent = false;\n    _this10.blendSrc = SrcAlphaFactor;\n    _this10.blendDst = OneMinusSrcAlphaFactor;\n    _this10.blendEquation = AddEquation;\n    _this10.blendSrcAlpha = null;\n    _this10.blendDstAlpha = null;\n    _this10.blendEquationAlpha = null;\n    _this10.depthFunc = LessEqualDepth;\n    _this10.depthTest = true;\n    _this10.depthWrite = true;\n    _this10.stencilWriteMask = 0xff;\n    _this10.stencilFunc = AlwaysStencilFunc;\n    _this10.stencilRef = 0;\n    _this10.stencilFuncMask = 0xff;\n    _this10.stencilFail = KeepStencilOp;\n    _this10.stencilZFail = KeepStencilOp;\n    _this10.stencilZPass = KeepStencilOp;\n    _this10.stencilWrite = false;\n    _this10.clippingPlanes = null;\n    _this10.clipIntersection = false;\n    _this10.clipShadows = false;\n    _this10.shadowSide = null;\n    _this10.colorWrite = true;\n    _this10.precision = null; // override the renderer's default precision for this material\n\n    _this10.polygonOffset = false;\n    _this10.polygonOffsetFactor = 0;\n    _this10.polygonOffsetUnits = 0;\n    _this10.dithering = false;\n    _this10.alphaToCoverage = false;\n    _this10.premultipliedAlpha = false;\n    _this10.visible = true;\n    _this10.toneMapped = true;\n    _this10.userData = {};\n    _this10.version = 0;\n    _this10._alphaTest = 0;\n    return _this10;\n  }\n\n  _createClass(Material, [{\n    key: \"alphaTest\",\n    get: function get() {\n      return this._alphaTest;\n    },\n    set: function set(value) {\n      if (this._alphaTest > 0 !== value > 0) {\n        this.version++;\n      }\n\n      this._alphaTest = value;\n    }\n  }, {\n    key: \"onBuild\",\n    value: function onBuild() {}\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {}\n  }, {\n    key: \"onBeforeCompile\",\n    value: function onBeforeCompile() {}\n  }, {\n    key: \"customProgramCacheKey\",\n    value: function customProgramCacheKey() {\n      return this.onBeforeCompile.toString();\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n          continue;\n        } // for backward compatibility if shading is set in the constructor\n\n\n        if (key === 'shading') {\n          console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n          this.flatShading = newValue === FlatShading ? true : false;\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (isRootObject) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.sheen !== undefined) data.sheen = this.sheen;\n      if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n      if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n      if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n      if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n      if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n      if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n      if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n        data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n      }\n\n      if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n        data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n      }\n\n      if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n        data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n        data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n      }\n\n      if (this.iridescence !== undefined) data.iridescence = this.iridescence;\n      if (this.iridescenceIOR !== undefined) data.iridescenceIOR = this.iridescenceIOR;\n      if (this.iridescenceThicknessRange !== undefined) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n      if (this.iridescenceMap && this.iridescenceMap.isTexture) {\n        data.iridescenceMap = this.iridescenceMap.toJSON(meta).uuid;\n      }\n\n      if (this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture) {\n        data.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(meta).uuid;\n      }\n\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n      if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n      if (this.lightMap && this.lightMap.isTexture) {\n        data.lightMap = this.lightMap.toJSON(meta).uuid;\n        data.lightMapIntensity = this.lightMapIntensity;\n      }\n\n      if (this.aoMap && this.aoMap.isTexture) {\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\n        data.aoMapIntensity = this.aoMapIntensity;\n      }\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalMapType = this.normalMapType;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n      if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n      if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        if (this.combine !== undefined) data.combine = this.combine;\n      }\n\n      if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n      if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n      if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.transmission !== undefined) data.transmission = this.transmission;\n      if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n      if (this.thickness !== undefined) data.thickness = this.thickness;\n      if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n      if (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n      if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n      if (this.size !== undefined) data.size = this.size;\n      if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== NormalBlending) data.blending = this.blending;\n      if (this.side !== FrontSide) data.side = this.side;\n      if (this.vertexColors) data.vertexColors = true;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite;\n      data.colorWrite = this.colorWrite;\n      data.stencilWrite = this.stencilWrite;\n      data.stencilWriteMask = this.stencilWriteMask;\n      data.stencilFunc = this.stencilFunc;\n      data.stencilRef = this.stencilRef;\n      data.stencilFuncMask = this.stencilFuncMask;\n      data.stencilFail = this.stencilFail;\n      data.stencilZFail = this.stencilZFail;\n      data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n      if (this.rotation !== undefined && this.rotation !== 0) data.rotation = this.rotation;\n      if (this.polygonOffset === true) data.polygonOffset = true;\n      if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n      if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n      if (this.linewidth !== undefined && this.linewidth !== 1) data.linewidth = this.linewidth;\n      if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n      if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n      if (this.scale !== undefined) data.scale = this.scale;\n      if (this.dithering === true) data.dithering = true;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n      if (this.flatShading === true) data.flatShading = this.flatShading;\n      if (this.visible === false) data.visible = false;\n      if (this.toneMapped === false) data.toneMapped = false;\n      if (this.fog === false) data.fog = false;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var _data2 = cache[key];\n          delete _data2.metadata;\n          values.push(_data2);\n        }\n\n        return values;\n      }\n\n      if (isRootObject) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.name = source.name;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.stencilWriteMask = source.stencilWriteMask;\n      this.stencilFunc = source.stencilFunc;\n      this.stencilRef = source.stencilRef;\n      this.stencilFuncMask = source.stencilFuncMask;\n      this.stencilFail = source.stencilFail;\n      this.stencilZFail = source.stencilZFail;\n      this.stencilZPass = source.stencilZPass;\n      this.stencilWrite = source.stencilWrite;\n      var srcPlanes = source.clippingPlanes;\n      var dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) {\n          dstPlanes[i] = srcPlanes[i].clone();\n        }\n      }\n\n      this.clippingPlanes = dstPlanes;\n      this.clipIntersection = source.clipIntersection;\n      this.clipShadows = source.clipShadows;\n      this.shadowSide = source.shadowSide;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.alphaToCoverage = source.alphaToCoverage;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.visible = source.visible;\n      this.toneMapped = source.toneMapped;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }]);\n\n  return Material;\n}(EventDispatcher);\n\nvar MeshBasicMaterial = /*#__PURE__*/function (_Material) {\n  _inherits(MeshBasicMaterial, _Material);\n\n  var _super10 = _createSuper(MeshBasicMaterial);\n\n  function MeshBasicMaterial(parameters) {\n    var _this11;\n\n    _classCallCheck(this, MeshBasicMaterial);\n\n    _this11 = _super10.call(this);\n    _this11.isMeshBasicMaterial = true;\n    _this11.type = 'MeshBasicMaterial';\n    _this11.color = new Color(0xffffff); // emissive\n\n    _this11.map = null;\n    _this11.lightMap = null;\n    _this11.lightMapIntensity = 1.0;\n    _this11.aoMap = null;\n    _this11.aoMapIntensity = 1.0;\n    _this11.specularMap = null;\n    _this11.alphaMap = null;\n    _this11.envMap = null;\n    _this11.combine = MultiplyOperation;\n    _this11.reflectivity = 1;\n    _this11.refractionRatio = 0.98;\n    _this11.wireframe = false;\n    _this11.wireframeLinewidth = 1;\n    _this11.wireframeLinecap = 'round';\n    _this11.wireframeLinejoin = 'round';\n    _this11.fog = true;\n\n    _this11.setValues(parameters);\n\n    return _this11;\n  }\n\n  _createClass(MeshBasicMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshBasicMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.specularMap = source.specularMap;\n      this.alphaMap = source.alphaMap;\n      this.envMap = source.envMap;\n      this.combine = source.combine;\n      this.reflectivity = source.reflectivity;\n      this.refractionRatio = source.refractionRatio;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshBasicMaterial;\n}(Material);\n\nvar _vector$9 = /*@__PURE__*/new Vector3();\n\nvar _vector2$1 = /*@__PURE__*/new Vector2();\n\nvar BufferAttribute = /*#__PURE__*/function () {\n  function BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, BufferAttribute);\n\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.isBufferAttribute = true;\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  _createClass(BufferAttribute, [{\n    key: \"onUploadCallback\",\n    value: function onUploadCallback() {}\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }, {\n    key: \"setUsage\",\n    value: function setUsage(value) {\n      this.usage = value;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.name = source.name;\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.usage = source.usage;\n      return this;\n    }\n  }, {\n    key: \"copyAt\",\n    value: function copyAt(index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    }\n  }, {\n    key: \"copyArray\",\n    value: function copyArray(array) {\n      this.array.set(array);\n      return this;\n    }\n  }, {\n    key: \"copyColorsArray\",\n    value: function copyColorsArray(colors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"copyVector2sArray\",\n    value: function copyVector2sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"copyVector3sArray\",\n    value: function copyVector3sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"copyVector4sArray\",\n    value: function copyVector4sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"applyMatrix3\",\n    value: function applyMatrix3(m) {\n      if (this.itemSize === 2) {\n        for (var i = 0, l = this.count; i < l; i++) {\n          _vector2$1.fromBufferAttribute(this, i);\n\n          _vector2$1.applyMatrix3(m);\n\n          this.setXY(i, _vector2$1.x, _vector2$1.y);\n        }\n      } else if (this.itemSize === 3) {\n        for (var _i6 = 0, _l3 = this.count; _i6 < _l3; _i6++) {\n          _vector$9.fromBufferAttribute(this, _i6);\n\n          _vector$9.applyMatrix3(m);\n\n          this.setXYZ(_i6, _vector$9.x, _vector$9.y, _vector$9.z);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$9.fromBufferAttribute(this, i);\n\n        _vector$9.applyMatrix4(m);\n\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"applyNormalMatrix\",\n    value: function applyNormalMatrix(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$9.fromBufferAttribute(this, i);\n\n        _vector$9.applyNormalMatrix(m);\n\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"transformDirection\",\n    value: function transformDirection(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$9.fromBufferAttribute(this, i);\n\n        _vector$9.transformDirection(m);\n\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"set\",\n    value: function set(value) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.array.set(value, offset);\n      return this;\n    }\n  }, {\n    key: \"getX\",\n    value: function getX(index) {\n      return this.array[index * this.itemSize];\n    }\n  }, {\n    key: \"setX\",\n    value: function setX(index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(index) {\n      return this.array[index * this.itemSize + 1];\n    }\n  }, {\n    key: \"setY\",\n    value: function setY(index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    }\n  }, {\n    key: \"getZ\",\n    value: function getZ(index) {\n      return this.array[index * this.itemSize + 2];\n    }\n  }, {\n    key: \"setZ\",\n    value: function setZ(index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    }\n  }, {\n    key: \"getW\",\n    value: function getW(index) {\n      return this.array[index * this.itemSize + 3];\n    }\n  }, {\n    key: \"setW\",\n    value: function setW(index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    }\n  }, {\n    key: \"setXY\",\n    value: function setXY(index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    }\n  }, {\n    key: \"setXYZ\",\n    value: function setXYZ(index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    }\n  }, {\n    key: \"setXYZW\",\n    value: function setXYZW(index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    }\n  }, {\n    key: \"onUpload\",\n    value: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = {\n        itemSize: this.itemSize,\n        type: this.array.constructor.name,\n        array: Array.from(this.array),\n        normalized: this.normalized\n      };\n      if (this.name !== '') data.name = this.name;\n      if (this.usage !== StaticDrawUsage) data.usage = this.usage;\n      if (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n      return data;\n    }\n  }]);\n\n  return BufferAttribute;\n}(); //\n\n\nvar Int8BufferAttribute = /*#__PURE__*/function (_BufferAttribute) {\n  _inherits(Int8BufferAttribute, _BufferAttribute);\n\n  var _super11 = _createSuper(Int8BufferAttribute);\n\n  function Int8BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Int8BufferAttribute);\n\n    return _super11.call(this, new Int8Array(array), itemSize, normalized);\n  }\n\n  return Int8BufferAttribute;\n}(BufferAttribute);\n\nvar Uint8BufferAttribute = /*#__PURE__*/function (_BufferAttribute2) {\n  _inherits(Uint8BufferAttribute, _BufferAttribute2);\n\n  var _super12 = _createSuper(Uint8BufferAttribute);\n\n  function Uint8BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Uint8BufferAttribute);\n\n    return _super12.call(this, new Uint8Array(array), itemSize, normalized);\n  }\n\n  return Uint8BufferAttribute;\n}(BufferAttribute);\n\nvar Uint8ClampedBufferAttribute = /*#__PURE__*/function (_BufferAttribute3) {\n  _inherits(Uint8ClampedBufferAttribute, _BufferAttribute3);\n\n  var _super13 = _createSuper(Uint8ClampedBufferAttribute);\n\n  function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Uint8ClampedBufferAttribute);\n\n    return _super13.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n  }\n\n  return Uint8ClampedBufferAttribute;\n}(BufferAttribute);\n\nvar Int16BufferAttribute = /*#__PURE__*/function (_BufferAttribute4) {\n  _inherits(Int16BufferAttribute, _BufferAttribute4);\n\n  var _super14 = _createSuper(Int16BufferAttribute);\n\n  function Int16BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Int16BufferAttribute);\n\n    return _super14.call(this, new Int16Array(array), itemSize, normalized);\n  }\n\n  return Int16BufferAttribute;\n}(BufferAttribute);\n\nvar Uint16BufferAttribute = /*#__PURE__*/function (_BufferAttribute5) {\n  _inherits(Uint16BufferAttribute, _BufferAttribute5);\n\n  var _super15 = _createSuper(Uint16BufferAttribute);\n\n  function Uint16BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Uint16BufferAttribute);\n\n    return _super15.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  return Uint16BufferAttribute;\n}(BufferAttribute);\n\nvar Int32BufferAttribute = /*#__PURE__*/function (_BufferAttribute6) {\n  _inherits(Int32BufferAttribute, _BufferAttribute6);\n\n  var _super16 = _createSuper(Int32BufferAttribute);\n\n  function Int32BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Int32BufferAttribute);\n\n    return _super16.call(this, new Int32Array(array), itemSize, normalized);\n  }\n\n  return Int32BufferAttribute;\n}(BufferAttribute);\n\nvar Uint32BufferAttribute = /*#__PURE__*/function (_BufferAttribute7) {\n  _inherits(Uint32BufferAttribute, _BufferAttribute7);\n\n  var _super17 = _createSuper(Uint32BufferAttribute);\n\n  function Uint32BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Uint32BufferAttribute);\n\n    return _super17.call(this, new Uint32Array(array), itemSize, normalized);\n  }\n\n  return Uint32BufferAttribute;\n}(BufferAttribute);\n\nvar Float16BufferAttribute = /*#__PURE__*/function (_BufferAttribute8) {\n  _inherits(Float16BufferAttribute, _BufferAttribute8);\n\n  var _super18 = _createSuper(Float16BufferAttribute);\n\n  function Float16BufferAttribute(array, itemSize, normalized) {\n    var _this12;\n\n    _classCallCheck(this, Float16BufferAttribute);\n\n    _this12 = _super18.call(this, new Uint16Array(array), itemSize, normalized);\n    _this12.isFloat16BufferAttribute = true;\n    return _this12;\n  }\n\n  return Float16BufferAttribute;\n}(BufferAttribute);\n\nvar Float32BufferAttribute = /*#__PURE__*/function (_BufferAttribute9) {\n  _inherits(Float32BufferAttribute, _BufferAttribute9);\n\n  var _super19 = _createSuper(Float32BufferAttribute);\n\n  function Float32BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Float32BufferAttribute);\n\n    return _super19.call(this, new Float32Array(array), itemSize, normalized);\n  }\n\n  return Float32BufferAttribute;\n}(BufferAttribute);\n\nvar Float64BufferAttribute = /*#__PURE__*/function (_BufferAttribute10) {\n  _inherits(Float64BufferAttribute, _BufferAttribute10);\n\n  var _super20 = _createSuper(Float64BufferAttribute);\n\n  function Float64BufferAttribute(array, itemSize, normalized) {\n    _classCallCheck(this, Float64BufferAttribute);\n\n    return _super20.call(this, new Float64Array(array), itemSize, normalized);\n  }\n\n  return Float64BufferAttribute;\n}(BufferAttribute);\n\nvar _id$1 = 0;\n\nvar _m1 = /*@__PURE__*/new Matrix4();\n\nvar _obj = /*@__PURE__*/new Object3D();\n\nvar _offset = /*@__PURE__*/new Vector3();\n\nvar _box$1 = /*@__PURE__*/new Box3();\n\nvar _boxMorphTargets = /*@__PURE__*/new Box3();\n\nvar _vector$8 = /*@__PURE__*/new Vector3();\n\nvar BufferGeometry = /*#__PURE__*/function (_EventDispatcher5) {\n  _inherits(BufferGeometry, _EventDispatcher5);\n\n  var _super21 = _createSuper(BufferGeometry);\n\n  function BufferGeometry() {\n    var _this13;\n\n    _classCallCheck(this, BufferGeometry);\n\n    _this13 = _super21.call(this);\n    _this13.isBufferGeometry = true;\n    Object.defineProperty(_assertThisInitialized(_this13), 'id', {\n      value: _id$1++\n    });\n    _this13.uuid = generateUUID();\n    _this13.name = '';\n    _this13.type = 'BufferGeometry';\n    _this13.index = null;\n    _this13.attributes = {};\n    _this13.morphAttributes = {};\n    _this13.morphTargetsRelative = false;\n    _this13.groups = [];\n    _this13.boundingBox = null;\n    _this13.boundingSphere = null;\n    _this13.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    _this13.userData = {};\n    return _this13;\n  }\n\n  _createClass(BufferGeometry, [{\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.index;\n    }\n  }, {\n    key: \"setIndex\",\n    value: function setIndex(index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayNeedsUint32(index) ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      return this.attributes[name];\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, attribute) {\n      this.attributes[name] = attribute;\n      return this;\n    }\n  }, {\n    key: \"deleteAttribute\",\n    value: function deleteAttribute(name) {\n      delete this.attributes[name];\n      return this;\n    }\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(name) {\n      return this.attributes[name] !== undefined;\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(start, count) {\n      var materialIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex\n      });\n    }\n  }, {\n    key: \"clearGroups\",\n    value: function clearGroups() {\n      this.groups = [];\n    }\n  }, {\n    key: \"setDrawRange\",\n    value: function setDrawRange(start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        position.applyMatrix4(matrix);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normal.applyNormalMatrix(normalMatrix);\n        normal.needsUpdate = true;\n      }\n\n      var tangent = this.attributes.tangent;\n\n      if (tangent !== undefined) {\n        tangent.transformDirection(matrix);\n        tangent.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"applyQuaternion\",\n    value: function applyQuaternion(q) {\n      _m1.makeRotationFromQuaternion(q);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(angle) {\n      // rotate geometry around world x-axis\n      _m1.makeRotationX(angle);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(angle) {\n      // rotate geometry around world y-axis\n      _m1.makeRotationY(angle);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(angle) {\n      // rotate geometry around world z-axis\n      _m1.makeRotationZ(angle);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(x, y, z) {\n      // translate geometry\n      _m1.makeTranslation(x, y, z);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(x, y, z) {\n      // scale geometry\n      _m1.makeScale(x, y, z);\n\n      this.applyMatrix4(_m1);\n      return this;\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(vector) {\n      _obj.lookAt(vector);\n\n      _obj.updateMatrix();\n\n      this.applyMatrix4(_obj.matrix);\n      return this;\n    }\n  }, {\n    key: \"center\",\n    value: function center() {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(_offset).negate();\n      this.translate(_offset.x, _offset.y, _offset.z);\n      return this;\n    }\n  }, {\n    key: \"setFromPoints\",\n    value: function setFromPoints(points) {\n      var position = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n\n      this.setAttribute('position', new Float32BufferAttribute(position, 3));\n      return this;\n    }\n  }, {\n    key: \"computeBoundingBox\",\n    value: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position && position.isGLBufferAttribute) {\n        console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n        this.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n        return;\n      }\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _box$1.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n              this.boundingBox.expandByPoint(_vector$8);\n\n              _vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n              this.boundingBox.expandByPoint(_vector$8);\n            } else {\n              this.boundingBox.expandByPoint(_box$1.min);\n              this.boundingBox.expandByPoint(_box$1.max);\n            }\n          }\n        }\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    }\n  }, {\n    key: \"computeBoundingSphere\",\n    value: function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position && position.isGLBufferAttribute) {\n        console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n        this.boundingSphere.set(new Vector3(), Infinity);\n        return;\n      }\n\n      if (position) {\n        // first, find the center of the bounding sphere\n        var center = this.boundingSphere.center;\n\n        _box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n              _box$1.expandByPoint(_vector$8);\n\n              _vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n              _box$1.expandByPoint(_vector$8);\n            } else {\n              _box$1.expandByPoint(_boxMorphTargets.min);\n\n              _box$1.expandByPoint(_boxMorphTargets.max);\n            }\n          }\n        }\n\n        _box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n        var maxRadiusSq = 0;\n\n        for (var _i7 = 0, _il = position.count; _i7 < _il; _i7++) {\n          _vector$8.fromBufferAttribute(position, _i7);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n        } // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var _i8 = 0, _il2 = morphAttributesPosition.length; _i8 < _il2; _i8++) {\n            var _morphAttribute = morphAttributesPosition[_i8];\n            var morphTargetsRelative = this.morphTargetsRelative;\n\n            for (var j = 0, jl = _morphAttribute.count; j < jl; j++) {\n              _vector$8.fromBufferAttribute(_morphAttribute, j);\n\n              if (morphTargetsRelative) {\n                _offset.fromBufferAttribute(position, j);\n\n                _vector$8.add(_offset);\n              }\n\n              maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n            }\n          }\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    }\n  }, {\n    key: \"computeTangents\",\n    value: function computeTangents() {\n      var index = this.index;\n      var attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n      // (per vertex tangents)\n\n      if (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n        console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n        return;\n      }\n\n      var indices = index.array;\n      var positions = attributes.position.array;\n      var normals = attributes.normal.array;\n      var uvs = attributes.uv.array;\n      var nVertices = positions.length / 3;\n\n      if (this.hasAttribute('tangent') === false) {\n        this.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n      }\n\n      var tangents = this.getAttribute('tangent').array;\n      var tan1 = [],\n          tan2 = [];\n\n      for (var i = 0; i < nVertices; i++) {\n        tan1[i] = new Vector3();\n        tan2[i] = new Vector3();\n      }\n\n      var vA = new Vector3(),\n          vB = new Vector3(),\n          vC = new Vector3(),\n          uvA = new Vector2(),\n          uvB = new Vector2(),\n          uvC = new Vector2(),\n          sdir = new Vector3(),\n          tdir = new Vector3();\n\n      function handleTriangle(a, b, c) {\n        vA.fromArray(positions, a * 3);\n        vB.fromArray(positions, b * 3);\n        vC.fromArray(positions, c * 3);\n        uvA.fromArray(uvs, a * 2);\n        uvB.fromArray(uvs, b * 2);\n        uvC.fromArray(uvs, c * 2);\n        vB.sub(vA);\n        vC.sub(vA);\n        uvB.sub(uvA);\n        uvC.sub(uvA);\n        var r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n        if (!isFinite(r)) return;\n        sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n        tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n        tan1[a].add(sdir);\n        tan1[b].add(sdir);\n        tan1[c].add(sdir);\n        tan2[a].add(tdir);\n        tan2[b].add(tdir);\n        tan2[c].add(tdir);\n      }\n\n      var groups = this.groups;\n\n      if (groups.length === 0) {\n        groups = [{\n          start: 0,\n          count: indices.length\n        }];\n      }\n\n      for (var _i9 = 0, il = groups.length; _i9 < il; ++_i9) {\n        var group = groups[_i9];\n        var start = group.start;\n        var count = group.count;\n\n        for (var j = start, jl = start + count; j < jl; j += 3) {\n          handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n        }\n      }\n\n      var tmp = new Vector3(),\n          tmp2 = new Vector3();\n      var n = new Vector3(),\n          n2 = new Vector3();\n\n      function handleVertex(v) {\n        n.fromArray(normals, v * 3);\n        n2.copy(n);\n        var t = tan1[v]; // Gram-Schmidt orthogonalize\n\n        tmp.copy(t);\n        tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n        tmp2.crossVectors(n2, t);\n        var test = tmp2.dot(tan2[v]);\n        var w = test < 0.0 ? -1.0 : 1.0;\n        tangents[v * 4] = tmp.x;\n        tangents[v * 4 + 1] = tmp.y;\n        tangents[v * 4 + 2] = tmp.z;\n        tangents[v * 4 + 3] = w;\n      }\n\n      for (var _i10 = 0, _il3 = groups.length; _i10 < _il3; ++_i10) {\n        var _group = groups[_i10];\n        var _start2 = _group.start;\n        var _count = _group.count;\n\n        for (var _j = _start2, _jl = _start2 + _count; _j < _jl; _j += 3) {\n          handleVertex(indices[_j + 0]);\n          handleVertex(indices[_j + 1]);\n          handleVertex(indices[_j + 2]);\n        }\n      }\n    }\n  }, {\n    key: \"computeVertexNormals\",\n    value: function computeVertexNormals() {\n      var index = this.index;\n      var positionAttribute = this.getAttribute('position');\n\n      if (positionAttribute !== undefined) {\n        var normalAttribute = this.getAttribute('normal');\n\n        if (normalAttribute === undefined) {\n          normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n          this.setAttribute('normal', normalAttribute);\n        } else {\n          // reset existing normals to zero\n          for (var i = 0, il = normalAttribute.count; i < il; i++) {\n            normalAttribute.setXYZ(i, 0, 0, 0);\n          }\n        }\n\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var nA = new Vector3(),\n            nB = new Vector3(),\n            nC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          for (var _i11 = 0, _il4 = index.count; _i11 < _il4; _i11 += 3) {\n            var vA = index.getX(_i11 + 0);\n            var vB = index.getX(_i11 + 1);\n            var vC = index.getX(_i11 + 2);\n            pA.fromBufferAttribute(positionAttribute, vA);\n            pB.fromBufferAttribute(positionAttribute, vB);\n            pC.fromBufferAttribute(positionAttribute, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            nA.fromBufferAttribute(normalAttribute, vA);\n            nB.fromBufferAttribute(normalAttribute, vB);\n            nC.fromBufferAttribute(normalAttribute, vC);\n            nA.add(cb);\n            nB.add(cb);\n            nC.add(cb);\n            normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n            normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n            normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var _i12 = 0, _il5 = positionAttribute.count; _i12 < _il5; _i12 += 3) {\n            pA.fromBufferAttribute(positionAttribute, _i12 + 0);\n            pB.fromBufferAttribute(positionAttribute, _i12 + 1);\n            pC.fromBufferAttribute(positionAttribute, _i12 + 2);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normalAttribute.setXYZ(_i12 + 0, cb.x, cb.y, cb.z);\n            normalAttribute.setXYZ(_i12 + 1, cb.x, cb.y, cb.z);\n            normalAttribute.setXYZ(_i12 + 2, cb.x, cb.y, cb.z);\n          }\n        }\n\n        this.normalizeNormals();\n        normalAttribute.needsUpdate = true;\n      }\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n        console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeOffset = attribute2.itemSize * offset;\n        var length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n        for (var i = 0, j = attributeOffset; i < length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"normalizeNormals\",\n    value: function normalizeNormals() {\n      var normals = this.attributes.normal;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        _vector$8.fromBufferAttribute(normals, i);\n\n        _vector$8.normalize();\n\n        normals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n      }\n    }\n  }, {\n    key: \"toNonIndexed\",\n    value: function toNonIndexed() {\n      function convertBufferAttribute(attribute, indices) {\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var normalized = attribute.normalized;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          if (attribute.isInterleavedBufferAttribute) {\n            index = indices[i] * attribute.data.stride + attribute.offset;\n          } else {\n            index = indices[i] * itemSize;\n          }\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        return new BufferAttribute(array2, itemSize, normalized);\n      } //\n\n\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes; // attributes\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var newAttribute = convertBufferAttribute(attribute, indices);\n        geometry2.setAttribute(name, newAttribute);\n      } // morph attributes\n\n\n      var morphAttributes = this.morphAttributes;\n\n      for (var _name in morphAttributes) {\n        var morphArray = [];\n        var morphAttribute = morphAttributes[_name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (var i = 0, il = morphAttribute.length; i < il; i++) {\n          var _attribute = morphAttribute[i];\n\n          var _newAttribute = convertBufferAttribute(_attribute, indices);\n\n          morphArray.push(_newAttribute);\n        }\n\n        geometry2.morphAttributes[_name] = morphArray;\n      }\n\n      geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n      var groups = this.groups;\n\n      for (var _i13 = 0, l = groups.length; _i13 < l; _i13++) {\n        var group = groups[_i13];\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return geometry2;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      } // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: Array.prototype.slice.call(index.array)\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var _key in attributes) {\n        var attribute = attributes[_key];\n        data.data.attributes[_key] = attribute.toJSON(data.data);\n      }\n\n      var morphAttributes = {};\n      var hasMorphAttributes = false;\n\n      for (var _key2 in this.morphAttributes) {\n        var attributeArray = this.morphAttributes[_key2];\n        var array = [];\n\n        for (var i = 0, il = attributeArray.length; i < il; i++) {\n          var _attribute2 = attributeArray[i];\n          array.push(_attribute2.toJSON(data.data));\n        }\n\n        if (array.length > 0) {\n          morphAttributes[_key2] = array;\n          hasMorphAttributes = true;\n        }\n      }\n\n      if (hasMorphAttributes) {\n        data.data.morphAttributes = morphAttributes;\n        data.data.morphTargetsRelative = this.morphTargetsRelative;\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      // reset\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // used for storing cloned, shared data\n\n      var data = {}; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone(data));\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        this.setAttribute(name, attribute.clone(data));\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (var _name2 in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[_name2]; // morphAttribute: array of Float32BufferAttributes\n\n        for (var i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone(data));\n        }\n\n        this.morphAttributes[_name2] = array;\n      }\n\n      this.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n      var groups = source.groups;\n\n      for (var _i14 = 0, _l4 = groups.length; _i14 < _l4; _i14++) {\n        var group = groups[_i14];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count; // user data\n\n      this.userData = source.userData; // geometry generator parameters\n\n      if (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }]);\n\n  return BufferGeometry;\n}(EventDispatcher);\n\nvar _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\nvar _ray$2 = /*@__PURE__*/new Ray();\n\nvar _sphere$3 = /*@__PURE__*/new Sphere();\n\nvar _vA$1 = /*@__PURE__*/new Vector3();\n\nvar _vB$1 = /*@__PURE__*/new Vector3();\n\nvar _vC$1 = /*@__PURE__*/new Vector3();\n\nvar _tempA = /*@__PURE__*/new Vector3();\n\nvar _tempB = /*@__PURE__*/new Vector3();\n\nvar _tempC = /*@__PURE__*/new Vector3();\n\nvar _morphA = /*@__PURE__*/new Vector3();\n\nvar _morphB = /*@__PURE__*/new Vector3();\n\nvar _morphC = /*@__PURE__*/new Vector3();\n\nvar _uvA$1 = /*@__PURE__*/new Vector2();\n\nvar _uvB$1 = /*@__PURE__*/new Vector2();\n\nvar _uvC$1 = /*@__PURE__*/new Vector2();\n\nvar _intersectionPoint = /*@__PURE__*/new Vector3();\n\nvar _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\nvar Mesh = /*#__PURE__*/function (_Object3D) {\n  _inherits(Mesh, _Object3D);\n\n  var _super22 = _createSuper(Mesh);\n\n  function Mesh() {\n    var _this14;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new MeshBasicMaterial();\n\n    _classCallCheck(this, Mesh);\n\n    _this14 = _super22.call(this);\n    _this14.isMesh = true;\n    _this14.type = 'Mesh';\n    _this14.geometry = geometry;\n    _this14.material = material;\n\n    _this14.updateMorphTargets();\n\n    return _this14;\n  }\n\n  _createClass(Mesh, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Mesh.prototype), \"copy\", this).call(this, source, recursive);\n\n      if (source.morphTargetInfluences !== undefined) {\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\n      }\n\n      if (source.morphTargetDictionary !== undefined) {\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n      }\n\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    }\n  }, {\n    key: \"updateMorphTargets\",\n    value: function updateMorphTargets() {\n      var geometry = this.geometry;\n      var morphAttributes = geometry.morphAttributes;\n      var keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        var morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n            var name = morphAttribute[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$3.copy(geometry.boundingSphere);\n\n      _sphere$3.applyMatrix4(matrixWorld);\n\n      if (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n      _inverseMatrix$2.copy(matrixWorld).invert();\n\n      _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n      if (geometry.boundingBox !== null) {\n        if (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var intersection;\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n      var morphPosition = geometry.morphAttributes.position;\n      var morphTargetsRelative = geometry.morphTargetsRelative;\n      var uv = geometry.attributes.uv;\n      var uv2 = geometry.attributes.uv2;\n      var groups = geometry.groups;\n      var drawRange = geometry.drawRange;\n\n      if (index !== null) {\n        // indexed buffer geometry\n        if (Array.isArray(material)) {\n          for (var i = 0, il = groups.length; i < il; i++) {\n            var group = groups[i];\n            var groupMaterial = material[group.materialIndex];\n            var start = Math.max(group.start, drawRange.start);\n            var end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n            for (var j = start, jl = end; j < jl; j += 3) {\n              var a = index.getX(j);\n              var b = index.getX(j + 1);\n              var c = index.getX(j + 2);\n              intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                intersection.face.materialIndex = group.materialIndex;\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else {\n          var _start3 = Math.max(0, drawRange.start);\n\n          var _end2 = Math.min(index.count, drawRange.start + drawRange.count);\n\n          for (var _i15 = _start3, _il6 = _end2; _i15 < _il6; _i15 += 3) {\n            var _a = index.getX(_i15);\n\n            var _b = index.getX(_i15 + 1);\n\n            var _c = index.getX(_i15 + 2);\n\n            intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a, _b, _c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(_i15 / 3); // triangle number in indexed buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if (position !== undefined) {\n        // non-indexed buffer geometry\n        if (Array.isArray(material)) {\n          for (var _i16 = 0, _il7 = groups.length; _i16 < _il7; _i16++) {\n            var _group2 = groups[_i16];\n            var _groupMaterial = material[_group2.materialIndex];\n\n            var _start4 = Math.max(_group2.start, drawRange.start);\n\n            var _end3 = Math.min(position.count, Math.min(_group2.start + _group2.count, drawRange.start + drawRange.count));\n\n            for (var _j2 = _start4, _jl2 = _end3; _j2 < _jl2; _j2 += 3) {\n              var _a2 = _j2;\n\n              var _b2 = _j2 + 1;\n\n              var _c2 = _j2 + 2;\n\n              intersection = checkBufferGeometryIntersection(this, _groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a2, _b2, _c2);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(_j2 / 3); // triangle number in non-indexed buffer semantics\n\n                intersection.face.materialIndex = _group2.materialIndex;\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else {\n          var _start5 = Math.max(0, drawRange.start);\n\n          var _end4 = Math.min(position.count, drawRange.start + drawRange.count);\n\n          for (var _i17 = _start5, _il8 = _end4; _i17 < _il8; _i17 += 3) {\n            var _a3 = _i17;\n\n            var _b3 = _i17 + 1;\n\n            var _c3 = _i17 + 2;\n\n            intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a3, _b3, _c3);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(_i17 / 3); // triangle number in non-indexed buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return Mesh;\n}(Object3D);\n\nfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n  var intersect;\n\n  if (material.side === BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n  }\n\n  if (intersect === null) return null;\n\n  _intersectionPointWorld.copy(point);\n\n  _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n  var distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n  return {\n    distance: distance,\n    point: _intersectionPointWorld.clone(),\n    object: object\n  };\n}\n\nfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n  _vA$1.fromBufferAttribute(position, a);\n\n  _vB$1.fromBufferAttribute(position, b);\n\n  _vC$1.fromBufferAttribute(position, c);\n\n  var morphInfluences = object.morphTargetInfluences;\n\n  if (morphPosition && morphInfluences) {\n    _morphA.set(0, 0, 0);\n\n    _morphB.set(0, 0, 0);\n\n    _morphC.set(0, 0, 0);\n\n    for (var i = 0, il = morphPosition.length; i < il; i++) {\n      var influence = morphInfluences[i];\n      var morphAttribute = morphPosition[i];\n      if (influence === 0) continue;\n\n      _tempA.fromBufferAttribute(morphAttribute, a);\n\n      _tempB.fromBufferAttribute(morphAttribute, b);\n\n      _tempC.fromBufferAttribute(morphAttribute, c);\n\n      if (morphTargetsRelative) {\n        _morphA.addScaledVector(_tempA, influence);\n\n        _morphB.addScaledVector(_tempB, influence);\n\n        _morphC.addScaledVector(_tempC, influence);\n      } else {\n        _morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n        _morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n        _morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n      }\n    }\n\n    _vA$1.add(_morphA);\n\n    _vB$1.add(_morphB);\n\n    _vC$1.add(_morphC);\n  }\n\n  if (object.isSkinnedMesh) {\n    object.boneTransform(a, _vA$1);\n    object.boneTransform(b, _vB$1);\n    object.boneTransform(c, _vC$1);\n  }\n\n  var intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n  if (intersection) {\n    if (uv) {\n      _uvA$1.fromBufferAttribute(uv, a);\n\n      _uvB$1.fromBufferAttribute(uv, b);\n\n      _uvC$1.fromBufferAttribute(uv, c);\n\n      intersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n    }\n\n    if (uv2) {\n      _uvA$1.fromBufferAttribute(uv2, a);\n\n      _uvB$1.fromBufferAttribute(uv2, b);\n\n      _uvC$1.fromBufferAttribute(uv2, c);\n\n      intersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n    }\n\n    var face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new Vector3(),\n      materialIndex: 0\n    };\n    Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n    intersection.face = face;\n  }\n\n  return intersection;\n}\n\nvar BoxGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(BoxGeometry, _BufferGeometry);\n\n  var _super23 = _createSuper(BoxGeometry);\n\n  function BoxGeometry() {\n    var _this15;\n\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var widthSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var depthSegments = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n    _classCallCheck(this, BoxGeometry);\n\n    _this15 = _super23.call(this);\n    _this15.type = 'BoxGeometry';\n    _this15.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n\n    var scope = _assertThisInitialized(_this15); // segments\n\n\n    widthSegments = Math.floor(widthSegments);\n    heightSegments = Math.floor(heightSegments);\n    depthSegments = Math.floor(depthSegments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var numberOfVertices = 0;\n    var groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    _this15.setIndex(indices);\n\n    _this15.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this15.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this15.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      var segmentWidth = width / gridX;\n      var segmentHeight = height / gridY;\n      var widthHalf = width / 2;\n      var heightHalf = height / 2;\n      var depthHalf = depth / 2;\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var vertexCounter = 0;\n      var groupCount = 0;\n      var vector = new Vector3(); // generate vertices, normals and uvs\n\n      for (var iy = 0; iy < gridY1; iy++) {\n        var y = iy * segmentHeight - heightHalf;\n\n        for (var ix = 0; ix < gridX1; ix++) {\n          var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z); // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY); // counters\n\n          vertexCounter += 1;\n        }\n      } // indices\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (var _iy = 0; _iy < gridY; _iy++) {\n        for (var _ix = 0; _ix < gridX; _ix++) {\n          var a = numberOfVertices + _ix + gridX1 * _iy;\n          var b = numberOfVertices + _ix + gridX1 * (_iy + 1);\n          var c = numberOfVertices + (_ix + 1) + gridX1 * (_iy + 1);\n          var d = numberOfVertices + (_ix + 1) + gridX1 * _iy; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // increase counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n\n    return _this15;\n  }\n\n  _createClass(BoxGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n    }\n  }]);\n\n  return BoxGeometry;\n}(BufferGeometry);\n/**\n * Uniform Utilities\n */\n\n\nfunction cloneUniforms(src) {\n  var dst = {};\n\n  for (var u in src) {\n    dst[u] = {};\n\n    for (var p in src[u]) {\n      var property = src[u][p];\n\n      if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n        dst[u][p] = property.clone();\n      } else if (Array.isArray(property)) {\n        dst[u][p] = property.slice();\n      } else {\n        dst[u][p] = property;\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction mergeUniforms(uniforms) {\n  var merged = {};\n\n  for (var u = 0; u < uniforms.length; u++) {\n    var _tmp = cloneUniforms(uniforms[u]);\n\n    for (var p in _tmp) {\n      merged[p] = _tmp[p];\n    }\n  }\n\n  return merged;\n} // Legacy\n\n\nvar UniformsUtils = {\n  clone: cloneUniforms,\n  merge: mergeUniforms\n};\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nvar ShaderMaterial = /*#__PURE__*/function (_Material2) {\n  _inherits(ShaderMaterial, _Material2);\n\n  var _super24 = _createSuper(ShaderMaterial);\n\n  function ShaderMaterial(parameters) {\n    var _this16;\n\n    _classCallCheck(this, ShaderMaterial);\n\n    _this16 = _super24.call(this);\n    _this16.isShaderMaterial = true;\n    _this16.type = 'ShaderMaterial';\n    _this16.defines = {};\n    _this16.uniforms = {};\n    _this16.vertexShader = default_vertex;\n    _this16.fragmentShader = default_fragment;\n    _this16.linewidth = 1;\n    _this16.wireframe = false;\n    _this16.wireframeLinewidth = 1;\n    _this16.fog = false; // set to use scene fog\n\n    _this16.lights = false; // set to use scene lights\n\n    _this16.clipping = false; // set to use user-defined clipping planes\n\n    _this16.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    _this16.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    _this16.index0AttributeName = undefined;\n    _this16.uniformsNeedUpdate = false;\n    _this16.glslVersion = null;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      _this16.setValues(parameters);\n    }\n\n    return _this16;\n  }\n\n  _createClass(ShaderMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(ShaderMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.fragmentShader = source.fragmentShader;\n      this.vertexShader = source.vertexShader;\n      this.uniforms = cloneUniforms(source.uniforms);\n      this.defines = Object.assign({}, source.defines);\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.fog = source.fog;\n      this.lights = source.lights;\n      this.clipping = source.clipping;\n      this.extensions = Object.assign({}, source.extensions);\n      this.glslVersion = source.glslVersion;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(ShaderMaterial.prototype), \"toJSON\", this).call(this, meta);\n\n      data.glslVersion = this.glslVersion;\n      data.uniforms = {};\n\n      for (var name in this.uniforms) {\n        var uniform = this.uniforms[name];\n        var _value = uniform.value;\n\n        if (_value && _value.isTexture) {\n          data.uniforms[name] = {\n            type: 't',\n            value: _value.toJSON(meta).uuid\n          };\n        } else if (_value && _value.isColor) {\n          data.uniforms[name] = {\n            type: 'c',\n            value: _value.getHex()\n          };\n        } else if (_value && _value.isVector2) {\n          data.uniforms[name] = {\n            type: 'v2',\n            value: _value.toArray()\n          };\n        } else if (_value && _value.isVector3) {\n          data.uniforms[name] = {\n            type: 'v3',\n            value: _value.toArray()\n          };\n        } else if (_value && _value.isVector4) {\n          data.uniforms[name] = {\n            type: 'v4',\n            value: _value.toArray()\n          };\n        } else if (_value && _value.isMatrix3) {\n          data.uniforms[name] = {\n            type: 'm3',\n            value: _value.toArray()\n          };\n        } else if (_value && _value.isMatrix4) {\n          data.uniforms[name] = {\n            type: 'm4',\n            value: _value.toArray()\n          };\n        } else {\n          data.uniforms[name] = {\n            value: _value\n          }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n        }\n      }\n\n      if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n      data.vertexShader = this.vertexShader;\n      data.fragmentShader = this.fragmentShader;\n      var extensions = {};\n\n      for (var key in this.extensions) {\n        if (this.extensions[key] === true) extensions[key] = true;\n      }\n\n      if (Object.keys(extensions).length > 0) data.extensions = extensions;\n      return data;\n    }\n  }]);\n\n  return ShaderMaterial;\n}(Material);\n\nvar Camera = /*#__PURE__*/function (_Object3D2) {\n  _inherits(Camera, _Object3D2);\n\n  var _super25 = _createSuper(Camera);\n\n  function Camera() {\n    var _this17;\n\n    _classCallCheck(this, Camera);\n\n    _this17 = _super25.call(this);\n    _this17.isCamera = true;\n    _this17.type = 'Camera';\n    _this17.matrixWorldInverse = new Matrix4();\n    _this17.projectionMatrix = new Matrix4();\n    _this17.projectionMatrixInverse = new Matrix4();\n    return _this17;\n  }\n\n  _createClass(Camera, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Camera.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n      return this;\n    }\n  }, {\n    key: \"getWorldDirection\",\n    value: function getWorldDirection(target) {\n      this.updateWorldMatrix(true, false);\n      var e = this.matrixWorld.elements;\n      return target.set(-e[8], -e[9], -e[10]).normalize();\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(Camera.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\n    }\n  }, {\n    key: \"updateWorldMatrix\",\n    value: function updateWorldMatrix(updateParents, updateChildren) {\n      _get(_getPrototypeOf(Camera.prototype), \"updateWorldMatrix\", this).call(this, updateParents, updateChildren);\n\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Camera;\n}(Object3D);\n\nvar PerspectiveCamera = /*#__PURE__*/function (_Camera) {\n  _inherits(PerspectiveCamera, _Camera);\n\n  var _super26 = _createSuper(PerspectiveCamera);\n\n  function PerspectiveCamera() {\n    var _this18;\n\n    var fov = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n    var aspect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.1;\n    var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2000;\n\n    _classCallCheck(this, PerspectiveCamera);\n\n    _this18 = _super26.call(this);\n    _this18.isPerspectiveCamera = true;\n    _this18.type = 'PerspectiveCamera';\n    _this18.fov = fov;\n    _this18.zoom = 1;\n    _this18.near = near;\n    _this18.far = far;\n    _this18.focus = 10;\n    _this18.aspect = aspect;\n    _this18.view = null;\n    _this18.filmGauge = 35; // width of the film (default in millimeters)\n\n    _this18.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    _this18.updateProjectionMatrix();\n\n    return _this18;\n  }\n\n  _createClass(PerspectiveCamera, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(PerspectiveCamera.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    }\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n\n  }, {\n    key: \"setFocalLength\",\n    value: function setFocalLength(focalLength) {\n      /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    }\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n\n  }, {\n    key: \"getFocalLength\",\n    value: function getFocalLength() {\n      var vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    }\n  }, {\n    key: \"getEffectiveFOV\",\n    value: function getEffectiveFOV() {\n      return RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n    }\n  }, {\n    key: \"getFilmWidth\",\n    value: function getFilmWidth() {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    }\n  }, {\n    key: \"getFilmHeight\",\n    value: function getFilmHeight() {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    }\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   const w = 1920;\n     *   const h = 1080;\n     *   const fullWidth = w * 3;\n     *   const fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n\n  }, {\n    key: \"setViewOffset\",\n    value: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    }\n  }, {\n    key: \"clearViewOffset\",\n    value: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    }\n  }, {\n    key: \"updateProjectionMatrix\",\n    value: function updateProjectionMatrix() {\n      var near = this.near;\n      var top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n      var height = 2 * top;\n      var width = this.aspect * height;\n      var left = -0.5 * width;\n      var view = this.view;\n\n      if (this.view !== null && this.view.enabled) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(PerspectiveCamera.prototype), \"toJSON\", this).call(this, meta);\n\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  }]);\n\n  return PerspectiveCamera;\n}(Camera);\n\nvar fov = 90,\n    aspect = 1;\n\nvar CubeCamera = /*#__PURE__*/function (_Object3D3) {\n  _inherits(CubeCamera, _Object3D3);\n\n  var _super27 = _createSuper(CubeCamera);\n\n  function CubeCamera(near, far, renderTarget) {\n    var _this19;\n\n    _classCallCheck(this, CubeCamera);\n\n    _this19 = _super27.call(this);\n    _this19.type = 'CubeCamera';\n\n    if (renderTarget.isWebGLCubeRenderTarget !== true) {\n      console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n      return _possibleConstructorReturn(_this19);\n    }\n\n    _this19.renderTarget = renderTarget;\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.layers = _this19.layers;\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n\n    _this19.add(cameraPX);\n\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.layers = _this19.layers;\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n\n    _this19.add(cameraNX);\n\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.layers = _this19.layers;\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n\n    _this19.add(cameraPY);\n\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.layers = _this19.layers;\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n\n    _this19.add(cameraNY);\n\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.layers = _this19.layers;\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n\n    _this19.add(cameraPZ);\n\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.layers = _this19.layers;\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n\n    _this19.add(cameraNZ);\n\n    return _this19;\n  }\n\n  _createClass(CubeCamera, [{\n    key: \"update\",\n    value: function update(renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var renderTarget = this.renderTarget;\n\n      var _this$children = _slicedToArray(this.children, 6),\n          cameraPX = _this$children[0],\n          cameraNX = _this$children[1],\n          cameraPY = _this$children[2],\n          cameraNY = _this$children[3],\n          cameraPZ = _this$children[4],\n          cameraNZ = _this$children[5];\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var currentToneMapping = renderer.toneMapping;\n      var currentXrEnabled = renderer.xr.enabled;\n      renderer.toneMapping = NoToneMapping;\n      renderer.xr.enabled = false;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderer.setRenderTarget(renderTarget, 0);\n      renderer.render(scene, cameraPX);\n      renderer.setRenderTarget(renderTarget, 1);\n      renderer.render(scene, cameraNX);\n      renderer.setRenderTarget(renderTarget, 2);\n      renderer.render(scene, cameraPY);\n      renderer.setRenderTarget(renderTarget, 3);\n      renderer.render(scene, cameraNY);\n      renderer.setRenderTarget(renderTarget, 4);\n      renderer.render(scene, cameraPZ);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderer.setRenderTarget(renderTarget, 5);\n      renderer.render(scene, cameraNZ);\n      renderer.setRenderTarget(currentRenderTarget);\n      renderer.toneMapping = currentToneMapping;\n      renderer.xr.enabled = currentXrEnabled;\n      renderTarget.texture.needsPMREMUpdate = true;\n    }\n  }]);\n\n  return CubeCamera;\n}(Object3D);\n\nvar CubeTexture = /*#__PURE__*/function (_Texture3) {\n  _inherits(CubeTexture, _Texture3);\n\n  var _super28 = _createSuper(CubeTexture);\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    var _this20;\n\n    _classCallCheck(this, CubeTexture);\n\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    _this20 = _super28.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    _this20.isCubeTexture = true;\n    _this20.flipY = false;\n    return _this20;\n  }\n\n  _createClass(CubeTexture, [{\n    key: \"images\",\n    get: function get() {\n      return this.image;\n    },\n    set: function set(value) {\n      this.image = value;\n    }\n  }]);\n\n  return CubeTexture;\n}(Texture);\n\nvar WebGLCubeRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget4) {\n  _inherits(WebGLCubeRenderTarget, _WebGLRenderTarget4);\n\n  var _super29 = _createSuper(WebGLCubeRenderTarget);\n\n  function WebGLCubeRenderTarget(size) {\n    var _this21;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, WebGLCubeRenderTarget);\n\n    _this21 = _super29.call(this, size, size, options);\n    _this21.isWebGLCubeRenderTarget = true;\n    var image = {\n      width: size,\n      height: size,\n      depth: 1\n    };\n    var images = [image, image, image, image, image, image];\n    _this21.texture = new CubeTexture(images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding); // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n    // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n    // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n    // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n    // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n    // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n    _this21.texture.isRenderTargetTexture = true;\n    _this21.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    _this21.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    return _this21;\n  }\n\n  _createClass(WebGLCubeRenderTarget, [{\n    key: \"fromEquirectangularTexture\",\n    value: function fromEquirectangularTexture(renderer, texture) {\n      this.texture.type = texture.type;\n      this.texture.encoding = texture.encoding;\n      this.texture.generateMipmaps = texture.generateMipmaps;\n      this.texture.minFilter = texture.minFilter;\n      this.texture.magFilter = texture.magFilter;\n      var shader = {\n        uniforms: {\n          tEquirect: {\n            value: null\n          }\n        },\n        vertexShader:\n        /* glsl */\n        \"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",\n        fragmentShader:\n        /* glsl */\n        \"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"\n      };\n      var geometry = new BoxGeometry(5, 5, 5);\n      var material = new ShaderMaterial({\n        name: 'CubemapFromEquirect',\n        uniforms: cloneUniforms(shader.uniforms),\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n        side: BackSide,\n        blending: NoBlending\n      });\n      material.uniforms.tEquirect.value = texture;\n      var mesh = new Mesh(geometry, material);\n      var currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n      if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n      var camera = new CubeCamera(1, 10, this);\n      camera.update(renderer, mesh);\n      texture.minFilter = currentMinFilter;\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(renderer, color, depth, stencil) {\n      var currentRenderTarget = renderer.getRenderTarget();\n\n      for (var i = 0; i < 6; i++) {\n        renderer.setRenderTarget(this, i);\n        renderer.clear(color, depth, stencil);\n      }\n\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }]);\n\n  return WebGLCubeRenderTarget;\n}(WebGLRenderTarget);\n\nvar _vector1 = /*@__PURE__*/new Vector3();\n\nvar _vector2 = /*@__PURE__*/new Vector3();\n\nvar _normalMatrix = /*@__PURE__*/new Matrix3();\n\nvar Plane = /*#__PURE__*/function () {\n  function Plane() {\n    var normal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(1, 0, 0);\n    var constant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Plane);\n\n    this.isPlane = true; // normal is assumed to be normalized\n\n    this.normal = normal;\n    this.constant = constant;\n  }\n\n  _createClass(Plane, [{\n    key: \"set\",\n    value: function set(normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    }\n  }, {\n    key: \"setComponents\",\n    value: function setComponents(x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    }\n  }, {\n    key: \"setFromNormalAndCoplanarPoint\",\n    value: function setFromNormalAndCoplanarPoint(normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal);\n      return this;\n    }\n  }, {\n    key: \"setFromCoplanarPoints\",\n    value: function setFromCoplanarPoints(a, b, c) {\n      var normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      return this.normal.dot(point) + this.constant;\n    }\n  }, {\n    key: \"distanceToSphere\",\n    value: function distanceToSphere(sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(point, target) {\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n    }\n  }, {\n    key: \"intersectLine\",\n    value: function intersectLine(line, target) {\n      var direction = line.delta(_vector1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return target.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return null;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return null;\n      }\n\n      return target.copy(direction).multiplyScalar(t).add(line.start);\n    }\n  }, {\n    key: \"intersectsLine\",\n    value: function intersectsLine(line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return box.intersectsPlane(this);\n    }\n  }, {\n    key: \"intersectsSphere\",\n    value: function intersectsSphere(sphere) {\n      return sphere.intersectsPlane(this);\n    }\n  }, {\n    key: \"coplanarPoint\",\n    value: function coplanarPoint(target) {\n      return target.copy(this.normal).multiplyScalar(-this.constant);\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix, optionalNormalMatrix) {\n      var normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n      var referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(offset) {\n      this.constant -= offset.dot(this.normal);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Plane;\n}();\n\nvar _sphere$2 = /*@__PURE__*/new Sphere();\n\nvar _vector$7 = /*@__PURE__*/new Vector3();\n\nvar Frustum = /*#__PURE__*/function () {\n  function Frustum() {\n    var p0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Plane();\n    var p1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Plane();\n    var p2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Plane();\n    var p3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Plane();\n    var p4 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Plane();\n    var p5 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Plane();\n\n    _classCallCheck(this, Frustum);\n\n    this.planes = [p0, p1, p2, p3, p4, p5];\n  }\n\n  _createClass(Frustum, [{\n    key: \"set\",\n    value: function set(p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setFromProjectionMatrix\",\n    value: function setFromProjectionMatrix(m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    }\n  }, {\n    key: \"intersectsObject\",\n    value: function intersectsObject(object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n      return this.intersectsSphere(_sphere$2);\n    }\n  }, {\n    key: \"intersectsSprite\",\n    value: function intersectsSprite(sprite) {\n      _sphere$2.center.set(0, 0, 0);\n\n      _sphere$2.radius = 0.7071067811865476;\n\n      _sphere$2.applyMatrix4(sprite.matrixWorld);\n\n      return this.intersectsSphere(_sphere$2);\n    }\n  }, {\n    key: \"intersectsSphere\",\n    value: function intersectsSphere(sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i]; // corner at max distance\n\n        _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n        if (plane.distanceToPoint(_vector$7) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Frustum;\n}();\n\nfunction WebGLAnimation() {\n  var context = null;\n  var isAnimating = false;\n  var animationLoop = null;\n  var requestId = null;\n\n  function onAnimationFrame(time, frame) {\n    animationLoop(time, frame);\n    requestId = context.requestAnimationFrame(onAnimationFrame);\n  }\n\n  return {\n    start: function start() {\n      if (isAnimating === true) return;\n      if (animationLoop === null) return;\n      requestId = context.requestAnimationFrame(onAnimationFrame);\n      isAnimating = true;\n    },\n    stop: function stop() {\n      context.cancelAnimationFrame(requestId);\n      isAnimating = false;\n    },\n    setAnimationLoop: function setAnimationLoop(callback) {\n      animationLoop = callback;\n    },\n    setContext: function setContext(value) {\n      context = value;\n    }\n  };\n}\n\nfunction WebGLAttributes(gl, capabilities) {\n  var isWebGL2 = capabilities.isWebGL2;\n  var buffers = new WeakMap();\n\n  function createBuffer(attribute, bufferType) {\n    var array = attribute.array;\n    var usage = attribute.usage;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, buffer);\n    gl.bufferData(bufferType, array, usage);\n    attribute.onUploadCallback();\n    var type;\n\n    if (array instanceof Float32Array) {\n      type = 5126;\n    } else if (array instanceof Uint16Array) {\n      if (attribute.isFloat16BufferAttribute) {\n        if (isWebGL2) {\n          type = 5131;\n        } else {\n          throw new Error('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n        }\n      } else {\n        type = 5123;\n      }\n    } else if (array instanceof Int16Array) {\n      type = 5122;\n    } else if (array instanceof Uint32Array) {\n      type = 5125;\n    } else if (array instanceof Int32Array) {\n      type = 5124;\n    } else if (array instanceof Int8Array) {\n      type = 5120;\n    } else if (array instanceof Uint8Array) {\n      type = 5121;\n    } else if (array instanceof Uint8ClampedArray) {\n      type = 5121;\n    } else {\n      throw new Error('THREE.WebGLAttributes: Unsupported buffer data format: ' + array);\n    }\n\n    return {\n      buffer: buffer,\n      type: type,\n      bytesPerElement: array.BYTES_PER_ELEMENT,\n      version: attribute.version\n    };\n  }\n\n  function updateBuffer(buffer, attribute, bufferType) {\n    var array = attribute.array;\n    var updateRange = attribute.updateRange;\n    gl.bindBuffer(bufferType, buffer);\n\n    if (updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, array);\n    } else {\n      if (isWebGL2) {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n      }\n\n      updateRange.count = -1; // reset range\n    }\n  } //\n\n\n  function get(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    return buffers.get(attribute);\n  }\n\n  function remove(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers.get(attribute);\n\n    if (data) {\n      gl.deleteBuffer(data.buffer);\n      buffers.delete(attribute);\n    }\n  }\n\n  function update(attribute, bufferType) {\n    if (attribute.isGLBufferAttribute) {\n      var cached = buffers.get(attribute);\n\n      if (!cached || cached.version < attribute.version) {\n        buffers.set(attribute, {\n          buffer: attribute.buffer,\n          type: attribute.type,\n          bytesPerElement: attribute.elementSize,\n          version: attribute.version\n        });\n      }\n\n      return;\n    }\n\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers.get(attribute);\n\n    if (data === undefined) {\n      buffers.set(attribute, createBuffer(attribute, bufferType));\n    } else if (data.version < attribute.version) {\n      updateBuffer(data.buffer, attribute, bufferType);\n      data.version = attribute.version;\n    }\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update\n  };\n}\n\nvar PlaneGeometry = /*#__PURE__*/function (_BufferGeometry2) {\n  _inherits(PlaneGeometry, _BufferGeometry2);\n\n  var _super30 = _createSuper(PlaneGeometry);\n\n  function PlaneGeometry() {\n    var _this22;\n\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var widthSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, PlaneGeometry);\n\n    _this22 = _super30.call(this);\n    _this22.type = 'PlaneGeometry';\n    _this22.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments);\n    var gridY = Math.floor(heightSegments);\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY; //\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n\n    for (var iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (var ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    }\n\n    for (var _iy2 = 0; _iy2 < gridY; _iy2++) {\n      for (var _ix2 = 0; _ix2 < gridX; _ix2++) {\n        var a = _ix2 + gridX1 * _iy2;\n        var b = _ix2 + gridX1 * (_iy2 + 1);\n        var c = _ix2 + 1 + gridX1 * (_iy2 + 1);\n        var d = _ix2 + 1 + gridX1 * _iy2;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    _this22.setIndex(indices);\n\n    _this22.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this22.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this22.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this22;\n  }\n\n  _createClass(PlaneGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n    }\n  }]);\n\n  return PlaneGeometry;\n}(BufferGeometry);\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\nconst mat3 XYZ_TO_REC709 = mat3(\\n    3.2404542, -0.9692660,  0.0556434,\\n   -1.5371385,  1.8760108, -0.2040259,\\n   -0.4985314,  0.0415560,  1.0572252\\n);\\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n   vec3 sqrtF0 = sqrt( fresnel0 );\\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n}\\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n}\\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n}\\nvec3 evalSensitivity( float OPD, vec3 shift ) {\\n   float phase = 2.0 * PI * OPD * 1.0e-9;\\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\\n   xyz /= 1.0685e-7;\\n   vec3 srgb = XYZ_TO_REC709 * xyz;\\n   return srgb;\\n}\\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n   vec3 I;\\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\\n   if ( cosTheta2Sq < 0.0 ) {\\n       return vec3( 1.0 );\\n   }\\n   float cosTheta2 = sqrt( cosTheta2Sq );\\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n   float R21 = R12;\\n   float T121 = 1.0 - R12;\\n   float phi12 = 0.0;\\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n   float phi21 = PI - phi12;\\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n   vec3 phi23 = vec3( 0.0 );\\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n   vec3 phi = vec3( phi21 ) + phi23;\\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n   vec3 r123 = sqrt( R123 );\\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n   vec3 C0 = R12 + Rs;\\n   I = C0;\\n   vec3 Cm = Rs - T121;\\n   for ( int m = 1; m <= 2; ++m ) {\\n       Cm *= r123;\\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n       I += Cm * Sm;\\n   }\\n   return max( I, vec3( 0.0 ) );\\n}\\n#endif\";\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\nif ( material.iridescenceThickness == 0.0 ) {\\n\\tmaterial.iridescence = 0.0;\\n} else {\\n\\tmaterial.iridescence = saturate( material.iridescence );\\n}\\nif ( material.iridescence > 0.0 ) {\\n\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\nvar vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\nvar fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\nvar vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\nvar fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\nvar vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\nvar fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\nvar vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\nvar fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\nvar vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\nvar fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\nvar vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\nvar vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\nvar fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\nvar fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\nvar vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\nvar fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\nvar vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\nvar vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\nvar vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\nvar fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\nvar ShaderChunk = {\n  alphamap_fragment: alphamap_fragment,\n  alphamap_pars_fragment: alphamap_pars_fragment,\n  alphatest_fragment: alphatest_fragment,\n  alphatest_pars_fragment: alphatest_pars_fragment,\n  aomap_fragment: aomap_fragment,\n  aomap_pars_fragment: aomap_pars_fragment,\n  begin_vertex: begin_vertex,\n  beginnormal_vertex: beginnormal_vertex,\n  bsdfs: bsdfs,\n  iridescence_fragment: iridescence_fragment,\n  bumpmap_pars_fragment: bumpmap_pars_fragment,\n  clipping_planes_fragment: clipping_planes_fragment,\n  clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n  clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n  clipping_planes_vertex: clipping_planes_vertex,\n  color_fragment: color_fragment,\n  color_pars_fragment: color_pars_fragment,\n  color_pars_vertex: color_pars_vertex,\n  color_vertex: color_vertex,\n  common: common,\n  cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n  defaultnormal_vertex: defaultnormal_vertex,\n  displacementmap_pars_vertex: displacementmap_pars_vertex,\n  displacementmap_vertex: displacementmap_vertex,\n  emissivemap_fragment: emissivemap_fragment,\n  emissivemap_pars_fragment: emissivemap_pars_fragment,\n  encodings_fragment: encodings_fragment,\n  encodings_pars_fragment: encodings_pars_fragment,\n  envmap_fragment: envmap_fragment,\n  envmap_common_pars_fragment: envmap_common_pars_fragment,\n  envmap_pars_fragment: envmap_pars_fragment,\n  envmap_pars_vertex: envmap_pars_vertex,\n  envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n  envmap_vertex: envmap_vertex,\n  fog_vertex: fog_vertex,\n  fog_pars_vertex: fog_pars_vertex,\n  fog_fragment: fog_fragment,\n  fog_pars_fragment: fog_pars_fragment,\n  gradientmap_pars_fragment: gradientmap_pars_fragment,\n  lightmap_fragment: lightmap_fragment,\n  lightmap_pars_fragment: lightmap_pars_fragment,\n  lights_lambert_vertex: lights_lambert_vertex,\n  lights_pars_begin: lights_pars_begin,\n  lights_toon_fragment: lights_toon_fragment,\n  lights_toon_pars_fragment: lights_toon_pars_fragment,\n  lights_phong_fragment: lights_phong_fragment,\n  lights_phong_pars_fragment: lights_phong_pars_fragment,\n  lights_physical_fragment: lights_physical_fragment,\n  lights_physical_pars_fragment: lights_physical_pars_fragment,\n  lights_fragment_begin: lights_fragment_begin,\n  lights_fragment_maps: lights_fragment_maps,\n  lights_fragment_end: lights_fragment_end,\n  logdepthbuf_fragment: logdepthbuf_fragment,\n  logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n  logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n  logdepthbuf_vertex: logdepthbuf_vertex,\n  map_fragment: map_fragment,\n  map_pars_fragment: map_pars_fragment,\n  map_particle_fragment: map_particle_fragment,\n  map_particle_pars_fragment: map_particle_pars_fragment,\n  metalnessmap_fragment: metalnessmap_fragment,\n  metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n  morphcolor_vertex: morphcolor_vertex,\n  morphnormal_vertex: morphnormal_vertex,\n  morphtarget_pars_vertex: morphtarget_pars_vertex,\n  morphtarget_vertex: morphtarget_vertex,\n  normal_fragment_begin: normal_fragment_begin,\n  normal_fragment_maps: normal_fragment_maps,\n  normal_pars_fragment: normal_pars_fragment,\n  normal_pars_vertex: normal_pars_vertex,\n  normal_vertex: normal_vertex,\n  normalmap_pars_fragment: normalmap_pars_fragment,\n  clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n  clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n  clearcoat_pars_fragment: clearcoat_pars_fragment,\n  iridescence_pars_fragment: iridescence_pars_fragment,\n  output_fragment: output_fragment,\n  packing: packing,\n  premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n  project_vertex: project_vertex,\n  dithering_fragment: dithering_fragment,\n  dithering_pars_fragment: dithering_pars_fragment,\n  roughnessmap_fragment: roughnessmap_fragment,\n  roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n  shadowmap_pars_fragment: shadowmap_pars_fragment,\n  shadowmap_pars_vertex: shadowmap_pars_vertex,\n  shadowmap_vertex: shadowmap_vertex,\n  shadowmask_pars_fragment: shadowmask_pars_fragment,\n  skinbase_vertex: skinbase_vertex,\n  skinning_pars_vertex: skinning_pars_vertex,\n  skinning_vertex: skinning_vertex,\n  skinnormal_vertex: skinnormal_vertex,\n  specularmap_fragment: specularmap_fragment,\n  specularmap_pars_fragment: specularmap_pars_fragment,\n  tonemapping_fragment: tonemapping_fragment,\n  tonemapping_pars_fragment: tonemapping_pars_fragment,\n  transmission_fragment: transmission_fragment,\n  transmission_pars_fragment: transmission_pars_fragment,\n  uv_pars_fragment: uv_pars_fragment,\n  uv_pars_vertex: uv_pars_vertex,\n  uv_vertex: uv_vertex,\n  uv2_pars_fragment: uv2_pars_fragment,\n  uv2_pars_vertex: uv2_pars_vertex,\n  uv2_vertex: uv2_vertex,\n  worldpos_vertex: worldpos_vertex,\n  background_vert: vertex$g,\n  background_frag: fragment$g,\n  cube_vert: vertex$f,\n  cube_frag: fragment$f,\n  depth_vert: vertex$e,\n  depth_frag: fragment$e,\n  distanceRGBA_vert: vertex$d,\n  distanceRGBA_frag: fragment$d,\n  equirect_vert: vertex$c,\n  equirect_frag: fragment$c,\n  linedashed_vert: vertex$b,\n  linedashed_frag: fragment$b,\n  meshbasic_vert: vertex$a,\n  meshbasic_frag: fragment$a,\n  meshlambert_vert: vertex$9,\n  meshlambert_frag: fragment$9,\n  meshmatcap_vert: vertex$8,\n  meshmatcap_frag: fragment$8,\n  meshnormal_vert: vertex$7,\n  meshnormal_frag: fragment$7,\n  meshphong_vert: vertex$6,\n  meshphong_frag: fragment$6,\n  meshphysical_vert: vertex$5,\n  meshphysical_frag: fragment$5,\n  meshtoon_vert: vertex$4,\n  meshtoon_frag: fragment$4,\n  points_vert: vertex$3,\n  points_frag: fragment$3,\n  shadow_vert: vertex$2,\n  shadow_frag: fragment$2,\n  sprite_vert: vertex$1,\n  sprite_frag: fragment$1\n};\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n  common: {\n    diffuse: {\n      value: /*@__PURE__*/new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    uvTransform: {\n      value: /*@__PURE__*/new Matrix3()\n    },\n    uv2Transform: {\n      value: /*@__PURE__*/new Matrix3()\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    }\n  },\n  specularmap: {\n    specularMap: {\n      value: null\n    }\n  },\n  envmap: {\n    envMap: {\n      value: null\n    },\n    flipEnvMap: {\n      value: -1\n    },\n    reflectivity: {\n      value: 1.0\n    },\n    // basic, lambert, phong\n    ior: {\n      value: 1.5\n    },\n    // physical\n    refractionRatio: {\n      value: 0.98\n    } // basic, lambert, phong\n\n  },\n  aomap: {\n    aoMap: {\n      value: null\n    },\n    aoMapIntensity: {\n      value: 1\n    }\n  },\n  lightmap: {\n    lightMap: {\n      value: null\n    },\n    lightMapIntensity: {\n      value: 1\n    }\n  },\n  emissivemap: {\n    emissiveMap: {\n      value: null\n    }\n  },\n  bumpmap: {\n    bumpMap: {\n      value: null\n    },\n    bumpScale: {\n      value: 1\n    }\n  },\n  normalmap: {\n    normalMap: {\n      value: null\n    },\n    normalScale: {\n      value: /*@__PURE__*/new Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    displacementMap: {\n      value: null\n    },\n    displacementScale: {\n      value: 1\n    },\n    displacementBias: {\n      value: 0\n    }\n  },\n  roughnessmap: {\n    roughnessMap: {\n      value: null\n    }\n  },\n  metalnessmap: {\n    metalnessMap: {\n      value: null\n    }\n  },\n  gradientmap: {\n    gradientMap: {\n      value: null\n    }\n  },\n  fog: {\n    fogDensity: {\n      value: 0.00025\n    },\n    fogNear: {\n      value: 1\n    },\n    fogFar: {\n      value: 2000\n    },\n    fogColor: {\n      value: /*@__PURE__*/new Color(0xffffff)\n    }\n  },\n  lights: {\n    ambientLightColor: {\n      value: []\n    },\n    lightProbe: {\n      value: []\n    },\n    directionalLights: {\n      value: [],\n      properties: {\n        direction: {},\n        color: {}\n      }\n    },\n    directionalLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    directionalShadowMap: {\n      value: []\n    },\n    directionalShadowMatrix: {\n      value: []\n    },\n    spotLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        direction: {},\n        distance: {},\n        coneCos: {},\n        penumbraCos: {},\n        decay: {}\n      }\n    },\n    spotLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    spotShadowMap: {\n      value: []\n    },\n    spotShadowMatrix: {\n      value: []\n    },\n    pointLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        decay: {},\n        distance: {}\n      }\n    },\n    pointLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n        shadowCameraNear: {},\n        shadowCameraFar: {}\n      }\n    },\n    pointShadowMap: {\n      value: []\n    },\n    pointShadowMatrix: {\n      value: []\n    },\n    hemisphereLights: {\n      value: [],\n      properties: {\n        direction: {},\n        skyColor: {},\n        groundColor: {}\n      }\n    },\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        width: {},\n        height: {}\n      }\n    },\n    ltc_1: {\n      value: null\n    },\n    ltc_2: {\n      value: null\n    }\n  },\n  points: {\n    diffuse: {\n      value: /*@__PURE__*/new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    size: {\n      value: 1.0\n    },\n    scale: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    },\n    uvTransform: {\n      value: /*@__PURE__*/new Matrix3()\n    }\n  },\n  sprite: {\n    diffuse: {\n      value: /*@__PURE__*/new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    center: {\n      value: /*@__PURE__*/new Vector2(0.5, 0.5)\n    },\n    rotation: {\n      value: 0.0\n    },\n    map: {\n      value: null\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    },\n    uvTransform: {\n      value: /*@__PURE__*/new Matrix3()\n    }\n  }\n};\nvar ShaderLib = {\n  basic: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      },\n      specular: {\n        value: /*@__PURE__*/new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      },\n      roughness: {\n        value: 1.0\n      },\n      metalness: {\n        value: 0.0\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  toon: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshtoon_vert,\n    fragmentShader: ShaderChunk.meshtoon_frag\n  },\n  matcap: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n      matcap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshmatcap_vert,\n    fragmentShader: ShaderChunk.meshmatcap_frag\n  },\n  points: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshnormal_vert,\n    fragmentShader: ShaderChunk.meshnormal_frag\n  },\n  sprite: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n    vertexShader: ShaderChunk.sprite_vert,\n    fragmentShader: ShaderChunk.sprite_frag\n  },\n  background: {\n    uniforms: {\n      uvTransform: {\n        value: /*@__PURE__*/new Matrix3()\n      },\n      t2D: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.background_vert,\n    fragmentShader: ShaderChunk.background_frag\n  },\n  cube: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.envmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: /*@__PURE__*/new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n      color: {\n        value: /*@__PURE__*/new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: /*@__PURE__*/mergeUniforms([ShaderLib.standard.uniforms, {\n    clearcoat: {\n      value: 0\n    },\n    clearcoatMap: {\n      value: null\n    },\n    clearcoatRoughness: {\n      value: 0\n    },\n    clearcoatRoughnessMap: {\n      value: null\n    },\n    clearcoatNormalScale: {\n      value: /*@__PURE__*/new Vector2(1, 1)\n    },\n    clearcoatNormalMap: {\n      value: null\n    },\n    iridescence: {\n      value: 0\n    },\n    iridescenceMap: {\n      value: null\n    },\n    iridescenceIOR: {\n      value: 1.3\n    },\n    iridescenceThicknessMinimum: {\n      value: 100\n    },\n    iridescenceThicknessMaximum: {\n      value: 400\n    },\n    iridescenceThicknessMap: {\n      value: null\n    },\n    sheen: {\n      value: 0\n    },\n    sheenColor: {\n      value: /*@__PURE__*/new Color(0x000000)\n    },\n    sheenColorMap: {\n      value: null\n    },\n    sheenRoughness: {\n      value: 1\n    },\n    sheenRoughnessMap: {\n      value: null\n    },\n    transmission: {\n      value: 0\n    },\n    transmissionMap: {\n      value: null\n    },\n    transmissionSamplerSize: {\n      value: /*@__PURE__*/new Vector2()\n    },\n    transmissionSamplerMap: {\n      value: null\n    },\n    thickness: {\n      value: 0\n    },\n    thicknessMap: {\n      value: null\n    },\n    attenuationDistance: {\n      value: 0\n    },\n    attenuationColor: {\n      value: /*@__PURE__*/new Color(0x000000)\n    },\n    specularIntensity: {\n      value: 1\n    },\n    specularIntensityMap: {\n      value: null\n    },\n    specularColor: {\n      value: /*@__PURE__*/new Color(1, 1, 1)\n    },\n    specularColorMap: {\n      value: null\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\n\nfunction WebGLBackground(renderer, cubemaps, state, objects, alpha, premultipliedAlpha) {\n  var clearColor = new Color(0x000000);\n  var clearAlpha = alpha === true ? 0 : 1;\n  var planeMesh;\n  var boxMesh;\n  var currentBackground = null;\n  var currentBackgroundVersion = 0;\n  var currentTonemapping = null;\n\n  function render(renderList, scene) {\n    var forceClear = false;\n    var background = scene.isScene === true ? scene.background : null;\n\n    if (background && background.isTexture) {\n      background = cubemaps.get(background);\n    } // Ignore background in AR\n    // TODO: Reconsider this.\n\n\n    var xr = renderer.xr;\n    var session = xr.getSession && xr.getSession();\n\n    if (session && session.environmentBlendMode === 'additive') {\n      background = null;\n    }\n\n    if (background === null) {\n      setClear(clearColor, clearAlpha);\n    } else if (background && background.isColor) {\n      setClear(background, 1);\n      forceClear = true;\n    }\n\n    if (renderer.autoClear || forceClear) {\n      renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    }\n\n    if (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n      if (boxMesh === undefined) {\n        boxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n          name: 'BackgroundCubeMaterial',\n          uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n          vertexShader: ShaderLib.cube.vertexShader,\n          fragmentShader: ShaderLib.cube.fragmentShader,\n          side: BackSide,\n          depthTest: false,\n          depthWrite: false,\n          fog: false\n        }));\n        boxMesh.geometry.deleteAttribute('normal');\n        boxMesh.geometry.deleteAttribute('uv');\n\n        boxMesh.onBeforeRender = function (renderer, scene, camera) {\n          this.matrixWorld.copyPosition(camera.matrixWorld);\n        }; // enable code injection for non-built-in material\n\n\n        Object.defineProperty(boxMesh.material, 'envMap', {\n          get: function get() {\n            return this.uniforms.envMap.value;\n          }\n        });\n        objects.update(boxMesh);\n      }\n\n      boxMesh.material.uniforms.envMap.value = background;\n      boxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\n\n      if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n        boxMesh.material.needsUpdate = true;\n        currentBackground = background;\n        currentBackgroundVersion = background.version;\n        currentTonemapping = renderer.toneMapping;\n      }\n\n      boxMesh.layers.enableAll(); // push to the pre-sorted opaque render list\n\n      renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n    } else if (background && background.isTexture) {\n      if (planeMesh === undefined) {\n        planeMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n          name: 'BackgroundMaterial',\n          uniforms: cloneUniforms(ShaderLib.background.uniforms),\n          vertexShader: ShaderLib.background.vertexShader,\n          fragmentShader: ShaderLib.background.fragmentShader,\n          side: FrontSide,\n          depthTest: false,\n          depthWrite: false,\n          fog: false\n        }));\n        planeMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n        Object.defineProperty(planeMesh.material, 'map', {\n          get: function get() {\n            return this.uniforms.t2D.value;\n          }\n        });\n        objects.update(planeMesh);\n      }\n\n      planeMesh.material.uniforms.t2D.value = background;\n\n      if (background.matrixAutoUpdate === true) {\n        background.updateMatrix();\n      }\n\n      planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n      if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n        planeMesh.material.needsUpdate = true;\n        currentBackground = background;\n        currentBackgroundVersion = background.version;\n        currentTonemapping = renderer.toneMapping;\n      }\n\n      planeMesh.layers.enableAll(); // push to the pre-sorted opaque render list\n\n      renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n    }\n  }\n\n  function setClear(color, alpha) {\n    state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n  }\n\n  return {\n    getClearColor: function getClearColor() {\n      return clearColor;\n    },\n    setClearColor: function setClearColor(color) {\n      var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      clearColor.set(color);\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    getClearAlpha: function getClearAlpha() {\n      return clearAlpha;\n    },\n    setClearAlpha: function setClearAlpha(alpha) {\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    render: render\n  };\n}\n\nfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n  var maxVertexAttributes = gl.getParameter(34921);\n  var extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n  var vaoAvailable = capabilities.isWebGL2 || extension !== null;\n  var bindingStates = {};\n  var defaultState = createBindingState(null);\n  var currentState = defaultState;\n  var forceUpdate = false;\n\n  function setup(object, material, program, geometry, index) {\n    var updateBuffers = false;\n\n    if (vaoAvailable) {\n      var state = getBindingState(geometry, program, material);\n\n      if (currentState !== state) {\n        currentState = state;\n        bindVertexArrayObject(currentState.object);\n      }\n\n      updateBuffers = needsUpdate(object, geometry, program, index);\n      if (updateBuffers) saveCache(object, geometry, program, index);\n    } else {\n      var wireframe = material.wireframe === true;\n\n      if (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n        currentState.geometry = geometry.id;\n        currentState.program = program.id;\n        currentState.wireframe = wireframe;\n        updateBuffers = true;\n      }\n    }\n\n    if (index !== null) {\n      attributes.update(index, 34963);\n    }\n\n    if (updateBuffers || forceUpdate) {\n      forceUpdate = false;\n      setupVertexAttributes(object, material, program, geometry);\n\n      if (index !== null) {\n        gl.bindBuffer(34963, attributes.get(index).buffer);\n      }\n    }\n  }\n\n  function createVertexArrayObject() {\n    if (capabilities.isWebGL2) return gl.createVertexArray();\n    return extension.createVertexArrayOES();\n  }\n\n  function bindVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n    return extension.bindVertexArrayOES(vao);\n  }\n\n  function deleteVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n    return extension.deleteVertexArrayOES(vao);\n  }\n\n  function getBindingState(geometry, program, material) {\n    var wireframe = material.wireframe === true;\n    var programMap = bindingStates[geometry.id];\n\n    if (programMap === undefined) {\n      programMap = {};\n      bindingStates[geometry.id] = programMap;\n    }\n\n    var stateMap = programMap[program.id];\n\n    if (stateMap === undefined) {\n      stateMap = {};\n      programMap[program.id] = stateMap;\n    }\n\n    var state = stateMap[wireframe];\n\n    if (state === undefined) {\n      state = createBindingState(createVertexArrayObject());\n      stateMap[wireframe] = state;\n    }\n\n    return state;\n  }\n\n  function createBindingState(vao) {\n    var newAttributes = [];\n    var enabledAttributes = [];\n    var attributeDivisors = [];\n\n    for (var i = 0; i < maxVertexAttributes; i++) {\n      newAttributes[i] = 0;\n      enabledAttributes[i] = 0;\n      attributeDivisors[i] = 0;\n    }\n\n    return {\n      // for backward compatibility on non-VAO support browser\n      geometry: null,\n      program: null,\n      wireframe: false,\n      newAttributes: newAttributes,\n      enabledAttributes: enabledAttributes,\n      attributeDivisors: attributeDivisors,\n      object: vao,\n      attributes: {},\n      index: null\n    };\n  }\n\n  function needsUpdate(object, geometry, program, index) {\n    var cachedAttributes = currentState.attributes;\n    var geometryAttributes = geometry.attributes;\n    var attributesNum = 0;\n    var programAttributes = program.getAttributes();\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        var cachedAttribute = cachedAttributes[name];\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n        }\n\n        if (cachedAttribute === undefined) return true;\n        if (cachedAttribute.attribute !== geometryAttribute) return true;\n        if (geometryAttribute && cachedAttribute.data !== geometryAttribute.data) return true;\n        attributesNum++;\n      }\n    }\n\n    if (currentState.attributesNum !== attributesNum) return true;\n    if (currentState.index !== index) return true;\n    return false;\n  }\n\n  function saveCache(object, geometry, program, index) {\n    var cache = {};\n    var attributes = geometry.attributes;\n    var attributesNum = 0;\n    var programAttributes = program.getAttributes();\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        var attribute = attributes[name];\n\n        if (attribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) attribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) attribute = object.instanceColor;\n        }\n\n        var data = {};\n        data.attribute = attribute;\n\n        if (attribute && attribute.data) {\n          data.data = attribute.data;\n        }\n\n        cache[name] = data;\n        attributesNum++;\n      }\n    }\n\n    currentState.attributes = cache;\n    currentState.attributesNum = attributesNum;\n    currentState.index = index;\n  }\n\n  function initAttributes() {\n    var newAttributes = currentState.newAttributes;\n\n    for (var i = 0, il = newAttributes.length; i < il; i++) {\n      newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    enableAttributeAndDivisor(attribute, 0);\n  }\n\n  function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n    var newAttributes = currentState.newAttributes;\n    var enabledAttributes = currentState.enabledAttributes;\n    var attributeDivisors = currentState.attributeDivisors;\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      var _extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\n      _extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    var newAttributes = currentState.newAttributes;\n    var enabledAttributes = currentState.enabledAttributes;\n\n    for (var i = 0, il = enabledAttributes.length; i < il; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n    if (capabilities.isWebGL2 === true && (type === 5124 || type === 5125)) {\n      gl.vertexAttribIPointer(index, size, type, stride, offset);\n    } else {\n      gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n  }\n\n  function setupVertexAttributes(object, material, program, geometry) {\n    if (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n      if (extensions.get('ANGLE_instanced_arrays') === null) return;\n    }\n\n    initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n        }\n\n        if (geometryAttribute !== undefined) {\n          var normalized = geometryAttribute.normalized;\n          var size = geometryAttribute.itemSize;\n          var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n          if (attribute === undefined) continue;\n          var buffer = attribute.buffer;\n          var type = attribute.type;\n          var bytesPerElement = attribute.bytesPerElement;\n\n          if (geometryAttribute.isInterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data.isInstancedInterleavedBuffer) {\n              for (var i = 0; i < programAttribute.locationSize; i++) {\n                enableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\n              }\n\n              if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              for (var _i18 = 0; _i18 < programAttribute.locationSize; _i18++) {\n                enableAttribute(programAttribute.location + _i18);\n              }\n            }\n\n            gl.bindBuffer(34962, buffer);\n\n            for (var _i19 = 0; _i19 < programAttribute.locationSize; _i19++) {\n              vertexAttribPointer(programAttribute.location + _i19, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * _i19) * bytesPerElement);\n            }\n          } else {\n            if (geometryAttribute.isInstancedBufferAttribute) {\n              for (var _i20 = 0; _i20 < programAttribute.locationSize; _i20++) {\n                enableAttributeAndDivisor(programAttribute.location + _i20, geometryAttribute.meshPerAttribute);\n              }\n\n              if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              for (var _i21 = 0; _i21 < programAttribute.locationSize; _i21++) {\n                enableAttribute(programAttribute.location + _i21);\n              }\n            }\n\n            gl.bindBuffer(34962, buffer);\n\n            for (var _i22 = 0; _i22 < programAttribute.locationSize; _i22++) {\n              vertexAttribPointer(programAttribute.location + _i22, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * _i22 * bytesPerElement);\n            }\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var _value2 = materialDefaultAttributeValues[name];\n\n          if (_value2 !== undefined) {\n            switch (_value2.length) {\n              case 2:\n                gl.vertexAttrib2fv(programAttribute.location, _value2);\n                break;\n\n              case 3:\n                gl.vertexAttrib3fv(programAttribute.location, _value2);\n                break;\n\n              case 4:\n                gl.vertexAttrib4fv(programAttribute.location, _value2);\n                break;\n\n              default:\n                gl.vertexAttrib1fv(programAttribute.location, _value2);\n            }\n          }\n        }\n      }\n    }\n\n    disableUnusedAttributes();\n  }\n\n  function dispose() {\n    reset();\n\n    for (var geometryId in bindingStates) {\n      var programMap = bindingStates[geometryId];\n\n      for (var programId in programMap) {\n        var stateMap = programMap[programId];\n\n        for (var wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[programId];\n      }\n\n      delete bindingStates[geometryId];\n    }\n  }\n\n  function releaseStatesOfGeometry(geometry) {\n    if (bindingStates[geometry.id] === undefined) return;\n    var programMap = bindingStates[geometry.id];\n\n    for (var programId in programMap) {\n      var stateMap = programMap[programId];\n\n      for (var wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[programId];\n    }\n\n    delete bindingStates[geometry.id];\n  }\n\n  function releaseStatesOfProgram(program) {\n    for (var geometryId in bindingStates) {\n      var programMap = bindingStates[geometryId];\n      if (programMap[program.id] === undefined) continue;\n      var stateMap = programMap[program.id];\n\n      for (var wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[program.id];\n    }\n  }\n\n  function reset() {\n    resetDefaultState();\n    forceUpdate = true;\n    if (currentState === defaultState) return;\n    currentState = defaultState;\n    bindVertexArrayObject(currentState.object);\n  } // for backward-compatibility\n\n\n  function resetDefaultState() {\n    defaultState.geometry = null;\n    defaultState.program = null;\n    defaultState.wireframe = false;\n  }\n\n  return {\n    setup: setup,\n    reset: reset,\n    resetDefaultState: resetDefaultState,\n    dispose: dispose,\n    releaseStatesOfGeometry: releaseStatesOfGeometry,\n    releaseStatesOfProgram: releaseStatesOfProgram,\n    initAttributes: initAttributes,\n    enableAttribute: enableAttribute,\n    disableUnusedAttributes: disableUnusedAttributes\n  };\n}\n\nfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n  var isWebGL2 = capabilities.isWebGL2;\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    gl.drawArrays(mode, start, count);\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n    var extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = 'drawArraysInstanced';\n    } else {\n      extension = extensions.get('ANGLE_instanced_arrays');\n      methodName = 'drawArraysInstancedANGLE';\n\n      if (extension === null) {\n        console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    extension[methodName](mode, start, count, primcount);\n    info.update(count, mode, primcount);\n  } //\n\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  var maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n\n    if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl.getShaderPrecisionFormat(35632, 36338).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl.getShaderPrecisionFormat(35632, 36337).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n  var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  var maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n\n  var drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n  var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n  var maxTextures = gl.getParameter(34930);\n  var maxVertexTextures = gl.getParameter(35660);\n  var maxTextureSize = gl.getParameter(3379);\n  var maxCubemapSize = gl.getParameter(34076);\n  var maxAttributes = gl.getParameter(34921);\n  var maxVertexUniforms = gl.getParameter(36347);\n  var maxVaryings = gl.getParameter(36348);\n  var maxFragmentUniforms = gl.getParameter(36349);\n  var vertexTextures = maxVertexTextures > 0;\n  var floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n  var floatVertexTextures = vertexTextures && floatFragmentTextures;\n  var maxSamples = isWebGL2 ? gl.getParameter(36183) : 0;\n  return {\n    isWebGL2: isWebGL2,\n    drawBuffers: drawBuffers,\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures,\n    maxSamples: maxSamples\n  };\n}\n\nfunction WebGLClipping(properties) {\n  var scope = this;\n  var globalState = null,\n      numGlobalPlanes = 0,\n      localClippingEnabled = false,\n      renderingShadows = false;\n  var plane = new Plane(),\n      viewNormalMatrix = new Matrix3(),\n      uniform = {\n    value: null,\n    needsUpdate: false\n  };\n  this.uniform = uniform;\n  this.numPlanes = 0;\n  this.numIntersection = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n    // run another frame in order to reset the state:\n    numGlobalPlanes !== 0 || localClippingEnabled;\n    localClippingEnabled = enableLocalClipping;\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (material, camera, useCache) {\n    var planes = material.clippingPlanes,\n        clipIntersection = material.clipIntersection,\n        clipShadows = material.clipShadows;\n    var materialProperties = properties.get(material);\n\n    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n      // there's no local clipping\n      if (renderingShadows) {\n        // there's no global clipping\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n          lGlobal = nGlobal * 4;\n      var dstArray = materialProperties.clippingState || null;\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n      for (var i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      materialProperties.clippingState = dstArray;\n      this.numIntersection = clipIntersection ? this.numPlanes : 0;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n    scope.numIntersection = 0;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    var nPlanes = planes !== null ? planes.length : 0;\n    var dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        var flatSize = dstOffset + nPlanes * 4,\n            viewMatrix = camera.matrixWorldInverse;\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    scope.numIntersection = 0;\n    return dstArray;\n  }\n}\n\nfunction WebGLCubeMaps(renderer) {\n  var cubemaps = new WeakMap();\n\n  function mapTextureMapping(texture, mapping) {\n    if (mapping === EquirectangularReflectionMapping) {\n      texture.mapping = CubeReflectionMapping;\n    } else if (mapping === EquirectangularRefractionMapping) {\n      texture.mapping = CubeRefractionMapping;\n    }\n\n    return texture;\n  }\n\n  function get(texture) {\n    if (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n      var mapping = texture.mapping;\n\n      if (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n        if (cubemaps.has(texture)) {\n          var cubemap = cubemaps.get(texture).texture;\n          return mapTextureMapping(cubemap, texture.mapping);\n        } else {\n          var image = texture.image;\n\n          if (image && image.height > 0) {\n            var renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n            renderTarget.fromEquirectangularTexture(renderer, texture);\n            cubemaps.set(texture, renderTarget);\n            texture.addEventListener('dispose', onTextureDispose);\n            return mapTextureMapping(renderTarget.texture, texture.mapping);\n          } else {\n            // image not yet ready. try the conversion next frame\n            return null;\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    var cubemap = cubemaps.get(texture);\n\n    if (cubemap !== undefined) {\n      cubemaps.delete(texture);\n      cubemap.dispose();\n    }\n  }\n\n  function dispose() {\n    cubemaps = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n\nvar OrthographicCamera = /*#__PURE__*/function (_Camera2) {\n  _inherits(OrthographicCamera, _Camera2);\n\n  var _super31 = _createSuper(OrthographicCamera);\n\n  function OrthographicCamera() {\n    var _this23;\n\n    var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    var right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var bottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    var near = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.1;\n    var far = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2000;\n\n    _classCallCheck(this, OrthographicCamera);\n\n    _this23 = _super31.call(this);\n    _this23.isOrthographicCamera = true;\n    _this23.type = 'OrthographicCamera';\n    _this23.zoom = 1;\n    _this23.view = null;\n    _this23.left = left;\n    _this23.right = right;\n    _this23.top = top;\n    _this23.bottom = bottom;\n    _this23.near = near;\n    _this23.far = far;\n\n    _this23.updateProjectionMatrix();\n\n    return _this23;\n  }\n\n  _createClass(OrthographicCamera, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(OrthographicCamera.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    }\n  }, {\n    key: \"setViewOffset\",\n    value: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    }\n  }, {\n    key: \"clearViewOffset\",\n    value: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    }\n  }, {\n    key: \"updateProjectionMatrix\",\n    value: function updateProjectionMatrix() {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null && this.view.enabled) {\n        var scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n        var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n        left += scaleW * this.view.offsetX;\n        right = left + scaleW * this.view.width;\n        top -= scaleH * this.view.offsetY;\n        bottom = top - scaleH * this.view.height;\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(OrthographicCamera.prototype), \"toJSON\", this).call(this, meta);\n\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  }]);\n\n  return OrthographicCamera;\n}(Camera);\n\nvar LOD_MIN = 4; // The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\nvar EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582]; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\n\nvar MAX_SAMPLES = 20;\n\nvar _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\nvar _clearColor = /*@__PURE__*/new Color();\n\nvar _oldTarget = null; // Golden Ratio\n\nvar PHI = (1 + Math.sqrt(5)) / 2;\nvar INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\n\nvar _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nvar PMREMGenerator = /*#__PURE__*/function () {\n  function PMREMGenerator(renderer) {\n    _classCallCheck(this, PMREMGenerator);\n\n    this._renderer = renderer;\n    this._pingPongRenderTarget = null;\n    this._lodMax = 0;\n    this._cubeSize = 0;\n    this._lodPlanes = [];\n    this._sizeLods = [];\n    this._sigmas = [];\n    this._blurMaterial = null;\n    this._cubemapMaterial = null;\n    this._equirectMaterial = null;\n\n    this._compileMaterial(this._blurMaterial);\n  }\n  /**\n   * Generates a PMREM from a supplied Scene, which can be faster than using an\n   * image if networking bandwidth is low. Optional sigma specifies a blur radius\n   * in radians to be applied to the scene before PMREM generation. Optional near\n   * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n   * is placed at the origin).\n   */\n\n\n  _createClass(PMREMGenerator, [{\n    key: \"fromScene\",\n    value: function fromScene(scene) {\n      var sigma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.1;\n      var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;\n      _oldTarget = this._renderer.getRenderTarget();\n\n      this._setSize(256);\n\n      var cubeUVRenderTarget = this._allocateTargets();\n\n      cubeUVRenderTarget.depthBuffer = true;\n\n      this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n      if (sigma > 0) {\n        this._blur(cubeUVRenderTarget, 0, 0, sigma);\n      }\n\n      this._applyPMREM(cubeUVRenderTarget);\n\n      this._cleanup(cubeUVRenderTarget);\n\n      return cubeUVRenderTarget;\n    }\n    /**\n     * Generates a PMREM from an equirectangular texture, which can be either LDR\n     * or HDR. The ideal input image size is 1k (1024 x 512),\n     * as this matches best with the 256 x 256 cubemap output.\n     */\n\n  }, {\n    key: \"fromEquirectangular\",\n    value: function fromEquirectangular(equirectangular) {\n      var renderTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this._fromTexture(equirectangular, renderTarget);\n    }\n    /**\n     * Generates a PMREM from an cubemap texture, which can be either LDR\n     * or HDR. The ideal input cube size is 256 x 256,\n     * as this matches best with the 256 x 256 cubemap output.\n     */\n\n  }, {\n    key: \"fromCubemap\",\n    value: function fromCubemap(cubemap) {\n      var renderTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this._fromTexture(cubemap, renderTarget);\n    }\n    /**\n     * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n     * your texture's network fetch for increased concurrency.\n     */\n\n  }, {\n    key: \"compileCubemapShader\",\n    value: function compileCubemapShader() {\n      if (this._cubemapMaterial === null) {\n        this._cubemapMaterial = _getCubemapMaterial();\n\n        this._compileMaterial(this._cubemapMaterial);\n      }\n    }\n    /**\n     * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n     * your texture's network fetch for increased concurrency.\n     */\n\n  }, {\n    key: \"compileEquirectangularShader\",\n    value: function compileEquirectangularShader() {\n      if (this._equirectMaterial === null) {\n        this._equirectMaterial = _getEquirectMaterial();\n\n        this._compileMaterial(this._equirectMaterial);\n      }\n    }\n    /**\n     * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n     * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n     * one of them will cause any others to also become unusable.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._dispose();\n\n      if (this._cubemapMaterial !== null) this._cubemapMaterial.dispose();\n      if (this._equirectMaterial !== null) this._equirectMaterial.dispose();\n    } // private interface\n\n  }, {\n    key: \"_setSize\",\n    value: function _setSize(cubeSize) {\n      this._lodMax = Math.floor(Math.log2(cubeSize));\n      this._cubeSize = Math.pow(2, this._lodMax);\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      if (this._blurMaterial !== null) this._blurMaterial.dispose();\n      if (this._pingPongRenderTarget !== null) this._pingPongRenderTarget.dispose();\n\n      for (var i = 0; i < this._lodPlanes.length; i++) {\n        this._lodPlanes[i].dispose();\n      }\n    }\n  }, {\n    key: \"_cleanup\",\n    value: function _cleanup(outputTarget) {\n      this._renderer.setRenderTarget(_oldTarget);\n\n      outputTarget.scissorTest = false;\n\n      _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n    }\n  }, {\n    key: \"_fromTexture\",\n    value: function _fromTexture(texture, renderTarget) {\n      if (texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping) {\n        this._setSize(texture.image.length === 0 ? 16 : texture.image[0].width || texture.image[0].image.width);\n      } else {\n        // Equirectangular\n        this._setSize(texture.image.width / 4);\n      }\n\n      _oldTarget = this._renderer.getRenderTarget();\n\n      var cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\n      this._textureToCubeUV(texture, cubeUVRenderTarget);\n\n      this._applyPMREM(cubeUVRenderTarget);\n\n      this._cleanup(cubeUVRenderTarget);\n\n      return cubeUVRenderTarget;\n    }\n  }, {\n    key: \"_allocateTargets\",\n    value: function _allocateTargets() {\n      var width = 3 * Math.max(this._cubeSize, 16 * 7);\n      var height = 4 * this._cubeSize;\n      var params = {\n        magFilter: LinearFilter,\n        minFilter: LinearFilter,\n        generateMipmaps: false,\n        type: HalfFloatType,\n        format: RGBAFormat,\n        encoding: LinearEncoding,\n        depthBuffer: false\n      };\n\n      var cubeUVRenderTarget = _createRenderTarget(width, height, params);\n\n      if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width) {\n        if (this._pingPongRenderTarget !== null) {\n          this._dispose();\n        }\n\n        this._pingPongRenderTarget = _createRenderTarget(width, height, params);\n        var _lodMax = this._lodMax;\n\n        var _createPlanes2 = _createPlanes(_lodMax);\n\n        this._sizeLods = _createPlanes2.sizeLods;\n        this._lodPlanes = _createPlanes2.lodPlanes;\n        this._sigmas = _createPlanes2.sigmas;\n        this._blurMaterial = _getBlurShader(_lodMax, width, height);\n      }\n\n      return cubeUVRenderTarget;\n    }\n  }, {\n    key: \"_compileMaterial\",\n    value: function _compileMaterial(material) {\n      var tmpMesh = new Mesh(this._lodPlanes[0], material);\n\n      this._renderer.compile(tmpMesh, _flatCamera);\n    }\n  }, {\n    key: \"_sceneToCubeUV\",\n    value: function _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n      var fov = 90;\n      var aspect = 1;\n      var cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n      var upSign = [1, -1, 1, 1, 1, 1];\n      var forwardSign = [1, 1, 1, -1, -1, -1];\n      var renderer = this._renderer;\n      var originalAutoClear = renderer.autoClear;\n      var toneMapping = renderer.toneMapping;\n      renderer.getClearColor(_clearColor);\n      renderer.toneMapping = NoToneMapping;\n      renderer.autoClear = false;\n      var backgroundMaterial = new MeshBasicMaterial({\n        name: 'PMREM.Background',\n        side: BackSide,\n        depthWrite: false,\n        depthTest: false\n      });\n      var backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n      var useSolidColor = false;\n      var background = scene.background;\n\n      if (background) {\n        if (background.isColor) {\n          backgroundMaterial.color.copy(background);\n          scene.background = null;\n          useSolidColor = true;\n        }\n      } else {\n        backgroundMaterial.color.copy(_clearColor);\n        useSolidColor = true;\n      }\n\n      for (var i = 0; i < 6; i++) {\n        var col = i % 3;\n\n        if (col === 0) {\n          cubeCamera.up.set(0, upSign[i], 0);\n          cubeCamera.lookAt(forwardSign[i], 0, 0);\n        } else if (col === 1) {\n          cubeCamera.up.set(0, 0, upSign[i]);\n          cubeCamera.lookAt(0, forwardSign[i], 0);\n        } else {\n          cubeCamera.up.set(0, upSign[i], 0);\n          cubeCamera.lookAt(0, 0, forwardSign[i]);\n        }\n\n        var size = this._cubeSize;\n\n        _setViewport(cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size);\n\n        renderer.setRenderTarget(cubeUVRenderTarget);\n\n        if (useSolidColor) {\n          renderer.render(backgroundBox, cubeCamera);\n        }\n\n        renderer.render(scene, cubeCamera);\n      }\n\n      backgroundBox.geometry.dispose();\n      backgroundBox.material.dispose();\n      renderer.toneMapping = toneMapping;\n      renderer.autoClear = originalAutoClear;\n      scene.background = background;\n    }\n  }, {\n    key: \"_textureToCubeUV\",\n    value: function _textureToCubeUV(texture, cubeUVRenderTarget) {\n      var renderer = this._renderer;\n      var isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;\n\n      if (isCubeTexture) {\n        if (this._cubemapMaterial === null) {\n          this._cubemapMaterial = _getCubemapMaterial();\n        }\n\n        this._cubemapMaterial.uniforms.flipEnvMap.value = texture.isRenderTargetTexture === false ? -1 : 1;\n      } else {\n        if (this._equirectMaterial === null) {\n          this._equirectMaterial = _getEquirectMaterial();\n        }\n      }\n\n      var material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n      var mesh = new Mesh(this._lodPlanes[0], material);\n      var uniforms = material.uniforms;\n      uniforms['envMap'].value = texture;\n      var size = this._cubeSize;\n\n      _setViewport(cubeUVRenderTarget, 0, 0, 3 * size, 2 * size);\n\n      renderer.setRenderTarget(cubeUVRenderTarget);\n      renderer.render(mesh, _flatCamera);\n    }\n  }, {\n    key: \"_applyPMREM\",\n    value: function _applyPMREM(cubeUVRenderTarget) {\n      var renderer = this._renderer;\n      var autoClear = renderer.autoClear;\n      renderer.autoClear = false;\n\n      for (var i = 1; i < this._lodPlanes.length; i++) {\n        var sigma = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1]);\n        var poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n        this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n      }\n\n      renderer.autoClear = autoClear;\n    }\n    /**\n     * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n     * vertically and horizontally, but this breaks down on a cube. Here we apply\n     * the blur latitudinally (around the poles), and then longitudinally (towards\n     * the poles) to approximate the orthogonally-separable blur. It is least\n     * accurate at the poles, but still does a decent job.\n     */\n\n  }, {\n    key: \"_blur\",\n    value: function _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n      var pingPongRenderTarget = this._pingPongRenderTarget;\n\n      this._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n      this._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n    }\n  }, {\n    key: \"_halfBlur\",\n    value: function _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n      var renderer = this._renderer;\n      var blurMaterial = this._blurMaterial;\n\n      if (direction !== 'latitudinal' && direction !== 'longitudinal') {\n        console.error('blur direction must be either latitudinal or longitudinal!');\n      } // Number of standard deviations at which to cut off the discrete approximation.\n\n\n      var STANDARD_DEVIATIONS = 3;\n      var blurMesh = new Mesh(this._lodPlanes[lodOut], blurMaterial);\n      var blurUniforms = blurMaterial.uniforms;\n      var pixels = this._sizeLods[lodIn] - 1;\n      var radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n      var sigmaPixels = sigmaRadians / radiansPerPixel;\n      var samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n      if (samples > MAX_SAMPLES) {\n        console.warn(\"sigmaRadians, \".concat(sigmaRadians, \", is too large and will clip, as it requested \").concat(samples, \" samples when the maximum is set to \").concat(MAX_SAMPLES));\n      }\n\n      var weights = [];\n      var sum = 0;\n\n      for (var i = 0; i < MAX_SAMPLES; ++i) {\n        var _x2 = i / sigmaPixels;\n\n        var weight = Math.exp(-_x2 * _x2 / 2);\n        weights.push(weight);\n\n        if (i === 0) {\n          sum += weight;\n        } else if (i < samples) {\n          sum += 2 * weight;\n        }\n      }\n\n      for (var _i23 = 0; _i23 < weights.length; _i23++) {\n        weights[_i23] = weights[_i23] / sum;\n      }\n\n      blurUniforms['envMap'].value = targetIn.texture;\n      blurUniforms['samples'].value = samples;\n      blurUniforms['weights'].value = weights;\n      blurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n      if (poleAxis) {\n        blurUniforms['poleAxis'].value = poleAxis;\n      }\n\n      var _lodMax = this._lodMax;\n      blurUniforms['dTheta'].value = radiansPerPixel;\n      blurUniforms['mipInt'].value = _lodMax - lodIn;\n      var outputSize = this._sizeLods[lodOut];\n      var x = 3 * outputSize * (lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0);\n      var y = 4 * (this._cubeSize - outputSize);\n\n      _setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n      renderer.setRenderTarget(targetOut);\n      renderer.render(blurMesh, _flatCamera);\n    }\n  }]);\n\n  return PMREMGenerator;\n}();\n\nfunction _createPlanes(lodMax) {\n  var lodPlanes = [];\n  var sizeLods = [];\n  var sigmas = [];\n  var lod = lodMax;\n  var totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n  for (var i = 0; i < totalLods; i++) {\n    var sizeLod = Math.pow(2, lod);\n    sizeLods.push(sizeLod);\n    var sigma = 1.0 / sizeLod;\n\n    if (i > lodMax - LOD_MIN) {\n      sigma = EXTRA_LOD_SIGMA[i - lodMax + LOD_MIN - 1];\n    } else if (i === 0) {\n      sigma = 0;\n    }\n\n    sigmas.push(sigma);\n    var texelSize = 1.0 / (sizeLod - 2);\n    var min = -texelSize;\n    var max = 1 + texelSize;\n    var uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n    var cubeFaces = 6;\n    var vertices = 6;\n    var positionSize = 3;\n    var uvSize = 2;\n    var faceIndexSize = 1;\n    var position = new Float32Array(positionSize * vertices * cubeFaces);\n    var uv = new Float32Array(uvSize * vertices * cubeFaces);\n    var faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n    for (var face = 0; face < cubeFaces; face++) {\n      var x = face % 3 * 2 / 3 - 1;\n      var y = face > 2 ? 0 : -1;\n      var coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n      position.set(coordinates, positionSize * vertices * face);\n      uv.set(uv1, uvSize * vertices * face);\n      var fill = [face, face, face, face, face, face];\n      faceIndex.set(fill, faceIndexSize * vertices * face);\n    }\n\n    var planes = new BufferGeometry();\n    planes.setAttribute('position', new BufferAttribute(position, positionSize));\n    planes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n    planes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n    lodPlanes.push(planes);\n\n    if (lod > LOD_MIN) {\n      lod--;\n    }\n  }\n\n  return {\n    lodPlanes: lodPlanes,\n    sizeLods: sizeLods,\n    sigmas: sigmas\n  };\n}\n\nfunction _createRenderTarget(width, height, params) {\n  var cubeUVRenderTarget = new WebGLRenderTarget(width, height, params);\n  cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n  cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n  cubeUVRenderTarget.scissorTest = true;\n  return cubeUVRenderTarget;\n}\n\nfunction _setViewport(target, x, y, width, height) {\n  target.viewport.set(x, y, width, height);\n  target.scissor.set(x, y, width, height);\n}\n\nfunction _getBlurShader(lodMax, width, height) {\n  var weights = new Float32Array(MAX_SAMPLES);\n  var poleAxis = new Vector3(0, 1, 0);\n  var shaderMaterial = new ShaderMaterial({\n    name: 'SphericalGaussianBlur',\n    defines: {\n      'n': MAX_SAMPLES,\n      'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n      'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n      'CUBEUV_MAX_MIP': \"\".concat(lodMax, \".0\")\n    },\n    uniforms: {\n      'envMap': {\n        value: null\n      },\n      'samples': {\n        value: 1\n      },\n      'weights': {\n        value: weights\n      },\n      'latitudinal': {\n        value: false\n      },\n      'dTheta': {\n        value: 0\n      },\n      'mipInt': {\n        value: 0\n      },\n      'poleAxis': {\n        value: poleAxis\n      }\n    },\n    vertexShader: _getCommonVertexShader(),\n    fragmentShader:\n    /* glsl */\n    \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\t\\t\",\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false\n  });\n  return shaderMaterial;\n}\n\nfunction _getEquirectMaterial() {\n  return new ShaderMaterial({\n    name: 'EquirectangularToCubeUV',\n    uniforms: {\n      'envMap': {\n        value: null\n      }\n    },\n    vertexShader: _getCommonVertexShader(),\n    fragmentShader:\n    /* glsl */\n    \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false\n  });\n}\n\nfunction _getCubemapMaterial() {\n  return new ShaderMaterial({\n    name: 'CubemapToCubeUV',\n    uniforms: {\n      'envMap': {\n        value: null\n      },\n      'flipEnvMap': {\n        value: -1\n      }\n    },\n    vertexShader: _getCommonVertexShader(),\n    fragmentShader:\n    /* glsl */\n    \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tuniform float flipEnvMap;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false\n  });\n}\n\nfunction _getCommonVertexShader() {\n  return (\n    /* glsl */\n    \"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\"\n  );\n}\n\nfunction WebGLCubeUVMaps(renderer) {\n  var cubeUVmaps = new WeakMap();\n  var pmremGenerator = null;\n\n  function get(texture) {\n    if (texture && texture.isTexture) {\n      var mapping = texture.mapping;\n      var isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\n      var isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping; // equirect/cube map to cubeUV conversion\n\n      if (isEquirectMap || isCubeMap) {\n        if (texture.isRenderTargetTexture && texture.needsPMREMUpdate === true) {\n          texture.needsPMREMUpdate = false;\n          var renderTarget = cubeUVmaps.get(texture);\n          if (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n          renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture, renderTarget) : pmremGenerator.fromCubemap(texture, renderTarget);\n          cubeUVmaps.set(texture, renderTarget);\n          return renderTarget.texture;\n        } else {\n          if (cubeUVmaps.has(texture)) {\n            return cubeUVmaps.get(texture).texture;\n          } else {\n            var image = texture.image;\n\n            if (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n              if (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n\n              var _renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n\n              cubeUVmaps.set(texture, _renderTarget);\n              texture.addEventListener('dispose', onTextureDispose);\n              return _renderTarget.texture;\n            } else {\n              // image not yet ready. try the conversion next frame\n              return null;\n            }\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function isCubeTextureComplete(image) {\n    var count = 0;\n    var length = 6;\n\n    for (var i = 0; i < length; i++) {\n      if (image[i] !== undefined) count++;\n    }\n\n    return count === length;\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    var cubemapUV = cubeUVmaps.get(texture);\n\n    if (cubemapUV !== undefined) {\n      cubeUVmaps.delete(texture);\n      cubemapUV.dispose();\n    }\n  }\n\n  function dispose() {\n    cubeUVmaps = new WeakMap();\n\n    if (pmremGenerator !== null) {\n      pmremGenerator.dispose();\n      pmremGenerator = null;\n    }\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n\nfunction WebGLExtensions(gl) {\n  var extensions = {};\n\n  function getExtension(name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'WEBGL_depth_texture':\n        extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n        break;\n\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    extensions[name] = extension;\n    return extension;\n  }\n\n  return {\n    has: function has(name) {\n      return getExtension(name) !== null;\n    },\n    init: function init(capabilities) {\n      if (capabilities.isWebGL2) {\n        getExtension('EXT_color_buffer_float');\n      } else {\n        getExtension('WEBGL_depth_texture');\n        getExtension('OES_texture_float');\n        getExtension('OES_texture_half_float');\n        getExtension('OES_texture_half_float_linear');\n        getExtension('OES_standard_derivatives');\n        getExtension('OES_element_index_uint');\n        getExtension('OES_vertex_array_object');\n        getExtension('ANGLE_instanced_arrays');\n      }\n\n      getExtension('OES_texture_float_linear');\n      getExtension('EXT_color_buffer_half_float');\n      getExtension('WEBGL_multisampled_render_to_texture');\n    },\n    get: function get(name) {\n      var extension = getExtension(name);\n\n      if (extension === null) {\n        console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n      }\n\n      return extension;\n    }\n  };\n}\n\nfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n  var geometries = {};\n  var wireframeAttributes = new WeakMap();\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n\n    if (geometry.index !== null) {\n      attributes.remove(geometry.index);\n    }\n\n    for (var name in geometry.attributes) {\n      attributes.remove(geometry.attributes[name]);\n    }\n\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id];\n    var attribute = wireframeAttributes.get(geometry);\n\n    if (attribute) {\n      attributes.remove(attribute);\n      wireframeAttributes.delete(geometry);\n    }\n\n    bindingStates.releaseStatesOfGeometry(geometry);\n\n    if (geometry.isInstancedBufferGeometry === true) {\n      delete geometry._maxInstanceCount;\n    } //\n\n\n    info.memory.geometries--;\n  }\n\n  function get(object, geometry) {\n    if (geometries[geometry.id] === true) return geometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n    geometries[geometry.id] = true;\n    info.memory.geometries++;\n    return geometry;\n  }\n\n  function update(geometry) {\n    var geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n    for (var name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], 34962);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var _name3 in morphAttributes) {\n      var array = morphAttributes[_name3];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], 34962);\n      }\n    }\n  }\n\n  function updateWireframeAttribute(geometry) {\n    var indices = [];\n    var geometryIndex = geometry.index;\n    var geometryPosition = geometry.attributes.position;\n    var version = 0;\n\n    if (geometryIndex !== null) {\n      var array = geometryIndex.array;\n      version = geometryIndex.version;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      var _array = geometryPosition.array;\n      version = geometryPosition.version;\n\n      for (var _i24 = 0, _l5 = _array.length / 3 - 1; _i24 < _l5; _i24 += 3) {\n        var _a4 = _i24 + 0;\n\n        var _b4 = _i24 + 1;\n\n        var _c4 = _i24 + 2;\n\n        indices.push(_a4, _b4, _b4, _c4, _c4, _a4);\n      }\n    }\n\n    var attribute = new (arrayNeedsUint32(indices) ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n    attribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n    //\n\n    var previousAttribute = wireframeAttributes.get(geometry);\n    if (previousAttribute) attributes.remove(previousAttribute); //\n\n    wireframeAttributes.set(geometry, attribute);\n  }\n\n  function getWireframeAttribute(geometry) {\n    var currentAttribute = wireframeAttributes.get(geometry);\n\n    if (currentAttribute) {\n      var geometryIndex = geometry.index;\n\n      if (geometryIndex !== null) {\n        // if the attribute is obsolete, create a new one\n        if (currentAttribute.version < geometryIndex.version) {\n          updateWireframeAttribute(geometry);\n        }\n      }\n    } else {\n      updateWireframeAttribute(geometry);\n    }\n\n    return wireframeAttributes.get(geometry);\n  }\n\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\n\nfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n  var isWebGL2 = capabilities.isWebGL2;\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n    var extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = 'drawElementsInstanced';\n    } else {\n      extension = extensions.get('ANGLE_instanced_arrays');\n      methodName = 'drawElementsInstancedANGLE';\n\n      if (extension === null) {\n        console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n    info.update(count, mode, primcount);\n  } //\n\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n\nfunction WebGLInfo(gl) {\n  var memory = {\n    geometries: 0,\n    textures: 0\n  };\n  var render = {\n    frame: 0,\n    calls: 0,\n    triangles: 0,\n    points: 0,\n    lines: 0\n  };\n\n  function update(count, mode, instanceCount) {\n    render.calls++;\n\n    switch (mode) {\n      case 4:\n        render.triangles += instanceCount * (count / 3);\n        break;\n\n      case 1:\n        render.lines += instanceCount * (count / 2);\n        break;\n\n      case 3:\n        render.lines += instanceCount * (count - 1);\n        break;\n\n      case 2:\n        render.lines += instanceCount * count;\n        break;\n\n      case 0:\n        render.points += instanceCount * count;\n        break;\n\n      default:\n        console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n        break;\n    }\n  }\n\n  function reset() {\n    render.frame++;\n    render.calls = 0;\n    render.triangles = 0;\n    render.points = 0;\n    render.lines = 0;\n  }\n\n  return {\n    memory: memory,\n    render: render,\n    programs: null,\n    autoReset: true,\n    reset: reset,\n    update: update\n  };\n}\n\nfunction numericalSort(a, b) {\n  return a[0] - b[0];\n}\n\nfunction absNumericalSort(a, b) {\n  return Math.abs(b[1]) - Math.abs(a[1]);\n}\n\nfunction denormalize(morph, attribute) {\n  var denominator = 1;\n  var array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n  if (array instanceof Int8Array) denominator = 127;else if (array instanceof Uint8Array) denominator = 255;else if (array instanceof Uint16Array) denominator = 65535;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\n  morph.divideScalar(denominator);\n}\n\nfunction WebGLMorphtargets(gl, capabilities, textures) {\n  var influencesList = {};\n  var morphInfluences = new Float32Array(8);\n  var morphTextures = new WeakMap();\n  var morph = new Vector4();\n  var workInfluences = [];\n\n  for (var i = 0; i < 8; i++) {\n    workInfluences[i] = [i, 0];\n  }\n\n  function update(object, geometry, material, program) {\n    var objectInfluences = object.morphTargetInfluences;\n\n    if (capabilities.isWebGL2 === true) {\n      // instead of using attributes, the WebGL 2 code path encodes morph targets\n      // into an array of data textures. Each layer represents a single morph target.\n      var morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n      var morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n      var entry = morphTextures.get(geometry);\n\n      if (entry === undefined || entry.count !== morphTargetsCount) {\n        var disposeTexture = function disposeTexture() {\n          texture.dispose();\n          morphTextures.delete(geometry);\n          geometry.removeEventListener('dispose', disposeTexture);\n        };\n\n        if (entry !== undefined) entry.texture.dispose();\n        var hasMorphPosition = geometry.morphAttributes.position !== undefined;\n        var hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n        var hasMorphColors = geometry.morphAttributes.color !== undefined;\n        var morphTargets = geometry.morphAttributes.position || [];\n        var morphNormals = geometry.morphAttributes.normal || [];\n        var morphColors = geometry.morphAttributes.color || [];\n        var vertexDataCount = 0;\n        if (hasMorphPosition === true) vertexDataCount = 1;\n        if (hasMorphNormals === true) vertexDataCount = 2;\n        if (hasMorphColors === true) vertexDataCount = 3;\n        var width = geometry.attributes.position.count * vertexDataCount;\n        var height = 1;\n\n        if (width > capabilities.maxTextureSize) {\n          height = Math.ceil(width / capabilities.maxTextureSize);\n          width = capabilities.maxTextureSize;\n        }\n\n        var buffer = new Float32Array(width * height * 4 * morphTargetsCount);\n        var texture = new DataArrayTexture(buffer, width, height, morphTargetsCount);\n        texture.type = FloatType;\n        texture.needsUpdate = true; // fill buffer\n\n        var vertexDataStride = vertexDataCount * 4;\n\n        for (var _i25 = 0; _i25 < morphTargetsCount; _i25++) {\n          var morphTarget = morphTargets[_i25];\n          var morphNormal = morphNormals[_i25];\n          var morphColor = morphColors[_i25];\n          var offset = width * height * 4 * _i25;\n\n          for (var j = 0; j < morphTarget.count; j++) {\n            var stride = j * vertexDataStride;\n\n            if (hasMorphPosition === true) {\n              morph.fromBufferAttribute(morphTarget, j);\n              if (morphTarget.normalized === true) denormalize(morph, morphTarget);\n              buffer[offset + stride + 0] = morph.x;\n              buffer[offset + stride + 1] = morph.y;\n              buffer[offset + stride + 2] = morph.z;\n              buffer[offset + stride + 3] = 0;\n            }\n\n            if (hasMorphNormals === true) {\n              morph.fromBufferAttribute(morphNormal, j);\n              if (morphNormal.normalized === true) denormalize(morph, morphNormal);\n              buffer[offset + stride + 4] = morph.x;\n              buffer[offset + stride + 5] = morph.y;\n              buffer[offset + stride + 6] = morph.z;\n              buffer[offset + stride + 7] = 0;\n            }\n\n            if (hasMorphColors === true) {\n              morph.fromBufferAttribute(morphColor, j);\n              if (morphColor.normalized === true) denormalize(morph, morphColor);\n              buffer[offset + stride + 8] = morph.x;\n              buffer[offset + stride + 9] = morph.y;\n              buffer[offset + stride + 10] = morph.z;\n              buffer[offset + stride + 11] = morphColor.itemSize === 4 ? morph.w : 1;\n            }\n          }\n        }\n\n        entry = {\n          count: morphTargetsCount,\n          texture: texture,\n          size: new Vector2(width, height)\n        };\n        morphTextures.set(geometry, entry);\n        geometry.addEventListener('dispose', disposeTexture);\n      } //\n\n\n      var morphInfluencesSum = 0;\n\n      for (var _i26 = 0; _i26 < objectInfluences.length; _i26++) {\n        morphInfluencesSum += objectInfluences[_i26];\n      }\n\n      var morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n      program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\n      program.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\n      program.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\n    } else {\n      // When object doesn't have morph target influences defined, we treat it as a 0-length array\n      // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n      var length = objectInfluences === undefined ? 0 : objectInfluences.length;\n      var influences = influencesList[geometry.id];\n\n      if (influences === undefined || influences.length !== length) {\n        // initialise list\n        influences = [];\n\n        for (var _i27 = 0; _i27 < length; _i27++) {\n          influences[_i27] = [_i27, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      } // Collect influences\n\n\n      for (var _i28 = 0; _i28 < length; _i28++) {\n        var influence = influences[_i28];\n        influence[0] = _i28;\n        influence[1] = objectInfluences[_i28];\n      }\n\n      influences.sort(absNumericalSort);\n\n      for (var _i29 = 0; _i29 < 8; _i29++) {\n        if (_i29 < length && influences[_i29][1]) {\n          workInfluences[_i29][0] = influences[_i29][0];\n          workInfluences[_i29][1] = influences[_i29][1];\n        } else {\n          workInfluences[_i29][0] = Number.MAX_SAFE_INTEGER;\n          workInfluences[_i29][1] = 0;\n        }\n      }\n\n      workInfluences.sort(numericalSort);\n      var _morphTargets = geometry.morphAttributes.position;\n      var _morphNormals = geometry.morphAttributes.normal;\n      var _morphInfluencesSum = 0;\n\n      for (var _i30 = 0; _i30 < 8; _i30++) {\n        var _influence = workInfluences[_i30];\n        var index = _influence[0];\n        var _value3 = _influence[1];\n\n        if (index !== Number.MAX_SAFE_INTEGER && _value3) {\n          if (_morphTargets && geometry.getAttribute('morphTarget' + _i30) !== _morphTargets[index]) {\n            geometry.setAttribute('morphTarget' + _i30, _morphTargets[index]);\n          }\n\n          if (_morphNormals && geometry.getAttribute('morphNormal' + _i30) !== _morphNormals[index]) {\n            geometry.setAttribute('morphNormal' + _i30, _morphNormals[index]);\n          }\n\n          morphInfluences[_i30] = _value3;\n          _morphInfluencesSum += _value3;\n        } else {\n          if (_morphTargets && geometry.hasAttribute('morphTarget' + _i30) === true) {\n            geometry.deleteAttribute('morphTarget' + _i30);\n          }\n\n          if (_morphNormals && geometry.hasAttribute('morphNormal' + _i30) === true) {\n            geometry.deleteAttribute('morphNormal' + _i30);\n          }\n\n          morphInfluences[_i30] = 0;\n        }\n      } // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n      // This allows us to switch between absolute morphs and relative morphs without changing shader code\n      // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n      var _morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - _morphInfluencesSum;\n\n      program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', _morphBaseInfluence);\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n    }\n  }\n\n  return {\n    update: update\n  };\n}\n\nfunction WebGLObjects(gl, geometries, attributes, info) {\n  var updateMap = new WeakMap();\n\n  function update(object) {\n    var frame = info.render.frame;\n    var geometry = object.geometry;\n    var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n    if (updateMap.get(buffergeometry) !== frame) {\n      geometries.update(buffergeometry);\n      updateMap.set(buffergeometry, frame);\n    }\n\n    if (object.isInstancedMesh) {\n      if (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n        object.addEventListener('dispose', onInstancedMeshDispose);\n      }\n\n      attributes.update(object.instanceMatrix, 34962);\n\n      if (object.instanceColor !== null) {\n        attributes.update(object.instanceColor, 34962);\n      }\n    }\n\n    return buffergeometry;\n  }\n\n  function dispose() {\n    updateMap = new WeakMap();\n  }\n\n  function onInstancedMeshDispose(event) {\n    var instancedMesh = event.target;\n    instancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n    attributes.remove(instancedMesh.instanceMatrix);\n    if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n  }\n\n  return {\n    update: update,\n    dispose: dispose\n  };\n}\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nvar emptyTexture = /*@__PURE__*/new Texture();\nvar emptyArrayTexture = /*@__PURE__*/new DataArrayTexture();\nvar empty3dTexture = /*@__PURE__*/new Data3DTexture();\nvar emptyCubeTexture = /*@__PURE__*/new CubeTexture(); // --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array(16);\nvar mat3array = new Float32Array(9);\nvar mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  var firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  var n = nBlocks * blockSize;\n  var r = arrayCacheF32[n];\n\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n\n    for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n\n  return r;\n}\n\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n\n  for (var i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nfunction copyArray(a, b) {\n  for (var i = 0, l = b.length; i < l; i++) {\n    a[i] = b[i];\n  }\n} // Texture unit allocation\n\n\nfunction allocTexUnits(textures, n) {\n  var r = arrayCacheI32[n];\n\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n\n  for (var i = 0; i !== n; ++i) {\n    r[i] = textures.allocateTextureUnit();\n  }\n\n  return r;\n} // --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\n\n\nfunction setValueV1f(gl, v) {\n  var cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1f(this.addr, v);\n  cache[0] = v;\n} // Single float vector (from flat array or THREE.VectorN)\n\n\nfunction setValueV2f(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2f(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV3f(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else if (v.r !== undefined) {\n    if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n      cache[0] = v.r;\n      cache[1] = v.g;\n      cache[2] = v.b;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV4f(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4fv(this.addr, v);\n    copyArray(cache, v);\n  }\n} // Single matrix (from flat array or THREE.MatrixN)\n\n\nfunction setValueM2(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix2fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat2array.set(elements);\n    gl.uniformMatrix2fv(this.addr, false, mat2array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM3(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix3fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat3array.set(elements);\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM4(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix4fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat4array.set(elements);\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n    copyArray(cache, elements);\n  }\n} // Single integer / boolean\n\n\nfunction setValueV1i(gl, v) {\n  var cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1i(this.addr, v);\n  cache[0] = v;\n} // Single integer / boolean vector (from flat array)\n\n\nfunction setValueV2i(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform2iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV3i(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform3iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV4i(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform4iv(this.addr, v);\n  copyArray(cache, v);\n} // Single unsigned integer\n\n\nfunction setValueV1ui(gl, v) {\n  var cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1ui(this.addr, v);\n  cache[0] = v;\n} // Single unsigned integer vector (from flat array)\n\n\nfunction setValueV2ui(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform2uiv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV3ui(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform3uiv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV4ui(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform4uiv(this.addr, v);\n  copyArray(cache, v);\n} // Single texture (2D / Cube)\n\n\nfunction setValueT1(gl, v, textures) {\n  var cache = this.cache;\n  var unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture2D(v || emptyTexture, unit);\n}\n\nfunction setValueT3D1(gl, v, textures) {\n  var cache = this.cache;\n  var unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture3D(v || empty3dTexture, unit);\n}\n\nfunction setValueT6(gl, v, textures) {\n  var cache = this.cache;\n  var unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTextureCube(v || emptyCubeTexture, unit);\n}\n\nfunction setValueT2DArray1(gl, v, textures) {\n  var cache = this.cache;\n  var unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture2DArray(v || emptyArrayTexture, unit);\n} // Helper to pick the right setter for the singular case\n\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1f;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2f;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3f;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4f;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1i;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2i;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3i;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4i;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1ui;\n    // UINT\n\n    case 0x8dc6:\n      return setValueV2ui;\n    // _VEC2\n\n    case 0x8dc7:\n      return setValueV3ui;\n    // _VEC3\n\n    case 0x8dc8:\n      return setValueV4ui;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n    case 0x8dca: // INT_SAMPLER_2D\n\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1;\n\n    case 0x8b5f: // SAMPLER_3D\n\n    case 0x8dcb: // INT_SAMPLER_3D\n\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3D1;\n\n    case 0x8b60: // SAMPLER_CUBE\n\n    case 0x8dcc: // INT_SAMPLER_CUBE\n\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6;\n\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArray1;\n  }\n} // Array of scalars\n\n\nfunction setValueV1fArray(gl, v) {\n  gl.uniform1fv(this.addr, v);\n} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\nfunction setValueV2fArray(gl, v) {\n  var data = flatten(v, this.size, 2);\n  gl.uniform2fv(this.addr, data);\n}\n\nfunction setValueV3fArray(gl, v) {\n  var data = flatten(v, this.size, 3);\n  gl.uniform3fv(this.addr, data);\n}\n\nfunction setValueV4fArray(gl, v) {\n  var data = flatten(v, this.size, 4);\n  gl.uniform4fv(this.addr, data);\n} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\nfunction setValueM2Array(gl, v) {\n  var data = flatten(v, this.size, 4);\n  gl.uniformMatrix2fv(this.addr, false, data);\n}\n\nfunction setValueM3Array(gl, v) {\n  var data = flatten(v, this.size, 9);\n  gl.uniformMatrix3fv(this.addr, false, data);\n}\n\nfunction setValueM4Array(gl, v) {\n  var data = flatten(v, this.size, 16);\n  gl.uniformMatrix4fv(this.addr, false, data);\n} // Array of integer / boolean\n\n\nfunction setValueV1iArray(gl, v) {\n  gl.uniform1iv(this.addr, v);\n} // Array of integer / boolean vectors (from flat array)\n\n\nfunction setValueV2iArray(gl, v) {\n  gl.uniform2iv(this.addr, v);\n}\n\nfunction setValueV3iArray(gl, v) {\n  gl.uniform3iv(this.addr, v);\n}\n\nfunction setValueV4iArray(gl, v) {\n  gl.uniform4iv(this.addr, v);\n} // Array of unsigned integer\n\n\nfunction setValueV1uiArray(gl, v) {\n  gl.uniform1uiv(this.addr, v);\n} // Array of unsigned integer vectors (from flat array)\n\n\nfunction setValueV2uiArray(gl, v) {\n  gl.uniform2uiv(this.addr, v);\n}\n\nfunction setValueV3uiArray(gl, v) {\n  gl.uniform3uiv(this.addr, v);\n}\n\nfunction setValueV4uiArray(gl, v) {\n  gl.uniform4uiv(this.addr, v);\n} // Array of textures (2D / 3D / Cube / 2DArray)\n\n\nfunction setValueT1Array(gl, v, textures) {\n  var n = v.length;\n  var units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    textures.setTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\n\nfunction setValueT3DArray(gl, v, textures) {\n  var n = v.length;\n  var units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    textures.setTexture3D(v[i] || empty3dTexture, units[i]);\n  }\n}\n\nfunction setValueT6Array(gl, v, textures) {\n  var n = v.length;\n  var units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    textures.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n}\n\nfunction setValueT2DArrayArray(gl, v, textures) {\n  var n = v.length;\n  var units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    textures.setTexture2DArray(v[i] || emptyArrayTexture, units[i]);\n  }\n} // Helper to pick the right setter for a pure (bottom-level) array\n\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1fArray;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2fArray;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3fArray;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4fArray;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2Array;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3Array;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4Array;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1iArray;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2iArray;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3iArray;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4iArray;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1uiArray;\n    // UINT\n\n    case 0x8dc6:\n      return setValueV2uiArray;\n    // _VEC2\n\n    case 0x8dc7:\n      return setValueV3uiArray;\n    // _VEC3\n\n    case 0x8dc8:\n      return setValueV4uiArray;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n    case 0x8dca: // INT_SAMPLER_2D\n\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1Array;\n\n    case 0x8b5f: // SAMPLER_3D\n\n    case 0x8dcb: // INT_SAMPLER_3D\n\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3DArray;\n\n    case 0x8b60: // SAMPLER_CUBE\n\n    case 0x8dcc: // INT_SAMPLER_CUBE\n\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6Array;\n\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArrayArray;\n  }\n} // --- Uniform Classes ---\n\n\nvar SingleUniform = function SingleUniform(id, activeInfo, addr) {\n  _classCallCheck(this, SingleUniform);\n\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n};\n\nvar PureArrayUniform = function PureArrayUniform(id, activeInfo, addr) {\n  _classCallCheck(this, PureArrayUniform);\n\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.size = activeInfo.size;\n  this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n};\n\nvar StructuredUniform = /*#__PURE__*/function () {\n  function StructuredUniform(id) {\n    _classCallCheck(this, StructuredUniform);\n\n    this.id = id;\n    this.seq = [];\n    this.map = {};\n  }\n\n  _createClass(StructuredUniform, [{\n    key: \"setValue\",\n    value: function setValue(gl, value, textures) {\n      var seq = this.seq;\n\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i];\n        u.setValue(gl, value[u.id], textures);\n      }\n    }\n  }]);\n\n  return StructuredUniform;\n}(); // --- Top-level ---\n// Parser - builds up the property tree from the path strings\n\n\nvar RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\n\nfunction parseUniform(activeInfo, addr, container) {\n  var path = activeInfo.name,\n      pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n  RePathPart.lastIndex = 0;\n\n  while (true) {\n    var match = RePathPart.exec(path),\n        matchEnd = RePathPart.lastIndex;\n    var id = match[1];\n    var idIsIndex = match[2] === ']',\n        subscript = match[3];\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n      addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n      var map = container.map;\n      var next = map[id];\n\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n\n      container = next;\n    }\n  }\n} // Root Container\n\n\nvar WebGLUniforms = /*#__PURE__*/function () {\n  function WebGLUniforms(gl, program) {\n    _classCallCheck(this, WebGLUniforms);\n\n    this.seq = [];\n    this.map = {};\n    var n = gl.getProgramParameter(program, 35718);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  _createClass(WebGLUniforms, [{\n    key: \"setValue\",\n    value: function setValue(gl, name, value, textures) {\n      var u = this.map[name];\n      if (u !== undefined) u.setValue(gl, value, textures);\n    }\n  }, {\n    key: \"setOptional\",\n    value: function setOptional(gl, object, name) {\n      var v = object[name];\n      if (v !== undefined) this.setValue(gl, name, v);\n    }\n  }], [{\n    key: \"upload\",\n    value: function upload(gl, seq, values, textures) {\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i],\n            v = values[u.id];\n\n        if (v.needsUpdate !== false) {\n          // note: always updating when .needsUpdate is undefined\n          u.setValue(gl, v.value, textures);\n        }\n      }\n    }\n  }, {\n    key: \"seqWithValue\",\n    value: function seqWithValue(seq, values) {\n      var r = [];\n\n      for (var i = 0, n = seq.length; i !== n; ++i) {\n        var u = seq[i];\n        if (u.id in values) r.push(u);\n      }\n\n      return r;\n    }\n  }]);\n\n  return WebGLUniforms;\n}();\n\nfunction WebGLShader(gl, type, string) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, string);\n  gl.compileShader(shader);\n  return shader;\n}\n\nvar programIdCount = 0;\n\nfunction handleSource(string, errorLine) {\n  var lines = string.split('\\n');\n  var lines2 = [];\n  var from = Math.max(errorLine - 6, 0);\n  var to = Math.min(errorLine + 6, lines.length);\n\n  for (var i = from; i < to; i++) {\n    var line = i + 1;\n    lines2.push(\"\".concat(line === errorLine ? '>' : ' ', \" \").concat(line, \": \").concat(lines[i]));\n  }\n\n  return lines2.join('\\n');\n}\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n      return ['Linear', '( value )'];\n  }\n}\n\nfunction getShaderErrors(gl, shader, type) {\n  var status = gl.getShaderParameter(shader, 35713);\n  var errors = gl.getShaderInfoLog(shader).trim();\n  if (status && errors === '') return '';\n  var errorMatches = /ERROR: 0:(\\d+)/.exec(errors);\n\n  if (errorMatches) {\n    // --enable-privileged-webgl-extension\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n    var errorLine = parseInt(errorMatches[1]);\n    return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource(gl.getShaderSource(shader), errorLine);\n  } else {\n    return errors;\n  }\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  var toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = 'Linear';\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = 'Reinhard';\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = 'OptimizedCineon';\n      break;\n\n    case ACESFilmicToneMapping:\n      toneMappingName = 'ACESFilmic';\n      break;\n\n    case CustomToneMapping:\n      toneMappingName = 'Custom';\n      break;\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n      toneMappingName = 'Linear';\n  }\n\n  return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n}\n\nfunction generateExtensions(parameters) {\n  var chunks = [parameters.extensionDerivatives || !!parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\n\nfunction generateDefines(defines) {\n  var chunks = [];\n\n  for (var name in defines) {\n    var _value4 = defines[name];\n    if (_value4 === false) continue;\n    chunks.push('#define ' + name + ' ' + _value4);\n  }\n\n  return chunks.join('\\n');\n}\n\nfunction fetchAttributeLocations(gl, program) {\n  var attributes = {};\n  var n = gl.getProgramParameter(program, 35721);\n\n  for (var i = 0; i < n; i++) {\n    var info = gl.getActiveAttrib(program, i);\n    var name = info.name;\n    var locationSize = 1;\n    if (info.type === 35674) locationSize = 2;\n    if (info.type === 35675) locationSize = 3;\n    if (info.type === 35676) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = {\n      type: info.type,\n      location: gl.getAttribLocation(program, name),\n      locationSize: locationSize\n    };\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n}\n\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n} // Resolve Includes\n\n\nvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes(string) {\n  return string.replace(includePattern, includeReplacer);\n}\n\nfunction includeReplacer(match, include) {\n  var string = ShaderChunk[include];\n\n  if (string === undefined) {\n    throw new Error('Can not resolve #include <' + include + '>');\n  }\n\n  return resolveIncludes(string);\n} // Unroll Loops\n\n\nvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nvar unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops(string) {\n  return string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n}\n\nfunction deprecatedLoopReplacer(match, start, end, snippet) {\n  console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n  return loopReplacer(match, start, end, snippet);\n}\n\nfunction loopReplacer(match, start, end, snippet) {\n  var string = '';\n\n  for (var i = parseInt(start); i < parseInt(end); i++) {\n    string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n  }\n\n  return string;\n} //\n\n\nfunction generatePrecision(parameters) {\n  var precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n  if (parameters.precision === 'highp') {\n    precisionstring += '\\n#define HIGH_PRECISION';\n  } else if (parameters.precision === 'mediump') {\n    precisionstring += '\\n#define MEDIUM_PRECISION';\n  } else if (parameters.precision === 'lowp') {\n    precisionstring += '\\n#define LOW_PRECISION';\n  }\n\n  return precisionstring;\n}\n\nfunction generateShadowMapTypeDefine(parameters) {\n  var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  } else if (parameters.shadowMapType === VSMShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n  }\n\n  return shadowMapTypeDefine;\n}\n\nfunction generateEnvMapTypeDefine(parameters) {\n  var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n\n      case CubeUVReflectionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n    }\n  }\n\n  return envMapTypeDefine;\n}\n\nfunction generateEnvMapModeDefine(parameters) {\n  var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n  }\n\n  return envMapModeDefine;\n}\n\nfunction generateEnvMapBlendingDefine(parameters) {\n  var envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n  if (parameters.envMap) {\n    switch (parameters.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n\n  return envMapBlendingDefine;\n}\n\nfunction generateCubeUVSize(parameters) {\n  var imageHeight = parameters.envMapCubeUVHeight;\n  if (imageHeight === null) return null;\n  var maxMip = Math.log2(imageHeight) - 2;\n  var texelHeight = 1.0 / imageHeight;\n  var texelWidth = 1.0 / (3 * Math.max(Math.pow(2, maxMip), 7 * 16));\n  return {\n    texelWidth: texelWidth,\n    texelHeight: texelHeight,\n    maxMip: maxMip\n  };\n}\n\nfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n  // TODO Send this event to Three.js DevTools\n  // console.log( 'WebGLProgram', cacheKey );\n  var gl = renderer.getContext();\n  var defines = parameters.defines;\n  var vertexShader = parameters.vertexShader;\n  var fragmentShader = parameters.fragmentShader;\n  var shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n  var envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n  var envMapModeDefine = generateEnvMapModeDefine(parameters);\n  var envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n  var envMapCubeUVSize = generateCubeUVSize(parameters);\n  var customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n  var customDefines = generateDefines(defines);\n  var program = gl.createProgram();\n  var prefixVertex, prefixFragment;\n  var versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n  if (parameters.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixVertex.length > 0) {\n      prefixVertex += '\\n';\n    }\n\n    prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixFragment.length > 0) {\n      prefixFragment += '\\n';\n    }\n  } else {\n    prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '', parameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphColors && parameters.isWebGL2 ? '#define USE_MORPHCOLORS' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '', envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.iridescence ? '#define USE_IRIDESCENCE' : '', parameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '', parameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.opaque ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n    getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n\n  vertexShader = resolveIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n  fragmentShader = resolveIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n\n  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n    // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n    versionString = '#version 300 es\\n';\n    prefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n    prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n  }\n\n  var vertexGlsl = versionString + prefixVertex + vertexShader;\n  var fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  var glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n  var glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n  if (parameters.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n\n  gl.linkProgram(program); // check for link errors\n\n  if (renderer.debug.checkShaderErrors) {\n    var programLog = gl.getProgramInfoLog(program).trim();\n    var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    var runnable = true;\n    var haveDiagnostics = true;\n\n    if (gl.getProgramParameter(program, 35714) === false) {\n      runnable = false;\n      var vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n      var fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n      console.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, 35715) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    }\n  } // Clean up\n  // Crashes in iOS9 and iOS10. #18402\n  // gl.detachShader( program, glVertexShader );\n  // gl.detachShader( program, glFragmentShader );\n\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n  var cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program);\n    }\n\n    return cachedUniforms;\n  }; // set up caching for attribute locations\n\n\n  var cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  }; // free resource\n\n\n  this.destroy = function () {\n    bindingStates.releaseStatesOfProgram(this);\n    gl.deleteProgram(program);\n    this.program = undefined;\n  }; //\n\n\n  this.name = parameters.shaderName;\n  this.id = programIdCount++;\n  this.cacheKey = cacheKey;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\n\nvar _id = 0;\n\nvar WebGLShaderCache = /*#__PURE__*/function () {\n  function WebGLShaderCache() {\n    _classCallCheck(this, WebGLShaderCache);\n\n    this.shaderCache = new Map();\n    this.materialCache = new Map();\n  }\n\n  _createClass(WebGLShaderCache, [{\n    key: \"update\",\n    value: function update(material) {\n      var vertexShader = material.vertexShader;\n      var fragmentShader = material.fragmentShader;\n\n      var vertexShaderStage = this._getShaderStage(vertexShader);\n\n      var fragmentShaderStage = this._getShaderStage(fragmentShader);\n\n      var materialShaders = this._getShaderCacheForMaterial(material);\n\n      if (materialShaders.has(vertexShaderStage) === false) {\n        materialShaders.add(vertexShaderStage);\n        vertexShaderStage.usedTimes++;\n      }\n\n      if (materialShaders.has(fragmentShaderStage) === false) {\n        materialShaders.add(fragmentShaderStage);\n        fragmentShaderStage.usedTimes++;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(material) {\n      var materialShaders = this.materialCache.get(material);\n\n      var _iterator = _createForOfIteratorHelper(materialShaders),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var shaderStage = _step.value;\n          shaderStage.usedTimes--;\n          if (shaderStage.usedTimes === 0) this.shaderCache.delete(shaderStage.code);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.materialCache.delete(material);\n      return this;\n    }\n  }, {\n    key: \"getVertexShaderID\",\n    value: function getVertexShaderID(material) {\n      return this._getShaderStage(material.vertexShader).id;\n    }\n  }, {\n    key: \"getFragmentShaderID\",\n    value: function getFragmentShaderID(material) {\n      return this._getShaderStage(material.fragmentShader).id;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.shaderCache.clear();\n      this.materialCache.clear();\n    }\n  }, {\n    key: \"_getShaderCacheForMaterial\",\n    value: function _getShaderCacheForMaterial(material) {\n      var cache = this.materialCache;\n\n      if (cache.has(material) === false) {\n        cache.set(material, new Set());\n      }\n\n      return cache.get(material);\n    }\n  }, {\n    key: \"_getShaderStage\",\n    value: function _getShaderStage(code) {\n      var cache = this.shaderCache;\n\n      if (cache.has(code) === false) {\n        var stage = new WebGLShaderStage(code);\n        cache.set(code, stage);\n      }\n\n      return cache.get(code);\n    }\n  }]);\n\n  return WebGLShaderCache;\n}();\n\nvar WebGLShaderStage = function WebGLShaderStage(code) {\n  _classCallCheck(this, WebGLShaderStage);\n\n  this.id = _id++;\n  this.code = code;\n  this.usedTimes = 0;\n};\n\nfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n  var _programLayers = new Layers();\n\n  var _customShaders = new WebGLShaderCache();\n\n  var programs = [];\n  var isWebGL2 = capabilities.isWebGL2;\n  var logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n  var vertexTextures = capabilities.vertexTextures;\n  var precision = capabilities.precision;\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshDistanceMaterial: 'distanceRGBA',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'toon',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    MeshMatcapMaterial: 'matcap',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points',\n    ShadowMaterial: 'shadow',\n    SpriteMaterial: 'sprite'\n  };\n\n  function getParameters(material, lights, shadows, scene, object) {\n    var fog = scene.fog;\n    var geometry = object.geometry;\n    var environment = material.isMeshStandardMaterial ? scene.environment : null;\n    var envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n    var envMapCubeUVHeight = !!envMap && envMap.mapping === CubeUVReflectionMapping ? envMap.image.height : null;\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    } //\n\n\n    var morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n    var morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n    var morphTextureStride = 0;\n    if (geometry.morphAttributes.position !== undefined) morphTextureStride = 1;\n    if (geometry.morphAttributes.normal !== undefined) morphTextureStride = 2;\n    if (geometry.morphAttributes.color !== undefined) morphTextureStride = 3; //\n\n    var vertexShader, fragmentShader;\n    var customVertexShaderID, customFragmentShaderID;\n\n    if (shaderID) {\n      var shader = ShaderLib[shaderID];\n      vertexShader = shader.vertexShader;\n      fragmentShader = shader.fragmentShader;\n    } else {\n      vertexShader = material.vertexShader;\n      fragmentShader = material.fragmentShader;\n\n      _customShaders.update(material);\n\n      customVertexShaderID = _customShaders.getVertexShaderID(material);\n      customFragmentShaderID = _customShaders.getFragmentShaderID(material);\n    }\n\n    var currentRenderTarget = renderer.getRenderTarget();\n    var useAlphaTest = material.alphaTest > 0;\n    var useClearcoat = material.clearcoat > 0;\n    var useIridescence = material.iridescence > 0;\n    var parameters = {\n      isWebGL2: isWebGL2,\n      shaderID: shaderID,\n      shaderName: material.type,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      defines: material.defines,\n      customVertexShaderID: customVertexShaderID,\n      customFragmentShaderID: customFragmentShaderID,\n      isRawShaderMaterial: material.isRawShaderMaterial === true,\n      glslVersion: material.glslVersion,\n      precision: precision,\n      instancing: object.isInstancedMesh === true,\n      instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n      supportsVertexTextures: vertexTextures,\n      outputEncoding: currentRenderTarget === null ? renderer.outputEncoding : currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding,\n      map: !!material.map,\n      matcap: !!material.matcap,\n      envMap: !!envMap,\n      envMapMode: envMap && envMap.mapping,\n      envMapCubeUVHeight: envMapCubeUVHeight,\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n      tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n      decodeVideoTexture: !!material.map && material.map.isVideoTexture === true && material.map.encoding === sRGBEncoding,\n      clearcoat: useClearcoat,\n      clearcoatMap: useClearcoat && !!material.clearcoatMap,\n      clearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n      clearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n      iridescence: useIridescence,\n      iridescenceMap: useIridescence && !!material.iridescenceMap,\n      iridescenceThicknessMap: useIridescence && !!material.iridescenceThicknessMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      specularIntensityMap: !!material.specularIntensityMap,\n      specularColorMap: !!material.specularColorMap,\n      opaque: material.transparent === false && material.blending === NormalBlending,\n      alphaMap: !!material.alphaMap,\n      alphaTest: useAlphaTest,\n      gradientMap: !!material.gradientMap,\n      sheen: material.sheen > 0,\n      sheenColorMap: !!material.sheenColorMap,\n      sheenRoughnessMap: !!material.sheenRoughnessMap,\n      transmission: material.transmission > 0,\n      transmissionMap: !!material.transmissionMap,\n      thicknessMap: !!material.thicknessMap,\n      combine: material.combine,\n      vertexTangents: !!material.normalMap && !!geometry.attributes.tangent,\n      vertexColors: material.vertexColors,\n      vertexAlphas: material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n      vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || !!material.sheenRoughnessMap,\n      uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,\n      fog: !!fog,\n      useFog: material.fog === true,\n      fogExp2: fog && fog.isFogExp2,\n      flatShading: !!material.flatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      skinning: object.isSkinnedMesh === true,\n      morphTargets: geometry.morphAttributes.position !== undefined,\n      morphNormals: geometry.morphAttributes.normal !== undefined,\n      morphColors: geometry.morphAttributes.color !== undefined,\n      morphTargetsCount: morphTargetsCount,\n      morphTextureStride: morphTextureStride,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numRectAreaLights: lights.rectArea.length,\n      numHemiLights: lights.hemi.length,\n      numDirLightShadows: lights.directionalShadowMap.length,\n      numPointLightShadows: lights.pointShadowMap.length,\n      numSpotLightShadows: lights.spotShadowMap.length,\n      numClippingPlanes: clipping.numPlanes,\n      numClipIntersection: clipping.numIntersection,\n      dithering: material.dithering,\n      shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      doubleSided: material.side === DoubleSide,\n      flipSided: material.side === BackSide,\n      useDepthPacking: !!material.depthPacking,\n      depthPacking: material.depthPacking || 0,\n      index0AttributeName: material.index0AttributeName,\n      extensionDerivatives: material.extensions && material.extensions.derivatives,\n      extensionFragDepth: material.extensions && material.extensions.fragDepth,\n      extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n      extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n      rendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n      rendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n      rendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n      customProgramCacheKey: material.customProgramCacheKey()\n    };\n    return parameters;\n  }\n\n  function getProgramCacheKey(parameters) {\n    var array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(parameters.customVertexShaderID);\n      array.push(parameters.customFragmentShaderID);\n    }\n\n    if (parameters.defines !== undefined) {\n      for (var name in parameters.defines) {\n        array.push(name);\n        array.push(parameters.defines[name]);\n      }\n    }\n\n    if (parameters.isRawShaderMaterial === false) {\n      getProgramCacheKeyParameters(array, parameters);\n      getProgramCacheKeyBooleans(array, parameters);\n      array.push(renderer.outputEncoding);\n    }\n\n    array.push(parameters.customProgramCacheKey);\n    return array.join();\n  }\n\n  function getProgramCacheKeyParameters(array, parameters) {\n    array.push(parameters.precision);\n    array.push(parameters.outputEncoding);\n    array.push(parameters.envMapMode);\n    array.push(parameters.envMapCubeUVHeight);\n    array.push(parameters.combine);\n    array.push(parameters.vertexUvs);\n    array.push(parameters.fogExp2);\n    array.push(parameters.sizeAttenuation);\n    array.push(parameters.morphTargetsCount);\n    array.push(parameters.morphAttributeCount);\n    array.push(parameters.numDirLights);\n    array.push(parameters.numPointLights);\n    array.push(parameters.numSpotLights);\n    array.push(parameters.numHemiLights);\n    array.push(parameters.numRectAreaLights);\n    array.push(parameters.numDirLightShadows);\n    array.push(parameters.numPointLightShadows);\n    array.push(parameters.numSpotLightShadows);\n    array.push(parameters.shadowMapType);\n    array.push(parameters.toneMapping);\n    array.push(parameters.numClippingPlanes);\n    array.push(parameters.numClipIntersection);\n    array.push(parameters.depthPacking);\n  }\n\n  function getProgramCacheKeyBooleans(array, parameters) {\n    _programLayers.disableAll();\n\n    if (parameters.isWebGL2) _programLayers.enable(0);\n    if (parameters.supportsVertexTextures) _programLayers.enable(1);\n    if (parameters.instancing) _programLayers.enable(2);\n    if (parameters.instancingColor) _programLayers.enable(3);\n    if (parameters.map) _programLayers.enable(4);\n    if (parameters.matcap) _programLayers.enable(5);\n    if (parameters.envMap) _programLayers.enable(6);\n    if (parameters.lightMap) _programLayers.enable(7);\n    if (parameters.aoMap) _programLayers.enable(8);\n    if (parameters.emissiveMap) _programLayers.enable(9);\n    if (parameters.bumpMap) _programLayers.enable(10);\n    if (parameters.normalMap) _programLayers.enable(11);\n    if (parameters.objectSpaceNormalMap) _programLayers.enable(12);\n    if (parameters.tangentSpaceNormalMap) _programLayers.enable(13);\n    if (parameters.clearcoat) _programLayers.enable(14);\n    if (parameters.clearcoatMap) _programLayers.enable(15);\n    if (parameters.clearcoatRoughnessMap) _programLayers.enable(16);\n    if (parameters.clearcoatNormalMap) _programLayers.enable(17);\n    if (parameters.iridescence) _programLayers.enable(18);\n    if (parameters.iridescenceMap) _programLayers.enable(19);\n    if (parameters.iridescenceThicknessMap) _programLayers.enable(20);\n    if (parameters.displacementMap) _programLayers.enable(21);\n    if (parameters.specularMap) _programLayers.enable(22);\n    if (parameters.roughnessMap) _programLayers.enable(23);\n    if (parameters.metalnessMap) _programLayers.enable(24);\n    if (parameters.gradientMap) _programLayers.enable(25);\n    if (parameters.alphaMap) _programLayers.enable(26);\n    if (parameters.alphaTest) _programLayers.enable(27);\n    if (parameters.vertexColors) _programLayers.enable(28);\n    if (parameters.vertexAlphas) _programLayers.enable(29);\n    if (parameters.vertexUvs) _programLayers.enable(30);\n    if (parameters.vertexTangents) _programLayers.enable(31);\n    if (parameters.uvsVertexOnly) _programLayers.enable(32);\n    if (parameters.fog) _programLayers.enable(33);\n    array.push(_programLayers.mask);\n\n    _programLayers.disableAll();\n\n    if (parameters.useFog) _programLayers.enable(0);\n    if (parameters.flatShading) _programLayers.enable(1);\n    if (parameters.logarithmicDepthBuffer) _programLayers.enable(2);\n    if (parameters.skinning) _programLayers.enable(3);\n    if (parameters.morphTargets) _programLayers.enable(4);\n    if (parameters.morphNormals) _programLayers.enable(5);\n    if (parameters.morphColors) _programLayers.enable(6);\n    if (parameters.premultipliedAlpha) _programLayers.enable(7);\n    if (parameters.shadowMapEnabled) _programLayers.enable(8);\n    if (parameters.physicallyCorrectLights) _programLayers.enable(9);\n    if (parameters.doubleSided) _programLayers.enable(10);\n    if (parameters.flipSided) _programLayers.enable(11);\n    if (parameters.useDepthPacking) _programLayers.enable(12);\n    if (parameters.dithering) _programLayers.enable(13);\n    if (parameters.specularIntensityMap) _programLayers.enable(14);\n    if (parameters.specularColorMap) _programLayers.enable(15);\n    if (parameters.transmission) _programLayers.enable(16);\n    if (parameters.transmissionMap) _programLayers.enable(17);\n    if (parameters.thicknessMap) _programLayers.enable(18);\n    if (parameters.sheen) _programLayers.enable(19);\n    if (parameters.sheenColorMap) _programLayers.enable(20);\n    if (parameters.sheenRoughnessMap) _programLayers.enable(21);\n    if (parameters.decodeVideoTexture) _programLayers.enable(22);\n    if (parameters.opaque) _programLayers.enable(23);\n    array.push(_programLayers.mask);\n  }\n\n  function getUniforms(material) {\n    var shaderID = shaderIDs[material.type];\n    var uniforms;\n\n    if (shaderID) {\n      var shader = ShaderLib[shaderID];\n      uniforms = UniformsUtils.clone(shader.uniforms);\n    } else {\n      uniforms = material.uniforms;\n    }\n\n    return uniforms;\n  }\n\n  function acquireProgram(parameters, cacheKey) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var preexistingProgram = programs[p];\n\n      if (preexistingProgram.cacheKey === cacheKey) {\n        program = preexistingProgram;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n      programs.push(program);\n    }\n\n    return program;\n  }\n\n  function releaseProgram(program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }\n\n  function releaseShaderCache(material) {\n    _customShaders.remove(material);\n  }\n\n  function dispose() {\n    _customShaders.dispose();\n  }\n\n  return {\n    getParameters: getParameters,\n    getProgramCacheKey: getProgramCacheKey,\n    getUniforms: getUniforms,\n    acquireProgram: acquireProgram,\n    releaseProgram: releaseProgram,\n    releaseShaderCache: releaseShaderCache,\n    // Exposed for resource monitoring & error feedback via renderer.info:\n    programs: programs,\n    dispose: dispose\n  };\n}\n\nfunction WebGLProperties() {\n  var properties = new WeakMap();\n\n  function get(object) {\n    var map = properties.get(object);\n\n    if (map === undefined) {\n      map = {};\n      properties.set(object, map);\n    }\n\n    return map;\n  }\n\n  function remove(object) {\n    properties.delete(object);\n  }\n\n  function update(object, key, value) {\n    properties.get(object)[key] = value;\n  }\n\n  function dispose() {\n    properties = new WeakMap();\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update,\n    dispose: dispose\n  };\n}\n\nfunction painterSortStable(a, b) {\n  if (a.groupOrder !== b.groupOrder) {\n    return a.groupOrder - b.groupOrder;\n  } else if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.material.id !== b.material.id) {\n    return a.material.id - b.material.id;\n  } else if (a.z !== b.z) {\n    return a.z - b.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction reversePainterSortStable(a, b) {\n  if (a.groupOrder !== b.groupOrder) {\n    return a.groupOrder - b.groupOrder;\n  } else if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.z !== b.z) {\n    return b.z - a.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction WebGLRenderList() {\n  var renderItems = [];\n  var renderItemsIndex = 0;\n  var opaque = [];\n  var transmissive = [];\n  var transparent = [];\n\n  function init() {\n    renderItemsIndex = 0;\n    opaque.length = 0;\n    transmissive.length = 0;\n    transparent.length = 0;\n  }\n\n  function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n    var renderItem = renderItems[renderItemsIndex];\n\n    if (renderItem === undefined) {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        groupOrder: groupOrder,\n        renderOrder: object.renderOrder,\n        z: z,\n        group: group\n      };\n      renderItems[renderItemsIndex] = renderItem;\n    } else {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.groupOrder = groupOrder;\n      renderItem.renderOrder = object.renderOrder;\n      renderItem.z = z;\n      renderItem.group = group;\n    }\n\n    renderItemsIndex++;\n    return renderItem;\n  }\n\n  function push(object, geometry, material, groupOrder, z, group) {\n    var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n    if (material.transmission > 0.0) {\n      transmissive.push(renderItem);\n    } else if (material.transparent === true) {\n      transparent.push(renderItem);\n    } else {\n      opaque.push(renderItem);\n    }\n  }\n\n  function unshift(object, geometry, material, groupOrder, z, group) {\n    var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n    if (material.transmission > 0.0) {\n      transmissive.unshift(renderItem);\n    } else if (material.transparent === true) {\n      transparent.unshift(renderItem);\n    } else {\n      opaque.unshift(renderItem);\n    }\n  }\n\n  function sort(customOpaqueSort, customTransparentSort) {\n    if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n    if (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n    if (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n  }\n\n  function finish() {\n    // Clear references from inactive renderItems in the list\n    for (var i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n      var renderItem = renderItems[i];\n      if (renderItem.id === null) break;\n      renderItem.id = null;\n      renderItem.object = null;\n      renderItem.geometry = null;\n      renderItem.material = null;\n      renderItem.group = null;\n    }\n  }\n\n  return {\n    opaque: opaque,\n    transmissive: transmissive,\n    transparent: transparent,\n    init: init,\n    push: push,\n    unshift: unshift,\n    finish: finish,\n    sort: sort\n  };\n}\n\nfunction WebGLRenderLists() {\n  var lists = new WeakMap();\n\n  function get(scene, renderCallDepth) {\n    var list;\n\n    if (lists.has(scene) === false) {\n      list = new WebGLRenderList();\n      lists.set(scene, [list]);\n    } else {\n      if (renderCallDepth >= lists.get(scene).length) {\n        list = new WebGLRenderList();\n        lists.get(scene).push(list);\n      } else {\n        list = lists.get(scene)[renderCallDepth];\n      }\n    }\n\n    return list;\n  }\n\n  function dispose() {\n    lists = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n\nfunction UniformsCache() {\n  var lights = {};\n  return {\n    get: function get(light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      var uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new Vector3(),\n            color: new Color()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new Vector3(),\n            direction: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            decay: 0\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new Vector3(),\n            skyColor: new Color(),\n            groundColor: new Color()\n          };\n          break;\n\n        case 'RectAreaLight':\n          uniforms = {\n            color: new Color(),\n            position: new Vector3(),\n            halfWidth: new Vector3(),\n            halfHeight: new Vector3()\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nfunction ShadowUniformsCache() {\n  var lights = {};\n  return {\n    get: function get(light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      var uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000\n          };\n          break;\n        // TODO (abelnation): set RectAreaLight shadow uniforms\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nvar nextVersion = 0;\n\nfunction shadowCastingLightsFirst(lightA, lightB) {\n  return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n}\n\nfunction WebGLLights(extensions, capabilities) {\n  var cache = new UniformsCache();\n  var shadowCache = ShadowUniformsCache();\n  var state = {\n    version: 0,\n    hash: {\n      directionalLength: -1,\n      pointLength: -1,\n      spotLength: -1,\n      rectAreaLength: -1,\n      hemiLength: -1,\n      numDirectionalShadows: -1,\n      numPointShadows: -1,\n      numSpotShadows: -1\n    },\n    ambient: [0, 0, 0],\n    probe: [],\n    directional: [],\n    directionalShadow: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadow: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    rectArea: [],\n    rectAreaLTC1: null,\n    rectAreaLTC2: null,\n    point: [],\n    pointShadow: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: []\n  };\n\n  for (var i = 0; i < 9; i++) {\n    state.probe.push(new Vector3());\n  }\n\n  var vector3 = new Vector3();\n  var matrix4 = new Matrix4();\n  var matrix42 = new Matrix4();\n\n  function setup(lights, physicallyCorrectLights) {\n    var r = 0,\n        g = 0,\n        b = 0;\n\n    for (var _i31 = 0; _i31 < 9; _i31++) {\n      state.probe[_i31].set(0, 0, 0);\n    }\n\n    var directionalLength = 0;\n    var pointLength = 0;\n    var spotLength = 0;\n    var rectAreaLength = 0;\n    var hemiLength = 0;\n    var numDirectionalShadows = 0;\n    var numPointShadows = 0;\n    var numSpotShadows = 0;\n    lights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n    var scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n    for (var _i32 = 0, l = lights.length; _i32 < l; _i32++) {\n      var light = lights[_i32];\n      var color = light.color;\n      var intensity = light.intensity;\n      var distance = light.distance;\n      var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity * scaleFactor;\n        g += color.g * intensity * scaleFactor;\n        b += color.b * intensity * scaleFactor;\n      } else if (light.isLightProbe) {\n        for (var j = 0; j < 9; j++) {\n          state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n        }\n      } else if (light.isDirectionalLight) {\n        var uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          var shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          state.directionalShadow[directionalLength] = shadowUniforms;\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          numDirectionalShadows++;\n        }\n\n        state.directional[directionalLength] = uniforms;\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        var _uniforms = cache.get(light);\n\n        _uniforms.position.setFromMatrixPosition(light.matrixWorld);\n\n        _uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n\n        _uniforms.distance = distance;\n        _uniforms.coneCos = Math.cos(light.angle);\n        _uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        _uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          var _shadow = light.shadow;\n\n          var _shadowUniforms = shadowCache.get(light);\n\n          _shadowUniforms.shadowBias = _shadow.bias;\n          _shadowUniforms.shadowNormalBias = _shadow.normalBias;\n          _shadowUniforms.shadowRadius = _shadow.radius;\n          _shadowUniforms.shadowMapSize = _shadow.mapSize;\n          state.spotShadow[spotLength] = _shadowUniforms;\n          state.spotShadowMap[spotLength] = shadowMap;\n          state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          numSpotShadows++;\n        }\n\n        state.spot[spotLength] = _uniforms;\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        var _uniforms2 = cache.get(light); // (a) intensity is the total visible light emitted\n        //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n        // (b) intensity is the brightness of the light\n\n\n        _uniforms2.color.copy(color).multiplyScalar(intensity);\n\n        _uniforms2.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n        _uniforms2.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n        state.rectArea[rectAreaLength] = _uniforms2;\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        var _uniforms3 = cache.get(light);\n\n        _uniforms3.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n        _uniforms3.distance = light.distance;\n        _uniforms3.decay = light.decay;\n\n        if (light.castShadow) {\n          var _shadow2 = light.shadow;\n\n          var _shadowUniforms2 = shadowCache.get(light);\n\n          _shadowUniforms2.shadowBias = _shadow2.bias;\n          _shadowUniforms2.shadowNormalBias = _shadow2.normalBias;\n          _shadowUniforms2.shadowRadius = _shadow2.radius;\n          _shadowUniforms2.shadowMapSize = _shadow2.mapSize;\n          _shadowUniforms2.shadowCameraNear = _shadow2.camera.near;\n          _shadowUniforms2.shadowCameraFar = _shadow2.camera.far;\n          state.pointShadow[pointLength] = _shadowUniforms2;\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          numPointShadows++;\n        }\n\n        state.point[pointLength] = _uniforms3;\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        var _uniforms4 = cache.get(light);\n\n        _uniforms4.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n\n        _uniforms4.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n\n        state.hemi[hemiLength] = _uniforms4;\n        hemiLength++;\n      }\n    }\n\n    if (rectAreaLength > 0) {\n      if (capabilities.isWebGL2) {\n        // WebGL 2\n        state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n        state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n      } else {\n        // WebGL 1\n        if (extensions.has('OES_texture_float_linear') === true) {\n          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n        } else if (extensions.has('OES_texture_half_float_linear') === true) {\n          state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n        } else {\n          console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n        }\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n    var hash = state.hash;\n\n    if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n      state.directionalShadow.length = numDirectionalShadows;\n      state.directionalShadowMap.length = numDirectionalShadows;\n      state.pointShadow.length = numPointShadows;\n      state.pointShadowMap.length = numPointShadows;\n      state.spotShadow.length = numSpotShadows;\n      state.spotShadowMap.length = numSpotShadows;\n      state.directionalShadowMatrix.length = numDirectionalShadows;\n      state.pointShadowMatrix.length = numPointShadows;\n      state.spotShadowMatrix.length = numSpotShadows;\n      hash.directionalLength = directionalLength;\n      hash.pointLength = pointLength;\n      hash.spotLength = spotLength;\n      hash.rectAreaLength = rectAreaLength;\n      hash.hemiLength = hemiLength;\n      hash.numDirectionalShadows = numDirectionalShadows;\n      hash.numPointShadows = numPointShadows;\n      hash.numSpotShadows = numSpotShadows;\n      state.version = nextVersion++;\n    }\n  }\n\n  function setupView(lights, camera) {\n    var directionalLength = 0;\n    var pointLength = 0;\n    var spotLength = 0;\n    var rectAreaLength = 0;\n    var hemiLength = 0;\n    var viewMatrix = camera.matrixWorldInverse;\n\n    for (var _i33 = 0, l = lights.length; _i33 < l; _i33++) {\n      var light = lights[_i33];\n\n      if (light.isDirectionalLight) {\n        var uniforms = state.directional[directionalLength];\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        var _uniforms5 = state.spot[spotLength];\n\n        _uniforms5.position.setFromMatrixPosition(light.matrixWorld);\n\n        _uniforms5.position.applyMatrix4(viewMatrix);\n\n        _uniforms5.direction.setFromMatrixPosition(light.matrixWorld);\n\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        _uniforms5.direction.sub(vector3);\n\n        _uniforms5.direction.transformDirection(viewMatrix);\n\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        var _uniforms6 = state.rectArea[rectAreaLength];\n\n        _uniforms6.position.setFromMatrixPosition(light.matrixWorld);\n\n        _uniforms6.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n\n        _uniforms6.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n        _uniforms6.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n        _uniforms6.halfWidth.applyMatrix4(matrix42);\n\n        _uniforms6.halfHeight.applyMatrix4(matrix42);\n\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        var _uniforms7 = state.point[pointLength];\n\n        _uniforms7.position.setFromMatrixPosition(light.matrixWorld);\n\n        _uniforms7.position.applyMatrix4(viewMatrix);\n\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        var _uniforms8 = state.hemi[hemiLength];\n\n        _uniforms8.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _uniforms8.direction.transformDirection(viewMatrix);\n\n        hemiLength++;\n      }\n    }\n  }\n\n  return {\n    setup: setup,\n    setupView: setupView,\n    state: state\n  };\n}\n\nfunction WebGLRenderState(extensions, capabilities) {\n  var lights = new WebGLLights(extensions, capabilities);\n  var lightsArray = [];\n  var shadowsArray = [];\n\n  function init() {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n  }\n\n  function pushLight(light) {\n    lightsArray.push(light);\n  }\n\n  function pushShadow(shadowLight) {\n    shadowsArray.push(shadowLight);\n  }\n\n  function setupLights(physicallyCorrectLights) {\n    lights.setup(lightsArray, physicallyCorrectLights);\n  }\n\n  function setupLightsView(camera) {\n    lights.setupView(lightsArray, camera);\n  }\n\n  var state = {\n    lightsArray: lightsArray,\n    shadowsArray: shadowsArray,\n    lights: lights\n  };\n  return {\n    init: init,\n    state: state,\n    setupLights: setupLights,\n    setupLightsView: setupLightsView,\n    pushLight: pushLight,\n    pushShadow: pushShadow\n  };\n}\n\nfunction WebGLRenderStates(extensions, capabilities) {\n  var renderStates = new WeakMap();\n\n  function get(scene) {\n    var renderCallDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var renderState;\n\n    if (renderStates.has(scene) === false) {\n      renderState = new WebGLRenderState(extensions, capabilities);\n      renderStates.set(scene, [renderState]);\n    } else {\n      if (renderCallDepth >= renderStates.get(scene).length) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStates.get(scene).push(renderState);\n      } else {\n        renderState = renderStates.get(scene)[renderCallDepth];\n      }\n    }\n\n    return renderState;\n  }\n\n  function dispose() {\n    renderStates = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n\nvar MeshDepthMaterial = /*#__PURE__*/function (_Material3) {\n  _inherits(MeshDepthMaterial, _Material3);\n\n  var _super32 = _createSuper(MeshDepthMaterial);\n\n  function MeshDepthMaterial(parameters) {\n    var _this24;\n\n    _classCallCheck(this, MeshDepthMaterial);\n\n    _this24 = _super32.call(this);\n    _this24.isMeshDepthMaterial = true;\n    _this24.type = 'MeshDepthMaterial';\n    _this24.depthPacking = BasicDepthPacking;\n    _this24.map = null;\n    _this24.alphaMap = null;\n    _this24.displacementMap = null;\n    _this24.displacementScale = 1;\n    _this24.displacementBias = 0;\n    _this24.wireframe = false;\n    _this24.wireframeLinewidth = 1;\n\n    _this24.setValues(parameters);\n\n    return _this24;\n  }\n\n  _createClass(MeshDepthMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshDepthMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.depthPacking = source.depthPacking;\n      this.map = source.map;\n      this.alphaMap = source.alphaMap;\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      return this;\n    }\n  }]);\n\n  return MeshDepthMaterial;\n}(Material);\n\nvar MeshDistanceMaterial = /*#__PURE__*/function (_Material4) {\n  _inherits(MeshDistanceMaterial, _Material4);\n\n  var _super33 = _createSuper(MeshDistanceMaterial);\n\n  function MeshDistanceMaterial(parameters) {\n    var _this25;\n\n    _classCallCheck(this, MeshDistanceMaterial);\n\n    _this25 = _super33.call(this);\n    _this25.isMeshDistanceMaterial = true;\n    _this25.type = 'MeshDistanceMaterial';\n    _this25.referencePosition = new Vector3();\n    _this25.nearDistance = 1;\n    _this25.farDistance = 1000;\n    _this25.map = null;\n    _this25.alphaMap = null;\n    _this25.displacementMap = null;\n    _this25.displacementScale = 1;\n    _this25.displacementBias = 0;\n\n    _this25.setValues(parameters);\n\n    return _this25;\n  }\n\n  _createClass(MeshDistanceMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshDistanceMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.referencePosition.copy(source.referencePosition);\n      this.nearDistance = source.nearDistance;\n      this.farDistance = source.farDistance;\n      this.map = source.map;\n      this.alphaMap = source.alphaMap;\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      return this;\n    }\n  }]);\n\n  return MeshDistanceMaterial;\n}(Material);\n\nvar vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\nvar fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n  var _frustum = new Frustum();\n\n  var _shadowMapSize = new Vector2(),\n      _viewportSize = new Vector2(),\n      _viewport = new Vector4(),\n      _depthMaterial = new MeshDepthMaterial({\n    depthPacking: RGBADepthPacking\n  }),\n      _distanceMaterial = new MeshDistanceMaterial(),\n      _materialCache = {},\n      _maxTextureSize = _capabilities.maxTextureSize;\n\n  var shadowSide = {\n    0: BackSide,\n    1: FrontSide,\n    2: DoubleSide\n  };\n  var shadowMaterialVertical = new ShaderMaterial({\n    defines: {\n      VSM_SAMPLES: 8\n    },\n    uniforms: {\n      shadow_pass: {\n        value: null\n      },\n      resolution: {\n        value: new Vector2()\n      },\n      radius: {\n        value: 4.0\n      }\n    },\n    vertexShader: vertex,\n    fragmentShader: fragment\n  });\n  var shadowMaterialHorizontal = shadowMaterialVertical.clone();\n  shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n  var fullScreenTri = new BufferGeometry();\n  fullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n  var fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = PCFShadowMap;\n\n  this.render = function (lights, scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (lights.length === 0) return;\n\n    var currentRenderTarget = _renderer.getRenderTarget();\n\n    var activeCubeFace = _renderer.getActiveCubeFace();\n\n    var activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n    var _state = _renderer.state; // Set GL state for depth map.\n\n    _state.setBlending(NoBlending);\n\n    _state.buffers.color.setClear(1, 1, 1, 1);\n\n    _state.buffers.depth.setTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    for (var i = 0, il = lights.length; i < il; i++) {\n      var light = lights[i];\n      var shadow = light.shadow;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      var shadowFrameExtents = shadow.getFrameExtents();\n\n      _shadowMapSize.multiply(shadowFrameExtents);\n\n      _viewportSize.copy(shadow.mapSize);\n\n      if (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n        if (_shadowMapSize.x > _maxTextureSize) {\n          _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n          _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n          shadow.mapSize.x = _viewportSize.x;\n        }\n\n        if (_shadowMapSize.y > _maxTextureSize) {\n          _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n          _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n          shadow.mapSize.y = _viewportSize.y;\n        }\n      }\n\n      if (shadow.map === null) {\n        var pars = this.type !== VSMShadowMap ? {\n          minFilter: NearestFilter,\n          magFilter: NearestFilter\n        } : {};\n        shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.map.texture.name = light.name + '.shadowMap';\n        shadow.camera.updateProjectionMatrix();\n      }\n\n      _renderer.setRenderTarget(shadow.map);\n\n      _renderer.clear();\n\n      var viewportCount = shadow.getViewportCount();\n\n      for (var vp = 0; vp < viewportCount; vp++) {\n        var viewport = shadow.getViewport(vp);\n\n        _viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n        _state.viewport(_viewport);\n\n        shadow.updateMatrices(light, vp);\n        _frustum = shadow.getFrustum();\n        renderObject(scene, camera, shadow.camera, light, this.type);\n      } // do blur pass for VSM\n\n\n      if (shadow.isPointLightShadow !== true && this.type === VSMShadowMap) {\n        VSMPass(shadow, camera);\n      }\n\n      shadow.needsUpdate = false;\n    }\n\n    scope.needsUpdate = false;\n\n    _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n  };\n\n  function VSMPass(shadow, camera) {\n    var geometry = _objects.update(fullScreenMesh);\n\n    if (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n      shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n      shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n      shadowMaterialVertical.needsUpdate = true;\n      shadowMaterialHorizontal.needsUpdate = true;\n    }\n\n    if (shadow.mapPass === null) {\n      shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y);\n    } // vertical pass\n\n\n    shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n    shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n    _renderer.setRenderTarget(shadow.mapPass);\n\n    _renderer.clear();\n\n    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n    shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n    shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n    _renderer.setRenderTarget(shadow.map);\n\n    _renderer.clear();\n\n    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n  }\n\n  function getDepthMaterial(object, material, light, shadowCameraNear, shadowCameraFar, type) {\n    var result = null;\n    var customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n    if (customMaterial !== undefined) {\n      result = customMaterial;\n    } else {\n      result = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && Array.isArray(material.clippingPlanes) && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      var keyA = result.uuid,\n          keyB = material.uuid;\n      var materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      var cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n\n    if (type === VSMShadowMap) {\n      result.side = material.shadowSide !== null ? material.shadowSide : material.side;\n    } else {\n      result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n    }\n\n    result.alphaMap = material.alphaMap;\n    result.alphaTest = material.alphaTest;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.clipIntersection = material.clipIntersection;\n    result.displacementMap = material.displacementMap;\n    result.displacementScale = material.displacementScale;\n    result.displacementBias = material.displacementBias;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n      result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n      result.nearDistance = shadowCameraNear;\n      result.farDistance = shadowCameraFar;\n    }\n\n    return result;\n  }\n\n  function renderObject(object, camera, shadowCamera, light, type) {\n    if (object.visible === false) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n      if ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n        object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n        var geometry = _objects.update(object);\n\n        var material = object.material;\n\n        if (Array.isArray(material)) {\n          var groups = geometry.groups;\n\n          for (var k = 0, kl = groups.length; k < kl; k++) {\n            var group = groups[k];\n            var groupMaterial = material[group.materialIndex];\n\n            if (groupMaterial && groupMaterial.visible) {\n              var depthMaterial = getDepthMaterial(object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n            }\n          }\n        } else if (material.visible) {\n          var _depthMaterial2 = getDepthMaterial(object, material, light, shadowCamera.near, shadowCamera.far, type);\n\n          _renderer.renderBufferDirect(shadowCamera, null, geometry, _depthMaterial2, object, null);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      renderObject(children[i], camera, shadowCamera, light, type);\n    }\n  }\n}\n\nfunction WebGLState(gl, extensions, capabilities) {\n  var _equationToGL, _factorToGL;\n\n  var isWebGL2 = capabilities.isWebGL2;\n\n  function ColorBuffer() {\n    var locked = false;\n    var color = new Vector4();\n    var currentColorMask = null;\n    var currentColorClear = new Vector4(0, 0, 0, 0);\n    return {\n      setMask: function setMask(colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function setLocked(lock) {\n        locked = lock;\n      },\n      setClear: function setClear(r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function reset() {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    var locked = false;\n    var currentDepthMask = null;\n    var currentDepthFunc = null;\n    var currentDepthClear = null;\n    return {\n      setTest: function setTest(depthTest) {\n        if (depthTest) {\n          enable(2929);\n        } else {\n          disable(2929);\n        }\n      },\n      setMask: function setMask(depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function setFunc(depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          if (depthFunc) {\n            switch (depthFunc) {\n              case NeverDepth:\n                gl.depthFunc(512);\n                break;\n\n              case AlwaysDepth:\n                gl.depthFunc(519);\n                break;\n\n              case LessDepth:\n                gl.depthFunc(513);\n                break;\n\n              case LessEqualDepth:\n                gl.depthFunc(515);\n                break;\n\n              case EqualDepth:\n                gl.depthFunc(514);\n                break;\n\n              case GreaterEqualDepth:\n                gl.depthFunc(518);\n                break;\n\n              case GreaterDepth:\n                gl.depthFunc(516);\n                break;\n\n              case NotEqualDepth:\n                gl.depthFunc(517);\n                break;\n\n              default:\n                gl.depthFunc(515);\n            }\n          } else {\n            gl.depthFunc(515);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function setLocked(lock) {\n        locked = lock;\n      },\n      setClear: function setClear(depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function reset() {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n\n  function StencilBuffer() {\n    var locked = false;\n    var currentStencilMask = null;\n    var currentStencilFunc = null;\n    var currentStencilRef = null;\n    var currentStencilFuncMask = null;\n    var currentStencilFail = null;\n    var currentStencilZFail = null;\n    var currentStencilZPass = null;\n    var currentStencilClear = null;\n    return {\n      setTest: function setTest(stencilTest) {\n        if (!locked) {\n          if (stencilTest) {\n            enable(2960);\n          } else {\n            disable(2960);\n          }\n        }\n      },\n      setMask: function setMask(stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function setFunc(stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function setOp(stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function setLocked(lock) {\n        locked = lock;\n      },\n      setClear: function setClear(stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function reset() {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  } //\n\n\n  var colorBuffer = new ColorBuffer();\n  var depthBuffer = new DepthBuffer();\n  var stencilBuffer = new StencilBuffer();\n  var enabledCapabilities = {};\n  var currentBoundFramebuffers = {};\n  var currentDrawbuffers = new WeakMap();\n  var defaultDrawbuffers = [];\n  var currentProgram = null;\n  var currentBlendingEnabled = false;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentFlipSided = null;\n  var currentCullFace = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var maxTextures = gl.getParameter(35661);\n  var lineWidthAvailable = false;\n  var version = 0;\n  var glVersion = gl.getParameter(7938);\n\n  if (glVersion.indexOf('WebGL') !== -1) {\n    version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n    version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n\n  var currentTextureSlot = null;\n  var currentBoundTextures = {};\n  var scissorParam = gl.getParameter(3088);\n  var viewportParam = gl.getParameter(2978);\n  var currentScissor = new Vector4().fromArray(scissorParam);\n  var currentViewport = new Vector4().fromArray(viewportParam);\n\n  function createTexture(type, target, count) {\n    var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n    var texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, 10241, 9728);\n    gl.texParameteri(type, 10240, 9728);\n\n    for (var i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n    }\n\n    return texture;\n  }\n\n  var emptyTextures = {};\n  emptyTextures[3553] = createTexture(3553, 3553, 1);\n  emptyTextures[34067] = createTexture(34067, 34069, 6); // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(2929);\n  depthBuffer.setFunc(LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(CullFaceBack);\n  enable(2884);\n  setBlending(NoBlending); //\n\n  function enable(id) {\n    if (enabledCapabilities[id] !== true) {\n      gl.enable(id);\n      enabledCapabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (enabledCapabilities[id] !== false) {\n      gl.disable(id);\n      enabledCapabilities[id] = false;\n    }\n  }\n\n  function bindFramebuffer(target, framebuffer) {\n    if (currentBoundFramebuffers[target] !== framebuffer) {\n      gl.bindFramebuffer(target, framebuffer);\n      currentBoundFramebuffers[target] = framebuffer;\n\n      if (isWebGL2) {\n        // 36009 is equivalent to 36160\n        if (target === 36009) {\n          currentBoundFramebuffers[36160] = framebuffer;\n        }\n\n        if (target === 36160) {\n          currentBoundFramebuffers[36009] = framebuffer;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function drawBuffers(renderTarget, framebuffer) {\n    var drawBuffers = defaultDrawbuffers;\n    var needsUpdate = false;\n\n    if (renderTarget) {\n      drawBuffers = currentDrawbuffers.get(framebuffer);\n\n      if (drawBuffers === undefined) {\n        drawBuffers = [];\n        currentDrawbuffers.set(framebuffer, drawBuffers);\n      }\n\n      if (renderTarget.isWebGLMultipleRenderTargets) {\n        var textures = renderTarget.texture;\n\n        if (drawBuffers.length !== textures.length || drawBuffers[0] !== 36064) {\n          for (var i = 0, il = textures.length; i < il; i++) {\n            drawBuffers[i] = 36064 + i;\n          }\n\n          drawBuffers.length = textures.length;\n          needsUpdate = true;\n        }\n      } else {\n        if (drawBuffers[0] !== 36064) {\n          drawBuffers[0] = 36064;\n          needsUpdate = true;\n        }\n      }\n    } else {\n      if (drawBuffers[0] !== 1029) {\n        drawBuffers[0] = 1029;\n        needsUpdate = true;\n      }\n    }\n\n    if (needsUpdate) {\n      if (capabilities.isWebGL2) {\n        gl.drawBuffers(drawBuffers);\n      } else {\n        extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(drawBuffers);\n      }\n    }\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n\n    return false;\n  }\n\n  var equationToGL = (_equationToGL = {}, _defineProperty(_equationToGL, AddEquation, 32774), _defineProperty(_equationToGL, SubtractEquation, 32778), _defineProperty(_equationToGL, ReverseSubtractEquation, 32779), _equationToGL);\n\n  if (isWebGL2) {\n    equationToGL[MinEquation] = 32775;\n    equationToGL[MaxEquation] = 32776;\n  } else {\n    var extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      equationToGL[MinEquation] = extension.MIN_EXT;\n      equationToGL[MaxEquation] = extension.MAX_EXT;\n    }\n  }\n\n  var factorToGL = (_factorToGL = {}, _defineProperty(_factorToGL, ZeroFactor, 0), _defineProperty(_factorToGL, OneFactor, 1), _defineProperty(_factorToGL, SrcColorFactor, 768), _defineProperty(_factorToGL, SrcAlphaFactor, 770), _defineProperty(_factorToGL, SrcAlphaSaturateFactor, 776), _defineProperty(_factorToGL, DstColorFactor, 774), _defineProperty(_factorToGL, DstAlphaFactor, 772), _defineProperty(_factorToGL, OneMinusSrcColorFactor, 769), _defineProperty(_factorToGL, OneMinusSrcAlphaFactor, 771), _defineProperty(_factorToGL, OneMinusDstColorFactor, 775), _defineProperty(_factorToGL, OneMinusDstAlphaFactor, 773), _factorToGL);\n\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === NoBlending) {\n      if (currentBlendingEnabled === true) {\n        disable(3042);\n        currentBlendingEnabled = false;\n      }\n\n      return;\n    }\n\n    if (currentBlendingEnabled === false) {\n      enable(3042);\n      currentBlendingEnabled = true;\n    }\n\n    if (blending !== CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n          gl.blendEquation(32774);\n          currentBlendEquation = AddEquation;\n          currentBlendEquationAlpha = AddEquation;\n        }\n\n        if (premultipliedAlpha) {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(1, 771, 1, 771);\n              break;\n\n            case AdditiveBlending:\n              gl.blendFunc(1, 1);\n              break;\n\n            case SubtractiveBlending:\n              gl.blendFuncSeparate(0, 769, 0, 1);\n              break;\n\n            case MultiplyBlending:\n              gl.blendFuncSeparate(0, 768, 0, 770);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        } else {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(770, 771, 1, 771);\n              break;\n\n            case AdditiveBlending:\n              gl.blendFunc(770, 1);\n              break;\n\n            case SubtractiveBlending:\n              gl.blendFuncSeparate(0, 769, 0, 1);\n              break;\n\n            case MultiplyBlending:\n              gl.blendFunc(0, 768);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        }\n\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      return;\n    } // custom blending\n\n\n    blendEquationAlpha = blendEquationAlpha || blendEquation;\n    blendSrcAlpha = blendSrcAlpha || blendSrc;\n    blendDstAlpha = blendDstAlpha || blendDst;\n\n    if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n      gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n      currentBlendEquation = blendEquation;\n      currentBlendEquationAlpha = blendEquationAlpha;\n    }\n\n    if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n      gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n      currentBlendSrc = blendSrc;\n      currentBlendDst = blendDst;\n      currentBlendSrcAlpha = blendSrcAlpha;\n      currentBlendDstAlpha = blendDstAlpha;\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = null;\n  }\n\n  function setMaterial(material, frontFaceCW) {\n    material.side === DoubleSide ? disable(2884) : enable(2884);\n    var flipSided = material.side === BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n    setFlipSided(flipSided);\n    material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    var stencilWrite = material.stencilWrite;\n    stencilBuffer.setTest(stencilWrite);\n\n    if (stencilWrite) {\n      stencilBuffer.setMask(material.stencilWriteMask);\n      stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n      stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n    }\n\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    material.alphaToCoverage === true ? enable(32926) : disable(32926);\n  } //\n\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(2304);\n      } else {\n        gl.frontFace(2305);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== CullFaceNone) {\n      enable(2884);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === CullFaceBack) {\n          gl.cullFace(1029);\n        } else if (cullFace === CullFaceFront) {\n          gl.cullFace(1028);\n        } else {\n          gl.cullFace(1032);\n        }\n      }\n    } else {\n      disable(2884);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(32823);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(32823);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(3089);\n    } else {\n      disable(3089);\n    }\n  } // texture\n\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = 33984 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function unbindTexture() {\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture !== undefined && boundTexture.type !== undefined) {\n      gl.bindTexture(boundTexture.type, null);\n      boundTexture.type = undefined;\n      boundTexture.texture = undefined;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage2D() {\n    try {\n      gl.texSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage3D() {\n    try {\n      gl.texSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function compressedTexSubImage2D() {\n    try {\n      gl.compressedTexSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage2D() {\n    try {\n      gl.texStorage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage3D() {\n    try {\n      gl.texStorage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage3D() {\n    try {\n      gl.texImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  } //\n\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  } //\n\n\n  function reset() {\n    // reset state\n    gl.disable(3042);\n    gl.disable(2884);\n    gl.disable(2929);\n    gl.disable(32823);\n    gl.disable(3089);\n    gl.disable(2960);\n    gl.disable(32926);\n    gl.blendEquation(32774);\n    gl.blendFunc(1, 0);\n    gl.blendFuncSeparate(1, 0, 1, 0);\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0, 0, 0, 0);\n    gl.depthMask(true);\n    gl.depthFunc(513);\n    gl.clearDepth(1);\n    gl.stencilMask(0xffffffff);\n    gl.stencilFunc(519, 0, 0xffffffff);\n    gl.stencilOp(7680, 7680, 7680);\n    gl.clearStencil(0);\n    gl.cullFace(1029);\n    gl.frontFace(2305);\n    gl.polygonOffset(0, 0);\n    gl.activeTexture(33984);\n    gl.bindFramebuffer(36160, null);\n\n    if (isWebGL2 === true) {\n      gl.bindFramebuffer(36009, null);\n      gl.bindFramebuffer(36008, null);\n    }\n\n    gl.useProgram(null);\n    gl.lineWidth(1);\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n    enabledCapabilities = {};\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBoundFramebuffers = {};\n    currentDrawbuffers = new WeakMap();\n    defaultDrawbuffers = [];\n    currentProgram = null;\n    currentBlendingEnabled = false;\n    currentBlending = null;\n    currentBlendEquation = null;\n    currentBlendSrc = null;\n    currentBlendDst = null;\n    currentBlendEquationAlpha = null;\n    currentBlendSrcAlpha = null;\n    currentBlendDstAlpha = null;\n    currentPremultipledAlpha = false;\n    currentFlipSided = null;\n    currentCullFace = null;\n    currentLineWidth = null;\n    currentPolygonOffsetFactor = null;\n    currentPolygonOffsetUnits = null;\n    currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n    currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    enable: enable,\n    disable: disable,\n    bindFramebuffer: bindFramebuffer,\n    drawBuffers: drawBuffers,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    unbindTexture: unbindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    texImage2D: texImage2D,\n    texImage3D: texImage3D,\n    texStorage2D: texStorage2D,\n    texStorage3D: texStorage3D,\n    texSubImage2D: texSubImage2D,\n    texSubImage3D: texSubImage3D,\n    compressedTexSubImage2D: compressedTexSubImage2D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\n\nfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n  var _wrappingToGL, _filterToGL;\n\n  var isWebGL2 = capabilities.isWebGL2;\n  var maxTextures = capabilities.maxTextures;\n  var maxCubemapSize = capabilities.maxCubemapSize;\n  var maxTextureSize = capabilities.maxTextureSize;\n  var maxSamples = capabilities.maxSamples;\n  var multisampledRTTExt = extensions.has('WEBGL_multisampled_render_to_texture') ? extensions.get('WEBGL_multisampled_render_to_texture') : null;\n  var supportsInvalidateFramebuffer = /OculusBrowser/g.test(navigator.userAgent);\n\n  var _videoTextures = new WeakMap();\n\n  var _canvas;\n\n  var _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n  // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n  // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n  // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n  var useOffscreenCanvas = false;\n\n  try {\n    useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' // eslint-disable-next-line compat/compat\n    && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n  } catch (err) {// Ignore any errors\n  }\n\n  function createCanvas(width, height) {\n    // Use OffscreenCanvas when available. Specially needed in web workers\n    return useOffscreenCanvas ? // eslint-disable-next-line compat/compat\n    new OffscreenCanvas(width, height) : createElementNS('canvas');\n  }\n\n  function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n    var scale = 1; // handle case if texture exceeds max size\n\n    if (image.width > maxSize || image.height > maxSize) {\n      scale = maxSize / Math.max(image.width, image.height);\n    } // only perform resize if necessary\n\n\n    if (scale < 1 || needsPowerOfTwo === true) {\n      // only perform resize for certain image types\n      if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        var floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n        var width = floor(scale * image.width);\n        var height = floor(scale * image.height);\n        if (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n        var canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n        canvas.width = width;\n        canvas.height = height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, width, height);\n        console.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n        return canvas;\n      } else {\n        if ('data' in image) {\n          console.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n        }\n\n        return image;\n      }\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo$1(image) {\n    return isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (isWebGL2) return false;\n    return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  }\n\n  function textureNeedsGenerateMipmaps(texture, supportsMips) {\n    return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  }\n\n  function generateMipmap(target) {\n    _gl.generateMipmap(target);\n  }\n\n  function getInternalFormat(internalFormatName, glFormat, glType, encoding) {\n    var isVideoTexture = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    if (isWebGL2 === false) return glFormat;\n\n    if (internalFormatName !== null) {\n      if (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n      console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n    }\n\n    var internalFormat = glFormat;\n\n    if (glFormat === 6403) {\n      if (glType === 5126) internalFormat = 33326;\n      if (glType === 5131) internalFormat = 33325;\n      if (glType === 5121) internalFormat = 33321;\n    }\n\n    if (glFormat === 33319) {\n      if (glType === 5126) internalFormat = 33328;\n      if (glType === 5131) internalFormat = 33327;\n      if (glType === 5121) internalFormat = 33323;\n    }\n\n    if (glFormat === 6408) {\n      if (glType === 5126) internalFormat = 34836;\n      if (glType === 5131) internalFormat = 34842;\n      if (glType === 5121) internalFormat = encoding === sRGBEncoding && isVideoTexture === false ? 35907 : 32856;\n      if (glType === 32819) internalFormat = 32854;\n      if (glType === 32820) internalFormat = 32855;\n    }\n\n    if (internalFormat === 33325 || internalFormat === 33326 || internalFormat === 33327 || internalFormat === 33328 || internalFormat === 34842 || internalFormat === 34836) {\n      extensions.get('EXT_color_buffer_float');\n    }\n\n    return internalFormat;\n  }\n\n  function getMipLevels(texture, image, supportsMips) {\n    if (textureNeedsGenerateMipmaps(texture, supportsMips) === true || texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n      return Math.log2(Math.max(image.width, image.height)) + 1;\n    } else if (texture.mipmaps !== undefined && texture.mipmaps.length > 0) {\n      // user-defined mipmaps\n      return texture.mipmaps.length;\n    } else if (texture.isCompressedTexture && Array.isArray(texture.image)) {\n      return image.mipmaps.length;\n    } else {\n      // texture without mipmaps (only base level)\n      return 1;\n    }\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n      return 9728;\n    }\n\n    return 9729;\n  } //\n\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n\n    if (texture.isVideoTexture) {\n      _videoTextures.delete(texture);\n    }\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n  } //\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n    if (textureProperties.__webglInit === undefined) return; // check if it's necessary to remove the WebGLTexture object\n\n    var source = texture.source;\n\n    var webglTextures = _sources.get(source);\n\n    if (webglTextures) {\n      var webglTexture = webglTextures[textureProperties.__cacheKey];\n      webglTexture.usedTimes--; // the WebGLTexture object is not used anymore, remove it\n\n      if (webglTexture.usedTimes === 0) {\n        deleteTexture(texture);\n      } // remove the weak map entry if no WebGLTexture uses the source anymore\n\n\n      if (Object.keys(webglTextures).length === 0) {\n        _sources.delete(source);\n      }\n    }\n\n    properties.remove(texture);\n  }\n\n  function deleteTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    _gl.deleteTexture(textureProperties.__webglTexture);\n\n    var source = texture.source;\n\n    var webglTextures = _sources.get(source);\n\n    delete webglTextures[textureProperties.__cacheKey];\n    info.memory.textures--;\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var texture = renderTarget.texture;\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(texture);\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n\n      info.memory.textures--;\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget.isWebGLCubeRenderTarget) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      if (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\n      if (renderTargetProperties.__webglColorRenderbuffer) {\n        for (var _i34 = 0; _i34 < renderTargetProperties.__webglColorRenderbuffer.length; _i34++) {\n          if (renderTargetProperties.__webglColorRenderbuffer[_i34]) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer[_i34]);\n        }\n      }\n\n      if (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n    }\n\n    if (renderTarget.isWebGLMultipleRenderTargets) {\n      for (var _i35 = 0, il = texture.length; _i35 < il; _i35++) {\n        var attachmentProperties = properties.get(texture[_i35]);\n\n        if (attachmentProperties.__webglTexture) {\n          _gl.deleteTexture(attachmentProperties.__webglTexture);\n\n          info.memory.textures--;\n        }\n\n        properties.remove(texture[_i35]);\n      }\n    }\n\n    properties.remove(texture);\n    properties.remove(renderTarget);\n  } //\n\n\n  var textureUnits = 0;\n\n  function resetTextureUnits() {\n    textureUnits = 0;\n  }\n\n  function allocateTextureUnit() {\n    var textureUnit = textureUnits;\n\n    if (textureUnit >= maxTextures) {\n      console.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n    }\n\n    textureUnits += 1;\n    return textureUnit;\n  }\n\n  function getTextureCacheKey(texture) {\n    var array = [];\n    array.push(texture.wrapS);\n    array.push(texture.wrapT);\n    array.push(texture.magFilter);\n    array.push(texture.minFilter);\n    array.push(texture.anisotropy);\n    array.push(texture.internalFormat);\n    array.push(texture.format);\n    array.push(texture.type);\n    array.push(texture.generateMipmaps);\n    array.push(texture.premultiplyAlpha);\n    array.push(texture.flipY);\n    array.push(texture.unpackAlignment);\n    array.push(texture.encoding);\n    return array.join();\n  } //\n\n\n  function setTexture2D(texture, slot) {\n    var textureProperties = properties.get(texture);\n    if (texture.isVideoTexture) updateVideoTexture(texture);\n\n    if (texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === null) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but no image data found.');\n      } else if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n      } else {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(3553, textureProperties.__webglTexture);\n  }\n\n  function setTexture2DArray(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(35866, textureProperties.__webglTexture);\n  }\n\n  function setTexture3D(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(32879, textureProperties.__webglTexture);\n  }\n\n  function setTextureCube(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      uploadCubeTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(34067, textureProperties.__webglTexture);\n  }\n\n  var wrappingToGL = (_wrappingToGL = {}, _defineProperty(_wrappingToGL, RepeatWrapping, 10497), _defineProperty(_wrappingToGL, ClampToEdgeWrapping, 33071), _defineProperty(_wrappingToGL, MirroredRepeatWrapping, 33648), _wrappingToGL);\n  var filterToGL = (_filterToGL = {}, _defineProperty(_filterToGL, NearestFilter, 9728), _defineProperty(_filterToGL, NearestMipmapNearestFilter, 9984), _defineProperty(_filterToGL, NearestMipmapLinearFilter, 9986), _defineProperty(_filterToGL, LinearFilter, 9729), _defineProperty(_filterToGL, LinearMipmapNearestFilter, 9985), _defineProperty(_filterToGL, LinearMipmapLinearFilter, 9987), _filterToGL);\n\n  function setTextureParameters(textureType, texture, supportsMips) {\n    if (supportsMips) {\n      _gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);\n\n      _gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);\n\n      if (textureType === 32879 || textureType === 35866) {\n        _gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);\n      }\n\n      _gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);\n\n      _gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);\n    } else {\n      _gl.texParameteri(textureType, 10242, 33071);\n\n      _gl.texParameteri(textureType, 10243, 33071);\n\n      if (textureType === 32879 || textureType === 35866) {\n        _gl.texParameteri(textureType, 32882, 33071);\n      }\n\n      if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n      }\n\n      _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n      }\n    }\n\n    if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n      if (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n      if (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function initTexture(textureProperties, texture) {\n    var forceUpload = false;\n\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n    } // create Source <-> WebGLTextures mapping if necessary\n\n\n    var source = texture.source;\n\n    var webglTextures = _sources.get(source);\n\n    if (webglTextures === undefined) {\n      webglTextures = {};\n\n      _sources.set(source, webglTextures);\n    } // check if there is already a WebGLTexture object for the given texture parameters\n\n\n    var textureCacheKey = getTextureCacheKey(texture);\n\n    if (textureCacheKey !== textureProperties.__cacheKey) {\n      // if not, create a new instance of WebGLTexture\n      if (webglTextures[textureCacheKey] === undefined) {\n        // create new entry\n        webglTextures[textureCacheKey] = {\n          texture: _gl.createTexture(),\n          usedTimes: 0\n        };\n        info.memory.textures++; // when a new instance of WebGLTexture was created, a texture upload is required\n        // even if the image contents are identical\n\n        forceUpload = true;\n      }\n\n      webglTextures[textureCacheKey].usedTimes++; // every time the texture cache key changes, it's necessary to check if an instance of\n      // WebGLTexture can be deleted in order to avoid a memory leak.\n\n      var webglTexture = webglTextures[textureProperties.__cacheKey];\n\n      if (webglTexture !== undefined) {\n        webglTextures[textureProperties.__cacheKey].usedTimes--;\n\n        if (webglTexture.usedTimes === 0) {\n          deleteTexture(texture);\n        }\n      } // store references to cache key and WebGLTexture object\n\n\n      textureProperties.__cacheKey = textureCacheKey;\n      textureProperties.__webglTexture = webglTextures[textureCacheKey].texture;\n    }\n\n    return forceUpload;\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    var textureType = 3553;\n    if (texture.isDataArrayTexture) textureType = 35866;\n    if (texture.isData3DTexture) textureType = 32879;\n    var forceUpload = initTexture(textureProperties, texture);\n    var source = texture.source;\n    state.activeTexture(33984 + slot);\n    state.bindTexture(textureType, textureProperties.__webglTexture);\n\n    if (source.version !== source.__currentVersion || forceUpload === true) {\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      _gl.pixelStorei(37443, 0);\n\n      var needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n      var image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n      image = verifyColorSpace(texture, image);\n      var supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n          glFormat = utils.convert(texture.format, texture.encoding);\n      var glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture);\n      setTextureParameters(textureType, texture, supportsMips);\n      var mipmap;\n      var mipmaps = texture.mipmaps;\n      var useTexStorage = isWebGL2 && texture.isVideoTexture !== true;\n      var allocateMemory = source.__currentVersion === undefined || forceUpload === true;\n      var levels = getMipLevels(texture, image, supportsMips);\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = 6402;\n\n        if (isWebGL2) {\n          if (texture.type === FloatType) {\n            glInternalFormat = 36012;\n          } else if (texture.type === UnsignedIntType) {\n            glInternalFormat = 33190;\n          } else if (texture.type === UnsignedInt248Type) {\n            glInternalFormat = 35056;\n          } else {\n            glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n          }\n        } else {\n          if (texture.type === FloatType) {\n            console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n          }\n        } // validation checks for WebGL 1\n\n\n        if (texture.format === DepthFormat && glInternalFormat === 6402) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedIntType;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        if (texture.format === DepthStencilFormat && glInternalFormat === 6402) {\n          // Depth stencil textures need the DEPTH_STENCIL internal format\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          glInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        } //\n\n\n        if (allocateMemory) {\n          if (useTexStorage) {\n            state.texStorage2D(3553, 1, glInternalFormat, image.width, image.height);\n          } else {\n            state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n          }\n        }\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          if (useTexStorage && allocateMemory) {\n            state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n          }\n\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n\n            if (useTexStorage) {\n              state.texSubImage2D(3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n            } else {\n              state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n            }\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          if (useTexStorage) {\n            if (allocateMemory) {\n              state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);\n            }\n\n            state.texSubImage2D(3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data);\n          } else {\n            state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          }\n        }\n      } else if (texture.isCompressedTexture) {\n        if (useTexStorage && allocateMemory) {\n          state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n        }\n\n        for (var _i36 = 0, _il9 = mipmaps.length; _i36 < _il9; _i36++) {\n          mipmap = mipmaps[_i36];\n\n          if (texture.format !== RGBAFormat) {\n            if (glFormat !== null) {\n              if (useTexStorage) {\n                state.compressedTexSubImage2D(3553, _i36, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n              } else {\n                state.compressedTexImage2D(3553, _i36, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n              }\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            if (useTexStorage) {\n              state.texSubImage2D(3553, _i36, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n            } else {\n              state.texImage2D(3553, _i36, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n            }\n          }\n        }\n      } else if (texture.isDataArrayTexture) {\n        if (useTexStorage) {\n          if (allocateMemory) {\n            state.texStorage3D(35866, levels, glInternalFormat, image.width, image.height, image.depth);\n          }\n\n          state.texSubImage3D(35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);\n        } else {\n          state.texImage3D(35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        }\n      } else if (texture.isData3DTexture) {\n        if (useTexStorage) {\n          if (allocateMemory) {\n            state.texStorage3D(32879, levels, glInternalFormat, image.width, image.height, image.depth);\n          }\n\n          state.texSubImage3D(32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);\n        } else {\n          state.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        }\n      } else if (texture.isFramebufferTexture) {\n        if (allocateMemory) {\n          if (useTexStorage) {\n            state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);\n          } else {\n            var width = image.width,\n                height = image.height;\n\n            for (var _i37 = 0; _i37 < levels; _i37++) {\n              state.texImage2D(3553, _i37, glInternalFormat, width, height, 0, glFormat, glType, null);\n              width >>= 1;\n              height >>= 1;\n            }\n          }\n        }\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          if (useTexStorage && allocateMemory) {\n            state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n          }\n\n          for (var _i38 = 0, _il10 = mipmaps.length; _i38 < _il10; _i38++) {\n            mipmap = mipmaps[_i38];\n\n            if (useTexStorage) {\n              state.texSubImage2D(3553, _i38, 0, 0, glFormat, glType, mipmap);\n            } else {\n              state.texImage2D(3553, _i38, glInternalFormat, glFormat, glType, mipmap);\n            }\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          if (useTexStorage) {\n            if (allocateMemory) {\n              state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);\n            }\n\n            state.texSubImage2D(3553, 0, 0, 0, glFormat, glType, image);\n          } else {\n            state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n          }\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(textureType);\n      }\n\n      source.__currentVersion = source.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    }\n\n    textureProperties.__version = texture.version;\n  }\n\n  function uploadCubeTexture(textureProperties, texture, slot) {\n    if (texture.image.length !== 6) return;\n    var forceUpload = initTexture(textureProperties, texture);\n    var source = texture.source;\n    state.activeTexture(33984 + slot);\n    state.bindTexture(34067, textureProperties.__webglTexture);\n\n    if (source.version !== source.__currentVersion || forceUpload === true) {\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      _gl.pixelStorei(37443, 0);\n\n      var isCompressed = texture.isCompressedTexture || texture.image[0].isCompressedTexture;\n      var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n      var cubeImage = [];\n\n      for (var i = 0; i < 6; i++) {\n        if (!isCompressed && !isDataTexture) {\n          cubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n        } else {\n          cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n        }\n\n        cubeImage[i] = verifyColorSpace(texture, cubeImage[i]);\n      }\n\n      var image = cubeImage[0],\n          supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n          glFormat = utils.convert(texture.format, texture.encoding),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n      var useTexStorage = isWebGL2 && texture.isVideoTexture !== true;\n      var allocateMemory = source.__currentVersion === undefined || forceUpload === true;\n      var levels = getMipLevels(texture, image, supportsMips);\n      setTextureParameters(34067, texture, supportsMips);\n      var mipmaps;\n\n      if (isCompressed) {\n        if (useTexStorage && allocateMemory) {\n          state.texStorage2D(34067, levels, glInternalFormat, image.width, image.height);\n        }\n\n        for (var _i39 = 0; _i39 < 6; _i39++) {\n          mipmaps = cubeImage[_i39].mipmaps;\n\n          for (var j = 0; j < mipmaps.length; j++) {\n            var mipmap = mipmaps[j];\n\n            if (texture.format !== RGBAFormat) {\n              if (glFormat !== null) {\n                if (useTexStorage) {\n                  state.compressedTexSubImage2D(34069 + _i39, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n                } else {\n                  state.compressedTexImage2D(34069 + _i39, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                }\n              } else {\n                console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n              }\n            } else {\n              if (useTexStorage) {\n                state.texSubImage2D(34069 + _i39, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n              } else {\n                state.texImage2D(34069 + _i39, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n      } else {\n        mipmaps = texture.mipmaps;\n\n        if (useTexStorage && allocateMemory) {\n          // TODO: Uniformly handle mipmap definitions\n          // Normal textures and compressed cube textures define base level + mips with their mipmap array\n          // Uncompressed cube textures use their mipmap array only for mips (no base level)\n          if (mipmaps.length > 0) levels++;\n          state.texStorage2D(34067, levels, glInternalFormat, cubeImage[0].width, cubeImage[0].height);\n        }\n\n        for (var _i40 = 0; _i40 < 6; _i40++) {\n          if (isDataTexture) {\n            if (useTexStorage) {\n              state.texSubImage2D(34069 + _i40, 0, 0, 0, cubeImage[_i40].width, cubeImage[_i40].height, glFormat, glType, cubeImage[_i40].data);\n            } else {\n              state.texImage2D(34069 + _i40, 0, glInternalFormat, cubeImage[_i40].width, cubeImage[_i40].height, 0, glFormat, glType, cubeImage[_i40].data);\n            }\n\n            for (var _j3 = 0; _j3 < mipmaps.length; _j3++) {\n              var _mipmap = mipmaps[_j3];\n              var mipmapImage = _mipmap.image[_i40].image;\n\n              if (useTexStorage) {\n                state.texSubImage2D(34069 + _i40, _j3 + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data);\n              } else {\n                state.texImage2D(34069 + _i40, _j3 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n              }\n            }\n          } else {\n            if (useTexStorage) {\n              state.texSubImage2D(34069 + _i40, 0, 0, 0, glFormat, glType, cubeImage[_i40]);\n            } else {\n              state.texImage2D(34069 + _i40, 0, glInternalFormat, glFormat, glType, cubeImage[_i40]);\n            }\n\n            for (var _j4 = 0; _j4 < mipmaps.length; _j4++) {\n              var _mipmap2 = mipmaps[_j4];\n\n              if (useTexStorage) {\n                state.texSubImage2D(34069 + _i40, _j4 + 1, 0, 0, glFormat, glType, _mipmap2.image[_i40]);\n              } else {\n                state.texImage2D(34069 + _i40, _j4 + 1, glInternalFormat, glFormat, glType, _mipmap2.image[_i40]);\n              }\n            }\n          }\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        // We assume images for cube map have the same size.\n        generateMipmap(34067);\n      }\n\n      source.__currentVersion = source.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    }\n\n    textureProperties.__version = texture.version;\n  } // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n    var glFormat = utils.convert(texture.format, texture.encoding);\n    var glType = utils.convert(texture.type);\n    var glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n    var renderTargetProperties = properties.get(renderTarget);\n\n    if (!renderTargetProperties.__hasExternalTextures) {\n      if (textureTarget === 32879 || textureTarget === 35866) {\n        state.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n      } else {\n        state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n      }\n    }\n\n    state.bindFramebuffer(36160, framebuffer);\n\n    if (useMultisampledRTT(renderTarget)) {\n      multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, attachment, textureTarget, properties.get(texture).__webglTexture, 0, getRenderTargetSamples(renderTarget));\n    } else {\n      _gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n    }\n\n    state.bindFramebuffer(36160, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n    _gl.bindRenderbuffer(36161, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      var glInternalFormat = 33189;\n\n      if (isMultisample || useMultisampledRTT(renderTarget)) {\n        var depthTexture = renderTarget.depthTexture;\n\n        if (depthTexture && depthTexture.isDepthTexture) {\n          if (depthTexture.type === FloatType) {\n            glInternalFormat = 36012;\n          } else if (depthTexture.type === UnsignedIntType) {\n            glInternalFormat = 33190;\n          }\n        }\n\n        var samples = getRenderTargetSamples(renderTarget);\n\n        if (useMultisampledRTT(renderTarget)) {\n          multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n      } else {\n        _gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      var _samples = getRenderTargetSamples(renderTarget);\n\n      if (isMultisample && useMultisampledRTT(renderTarget) === false) {\n        _gl.renderbufferStorageMultisample(36161, _samples, 35056, renderTarget.width, renderTarget.height);\n      } else if (useMultisampledRTT(renderTarget)) {\n        multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, _samples, 35056, renderTarget.width, renderTarget.height);\n      } else {\n        _gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n    } else {\n      var textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n      for (var i = 0; i < textures.length; i++) {\n        var texture = textures[i];\n        var glFormat = utils.convert(texture.format, texture.encoding);\n        var glType = utils.convert(texture.type);\n\n        var _glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n        var _samples2 = getRenderTargetSamples(renderTarget);\n\n        if (isMultisample && useMultisampledRTT(renderTarget) === false) {\n          _gl.renderbufferStorageMultisample(36161, _samples2, _glInternalFormat, renderTarget.width, renderTarget.height);\n        } else if (useMultisampledRTT(renderTarget)) {\n          multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, _samples2, _glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, _glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n      }\n    }\n\n    _gl.bindRenderbuffer(36161, null);\n  } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n  function setupDepthTexture(framebuffer, renderTarget) {\n    var isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n    state.bindFramebuffer(36160, framebuffer);\n\n    if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    } // upload an empty depth texture with framebuffer size\n\n\n    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    setTexture2D(renderTarget.depthTexture, 0);\n\n    var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n    var samples = getRenderTargetSamples(renderTarget);\n\n    if (renderTarget.depthTexture.format === DepthFormat) {\n      if (useMultisampledRTT(renderTarget)) {\n        multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, webglDepthTexture, 0, samples);\n      } else {\n        _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n      }\n    } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n      if (useMultisampledRTT(renderTarget)) {\n        multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, webglDepthTexture, 0, samples);\n      } else {\n        _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n      }\n    } else {\n      throw new Error('Unknown depthTexture format');\n    }\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n    if (renderTarget.depthTexture && !renderTargetProperties.__autoAllocateDepthBuffer) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n        }\n      } else {\n        state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n      }\n    }\n\n    state.bindFramebuffer(36160, null);\n  } // rebind framebuffer with external textures\n\n\n  function rebindTextures(renderTarget, colorTexture, depthTexture) {\n    var renderTargetProperties = properties.get(renderTarget);\n\n    if (colorTexture !== undefined) {\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553);\n    }\n\n    if (depthTexture !== undefined) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var texture = renderTarget.texture;\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n    if (renderTarget.isWebGLMultipleRenderTargets !== true) {\n      if (textureProperties.__webglTexture === undefined) {\n        textureProperties.__webglTexture = _gl.createTexture();\n      }\n\n      textureProperties.__version = texture.version;\n      info.memory.textures++;\n    }\n\n    var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n    var isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n    var supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n      if (isMultipleRenderTargets) {\n        if (capabilities.drawBuffers) {\n          var textures = renderTarget.texture;\n\n          for (var _i41 = 0, il = textures.length; _i41 < il; _i41++) {\n            var attachmentProperties = properties.get(textures[_i41]);\n\n            if (attachmentProperties.__webglTexture === undefined) {\n              attachmentProperties.__webglTexture = _gl.createTexture();\n              info.memory.textures++;\n            }\n          }\n        } else {\n          console.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n        }\n      }\n\n      if (isWebGL2 && renderTarget.samples > 0 && useMultisampledRTT(renderTarget) === false) {\n        var _textures = isMultipleRenderTargets ? texture : [texture];\n\n        renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n        renderTargetProperties.__webglColorRenderbuffer = [];\n        state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n        for (var _i42 = 0; _i42 < _textures.length; _i42++) {\n          var _texture = _textures[_i42];\n          renderTargetProperties.__webglColorRenderbuffer[_i42] = _gl.createRenderbuffer();\n\n          _gl.bindRenderbuffer(36161, renderTargetProperties.__webglColorRenderbuffer[_i42]);\n\n          var glFormat = utils.convert(_texture.format, _texture.encoding);\n          var glType = utils.convert(_texture.type);\n          var glInternalFormat = getInternalFormat(_texture.internalFormat, glFormat, glType, _texture.encoding);\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n          _gl.framebufferRenderbuffer(36160, 36064 + _i42, 36161, renderTargetProperties.__webglColorRenderbuffer[_i42]);\n        }\n\n        _gl.bindRenderbuffer(36161, null);\n\n        if (renderTarget.depthBuffer) {\n          renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n        }\n\n        state.bindFramebuffer(36160, null);\n      }\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(34067, textureProperties.__webglTexture);\n      setTextureParameters(34067, texture, supportsMips);\n\n      for (var _i43 = 0; _i43 < 6; _i43++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[_i43], renderTarget, texture, 36064, 34069 + _i43);\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(34067);\n      }\n\n      state.unbindTexture();\n    } else if (isMultipleRenderTargets) {\n      var _textures2 = renderTarget.texture;\n\n      for (var _i44 = 0, _il11 = _textures2.length; _i44 < _il11; _i44++) {\n        var attachment = _textures2[_i44];\n\n        var _attachmentProperties = properties.get(attachment);\n\n        state.bindTexture(3553, _attachmentProperties.__webglTexture);\n        setTextureParameters(3553, attachment, supportsMips);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + _i44, 3553);\n\n        if (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n          generateMipmap(3553);\n        }\n      }\n\n      state.unbindTexture();\n    } else {\n      var glTextureType = 3553;\n\n      if (renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget) {\n        if (isWebGL2) {\n          glTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n        } else {\n          console.error('THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.');\n        }\n      }\n\n      state.bindTexture(glTextureType, textureProperties.__webglTexture);\n      setTextureParameters(glTextureType, texture, supportsMips);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType);\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(glTextureType);\n      }\n\n      state.unbindTexture();\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n    var textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n    for (var i = 0, il = textures.length; i < il; i++) {\n      var texture = textures[i];\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        var target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target);\n        state.unbindTexture();\n      }\n    }\n  }\n\n  function updateMultisampleRenderTarget(renderTarget) {\n    if (isWebGL2 && renderTarget.samples > 0 && useMultisampledRTT(renderTarget) === false) {\n      var textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [renderTarget.texture];\n      var width = renderTarget.width;\n      var height = renderTarget.height;\n      var mask = 16384;\n      var invalidationArray = [];\n      var depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n      var renderTargetProperties = properties.get(renderTarget);\n      var isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true; // If MRT we need to remove FBO attachments\n\n      if (isMultipleRenderTargets) {\n        for (var i = 0; i < textures.length; i++) {\n          state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n          _gl.framebufferRenderbuffer(36160, 36064 + i, 36161, null);\n\n          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          _gl.framebufferTexture2D(36009, 36064 + i, 3553, null, 0);\n        }\n      }\n\n      state.bindFramebuffer(36008, renderTargetProperties.__webglMultisampledFramebuffer);\n      state.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);\n\n      for (var _i45 = 0; _i45 < textures.length; _i45++) {\n        invalidationArray.push(36064 + _i45);\n\n        if (renderTarget.depthBuffer) {\n          invalidationArray.push(depthStyle);\n        }\n\n        var ignoreDepthValues = renderTargetProperties.__ignoreDepthValues !== undefined ? renderTargetProperties.__ignoreDepthValues : false;\n\n        if (ignoreDepthValues === false) {\n          if (renderTarget.depthBuffer) mask |= 256;\n          if (renderTarget.stencilBuffer) mask |= 1024;\n        }\n\n        if (isMultipleRenderTargets) {\n          _gl.framebufferRenderbuffer(36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[_i45]);\n        }\n\n        if (ignoreDepthValues === true) {\n          _gl.invalidateFramebuffer(36008, [depthStyle]);\n\n          _gl.invalidateFramebuffer(36009, [depthStyle]);\n        }\n\n        if (isMultipleRenderTargets) {\n          var webglTexture = properties.get(textures[_i45]).__webglTexture;\n\n          _gl.framebufferTexture2D(36009, 36064, 3553, webglTexture, 0);\n        }\n\n        _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, 9728);\n\n        if (supportsInvalidateFramebuffer) {\n          _gl.invalidateFramebuffer(36008, invalidationArray);\n        }\n      }\n\n      state.bindFramebuffer(36008, null);\n      state.bindFramebuffer(36009, null); // If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\n      if (isMultipleRenderTargets) {\n        for (var _i46 = 0; _i46 < textures.length; _i46++) {\n          state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n          _gl.framebufferRenderbuffer(36160, 36064 + _i46, 36161, renderTargetProperties.__webglColorRenderbuffer[_i46]);\n\n          var _webglTexture = properties.get(textures[_i46]).__webglTexture;\n\n          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          _gl.framebufferTexture2D(36009, 36064 + _i46, 3553, _webglTexture, 0);\n        }\n      }\n\n      state.bindFramebuffer(36009, renderTargetProperties.__webglMultisampledFramebuffer);\n    }\n  }\n\n  function getRenderTargetSamples(renderTarget) {\n    return Math.min(maxSamples, renderTarget.samples);\n  }\n\n  function useMultisampledRTT(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    return isWebGL2 && renderTarget.samples > 0 && extensions.has('WEBGL_multisampled_render_to_texture') === true && renderTargetProperties.__useRenderToTexture !== false;\n  }\n\n  function updateVideoTexture(texture) {\n    var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n    if (_videoTextures.get(texture) !== frame) {\n      _videoTextures.set(texture, frame);\n\n      texture.update();\n    }\n  }\n\n  function verifyColorSpace(texture, image) {\n    var encoding = texture.encoding;\n    var format = texture.format;\n    var type = texture.type;\n    if (texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat) return image;\n\n    if (encoding !== LinearEncoding) {\n      // sRGB\n      if (encoding === sRGBEncoding) {\n        if (isWebGL2 === false) {\n          // in WebGL 1, try to use EXT_sRGB extension and unsized formats\n          if (extensions.has('EXT_sRGB') === true && format === RGBAFormat) {\n            texture.format = _SRGBAFormat; // it's not possible to generate mips in WebGL 1 with this extension\n\n            texture.minFilter = LinearFilter;\n            texture.generateMipmaps = false;\n          } else {\n            // slow fallback (CPU decode)\n            image = ImageUtils.sRGBToLinear(image);\n          }\n        } else {\n          // in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n          if (format !== RGBAFormat || type !== UnsignedByteType) {\n            console.warn('THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.');\n          }\n        }\n      } else {\n        console.error('THREE.WebGLTextures: Unsupported texture encoding:', encoding);\n      }\n    }\n\n    return image;\n  } //\n\n\n  this.allocateTextureUnit = allocateTextureUnit;\n  this.resetTextureUnits = resetTextureUnits;\n  this.setTexture2D = setTexture2D;\n  this.setTexture2DArray = setTexture2DArray;\n  this.setTexture3D = setTexture3D;\n  this.setTextureCube = setTextureCube;\n  this.rebindTextures = rebindTextures;\n  this.setupRenderTarget = setupRenderTarget;\n  this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n  this.setupDepthRenderbuffer = setupDepthRenderbuffer;\n  this.setupFrameBufferTexture = setupFrameBufferTexture;\n  this.useMultisampledRTT = useMultisampledRTT;\n}\n\nfunction WebGLUtils(gl, extensions, capabilities) {\n  var isWebGL2 = capabilities.isWebGL2;\n\n  function convert(p) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var extension;\n    if (p === UnsignedByteType) return 5121;\n    if (p === UnsignedShort4444Type) return 32819;\n    if (p === UnsignedShort5551Type) return 32820;\n    if (p === ByteType) return 5120;\n    if (p === ShortType) return 5122;\n    if (p === UnsignedShortType) return 5123;\n    if (p === IntType) return 5124;\n    if (p === UnsignedIntType) return 5125;\n    if (p === FloatType) return 5126;\n\n    if (p === HalfFloatType) {\n      if (isWebGL2) return 5131;\n      extension = extensions.get('OES_texture_half_float');\n\n      if (extension !== null) {\n        return extension.HALF_FLOAT_OES;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === AlphaFormat) return 6406;\n    if (p === RGBAFormat) return 6408;\n    if (p === LuminanceFormat) return 6409;\n    if (p === LuminanceAlphaFormat) return 6410;\n    if (p === DepthFormat) return 6402;\n    if (p === DepthStencilFormat) return 34041;\n    if (p === RedFormat) return 6403;\n\n    if (p === RGBFormat) {\n      console.warn('THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228');\n      return 6408;\n    } // WebGL 1 sRGB fallback\n\n\n    if (p === _SRGBAFormat) {\n      extension = extensions.get('EXT_sRGB');\n\n      if (extension !== null) {\n        return extension.SRGB_ALPHA_EXT;\n      } else {\n        return null;\n      }\n    } // WebGL2 formats.\n\n\n    if (p === RedIntegerFormat) return 36244;\n    if (p === RGFormat) return 33319;\n    if (p === RGIntegerFormat) return 33320;\n    if (p === RGBAIntegerFormat) return 36249; // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      if (encoding === sRGBEncoding) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc_srgb');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      } else {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n    } // PVRTC\n\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    } // ETC1\n\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    } // ETC2\n\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc');\n\n      if (extension !== null) {\n        if (p === RGB_ETC2_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n        if (p === RGBA_ETC2_EAC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n      } else {\n        return null;\n      }\n    } // ASTC\n\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n\n      if (extension !== null) {\n        if (p === RGBA_ASTC_4x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n        if (p === RGBA_ASTC_5x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n        if (p === RGBA_ASTC_5x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n        if (p === RGBA_ASTC_6x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n        if (p === RGBA_ASTC_6x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n        if (p === RGBA_ASTC_8x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n        if (p === RGBA_ASTC_8x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n        if (p === RGBA_ASTC_8x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n        if (p === RGBA_ASTC_10x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n        if (p === RGBA_ASTC_10x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n        if (p === RGBA_ASTC_10x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n        if (p === RGBA_ASTC_10x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n        if (p === RGBA_ASTC_12x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n        if (p === RGBA_ASTC_12x12_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n      } else {\n        return null;\n      }\n    } // BPTC\n\n\n    if (p === RGBA_BPTC_Format) {\n      extension = extensions.get('EXT_texture_compression_bptc');\n\n      if (extension !== null) {\n        if (p === RGBA_BPTC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n      } else {\n        return null;\n      }\n    } //\n\n\n    if (p === UnsignedInt248Type) {\n      if (isWebGL2) return 34042;\n      extension = extensions.get('WEBGL_depth_texture');\n\n      if (extension !== null) {\n        return extension.UNSIGNED_INT_24_8_WEBGL;\n      } else {\n        return null;\n      }\n    } // if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\n    return gl[p] !== undefined ? gl[p] : null;\n  }\n\n  return {\n    convert: convert\n  };\n}\n\nvar ArrayCamera = /*#__PURE__*/function (_PerspectiveCamera) {\n  _inherits(ArrayCamera, _PerspectiveCamera);\n\n  var _super34 = _createSuper(ArrayCamera);\n\n  function ArrayCamera() {\n    var _this26;\n\n    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, ArrayCamera);\n\n    _this26 = _super34.call(this);\n    _this26.isArrayCamera = true;\n    _this26.cameras = array;\n    return _this26;\n  }\n\n  return ArrayCamera;\n}(PerspectiveCamera);\n\nvar Group = /*#__PURE__*/function (_Object3D4) {\n  _inherits(Group, _Object3D4);\n\n  var _super35 = _createSuper(Group);\n\n  function Group() {\n    var _this27;\n\n    _classCallCheck(this, Group);\n\n    _this27 = _super35.call(this);\n    _this27.isGroup = true;\n    _this27.type = 'Group';\n    return _this27;\n  }\n\n  return Group;\n}(Object3D);\n\nvar _moveEvent = {\n  type: 'move'\n};\n\nvar WebXRController = /*#__PURE__*/function () {\n  function WebXRController() {\n    _classCallCheck(this, WebXRController);\n\n    this._targetRay = null;\n    this._grip = null;\n    this._hand = null;\n  }\n\n  _createClass(WebXRController, [{\n    key: \"getHandSpace\",\n    value: function getHandSpace() {\n      if (this._hand === null) {\n        this._hand = new Group();\n        this._hand.matrixAutoUpdate = false;\n        this._hand.visible = false;\n        this._hand.joints = {};\n        this._hand.inputState = {\n          pinching: false\n        };\n      }\n\n      return this._hand;\n    }\n  }, {\n    key: \"getTargetRaySpace\",\n    value: function getTargetRaySpace() {\n      if (this._targetRay === null) {\n        this._targetRay = new Group();\n        this._targetRay.matrixAutoUpdate = false;\n        this._targetRay.visible = false;\n        this._targetRay.hasLinearVelocity = false;\n        this._targetRay.linearVelocity = new Vector3();\n        this._targetRay.hasAngularVelocity = false;\n        this._targetRay.angularVelocity = new Vector3();\n      }\n\n      return this._targetRay;\n    }\n  }, {\n    key: \"getGripSpace\",\n    value: function getGripSpace() {\n      if (this._grip === null) {\n        this._grip = new Group();\n        this._grip.matrixAutoUpdate = false;\n        this._grip.visible = false;\n        this._grip.hasLinearVelocity = false;\n        this._grip.linearVelocity = new Vector3();\n        this._grip.hasAngularVelocity = false;\n        this._grip.angularVelocity = new Vector3();\n      }\n\n      return this._grip;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (this._targetRay !== null) {\n        this._targetRay.dispatchEvent(event);\n      }\n\n      if (this._grip !== null) {\n        this._grip.dispatchEvent(event);\n      }\n\n      if (this._hand !== null) {\n        this._hand.dispatchEvent(event);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(inputSource) {\n      this.dispatchEvent({\n        type: 'disconnected',\n        data: inputSource\n      });\n\n      if (this._targetRay !== null) {\n        this._targetRay.visible = false;\n      }\n\n      if (this._grip !== null) {\n        this._grip.visible = false;\n      }\n\n      if (this._hand !== null) {\n        this._hand.visible = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(inputSource, frame, referenceSpace) {\n      var inputPose = null;\n      var gripPose = null;\n      var handPose = null;\n      var targetRay = this._targetRay;\n      var grip = this._grip;\n      var hand = this._hand;\n\n      if (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n        if (hand && inputSource.hand) {\n          handPose = true;\n\n          var _iterator2 = _createForOfIteratorHelper(inputSource.hand.values()),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var inputjoint = _step2.value;\n              // Update the joints groups with the XRJoint poses\n              var jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n              if (hand.joints[inputjoint.jointName] === undefined) {\n                // The transform of this joint will be updated with the joint pose on each frame\n                var _joint = new Group();\n\n                _joint.matrixAutoUpdate = false;\n                _joint.visible = false;\n                hand.joints[inputjoint.jointName] = _joint; // ??\n\n                hand.add(_joint);\n              }\n\n              var joint = hand.joints[inputjoint.jointName];\n\n              if (jointPose !== null) {\n                joint.matrix.fromArray(jointPose.transform.matrix);\n                joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n                joint.jointRadius = jointPose.radius;\n              }\n\n              joint.visible = jointPose !== null;\n            } // Custom events\n            // Check pinchz\n\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var indexTip = hand.joints['index-finger-tip'];\n          var thumbTip = hand.joints['thumb-tip'];\n          var distance = indexTip.position.distanceTo(thumbTip.position);\n          var distanceToPinch = 0.02;\n          var threshold = 0.005;\n\n          if (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n            hand.inputState.pinching = false;\n            this.dispatchEvent({\n              type: 'pinchend',\n              handedness: inputSource.handedness,\n              target: this\n            });\n          } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n            hand.inputState.pinching = true;\n            this.dispatchEvent({\n              type: 'pinchstart',\n              handedness: inputSource.handedness,\n              target: this\n            });\n          }\n        } else {\n          if (grip !== null && inputSource.gripSpace) {\n            gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n            if (gripPose !== null) {\n              grip.matrix.fromArray(gripPose.transform.matrix);\n              grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n              if (gripPose.linearVelocity) {\n                grip.hasLinearVelocity = true;\n                grip.linearVelocity.copy(gripPose.linearVelocity);\n              } else {\n                grip.hasLinearVelocity = false;\n              }\n\n              if (gripPose.angularVelocity) {\n                grip.hasAngularVelocity = true;\n                grip.angularVelocity.copy(gripPose.angularVelocity);\n              } else {\n                grip.hasAngularVelocity = false;\n              }\n            }\n          }\n        }\n\n        if (targetRay !== null) {\n          inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace); // Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\n          if (inputPose === null && gripPose !== null) {\n            inputPose = gripPose;\n          }\n\n          if (inputPose !== null) {\n            targetRay.matrix.fromArray(inputPose.transform.matrix);\n            targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n            if (inputPose.linearVelocity) {\n              targetRay.hasLinearVelocity = true;\n              targetRay.linearVelocity.copy(inputPose.linearVelocity);\n            } else {\n              targetRay.hasLinearVelocity = false;\n            }\n\n            if (inputPose.angularVelocity) {\n              targetRay.hasAngularVelocity = true;\n              targetRay.angularVelocity.copy(inputPose.angularVelocity);\n            } else {\n              targetRay.hasAngularVelocity = false;\n            }\n\n            this.dispatchEvent(_moveEvent);\n          }\n        }\n      }\n\n      if (targetRay !== null) {\n        targetRay.visible = inputPose !== null;\n      }\n\n      if (grip !== null) {\n        grip.visible = gripPose !== null;\n      }\n\n      if (hand !== null) {\n        hand.visible = handPose !== null;\n      }\n\n      return this;\n    }\n  }]);\n\n  return WebXRController;\n}();\n\nvar DepthTexture = /*#__PURE__*/function (_Texture4) {\n  _inherits(DepthTexture, _Texture4);\n\n  var _super36 = _createSuper(DepthTexture);\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    var _this28;\n\n    _classCallCheck(this, DepthTexture);\n\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedIntType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    _this28 = _super36.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    _this28.isDepthTexture = true;\n    _this28.image = {\n      width: width,\n      height: height\n    };\n    _this28.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    _this28.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    _this28.flipY = false;\n    _this28.generateMipmaps = false;\n    return _this28;\n  }\n\n  return DepthTexture;\n}(Texture);\n\nvar WebXRManager = /*#__PURE__*/function (_EventDispatcher6) {\n  _inherits(WebXRManager, _EventDispatcher6);\n\n  var _super37 = _createSuper(WebXRManager);\n\n  function WebXRManager(renderer, gl) {\n    var _this29;\n\n    _classCallCheck(this, WebXRManager);\n\n    _this29 = _super37.call(this);\n\n    var scope = _assertThisInitialized(_this29);\n\n    var session = null;\n    var framebufferScaleFactor = 1.0;\n    var referenceSpace = null;\n    var referenceSpaceType = 'local-floor';\n    var customReferenceSpace = null;\n    var pose = null;\n    var glBinding = null;\n    var glProjLayer = null;\n    var glBaseLayer = null;\n    var xrFrame = null;\n    var attributes = gl.getContextAttributes();\n    var initialRenderTarget = null;\n    var newRenderTarget = null;\n    var controllers = [];\n    var controllerInputSources = []; //\n\n    var cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n    var cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n    var cameras = [cameraL, cameraR];\n    var cameraVR = new ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n    var _currentDepthNear = null;\n    var _currentDepthFar = null; //\n\n    _this29.cameraAutoUpdate = true;\n    _this29.enabled = false;\n    _this29.isPresenting = false;\n\n    _this29.getController = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    _this29.getControllerGrip = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    _this29.getHand = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    }; //\n\n\n    function onSessionEvent(event) {\n      var controllerIndex = controllerInputSources.indexOf(event.inputSource);\n\n      if (controllerIndex === -1) {\n        return;\n      }\n\n      var controller = controllers[controllerIndex];\n\n      if (controller !== undefined) {\n        controller.dispatchEvent({\n          type: event.type,\n          data: event.inputSource\n        });\n      }\n    }\n\n    function onSessionEnd() {\n      session.removeEventListener('select', onSessionEvent);\n      session.removeEventListener('selectstart', onSessionEvent);\n      session.removeEventListener('selectend', onSessionEvent);\n      session.removeEventListener('squeeze', onSessionEvent);\n      session.removeEventListener('squeezestart', onSessionEvent);\n      session.removeEventListener('squeezeend', onSessionEvent);\n      session.removeEventListener('end', onSessionEnd);\n      session.removeEventListener('inputsourceschange', onInputSourcesChange);\n\n      for (var i = 0; i < controllers.length; i++) {\n        var inputSource = controllerInputSources[i];\n        if (inputSource === null) continue;\n        controllerInputSources[i] = null;\n        controllers[i].disconnect(inputSource);\n      }\n\n      _currentDepthNear = null;\n      _currentDepthFar = null; // restore framebuffer/rendering state\n\n      renderer.setRenderTarget(initialRenderTarget);\n      glBaseLayer = null;\n      glProjLayer = null;\n      glBinding = null;\n      session = null;\n      newRenderTarget = null; //\n\n      animation.stop();\n      scope.isPresenting = false;\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    _this29.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n      }\n    };\n\n    _this29.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n      }\n    };\n\n    _this29.getReferenceSpace = function () {\n      return customReferenceSpace || referenceSpace;\n    };\n\n    _this29.setReferenceSpace = function (space) {\n      customReferenceSpace = space;\n    };\n\n    _this29.getBaseLayer = function () {\n      return glProjLayer !== null ? glProjLayer : glBaseLayer;\n    };\n\n    _this29.getBinding = function () {\n      return glBinding;\n    };\n\n    _this29.getFrame = function () {\n      return xrFrame;\n    };\n\n    _this29.getSession = function () {\n      return session;\n    };\n\n    _this29.setSession = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n        var layerInit, depthFormat, depthType, glDepthFormat, projectionlayerInit, renderTargetProperties;\n        return _regeneratorRuntime.wrap(function _callee$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                session = value;\n\n                if (!(session !== null)) {\n                  _context8.next = 25;\n                  break;\n                }\n\n                initialRenderTarget = renderer.getRenderTarget();\n                session.addEventListener('select', onSessionEvent);\n                session.addEventListener('selectstart', onSessionEvent);\n                session.addEventListener('selectend', onSessionEvent);\n                session.addEventListener('squeeze', onSessionEvent);\n                session.addEventListener('squeezestart', onSessionEvent);\n                session.addEventListener('squeezeend', onSessionEvent);\n                session.addEventListener('end', onSessionEnd);\n                session.addEventListener('inputsourceschange', onInputSourcesChange);\n\n                if (!(attributes.xrCompatible !== true)) {\n                  _context8.next = 14;\n                  break;\n                }\n\n                _context8.next = 14;\n                return gl.makeXRCompatible();\n\n              case 14:\n                if (session.renderState.layers === undefined || renderer.capabilities.isWebGL2 === false) {\n                  layerInit = {\n                    antialias: session.renderState.layers === undefined ? attributes.antialias : true,\n                    alpha: attributes.alpha,\n                    depth: attributes.depth,\n                    stencil: attributes.stencil,\n                    framebufferScaleFactor: framebufferScaleFactor\n                  };\n                  glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n                  session.updateRenderState({\n                    baseLayer: glBaseLayer\n                  });\n                  newRenderTarget = new WebGLRenderTarget(glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, {\n                    format: RGBAFormat,\n                    type: UnsignedByteType,\n                    encoding: renderer.outputEncoding\n                  });\n                } else {\n                  depthFormat = null;\n                  depthType = null;\n                  glDepthFormat = null;\n\n                  if (attributes.depth) {\n                    glDepthFormat = attributes.stencil ? 35056 : 33190;\n                    depthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n                    depthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n                  }\n\n                  projectionlayerInit = {\n                    colorFormat: 32856,\n                    depthFormat: glDepthFormat,\n                    scaleFactor: framebufferScaleFactor\n                  };\n                  glBinding = new XRWebGLBinding(session, gl);\n                  glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n                  session.updateRenderState({\n                    layers: [glProjLayer]\n                  });\n                  newRenderTarget = new WebGLRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n                    format: RGBAFormat,\n                    type: UnsignedByteType,\n                    depthTexture: new DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n                    stencilBuffer: attributes.stencil,\n                    encoding: renderer.outputEncoding,\n                    samples: attributes.antialias ? 4 : 0\n                  });\n                  renderTargetProperties = renderer.properties.get(newRenderTarget);\n                  renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n                }\n\n                newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n                // Set foveation to maximum.\n\n                this.setFoveation(1.0);\n                customReferenceSpace = null;\n                _context8.next = 20;\n                return session.requestReferenceSpace(referenceSpaceType);\n\n              case 20:\n                referenceSpace = _context8.sent;\n                animation.setContext(session);\n                animation.start();\n                scope.isPresenting = true;\n                scope.dispatchEvent({\n                  type: 'sessionstart'\n                });\n\n              case 25:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    function onInputSourcesChange(event) {\n      // Notify disconnected\n      for (var i = 0; i < event.removed.length; i++) {\n        var inputSource = event.removed[i];\n        var index = controllerInputSources.indexOf(inputSource);\n\n        if (index >= 0) {\n          controllerInputSources[index] = null;\n          controllers[index].dispatchEvent({\n            type: 'disconnected',\n            data: inputSource\n          });\n        }\n      } // Notify connected\n\n\n      for (var _i47 = 0; _i47 < event.added.length; _i47++) {\n        var _inputSource = event.added[_i47];\n        var controllerIndex = controllerInputSources.indexOf(_inputSource);\n\n        if (controllerIndex === -1) {\n          // Assign input source a controller that currently has no input source\n          for (var _i48 = 0; _i48 < controllers.length; _i48++) {\n            if (_i48 >= controllerInputSources.length) {\n              controllerInputSources.push(_inputSource);\n              controllerIndex = _i48;\n              break;\n            } else if (controllerInputSources[_i48] === null) {\n              controllerInputSources[_i48] = _inputSource;\n              controllerIndex = _i48;\n              break;\n            }\n          } // If all controllers do currently receive input we ignore new ones\n\n\n          if (controllerIndex === -1) break;\n        }\n\n        var controller = controllers[controllerIndex];\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: 'connected',\n            data: _inputSource\n          });\n        }\n      }\n    } //\n\n\n    var cameraLPos = new Vector3();\n    var cameraRPos = new Vector3();\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n      var ipd = cameraLPos.distanceTo(cameraRPos);\n      var projL = cameraL.projectionMatrix.elements;\n      var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n\n      var near = projL[14] / (projL[10] - 1);\n      var far = projL[14] / (projL[10] + 1);\n      var topFov = (projL[9] + 1) / projL[5];\n      var bottomFov = (projL[9] - 1) / projL[5];\n      var leftFov = (projL[8] - 1) / projL[0];\n      var rightFov = (projR[8] + 1) / projR[0];\n      var left = near * leftFov;\n      var right = near * rightFov; // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n\n      var zOffset = ipd / (-leftFov + rightFov);\n      var xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n      cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n\n      var near2 = near + zOffset;\n      var far2 = far + zOffset;\n      var left2 = left - xOffset;\n      var right2 = right + (ipd - xOffset);\n      var top2 = topFov * far / far2 * near2;\n      var bottom2 = bottomFov * far / far2 * near2;\n      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    _this29.updateCamera = function (camera) {\n      if (session === null) return;\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far\n        });\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      var parent = camera.parent;\n      var cameras = cameraVR.cameras;\n      updateCamera(cameraVR, parent);\n\n      for (var i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      }\n\n      cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n      camera.position.copy(cameraVR.position);\n      camera.quaternion.copy(cameraVR.quaternion);\n      camera.scale.copy(cameraVR.scale);\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrixWorld.copy(cameraVR.matrixWorld);\n      var children = camera.children;\n\n      for (var _i49 = 0, l = children.length; _i49 < l; _i49++) {\n        children[_i49].updateMatrixWorld(true);\n      } // update projection matrix for proper view frustum culling\n\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n    };\n\n    _this29.getCamera = function () {\n      return cameraVR;\n    };\n\n    _this29.getFoveation = function () {\n      if (glProjLayer !== null) {\n        return glProjLayer.fixedFoveation;\n      }\n\n      if (glBaseLayer !== null) {\n        return glBaseLayer.fixedFoveation;\n      }\n\n      return undefined;\n    };\n\n    _this29.setFoveation = function (foveation) {\n      // 0 = no foveation = full resolution\n      // 1 = maximum foveation = the edges render at lower resolution\n      if (glProjLayer !== null) {\n        glProjLayer.fixedFoveation = foveation;\n      }\n\n      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n        glBaseLayer.fixedFoveation = foveation;\n      }\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(customReferenceSpace || referenceSpace);\n      xrFrame = frame;\n\n      if (pose !== null) {\n        var views = pose.views;\n\n        if (glBaseLayer !== null) {\n          renderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);\n          renderer.setRenderTarget(newRenderTarget);\n        }\n\n        var cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (var i = 0; i < views.length; i++) {\n          var view = views[i];\n          var viewport = null;\n\n          if (glBaseLayer !== null) {\n            viewport = glBaseLayer.getViewport(view);\n          } else {\n            var glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n            viewport = glSubImage.viewport; // For side-by-side projection, we only produce a single texture for both eyes.\n\n            if (i === 0) {\n              renderer.setRenderTargetTextures(newRenderTarget, glSubImage.colorTexture, glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture);\n              renderer.setRenderTarget(newRenderTarget);\n            }\n          }\n\n          var camera = cameras[i];\n\n          if (camera === undefined) {\n            camera = new PerspectiveCamera();\n            camera.layers.enable(i);\n            camera.viewport = new Vector4();\n            cameras[i] = camera;\n          }\n\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n      } //\n\n\n      for (var _i50 = 0; _i50 < controllers.length; _i50++) {\n        var inputSource = controllerInputSources[_i50];\n        var controller = controllers[_i50];\n\n        if (inputSource !== null && controller !== undefined) {\n          controller.update(inputSource, frame, customReferenceSpace || referenceSpace);\n        }\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n      xrFrame = null;\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    _this29.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    _this29.dispose = function () {};\n\n    return _this29;\n  }\n\n  return WebXRManager;\n}(EventDispatcher);\n\nfunction WebGLMaterials(renderer, properties) {\n  function refreshFogUniforms(uniforms, fog) {\n    uniforms.fogColor.value.copy(fog.color);\n\n    if (fog.isFog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog.isFogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n    if (material.isMeshBasicMaterial) {\n      refreshUniformsCommon(uniforms, material);\n    } else if (material.isMeshLambertMaterial) {\n      refreshUniformsCommon(uniforms, material);\n    } else if (material.isMeshToonMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsToon(uniforms, material);\n    } else if (material.isMeshPhongMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsPhong(uniforms, material);\n    } else if (material.isMeshStandardMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsStandard(uniforms, material);\n\n      if (material.isMeshPhysicalMaterial) {\n        refreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n      }\n    } else if (material.isMeshMatcapMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsMatcap(uniforms, material);\n    } else if (material.isMeshDepthMaterial) {\n      refreshUniformsCommon(uniforms, material);\n    } else if (material.isMeshDistanceMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsDistance(uniforms, material);\n    } else if (material.isMeshNormalMaterial) {\n      refreshUniformsCommon(uniforms, material);\n    } else if (material.isLineBasicMaterial) {\n      refreshUniformsLine(uniforms, material);\n\n      if (material.isLineDashedMaterial) {\n        refreshUniformsDash(uniforms, material);\n      }\n    } else if (material.isPointsMaterial) {\n      refreshUniformsPoints(uniforms, material, pixelRatio, height);\n    } else if (material.isSpriteMaterial) {\n      refreshUniformsSprites(uniforms, material);\n    } else if (material.isShadowMaterial) {\n      uniforms.color.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n    } else if (material.isShaderMaterial) {\n      material.uniformsNeedUpdate = false; // #15581\n    }\n  }\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n\n    if (material.color) {\n      uniforms.diffuse.value.copy(material.color);\n    }\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.specularMap) {\n      uniforms.specularMap.value = material.specularMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    }\n\n    var envMap = properties.get(material).envMap;\n\n    if (envMap) {\n      uniforms.envMap.value = envMap;\n      uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.ior.value = material.ior;\n      uniforms.refractionRatio.value = material.refractionRatio;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap; // artist-friendly light intensity scaling factor\n\n      var scaleFactor = renderer.physicallyCorrectLights !== true ? Math.PI : 1;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n    }\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. displacementMap map\n    // 4. normal map\n    // 5. bump map\n    // 6. roughnessMap map\n    // 7. metalnessMap map\n    // 8. alphaMap map\n    // 9. emissiveMap map\n    // 10. clearcoat map\n    // 11. clearcoat normal map\n    // 12. clearcoat roughnessMap map\n    // 13. iridescence map\n    // 14. iridescence thickness map\n    // 15. specular intensity map\n    // 16. specular tint map\n    // 17. transmission map\n    // 18. thickness map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    } else if (material.clearcoatMap) {\n      uvScaleMap = material.clearcoatMap;\n    } else if (material.clearcoatNormalMap) {\n      uvScaleMap = material.clearcoatNormalMap;\n    } else if (material.clearcoatRoughnessMap) {\n      uvScaleMap = material.clearcoatRoughnessMap;\n    } else if (material.iridescenceMap) {\n      uvScaleMap = material.iridescenceMap;\n    } else if (material.iridescenceThicknessMap) {\n      uvScaleMap = material.iridescenceThicknessMap;\n    } else if (material.specularIntensityMap) {\n      uvScaleMap = material.specularIntensityMap;\n    } else if (material.specularColorMap) {\n      uvScaleMap = material.specularColorMap;\n    } else if (material.transmissionMap) {\n      uvScaleMap = material.transmissionMap;\n    } else if (material.thicknessMap) {\n      uvScaleMap = material.thicknessMap;\n    } else if (material.sheenColorMap) {\n      uvScaleMap = material.sheenColorMap;\n    } else if (material.sheenRoughnessMap) {\n      uvScaleMap = material.sheenRoughnessMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap.isWebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    } // uv repeat and offset setting priorities for uv2\n    // 1. ao map\n    // 2. light map\n\n\n    var uv2ScaleMap;\n\n    if (material.aoMap) {\n      uv2ScaleMap = material.aoMap;\n    } else if (material.lightMap) {\n      uv2ScaleMap = material.lightMap;\n    }\n\n    if (uv2ScaleMap !== undefined) {\n      // backwards compatibility\n      if (uv2ScaleMap.isWebGLRenderTarget) {\n        uv2ScaleMap = uv2ScaleMap.texture;\n      }\n\n      if (uv2ScaleMap.matrixAutoUpdate === true) {\n        uv2ScaleMap.updateMatrix();\n      }\n\n      uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * pixelRatio;\n    uniforms.scale.value = height * 0.5;\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. alpha map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsSprites(uniforms, material) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n    uniforms.rotation.value = material.rotation;\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. alpha map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value.copy(material.specular);\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n  }\n\n  function refreshUniformsToon(uniforms, material) {\n    if (material.gradientMap) {\n      uniforms.gradientMap.value = material.gradientMap;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    var envMap = properties.get(material).envMap;\n\n    if (envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n    uniforms.ior.value = material.ior; // also part of uniforms common\n\n    if (material.sheen > 0) {\n      uniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen);\n      uniforms.sheenRoughness.value = material.sheenRoughness;\n\n      if (material.sheenColorMap) {\n        uniforms.sheenColorMap.value = material.sheenColorMap;\n      }\n\n      if (material.sheenRoughnessMap) {\n        uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n      }\n    }\n\n    if (material.clearcoat > 0) {\n      uniforms.clearcoat.value = material.clearcoat;\n      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n      if (material.clearcoatMap) {\n        uniforms.clearcoatMap.value = material.clearcoatMap;\n      }\n\n      if (material.clearcoatRoughnessMap) {\n        uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n      }\n\n      if (material.clearcoatNormalMap) {\n        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n        if (material.side === BackSide) {\n          uniforms.clearcoatNormalScale.value.negate();\n        }\n      }\n    }\n\n    if (material.iridescence > 0) {\n      uniforms.iridescence.value = material.iridescence;\n      uniforms.iridescenceIOR.value = material.iridescenceIOR;\n      uniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[0];\n      uniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[1];\n\n      if (material.iridescenceMap) {\n        uniforms.iridescenceMap.value = material.iridescenceMap;\n      }\n\n      if (material.iridescenceThicknessMap) {\n        uniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n      }\n    }\n\n    if (material.transmission > 0) {\n      uniforms.transmission.value = material.transmission;\n      uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n      uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\n      if (material.transmissionMap) {\n        uniforms.transmissionMap.value = material.transmissionMap;\n      }\n\n      uniforms.thickness.value = material.thickness;\n\n      if (material.thicknessMap) {\n        uniforms.thicknessMap.value = material.thicknessMap;\n      }\n\n      uniforms.attenuationDistance.value = material.attenuationDistance;\n      uniforms.attenuationColor.value.copy(material.attenuationColor);\n    }\n\n    uniforms.specularIntensity.value = material.specularIntensity;\n    uniforms.specularColor.value.copy(material.specularColor);\n\n    if (material.specularIntensityMap) {\n      uniforms.specularIntensityMap.value = material.specularIntensityMap;\n    }\n\n    if (material.specularColorMap) {\n      uniforms.specularColorMap.value = material.specularColorMap;\n    }\n  }\n\n  function refreshUniformsMatcap(uniforms, material) {\n    if (material.matcap) {\n      uniforms.matcap.value = material.matcap;\n    }\n  }\n\n  function refreshUniformsDistance(uniforms, material) {\n    uniforms.referencePosition.value.copy(material.referencePosition);\n    uniforms.nearDistance.value = material.nearDistance;\n    uniforms.farDistance.value = material.farDistance;\n  }\n\n  return {\n    refreshFogUniforms: refreshFogUniforms,\n    refreshMaterialUniforms: refreshMaterialUniforms\n  };\n}\n\nfunction createCanvasElement() {\n  var canvas = createElementNS('canvas');\n  canvas.style.display = 'block';\n  return canvas;\n}\n\nfunction WebGLRenderer() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  this.isWebGLRenderer = true;\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n      _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n      _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n  var _alpha;\n\n  if (_context !== null) {\n    _alpha = _context.getContextAttributes().alpha;\n  } else {\n    _alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n  }\n\n  var currentRenderList = null;\n  var currentRenderState = null; // render() can be called from within a callback triggered by another render.\n  // We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n  var renderListStack = [];\n  var renderStateStack = []; // public properties\n\n  this.domElement = _canvas; // Debug configuration container\n\n  this.debug = {\n    /**\n     * Enables error checking and reporting when shader programs are being compiled\n     * @type {boolean}\n     */\n    checkShaderErrors: true\n  }; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.outputEncoding = LinearEncoding; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = NoToneMapping;\n  this.toneMappingExposure = 1.0; //\n\n  Object.defineProperties(this, {\n    // @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n    gammaFactor: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .gammaFactor has been removed.');\n        return 2;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .gammaFactor has been removed.');\n      }\n    }\n  }); // internal properties\n\n  var _this = this;\n\n  var _isContextLost = false; // internal state cache\n\n  var _currentActiveCubeFace = 0;\n  var _currentActiveMipmapLevel = 0;\n  var _currentRenderTarget = null;\n\n  var _currentMaterialId = -1;\n\n  var _currentCamera = null;\n\n  var _currentViewport = new Vector4();\n\n  var _currentScissor = new Vector4();\n\n  var _currentScissorTest = null; //\n\n  var _width = _canvas.width;\n  var _height = _canvas.height;\n  var _pixelRatio = 1;\n  var _opaqueSort = null;\n  var _transparentSort = null;\n\n  var _viewport = new Vector4(0, 0, _width, _height);\n\n  var _scissor = new Vector4(0, 0, _width, _height);\n\n  var _scissorTest = false; // frustum\n\n  var _frustum = new Frustum(); // clipping\n\n\n  var _clippingEnabled = false;\n  var _localClippingEnabled = false; // transmission\n\n  var _transmissionRenderTarget = null; // camera matrices cache\n\n  var _projScreenMatrix = new Matrix4();\n\n  var _vector2 = new Vector2();\n\n  var _vector3 = new Vector3();\n\n  var _emptyScene = {\n    background: null,\n    fog: null,\n    environment: null,\n    overrideMaterial: null,\n    isScene: true\n  };\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  } // initialize\n\n\n  var _gl = _context;\n\n  function getContext(contextNames, contextAttributes) {\n    for (var i = 0; i < contextNames.length; i++) {\n      var contextName = contextNames[i];\n\n      var context = _canvas.getContext(contextName, contextAttributes);\n\n      if (context !== null) return context;\n    }\n\n    return null;\n  }\n\n  try {\n    var contextAttributes = {\n      alpha: true,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer,\n      powerPreference: _powerPreference,\n      failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n    }; // OffscreenCanvas does not have setAttribute, see #22811\n\n    if ('setAttribute' in _canvas) _canvas.setAttribute('data-engine', \"three.js r\".concat(REVISION)); // event listeners must be registered before WebGL context is created, see #12753\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n    _canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);\n\n    if (_gl === null) {\n      var contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n      if (_this.isWebGL1Renderer === true) {\n        contextNames.shift();\n      }\n\n      _gl = getContext(contextNames, contextAttributes);\n\n      if (_gl === null) {\n        if (getContext(contextNames)) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error.message);\n    throw error;\n  }\n\n  var extensions, capabilities, state, info;\n  var properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n  var programCache, materials, renderLists, renderStates, clipping, shadowMap;\n  var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n  var utils, bindingStates;\n\n  function initGLContext() {\n    extensions = new WebGLExtensions(_gl);\n    capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n    extensions.init(capabilities);\n    utils = new WebGLUtils(_gl, extensions, capabilities);\n    state = new WebGLState(_gl, extensions, capabilities);\n    info = new WebGLInfo();\n    properties = new WebGLProperties();\n    textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n    cubemaps = new WebGLCubeMaps(_this);\n    cubeuvmaps = new WebGLCubeUVMaps(_this);\n    attributes = new WebGLAttributes(_gl, capabilities);\n    bindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n    geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n    objects = new WebGLObjects(_gl, geometries, attributes, info);\n    morphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n    clipping = new WebGLClipping(properties);\n    programCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n    materials = new WebGLMaterials(_this, properties);\n    renderLists = new WebGLRenderLists();\n    renderStates = new WebGLRenderStates(extensions, capabilities);\n    background = new WebGLBackground(_this, cubemaps, state, objects, _alpha, _premultipliedAlpha);\n    shadowMap = new WebGLShadowMap(_this, objects, capabilities);\n    bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n    indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n    info.programs = programCache.programs;\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.shadowMap = shadowMap;\n    _this.state = state;\n    _this.info = info;\n  }\n\n  initGLContext(); // xr\n\n  var xr = new WebXRManager(_this, _gl);\n  this.xr = xr; // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function (target) {\n    return target.set(_width, _height);\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    if (xr.isPresenting) {\n      console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n      return;\n    }\n\n    _width = width;\n    _height = height;\n    _canvas.width = Math.floor(width * _pixelRatio);\n    _canvas.height = Math.floor(height * _pixelRatio);\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function (target) {\n    return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n    _pixelRatio = pixelRatio;\n    _canvas.width = Math.floor(width * pixelRatio);\n    _canvas.height = Math.floor(height * pixelRatio);\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getCurrentViewport = function (target) {\n    return target.copy(_currentViewport);\n  };\n\n  this.getViewport = function (target) {\n    return target.copy(_viewport);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    if (x.isVector4) {\n      _viewport.set(x.x, x.y, x.z, x.w);\n    } else {\n      _viewport.set(x, y, width, height);\n    }\n\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissor = function (target) {\n    return target.copy(_scissor);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    if (x.isVector4) {\n      _scissor.set(x.x, x.y, x.z, x.w);\n    } else {\n      _scissor.set(x, y, width, height);\n    }\n\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissorTest = function () {\n    return _scissorTest;\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  };\n\n  this.setOpaqueSort = function (method) {\n    _opaqueSort = method;\n  };\n\n  this.setTransparentSort = function (method) {\n    _transparentSort = method;\n  }; // Clearing\n\n\n  this.getClearColor = function (target) {\n    return target.copy(background.getClearColor());\n  };\n\n  this.setClearColor = function () {\n    background.setClearColor.apply(background, arguments);\n  };\n\n  this.getClearAlpha = function () {\n    return background.getClearAlpha();\n  };\n\n  this.setClearAlpha = function () {\n    background.setClearAlpha.apply(background, arguments);\n  };\n\n  this.clear = function () {\n    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var stencil = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var bits = 0;\n    if (color) bits |= 16384;\n    if (depth) bits |= 256;\n    if (stencil) bits |= 1024;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  }; //\n\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n    _canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);\n\n    renderLists.dispose();\n    renderStates.dispose();\n    properties.dispose();\n    cubemaps.dispose();\n    cubeuvmaps.dispose();\n    objects.dispose();\n    bindingStates.dispose();\n    programCache.dispose();\n    xr.dispose();\n    xr.removeEventListener('sessionstart', onXRSessionStart);\n    xr.removeEventListener('sessionend', onXRSessionEnd);\n\n    if (_transmissionRenderTarget) {\n      _transmissionRenderTarget.dispose();\n\n      _transmissionRenderTarget = null;\n    }\n\n    animation.stop();\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    console.log('THREE.WebGLRenderer: Context Lost.');\n    _isContextLost = true;\n  }\n\n  function onContextRestore() {\n    console.log('THREE.WebGLRenderer: Context Restored.');\n    _isContextLost = false;\n    var infoAutoReset = info.autoReset;\n    var shadowMapEnabled = shadowMap.enabled;\n    var shadowMapAutoUpdate = shadowMap.autoUpdate;\n    var shadowMapNeedsUpdate = shadowMap.needsUpdate;\n    var shadowMapType = shadowMap.type;\n    initGLContext();\n    info.autoReset = infoAutoReset;\n    shadowMap.enabled = shadowMapEnabled;\n    shadowMap.autoUpdate = shadowMapAutoUpdate;\n    shadowMap.needsUpdate = shadowMapNeedsUpdate;\n    shadowMap.type = shadowMapType;\n  }\n\n  function onContextCreationError(event) {\n    console.error('THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage);\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReferences(material);\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReferences(material) {\n    var programs = properties.get(material).programs;\n\n    if (programs !== undefined) {\n      programs.forEach(function (program) {\n        programCache.releaseProgram(program);\n      });\n\n      if (material.isShaderMaterial) {\n        programCache.releaseShaderCache(material);\n      }\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n    if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n    var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n    var program = setProgram(camera, scene, geometry, material, object);\n    state.setMaterial(material, frontFaceCW); //\n\n    var index = geometry.index;\n    var position = geometry.attributes.position; //\n\n    if (index === null) {\n      if (position === undefined || position.count === 0) return;\n    } else if (index.count === 0) {\n      return;\n    } //\n\n\n    var rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n\n    bindingStates.setup(object, material, program, geometry, index);\n    var attribute;\n    var renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    } //\n\n\n    var dataCount = index !== null ? index.count : position.count;\n    var rangeStart = geometry.drawRange.start * rangeFactor;\n    var rangeCount = geometry.drawRange.count * rangeFactor;\n    var groupStart = group !== null ? group.start * rangeFactor : 0;\n    var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n    var drawStart = Math.max(rangeStart, groupStart);\n    var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1);\n    if (drawCount === 0) return; //\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(1);\n      } else {\n        renderer.setMode(4);\n      }\n    } else if (object.isLine) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(1);\n      } else if (object.isLineLoop) {\n        renderer.setMode(2);\n      } else {\n        renderer.setMode(3);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(0);\n    } else if (object.isSprite) {\n      renderer.setMode(4);\n    }\n\n    if (object.isInstancedMesh) {\n      renderer.renderInstances(drawStart, drawCount, object.count);\n    } else if (geometry.isInstancedBufferGeometry) {\n      var instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n      renderer.renderInstances(drawStart, drawCount, instanceCount);\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  }; // Compile\n\n\n  this.compile = function (scene, camera) {\n    currentRenderState = renderStates.get(scene);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n    scene.traverseVisible(function (object) {\n      if (object.isLight && object.layers.test(camera.layers)) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      }\n    });\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n    scene.traverse(function (object) {\n      var material = object.material;\n\n      if (material) {\n        if (Array.isArray(material)) {\n          for (var i = 0; i < material.length; i++) {\n            var material2 = material[i];\n            getProgram(material2, scene, object);\n          }\n        } else {\n          getProgram(material, scene, object);\n        }\n      }\n    });\n    renderStateStack.pop();\n    currentRenderState = null;\n  }; // Animation Loop\n\n\n  var onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time) {\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  function onXRSessionStart() {\n    animation.stop();\n  }\n\n  function onXRSessionEnd() {\n    animation.start();\n  }\n\n  var animation = new WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n  if (typeof self !== 'undefined') animation.setContext(self);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n    xr.setAnimationLoop(callback);\n    callback === null ? animation.stop() : animation.start();\n  };\n\n  xr.addEventListener('sessionstart', onXRSessionStart);\n  xr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n  this.render = function (scene, camera) {\n    if (camera !== undefined && camera.isCamera !== true) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    if (_isContextLost === true) return; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    if (xr.enabled === true && xr.isPresenting === true) {\n      if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n      camera = xr.getCamera(); // use XR camera for rendering\n    } //\n\n\n    if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n    currentRenderState = renderStates.get(scene, renderStateStack.length);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    currentRenderList = renderLists.get(scene, renderListStack.length);\n    currentRenderList.init();\n    renderListStack.push(currentRenderList);\n    projectObject(scene, camera, 0, _this.sortObjects);\n    currentRenderList.finish();\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort(_opaqueSort, _transparentSort);\n    } //\n\n\n    if (_clippingEnabled === true) clipping.beginShadows();\n    var shadowsArray = currentRenderState.state.shadowsArray;\n    shadowMap.render(shadowsArray, scene, camera);\n    if (_clippingEnabled === true) clipping.endShadows(); //\n\n    if (this.info.autoReset === true) this.info.reset(); //\n\n    background.render(currentRenderList, scene); // render scene\n\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n    if (camera.isArrayCamera) {\n      var cameras = camera.cameras;\n\n      for (var i = 0, l = cameras.length; i < l; i++) {\n        var camera2 = cameras[i];\n        renderScene(currentRenderList, scene, camera2, camera2.viewport);\n      }\n    } else {\n      renderScene(currentRenderList, scene, camera);\n    } //\n\n\n    if (_currentRenderTarget !== null) {\n      // resolve multisample renderbuffers to a single-sample texture if necessary\n      textures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n      textures.updateRenderTargetMipmap(_currentRenderTarget);\n    } //\n\n\n    if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // _gl.finish();\n\n    bindingStates.resetDefaultState();\n    _currentMaterialId = -1;\n    _currentCamera = null;\n    renderStateStack.pop();\n\n    if (renderStateStack.length > 0) {\n      currentRenderState = renderStateStack[renderStateStack.length - 1];\n    } else {\n      currentRenderState = null;\n    }\n\n    renderListStack.pop();\n\n    if (renderListStack.length > 0) {\n      currentRenderList = renderListStack[renderListStack.length - 1];\n    } else {\n      currentRenderList = null;\n    }\n  };\n\n  function projectObject(object, camera, groupOrder, sortObjects) {\n    if (object.visible === false) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isGroup) {\n        groupOrder = object.renderOrder;\n      } else if (object.isLOD) {\n        if (object.autoUpdate === true) object.update(camera);\n      } else if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          var geometry = objects.update(object);\n          var material = object.material;\n\n          if (material.visible) {\n            currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n          }\n        }\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          // update skeleton only once in a frame\n          if (object.skeleton.frame !== info.render.frame) {\n            object.skeleton.update();\n            object.skeleton.frame = info.render.frame;\n          }\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          var _geometry2 = objects.update(object);\n\n          var _material = object.material;\n\n          if (Array.isArray(_material)) {\n            var groups = _geometry2.groups;\n\n            for (var i = 0, l = groups.length; i < l; i++) {\n              var group = groups[i];\n              var groupMaterial = _material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(object, _geometry2, groupMaterial, groupOrder, _vector3.z, group);\n              }\n            }\n          } else if (_material.visible) {\n            currentRenderList.push(object, _geometry2, _material, groupOrder, _vector3.z, null);\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var _i51 = 0, _l6 = children.length; _i51 < _l6; _i51++) {\n      projectObject(children[_i51], camera, groupOrder, sortObjects);\n    }\n  }\n\n  function renderScene(currentRenderList, scene, camera, viewport) {\n    var opaqueObjects = currentRenderList.opaque;\n    var transmissiveObjects = currentRenderList.transmissive;\n    var transparentObjects = currentRenderList.transparent;\n    currentRenderState.setupLightsView(camera);\n    if (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n    if (viewport) state.viewport(_currentViewport.copy(viewport));\n    if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n    if (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n    if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n    state.setPolygonOffset(false);\n  }\n\n  function renderTransmissionPass(opaqueObjects, scene, camera) {\n    var isWebGL2 = capabilities.isWebGL2;\n\n    if (_transmissionRenderTarget === null) {\n      _transmissionRenderTarget = new WebGLRenderTarget(1, 1, {\n        generateMipmaps: true,\n        type: extensions.has('EXT_color_buffer_half_float') ? HalfFloatType : UnsignedByteType,\n        minFilter: LinearMipmapLinearFilter,\n        samples: isWebGL2 && _antialias === true ? 4 : 0\n      });\n    }\n\n    _this.getDrawingBufferSize(_vector2);\n\n    if (isWebGL2) {\n      _transmissionRenderTarget.setSize(_vector2.x, _vector2.y);\n    } else {\n      _transmissionRenderTarget.setSize(floorPowerOfTwo(_vector2.x), floorPowerOfTwo(_vector2.y));\n    } //\n\n\n    var currentRenderTarget = _this.getRenderTarget();\n\n    _this.setRenderTarget(_transmissionRenderTarget);\n\n    _this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n    // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n    var currentToneMapping = _this.toneMapping;\n    _this.toneMapping = NoToneMapping;\n    renderObjects(opaqueObjects, scene, camera);\n    _this.toneMapping = currentToneMapping;\n    textures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n    textures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n    _this.setRenderTarget(currentRenderTarget);\n  }\n\n  function renderObjects(renderList, scene, camera) {\n    var overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n\n      if (object.layers.test(camera.layers)) {\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n    object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n    material.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n    if (material.transparent === true && material.side === DoubleSide) {\n      material.side = BackSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = FrontSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = DoubleSide;\n    } else {\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n  }\n\n  function getProgram(material, scene, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    var materialProperties = properties.get(material);\n    var lights = currentRenderState.state.lights;\n    var shadowsArray = currentRenderState.state.shadowsArray;\n    var lightsStateVersion = lights.state.version;\n    var parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n    var programCacheKey = programCache.getProgramCacheKey(parameters);\n    var programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n    materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n    materialProperties.fog = scene.fog;\n    materialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n    if (programs === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n      programs = new Map();\n      materialProperties.programs = programs;\n    }\n\n    var program = programs.get(programCacheKey);\n\n    if (program !== undefined) {\n      // early out if program and light state is identical\n      if (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n        updateCommonMaterialProperties(material, parameters);\n        return program;\n      }\n    } else {\n      parameters.uniforms = programCache.getUniforms(material);\n      material.onBuild(object, parameters, _this);\n      material.onBeforeCompile(parameters, _this);\n      program = programCache.acquireProgram(parameters, programCacheKey);\n      programs.set(programCacheKey, program);\n      materialProperties.uniforms = parameters.uniforms;\n    }\n\n    var uniforms = materialProperties.uniforms;\n\n    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n      uniforms.clippingPlanes = clipping.uniform;\n    }\n\n    updateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n    materialProperties.needsLights = materialNeedsLights(material);\n    materialProperties.lightsStateVersion = lightsStateVersion;\n\n    if (materialProperties.needsLights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.lightProbe.value = lights.state.probe;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.spotLightShadows.value = lights.state.spotShadow;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n      uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.pointLightShadows.value = lights.state.pointShadow;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    var progUniforms = program.getUniforms();\n    var uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.currentProgram = program;\n    materialProperties.uniformsList = uniformsList;\n    return program;\n  }\n\n  function updateCommonMaterialProperties(material, parameters) {\n    var materialProperties = properties.get(material);\n    materialProperties.outputEncoding = parameters.outputEncoding;\n    materialProperties.instancing = parameters.instancing;\n    materialProperties.skinning = parameters.skinning;\n    materialProperties.morphTargets = parameters.morphTargets;\n    materialProperties.morphNormals = parameters.morphNormals;\n    materialProperties.morphColors = parameters.morphColors;\n    materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n    materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n    materialProperties.numIntersection = parameters.numClipIntersection;\n    materialProperties.vertexAlphas = parameters.vertexAlphas;\n    materialProperties.vertexTangents = parameters.vertexTangents;\n    materialProperties.toneMapping = parameters.toneMapping;\n  }\n\n  function setProgram(camera, scene, geometry, material, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    textures.resetTextureUnits();\n    var fog = scene.fog;\n    var environment = material.isMeshStandardMaterial ? scene.environment : null;\n    var encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding;\n    var envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n    var vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n    var vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n    var morphTargets = !!geometry.morphAttributes.position;\n    var morphNormals = !!geometry.morphAttributes.normal;\n    var morphColors = !!geometry.morphAttributes.color;\n    var toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n    var morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n    var morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n    var materialProperties = properties.get(material);\n    var lights = currentRenderState.state.lights;\n\n    if (_clippingEnabled === true) {\n      if (_localClippingEnabled === true || camera !== _currentCamera) {\n        var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        clipping.setState(material, camera, useCache);\n      }\n    } //\n\n\n    var needsProgramChange = false;\n\n    if (material.version === materialProperties.__version) {\n      if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n        needsProgramChange = true;\n      } else if (materialProperties.outputEncoding !== encoding) {\n        needsProgramChange = true;\n      } else if (object.isInstancedMesh && materialProperties.instancing === false) {\n        needsProgramChange = true;\n      } else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n        needsProgramChange = true;\n      } else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n        needsProgramChange = true;\n      } else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n        needsProgramChange = true;\n      } else if (materialProperties.envMap !== envMap) {\n        needsProgramChange = true;\n      } else if (material.fog === true && materialProperties.fog !== fog) {\n        needsProgramChange = true;\n      } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexAlphas !== vertexAlphas) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexTangents !== vertexTangents) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphTargets !== morphTargets) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphNormals !== morphNormals) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphColors !== morphColors) {\n        needsProgramChange = true;\n      } else if (materialProperties.toneMapping !== toneMapping) {\n        needsProgramChange = true;\n      } else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n        needsProgramChange = true;\n      }\n    } else {\n      needsProgramChange = true;\n      materialProperties.__version = material.version;\n    } //\n\n\n    var program = materialProperties.currentProgram;\n\n    if (needsProgramChange === true) {\n      program = getProgram(material, scene, object);\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || _currentCamera !== camera) {\n      p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (_currentCamera !== camera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n        var uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n        p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n    } // skinning and morph target uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone and morph texture must go before other textures\n    // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n    if (object.isSkinnedMesh) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      var skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n          p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n          p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n        } else {\n          console.warn('THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.');\n        }\n      }\n    }\n\n    var morphAttributes = geometry.morphAttributes;\n\n    if (morphAttributes.position !== undefined || morphAttributes.normal !== undefined || morphAttributes.color !== undefined && capabilities.isWebGL2 === true) {\n      morphtargets.update(object, geometry, material, program);\n    }\n\n    if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n      materialProperties.receiveShadow = object.receiveShadow;\n      p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n      if (materialProperties.needsLights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog === true) {\n        materials.refreshFogUniforms(m_uniforms, fog);\n      }\n\n      materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n    }\n\n    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n      material.uniformsNeedUpdate = false;\n    }\n\n    if (material.isSpriteMaterial) {\n      p_uniforms.setValue(_gl, 'center', object.center);\n    } // common matrices\n\n\n    p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n    p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n    return program;\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.lightProbe.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.directionalLightShadows.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.pointLightShadows.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.spotLightShadows.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  }\n\n  function materialNeedsLights(material) {\n    return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n  }\n\n  this.getActiveCubeFace = function () {\n    return _currentActiveCubeFace;\n  };\n\n  this.getActiveMipmapLevel = function () {\n    return _currentActiveMipmapLevel;\n  };\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTargetTextures = function (renderTarget, colorTexture, depthTexture) {\n    properties.get(renderTarget.texture).__webglTexture = colorTexture;\n    properties.get(renderTarget.depthTexture).__webglTexture = depthTexture;\n    var renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__hasExternalTextures = true;\n\n    if (renderTargetProperties.__hasExternalTextures) {\n      renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n      if (!renderTargetProperties.__autoAllocateDepthBuffer) {\n        // The multisample_render_to_texture extension doesn't work properly if there\n        // are midframe flushes and an external depth buffer. Disable use of the extension.\n        if (extensions.has('WEBGL_multisampled_render_to_texture') === true) {\n          console.warn('THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided');\n          renderTargetProperties.__useRenderToTexture = false;\n        }\n      }\n    }\n  };\n\n  this.setRenderTargetFramebuffer = function (renderTarget, defaultFramebuffer) {\n    var renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n    renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    var activeCubeFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var activeMipmapLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _currentRenderTarget = renderTarget;\n    _currentActiveCubeFace = activeCubeFace;\n    _currentActiveMipmapLevel = activeMipmapLevel;\n    var useDefaultFramebuffer = true;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (renderTargetProperties.__useDefaultFramebuffer !== undefined) {\n        // We need to make sure to rebind the framebuffer.\n        state.bindFramebuffer(36160, null);\n        useDefaultFramebuffer = false;\n      } else if (renderTargetProperties.__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      } else if (renderTargetProperties.__hasExternalTextures) {\n        // Color and depth texture must be rebound in order for the swapchain to update.\n        textures.rebindTextures(renderTarget, properties.get(renderTarget.texture).__webglTexture, properties.get(renderTarget.depthTexture).__webglTexture);\n      }\n    }\n\n    var framebuffer = null;\n    var isCube = false;\n    var isRenderTarget3D = false;\n\n    if (renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.isData3DTexture || texture.isDataArrayTexture) {\n        isRenderTarget3D = true;\n      }\n\n      var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        framebuffer = __webglFramebuffer[activeCubeFace];\n        isCube = true;\n      } else if (capabilities.isWebGL2 && renderTarget.samples > 0 && textures.useMultisampledRTT(renderTarget) === false) {\n        framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissorTest = _scissorTest;\n    }\n\n    var framebufferBound = state.bindFramebuffer(36160, framebuffer);\n\n    if (framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer) {\n      state.drawBuffers(renderTarget, framebuffer);\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n    } else if (isRenderTarget3D) {\n      var _textureProperties = properties.get(renderTarget.texture);\n\n      var layer = activeCubeFace || 0;\n\n      _gl.framebufferTextureLayer(36160, 36064, _textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n    }\n\n    _currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n      framebuffer = framebuffer[activeCubeFaceIndex];\n    }\n\n    if (framebuffer) {\n      state.bindFramebuffer(36160, framebuffer);\n\n      try {\n        var texture = renderTarget.texture;\n        var textureFormat = texture.format;\n        var textureType = texture.type;\n\n        if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(35739)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        var halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n        if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(35738) && // Edge and Chrome Mac < 52 (#9513)\n        !(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n        !halfFloatSupportedByExt) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        } // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\n        if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n          _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n        }\n      } finally {\n        // restore framebuffer of current render target if necessary\n        var _framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\n        state.bindFramebuffer(36160, _framebuffer);\n      }\n    }\n  };\n\n  this.copyFramebufferToTexture = function (position, texture) {\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var levelScale = Math.pow(2, -level);\n    var width = Math.floor(texture.image.width * levelScale);\n    var height = Math.floor(texture.image.height * levelScale);\n    textures.setTexture2D(texture, 0);\n\n    _gl.copyTexSubImage2D(3553, level, 0, 0, position.x, position.y, width, height);\n\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture = function (position, srcTexture, dstTexture) {\n    var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var width = srcTexture.image.width;\n    var height = srcTexture.image.height;\n    var glFormat = utils.convert(dstTexture.format);\n    var glType = utils.convert(dstTexture.type);\n    textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n    // parameters, make sure they are correct for the dstTexture\n\n    _gl.pixelStorei(37440, dstTexture.flipY);\n\n    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n    if (srcTexture.isDataTexture) {\n      _gl.texSubImage2D(3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        _gl.compressedTexSubImage2D(3553, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n      } else {\n        _gl.texSubImage2D(3553, level, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n    } // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(3553);\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture) {\n    var level = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n    if (_this.isWebGL1Renderer) {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n      return;\n    }\n\n    var width = sourceBox.max.x - sourceBox.min.x + 1;\n    var height = sourceBox.max.y - sourceBox.min.y + 1;\n    var depth = sourceBox.max.z - sourceBox.min.z + 1;\n    var glFormat = utils.convert(dstTexture.format);\n    var glType = utils.convert(dstTexture.type);\n    var glTarget;\n\n    if (dstTexture.isData3DTexture) {\n      textures.setTexture3D(dstTexture, 0);\n      glTarget = 32879;\n    } else if (dstTexture.isDataArrayTexture) {\n      textures.setTexture2DArray(dstTexture, 0);\n      glTarget = 35866;\n    } else {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n      return;\n    }\n\n    _gl.pixelStorei(37440, dstTexture.flipY);\n\n    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n    var unpackRowLen = _gl.getParameter(3314);\n\n    var unpackImageHeight = _gl.getParameter(32878);\n\n    var unpackSkipPixels = _gl.getParameter(3316);\n\n    var unpackSkipRows = _gl.getParameter(3315);\n\n    var unpackSkipImages = _gl.getParameter(32877);\n\n    var image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n    _gl.pixelStorei(3314, image.width);\n\n    _gl.pixelStorei(32878, image.height);\n\n    _gl.pixelStorei(3316, sourceBox.min.x);\n\n    _gl.pixelStorei(3315, sourceBox.min.y);\n\n    _gl.pixelStorei(32877, sourceBox.min.z);\n\n    if (srcTexture.isDataTexture || srcTexture.isData3DTexture) {\n      _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n        _gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n      } else {\n        _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n      }\n    }\n\n    _gl.pixelStorei(3314, unpackRowLen);\n\n    _gl.pixelStorei(32878, unpackImageHeight);\n\n    _gl.pixelStorei(3316, unpackSkipPixels);\n\n    _gl.pixelStorei(3315, unpackSkipRows);\n\n    _gl.pixelStorei(32877, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n    state.unbindTexture();\n  };\n\n  this.initTexture = function (texture) {\n    if (texture.isCubeTexture) {\n      textures.setTextureCube(texture, 0);\n    } else if (texture.isData3DTexture) {\n      textures.setTexture3D(texture, 0);\n    } else if (texture.isDataArrayTexture) {\n      textures.setTexture2DArray(texture, 0);\n    } else {\n      textures.setTexture2D(texture, 0);\n    }\n\n    state.unbindTexture();\n  };\n\n  this.resetState = function () {\n    _currentActiveCubeFace = 0;\n    _currentActiveMipmapLevel = 0;\n    _currentRenderTarget = null;\n    state.reset();\n    bindingStates.reset();\n  };\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n      detail: this\n    }));\n  }\n}\n\nvar WebGL1Renderer = /*#__PURE__*/function (_WebGLRenderer) {\n  _inherits(WebGL1Renderer, _WebGLRenderer);\n\n  var _super38 = _createSuper(WebGL1Renderer);\n\n  function WebGL1Renderer() {\n    _classCallCheck(this, WebGL1Renderer);\n\n    return _super38.apply(this, arguments);\n  }\n\n  return WebGL1Renderer;\n}(WebGLRenderer);\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nvar FogExp2 = /*#__PURE__*/function () {\n  function FogExp2(color) {\n    var density = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.00025;\n\n    _classCallCheck(this, FogExp2);\n\n    this.isFogExp2 = true;\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density;\n  }\n\n  _createClass(FogExp2, [{\n    key: \"clone\",\n    value: function clone() {\n      return new FogExp2(this.color, this.density);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'FogExp2',\n        color: this.color.getHex(),\n        density: this.density\n      };\n    }\n  }]);\n\n  return FogExp2;\n}();\n\nvar Fog = /*#__PURE__*/function () {\n  function Fog(color) {\n    var near = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var far = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n\n    _classCallCheck(this, Fog);\n\n    this.isFog = true;\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near;\n    this.far = far;\n  }\n\n  _createClass(Fog, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Fog(this.color, this.near, this.far);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'Fog',\n        color: this.color.getHex(),\n        near: this.near,\n        far: this.far\n      };\n    }\n  }]);\n\n  return Fog;\n}();\n\nvar Scene = /*#__PURE__*/function (_Object3D5) {\n  _inherits(Scene, _Object3D5);\n\n  var _super39 = _createSuper(Scene);\n\n  function Scene() {\n    var _this30;\n\n    _classCallCheck(this, Scene);\n\n    _this30 = _super39.call(this);\n    _this30.isScene = true;\n    _this30.type = 'Scene';\n    _this30.background = null;\n    _this30.environment = null;\n    _this30.fog = null;\n    _this30.overrideMaterial = null;\n    _this30.autoUpdate = true; // checked by the renderer\n\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: _assertThisInitialized(_this30)\n      }));\n    }\n\n    return _this30;\n  }\n\n  _createClass(Scene, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Scene.prototype), \"copy\", this).call(this, source, recursive);\n\n      if (source.background !== null) this.background = source.background.clone();\n      if (source.environment !== null) this.environment = source.environment.clone();\n      if (source.fog !== null) this.fog = source.fog.clone();\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(Scene.prototype), \"toJSON\", this).call(this, meta);\n\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\n      return data;\n    }\n  }]);\n\n  return Scene;\n}(Object3D);\n\nvar InterleavedBuffer = /*#__PURE__*/function () {\n  function InterleavedBuffer(array, stride) {\n    _classCallCheck(this, InterleavedBuffer);\n\n    this.isInterleavedBuffer = true;\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n    this.uuid = generateUUID();\n  }\n\n  _createClass(InterleavedBuffer, [{\n    key: \"onUploadCallback\",\n    value: function onUploadCallback() {}\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }, {\n    key: \"setUsage\",\n    value: function setUsage(value) {\n      this.usage = value;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.usage = source.usage;\n      return this;\n    }\n  }, {\n    key: \"copyAt\",\n    value: function copyAt(index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    }\n  }, {\n    key: \"set\",\n    value: function set(value) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.array.set(value, offset);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(data) {\n      if (data.arrayBuffers === undefined) {\n        data.arrayBuffers = {};\n      }\n\n      if (this.array.buffer._uuid === undefined) {\n        this.array.buffer._uuid = generateUUID();\n      }\n\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n        data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n      }\n\n      var array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n      var ib = new this.constructor(array, this.stride);\n      ib.setUsage(this.usage);\n      return ib;\n    }\n  }, {\n    key: \"onUpload\",\n    value: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      if (data.arrayBuffers === undefined) {\n        data.arrayBuffers = {};\n      } // generate UUID for array buffer if necessary\n\n\n      if (this.array.buffer._uuid === undefined) {\n        this.array.buffer._uuid = generateUUID();\n      }\n\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n        data.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer));\n      } //\n\n\n      return {\n        uuid: this.uuid,\n        buffer: this.array.buffer._uuid,\n        type: this.array.constructor.name,\n        stride: this.stride\n      };\n    }\n  }]);\n\n  return InterleavedBuffer;\n}();\n\nvar _vector$6 = /*@__PURE__*/new Vector3();\n\nvar InterleavedBufferAttribute = /*#__PURE__*/function () {\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset) {\n    var normalized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    _classCallCheck(this, InterleavedBufferAttribute);\n\n    this.isInterleavedBufferAttribute = true;\n    this.name = '';\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  _createClass(InterleavedBufferAttribute, [{\n    key: \"count\",\n    get: function get() {\n      return this.data.count;\n    }\n  }, {\n    key: \"array\",\n    get: function get() {\n      return this.data.array;\n    }\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      this.data.needsUpdate = value;\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(m) {\n      for (var i = 0, l = this.data.count; i < l; i++) {\n        _vector$6.fromBufferAttribute(this, i);\n\n        _vector$6.applyMatrix4(m);\n\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"applyNormalMatrix\",\n    value: function applyNormalMatrix(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$6.fromBufferAttribute(this, i);\n\n        _vector$6.applyNormalMatrix(m);\n\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"transformDirection\",\n    value: function transformDirection(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$6.fromBufferAttribute(this, i);\n\n        _vector$6.transformDirection(m);\n\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setX\",\n    value: function setX(index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    }\n  }, {\n    key: \"setY\",\n    value: function setY(index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    }\n  }, {\n    key: \"setZ\",\n    value: function setZ(index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    }\n  }, {\n    key: \"setW\",\n    value: function setW(index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    }\n  }, {\n    key: \"getX\",\n    value: function getX(index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    }\n  }, {\n    key: \"getZ\",\n    value: function getZ(index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    }\n  }, {\n    key: \"getW\",\n    value: function getW(index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    }\n  }, {\n    key: \"setXY\",\n    value: function setXY(index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    }\n  }, {\n    key: \"setXYZ\",\n    value: function setXYZ(index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    }\n  }, {\n    key: \"setXYZW\",\n    value: function setXYZW(index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(data) {\n      if (data === undefined) {\n        console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.');\n        var array = [];\n\n        for (var i = 0; i < this.count; i++) {\n          var index = i * this.data.stride + this.offset;\n\n          for (var j = 0; j < this.itemSize; j++) {\n            array.push(this.data.array[index + j]);\n          }\n        }\n\n        return new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n      } else {\n        if (data.interleavedBuffers === undefined) {\n          data.interleavedBuffers = {};\n        }\n\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\n          data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n        }\n\n        return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      if (data === undefined) {\n        console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.');\n        var array = [];\n\n        for (var i = 0; i < this.count; i++) {\n          var index = i * this.data.stride + this.offset;\n\n          for (var j = 0; j < this.itemSize; j++) {\n            array.push(this.data.array[index + j]);\n          }\n        } // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n        return {\n          itemSize: this.itemSize,\n          type: this.array.constructor.name,\n          array: array,\n          normalized: this.normalized\n        };\n      } else {\n        // save as true interleaved attribtue\n        if (data.interleavedBuffers === undefined) {\n          data.interleavedBuffers = {};\n        }\n\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\n          data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n        }\n\n        return {\n          isInterleavedBufferAttribute: true,\n          itemSize: this.itemSize,\n          data: this.data.uuid,\n          offset: this.offset,\n          normalized: this.normalized\n        };\n      }\n    }\n  }]);\n\n  return InterleavedBufferAttribute;\n}();\n\nvar SpriteMaterial = /*#__PURE__*/function (_Material5) {\n  _inherits(SpriteMaterial, _Material5);\n\n  var _super40 = _createSuper(SpriteMaterial);\n\n  function SpriteMaterial(parameters) {\n    var _this31;\n\n    _classCallCheck(this, SpriteMaterial);\n\n    _this31 = _super40.call(this);\n    _this31.isSpriteMaterial = true;\n    _this31.type = 'SpriteMaterial';\n    _this31.color = new Color(0xffffff);\n    _this31.map = null;\n    _this31.alphaMap = null;\n    _this31.rotation = 0;\n    _this31.sizeAttenuation = true;\n    _this31.transparent = true;\n    _this31.fog = true;\n\n    _this31.setValues(parameters);\n\n    return _this31;\n  }\n\n  _createClass(SpriteMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(SpriteMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.alphaMap = source.alphaMap;\n      this.rotation = source.rotation;\n      this.sizeAttenuation = source.sizeAttenuation;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return SpriteMaterial;\n}(Material);\n\nvar _geometry;\n\nvar _intersectPoint = /*@__PURE__*/new Vector3();\n\nvar _worldScale = /*@__PURE__*/new Vector3();\n\nvar _mvPosition = /*@__PURE__*/new Vector3();\n\nvar _alignedPosition = /*@__PURE__*/new Vector2();\n\nvar _rotatedPosition = /*@__PURE__*/new Vector2();\n\nvar _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\nvar _vA = /*@__PURE__*/new Vector3();\n\nvar _vB = /*@__PURE__*/new Vector3();\n\nvar _vC = /*@__PURE__*/new Vector3();\n\nvar _uvA = /*@__PURE__*/new Vector2();\n\nvar _uvB = /*@__PURE__*/new Vector2();\n\nvar _uvC = /*@__PURE__*/new Vector2();\n\nvar Sprite = /*#__PURE__*/function (_Object3D6) {\n  _inherits(Sprite, _Object3D6);\n\n  var _super41 = _createSuper(Sprite);\n\n  function Sprite(material) {\n    var _this32;\n\n    _classCallCheck(this, Sprite);\n\n    _this32 = _super41.call(this);\n    _this32.isSprite = true;\n    _this32.type = 'Sprite';\n\n    if (_geometry === undefined) {\n      _geometry = new BufferGeometry();\n      var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n      _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n      _geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n      _geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n\n    _this32.geometry = _geometry;\n    _this32.material = material !== undefined ? material : new SpriteMaterial();\n    _this32.center = new Vector2(0.5, 0.5);\n    return _this32;\n  }\n\n  _createClass(Sprite, [{\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      if (raycaster.camera === null) {\n        console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n      }\n\n      _worldScale.setFromMatrixScale(this.matrixWorld);\n\n      _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n      this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n      _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n      if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n        _worldScale.multiplyScalar(-_mvPosition.z);\n      }\n\n      var rotation = this.material.rotation;\n      var sin, cos;\n\n      if (rotation !== 0) {\n        cos = Math.cos(rotation);\n        sin = Math.sin(rotation);\n      }\n\n      var center = this.center;\n      transformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n      _uvA.set(0, 0);\n\n      _uvB.set(1, 0);\n\n      _uvC.set(1, 1); // check first triangle\n\n\n      var intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n      if (intersect === null) {\n        // check second triangle\n        transformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n        _uvB.set(0, 1);\n\n        intersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n        if (intersect === null) {\n          return;\n        }\n      }\n\n      var distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        point: _intersectPoint.clone(),\n        uv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n        face: null,\n        object: this\n      });\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Sprite.prototype), \"copy\", this).call(this, source, recursive);\n\n      if (source.center !== undefined) this.center.copy(source.center);\n      this.material = source.material;\n      return this;\n    }\n  }]);\n\n  return Sprite;\n}(Object3D);\n\nfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n  // compute position in camera space\n  _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n  if (sin !== undefined) {\n    _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n    _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n  } else {\n    _rotatedPosition.copy(_alignedPosition);\n  }\n\n  vertexPosition.copy(mvPosition);\n  vertexPosition.x += _rotatedPosition.x;\n  vertexPosition.y += _rotatedPosition.y; // transform to world space\n\n  vertexPosition.applyMatrix4(_viewWorldMatrix);\n}\n\nvar _v1$2 = /*@__PURE__*/new Vector3();\n\nvar _v2$1 = /*@__PURE__*/new Vector3();\n\nvar LOD = /*#__PURE__*/function (_Object3D7) {\n  _inherits(LOD, _Object3D7);\n\n  var _super42 = _createSuper(LOD);\n\n  function LOD() {\n    var _this33;\n\n    _classCallCheck(this, LOD);\n\n    _this33 = _super42.call(this);\n    _this33._currentLevel = 0;\n    _this33.type = 'LOD';\n    Object.defineProperties(_assertThisInitialized(_this33), {\n      levels: {\n        enumerable: true,\n        value: []\n      },\n      isLOD: {\n        value: true\n      }\n    });\n    _this33.autoUpdate = true;\n    return _this33;\n  }\n\n  _createClass(LOD, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LOD.prototype), \"copy\", this).call(this, source, false);\n\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      this.autoUpdate = source.autoUpdate;\n      return this;\n    }\n  }, {\n    key: \"addLevel\",\n    value: function addLevel(object) {\n      var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      distance = Math.abs(distance);\n      var levels = this.levels;\n      var l;\n\n      for (l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n      return this;\n    }\n  }, {\n    key: \"getCurrentLevel\",\n    value: function getCurrentLevel() {\n      return this._currentLevel;\n    }\n  }, {\n    key: \"getObjectForDistance\",\n    value: function getObjectForDistance(distance) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        var i, l;\n\n        for (i = 1, l = levels.length; i < l; i++) {\n          if (distance < levels[i].distance) {\n            break;\n          }\n        }\n\n        return levels[i - 1].object;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        _v1$2.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = raycaster.ray.origin.distanceTo(_v1$2);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        _v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n        _v2$1.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n        levels[0].object.visible = true;\n        var i, l;\n\n        for (i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        this._currentLevel = i - 1;\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(LOD.prototype), \"toJSON\", this).call(this, meta);\n\n      if (this.autoUpdate === false) data.object.autoUpdate = false;\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  }]);\n\n  return LOD;\n}(Object3D);\n\nvar _basePosition = /*@__PURE__*/new Vector3();\n\nvar _skinIndex = /*@__PURE__*/new Vector4();\n\nvar _skinWeight = /*@__PURE__*/new Vector4();\n\nvar _vector$5 = /*@__PURE__*/new Vector3();\n\nvar _matrix = /*@__PURE__*/new Matrix4();\n\nvar SkinnedMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(SkinnedMesh, _Mesh);\n\n  var _super43 = _createSuper(SkinnedMesh);\n\n  function SkinnedMesh(geometry, material) {\n    var _this34;\n\n    _classCallCheck(this, SkinnedMesh);\n\n    _this34 = _super43.call(this, geometry, material);\n    _this34.isSkinnedMesh = true;\n    _this34.type = 'SkinnedMesh';\n    _this34.bindMode = 'attached';\n    _this34.bindMatrix = new Matrix4();\n    _this34.bindMatrixInverse = new Matrix4();\n    return _this34;\n  }\n\n  _createClass(SkinnedMesh, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(SkinnedMesh.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.bindMode = source.bindMode;\n      this.bindMatrix.copy(source.bindMatrix);\n      this.bindMatrixInverse.copy(source.bindMatrixInverse);\n      this.skeleton = source.skeleton;\n      return this;\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.copy(bindMatrix).invert();\n    }\n  }, {\n    key: \"pose\",\n    value: function pose() {\n      this.skeleton.pose();\n    }\n  }, {\n    key: \"normalizeSkinWeights\",\n    value: function normalizeSkinWeights() {\n      var vector = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0, l = skinWeight.count; i < l; i++) {\n        vector.fromBufferAttribute(skinWeight, i);\n        var scale = 1.0 / vector.manhattanLength();\n\n        if (scale !== Infinity) {\n          vector.multiplyScalar(scale);\n        } else {\n          vector.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n      }\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(SkinnedMesh.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.copy(this.matrixWorld).invert();\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.copy(this.bindMatrix).invert();\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    }\n  }, {\n    key: \"boneTransform\",\n    value: function boneTransform(index, target) {\n      var skeleton = this.skeleton;\n      var geometry = this.geometry;\n\n      _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n      _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n      _basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n      target.set(0, 0, 0);\n\n      for (var i = 0; i < 4; i++) {\n        var weight = _skinWeight.getComponent(i);\n\n        if (weight !== 0) {\n          var boneIndex = _skinIndex.getComponent(i);\n\n          _matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n          target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n        }\n      }\n\n      return target.applyMatrix4(this.bindMatrixInverse);\n    }\n  }]);\n\n  return SkinnedMesh;\n}(Mesh);\n\nvar Bone = /*#__PURE__*/function (_Object3D8) {\n  _inherits(Bone, _Object3D8);\n\n  var _super44 = _createSuper(Bone);\n\n  function Bone() {\n    var _this35;\n\n    _classCallCheck(this, Bone);\n\n    _this35 = _super44.call(this);\n    _this35.isBone = true;\n    _this35.type = 'Bone';\n    return _this35;\n  }\n\n  return Bone;\n}(Object3D);\n\nvar DataTexture = /*#__PURE__*/function (_Texture5) {\n  _inherits(DataTexture, _Texture5);\n\n  var _super45 = _createSuper(DataTexture);\n\n  function DataTexture() {\n    var _this36;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var format = arguments.length > 3 ? arguments[3] : undefined;\n    var type = arguments.length > 4 ? arguments[4] : undefined;\n    var mapping = arguments.length > 5 ? arguments[5] : undefined;\n    var wrapS = arguments.length > 6 ? arguments[6] : undefined;\n    var wrapT = arguments.length > 7 ? arguments[7] : undefined;\n    var magFilter = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : NearestFilter;\n    var minFilter = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : NearestFilter;\n    var anisotropy = arguments.length > 10 ? arguments[10] : undefined;\n    var encoding = arguments.length > 11 ? arguments[11] : undefined;\n\n    _classCallCheck(this, DataTexture);\n\n    _this36 = _super45.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    _this36.isDataTexture = true;\n    _this36.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    _this36.generateMipmaps = false;\n    _this36.flipY = false;\n    _this36.unpackAlignment = 1;\n    return _this36;\n  }\n\n  return DataTexture;\n}(Texture);\n\nvar _offsetMatrix = /*@__PURE__*/new Matrix4();\n\nvar _identityMatrix = /*@__PURE__*/new Matrix4();\n\nvar Skeleton = /*#__PURE__*/function () {\n  function Skeleton() {\n    var bones = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var boneInverses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Skeleton);\n\n    this.uuid = generateUUID();\n    this.bones = bones.slice(0);\n    this.boneInverses = boneInverses;\n    this.boneMatrices = null;\n    this.boneTexture = null;\n    this.boneTextureSize = 0;\n    this.frame = -1;\n    this.init();\n  }\n\n  _createClass(Skeleton, [{\n    key: \"init\",\n    value: function init() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      this.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n      if (boneInverses.length === 0) {\n        this.calculateInverses();\n      } else {\n        // handle special case\n        if (bones.length !== boneInverses.length) {\n          console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n          this.boneInverses = [];\n\n          for (var i = 0, il = this.bones.length; i < il; i++) {\n            this.boneInverses.push(new Matrix4());\n          }\n        }\n      }\n    }\n  }, {\n    key: \"calculateInverses\",\n    value: function calculateInverses() {\n      this.boneInverses.length = 0;\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.copy(this.bones[i].matrixWorld).invert();\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    }\n  }, {\n    key: \"pose\",\n    value: function pose() {\n      // recover the bind-time world matrices\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.copy(this.boneInverses[i]).invert();\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (var _i52 = 0, _il12 = this.bones.length; _i52 < _il12; _i52++) {\n        var _bone = this.bones[_i52];\n\n        if (_bone) {\n          if (_bone.parent && _bone.parent.isBone) {\n            _bone.matrix.copy(_bone.parent.matrixWorld).invert();\n\n            _bone.matrix.multiply(_bone.matrixWorld);\n          } else {\n            _bone.matrix.copy(_bone.matrixWorld);\n          }\n\n          _bone.matrix.decompose(_bone.position, _bone.quaternion, _bone.scale);\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      var boneMatrices = this.boneMatrices;\n      var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        // compute the offset between the current and the original transform\n        var matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n        _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n        _offsetMatrix.toArray(boneMatrices, i * 16);\n      }\n\n      if (boneTexture !== null) {\n        boneTexture.needsUpdate = true;\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Skeleton(this.bones, this.boneInverses);\n    }\n  }, {\n    key: \"computeBoneTexture\",\n    value: function computeBoneTexture() {\n      // layout (1 matrix = 4 pixels)\n      //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n      //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n      //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n      //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n      //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n      var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n      size = ceilPowerOfTwo(size);\n      size = Math.max(size, 4);\n      var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n      boneMatrices.set(this.boneMatrices); // copy current values\n\n      var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n      boneTexture.needsUpdate = true;\n      this.boneMatrices = boneMatrices;\n      this.boneTexture = boneTexture;\n      this.boneTextureSize = size;\n      return this;\n    }\n  }, {\n    key: \"getBoneByName\",\n    value: function getBoneByName(name) {\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone.name === name) {\n          return bone;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.boneTexture !== null) {\n        this.boneTexture.dispose();\n        this.boneTexture = null;\n      }\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, bones) {\n      this.uuid = json.uuid;\n\n      for (var i = 0, l = json.bones.length; i < l; i++) {\n        var uuid = json.bones[i];\n        var bone = bones[uuid];\n\n        if (bone === undefined) {\n          console.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n          bone = new Bone();\n        }\n\n        this.bones.push(bone);\n        this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n      }\n\n      this.init();\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Skeleton',\n          generator: 'Skeleton.toJSON'\n        },\n        bones: [],\n        boneInverses: []\n      };\n      data.uuid = this.uuid;\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n\n      for (var i = 0, l = bones.length; i < l; i++) {\n        var bone = bones[i];\n        data.bones.push(bone.uuid);\n        var boneInverse = boneInverses[i];\n        data.boneInverses.push(boneInverse.toArray());\n      }\n\n      return data;\n    }\n  }]);\n\n  return Skeleton;\n}();\n\nvar InstancedBufferAttribute = /*#__PURE__*/function (_BufferAttribute11) {\n  _inherits(InstancedBufferAttribute, _BufferAttribute11);\n\n  var _super46 = _createSuper(InstancedBufferAttribute);\n\n  function InstancedBufferAttribute(array, itemSize, normalized) {\n    var _this37;\n\n    var meshPerAttribute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, InstancedBufferAttribute);\n\n    if (typeof normalized === 'number') {\n      meshPerAttribute = normalized;\n      normalized = false;\n      console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n    }\n\n    _this37 = _super46.call(this, array, itemSize, normalized);\n    _this37.isInstancedBufferAttribute = true;\n    _this37.meshPerAttribute = meshPerAttribute;\n    return _this37;\n  }\n\n  _createClass(InstancedBufferAttribute, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(InstancedBufferAttribute.prototype), \"copy\", this).call(this, source);\n\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(InstancedBufferAttribute.prototype), \"toJSON\", this).call(this);\n\n      data.meshPerAttribute = this.meshPerAttribute;\n      data.isInstancedBufferAttribute = true;\n      return data;\n    }\n  }]);\n\n  return InstancedBufferAttribute;\n}(BufferAttribute);\n\nvar _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\nvar _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\nvar _instanceIntersects = [];\n\nvar _mesh = /*@__PURE__*/new Mesh();\n\nvar InstancedMesh = /*#__PURE__*/function (_Mesh2) {\n  _inherits(InstancedMesh, _Mesh2);\n\n  var _super47 = _createSuper(InstancedMesh);\n\n  function InstancedMesh(geometry, material, count) {\n    var _this38;\n\n    _classCallCheck(this, InstancedMesh);\n\n    _this38 = _super47.call(this, geometry, material);\n    _this38.isInstancedMesh = true;\n    _this38.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n    _this38.instanceColor = null;\n    _this38.count = count;\n    _this38.frustumCulled = false;\n    return _this38;\n  }\n\n  _createClass(InstancedMesh, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(InstancedMesh.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.instanceMatrix.copy(source.instanceMatrix);\n      if (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n      this.count = source.count;\n      return this;\n    }\n  }, {\n    key: \"getColorAt\",\n    value: function getColorAt(index, color) {\n      color.fromArray(this.instanceColor.array, index * 3);\n    }\n  }, {\n    key: \"getMatrixAt\",\n    value: function getMatrixAt(index, matrix) {\n      matrix.fromArray(this.instanceMatrix.array, index * 16);\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var matrixWorld = this.matrixWorld;\n      var raycastTimes = this.count;\n      _mesh.geometry = this.geometry;\n      _mesh.material = this.material;\n      if (_mesh.material === undefined) return;\n\n      for (var instanceId = 0; instanceId < raycastTimes; instanceId++) {\n        // calculate the world matrix for each instance\n        this.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n        _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n        _mesh.matrixWorld = _instanceWorldMatrix;\n\n        _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n        for (var i = 0, l = _instanceIntersects.length; i < l; i++) {\n          var intersect = _instanceIntersects[i];\n          intersect.instanceId = instanceId;\n          intersect.object = this;\n          intersects.push(intersect);\n        }\n\n        _instanceIntersects.length = 0;\n      }\n    }\n  }, {\n    key: \"setColorAt\",\n    value: function setColorAt(index, color) {\n      if (this.instanceColor === null) {\n        this.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\n      }\n\n      color.toArray(this.instanceColor.array, index * 3);\n    }\n  }, {\n    key: \"setMatrixAt\",\n    value: function setMatrixAt(index, matrix) {\n      matrix.toArray(this.instanceMatrix.array, index * 16);\n    }\n  }, {\n    key: \"updateMorphTargets\",\n    value: function updateMorphTargets() {}\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }]);\n\n  return InstancedMesh;\n}(Mesh);\n\nvar LineBasicMaterial = /*#__PURE__*/function (_Material6) {\n  _inherits(LineBasicMaterial, _Material6);\n\n  var _super48 = _createSuper(LineBasicMaterial);\n\n  function LineBasicMaterial(parameters) {\n    var _this39;\n\n    _classCallCheck(this, LineBasicMaterial);\n\n    _this39 = _super48.call(this);\n    _this39.isLineBasicMaterial = true;\n    _this39.type = 'LineBasicMaterial';\n    _this39.color = new Color(0xffffff);\n    _this39.linewidth = 1;\n    _this39.linecap = 'round';\n    _this39.linejoin = 'round';\n    _this39.fog = true;\n\n    _this39.setValues(parameters);\n\n    return _this39;\n  }\n\n  _createClass(LineBasicMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LineBasicMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.linewidth = source.linewidth;\n      this.linecap = source.linecap;\n      this.linejoin = source.linejoin;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return LineBasicMaterial;\n}(Material);\n\nvar _start$1 = /*@__PURE__*/new Vector3();\n\nvar _end$1 = /*@__PURE__*/new Vector3();\n\nvar _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\nvar _ray$1 = /*@__PURE__*/new Ray();\n\nvar _sphere$1 = /*@__PURE__*/new Sphere();\n\nvar Line = /*#__PURE__*/function (_Object3D9) {\n  _inherits(Line, _Object3D9);\n\n  var _super49 = _createSuper(Line);\n\n  function Line() {\n    var _this40;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new LineBasicMaterial();\n\n    _classCallCheck(this, Line);\n\n    _this40 = _super49.call(this);\n    _this40.isLine = true;\n    _this40.type = 'Line';\n    _this40.geometry = geometry;\n    _this40.material = material;\n\n    _this40.updateMorphTargets();\n\n    return _this40;\n  }\n\n  _createClass(Line, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Line.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    }\n  }, {\n    key: \"computeLineDistances\",\n    value: function computeLineDistances() {\n      var geometry = this.geometry; // we assume non-indexed geometry\n\n      if (geometry.index === null) {\n        var positionAttribute = geometry.attributes.position;\n        var lineDistances = [0];\n\n        for (var i = 1, l = positionAttribute.count; i < l; i++) {\n          _start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n          _end$1.fromBufferAttribute(positionAttribute, i);\n\n          lineDistances[i] = lineDistances[i - 1];\n          lineDistances[i] += _start$1.distanceTo(_end$1);\n        }\n\n        geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n      } else {\n        console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n      }\n\n      return this;\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Line.threshold;\n      var drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$1.copy(geometry.boundingSphere);\n\n      _sphere$1.applyMatrix4(matrixWorld);\n\n      _sphere$1.radius += threshold;\n      if (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n      _inverseMatrix$1.copy(matrixWorld).invert();\n\n      _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var vStart = new Vector3();\n      var vEnd = new Vector3();\n      var interSegment = new Vector3();\n      var interRay = new Vector3();\n      var step = this.isLineSegments ? 2 : 1;\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positionAttribute = attributes.position;\n\n      if (index !== null) {\n        var start = Math.max(0, drawRange.start);\n        var end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (var i = start, l = end - 1; i < l; i += step) {\n          var a = index.getX(i);\n          var b = index.getX(i + 1);\n          vStart.fromBufferAttribute(positionAttribute, a);\n          vEnd.fromBufferAttribute(positionAttribute, b);\n\n          var distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n          if (distSq > localThresholdSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      } else {\n        var _start6 = Math.max(0, drawRange.start);\n\n        var _end5 = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n        for (var _i53 = _start6, _l7 = _end5 - 1; _i53 < _l7; _i53 += step) {\n          vStart.fromBufferAttribute(positionAttribute, _i53);\n          vEnd.fromBufferAttribute(positionAttribute, _i53 + 1);\n\n          var _distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n          if (_distSq > localThresholdSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var _distance = raycaster.ray.origin.distanceTo(interRay);\n\n          if (_distance < raycaster.near || _distance > raycaster.far) continue;\n          intersects.push({\n            distance: _distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: _i53,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    }\n  }, {\n    key: \"updateMorphTargets\",\n    value: function updateMorphTargets() {\n      var geometry = this.geometry;\n      var morphAttributes = geometry.morphAttributes;\n      var keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        var morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n            var name = morphAttribute[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Line;\n}(Object3D);\n\nvar _start = /*@__PURE__*/new Vector3();\n\nvar _end = /*@__PURE__*/new Vector3();\n\nvar LineSegments = /*#__PURE__*/function (_Line) {\n  _inherits(LineSegments, _Line);\n\n  var _super50 = _createSuper(LineSegments);\n\n  function LineSegments(geometry, material) {\n    var _this41;\n\n    _classCallCheck(this, LineSegments);\n\n    _this41 = _super50.call(this, geometry, material);\n    _this41.isLineSegments = true;\n    _this41.type = 'LineSegments';\n    return _this41;\n  }\n\n  _createClass(LineSegments, [{\n    key: \"computeLineDistances\",\n    value: function computeLineDistances() {\n      var geometry = this.geometry; // we assume non-indexed geometry\n\n      if (geometry.index === null) {\n        var positionAttribute = geometry.attributes.position;\n        var lineDistances = [];\n\n        for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n          _start.fromBufferAttribute(positionAttribute, i);\n\n          _end.fromBufferAttribute(positionAttribute, i + 1);\n\n          lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n          lineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n        }\n\n        geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n      } else {\n        console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n      }\n\n      return this;\n    }\n  }]);\n\n  return LineSegments;\n}(Line);\n\nvar LineLoop = /*#__PURE__*/function (_Line2) {\n  _inherits(LineLoop, _Line2);\n\n  var _super51 = _createSuper(LineLoop);\n\n  function LineLoop(geometry, material) {\n    var _this42;\n\n    _classCallCheck(this, LineLoop);\n\n    _this42 = _super51.call(this, geometry, material);\n    _this42.isLineLoop = true;\n    _this42.type = 'LineLoop';\n    return _this42;\n  }\n\n  return LineLoop;\n}(Line);\n\nvar PointsMaterial = /*#__PURE__*/function (_Material7) {\n  _inherits(PointsMaterial, _Material7);\n\n  var _super52 = _createSuper(PointsMaterial);\n\n  function PointsMaterial(parameters) {\n    var _this43;\n\n    _classCallCheck(this, PointsMaterial);\n\n    _this43 = _super52.call(this);\n    _this43.isPointsMaterial = true;\n    _this43.type = 'PointsMaterial';\n    _this43.color = new Color(0xffffff);\n    _this43.map = null;\n    _this43.alphaMap = null;\n    _this43.size = 1;\n    _this43.sizeAttenuation = true;\n    _this43.fog = true;\n\n    _this43.setValues(parameters);\n\n    return _this43;\n  }\n\n  _createClass(PointsMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(PointsMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.alphaMap = source.alphaMap;\n      this.size = source.size;\n      this.sizeAttenuation = source.sizeAttenuation;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return PointsMaterial;\n}(Material);\n\nvar _inverseMatrix = /*@__PURE__*/new Matrix4();\n\nvar _ray = /*@__PURE__*/new Ray();\n\nvar _sphere = /*@__PURE__*/new Sphere();\n\nvar _position$2 = /*@__PURE__*/new Vector3();\n\nvar Points = /*#__PURE__*/function (_Object3D10) {\n  _inherits(Points, _Object3D10);\n\n  var _super53 = _createSuper(Points);\n\n  function Points() {\n    var _this44;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new PointsMaterial();\n\n    _classCallCheck(this, Points);\n\n    _this44 = _super53.call(this);\n    _this44.isPoints = true;\n    _this44.type = 'Points';\n    _this44.geometry = geometry;\n    _this44.material = material;\n\n    _this44.updateMorphTargets();\n\n    return _this44;\n  }\n\n  _createClass(Points, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Points.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold;\n      var drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere.copy(geometry.boundingSphere);\n\n      _sphere.applyMatrix4(matrixWorld);\n\n      _sphere.radius += threshold;\n      if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n      _inverseMatrix.copy(matrixWorld).invert();\n\n      _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positionAttribute = attributes.position;\n\n      if (index !== null) {\n        var start = Math.max(0, drawRange.start);\n        var end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (var i = start, il = end; i < il; i++) {\n          var a = index.getX(i);\n\n          _position$2.fromBufferAttribute(positionAttribute, a);\n\n          testPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n        }\n      } else {\n        var _start7 = Math.max(0, drawRange.start);\n\n        var _end6 = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n        for (var _i54 = _start7, l = _end6; _i54 < l; _i54++) {\n          _position$2.fromBufferAttribute(positionAttribute, _i54);\n\n          testPoint(_position$2, _i54, localThresholdSq, matrixWorld, raycaster, intersects, this);\n        }\n      }\n    }\n  }, {\n    key: \"updateMorphTargets\",\n    value: function updateMorphTargets() {\n      var geometry = this.geometry;\n      var morphAttributes = geometry.morphAttributes;\n      var keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        var morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n            var name = morphAttribute[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Points;\n}(Object3D);\n\nfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n  var rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n  if (rayPointDistanceSq < localThresholdSq) {\n    var intersectPoint = new Vector3();\n\n    _ray.closestPointToPoint(point, intersectPoint);\n\n    intersectPoint.applyMatrix4(matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n    if (distance < raycaster.near || distance > raycaster.far) return;\n    intersects.push({\n      distance: distance,\n      distanceToRay: Math.sqrt(rayPointDistanceSq),\n      point: intersectPoint,\n      index: index,\n      face: null,\n      object: object\n    });\n  }\n}\n\nvar VideoTexture = /*#__PURE__*/function (_Texture6) {\n  _inherits(VideoTexture, _Texture6);\n\n  var _super54 = _createSuper(VideoTexture);\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    var _this45;\n\n    _classCallCheck(this, VideoTexture);\n\n    _this45 = _super54.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    _this45.isVideoTexture = true;\n    _this45.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    _this45.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    _this45.generateMipmaps = false;\n\n    var scope = _assertThisInitialized(_this45);\n\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    if ('requestVideoFrameCallback' in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    return _this45;\n  }\n\n  _createClass(VideoTexture, [{\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.image).copy(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var video = this.image;\n      var hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n      if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  }]);\n\n  return VideoTexture;\n}(Texture);\n\nvar FramebufferTexture = /*#__PURE__*/function (_Texture7) {\n  _inherits(FramebufferTexture, _Texture7);\n\n  var _super55 = _createSuper(FramebufferTexture);\n\n  function FramebufferTexture(width, height, format) {\n    var _this46;\n\n    _classCallCheck(this, FramebufferTexture);\n\n    _this46 = _super55.call(this, {\n      width: width,\n      height: height\n    });\n    _this46.isFramebufferTexture = true;\n    _this46.format = format;\n    _this46.magFilter = NearestFilter;\n    _this46.minFilter = NearestFilter;\n    _this46.generateMipmaps = false;\n    _this46.needsUpdate = true;\n    return _this46;\n  }\n\n  return FramebufferTexture;\n}(Texture);\n\nvar CompressedTexture = /*#__PURE__*/function (_Texture8) {\n  _inherits(CompressedTexture, _Texture8);\n\n  var _super56 = _createSuper(CompressedTexture);\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    var _this47;\n\n    _classCallCheck(this, CompressedTexture);\n\n    _this47 = _super56.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    _this47.isCompressedTexture = true;\n    _this47.image = {\n      width: width,\n      height: height\n    };\n    _this47.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    _this47.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    _this47.generateMipmaps = false;\n    return _this47;\n  }\n\n  return CompressedTexture;\n}(Texture);\n\nvar CanvasTexture = /*#__PURE__*/function (_Texture9) {\n  _inherits(CanvasTexture, _Texture9);\n\n  var _super57 = _createSuper(CanvasTexture);\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    var _this48;\n\n    _classCallCheck(this, CanvasTexture);\n\n    _this48 = _super57.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    _this48.isCanvasTexture = true;\n    _this48.needsUpdate = true;\n    return _this48;\n  }\n\n  return CanvasTexture;\n}(Texture);\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n\nvar Curve = /*#__PURE__*/function () {\n  function Curve() {\n    _classCallCheck(this, Curve);\n\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  } // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n\n\n  _createClass(Curve, [{\n    key: \"getPoint\",\n    value: function getPoint() {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    } // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n\n  }, {\n    key: \"getPointAt\",\n    value: function getPointAt(u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t, optionalTarget);\n    } // Get sequence of points using getPoint( t )\n\n  }, {\n    key: \"getPoints\",\n    value: function getPoints() {\n      var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    } // Get sequence of points using getPointAt( u )\n\n  }, {\n    key: \"getSpacedPoints\",\n    value: function getSpacedPoints() {\n      var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    } // Get total curve arc length\n\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    } // Get list of cumulative segment lengths\n\n  }, {\n    key: \"getLengths\",\n    value: function getLengths() {\n      var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.arcLengthDivisions;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var sum = 0;\n      cache.push(0);\n\n      for (var p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    }\n  }, {\n    key: \"updateArcLengths\",\n    value: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.getLengths();\n    } // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n  }, {\n    key: \"getUtoTmapping\",\n    value: function getUtoTmapping(u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0;\n      var il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    } // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n\n  }, {\n    key: \"getTangent\",\n    value: function getTangent(t, optionalTarget) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n      tangent.copy(pt2).sub(pt1).normalize();\n      return tangent;\n    }\n  }, {\n    key: \"getTangentAt\",\n    value: function getTangentAt(u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t, optionalTarget);\n    }\n  }, {\n    key: \"computeFrenetFrames\",\n    value: function computeFrenetFrames(segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n      for (var i = 0; i <= segments; i++) {\n        var u = i / segments;\n        tangents[i] = this.getTangentAt(u, new Vector3());\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (var _i55 = 1; _i55 <= segments; _i55++) {\n        normals[_i55] = normals[_i55 - 1].clone();\n        binormals[_i55] = binormals[_i55 - 1].clone();\n        vec.crossVectors(tangents[_i55 - 1], tangents[_i55]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          var theta = Math.acos(clamp(tangents[_i55 - 1].dot(tangents[_i55]), -1, 1)); // clamp for floating pt errors\n\n          normals[_i55].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[_i55].crossVectors(tangents[_i55], normals[_i55]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        var _theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\n        _theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          _theta = -_theta;\n        }\n\n        for (var _i56 = 1; _i56 <= segments; _i56++) {\n          // twist a little...\n          normals[_i56].applyMatrix4(mat.makeRotationAxis(tangents[_i56], _theta * _i56));\n\n          binormals[_i56].crossVectors(tangents[_i56], normals[_i56]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.arcLengthDivisions = source.arcLengthDivisions;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Curve',\n          generator: 'Curve.toJSON'\n        }\n      };\n      data.arcLengthDivisions = this.arcLengthDivisions;\n      data.type = this.type;\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      this.arcLengthDivisions = json.arcLengthDivisions;\n      return this;\n    }\n  }]);\n\n  return Curve;\n}();\n\nvar EllipseCurve = /*#__PURE__*/function (_Curve) {\n  _inherits(EllipseCurve, _Curve);\n\n  var _super58 = _createSuper(EllipseCurve);\n\n  function EllipseCurve() {\n    var _this49;\n\n    var aX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var aY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var xRadius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var yRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var aStartAngle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var aEndAngle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n    var aClockwise = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var aRotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n\n    _classCallCheck(this, EllipseCurve);\n\n    _this49 = _super58.call(this);\n    _this49.isEllipseCurve = true;\n    _this49.type = 'EllipseCurve';\n    _this49.aX = aX;\n    _this49.aY = aY;\n    _this49.xRadius = xRadius;\n    _this49.yRadius = yRadius;\n    _this49.aStartAngle = aStartAngle;\n    _this49.aEndAngle = aEndAngle;\n    _this49.aClockwise = aClockwise;\n    _this49.aRotation = aRotation;\n    return _this49;\n  }\n\n  _createClass(EllipseCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector2();\n      var twoPi = Math.PI * 2;\n      var deltaAngle = this.aEndAngle - this.aStartAngle;\n      var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n      while (deltaAngle < 0) {\n        deltaAngle += twoPi;\n      }\n\n      while (deltaAngle > twoPi) {\n        deltaAngle -= twoPi;\n      }\n\n      if (deltaAngle < Number.EPSILON) {\n        if (samePoints) {\n          deltaAngle = 0;\n        } else {\n          deltaAngle = twoPi;\n        }\n      }\n\n      if (this.aClockwise === true && !samePoints) {\n        if (deltaAngle === twoPi) {\n          deltaAngle = -twoPi;\n        } else {\n          deltaAngle = deltaAngle - twoPi;\n        }\n      }\n\n      var angle = this.aStartAngle + t * deltaAngle;\n      var x = this.aX + this.xRadius * Math.cos(angle);\n      var y = this.aY + this.yRadius * Math.sin(angle);\n\n      if (this.aRotation !== 0) {\n        var cos = Math.cos(this.aRotation);\n        var sin = Math.sin(this.aRotation);\n        var tx = x - this.aX;\n        var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n        x = tx * cos - ty * sin + this.aX;\n        y = tx * sin + ty * cos + this.aY;\n      }\n\n      return point.set(x, y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(EllipseCurve.prototype), \"copy\", this).call(this, source);\n\n      this.aX = source.aX;\n      this.aY = source.aY;\n      this.xRadius = source.xRadius;\n      this.yRadius = source.yRadius;\n      this.aStartAngle = source.aStartAngle;\n      this.aEndAngle = source.aEndAngle;\n      this.aClockwise = source.aClockwise;\n      this.aRotation = source.aRotation;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(EllipseCurve.prototype), \"toJSON\", this).call(this);\n\n      data.aX = this.aX;\n      data.aY = this.aY;\n      data.xRadius = this.xRadius;\n      data.yRadius = this.yRadius;\n      data.aStartAngle = this.aStartAngle;\n      data.aEndAngle = this.aEndAngle;\n      data.aClockwise = this.aClockwise;\n      data.aRotation = this.aRotation;\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(EllipseCurve.prototype), \"fromJSON\", this).call(this, json);\n\n      this.aX = json.aX;\n      this.aY = json.aY;\n      this.xRadius = json.xRadius;\n      this.yRadius = json.yRadius;\n      this.aStartAngle = json.aStartAngle;\n      this.aEndAngle = json.aEndAngle;\n      this.aClockwise = json.aClockwise;\n      this.aRotation = json.aRotation;\n      return this;\n    }\n  }]);\n\n  return EllipseCurve;\n}(Curve);\n\nvar ArcCurve = /*#__PURE__*/function (_EllipseCurve) {\n  _inherits(ArcCurve, _EllipseCurve);\n\n  var _super59 = _createSuper(ArcCurve);\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    var _this50;\n\n    _classCallCheck(this, ArcCurve);\n\n    _this50 = _super59.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    _this50.isArcCurve = true;\n    _this50.type = 'ArcCurve';\n    return _this50;\n  }\n\n  return ArcCurve;\n}(EllipseCurve);\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\n\nfunction CubicPoly() {\n  var c0 = 0,\n      c1 = 0,\n      c2 = 0,\n      c3 = 0;\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n\n  function init(x0, x1, t0, t1) {\n    c0 = x0;\n    c1 = t0;\n    c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n\n  return {\n    initCatmullRom: function initCatmullRom(x0, x1, x2, x3, tension) {\n      init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    },\n    initNonuniformCatmullRom: function initNonuniformCatmullRom(x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n      t1 *= dt1;\n      t2 *= dt1;\n      init(x1, x2, t1, t2);\n    },\n    calc: function calc(t) {\n      var t2 = t * t;\n      var t3 = t2 * t;\n      return c0 + c1 * t + c2 * t2 + c3 * t3;\n    }\n  };\n} //\n\n\nvar tmp = /*@__PURE__*/new Vector3();\nvar px = /*@__PURE__*/new CubicPoly();\nvar py = /*@__PURE__*/new CubicPoly();\nvar pz = /*@__PURE__*/new CubicPoly();\n\nvar CatmullRomCurve3 = /*#__PURE__*/function (_Curve2) {\n  _inherits(CatmullRomCurve3, _Curve2);\n\n  var _super60 = _createSuper(CatmullRomCurve3);\n\n  function CatmullRomCurve3() {\n    var _this51;\n\n    var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var closed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var curveType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'centripetal';\n    var tension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n\n    _classCallCheck(this, CatmullRomCurve3);\n\n    _this51 = _super60.call(this);\n    _this51.isCatmullRomCurve3 = true;\n    _this51.type = 'CatmullRomCurve3';\n    _this51.points = points;\n    _this51.closed = closed;\n    _this51.curveType = curveType;\n    _this51.tension = tension;\n    return _this51;\n  }\n\n  _createClass(CatmullRomCurve3, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var points = this.points;\n      var l = points.length;\n      var p = (l - (this.closed ? 0 : 1)) * t;\n      var intPoint = Math.floor(p);\n      var weight = p - intPoint;\n\n      if (this.closed) {\n        intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n      } else if (weight === 0 && intPoint === l - 1) {\n        intPoint = l - 2;\n        weight = 1;\n      }\n\n      var p0, p3; // 4 points (p1 & p2 defined below)\n\n      if (this.closed || intPoint > 0) {\n        p0 = points[(intPoint - 1) % l];\n      } else {\n        // extrapolate first point\n        tmp.subVectors(points[0], points[1]).add(points[0]);\n        p0 = tmp;\n      }\n\n      var p1 = points[intPoint % l];\n      var p2 = points[(intPoint + 1) % l];\n\n      if (this.closed || intPoint + 2 < l) {\n        p3 = points[(intPoint + 2) % l];\n      } else {\n        // extrapolate last point\n        tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n        p3 = tmp;\n      }\n\n      if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n        // init Centripetal / Chordal Catmull-Rom\n        var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n        var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n        var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n        var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n        if (dt1 < 1e-4) dt1 = 1.0;\n        if (dt0 < 1e-4) dt0 = dt1;\n        if (dt2 < 1e-4) dt2 = dt1;\n        px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n        py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n        pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n      } else if (this.curveType === 'catmullrom') {\n        px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n        py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n        pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n      }\n\n      point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"copy\", this).call(this, source);\n\n      this.points = [];\n\n      for (var i = 0, l = source.points.length; i < l; i++) {\n        var point = source.points[i];\n        this.points.push(point.clone());\n      }\n\n      this.closed = source.closed;\n      this.curveType = source.curveType;\n      this.tension = source.tension;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"toJSON\", this).call(this);\n\n      data.points = [];\n\n      for (var i = 0, l = this.points.length; i < l; i++) {\n        var point = this.points[i];\n        data.points.push(point.toArray());\n      }\n\n      data.closed = this.closed;\n      data.curveType = this.curveType;\n      data.tension = this.tension;\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n      this.points = [];\n\n      for (var i = 0, l = json.points.length; i < l; i++) {\n        var point = json.points[i];\n        this.points.push(new Vector3().fromArray(point));\n      }\n\n      this.closed = json.closed;\n      this.curveType = json.curveType;\n      this.tension = json.tension;\n      return this;\n    }\n  }]);\n\n  return CatmullRomCurve3;\n}(Curve);\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\n\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  var t2 = t * t;\n  var t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n} //\n\n\nfunction QuadraticBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * p;\n}\n\nfunction QuadraticBezierP1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n\nfunction QuadraticBezierP2(t, p) {\n  return t * t * p;\n}\n\nfunction QuadraticBezier(t, p0, p1, p2) {\n  return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n} //\n\n\nfunction CubicBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  var k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\nfunction CubicBezier(t, p0, p1, p2, p3) {\n  return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n}\n\nvar CubicBezierCurve = /*#__PURE__*/function (_Curve3) {\n  _inherits(CubicBezierCurve, _Curve3);\n\n  var _super61 = _createSuper(CubicBezierCurve);\n\n  function CubicBezierCurve() {\n    var _this52;\n\n    var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n    var v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector2();\n\n    _classCallCheck(this, CubicBezierCurve);\n\n    _this52 = _super61.call(this);\n    _this52.isCubicBezierCurve = true;\n    _this52.type = 'CubicBezierCurve';\n    _this52.v0 = v0;\n    _this52.v1 = v1;\n    _this52.v2 = v2;\n    _this52.v3 = v3;\n    return _this52;\n  }\n\n  _createClass(CubicBezierCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var point = optionalTarget;\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2,\n          v3 = this.v3;\n      point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(CubicBezierCurve.prototype), \"copy\", this).call(this, source);\n\n      this.v0.copy(source.v0);\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      this.v3.copy(source.v3);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(CubicBezierCurve.prototype), \"toJSON\", this).call(this);\n\n      data.v0 = this.v0.toArray();\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      data.v3 = this.v3.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(CubicBezierCurve.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v0.fromArray(json.v0);\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      this.v3.fromArray(json.v3);\n      return this;\n    }\n  }]);\n\n  return CubicBezierCurve;\n}(Curve);\n\nvar CubicBezierCurve3 = /*#__PURE__*/function (_Curve4) {\n  _inherits(CubicBezierCurve3, _Curve4);\n\n  var _super62 = _createSuper(CubicBezierCurve3);\n\n  function CubicBezierCurve3() {\n    var _this53;\n\n    var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    var v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector3();\n\n    _classCallCheck(this, CubicBezierCurve3);\n\n    _this53 = _super62.call(this);\n    _this53.isCubicBezierCurve3 = true;\n    _this53.type = 'CubicBezierCurve3';\n    _this53.v0 = v0;\n    _this53.v1 = v1;\n    _this53.v2 = v2;\n    _this53.v3 = v3;\n    return _this53;\n  }\n\n  _createClass(CubicBezierCurve3, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2,\n          v3 = this.v3;\n      point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"copy\", this).call(this, source);\n\n      this.v0.copy(source.v0);\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      this.v3.copy(source.v3);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"toJSON\", this).call(this);\n\n      data.v0 = this.v0.toArray();\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      data.v3 = this.v3.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v0.fromArray(json.v0);\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      this.v3.fromArray(json.v3);\n      return this;\n    }\n  }]);\n\n  return CubicBezierCurve3;\n}(Curve);\n\nvar LineCurve = /*#__PURE__*/function (_Curve5) {\n  _inherits(LineCurve, _Curve5);\n\n  var _super63 = _createSuper(LineCurve);\n\n  function LineCurve() {\n    var _this54;\n\n    var v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    var v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n\n    _classCallCheck(this, LineCurve);\n\n    _this54 = _super63.call(this);\n    _this54.isLineCurve = true;\n    _this54.type = 'LineCurve';\n    _this54.v1 = v1;\n    _this54.v2 = v2;\n    return _this54;\n  }\n\n  _createClass(LineCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var point = optionalTarget;\n\n      if (t === 1) {\n        point.copy(this.v2);\n      } else {\n        point.copy(this.v2).sub(this.v1);\n        point.multiplyScalar(t).add(this.v1);\n      }\n\n      return point;\n    } // Line curve is linear, so we can overwrite default getPointAt\n\n  }, {\n    key: \"getPointAt\",\n    value: function getPointAt(u, optionalTarget) {\n      return this.getPoint(u, optionalTarget);\n    }\n  }, {\n    key: \"getTangent\",\n    value: function getTangent(t, optionalTarget) {\n      var tangent = optionalTarget || new Vector2();\n      tangent.copy(this.v2).sub(this.v1).normalize();\n      return tangent;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LineCurve.prototype), \"copy\", this).call(this, source);\n\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(LineCurve.prototype), \"toJSON\", this).call(this);\n\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(LineCurve.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      return this;\n    }\n  }]);\n\n  return LineCurve;\n}(Curve);\n\nvar LineCurve3 = /*#__PURE__*/function (_Curve6) {\n  _inherits(LineCurve3, _Curve6);\n\n  var _super64 = _createSuper(LineCurve3);\n\n  function LineCurve3() {\n    var _this55;\n\n    var v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n\n    _classCallCheck(this, LineCurve3);\n\n    _this55 = _super64.call(this);\n    _this55.isLineCurve3 = true;\n    _this55.type = 'LineCurve3';\n    _this55.v1 = v1;\n    _this55.v2 = v2;\n    return _this55;\n  }\n\n  _createClass(LineCurve3, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n\n      if (t === 1) {\n        point.copy(this.v2);\n      } else {\n        point.copy(this.v2).sub(this.v1);\n        point.multiplyScalar(t).add(this.v1);\n      }\n\n      return point;\n    } // Line curve is linear, so we can overwrite default getPointAt\n\n  }, {\n    key: \"getPointAt\",\n    value: function getPointAt(u, optionalTarget) {\n      return this.getPoint(u, optionalTarget);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LineCurve3.prototype), \"copy\", this).call(this, source);\n\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(LineCurve3.prototype), \"toJSON\", this).call(this);\n\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(LineCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      return this;\n    }\n  }]);\n\n  return LineCurve3;\n}(Curve);\n\nvar QuadraticBezierCurve = /*#__PURE__*/function (_Curve7) {\n  _inherits(QuadraticBezierCurve, _Curve7);\n\n  var _super65 = _createSuper(QuadraticBezierCurve);\n\n  function QuadraticBezierCurve() {\n    var _this56;\n\n    var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n\n    _classCallCheck(this, QuadraticBezierCurve);\n\n    _this56 = _super65.call(this);\n    _this56.isQuadraticBezierCurve = true;\n    _this56.type = 'QuadraticBezierCurve';\n    _this56.v0 = v0;\n    _this56.v1 = v1;\n    _this56.v2 = v2;\n    return _this56;\n  }\n\n  _createClass(QuadraticBezierCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var point = optionalTarget;\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2;\n      point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"copy\", this).call(this, source);\n\n      this.v0.copy(source.v0);\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"toJSON\", this).call(this);\n\n      data.v0 = this.v0.toArray();\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v0.fromArray(json.v0);\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      return this;\n    }\n  }]);\n\n  return QuadraticBezierCurve;\n}(Curve);\n\nvar QuadraticBezierCurve3 = /*#__PURE__*/function (_Curve8) {\n  _inherits(QuadraticBezierCurve3, _Curve8);\n\n  var _super66 = _createSuper(QuadraticBezierCurve3);\n\n  function QuadraticBezierCurve3() {\n    var _this57;\n\n    var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n\n    _classCallCheck(this, QuadraticBezierCurve3);\n\n    _this57 = _super66.call(this);\n    _this57.isQuadraticBezierCurve3 = true;\n    _this57.type = 'QuadraticBezierCurve3';\n    _this57.v0 = v0;\n    _this57.v1 = v1;\n    _this57.v2 = v2;\n    return _this57;\n  }\n\n  _createClass(QuadraticBezierCurve3, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2;\n      point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"copy\", this).call(this, source);\n\n      this.v0.copy(source.v0);\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"toJSON\", this).call(this);\n\n      data.v0 = this.v0.toArray();\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v0.fromArray(json.v0);\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      return this;\n    }\n  }]);\n\n  return QuadraticBezierCurve3;\n}(Curve);\n\nvar SplineCurve = /*#__PURE__*/function (_Curve9) {\n  _inherits(SplineCurve, _Curve9);\n\n  var _super67 = _createSuper(SplineCurve);\n\n  function SplineCurve() {\n    var _this58;\n\n    var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, SplineCurve);\n\n    _this58 = _super67.call(this);\n    _this58.isSplineCurve = true;\n    _this58.type = 'SplineCurve';\n    _this58.points = points;\n    return _this58;\n  }\n\n  _createClass(SplineCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var point = optionalTarget;\n      var points = this.points;\n      var p = (points.length - 1) * t;\n      var intPoint = Math.floor(p);\n      var weight = p - intPoint;\n      var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n      var p1 = points[intPoint];\n      var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n      var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n      point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n      return point;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(SplineCurve.prototype), \"copy\", this).call(this, source);\n\n      this.points = [];\n\n      for (var i = 0, l = source.points.length; i < l; i++) {\n        var point = source.points[i];\n        this.points.push(point.clone());\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(SplineCurve.prototype), \"toJSON\", this).call(this);\n\n      data.points = [];\n\n      for (var i = 0, l = this.points.length; i < l; i++) {\n        var point = this.points[i];\n        data.points.push(point.toArray());\n      }\n\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(SplineCurve.prototype), \"fromJSON\", this).call(this, json);\n\n      this.points = [];\n\n      for (var i = 0, l = json.points.length; i < l; i++) {\n        var point = json.points[i];\n        this.points.push(new Vector2().fromArray(point));\n      }\n\n      return this;\n    }\n  }]);\n\n  return SplineCurve;\n}(Curve);\n\nvar Curves = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcCurve: ArcCurve,\n  CatmullRomCurve3: CatmullRomCurve3,\n  CubicBezierCurve: CubicBezierCurve,\n  CubicBezierCurve3: CubicBezierCurve3,\n  EllipseCurve: EllipseCurve,\n  LineCurve: LineCurve,\n  LineCurve3: LineCurve3,\n  QuadraticBezierCurve: QuadraticBezierCurve,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  SplineCurve: SplineCurve\n});\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nvar CurvePath = /*#__PURE__*/function (_Curve10) {\n  _inherits(CurvePath, _Curve10);\n\n  var _super68 = _createSuper(CurvePath);\n\n  function CurvePath() {\n    var _this59;\n\n    _classCallCheck(this, CurvePath);\n\n    _this59 = _super68.call(this);\n    _this59.type = 'CurvePath';\n    _this59.curves = [];\n    _this59.autoClose = false; // Automatically closes the path\n\n    return _this59;\n  }\n\n  _createClass(CurvePath, [{\n    key: \"add\",\n    value: function add(curve) {\n      this.curves.push(curve);\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    } // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n\n  }, {\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u, optionalTarget);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    } // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    } // cacheLengths must be recalculated.\n\n  }, {\n    key: \"updateArcLengths\",\n    value: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    } // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n\n  }, {\n    key: \"getCurveLengths\",\n    value: function getCurveLengths() {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [];\n      var sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    }\n  }, {\n    key: \"getSpacedPoints\",\n    value: function getSpacedPoints() {\n      var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    }\n  }, {\n    key: \"getPoints\",\n    value: function getPoints() {\n      var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n      var points = [];\n      var last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve.isEllipseCurve ? divisions * 2 : curve.isLineCurve || curve.isLineCurve3 ? 1 : curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(CurvePath.prototype), \"copy\", this).call(this, source);\n\n      this.curves = [];\n\n      for (var i = 0, l = source.curves.length; i < l; i++) {\n        var curve = source.curves[i];\n        this.curves.push(curve.clone());\n      }\n\n      this.autoClose = source.autoClose;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(CurvePath.prototype), \"toJSON\", this).call(this);\n\n      data.autoClose = this.autoClose;\n      data.curves = [];\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        var curve = this.curves[i];\n        data.curves.push(curve.toJSON());\n      }\n\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(CurvePath.prototype), \"fromJSON\", this).call(this, json);\n\n      this.autoClose = json.autoClose;\n      this.curves = [];\n\n      for (var i = 0, l = json.curves.length; i < l; i++) {\n        var curve = json.curves[i];\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\n      }\n\n      return this;\n    }\n  }]);\n\n  return CurvePath;\n}(Curve);\n\nvar Path = /*#__PURE__*/function (_CurvePath) {\n  _inherits(Path, _CurvePath);\n\n  var _super69 = _createSuper(Path);\n\n  function Path(points) {\n    var _this60;\n\n    _classCallCheck(this, Path);\n\n    _this60 = _super69.call(this);\n    _this60.type = 'Path';\n    _this60.currentPoint = new Vector2();\n\n    if (points) {\n      _this60.setFromPoints(points);\n    }\n\n    return _this60;\n  }\n\n  _createClass(Path, [{\n    key: \"setFromPoints\",\n    value: function setFromPoints(points) {\n      this.moveTo(points[0].x, points[0].y);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        this.lineTo(points[i].x, points[i].y);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n      return this;\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n      return this;\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    }\n  }, {\n    key: \"splineThru\",\n    value: function splineThru(pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n      return this;\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    }\n  }, {\n    key: \"absarc\",\n    value: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n      return this;\n    }\n  }, {\n    key: \"absellipse\",\n    value: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(Path.prototype), \"copy\", this).call(this, source);\n\n      this.currentPoint.copy(source.currentPoint);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(Path.prototype), \"toJSON\", this).call(this);\n\n      data.currentPoint = this.currentPoint.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(Path.prototype), \"fromJSON\", this).call(this, json);\n\n      this.currentPoint.fromArray(json.currentPoint);\n      return this;\n    }\n  }]);\n\n  return Path;\n}(CurvePath);\n\nvar LatheGeometry = /*#__PURE__*/function (_BufferGeometry3) {\n  _inherits(LatheGeometry, _BufferGeometry3);\n\n  var _super70 = _createSuper(LatheGeometry);\n\n  function LatheGeometry() {\n    var _this61;\n\n    var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)];\n    var segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    var phiStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var phiLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n\n    _classCallCheck(this, LatheGeometry);\n\n    _this61 = _super70.call(this);\n    _this61.type = 'LatheGeometry';\n    _this61.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var uvs = [];\n    var initNormals = [];\n    var normals = []; // helper variables\n\n    var inverseSegments = 1.0 / segments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var normal = new Vector3();\n    var curNormal = new Vector3();\n    var prevNormal = new Vector3();\n    var dx = 0;\n    var dy = 0; // pre-compute normals for initial \"meridian\"\n\n    for (var j = 0; j <= points.length - 1; j++) {\n      switch (j) {\n        case 0:\n          // special handling for 1st vertex on path\n          dx = points[j + 1].x - points[j].x;\n          dy = points[j + 1].y - points[j].y;\n          normal.x = dy * 1.0;\n          normal.y = -dx;\n          normal.z = dy * 0.0;\n          prevNormal.copy(normal);\n          normal.normalize();\n          initNormals.push(normal.x, normal.y, normal.z);\n          break;\n\n        case points.length - 1:\n          // special handling for last Vertex on path\n          initNormals.push(prevNormal.x, prevNormal.y, prevNormal.z);\n          break;\n\n        default:\n          // default handling for all vertices in between\n          dx = points[j + 1].x - points[j].x;\n          dy = points[j + 1].y - points[j].y;\n          normal.x = dy * 1.0;\n          normal.y = -dx;\n          normal.z = dy * 0.0;\n          curNormal.copy(normal);\n          normal.x += prevNormal.x;\n          normal.y += prevNormal.y;\n          normal.z += prevNormal.z;\n          normal.normalize();\n          initNormals.push(normal.x, normal.y, normal.z);\n          prevNormal.copy(curNormal);\n      }\n    } // generate vertices, uvs and normals\n\n\n    for (var i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (var _j5 = 0; _j5 <= points.length - 1; _j5++) {\n        // vertex\n        vertex.x = points[_j5].x * sin;\n        vertex.y = points[_j5].y;\n        vertex.z = points[_j5].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = _j5 / (points.length - 1);\n        uvs.push(uv.x, uv.y); // normal\n\n        var x = initNormals[3 * _j5 + 0] * sin;\n        var y = initNormals[3 * _j5 + 1];\n        var z = initNormals[3 * _j5 + 0] * cos;\n        normals.push(x, y, z);\n      }\n    } // indices\n\n\n    for (var _i57 = 0; _i57 < segments; _i57++) {\n      for (var _j6 = 0; _j6 < points.length - 1; _j6++) {\n        var base = _j6 + _i57 * points.length;\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(c, d, b);\n      }\n    } // build geometry\n\n\n    _this61.setIndex(indices);\n\n    _this61.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this61.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    _this61.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    return _this61;\n  }\n\n  _createClass(LatheGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n    }\n  }]);\n\n  return LatheGeometry;\n}(BufferGeometry);\n\nvar CapsuleGeometry = /*#__PURE__*/function (_LatheGeometry) {\n  _inherits(CapsuleGeometry, _LatheGeometry);\n\n  var _super71 = _createSuper(CapsuleGeometry);\n\n  function CapsuleGeometry() {\n    var _this62;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var capSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n    var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n\n    _classCallCheck(this, CapsuleGeometry);\n\n    var path = new Path();\n    path.absarc(0, -length / 2, radius, Math.PI * 1.5, 0);\n    path.absarc(0, length / 2, radius, 0, Math.PI * 0.5);\n    _this62 = _super71.call(this, path.getPoints(capSegments), radialSegments);\n    _this62.type = 'CapsuleGeometry';\n    _this62.parameters = {\n      radius: radius,\n      height: length,\n      capSegments: capSegments,\n      radialSegments: radialSegments\n    };\n    return _this62;\n  }\n\n  _createClass(CapsuleGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new CapsuleGeometry(data.radius, data.length, data.capSegments, data.radialSegments);\n    }\n  }]);\n\n  return CapsuleGeometry;\n}(LatheGeometry);\n\nvar CircleGeometry = /*#__PURE__*/function (_BufferGeometry4) {\n  _inherits(CircleGeometry, _BufferGeometry4);\n\n  var _super72 = _createSuper(CircleGeometry);\n\n  function CircleGeometry() {\n    var _this63;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    var thetaStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var thetaLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n\n    _classCallCheck(this, CircleGeometry);\n\n    _this63 = _super72.call(this);\n    _this63.type = 'CircleGeometry';\n    _this63.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    segments = Math.max(3, segments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var vertex = new Vector3();\n    var uv = new Vector2(); // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (var s = 0, i = 3; s <= segments; s++, i += 3) {\n      var segment = thetaStart + s / segments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // indices\n\n\n    for (var _i58 = 1; _i58 <= segments; _i58++) {\n      indices.push(_i58, _i58 + 1, 0);\n    } // build geometry\n\n\n    _this63.setIndex(indices);\n\n    _this63.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this63.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this63.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this63;\n  }\n\n  _createClass(CircleGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n    }\n  }]);\n\n  return CircleGeometry;\n}(BufferGeometry);\n\nvar CylinderGeometry = /*#__PURE__*/function (_BufferGeometry5) {\n  _inherits(CylinderGeometry, _BufferGeometry5);\n\n  var _super73 = _createSuper(CylinderGeometry);\n\n  function CylinderGeometry() {\n    var _this64;\n\n    var radiusTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var radiusBottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    var heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var openEnded = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var thetaStart = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    var thetaLength = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : Math.PI * 2;\n\n    _classCallCheck(this, CylinderGeometry);\n\n    _this64 = _super73.call(this);\n    _this64.type = 'CylinderGeometry';\n    _this64.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n\n    var scope = _assertThisInitialized(_this64);\n\n    radialSegments = Math.floor(radialSegments);\n    heightSegments = Math.floor(heightSegments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var index = 0;\n    var indexArray = [];\n    var halfHeight = height / 2;\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    } // build geometry\n\n\n    _this64.setIndex(indices);\n\n    _this64.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this64.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this64.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      var normal = new Vector3();\n      var vertex = new Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (var y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (var x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var sinTheta = Math.sin(theta);\n          var cosTheta = Math.cos(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index++);\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (var _x4 = 0; _x4 < radialSegments; _x4++) {\n        for (var _y2 = 0; _y2 < heightSegments; _y2++) {\n          // we use the index array to access the correct indices\n          var a = indexArray[_y2][_x4];\n          var b = indexArray[_y2 + 1][_x4];\n          var c = indexArray[_y2 + 1][_x4 + 1];\n          var d = indexArray[_y2][_x4 + 1]; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // update group counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      // save the index of the first center vertex\n      var centerIndexStart = index;\n      var uv = new Vector2();\n      var vertex = new Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (var x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.push(0, halfHeight * sign, 0); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uvs.push(0.5, 0.5); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      var centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (var _x5 = 0; _x5 <= radialSegments; _x5++) {\n        var u = _x5 / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (var _x6 = 0; _x6 < radialSegments; _x6++) {\n        var c = centerIndexStart + _x6;\n        var i = centerIndexEnd + _x6;\n\n        if (top === true) {\n          // face top\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    return _this64;\n  }\n\n  _createClass(CylinderGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n    }\n  }]);\n\n  return CylinderGeometry;\n}(BufferGeometry);\n\nvar ConeGeometry = /*#__PURE__*/function (_CylinderGeometry) {\n  _inherits(ConeGeometry, _CylinderGeometry);\n\n  var _super74 = _createSuper(ConeGeometry);\n\n  function ConeGeometry() {\n    var _this65;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    var heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var openEnded = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    var thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    var thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI * 2;\n\n    _classCallCheck(this, ConeGeometry);\n\n    _this65 = _super74.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    _this65.type = 'ConeGeometry';\n    _this65.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    return _this65;\n  }\n\n  _createClass(ConeGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n    }\n  }]);\n\n  return ConeGeometry;\n}(CylinderGeometry);\n\nvar PolyhedronGeometry = /*#__PURE__*/function (_BufferGeometry6) {\n  _inherits(PolyhedronGeometry, _BufferGeometry6);\n\n  var _super75 = _createSuper(PolyhedronGeometry);\n\n  function PolyhedronGeometry() {\n    var _this66;\n\n    var vertices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var indices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var detail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, PolyhedronGeometry);\n\n    _this66 = _super75.call(this);\n    _this66.type = 'PolyhedronGeometry';\n    _this66.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    }; // default buffer data\n\n    var vertexBuffer = [];\n    var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n    subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n    applyRadius(radius); // finally, create the uv data\n\n    generateUVs(); // build non-indexed geometry\n\n    _this66.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\n    _this66.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\n    _this66.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      _this66.computeVertexNormals(); // flat normals\n\n    } else {\n      _this66.normalizeNormals(); // smooth normals\n\n    } // helper functions\n\n\n    function subdivide(detail) {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n      for (var i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      var cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n      var v = []; // construct all of the vertices for this subdivision\n\n      for (var i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = a.clone().lerp(c, i / cols);\n        var bj = b.clone().lerp(c, i / cols);\n        var rows = cols - i;\n\n        for (var j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      } // construct all of the faces\n\n\n      for (var _i59 = 0; _i59 < cols; _i59++) {\n        for (var _j7 = 0; _j7 < 2 * (cols - _i59) - 1; _j7++) {\n          var k = Math.floor(_j7 / 2);\n\n          if (_j7 % 2 === 0) {\n            pushVertex(v[_i59][k + 1]);\n            pushVertex(v[_i59 + 1][k]);\n            pushVertex(v[_i59][k]);\n          } else {\n            pushVertex(v[_i59][k + 1]);\n            pushVertex(v[_i59 + 1][k + 1]);\n            pushVertex(v[_i59 + 1][k]);\n          }\n        }\n      }\n    }\n\n    function applyRadius(radius) {\n      var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      var vertex = new Vector3();\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        var v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (var i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        var x0 = uvBuffer[i + 0];\n        var x1 = uvBuffer[i + 2];\n        var x2 = uvBuffer[i + 4];\n        var max = Math.max(x0, x1, x2);\n        var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      var stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3();\n      var centroid = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        var azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n\n    return _this66;\n  }\n\n  _createClass(PolyhedronGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n    }\n  }]);\n\n  return PolyhedronGeometry;\n}(BufferGeometry);\n\nvar DodecahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n  _inherits(DodecahedronGeometry, _PolyhedronGeometry);\n\n  var _super76 = _createSuper(DodecahedronGeometry);\n\n  function DodecahedronGeometry() {\n    var _this67;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, DodecahedronGeometry);\n\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    _this67 = _super76.call(this, vertices, indices, radius, detail);\n    _this67.type = 'DodecahedronGeometry';\n    _this67.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    return _this67;\n  }\n\n  _createClass(DodecahedronGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new DodecahedronGeometry(data.radius, data.detail);\n    }\n  }]);\n\n  return DodecahedronGeometry;\n}(PolyhedronGeometry);\n\nvar _v0 = /*@__PURE__*/new Vector3();\n\nvar _v1$1 = /*@__PURE__*/new Vector3();\n\nvar _normal = /*@__PURE__*/new Vector3();\n\nvar _triangle = /*@__PURE__*/new Triangle();\n\nvar EdgesGeometry = /*#__PURE__*/function (_BufferGeometry7) {\n  _inherits(EdgesGeometry, _BufferGeometry7);\n\n  var _super77 = _createSuper(EdgesGeometry);\n\n  function EdgesGeometry() {\n    var _this68;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var thresholdAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    _classCallCheck(this, EdgesGeometry);\n\n    _this68 = _super77.call(this);\n    _this68.type = 'EdgesGeometry';\n    _this68.parameters = {\n      geometry: geometry,\n      thresholdAngle: thresholdAngle\n    };\n\n    if (geometry !== null) {\n      var precisionPoints = 4;\n      var precision = Math.pow(10, precisionPoints);\n      var thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n      var indexAttr = geometry.getIndex();\n      var positionAttr = geometry.getAttribute('position');\n      var indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n      var indexArr = [0, 0, 0];\n      var vertKeys = ['a', 'b', 'c'];\n      var hashes = new Array(3);\n      var edgeData = {};\n      var vertices = [];\n\n      for (var i = 0; i < indexCount; i += 3) {\n        if (indexAttr) {\n          indexArr[0] = indexAttr.getX(i);\n          indexArr[1] = indexAttr.getX(i + 1);\n          indexArr[2] = indexAttr.getX(i + 2);\n        } else {\n          indexArr[0] = i;\n          indexArr[1] = i + 1;\n          indexArr[2] = i + 2;\n        }\n\n        var a = _triangle.a,\n            b = _triangle.b,\n            c = _triangle.c;\n        a.fromBufferAttribute(positionAttr, indexArr[0]);\n        b.fromBufferAttribute(positionAttr, indexArr[1]);\n        c.fromBufferAttribute(positionAttr, indexArr[2]);\n\n        _triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n        hashes[0] = \"\".concat(Math.round(a.x * precision), \",\").concat(Math.round(a.y * precision), \",\").concat(Math.round(a.z * precision));\n        hashes[1] = \"\".concat(Math.round(b.x * precision), \",\").concat(Math.round(b.y * precision), \",\").concat(Math.round(b.z * precision));\n        hashes[2] = \"\".concat(Math.round(c.x * precision), \",\").concat(Math.round(c.y * precision), \",\").concat(Math.round(c.z * precision)); // skip degenerate triangles\n\n        if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n          continue;\n        } // iterate over every edge\n\n\n        for (var j = 0; j < 3; j++) {\n          // get the first and next vertex making up the edge\n          var jNext = (j + 1) % 3;\n          var vecHash0 = hashes[j];\n          var vecHash1 = hashes[jNext];\n          var v0 = _triangle[vertKeys[j]];\n          var v1 = _triangle[vertKeys[jNext]];\n          var hash = \"\".concat(vecHash0, \"_\").concat(vecHash1);\n          var reverseHash = \"\".concat(vecHash1, \"_\").concat(vecHash0);\n\n          if (reverseHash in edgeData && edgeData[reverseHash]) {\n            // if we found a sibling edge add it into the vertex array if\n            // it meets the angle threshold and delete the edge from the map.\n            if (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n              vertices.push(v0.x, v0.y, v0.z);\n              vertices.push(v1.x, v1.y, v1.z);\n            }\n\n            edgeData[reverseHash] = null;\n          } else if (!(hash in edgeData)) {\n            // if we've already got an edge here then skip adding a new one\n            edgeData[hash] = {\n              index0: indexArr[j],\n              index1: indexArr[jNext],\n              normal: _normal.clone()\n            };\n          }\n        }\n      } // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n      for (var key in edgeData) {\n        if (edgeData[key]) {\n          var _edgeData$key = edgeData[key],\n              index0 = _edgeData$key.index0,\n              index1 = _edgeData$key.index1;\n\n          _v0.fromBufferAttribute(positionAttr, index0);\n\n          _v1$1.fromBufferAttribute(positionAttr, index1);\n\n          vertices.push(_v0.x, _v0.y, _v0.z);\n          vertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n        }\n      }\n\n      _this68.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    }\n\n    return _this68;\n  }\n\n  return EdgesGeometry;\n}(BufferGeometry);\n\nvar Shape = /*#__PURE__*/function (_Path) {\n  _inherits(Shape, _Path);\n\n  var _super78 = _createSuper(Shape);\n\n  function Shape(points) {\n    var _this69;\n\n    _classCallCheck(this, Shape);\n\n    _this69 = _super78.call(this, points);\n    _this69.uuid = generateUUID();\n    _this69.type = 'Shape';\n    _this69.holes = [];\n    return _this69;\n  }\n\n  _createClass(Shape, [{\n    key: \"getPointsHoles\",\n    value: function getPointsHoles(divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    } // get points of shape and holes (keypoints based on segments parameter)\n\n  }, {\n    key: \"extractPoints\",\n    value: function extractPoints(divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(Shape.prototype), \"copy\", this).call(this, source);\n\n      this.holes = [];\n\n      for (var i = 0, l = source.holes.length; i < l; i++) {\n        var hole = source.holes[i];\n        this.holes.push(hole.clone());\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(Shape.prototype), \"toJSON\", this).call(this);\n\n      data.uuid = this.uuid;\n      data.holes = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        var hole = this.holes[i];\n        data.holes.push(hole.toJSON());\n      }\n\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(Shape.prototype), \"fromJSON\", this).call(this, json);\n\n      this.uuid = json.uuid;\n      this.holes = [];\n\n      for (var i = 0, l = json.holes.length; i < l; i++) {\n        var hole = json.holes[i];\n        this.holes.push(new Path().fromJSON(hole));\n      }\n\n      return this;\n    }\n  }]);\n\n  return Shape;\n}(Path);\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\n\nvar Earcut = {\n  triangulate: function triangulate(data, holeIndices) {\n    var dim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    var outerNode = linkedList(data, 0, outerLen, dim, true);\n    var triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n    var minX, minY, maxX, maxY, x, y, invSize;\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n    if (data.length > 80 * dim) {\n      minX = maxX = data[0];\n      minY = maxY = data[1];\n\n      for (var i = dim; i < outerLen; i += dim) {\n        x = data[i];\n        y = data[i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n      } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n      invSize = Math.max(maxX - minX, maxY - minY);\n      invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n    return triangles;\n  }\n}; // create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList(data, start, end, dim, clockwise) {\n  var i, last;\n\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim) {\n      last = insertNode(i, data[i], data[i + 1], last);\n    }\n  } else {\n    for (i = end - dim; i >= start; i -= dim) {\n      last = insertNode(i, data[i], data[i + 1], last);\n    }\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n} // eliminate colinear or duplicate points\n\n\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  var p = start,\n      again;\n\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return; // interlink polygon nodes in z-order\n\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  var stop = ear,\n      prev,\n      next; // iterate through ears, slicing them one by one\n\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n      removeNode(ear); // skipping the next vertex leads to less sliver triangles\n\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n\n    ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\nfunction isEar(ear) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // now make sure we don't have other points inside the potential ear\n\n  var p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // triangle bbox; min & max are calculated like this for speed\n\n  var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n      minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n      maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n      maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n  var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n      maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n  var p = ear.prevZ,\n      n = ear.nextZ; // look for points inside the triangle in both directions\n\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n    if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  } // look for remaining points in decreasing z-order\n\n\n  while (p && p.z >= minZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  } // look for remaining points in increasing z-order\n\n\n  while (n && n.z <= maxZ) {\n    if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  return true;\n} // go through all polygon nodes and cure small local self-intersections\n\n\nfunction cureLocalIntersections(start, triangles, dim) {\n  var p = start;\n\n  do {\n    var a = p.prev,\n        b = p.next.next;\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim); // remove two nodes involved\n\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return filterPoints(p);\n} // try splitting polygon into two and triangulate them independently\n\n\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  var a = start;\n\n  do {\n    var b = a.next.next;\n\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next); // run earcut on each half\n\n        earcutLinked(a, triangles, dim, minX, minY, invSize);\n        earcutLinked(c, triangles, dim, minX, minY, invSize);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  var queue = [];\n  var i, len, start, end, list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX); // process holes from left to right\n\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n} // find a bridge between vertices that connects hole with an outer ring and link it\n\n\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n\n  if (outerNode) {\n    var b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n    filterPoints(outerNode, outerNode.next);\n    filterPoints(b, b.next);\n  }\n} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\nfunction findHoleBridge(hole, outerNode) {\n  var p = outerNode;\n  var hx = hole.x;\n  var hy = hole.y;\n  var qx = -Infinity,\n      m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n      if (x <= hx && x > qx) {\n        qx = x;\n\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n  if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  var stop = m,\n      mx = m.x,\n      my = m.y;\n  var tanMin = Infinity,\n      tan;\n  p = m;\n\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  } while (p !== stop);\n\n  return m;\n} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n} // interlink polygon nodes in z-order\n\n\nfunction indexCurve(start, minX, minY, invSize) {\n  var p = start;\n\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n} // Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\nfunction sortLinked(list) {\n  var i,\n      p,\n      q,\n      e,\n      tail,\n      numMerges,\n      pSize,\n      qSize,\n      inSize = 1;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) * invSize;\n  y = 32767 * (y - minY) * invSize;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n} // find the leftmost node of a polygon ring\n\n\nfunction getLeftmost(start) {\n  var p = start,\n      leftmost = start;\n\n  do {\n    if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n} // check if a point lies within a convex triangle\n\n\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n  equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n} // signed area of a triangle\n\n\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n} // check if two points are equal\n\n\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n} // check if two segments intersect\n\n\nfunction intersects(p1, q1, p2, q2) {\n  var o1 = sign(area(p1, q1, p2));\n  var o2 = sign(area(p1, q1, q2));\n  var o3 = sign(area(p2, q2, p1));\n  var o4 = sign(area(p2, q2, q1));\n  if (o1 !== o2 && o3 !== o4) return true; // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n  return false;\n} // for collinear points p, q, r, check if point q lies on segment pr\n\n\nfunction onSegment(p, q, r) {\n  return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n} // check if a polygon diagonal intersects any polygon segments\n\n\nfunction intersectsPolygon(a, b) {\n  var p = a;\n\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n} // check if a polygon diagonal is locally inside the polygon\n\n\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n} // check if the middle point of a polygon diagonal is inside the polygon\n\n\nfunction middleInside(a, b) {\n  var p = a,\n      inside = false;\n  var px = (a.x + b.x) / 2,\n      py = (a.y + b.y) / 2;\n\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\nfunction splitPolygon(a, b) {\n  var a2 = new Node(a.i, a.x, a.y),\n      b2 = new Node(b.i, b.x, b.y),\n      an = a.next,\n      bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\nfunction insertNode(i, x, y, last) {\n  var p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  // vertex index in coordinates array\n  this.i = i; // vertex coordinates\n\n  this.x = x;\n  this.y = y; // previous and next vertex nodes in a polygon ring\n\n  this.prev = null;\n  this.next = null; // z-order curve value\n\n  this.z = null; // previous and next nodes in z-order\n\n  this.prevZ = null;\n  this.nextZ = null; // indicates whether this is a steiner point\n\n  this.steiner = false;\n}\n\nfunction signedArea(data, start, end, dim) {\n  var sum = 0;\n\n  for (var i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n\n  return sum;\n}\n\nvar ShapeUtils = /*#__PURE__*/function () {\n  function ShapeUtils() {\n    _classCallCheck(this, ShapeUtils);\n  }\n\n  _createClass(ShapeUtils, null, [{\n    key: \"area\",\n    value: // calculate area of the contour polygon\n    function area(contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    }\n  }, {\n    key: \"isClockWise\",\n    value: function isClockWise(pts) {\n      return ShapeUtils.area(pts) < 0;\n    }\n  }, {\n    key: \"triangulateShape\",\n    value: function triangulateShape(contour, holes) {\n      var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n      var holeIndices = []; // array of hole indices\n\n      var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n      removeDupEndPts(contour);\n      addContour(vertices, contour); //\n\n      var holeIndex = contour.length;\n      holes.forEach(removeDupEndPts);\n\n      for (var i = 0; i < holes.length; i++) {\n        holeIndices.push(holeIndex);\n        holeIndex += holes[i].length;\n        addContour(vertices, holes[i]);\n      } //\n\n\n      var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n      for (var _i60 = 0; _i60 < triangles.length; _i60 += 3) {\n        faces.push(triangles.slice(_i60, _i60 + 3));\n      }\n\n      return faces;\n    }\n  }]);\n\n  return ShapeUtils;\n}();\n\nfunction removeDupEndPts(points) {\n  var l = points.length;\n\n  if (l > 2 && points[l - 1].equals(points[0])) {\n    points.pop();\n  }\n}\n\nfunction addContour(vertices, contour) {\n  for (var i = 0; i < contour.length; i++) {\n    vertices.push(contour[i].x);\n    vertices.push(contour[i].y);\n  }\n}\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nvar ExtrudeGeometry = /*#__PURE__*/function (_BufferGeometry8) {\n  _inherits(ExtrudeGeometry, _BufferGeometry8);\n\n  var _super79 = _createSuper(ExtrudeGeometry);\n\n  function ExtrudeGeometry() {\n    var _this70;\n\n    var shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ExtrudeGeometry);\n\n    _this70 = _super79.call(this);\n    _this70.type = 'ExtrudeGeometry';\n    _this70.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n\n    var scope = _assertThisInitialized(_this70);\n\n    var verticesArray = [];\n    var uvArray = [];\n\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      addShape(shape);\n    } // build geometry\n\n\n    _this70.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\n    _this70.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\n    _this70.computeVertexNormals(); // functions\n\n\n    function addShape(shape) {\n      var placeholder = []; // options\n\n      var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n      var steps = options.steps !== undefined ? options.steps : 1;\n      var depth = options.depth !== undefined ? options.depth : 1;\n      var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n      var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n      var bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n      var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n      var extrudePath = options.extrudePath;\n      var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n      if (options.amount !== undefined) {\n        console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n        depth = options.amount;\n      } //\n\n\n      var extrudePts,\n          extrudeByPath = false;\n      var splineTube, binormal, normal, position2;\n\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n        // SETUP TNB variables\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      } // Safeguards if bevels are not enabled\n\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n        bevelOffset = 0;\n      } // Variables initialization\n\n\n      var shapePoints = shape.extractPoints(curveSegments);\n      var vertices = shapePoints.shape;\n      var holes = shapePoints.holes;\n      var reverse = !ShapeUtils.isClockWise(vertices);\n\n      if (reverse) {\n        vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (var h = 0, hl = holes.length; h < hl; h++) {\n          var ahole = holes[h];\n\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(vertices, holes);\n      /* Vertices */\n\n      var contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (var _h = 0, _hl = holes.length; _h < _hl; _h++) {\n        var _ahole = holes[_h];\n        vertices = vertices.concat(_ahole);\n      }\n\n      function scalePt2(pt, vec, size) {\n        if (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n        return vec.clone().multiplyScalar(size).add(pt);\n      }\n\n      var vlen = vertices.length,\n          flen = faces.length; // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n        var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        var v_prev_x = inPt.x - inPrev.x,\n            v_prev_y = inPt.y - inPrev.y;\n        var v_next_x = inNext.x - inPt.x,\n            v_next_y = inNext.y - inPt.y;\n        var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n        var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n          // length of vectors for normalizing\n          var v_prev_len = Math.sqrt(v_prev_lensq);\n          var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n          var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n          var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n          var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n\n          var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n          var direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n\n      var contourMovements = [];\n\n      for (var _i61 = 0, il = contour.length, j = il - 1, k = _i61 + 1; _i61 < il; _i61++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n        contourMovements[_i61] = getBevelVec(contour[_i61], contour[j], contour[k]);\n      }\n\n      var holesMovements = [];\n      var oneHoleMovements,\n          verticesMovements = contourMovements.concat();\n\n      for (var _h2 = 0, _hl2 = holes.length; _h2 < _hl2; _h2++) {\n        var _ahole2 = holes[_h2];\n        oneHoleMovements = [];\n\n        for (var _i62 = 0, _il13 = _ahole2.length, _j8 = _il13 - 1, _k = _i62 + 1; _i62 < _il13; _i62++, _j8++, _k++) {\n          if (_j8 === _il13) _j8 = 0;\n          if (_k === _il13) _k = 0; //  (j)---(i)---(k)\n\n          oneHoleMovements[_i62] = getBevelVec(_ahole2[_i62], _ahole2[_j8], _ahole2[_k]);\n        }\n\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n      for (var b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n        var t = b / bevelSegments;\n        var z = bevelThickness * Math.cos(t * Math.PI / 2);\n\n        var _bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n        for (var _i63 = 0, _il14 = contour.length; _i63 < _il14; _i63++) {\n          var vert = scalePt2(contour[_i63], contourMovements[_i63], _bs);\n          v(vert.x, vert.y, -z);\n        } // expand holes\n\n\n        for (var _h3 = 0, _hl3 = holes.length; _h3 < _hl3; _h3++) {\n          var _ahole3 = holes[_h3];\n          oneHoleMovements = holesMovements[_h3];\n\n          for (var _i64 = 0, _il15 = _ahole3.length; _i64 < _il15; _i64++) {\n            var _vert = scalePt2(_ahole3[_i64], oneHoleMovements[_i64], _bs);\n\n            v(_vert.x, _vert.y, -z);\n          }\n        }\n      }\n\n      var bs = bevelSize + bevelOffset; // Back facing vertices\n\n      for (var _i65 = 0; _i65 < vlen; _i65++) {\n        var _vert2 = bevelEnabled ? scalePt2(vertices[_i65], verticesMovements[_i65], bs) : vertices[_i65];\n\n        if (!extrudeByPath) {\n          v(_vert2.x, _vert2.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n          normal.copy(splineTube.normals[0]).multiplyScalar(_vert2.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(_vert2.y);\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      } // Add stepped vertices...\n      // Including front facing vertices\n\n\n      for (var s = 1; s <= steps; s++) {\n        for (var _i66 = 0; _i66 < vlen; _i66++) {\n          var _vert3 = bevelEnabled ? scalePt2(vertices[_i66], verticesMovements[_i66], bs) : vertices[_i66];\n\n          if (!extrudeByPath) {\n            v(_vert3.x, _vert3.y, depth / steps * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n            normal.copy(splineTube.normals[s]).multiplyScalar(_vert3.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(_vert3.y);\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      } // Add bevel segments planes\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n      for (var _b5 = bevelSegments - 1; _b5 >= 0; _b5--) {\n        var _t = _b5 / bevelSegments;\n\n        var _z2 = bevelThickness * Math.cos(_t * Math.PI / 2);\n\n        var _bs2 = bevelSize * Math.sin(_t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n        for (var _i67 = 0, _il16 = contour.length; _i67 < _il16; _i67++) {\n          var _vert4 = scalePt2(contour[_i67], contourMovements[_i67], _bs2);\n\n          v(_vert4.x, _vert4.y, depth + _z2);\n        } // expand holes\n\n\n        for (var _h4 = 0, _hl4 = holes.length; _h4 < _hl4; _h4++) {\n          var _ahole4 = holes[_h4];\n          oneHoleMovements = holesMovements[_h4];\n\n          for (var _i68 = 0, _il17 = _ahole4.length; _i68 < _il17; _i68++) {\n            var _vert5 = scalePt2(_ahole4[_i68], oneHoleMovements[_i68], _bs2);\n\n            if (!extrudeByPath) {\n              v(_vert5.x, _vert5.y, depth + _z2);\n            } else {\n              v(_vert5.x, _vert5.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + _z2);\n            }\n          }\n        }\n      }\n      /* Faces */\n      // Top and bottom faces\n\n\n      buildLidFaces(); // Sides faces\n\n      buildSideFaces(); /////  Internal functions\n\n      function buildLidFaces() {\n        var start = verticesArray.length / 3;\n\n        if (bevelEnabled) {\n          var layer = 0; // steps + 1\n\n          var offset = vlen * layer; // Bottom faces\n\n          for (var _i69 = 0; _i69 < flen; _i69++) {\n            var face = faces[_i69];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer; // Top faces\n\n          for (var _i70 = 0; _i70 < flen; _i70++) {\n            var _face = faces[_i70];\n            f3(_face[0] + offset, _face[1] + offset, _face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n          for (var _i71 = 0; _i71 < flen; _i71++) {\n            var _face2 = faces[_i71];\n            f3(_face2[2], _face2[1], _face2[0]);\n          } // Top faces\n\n\n          for (var _i72 = 0; _i72 < flen; _i72++) {\n            var _face3 = faces[_i72];\n            f3(_face3[0] + vlen * steps, _face3[1] + vlen * steps, _face3[2] + vlen * steps);\n          }\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      } // Create faces for the z-sides of the shape\n\n\n      function buildSideFaces() {\n        var start = verticesArray.length / 3;\n        var layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n\n        for (var _h5 = 0, _hl5 = holes.length; _h5 < _hl5; _h5++) {\n          var _ahole5 = holes[_h5];\n          sidewalls(_ahole5, layeroffset); //, true\n\n          layeroffset += _ahole5.length;\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n\n      function sidewalls(contour, layeroffset) {\n        var i = contour.length;\n\n        while (--i >= 0) {\n          var _j9 = i;\n\n          var _k2 = i - 1;\n\n          if (_k2 < 0) _k2 = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n          for (var _s4 = 0, sl = steps + bevelSegments * 2; _s4 < sl; _s4++) {\n            var slen1 = vlen * _s4;\n            var slen2 = vlen * (_s4 + 1);\n\n            var a = layeroffset + _j9 + slen1,\n                _b6 = layeroffset + _k2 + slen1,\n                c = layeroffset + _k2 + slen2,\n                d = layeroffset + _j9 + slen2;\n\n            f4(a, _b6, c, d);\n          }\n        }\n      }\n\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n\n    return _this70;\n  }\n\n  _createClass(ExtrudeGeometry, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(ExtrudeGeometry.prototype), \"toJSON\", this).call(this);\n\n      var shapes = this.parameters.shapes;\n      var options = this.parameters.options;\n      return toJSON$1(shapes, options, data);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(data, shapes) {\n      var geometryShapes = [];\n\n      for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n        var shape = shapes[data.shapes[j]];\n        geometryShapes.push(shape);\n      }\n\n      var extrudePath = data.options.extrudePath;\n\n      if (extrudePath !== undefined) {\n        data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n      }\n\n      return new ExtrudeGeometry(geometryShapes, data.options);\n    }\n  }]);\n\n  return ExtrudeGeometry;\n}(BufferGeometry);\n\nvar WorldUVGenerator = {\n  generateTopUV: function generateTopUV(geometry, vertices, indexA, indexB, indexC) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n  },\n  generateSideWallUV: function generateSideWallUV(geometry, vertices, indexA, indexB, indexC, indexD) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var a_z = vertices[indexA * 3 + 2];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var b_z = vertices[indexB * 3 + 2];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    var c_z = vertices[indexC * 3 + 2];\n    var d_x = vertices[indexD * 3];\n    var d_y = vertices[indexD * 3 + 1];\n    var d_z = vertices[indexD * 3 + 2];\n\n    if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n      return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n    } else {\n      return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n    }\n  }\n};\n\nfunction toJSON$1(shapes, options, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  data.options = Object.assign({}, options);\n  if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n  return data;\n}\n\nvar IcosahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry2) {\n  _inherits(IcosahedronGeometry, _PolyhedronGeometry2);\n\n  var _super80 = _createSuper(IcosahedronGeometry);\n\n  function IcosahedronGeometry() {\n    var _this71;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, IcosahedronGeometry);\n\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    _this71 = _super80.call(this, vertices, indices, radius, detail);\n    _this71.type = 'IcosahedronGeometry';\n    _this71.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    return _this71;\n  }\n\n  _createClass(IcosahedronGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new IcosahedronGeometry(data.radius, data.detail);\n    }\n  }]);\n\n  return IcosahedronGeometry;\n}(PolyhedronGeometry);\n\nvar OctahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry3) {\n  _inherits(OctahedronGeometry, _PolyhedronGeometry3);\n\n  var _super81 = _createSuper(OctahedronGeometry);\n\n  function OctahedronGeometry() {\n    var _this72;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, OctahedronGeometry);\n\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    _this72 = _super81.call(this, vertices, indices, radius, detail);\n    _this72.type = 'OctahedronGeometry';\n    _this72.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    return _this72;\n  }\n\n  _createClass(OctahedronGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new OctahedronGeometry(data.radius, data.detail);\n    }\n  }]);\n\n  return OctahedronGeometry;\n}(PolyhedronGeometry);\n\nvar RingGeometry = /*#__PURE__*/function (_BufferGeometry9) {\n  _inherits(RingGeometry, _BufferGeometry9);\n\n  var _super82 = _createSuper(RingGeometry);\n\n  function RingGeometry() {\n    var _this73;\n\n    var innerRadius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n    var outerRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var thetaSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    var phiSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var thetaStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var thetaLength = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n\n    _classCallCheck(this, RingGeometry);\n\n    _this73 = _super82.call(this);\n    _this73.type = 'RingGeometry';\n    _this73.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    thetaSegments = Math.max(3, thetaSegments);\n    phiSegments = Math.max(1, phiSegments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // some helper variables\n\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new Vector3();\n    var uv = new Vector2(); // generate vertices, normals and uvs\n\n    for (var j = 0; j <= phiSegments; j++) {\n      for (var i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n        var segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // indices\n\n\n    for (var _j10 = 0; _j10 < phiSegments; _j10++) {\n      var thetaSegmentLevel = _j10 * (thetaSegments + 1);\n\n      for (var _i73 = 0; _i73 < thetaSegments; _i73++) {\n        var _segment = _i73 + thetaSegmentLevel;\n\n        var a = _segment;\n        var b = _segment + thetaSegments + 1;\n        var c = _segment + thetaSegments + 2;\n        var d = _segment + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    _this73.setIndex(indices);\n\n    _this73.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this73.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this73.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this73;\n  }\n\n  _createClass(RingGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n    }\n  }]);\n\n  return RingGeometry;\n}(BufferGeometry);\n\nvar ShapeGeometry = /*#__PURE__*/function (_BufferGeometry10) {\n  _inherits(ShapeGeometry, _BufferGeometry10);\n\n  var _super83 = _createSuper(ShapeGeometry);\n\n  function ShapeGeometry() {\n    var _this74;\n\n    var shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n    var curveSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n\n    _classCallCheck(this, ShapeGeometry);\n\n    _this74 = _super83.call(this);\n    _this74.type = 'ShapeGeometry';\n    _this74.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var groupStart = 0;\n    var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (var i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n\n        _this74.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    } // build geometry\n\n\n    _this74.setIndex(indices);\n\n    _this74.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this74.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this74.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\n    function addShape(shape) {\n      var indexOffset = vertices.length / 3;\n      var points = shape.extractPoints(curveSegments);\n      var shapeVertices = points.shape;\n      var shapeHoles = points.holes; // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse();\n      }\n\n      for (var _i74 = 0, l = shapeHoles.length; _i74 < l; _i74++) {\n        var shapeHole = shapeHoles[_i74];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[_i74] = shapeHole.reverse();\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n      for (var _i75 = 0, _l8 = shapeHoles.length; _i75 < _l8; _i75++) {\n        var _shapeHole = shapeHoles[_i75];\n        shapeVertices = shapeVertices.concat(_shapeHole);\n      } // vertices, normals, uvs\n\n\n      for (var _i76 = 0, _l9 = shapeVertices.length; _i76 < _l9; _i76++) {\n        var _vertex = shapeVertices[_i76];\n        vertices.push(_vertex.x, _vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(_vertex.x, _vertex.y); // world uvs\n      } // incides\n\n\n      for (var _i77 = 0, _l10 = faces.length; _i77 < _l10; _i77++) {\n        var face = faces[_i77];\n        var a = face[0] + indexOffset;\n        var b = face[1] + indexOffset;\n        var c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n\n    return _this74;\n  }\n\n  _createClass(ShapeGeometry, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(ShapeGeometry.prototype), \"toJSON\", this).call(this);\n\n      var shapes = this.parameters.shapes;\n      return _toJSON(shapes, data);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(data, shapes) {\n      var geometryShapes = [];\n\n      for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n        var shape = shapes[data.shapes[j]];\n        geometryShapes.push(shape);\n      }\n\n      return new ShapeGeometry(geometryShapes, data.curveSegments);\n    }\n  }]);\n\n  return ShapeGeometry;\n}(BufferGeometry);\n\nfunction _toJSON(shapes, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  return data;\n}\n\nvar SphereGeometry = /*#__PURE__*/function (_BufferGeometry11) {\n  _inherits(SphereGeometry, _BufferGeometry11);\n\n  var _super84 = _createSuper(SphereGeometry);\n\n  function SphereGeometry() {\n    var _this75;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var widthSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n    var heightSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16;\n    var phiStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var phiLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n    var thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    var thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI;\n\n    _classCallCheck(this, SphereGeometry);\n\n    _this75 = _super84.call(this);\n    _this75.type = 'SphereGeometry';\n    _this75.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    widthSegments = Math.max(3, Math.floor(widthSegments));\n    heightSegments = Math.max(2, Math.floor(heightSegments));\n    var thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n    var index = 0;\n    var grid = [];\n    var vertex = new Vector3();\n    var normal = new Vector3(); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (var iy = 0; iy <= heightSegments; iy++) {\n      var verticesRow = [];\n      var v = iy / heightSegments; // special case for the poles\n\n      var uOffset = 0;\n\n      if (iy == 0 && thetaStart == 0) {\n        uOffset = 0.5 / widthSegments;\n      } else if (iy == heightSegments && thetaEnd == Math.PI) {\n        uOffset = -0.5 / widthSegments;\n      }\n\n      for (var ix = 0; ix <= widthSegments; ix++) {\n        var u = ix / widthSegments; // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.copy(vertex).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u + uOffset, 1 - v);\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    } // indices\n\n\n    for (var _iy3 = 0; _iy3 < heightSegments; _iy3++) {\n      for (var _ix3 = 0; _ix3 < widthSegments; _ix3++) {\n        var a = grid[_iy3][_ix3 + 1];\n        var b = grid[_iy3][_ix3];\n        var c = grid[_iy3 + 1][_ix3];\n        var d = grid[_iy3 + 1][_ix3 + 1];\n        if (_iy3 !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (_iy3 !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    _this75.setIndex(indices);\n\n    _this75.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this75.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this75.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this75;\n  }\n\n  _createClass(SphereGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n    }\n  }]);\n\n  return SphereGeometry;\n}(BufferGeometry);\n\nvar TetrahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry4) {\n  _inherits(TetrahedronGeometry, _PolyhedronGeometry4);\n\n  var _super85 = _createSuper(TetrahedronGeometry);\n\n  function TetrahedronGeometry() {\n    var _this76;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, TetrahedronGeometry);\n\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    _this76 = _super85.call(this, vertices, indices, radius, detail);\n    _this76.type = 'TetrahedronGeometry';\n    _this76.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    return _this76;\n  }\n\n  _createClass(TetrahedronGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new TetrahedronGeometry(data.radius, data.detail);\n    }\n  }]);\n\n  return TetrahedronGeometry;\n}(PolyhedronGeometry);\n\nvar TorusGeometry = /*#__PURE__*/function (_BufferGeometry12) {\n  _inherits(TorusGeometry, _BufferGeometry12);\n\n  var _super86 = _createSuper(TorusGeometry);\n\n  function TorusGeometry() {\n    var _this77;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n    var radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    var tubularSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 6;\n    var arc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n\n    _classCallCheck(this, TorusGeometry);\n\n    _this77 = _super86.call(this);\n    _this77.type = 'TorusGeometry';\n    _this77.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radialSegments = Math.floor(radialSegments);\n    tubularSegments = Math.floor(tubularSegments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var center = new Vector3();\n    var vertex = new Vector3();\n    var normal = new Vector3(); // generate vertices, normals and uvs\n\n    for (var j = 0; j <= radialSegments; j++) {\n      for (var i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (var _j11 = 1; _j11 <= radialSegments; _j11++) {\n      for (var _i78 = 1; _i78 <= tubularSegments; _i78++) {\n        // indices\n        var a = (tubularSegments + 1) * _j11 + _i78 - 1;\n        var b = (tubularSegments + 1) * (_j11 - 1) + _i78 - 1;\n        var c = (tubularSegments + 1) * (_j11 - 1) + _i78;\n        var d = (tubularSegments + 1) * _j11 + _i78; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    _this77.setIndex(indices);\n\n    _this77.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this77.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this77.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this77;\n  }\n\n  _createClass(TorusGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n    }\n  }]);\n\n  return TorusGeometry;\n}(BufferGeometry);\n\nvar TorusKnotGeometry = /*#__PURE__*/function (_BufferGeometry13) {\n  _inherits(TorusKnotGeometry, _BufferGeometry13);\n\n  var _super87 = _createSuper(TorusKnotGeometry);\n\n  function TorusKnotGeometry() {\n    var _this78;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n    var tubularSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 64;\n    var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    var p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n    var q = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 3;\n\n    _classCallCheck(this, TorusKnotGeometry);\n\n    _this78 = _super87.call(this);\n    _this78.type = 'TorusKnotGeometry';\n    _this78.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    tubularSegments = Math.floor(tubularSegments);\n    radialSegments = Math.floor(radialSegments); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var P1 = new Vector3();\n    var P2 = new Vector3();\n    var B = new Vector3();\n    var T = new Vector3();\n    var N = new Vector3(); // generate vertices, normals and uvs\n\n    for (var i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (var j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (var _j12 = 1; _j12 <= tubularSegments; _j12++) {\n      for (var _i79 = 1; _i79 <= radialSegments; _i79++) {\n        // indices\n        var a = (radialSegments + 1) * (_j12 - 1) + (_i79 - 1);\n        var b = (radialSegments + 1) * _j12 + (_i79 - 1);\n        var c = (radialSegments + 1) * _j12 + _i79;\n        var d = (radialSegments + 1) * (_j12 - 1) + _i79; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    _this78.setIndex(indices);\n\n    _this78.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this78.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this78.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n\n    return _this78;\n  }\n\n  _createClass(TorusKnotGeometry, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n    }\n  }]);\n\n  return TorusKnotGeometry;\n}(BufferGeometry);\n\nvar TubeGeometry = /*#__PURE__*/function (_BufferGeometry14) {\n  _inherits(TubeGeometry, _BufferGeometry14);\n\n  var _super88 = _createSuper(TubeGeometry);\n\n  function TubeGeometry() {\n    var _this79;\n\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0));\n    var tubularSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    var closed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    _classCallCheck(this, TubeGeometry);\n\n    _this79 = _super88.call(this);\n    _this79.type = 'TubeGeometry';\n    _this79.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n    _this79.tangents = frames.tangents;\n    _this79.normals = frames.normals;\n    _this79.binormals = frames.binormals; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var uv = new Vector2();\n    var P = new Vector3(); // buffer\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var indices = []; // create buffer data\n\n    generateBufferData(); // build geometry\n\n    _this79.setIndex(indices);\n\n    _this79.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this79.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    _this79.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\n    function generateBufferData() {\n      for (var i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      } // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n      generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs(); // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n      var N = frames.normals[i];\n      var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n      for (var j = 0; j <= radialSegments; j++) {\n        var v = j / radialSegments * Math.PI * 2;\n        var sin = Math.sin(v);\n        var cos = -Math.cos(v); // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z); // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (var j = 1; j <= tubularSegments; j++) {\n        for (var i = 1; i <= radialSegments; i++) {\n          var a = (radialSegments + 1) * (j - 1) + (i - 1);\n          var b = (radialSegments + 1) * j + (i - 1);\n          var c = (radialSegments + 1) * j + i;\n          var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (var i = 0; i <= tubularSegments; i++) {\n        for (var j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n\n    return _this79;\n  }\n\n  _createClass(TubeGeometry, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(TubeGeometry.prototype), \"toJSON\", this).call(this);\n\n      data.path = this.parameters.path.toJSON();\n      return data;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      // This only works for built-in curves (e.g. CatmullRomCurve3).\n      // User defined curves or instances of CurvePath will not be deserialized.\n      return new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n    }\n  }]);\n\n  return TubeGeometry;\n}(BufferGeometry);\n\nvar WireframeGeometry = /*#__PURE__*/function (_BufferGeometry15) {\n  _inherits(WireframeGeometry, _BufferGeometry15);\n\n  var _super89 = _createSuper(WireframeGeometry);\n\n  function WireframeGeometry() {\n    var _this80;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, WireframeGeometry);\n\n    _this80 = _super89.call(this);\n    _this80.type = 'WireframeGeometry';\n    _this80.parameters = {\n      geometry: geometry\n    };\n\n    if (geometry !== null) {\n      // buffer\n      var vertices = [];\n      var edges = new Set(); // helper variables\n\n      var start = new Vector3();\n      var end = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        var position = geometry.attributes.position;\n        var indices = geometry.index;\n        var groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all edges without duplicates\n\n\n        for (var o = 0, ol = groups.length; o < ol; ++o) {\n          var group = groups[o];\n          var groupStart = group.start;\n          var groupCount = group.count;\n\n          for (var i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n            for (var j = 0; j < 3; j++) {\n              var index1 = indices.getX(i + j);\n              var index2 = indices.getX(i + (j + 1) % 3);\n              start.fromBufferAttribute(position, index1);\n              end.fromBufferAttribute(position, index2);\n\n              if (isUniqueEdge(start, end, edges) === true) {\n                vertices.push(start.x, start.y, start.z);\n                vertices.push(end.x, end.y, end.z);\n              }\n            }\n          }\n        }\n      } else {\n        // non-indexed BufferGeometry\n        var _position2 = geometry.attributes.position;\n\n        for (var _i80 = 0, _l11 = _position2.count / 3; _i80 < _l11; _i80++) {\n          for (var _j13 = 0; _j13 < 3; _j13++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            var _index = 3 * _i80 + _j13;\n\n            var _index2 = 3 * _i80 + (_j13 + 1) % 3;\n\n            start.fromBufferAttribute(_position2, _index);\n            end.fromBufferAttribute(_position2, _index2);\n\n            if (isUniqueEdge(start, end, edges) === true) {\n              vertices.push(start.x, start.y, start.z);\n              vertices.push(end.x, end.y, end.z);\n            }\n          }\n        }\n      } // build geometry\n\n\n      _this80.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    }\n\n    return _this80;\n  }\n\n  return WireframeGeometry;\n}(BufferGeometry);\n\nfunction isUniqueEdge(start, end, edges) {\n  var hash1 = \"\".concat(start.x, \",\").concat(start.y, \",\").concat(start.z, \"-\").concat(end.x, \",\").concat(end.y, \",\").concat(end.z);\n  var hash2 = \"\".concat(end.x, \",\").concat(end.y, \",\").concat(end.z, \"-\").concat(start.x, \",\").concat(start.y, \",\").concat(start.z); // coincident edge\n\n  if (edges.has(hash1) === true || edges.has(hash2) === true) {\n    return false;\n  } else {\n    edges.add(hash1);\n    edges.add(hash2);\n    return true;\n  }\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BoxGeometry: BoxGeometry,\n  BoxBufferGeometry: BoxGeometry,\n  CapsuleGeometry: CapsuleGeometry,\n  CapsuleBufferGeometry: CapsuleGeometry,\n  CircleGeometry: CircleGeometry,\n  CircleBufferGeometry: CircleGeometry,\n  ConeGeometry: ConeGeometry,\n  ConeBufferGeometry: ConeGeometry,\n  CylinderGeometry: CylinderGeometry,\n  CylinderBufferGeometry: CylinderGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  DodecahedronBufferGeometry: DodecahedronGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  ExtrudeBufferGeometry: ExtrudeGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  IcosahedronBufferGeometry: IcosahedronGeometry,\n  LatheGeometry: LatheGeometry,\n  LatheBufferGeometry: LatheGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  OctahedronBufferGeometry: OctahedronGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PlaneBufferGeometry: PlaneGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  PolyhedronBufferGeometry: PolyhedronGeometry,\n  RingGeometry: RingGeometry,\n  RingBufferGeometry: RingGeometry,\n  ShapeGeometry: ShapeGeometry,\n  ShapeBufferGeometry: ShapeGeometry,\n  SphereGeometry: SphereGeometry,\n  SphereBufferGeometry: SphereGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TetrahedronBufferGeometry: TetrahedronGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusBufferGeometry: TorusGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TorusKnotBufferGeometry: TorusKnotGeometry,\n  TubeGeometry: TubeGeometry,\n  TubeBufferGeometry: TubeGeometry,\n  WireframeGeometry: WireframeGeometry\n});\n\nvar ShadowMaterial = /*#__PURE__*/function (_Material8) {\n  _inherits(ShadowMaterial, _Material8);\n\n  var _super90 = _createSuper(ShadowMaterial);\n\n  function ShadowMaterial(parameters) {\n    var _this81;\n\n    _classCallCheck(this, ShadowMaterial);\n\n    _this81 = _super90.call(this);\n    _this81.isShadowMaterial = true;\n    _this81.type = 'ShadowMaterial';\n    _this81.color = new Color(0x000000);\n    _this81.transparent = true;\n    _this81.fog = true;\n\n    _this81.setValues(parameters);\n\n    return _this81;\n  }\n\n  _createClass(ShadowMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(ShadowMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return ShadowMaterial;\n}(Material);\n\nvar RawShaderMaterial = /*#__PURE__*/function (_ShaderMaterial) {\n  _inherits(RawShaderMaterial, _ShaderMaterial);\n\n  var _super91 = _createSuper(RawShaderMaterial);\n\n  function RawShaderMaterial(parameters) {\n    var _this82;\n\n    _classCallCheck(this, RawShaderMaterial);\n\n    _this82 = _super91.call(this, parameters);\n    _this82.isRawShaderMaterial = true;\n    _this82.type = 'RawShaderMaterial';\n    return _this82;\n  }\n\n  return RawShaderMaterial;\n}(ShaderMaterial);\n\nvar MeshStandardMaterial = /*#__PURE__*/function (_Material9) {\n  _inherits(MeshStandardMaterial, _Material9);\n\n  var _super92 = _createSuper(MeshStandardMaterial);\n\n  function MeshStandardMaterial(parameters) {\n    var _this83;\n\n    _classCallCheck(this, MeshStandardMaterial);\n\n    _this83 = _super92.call(this);\n    _this83.isMeshStandardMaterial = true;\n    _this83.defines = {\n      'STANDARD': ''\n    };\n    _this83.type = 'MeshStandardMaterial';\n    _this83.color = new Color(0xffffff); // diffuse\n\n    _this83.roughness = 1.0;\n    _this83.metalness = 0.0;\n    _this83.map = null;\n    _this83.lightMap = null;\n    _this83.lightMapIntensity = 1.0;\n    _this83.aoMap = null;\n    _this83.aoMapIntensity = 1.0;\n    _this83.emissive = new Color(0x000000);\n    _this83.emissiveIntensity = 1.0;\n    _this83.emissiveMap = null;\n    _this83.bumpMap = null;\n    _this83.bumpScale = 1;\n    _this83.normalMap = null;\n    _this83.normalMapType = TangentSpaceNormalMap;\n    _this83.normalScale = new Vector2(1, 1);\n    _this83.displacementMap = null;\n    _this83.displacementScale = 1;\n    _this83.displacementBias = 0;\n    _this83.roughnessMap = null;\n    _this83.metalnessMap = null;\n    _this83.alphaMap = null;\n    _this83.envMap = null;\n    _this83.envMapIntensity = 1.0;\n    _this83.wireframe = false;\n    _this83.wireframeLinewidth = 1;\n    _this83.wireframeLinecap = 'round';\n    _this83.wireframeLinejoin = 'round';\n    _this83.flatShading = false;\n    _this83.fog = true;\n\n    _this83.setValues(parameters);\n\n    return _this83;\n  }\n\n  _createClass(MeshStandardMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshStandardMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.defines = {\n        'STANDARD': ''\n      };\n      this.color.copy(source.color);\n      this.roughness = source.roughness;\n      this.metalness = source.metalness;\n      this.map = source.map;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.emissive.copy(source.emissive);\n      this.emissiveMap = source.emissiveMap;\n      this.emissiveIntensity = source.emissiveIntensity;\n      this.bumpMap = source.bumpMap;\n      this.bumpScale = source.bumpScale;\n      this.normalMap = source.normalMap;\n      this.normalMapType = source.normalMapType;\n      this.normalScale.copy(source.normalScale);\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.roughnessMap = source.roughnessMap;\n      this.metalnessMap = source.metalnessMap;\n      this.alphaMap = source.alphaMap;\n      this.envMap = source.envMap;\n      this.envMapIntensity = source.envMapIntensity;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      this.flatShading = source.flatShading;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshStandardMaterial;\n}(Material);\n\nvar MeshPhysicalMaterial = /*#__PURE__*/function (_MeshStandardMaterial) {\n  _inherits(MeshPhysicalMaterial, _MeshStandardMaterial);\n\n  var _super93 = _createSuper(MeshPhysicalMaterial);\n\n  function MeshPhysicalMaterial(parameters) {\n    var _this84;\n\n    _classCallCheck(this, MeshPhysicalMaterial);\n\n    _this84 = _super93.call(this);\n    _this84.isMeshPhysicalMaterial = true;\n    _this84.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    _this84.type = 'MeshPhysicalMaterial';\n    _this84.clearcoatMap = null;\n    _this84.clearcoatRoughness = 0.0;\n    _this84.clearcoatRoughnessMap = null;\n    _this84.clearcoatNormalScale = new Vector2(1, 1);\n    _this84.clearcoatNormalMap = null;\n    _this84.ior = 1.5;\n    Object.defineProperty(_assertThisInitialized(_this84), 'reflectivity', {\n      get: function get() {\n        return clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n      },\n      set: function set(reflectivity) {\n        this.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n      }\n    });\n    _this84.iridescenceMap = null;\n    _this84.iridescenceIOR = 1.3;\n    _this84.iridescenceThicknessRange = [100, 400];\n    _this84.iridescenceThicknessMap = null;\n    _this84.sheenColor = new Color(0x000000);\n    _this84.sheenColorMap = null;\n    _this84.sheenRoughness = 1.0;\n    _this84.sheenRoughnessMap = null;\n    _this84.transmissionMap = null;\n    _this84.thickness = 0;\n    _this84.thicknessMap = null;\n    _this84.attenuationDistance = 0.0;\n    _this84.attenuationColor = new Color(1, 1, 1);\n    _this84.specularIntensity = 1.0;\n    _this84.specularIntensityMap = null;\n    _this84.specularColor = new Color(1, 1, 1);\n    _this84.specularColorMap = null;\n    _this84._sheen = 0.0;\n    _this84._clearcoat = 0;\n    _this84._iridescence = 0;\n    _this84._transmission = 0;\n\n    _this84.setValues(parameters);\n\n    return _this84;\n  }\n\n  _createClass(MeshPhysicalMaterial, [{\n    key: \"sheen\",\n    get: function get() {\n      return this._sheen;\n    },\n    set: function set(value) {\n      if (this._sheen > 0 !== value > 0) {\n        this.version++;\n      }\n\n      this._sheen = value;\n    }\n  }, {\n    key: \"clearcoat\",\n    get: function get() {\n      return this._clearcoat;\n    },\n    set: function set(value) {\n      if (this._clearcoat > 0 !== value > 0) {\n        this.version++;\n      }\n\n      this._clearcoat = value;\n    }\n  }, {\n    key: \"iridescence\",\n    get: function get() {\n      return this._iridescence;\n    },\n    set: function set(value) {\n      if (this._iridescence > 0 !== value > 0) {\n        this.version++;\n      }\n\n      this._iridescence = value;\n    }\n  }, {\n    key: \"transmission\",\n    get: function get() {\n      return this._transmission;\n    },\n    set: function set(value) {\n      if (this._transmission > 0 !== value > 0) {\n        this.version++;\n      }\n\n      this._transmission = value;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshPhysicalMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.defines = {\n        'STANDARD': '',\n        'PHYSICAL': ''\n      };\n      this.clearcoat = source.clearcoat;\n      this.clearcoatMap = source.clearcoatMap;\n      this.clearcoatRoughness = source.clearcoatRoughness;\n      this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n      this.clearcoatNormalMap = source.clearcoatNormalMap;\n      this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n      this.ior = source.ior;\n      this.iridescence = source.iridescence;\n      this.iridescenceMap = source.iridescenceMap;\n      this.iridescenceIOR = source.iridescenceIOR;\n      this.iridescenceThicknessRange = _toConsumableArray(source.iridescenceThicknessRange);\n      this.iridescenceThicknessMap = source.iridescenceThicknessMap;\n      this.sheen = source.sheen;\n      this.sheenColor.copy(source.sheenColor);\n      this.sheenColorMap = source.sheenColorMap;\n      this.sheenRoughness = source.sheenRoughness;\n      this.sheenRoughnessMap = source.sheenRoughnessMap;\n      this.transmission = source.transmission;\n      this.transmissionMap = source.transmissionMap;\n      this.thickness = source.thickness;\n      this.thicknessMap = source.thicknessMap;\n      this.attenuationDistance = source.attenuationDistance;\n      this.attenuationColor.copy(source.attenuationColor);\n      this.specularIntensity = source.specularIntensity;\n      this.specularIntensityMap = source.specularIntensityMap;\n      this.specularColor.copy(source.specularColor);\n      this.specularColorMap = source.specularColorMap;\n      return this;\n    }\n  }]);\n\n  return MeshPhysicalMaterial;\n}(MeshStandardMaterial);\n\nvar MeshPhongMaterial = /*#__PURE__*/function (_Material10) {\n  _inherits(MeshPhongMaterial, _Material10);\n\n  var _super94 = _createSuper(MeshPhongMaterial);\n\n  function MeshPhongMaterial(parameters) {\n    var _this85;\n\n    _classCallCheck(this, MeshPhongMaterial);\n\n    _this85 = _super94.call(this);\n    _this85.isMeshPhongMaterial = true;\n    _this85.type = 'MeshPhongMaterial';\n    _this85.color = new Color(0xffffff); // diffuse\n\n    _this85.specular = new Color(0x111111);\n    _this85.shininess = 30;\n    _this85.map = null;\n    _this85.lightMap = null;\n    _this85.lightMapIntensity = 1.0;\n    _this85.aoMap = null;\n    _this85.aoMapIntensity = 1.0;\n    _this85.emissive = new Color(0x000000);\n    _this85.emissiveIntensity = 1.0;\n    _this85.emissiveMap = null;\n    _this85.bumpMap = null;\n    _this85.bumpScale = 1;\n    _this85.normalMap = null;\n    _this85.normalMapType = TangentSpaceNormalMap;\n    _this85.normalScale = new Vector2(1, 1);\n    _this85.displacementMap = null;\n    _this85.displacementScale = 1;\n    _this85.displacementBias = 0;\n    _this85.specularMap = null;\n    _this85.alphaMap = null;\n    _this85.envMap = null;\n    _this85.combine = MultiplyOperation;\n    _this85.reflectivity = 1;\n    _this85.refractionRatio = 0.98;\n    _this85.wireframe = false;\n    _this85.wireframeLinewidth = 1;\n    _this85.wireframeLinecap = 'round';\n    _this85.wireframeLinejoin = 'round';\n    _this85.flatShading = false;\n    _this85.fog = true;\n\n    _this85.setValues(parameters);\n\n    return _this85;\n  }\n\n  _createClass(MeshPhongMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshPhongMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.specular.copy(source.specular);\n      this.shininess = source.shininess;\n      this.map = source.map;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.emissive.copy(source.emissive);\n      this.emissiveMap = source.emissiveMap;\n      this.emissiveIntensity = source.emissiveIntensity;\n      this.bumpMap = source.bumpMap;\n      this.bumpScale = source.bumpScale;\n      this.normalMap = source.normalMap;\n      this.normalMapType = source.normalMapType;\n      this.normalScale.copy(source.normalScale);\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.specularMap = source.specularMap;\n      this.alphaMap = source.alphaMap;\n      this.envMap = source.envMap;\n      this.combine = source.combine;\n      this.reflectivity = source.reflectivity;\n      this.refractionRatio = source.refractionRatio;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      this.flatShading = source.flatShading;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshPhongMaterial;\n}(Material);\n\nvar MeshToonMaterial = /*#__PURE__*/function (_Material11) {\n  _inherits(MeshToonMaterial, _Material11);\n\n  var _super95 = _createSuper(MeshToonMaterial);\n\n  function MeshToonMaterial(parameters) {\n    var _this86;\n\n    _classCallCheck(this, MeshToonMaterial);\n\n    _this86 = _super95.call(this);\n    _this86.isMeshToonMaterial = true;\n    _this86.defines = {\n      'TOON': ''\n    };\n    _this86.type = 'MeshToonMaterial';\n    _this86.color = new Color(0xffffff);\n    _this86.map = null;\n    _this86.gradientMap = null;\n    _this86.lightMap = null;\n    _this86.lightMapIntensity = 1.0;\n    _this86.aoMap = null;\n    _this86.aoMapIntensity = 1.0;\n    _this86.emissive = new Color(0x000000);\n    _this86.emissiveIntensity = 1.0;\n    _this86.emissiveMap = null;\n    _this86.bumpMap = null;\n    _this86.bumpScale = 1;\n    _this86.normalMap = null;\n    _this86.normalMapType = TangentSpaceNormalMap;\n    _this86.normalScale = new Vector2(1, 1);\n    _this86.displacementMap = null;\n    _this86.displacementScale = 1;\n    _this86.displacementBias = 0;\n    _this86.alphaMap = null;\n    _this86.wireframe = false;\n    _this86.wireframeLinewidth = 1;\n    _this86.wireframeLinecap = 'round';\n    _this86.wireframeLinejoin = 'round';\n    _this86.fog = true;\n\n    _this86.setValues(parameters);\n\n    return _this86;\n  }\n\n  _createClass(MeshToonMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshToonMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.gradientMap = source.gradientMap;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.emissive.copy(source.emissive);\n      this.emissiveMap = source.emissiveMap;\n      this.emissiveIntensity = source.emissiveIntensity;\n      this.bumpMap = source.bumpMap;\n      this.bumpScale = source.bumpScale;\n      this.normalMap = source.normalMap;\n      this.normalMapType = source.normalMapType;\n      this.normalScale.copy(source.normalScale);\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.alphaMap = source.alphaMap;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshToonMaterial;\n}(Material);\n\nvar MeshNormalMaterial = /*#__PURE__*/function (_Material12) {\n  _inherits(MeshNormalMaterial, _Material12);\n\n  var _super96 = _createSuper(MeshNormalMaterial);\n\n  function MeshNormalMaterial(parameters) {\n    var _this87;\n\n    _classCallCheck(this, MeshNormalMaterial);\n\n    _this87 = _super96.call(this);\n    _this87.isMeshNormalMaterial = true;\n    _this87.type = 'MeshNormalMaterial';\n    _this87.bumpMap = null;\n    _this87.bumpScale = 1;\n    _this87.normalMap = null;\n    _this87.normalMapType = TangentSpaceNormalMap;\n    _this87.normalScale = new Vector2(1, 1);\n    _this87.displacementMap = null;\n    _this87.displacementScale = 1;\n    _this87.displacementBias = 0;\n    _this87.wireframe = false;\n    _this87.wireframeLinewidth = 1;\n    _this87.flatShading = false;\n\n    _this87.setValues(parameters);\n\n    return _this87;\n  }\n\n  _createClass(MeshNormalMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshNormalMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.bumpMap = source.bumpMap;\n      this.bumpScale = source.bumpScale;\n      this.normalMap = source.normalMap;\n      this.normalMapType = source.normalMapType;\n      this.normalScale.copy(source.normalScale);\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.flatShading = source.flatShading;\n      return this;\n    }\n  }]);\n\n  return MeshNormalMaterial;\n}(Material);\n\nvar MeshLambertMaterial = /*#__PURE__*/function (_Material13) {\n  _inherits(MeshLambertMaterial, _Material13);\n\n  var _super97 = _createSuper(MeshLambertMaterial);\n\n  function MeshLambertMaterial(parameters) {\n    var _this88;\n\n    _classCallCheck(this, MeshLambertMaterial);\n\n    _this88 = _super97.call(this);\n    _this88.isMeshLambertMaterial = true;\n    _this88.type = 'MeshLambertMaterial';\n    _this88.color = new Color(0xffffff); // diffuse\n\n    _this88.map = null;\n    _this88.lightMap = null;\n    _this88.lightMapIntensity = 1.0;\n    _this88.aoMap = null;\n    _this88.aoMapIntensity = 1.0;\n    _this88.emissive = new Color(0x000000);\n    _this88.emissiveIntensity = 1.0;\n    _this88.emissiveMap = null;\n    _this88.specularMap = null;\n    _this88.alphaMap = null;\n    _this88.envMap = null;\n    _this88.combine = MultiplyOperation;\n    _this88.reflectivity = 1;\n    _this88.refractionRatio = 0.98;\n    _this88.wireframe = false;\n    _this88.wireframeLinewidth = 1;\n    _this88.wireframeLinecap = 'round';\n    _this88.wireframeLinejoin = 'round';\n    _this88.fog = true;\n\n    _this88.setValues(parameters);\n\n    return _this88;\n  }\n\n  _createClass(MeshLambertMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshLambertMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.emissive.copy(source.emissive);\n      this.emissiveMap = source.emissiveMap;\n      this.emissiveIntensity = source.emissiveIntensity;\n      this.specularMap = source.specularMap;\n      this.alphaMap = source.alphaMap;\n      this.envMap = source.envMap;\n      this.combine = source.combine;\n      this.reflectivity = source.reflectivity;\n      this.refractionRatio = source.refractionRatio;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshLambertMaterial;\n}(Material);\n\nvar MeshMatcapMaterial = /*#__PURE__*/function (_Material14) {\n  _inherits(MeshMatcapMaterial, _Material14);\n\n  var _super98 = _createSuper(MeshMatcapMaterial);\n\n  function MeshMatcapMaterial(parameters) {\n    var _this89;\n\n    _classCallCheck(this, MeshMatcapMaterial);\n\n    _this89 = _super98.call(this);\n    _this89.isMeshMatcapMaterial = true;\n    _this89.defines = {\n      'MATCAP': ''\n    };\n    _this89.type = 'MeshMatcapMaterial';\n    _this89.color = new Color(0xffffff); // diffuse\n\n    _this89.matcap = null;\n    _this89.map = null;\n    _this89.bumpMap = null;\n    _this89.bumpScale = 1;\n    _this89.normalMap = null;\n    _this89.normalMapType = TangentSpaceNormalMap;\n    _this89.normalScale = new Vector2(1, 1);\n    _this89.displacementMap = null;\n    _this89.displacementScale = 1;\n    _this89.displacementBias = 0;\n    _this89.alphaMap = null;\n    _this89.flatShading = false;\n    _this89.fog = true;\n\n    _this89.setValues(parameters);\n\n    return _this89;\n  }\n\n  _createClass(MeshMatcapMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshMatcapMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.defines = {\n        'MATCAP': ''\n      };\n      this.color.copy(source.color);\n      this.matcap = source.matcap;\n      this.map = source.map;\n      this.bumpMap = source.bumpMap;\n      this.bumpScale = source.bumpScale;\n      this.normalMap = source.normalMap;\n      this.normalMapType = source.normalMapType;\n      this.normalScale.copy(source.normalScale);\n      this.displacementMap = source.displacementMap;\n      this.displacementScale = source.displacementScale;\n      this.displacementBias = source.displacementBias;\n      this.alphaMap = source.alphaMap;\n      this.flatShading = source.flatShading;\n      this.fog = source.fog;\n      return this;\n    }\n  }]);\n\n  return MeshMatcapMaterial;\n}(Material);\n\nvar LineDashedMaterial = /*#__PURE__*/function (_LineBasicMaterial) {\n  _inherits(LineDashedMaterial, _LineBasicMaterial);\n\n  var _super99 = _createSuper(LineDashedMaterial);\n\n  function LineDashedMaterial(parameters) {\n    var _this90;\n\n    _classCallCheck(this, LineDashedMaterial);\n\n    _this90 = _super99.call(this);\n    _this90.isLineDashedMaterial = true;\n    _this90.type = 'LineDashedMaterial';\n    _this90.scale = 1;\n    _this90.dashSize = 3;\n    _this90.gapSize = 1;\n\n    _this90.setValues(parameters);\n\n    return _this90;\n  }\n\n  _createClass(LineDashedMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LineDashedMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.scale = source.scale;\n      this.dashSize = source.dashSize;\n      this.gapSize = source.gapSize;\n      return this;\n    }\n  }]);\n\n  return LineDashedMaterial;\n}(LineBasicMaterial);\n\nvar AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function arraySlice(array, from, to) {\n    if (AnimationUtils.isTypedArray(array)) {\n      // in ios9 array.subarray(from, undefined) will return empty array\n      // but array.subarray(from) or array.subarray(from, len) is correct\n      return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function convertArray(array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function isTypedArray(object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function getKeyframeOrder(times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) {\n      result[i] = i;\n    }\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function sortedArray(values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  },\n  subclip: function subclip(sourceClip, name, startFrame, endFrame) {\n    var fps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 30;\n    var clip = sourceClip.clone();\n    clip.name = name;\n    var tracks = [];\n\n    for (var i = 0; i < clip.tracks.length; ++i) {\n      var track = clip.tracks[i];\n      var valueSize = track.getValueSize();\n      var times = [];\n      var values = [];\n\n      for (var j = 0; j < track.times.length; ++j) {\n        var frame = track.times[j] * fps;\n        if (frame < startFrame || frame >= endFrame) continue;\n        times.push(track.times[j]);\n\n        for (var k = 0; k < valueSize; ++k) {\n          values.push(track.values[j * valueSize + k]);\n        }\n      }\n\n      if (times.length === 0) continue;\n      track.times = AnimationUtils.convertArray(times, track.times.constructor);\n      track.values = AnimationUtils.convertArray(values, track.values.constructor);\n      tracks.push(track);\n    }\n\n    clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n    var minStartTime = Infinity;\n\n    for (var _i81 = 0; _i81 < clip.tracks.length; ++_i81) {\n      if (minStartTime > clip.tracks[_i81].times[0]) {\n        minStartTime = clip.tracks[_i81].times[0];\n      }\n    } // shift all tracks such that clip begins at t=0\n\n\n    for (var _i82 = 0; _i82 < clip.tracks.length; ++_i82) {\n      clip.tracks[_i82].shift(-1 * minStartTime);\n    }\n\n    clip.resetDuration();\n    return clip;\n  },\n  makeClipAdditive: function makeClipAdditive(targetClip) {\n    var referenceFrame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var referenceClip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : targetClip;\n    var fps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n    if (fps <= 0) fps = 30;\n    var numTracks = referenceClip.tracks.length;\n    var referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n    var _loop = function _loop(i) {\n      var referenceTrack = referenceClip.tracks[i];\n      var referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n      if (referenceTrackType === 'bool' || referenceTrackType === 'string') return \"continue\"; // Find the track in the target clip whose name and type matches the reference track\n\n      var targetTrack = targetClip.tracks.find(function (track) {\n        return track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n      });\n      if (targetTrack === undefined) return \"continue\";\n      var referenceOffset = 0;\n      var referenceValueSize = referenceTrack.getValueSize();\n\n      if (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n        referenceOffset = referenceValueSize / 3;\n      }\n\n      var targetOffset = 0;\n      var targetValueSize = targetTrack.getValueSize();\n\n      if (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n        targetOffset = targetValueSize / 3;\n      }\n\n      var lastIndex = referenceTrack.times.length - 1;\n      var referenceValue = void 0; // Find the value to subtract out of the track\n\n      if (referenceTime <= referenceTrack.times[0]) {\n        // Reference frame is earlier than the first keyframe, so just use the first keyframe\n        var startIndex = referenceOffset;\n        var endIndex = referenceValueSize - referenceOffset;\n        referenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n      } else if (referenceTime >= referenceTrack.times[lastIndex]) {\n        // Reference frame is after the last keyframe, so just use the last keyframe\n        var _startIndex = lastIndex * referenceValueSize + referenceOffset;\n\n        var _endIndex = _startIndex + referenceValueSize - referenceOffset;\n\n        referenceValue = AnimationUtils.arraySlice(referenceTrack.values, _startIndex, _endIndex);\n      } else {\n        // Interpolate to the reference value\n        var interpolant = referenceTrack.createInterpolant();\n        var _startIndex2 = referenceOffset;\n\n        var _endIndex2 = referenceValueSize - referenceOffset;\n\n        interpolant.evaluate(referenceTime);\n        referenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, _startIndex2, _endIndex2);\n      } // Conjugate the quaternion\n\n\n      if (referenceTrackType === 'quaternion') {\n        var referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n        referenceQuat.toArray(referenceValue);\n      } // Subtract the reference value from all of the track values\n\n\n      var numTimes = targetTrack.times.length;\n\n      for (var j = 0; j < numTimes; ++j) {\n        var valueStart = j * targetValueSize + targetOffset;\n\n        if (referenceTrackType === 'quaternion') {\n          // Multiply the conjugate for quaternion track types\n          Quaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n        } else {\n          var valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n          for (var k = 0; k < valueEnd; ++k) {\n            targetTrack.values[valueStart + k] -= referenceValue[k];\n          }\n        }\n      }\n    };\n\n    for (var i = 0; i < numTracks; ++i) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    targetClip.blendMode = AdditiveAnimationBlendMode;\n    return targetClip;\n  }\n};\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nvar Interpolant = /*#__PURE__*/function () {\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    _classCallCheck(this, Interpolant);\n\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n    this.settings = null;\n    this.DefaultSettings_ = {};\n  }\n\n  _createClass(Interpolant, [{\n    key: \"evaluate\",\n    value: function evaluate(t) {\n      var pp = this.parameterPositions;\n      var i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.copySampleValue_(i1 - 1);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var _giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.copySampleValue_(0);\n                }\n\n                if (i1 === _giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.copySampleValue_(0);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.copySampleValue_(i1 - 1);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    }\n  }, {\n    key: \"getSettings_\",\n    value: function getSettings_() {\n      return this.settings || this.DefaultSettings_;\n    }\n  }, {\n    key: \"copySampleValue_\",\n    value: function copySampleValue_(index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    } // Template methods for derived classes:\n\n  }, {\n    key: \"interpolate_\",\n    value: function interpolate_() {\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n    }\n  }, {\n    key: \"intervalChanged_\",\n    value: function intervalChanged_() {// empty\n    }\n  }]);\n\n  return Interpolant;\n}();\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\n\nvar CubicInterpolant = /*#__PURE__*/function (_Interpolant) {\n  _inherits(CubicInterpolant, _Interpolant);\n\n  var _super100 = _createSuper(CubicInterpolant);\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    var _this91;\n\n    _classCallCheck(this, CubicInterpolant);\n\n    _this91 = _super100.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    _this91._weightPrev = -0;\n    _this91._offsetPrev = -0;\n    _this91._weightNext = -0;\n    _this91._offsetNext = -0;\n    _this91.DefaultSettings_ = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n    return _this91;\n  }\n\n  _createClass(CubicInterpolant, [{\n    key: \"intervalChanged_\",\n    value: function intervalChanged_(i1, t0, t1) {\n      var pp = this.parameterPositions;\n      var iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    }\n  }, {\n    key: \"interpolate_\",\n    value: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  }]);\n\n  return CubicInterpolant;\n}(Interpolant);\n\nvar LinearInterpolant = /*#__PURE__*/function (_Interpolant2) {\n  _inherits(LinearInterpolant, _Interpolant2);\n\n  var _super101 = _createSuper(LinearInterpolant);\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    _classCallCheck(this, LinearInterpolant);\n\n    return _super101.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  _createClass(LinearInterpolant, [{\n    key: \"interpolate_\",\n    value: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  }]);\n\n  return LinearInterpolant;\n}(Interpolant);\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\n\nvar DiscreteInterpolant = /*#__PURE__*/function (_Interpolant3) {\n  _inherits(DiscreteInterpolant, _Interpolant3);\n\n  var _super102 = _createSuper(DiscreteInterpolant);\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    _classCallCheck(this, DiscreteInterpolant);\n\n    return _super102.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  _createClass(DiscreteInterpolant, [{\n    key: \"interpolate_\",\n    value: function interpolate_(i1\n    /*, t0, t, t1 */\n    ) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  }]);\n\n  return DiscreteInterpolant;\n}(Interpolant);\n\nvar KeyframeTrack = /*#__PURE__*/function () {\n  function KeyframeTrack(name, times, values, interpolation) {\n    _classCallCheck(this, KeyframeTrack);\n\n    if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n    if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  } // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n\n\n  _createClass(KeyframeTrack, [{\n    key: \"InterpolantFactoryMethodDiscrete\",\n    value: function InterpolantFactoryMethodDiscrete(result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    }\n  }, {\n    key: \"InterpolantFactoryMethodLinear\",\n    value: function InterpolantFactoryMethodLinear(result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    }\n  }, {\n    key: \"InterpolantFactoryMethodSmooth\",\n    value: function InterpolantFactoryMethodSmooth(result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    }\n  }, {\n    key: \"setInterpolation\",\n    value: function setInterpolation(interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrack:', message);\n        return this;\n      }\n\n      this.createInterpolant = factoryMethod;\n      return this;\n    }\n  }, {\n    key: \"getInterpolation\",\n    value: function getInterpolation() {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    }\n  }, {\n    key: \"getValueSize\",\n    value: function getValueSize() {\n      return this.values.length / this.times.length;\n    } // move all keyframes either forwards or backwards in time\n\n  }, {\n    key: \"shift\",\n    value: function shift(timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    } // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n  }, {\n    key: \"scale\",\n    value: function scale(timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    } // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n  }, {\n    key: \"trim\",\n    value: function trim(startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length;\n      var from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) {\n        ++from;\n      }\n\n      while (to !== -1 && times[to] > endTime) {\n        --to;\n      }\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) {\n          to = Math.max(to, 1);\n          from = to - 1;\n        }\n\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    } // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var _i83 = 0, n = values.length; _i83 !== n; ++_i83) {\n            var _value5 = values[_i83];\n\n            if (isNaN(_value5)) {\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, _i83, _value5);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    } // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n  }, {\n    key: \"optimize\",\n    value: function optimize() {\n      // times or values may be shared with other tracks, so overwriting is unsafe\n      var times = AnimationUtils.arraySlice(this.times),\n          values = AnimationUtils.arraySlice(this.values),\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          lastIndex = times.length - 1;\n      var writeIndex = 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== times[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var _value6 = values[offset + j];\n\n              if (_value6 !== values[offsetP + j] || _value6 !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else {\n            keep = true;\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var _j14 = 0; _j14 !== stride; ++_j14) {\n              values[writeOffset + _j14] = values[readOffset + _j14];\n            }\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var _readOffset = lastIndex * stride, _writeOffset = writeIndex * stride, _j15 = 0; _j15 !== stride; ++_j15) {\n          values[_writeOffset + _j15] = values[_readOffset + _j15];\n        }\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      } else {\n        this.times = times;\n        this.values = values;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var times = AnimationUtils.arraySlice(this.times, 0);\n      var values = AnimationUtils.arraySlice(this.values, 0);\n      var TypedKeyframeTrack = this.constructor;\n      var track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n      track.createInterpolant = this.createInterpolant;\n      return track;\n    }\n  }], [{\n    key: \"toJSON\",\n    value: function toJSON(track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== this.toJSON) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    }\n  }]);\n\n  return KeyframeTrack;\n}();\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n/**\n * A Track of Boolean keyframe values.\n */\n\nvar BooleanKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack) {\n  _inherits(BooleanKeyframeTrack, _KeyframeTrack);\n\n  var _super103 = _createSuper(BooleanKeyframeTrack);\n\n  function BooleanKeyframeTrack() {\n    _classCallCheck(this, BooleanKeyframeTrack);\n\n    return _super103.apply(this, arguments);\n  }\n\n  return BooleanKeyframeTrack;\n}(KeyframeTrack);\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n/**\n * A Track of keyframe values that represent color.\n */\n\nvar ColorKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack2) {\n  _inherits(ColorKeyframeTrack, _KeyframeTrack2);\n\n  var _super104 = _createSuper(ColorKeyframeTrack);\n\n  function ColorKeyframeTrack() {\n    _classCallCheck(this, ColorKeyframeTrack);\n\n    return _super104.apply(this, arguments);\n  }\n\n  return ColorKeyframeTrack;\n}(KeyframeTrack);\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n/**\n * A Track of numeric keyframe values.\n */\n\nvar NumberKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack3) {\n  _inherits(NumberKeyframeTrack, _KeyframeTrack3);\n\n  var _super105 = _createSuper(NumberKeyframeTrack);\n\n  function NumberKeyframeTrack() {\n    _classCallCheck(this, NumberKeyframeTrack);\n\n    return _super105.apply(this, arguments);\n  }\n\n  return NumberKeyframeTrack;\n}(KeyframeTrack);\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nvar QuaternionLinearInterpolant = /*#__PURE__*/function (_Interpolant4) {\n  _inherits(QuaternionLinearInterpolant, _Interpolant4);\n\n  var _super106 = _createSuper(QuaternionLinearInterpolant);\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    _classCallCheck(this, QuaternionLinearInterpolant);\n\n    return _super106.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  _createClass(QuaternionLinearInterpolant, [{\n    key: \"interpolate_\",\n    value: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          alpha = (t - t0) / (t1 - t0);\n      var offset = i1 * stride;\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  }]);\n\n  return QuaternionLinearInterpolant;\n}(Interpolant);\n/**\n * A Track of quaternion keyframe values.\n */\n\n\nvar QuaternionKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack4) {\n  _inherits(QuaternionKeyframeTrack, _KeyframeTrack4);\n\n  var _super107 = _createSuper(QuaternionKeyframeTrack);\n\n  function QuaternionKeyframeTrack() {\n    _classCallCheck(this, QuaternionKeyframeTrack);\n\n    return _super107.apply(this, arguments);\n  }\n\n  _createClass(QuaternionKeyframeTrack, [{\n    key: \"InterpolantFactoryMethodLinear\",\n    value: function InterpolantFactoryMethodLinear(result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    }\n  }]);\n\n  return QuaternionKeyframeTrack;\n}(KeyframeTrack);\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n/**\n * A Track that interpolates Strings\n */\n\nvar StringKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack5) {\n  _inherits(StringKeyframeTrack, _KeyframeTrack5);\n\n  var _super108 = _createSuper(StringKeyframeTrack);\n\n  function StringKeyframeTrack() {\n    _classCallCheck(this, StringKeyframeTrack);\n\n    return _super108.apply(this, arguments);\n  }\n\n  return StringKeyframeTrack;\n}(KeyframeTrack);\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n/**\n * A Track of vectored keyframe values.\n */\n\nvar VectorKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack6) {\n  _inherits(VectorKeyframeTrack, _KeyframeTrack6);\n\n  var _super109 = _createSuper(VectorKeyframeTrack);\n\n  function VectorKeyframeTrack() {\n    _classCallCheck(this, VectorKeyframeTrack);\n\n    return _super109.apply(this, arguments);\n  }\n\n  return VectorKeyframeTrack;\n}(KeyframeTrack);\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nvar AnimationClip = /*#__PURE__*/function () {\n  function AnimationClip(name) {\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var tracks = arguments.length > 2 ? arguments[2] : undefined;\n    var blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : NormalAnimationBlendMode;\n\n    _classCallCheck(this, AnimationClip);\n\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration;\n    this.blendMode = blendMode;\n    this.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  _createClass(AnimationClip, [{\n    key: \"resetDuration\",\n    value: function resetDuration() {\n      var tracks = this.tracks;\n      var duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n      return this;\n    }\n  }, {\n    key: \"trim\",\n    value: function trim() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var valid = true;\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        valid = valid && this.tracks[i].validate();\n      }\n\n      return valid;\n    }\n  }, {\n    key: \"optimize\",\n    value: function optimize() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var tracks = [];\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        tracks.push(this.tracks[i].clone());\n      }\n\n      return new this.constructor(this.name, this.duration, tracks, this.blendMode);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.constructor.toJSON(this);\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n      }\n\n      var clip = new this(json.name, json.duration, tracks, json.blendMode);\n      clip.uuid = json.uuid;\n      return clip;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks,\n        'uuid': clip.uuid,\n        'blendMode': clip.blendMode\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    }\n  }, {\n    key: \"CreateFromMorphTargetSequence\",\n    value: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new this(name, -1, tracks);\n    }\n  }, {\n    key: \"findByName\",\n    value: function findByName(objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"CreateClipsFromMorphTargetSequences\",\n    value: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var _name4 in animationToMorphTargets) {\n        clips.push(this.CreateFromMorphTargetSequence(_name4, animationToMorphTargets[_name4], fps, noLoop));\n      }\n\n      return clips;\n    } // parse the animation.hierarchy format\n\n  }, {\n    key: \"parseAnimation\",\n    value: function parseAnimation(animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default';\n      var fps = animation.fps || 30;\n      var blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n          var k = void 0;\n\n          for (k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var _m = 0; _m !== animationKeys[k].morphTargets.length; ++_m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * fps;\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new this(clipName, duration, tracks, blendMode);\n      return clip;\n    }\n  }]);\n\n  return AnimationClip;\n}();\n\nfunction getTrackTypeForValueTypeName(typeName) {\n  switch (typeName.toLowerCase()) {\n    case 'scalar':\n    case 'double':\n    case 'float':\n    case 'number':\n    case 'integer':\n      return NumberKeyframeTrack;\n\n    case 'vector':\n    case 'vector2':\n    case 'vector3':\n    case 'vector4':\n      return VectorKeyframeTrack;\n\n    case 'color':\n      return ColorKeyframeTrack;\n\n    case 'quaternion':\n      return QuaternionKeyframeTrack;\n\n    case 'bool':\n    case 'boolean':\n      return BooleanKeyframeTrack;\n\n    case 'string':\n      return StringKeyframeTrack;\n  }\n\n  throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n}\n\nfunction parseKeyframeTrack(json) {\n  if (json.type === undefined) {\n    throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n  }\n\n  var trackType = getTrackTypeForValueTypeName(json.type);\n\n  if (json.times === undefined) {\n    var times = [],\n        values = [];\n    AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n    json.times = times;\n    json.values = values;\n  } // derived classes can define a static parse method\n\n\n  if (trackType.parse !== undefined) {\n    return trackType.parse(json);\n  } else {\n    // by default, we assume a constructor compatible with the base\n    return new trackType(json.name, json.times, json.values, json.interpolation);\n  }\n}\n\nvar Cache = {\n  enabled: false,\n  files: {},\n  add: function add(key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function get(key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function remove(key) {\n    delete this.files[key];\n  },\n  clear: function clear() {\n    this.files = {};\n  }\n};\n\nvar LoadingManager = function LoadingManager(onLoad, onProgress, onError) {\n  _classCallCheck(this, LoadingManager);\n\n  var scope = this;\n  var isLoading = false;\n  var itemsLoaded = 0;\n  var itemsTotal = 0;\n  var urlModifier = undefined;\n  var handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n  // in the constructor\n\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n\n  this.resolveURL = function (url) {\n    if (urlModifier) {\n      return urlModifier(url);\n    }\n\n    return url;\n  };\n\n  this.setURLModifier = function (transform) {\n    urlModifier = transform;\n    return this;\n  };\n\n  this.addHandler = function (regex, loader) {\n    handlers.push(regex, loader);\n    return this;\n  };\n\n  this.removeHandler = function (regex) {\n    var index = handlers.indexOf(regex);\n\n    if (index !== -1) {\n      handlers.splice(index, 2);\n    }\n\n    return this;\n  };\n\n  this.getHandler = function (file) {\n    for (var i = 0, l = handlers.length; i < l; i += 2) {\n      var regex = handlers[i];\n      var loader = handlers[i + 1];\n      if (regex.global) regex.lastIndex = 0; // see #17920\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  };\n};\n\nvar DefaultLoadingManager = new LoadingManager();\n\nvar Loader = /*#__PURE__*/function () {\n  function Loader(manager) {\n    _classCallCheck(this, Loader);\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.crossOrigin = 'anonymous';\n    this.withCredentials = false;\n    this.path = '';\n    this.resourcePath = '';\n    this.requestHeader = {};\n  }\n\n  _createClass(Loader, [{\n    key: \"load\",\n    value: function load() {}\n  }, {\n    key: \"loadAsync\",\n    value: function loadAsync(url, onProgress) {\n      var scope = this;\n      return new Promise(function (resolve, reject) {\n        scope.load(url, resolve, onProgress, reject);\n      });\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {}\n  }, {\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(crossOrigin) {\n      this.crossOrigin = crossOrigin;\n      return this;\n    }\n  }, {\n    key: \"setWithCredentials\",\n    value: function setWithCredentials(value) {\n      this.withCredentials = value;\n      return this;\n    }\n  }, {\n    key: \"setPath\",\n    value: function setPath(path) {\n      this.path = path;\n      return this;\n    }\n  }, {\n    key: \"setResourcePath\",\n    value: function setResourcePath(resourcePath) {\n      this.resourcePath = resourcePath;\n      return this;\n    }\n  }, {\n    key: \"setRequestHeader\",\n    value: function setRequestHeader(requestHeader) {\n      this.requestHeader = requestHeader;\n      return this;\n    }\n  }]);\n\n  return Loader;\n}();\n\nvar loading = {};\n\nvar FileLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(FileLoader, _Loader);\n\n  var _super110 = _createSuper(FileLoader);\n\n  function FileLoader(manager) {\n    _classCallCheck(this, FileLoader);\n\n    return _super110.call(this, manager);\n  }\n\n  _createClass(FileLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this92 = this;\n\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        this.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n\n          _this92.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check if request is duplicate\n\n\n      if (loading[url] !== undefined) {\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        return;\n      } // Initialise array for duplicate requests\n\n\n      loading[url] = [];\n      loading[url].push({\n        onLoad: onLoad,\n        onProgress: onProgress,\n        onError: onError\n      }); // create request\n\n      var req = new Request(url, {\n        headers: new Headers(this.requestHeader),\n        credentials: this.withCredentials ? 'include' : 'same-origin' // An abort controller could be added within a future PR\n\n      }); // record states ( avoid data race )\n\n      var mimeType = this.mimeType;\n      var responseType = this.responseType; // start the fetch\n\n      fetch(req).then(function (response) {\n        if (response.status === 200 || response.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n          if (response.status === 0) {\n            console.warn('THREE.FileLoader: HTTP Status 0 received.');\n          } // Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\n          if (typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined) {\n            return response;\n          }\n\n          var callbacks = loading[url];\n          var reader = response.body.getReader();\n          var contentLength = response.headers.get('Content-Length');\n          var total = contentLength ? parseInt(contentLength) : 0;\n          var lengthComputable = total !== 0;\n          var loaded = 0; // periodically read data into the new stream tracking while download progress\n\n          var stream = new ReadableStream({\n            start: function start(controller) {\n              readData();\n\n              function readData() {\n                reader.read().then(function (_ref2) {\n                  var done = _ref2.done,\n                      value = _ref2.value;\n\n                  if (done) {\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n                    var event = new ProgressEvent('progress', {\n                      lengthComputable: lengthComputable,\n                      loaded: loaded,\n                      total: total\n                    });\n\n                    for (var i = 0, il = callbacks.length; i < il; i++) {\n                      var callback = callbacks[i];\n                      if (callback.onProgress) callback.onProgress(event);\n                    }\n\n                    controller.enqueue(value);\n                    readData();\n                  }\n                });\n              }\n            }\n          });\n          return new Response(stream);\n        } else {\n          throw Error(\"fetch for \\\"\".concat(response.url, \"\\\" responded with \").concat(response.status, \": \").concat(response.statusText));\n        }\n      }).then(function (response) {\n        switch (responseType) {\n          case 'arraybuffer':\n            return response.arrayBuffer();\n\n          case 'blob':\n            return response.blob();\n\n          case 'document':\n            return response.text().then(function (text) {\n              var parser = new DOMParser();\n              return parser.parseFromString(text, mimeType);\n            });\n\n          case 'json':\n            return response.json();\n\n          default:\n            if (mimeType === undefined) {\n              return response.text();\n            } else {\n              // sniff encoding\n              var re = /charset=\"?([^;\"\\s]*)\"?/i;\n              var exec = re.exec(mimeType);\n              var label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n              var decoder = new TextDecoder(label);\n              return response.arrayBuffer().then(function (ab) {\n                return decoder.decode(ab);\n              });\n            }\n\n        }\n      }).then(function (data) {\n        // Add to cache only on HTTP success, so that we do not cache\n        // error response bodies as proper responses to requests.\n        Cache.add(url, data);\n        var callbacks = loading[url];\n        delete loading[url];\n\n        for (var i = 0, il = callbacks.length; i < il; i++) {\n          var callback = callbacks[i];\n          if (callback.onLoad) callback.onLoad(data);\n        }\n      }).catch(function (err) {\n        // Abort errors and other errors are handled the same\n        var callbacks = loading[url];\n\n        if (callbacks === undefined) {\n          // When onLoad was called and url was deleted in `loading`\n          _this92.manager.itemError(url);\n\n          throw err;\n        }\n\n        delete loading[url];\n\n        for (var i = 0, il = callbacks.length; i < il; i++) {\n          var callback = callbacks[i];\n          if (callback.onError) callback.onError(err);\n        }\n\n        _this92.manager.itemError(url);\n      }).finally(function () {\n        _this92.manager.itemEnd(url);\n      });\n      this.manager.itemStart(url);\n    }\n  }, {\n    key: \"setResponseType\",\n    value: function setResponseType(value) {\n      this.responseType = value;\n      return this;\n    }\n  }, {\n    key: \"setMimeType\",\n    value: function setMimeType(value) {\n      this.mimeType = value;\n      return this;\n    }\n  }]);\n\n  return FileLoader;\n}(Loader);\n\nvar AnimationLoader = /*#__PURE__*/function (_Loader2) {\n  _inherits(AnimationLoader, _Loader2);\n\n  var _super111 = _createSuper(AnimationLoader);\n\n  function AnimationLoader(manager) {\n    _classCallCheck(this, AnimationLoader);\n\n    return _super111.call(this, manager);\n  }\n\n  _createClass(AnimationLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      return animations;\n    }\n  }]);\n\n  return AnimationLoader;\n}(Loader);\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\n\nvar CompressedTextureLoader = /*#__PURE__*/function (_Loader3) {\n  _inherits(CompressedTextureLoader, _Loader3);\n\n  var _super112 = _createSuper(CompressedTextureLoader);\n\n  function CompressedTextureLoader(manager) {\n    _classCallCheck(this, CompressedTextureLoader);\n\n    return _super112.call(this, manager);\n  }\n\n  _createClass(CompressedTextureLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n            texture.image = images;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var _i84 = 0; _i84 < texDatas.mipmapCount; _i84++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + _i84]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n\n            texture.image = images;\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    }\n  }]);\n\n  return CompressedTextureLoader;\n}(Loader);\n\nvar ImageLoader = /*#__PURE__*/function (_Loader4) {\n  _inherits(ImageLoader, _Loader4);\n\n  var _super113 = _createSuper(ImageLoader);\n\n  function ImageLoader(manager) {\n    _classCallCheck(this, ImageLoader);\n\n    return _super113.call(this, manager);\n  }\n\n  _createClass(ImageLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = createElementNS('img');\n\n      function onImageLoad() {\n        removeEventListeners();\n        Cache.add(url, this);\n        if (onLoad) onLoad(this);\n        scope.manager.itemEnd(url);\n      }\n\n      function onImageError(event) {\n        removeEventListeners();\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      }\n\n      function removeEventListeners() {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n      }\n\n      image.addEventListener('load', onImageLoad, false);\n      image.addEventListener('error', onImageError, false);\n\n      if (url.slice(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    }\n  }]);\n\n  return ImageLoader;\n}(Loader);\n\nvar CubeTextureLoader = /*#__PURE__*/function (_Loader5) {\n  _inherits(CubeTextureLoader, _Loader5);\n\n  var _super114 = _createSuper(CubeTextureLoader);\n\n  function CubeTextureLoader(manager) {\n    _classCallCheck(this, CubeTextureLoader);\n\n    return _super114.call(this, manager);\n  }\n\n  _createClass(CubeTextureLoader, [{\n    key: \"load\",\n    value: function load(urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    }\n  }]);\n\n  return CubeTextureLoader;\n}(Loader);\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\n\nvar DataTextureLoader = /*#__PURE__*/function (_Loader6) {\n  _inherits(DataTextureLoader, _Loader6);\n\n  var _super115 = _createSuper(DataTextureLoader);\n\n  function DataTextureLoader(manager) {\n    _classCallCheck(this, DataTextureLoader);\n\n    return _super115.call(this, manager);\n  }\n\n  _createClass(DataTextureLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      loader.setPath(this.path);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (buffer) {\n        var texData = scope.parse(buffer);\n        if (!texData) return;\n\n        if (texData.image !== undefined) {\n          texture.image = texData.image;\n        } else if (texData.data !== undefined) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n        texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n        texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n        if (texData.encoding !== undefined) {\n          texture.encoding = texData.encoding;\n        }\n\n        if (texData.flipY !== undefined) {\n          texture.flipY = texData.flipY;\n        }\n\n        if (texData.format !== undefined) {\n          texture.format = texData.format;\n        }\n\n        if (texData.type !== undefined) {\n          texture.type = texData.type;\n        }\n\n        if (texData.mipmaps !== undefined) {\n          texture.mipmaps = texData.mipmaps;\n          texture.minFilter = LinearMipmapLinearFilter; // presumably...\n        }\n\n        if (texData.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        if (texData.generateMipmaps !== undefined) {\n          texture.generateMipmaps = texData.generateMipmaps;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    }\n  }]);\n\n  return DataTextureLoader;\n}(Loader);\n\nvar TextureLoader = /*#__PURE__*/function (_Loader7) {\n  _inherits(TextureLoader, _Loader7);\n\n  var _super116 = _createSuper(TextureLoader);\n\n  function TextureLoader(manager) {\n    _classCallCheck(this, TextureLoader);\n\n    return _super116.call(this, manager);\n  }\n\n  _createClass(TextureLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var texture = new Texture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        texture.image = image;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    }\n  }]);\n\n  return TextureLoader;\n}(Loader);\n\nvar Light = /*#__PURE__*/function (_Object3D11) {\n  _inherits(Light, _Object3D11);\n\n  var _super117 = _createSuper(Light);\n\n  function Light(color) {\n    var _this93;\n\n    var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    _classCallCheck(this, Light);\n\n    _this93 = _super117.call(this);\n    _this93.isLight = true;\n    _this93.type = 'Light';\n    _this93.color = new Color(color);\n    _this93.intensity = intensity;\n    return _this93;\n  }\n\n  _createClass(Light, [{\n    key: \"dispose\",\n    value: function dispose() {// Empty here in base class; some subclasses override.\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(Light.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(Light.prototype), \"toJSON\", this).call(this, meta);\n\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n      return data;\n    }\n  }]);\n\n  return Light;\n}(Object3D);\n\nvar HemisphereLight = /*#__PURE__*/function (_Light) {\n  _inherits(HemisphereLight, _Light);\n\n  var _super118 = _createSuper(HemisphereLight);\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    var _this94;\n\n    _classCallCheck(this, HemisphereLight);\n\n    _this94 = _super118.call(this, skyColor, intensity);\n    _this94.isHemisphereLight = true;\n    _this94.type = 'HemisphereLight';\n\n    _this94.position.copy(Object3D.DefaultUp);\n\n    _this94.updateMatrix();\n\n    _this94.groundColor = new Color(groundColor);\n    return _this94;\n  }\n\n  _createClass(HemisphereLight, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(HemisphereLight.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  }]);\n\n  return HemisphereLight;\n}(Light);\n\nvar _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\nvar _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\nvar _lookTarget$1 = /*@__PURE__*/new Vector3();\n\nvar LightShadow = /*#__PURE__*/function () {\n  function LightShadow(camera) {\n    _classCallCheck(this, LightShadow);\n\n    this.camera = camera;\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.blurSamples = 8;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n\n  _createClass(LightShadow, [{\n    key: \"getViewportCount\",\n    value: function getViewportCount() {\n      return this._viewportCount;\n    }\n  }, {\n    key: \"getFrustum\",\n    value: function getFrustum() {\n      return this._frustum;\n    }\n  }, {\n    key: \"updateMatrices\",\n    value: function updateMatrices(light) {\n      var shadowCamera = this.camera;\n      var shadowMatrix = this.matrix;\n\n      _lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld$1);\n\n      _lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n      shadowCamera.lookAt(_lookTarget$1);\n      shadowCamera.updateMatrixWorld();\n\n      _projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n      this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n      shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n    }\n  }, {\n    key: \"getViewport\",\n    value: function getViewport(viewportIndex) {\n      return this._viewports[viewportIndex];\n    }\n  }, {\n    key: \"getFrameExtents\",\n    value: function getFrameExtents() {\n      return this._frameExtents;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.map) {\n        this.map.dispose();\n      }\n\n      if (this.mapPass) {\n        this.mapPass.dispose();\n      }\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var object = {};\n      if (this.bias !== 0) object.bias = this.bias;\n      if (this.normalBias !== 0) object.normalBias = this.normalBias;\n      if (this.radius !== 1) object.radius = this.radius;\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  }]);\n\n  return LightShadow;\n}();\n\nvar SpotLightShadow = /*#__PURE__*/function (_LightShadow) {\n  _inherits(SpotLightShadow, _LightShadow);\n\n  var _super119 = _createSuper(SpotLightShadow);\n\n  function SpotLightShadow() {\n    var _this95;\n\n    _classCallCheck(this, SpotLightShadow);\n\n    _this95 = _super119.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n    _this95.isSpotLightShadow = true;\n    _this95.focus = 1;\n    return _this95;\n  }\n\n  _createClass(SpotLightShadow, [{\n    key: \"updateMatrices\",\n    value: function updateMatrices(light) {\n      var camera = this.camera;\n      var fov = RAD2DEG * 2 * light.angle * this.focus;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n\n      _get(_getPrototypeOf(SpotLightShadow.prototype), \"updateMatrices\", this).call(this, light);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(SpotLightShadow.prototype), \"copy\", this).call(this, source);\n\n      this.focus = source.focus;\n      return this;\n    }\n  }]);\n\n  return SpotLightShadow;\n}(LightShadow);\n\nvar SpotLight = /*#__PURE__*/function (_Light2) {\n  _inherits(SpotLight, _Light2);\n\n  var _super120 = _createSuper(SpotLight);\n\n  function SpotLight(color, intensity) {\n    var _this96;\n\n    var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI / 3;\n    var penumbra = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var decay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n    _classCallCheck(this, SpotLight);\n\n    _this96 = _super120.call(this, color, intensity);\n    _this96.isSpotLight = true;\n    _this96.type = 'SpotLight';\n\n    _this96.position.copy(Object3D.DefaultUp);\n\n    _this96.updateMatrix();\n\n    _this96.target = new Object3D();\n    _this96.distance = distance;\n    _this96.angle = angle;\n    _this96.penumbra = penumbra;\n    _this96.decay = decay; // for physically correct lights, should be 2.\n\n    _this96.shadow = new SpotLightShadow();\n    return _this96;\n  }\n\n  _createClass(SpotLight, [{\n    key: \"power\",\n    get: function get() {\n      // compute the light's luminous power (in lumens) from its intensity (in candela)\n      // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n      return this.intensity * Math.PI;\n    },\n    set: function set(power) {\n      // set the light's intensity (in candela) from the desired luminous power (in lumens)\n      this.intensity = power / Math.PI;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.shadow.dispose();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(SpotLight.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }]);\n\n  return SpotLight;\n}(Light);\n\nvar _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\nvar _lightPositionWorld = /*@__PURE__*/new Vector3();\n\nvar _lookTarget = /*@__PURE__*/new Vector3();\n\nvar PointLightShadow = /*#__PURE__*/function (_LightShadow2) {\n  _inherits(PointLightShadow, _LightShadow2);\n\n  var _super121 = _createSuper(PointLightShadow);\n\n  function PointLightShadow() {\n    var _this97;\n\n    _classCallCheck(this, PointLightShadow);\n\n    _this97 = _super121.call(this, new PerspectiveCamera(90, 1, 0.5, 500));\n    _this97.isPointLightShadow = true;\n    _this97._frameExtents = new Vector2(4, 2);\n    _this97._viewportCount = 6;\n    _this97._viewports = [// These viewports map a cube-map onto a 2D texture with the\n    // following orientation:\n    //\n    //  xzXZ\n    //   y Y\n    //\n    // X - Positive x direction\n    // x - Negative x direction\n    // Y - Positive y direction\n    // y - Negative y direction\n    // Z - Positive z direction\n    // z - Negative z direction\n    // positive X\n    new Vector4(2, 1, 1, 1), // negative X\n    new Vector4(0, 1, 1, 1), // positive Z\n    new Vector4(3, 1, 1, 1), // negative Z\n    new Vector4(1, 1, 1, 1), // positive Y\n    new Vector4(3, 0, 1, 1), // negative Y\n    new Vector4(1, 0, 1, 1)];\n    _this97._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    _this97._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n    return _this97;\n  }\n\n  _createClass(PointLightShadow, [{\n    key: \"updateMatrices\",\n    value: function updateMatrices(light) {\n      var viewportIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var camera = this.camera;\n      var shadowMatrix = this.matrix;\n      var far = light.distance || camera.far;\n\n      if (far !== camera.far) {\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      camera.position.copy(_lightPositionWorld);\n\n      _lookTarget.copy(camera.position);\n\n      _lookTarget.add(this._cubeDirections[viewportIndex]);\n\n      camera.up.copy(this._cubeUps[viewportIndex]);\n      camera.lookAt(_lookTarget);\n      camera.updateMatrixWorld();\n      shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n    }\n  }]);\n\n  return PointLightShadow;\n}(LightShadow);\n\nvar PointLight = /*#__PURE__*/function (_Light3) {\n  _inherits(PointLight, _Light3);\n\n  var _super122 = _createSuper(PointLight);\n\n  function PointLight(color, intensity) {\n    var _this98;\n\n    var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var decay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, PointLight);\n\n    _this98 = _super122.call(this, color, intensity);\n    _this98.isPointLight = true;\n    _this98.type = 'PointLight';\n    _this98.distance = distance;\n    _this98.decay = decay; // for physically correct lights, should be 2.\n\n    _this98.shadow = new PointLightShadow();\n    return _this98;\n  }\n\n  _createClass(PointLight, [{\n    key: \"power\",\n    get: function get() {\n      // compute the light's luminous power (in lumens) from its intensity (in candela)\n      // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function set(power) {\n      // set the light's intensity (in candela) from the desired luminous power (in lumens)\n      this.intensity = power / (4 * Math.PI);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.shadow.dispose();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(PointLight.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }]);\n\n  return PointLight;\n}(Light);\n\nvar DirectionalLightShadow = /*#__PURE__*/function (_LightShadow3) {\n  _inherits(DirectionalLightShadow, _LightShadow3);\n\n  var _super123 = _createSuper(DirectionalLightShadow);\n\n  function DirectionalLightShadow() {\n    var _this99;\n\n    _classCallCheck(this, DirectionalLightShadow);\n\n    _this99 = _super123.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n    _this99.isDirectionalLightShadow = true;\n    return _this99;\n  }\n\n  return DirectionalLightShadow;\n}(LightShadow);\n\nvar DirectionalLight = /*#__PURE__*/function (_Light4) {\n  _inherits(DirectionalLight, _Light4);\n\n  var _super124 = _createSuper(DirectionalLight);\n\n  function DirectionalLight(color, intensity) {\n    var _this100;\n\n    _classCallCheck(this, DirectionalLight);\n\n    _this100 = _super124.call(this, color, intensity);\n    _this100.isDirectionalLight = true;\n    _this100.type = 'DirectionalLight';\n\n    _this100.position.copy(Object3D.DefaultUp);\n\n    _this100.updateMatrix();\n\n    _this100.target = new Object3D();\n    _this100.shadow = new DirectionalLightShadow();\n    return _this100;\n  }\n\n  _createClass(DirectionalLight, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.shadow.dispose();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(DirectionalLight.prototype), \"copy\", this).call(this, source);\n\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }]);\n\n  return DirectionalLight;\n}(Light);\n\nvar AmbientLight = /*#__PURE__*/function (_Light5) {\n  _inherits(AmbientLight, _Light5);\n\n  var _super125 = _createSuper(AmbientLight);\n\n  function AmbientLight(color, intensity) {\n    var _this101;\n\n    _classCallCheck(this, AmbientLight);\n\n    _this101 = _super125.call(this, color, intensity);\n    _this101.isAmbientLight = true;\n    _this101.type = 'AmbientLight';\n    return _this101;\n  }\n\n  return AmbientLight;\n}(Light);\n\nvar RectAreaLight = /*#__PURE__*/function (_Light6) {\n  _inherits(RectAreaLight, _Light6);\n\n  var _super126 = _createSuper(RectAreaLight);\n\n  function RectAreaLight(color, intensity) {\n    var _this102;\n\n    var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n\n    _classCallCheck(this, RectAreaLight);\n\n    _this102 = _super126.call(this, color, intensity);\n    _this102.isRectAreaLight = true;\n    _this102.type = 'RectAreaLight';\n    _this102.width = width;\n    _this102.height = height;\n    return _this102;\n  }\n\n  _createClass(RectAreaLight, [{\n    key: \"power\",\n    get: function get() {\n      // compute the light's luminous power (in lumens) from its intensity (in nits)\n      return this.intensity * this.width * this.height * Math.PI;\n    },\n    set: function set(power) {\n      // set the light's intensity (in nits) from the desired luminous power (in lumens)\n      this.intensity = power / (this.width * this.height * Math.PI);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(RectAreaLight.prototype), \"copy\", this).call(this, source);\n\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(RectAreaLight.prototype), \"toJSON\", this).call(this, meta);\n\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  }]);\n\n  return RectAreaLight;\n}(Light);\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n// 3-band SH defined by 9 coefficients\n\n\nvar SphericalHarmonics3 = /*#__PURE__*/function () {\n  function SphericalHarmonics3() {\n    _classCallCheck(this, SphericalHarmonics3);\n\n    this.isSphericalHarmonics3 = true;\n    this.coefficients = [];\n\n    for (var i = 0; i < 9; i++) {\n      this.coefficients.push(new Vector3());\n    }\n  }\n\n  _createClass(SphericalHarmonics3, [{\n    key: \"set\",\n    value: function set(coefficients) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].copy(coefficients[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"zero\",\n    value: function zero() {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].set(0, 0, 0);\n      }\n\n      return this;\n    } // get the radiance in the direction of the normal\n    // target is a Vector3\n\n  }, {\n    key: \"getAt\",\n    value: function getAt(normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n      target.addScaledVector(coeff[1], 0.488603 * y);\n      target.addScaledVector(coeff[2], 0.488603 * z);\n      target.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n      target.addScaledVector(coeff[4], 1.092548 * (x * y));\n      target.addScaledVector(coeff[5], 1.092548 * (y * z));\n      target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n      target.addScaledVector(coeff[7], 1.092548 * (x * z));\n      target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n      return target;\n    } // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n    // target is a Vector3\n    // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n  }, {\n    key: \"getIrradianceAt\",\n    value: function getIrradianceAt(normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n      // band 1\n\n      target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n      target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n      target.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n      target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n      target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n      target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n      target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n      target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n      return target;\n    }\n  }, {\n    key: \"add\",\n    value: function add(sh) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].add(sh.coefficients[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"addScaledSH\",\n    value: function addScaledSH(sh, s) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].addScaledVector(sh.coefficients[i], s);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(s) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].multiplyScalar(s);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(sh, alpha) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].lerp(sh.coefficients[i], alpha);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(sh) {\n      for (var i = 0; i < 9; i++) {\n        if (!this.coefficients[i].equals(sh.coefficients[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(sh) {\n      return this.set(sh.coefficients);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].fromArray(array, offset + i * 3);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].toArray(array, offset + i * 3);\n      }\n\n      return array;\n    } // evaluate the basis functions\n    // shBasis is an Array[ 9 ]\n\n  }], [{\n    key: \"getBasisAt\",\n    value: function getBasisAt(normal, shBasis) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z; // band 0\n\n      shBasis[0] = 0.282095; // band 1\n\n      shBasis[1] = 0.488603 * y;\n      shBasis[2] = 0.488603 * z;\n      shBasis[3] = 0.488603 * x; // band 2\n\n      shBasis[4] = 1.092548 * x * y;\n      shBasis[5] = 1.092548 * y * z;\n      shBasis[6] = 0.315392 * (3 * z * z - 1);\n      shBasis[7] = 1.092548 * x * z;\n      shBasis[8] = 0.546274 * (x * x - y * y);\n    }\n  }]);\n\n  return SphericalHarmonics3;\n}();\n\nvar LightProbe = /*#__PURE__*/function (_Light7) {\n  _inherits(LightProbe, _Light7);\n\n  var _super127 = _createSuper(LightProbe);\n\n  function LightProbe() {\n    var _this103;\n\n    var sh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new SphericalHarmonics3();\n    var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    _classCallCheck(this, LightProbe);\n\n    _this103 = _super127.call(this, undefined, intensity);\n    _this103.isLightProbe = true;\n    _this103.sh = sh;\n    return _this103;\n  }\n\n  _createClass(LightProbe, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LightProbe.prototype), \"copy\", this).call(this, source);\n\n      this.sh.copy(source.sh);\n      return this;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n      this.sh.fromArray(json.sh);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var data = _get(_getPrototypeOf(LightProbe.prototype), \"toJSON\", this).call(this, meta);\n\n      data.object.sh = this.sh.toArray();\n      return data;\n    }\n  }]);\n\n  return LightProbe;\n}(Light);\n\nvar MaterialLoader = /*#__PURE__*/function (_Loader8) {\n  _inherits(MaterialLoader, _Loader8);\n\n  var _super128 = _createSuper(MaterialLoader);\n\n  function MaterialLoader(manager) {\n    var _this104;\n\n    _classCallCheck(this, MaterialLoader);\n\n    _this104 = _super128.call(this, manager);\n    _this104.textures = {};\n    return _this104;\n  }\n\n  _createClass(MaterialLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = MaterialLoader.createMaterialFromType(json.type);\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.sheen !== undefined) material.sheen = json.sheen;\n      if (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n      if (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n      if (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n      if (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n      if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n      if (json.iridescence !== undefined) material.iridescence = json.iridescence;\n      if (json.iridescenceIOR !== undefined) material.iridescenceIOR = json.iridescenceIOR;\n      if (json.iridescenceThicknessRange !== undefined) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n      if (json.transmission !== undefined) material.transmission = json.transmission;\n      if (json.thickness !== undefined) material.thickness = json.thickness;\n      if (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n      if (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n      if (json.fog !== undefined) material.fog = json.fog;\n      if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.combine !== undefined) material.combine = json.combine;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n      if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n      if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n      if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n      if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n      if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n      if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n      if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n      if (json.rotation !== undefined) material.rotation = json.rotation;\n      if (json.linewidth !== 1) material.linewidth = json.linewidth;\n      if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n      if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n      if (json.scale !== undefined) material.scale = json.scale;\n      if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n      if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n      if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n      if (json.dithering !== undefined) material.dithering = json.dithering;\n      if (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n      if (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n      if (json.visible !== undefined) material.visible = json.visible;\n      if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n      if (json.userData !== undefined) material.userData = json.userData;\n\n      if (json.vertexColors !== undefined) {\n        if (typeof json.vertexColors === 'number') {\n          material.vertexColors = json.vertexColors > 0 ? true : false;\n        } else {\n          material.vertexColors = json.vertexColors;\n        }\n      } // Shader Material\n\n\n      if (json.uniforms !== undefined) {\n        for (var name in json.uniforms) {\n          var uniform = json.uniforms[name];\n          material.uniforms[name] = {};\n\n          switch (uniform.type) {\n            case 't':\n              material.uniforms[name].value = getTexture(uniform.value);\n              break;\n\n            case 'c':\n              material.uniforms[name].value = new Color().setHex(uniform.value);\n              break;\n\n            case 'v2':\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n              break;\n\n            case 'v3':\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n              break;\n\n            case 'v4':\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n              break;\n\n            case 'm3':\n              material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n              break;\n\n            case 'm4':\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n              break;\n\n            default:\n              material.uniforms[name].value = uniform.value;\n          }\n        }\n      }\n\n      if (json.defines !== undefined) material.defines = json.defines;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n      if (json.extensions !== undefined) {\n        for (var key in json.extensions) {\n          material.extensions[key] = json.extensions[key];\n        }\n      } // Deprecated\n\n\n      if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n      // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = getTexture(json.map);\n      if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n      if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n      if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n      if (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n      if (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n      if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n      if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n      if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n      if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n      if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n      if (json.iridescenceMap !== undefined) material.iridescenceMap = getTexture(json.iridescenceMap);\n      if (json.iridescenceThicknessMap !== undefined) material.iridescenceThicknessMap = getTexture(json.iridescenceThicknessMap);\n      if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n      if (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n      if (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n      if (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n      return material;\n    }\n  }, {\n    key: \"setTextures\",\n    value: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  }], [{\n    key: \"createMaterialFromType\",\n    value: function createMaterialFromType(type) {\n      var materialLib = {\n        ShadowMaterial: ShadowMaterial,\n        SpriteMaterial: SpriteMaterial,\n        RawShaderMaterial: RawShaderMaterial,\n        ShaderMaterial: ShaderMaterial,\n        PointsMaterial: PointsMaterial,\n        MeshPhysicalMaterial: MeshPhysicalMaterial,\n        MeshStandardMaterial: MeshStandardMaterial,\n        MeshPhongMaterial: MeshPhongMaterial,\n        MeshToonMaterial: MeshToonMaterial,\n        MeshNormalMaterial: MeshNormalMaterial,\n        MeshLambertMaterial: MeshLambertMaterial,\n        MeshDepthMaterial: MeshDepthMaterial,\n        MeshDistanceMaterial: MeshDistanceMaterial,\n        MeshBasicMaterial: MeshBasicMaterial,\n        MeshMatcapMaterial: MeshMatcapMaterial,\n        LineDashedMaterial: LineDashedMaterial,\n        LineBasicMaterial: LineBasicMaterial,\n        Material: Material\n      };\n      return new materialLib[type]();\n    }\n  }]);\n\n  return MaterialLoader;\n}(Loader);\n\nvar LoaderUtils = /*#__PURE__*/function () {\n  function LoaderUtils() {\n    _classCallCheck(this, LoaderUtils);\n  }\n\n  _createClass(LoaderUtils, null, [{\n    key: \"decodeText\",\n    value: function decodeText(array) {\n      if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder().decode(array);\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n      var s = '';\n\n      for (var i = 0, il = array.length; i < il; i++) {\n        // Implicitly assumes little-endian.\n        s += String.fromCharCode(array[i]);\n      }\n\n      try {\n        // merges multi-byte utf-8 characters.\n        return decodeURIComponent(escape(s));\n      } catch (e) {\n        // see #16358\n        return s;\n      }\n    }\n  }, {\n    key: \"extractUrlBase\",\n    value: function extractUrlBase(url) {\n      var index = url.lastIndexOf('/');\n      if (index === -1) return './';\n      return url.slice(0, index + 1);\n    }\n  }, {\n    key: \"resolveURL\",\n    value: function resolveURL(url, path) {\n      // Invalid URL\n      if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n      if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n        path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n      } // Absolute URL http://,https://,//\n\n\n      if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n      if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n      if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n      return path + url;\n    }\n  }]);\n\n  return LoaderUtils;\n}();\n\nvar InstancedBufferGeometry = /*#__PURE__*/function (_BufferGeometry16) {\n  _inherits(InstancedBufferGeometry, _BufferGeometry16);\n\n  var _super129 = _createSuper(InstancedBufferGeometry);\n\n  function InstancedBufferGeometry() {\n    var _this105;\n\n    _classCallCheck(this, InstancedBufferGeometry);\n\n    _this105 = _super129.call(this);\n    _this105.isInstancedBufferGeometry = true;\n    _this105.type = 'InstancedBufferGeometry';\n    _this105.instanceCount = Infinity;\n    return _this105;\n  }\n\n  _createClass(InstancedBufferGeometry, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(InstancedBufferGeometry.prototype), \"copy\", this).call(this, source);\n\n      this.instanceCount = source.instanceCount;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(InstancedBufferGeometry.prototype), \"toJSON\", this).call(this, this);\n\n      data.instanceCount = this.instanceCount;\n      data.isInstancedBufferGeometry = true;\n      return data;\n    }\n  }]);\n\n  return InstancedBufferGeometry;\n}(BufferGeometry);\n\nvar BufferGeometryLoader = /*#__PURE__*/function (_Loader9) {\n  _inherits(BufferGeometryLoader, _Loader9);\n\n  var _super130 = _createSuper(BufferGeometryLoader);\n\n  function BufferGeometryLoader(manager) {\n    _classCallCheck(this, BufferGeometryLoader);\n\n    return _super130.call(this, manager);\n  }\n\n  _createClass(BufferGeometryLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var interleavedBufferMap = {};\n      var arrayBufferMap = {};\n\n      function getInterleavedBuffer(json, uuid) {\n        if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n        var interleavedBuffers = json.interleavedBuffers;\n        var interleavedBuffer = interleavedBuffers[uuid];\n        var buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n        var array = getTypedArray(interleavedBuffer.type, buffer);\n        var ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n        ib.uuid = interleavedBuffer.uuid;\n        interleavedBufferMap[uuid] = ib;\n        return ib;\n      }\n\n      function getArrayBuffer(json, uuid) {\n        if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n        var arrayBuffers = json.arrayBuffers;\n        var arrayBuffer = arrayBuffers[uuid];\n        var ab = new Uint32Array(arrayBuffer).buffer;\n        arrayBufferMap[uuid] = ab;\n        return ab;\n      }\n\n      var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = getTypedArray(index.type, index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var bufferAttribute = void 0;\n\n        if (attribute.isInterleavedBufferAttribute) {\n          var interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n          bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n        } else {\n          var _typedArray = getTypedArray(attribute.type, attribute.array);\n\n          var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n          bufferAttribute = new bufferAttributeConstr(_typedArray, attribute.itemSize, attribute.normalized);\n        }\n\n        if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n        if (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n        if (attribute.updateRange !== undefined) {\n          bufferAttribute.updateRange.offset = attribute.updateRange.offset;\n          bufferAttribute.updateRange.count = attribute.updateRange.count;\n        }\n\n        geometry.setAttribute(key, bufferAttribute);\n      }\n\n      var morphAttributes = json.data.morphAttributes;\n\n      if (morphAttributes) {\n        for (var _key3 in morphAttributes) {\n          var attributeArray = morphAttributes[_key3];\n          var array = [];\n\n          for (var i = 0, il = attributeArray.length; i < il; i++) {\n            var _attribute3 = attributeArray[i];\n\n            var _bufferAttribute = void 0;\n\n            if (_attribute3.isInterleavedBufferAttribute) {\n              var _interleavedBuffer = getInterleavedBuffer(json.data, _attribute3.data);\n\n              _bufferAttribute = new InterleavedBufferAttribute(_interleavedBuffer, _attribute3.itemSize, _attribute3.offset, _attribute3.normalized);\n            } else {\n              var _typedArray2 = getTypedArray(_attribute3.type, _attribute3.array);\n\n              _bufferAttribute = new BufferAttribute(_typedArray2, _attribute3.itemSize, _attribute3.normalized);\n            }\n\n            if (_attribute3.name !== undefined) _bufferAttribute.name = _attribute3.name;\n            array.push(_bufferAttribute);\n          }\n\n          geometry.morphAttributes[_key3] = array;\n        }\n      }\n\n      var morphTargetsRelative = json.data.morphTargetsRelative;\n\n      if (morphTargetsRelative) {\n        geometry.morphTargetsRelative = true;\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var _i85 = 0, n = groups.length; _i85 !== n; ++_i85) {\n          var group = groups[_i85];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      if (json.name) geometry.name = json.name;\n      if (json.userData) geometry.userData = json.userData;\n      return geometry;\n    }\n  }]);\n\n  return BufferGeometryLoader;\n}(Loader);\n\nvar ObjectLoader = /*#__PURE__*/function (_Loader10) {\n  _inherits(ObjectLoader, _Loader10);\n\n  var _super131 = _createSuper(ObjectLoader);\n\n  function ObjectLoader(manager) {\n    _classCallCheck(this, ObjectLoader);\n\n    return _super131.call(this, manager);\n  }\n\n  _createClass(ObjectLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadAsync\",\n    value: function () {\n      var _loadAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, onProgress) {\n        var scope, path, loader, text, json, metadata;\n        return _regeneratorRuntime.wrap(function _callee2$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                scope = this;\n                path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n                this.resourcePath = this.resourcePath || path;\n                loader = new FileLoader(this.manager);\n                loader.setPath(this.path);\n                loader.setRequestHeader(this.requestHeader);\n                loader.setWithCredentials(this.withCredentials);\n                _context9.next = 9;\n                return loader.loadAsync(url, onProgress);\n\n              case 9:\n                text = _context9.sent;\n                json = JSON.parse(text);\n                metadata = json.metadata;\n\n                if (!(metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry')) {\n                  _context9.next = 14;\n                  break;\n                }\n\n                throw new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\n              case 14:\n                _context9.next = 16;\n                return scope.parseAsync(json);\n\n              case 16:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 17:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadAsync(_x7, _x8) {\n        return _loadAsync.apply(this, arguments);\n      }\n\n      return loadAsync;\n    }()\n  }, {\n    key: \"parse\",\n    value: function parse(json, onLoad) {\n      var animations = this.parseAnimations(json.animations);\n      var shapes = this.parseShapes(json.shapes);\n      var geometries = this.parseGeometries(json.geometries, shapes);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials, textures, animations);\n      var skeletons = this.parseSkeletons(json.skeletons, object);\n      this.bindSkeletons(object, skeletons); //\n\n      if (onLoad !== undefined) {\n        var hasImages = false;\n\n        for (var uuid in images) {\n          if (images[uuid].data instanceof HTMLImageElement) {\n            hasImages = true;\n            break;\n          }\n        }\n\n        if (hasImages === false) onLoad(object);\n      }\n\n      return object;\n    }\n  }, {\n    key: \"parseAsync\",\n    value: function () {\n      var _parseAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(json) {\n        var animations, shapes, geometries, images, textures, materials, object, skeletons;\n        return _regeneratorRuntime.wrap(function _callee3$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                animations = this.parseAnimations(json.animations);\n                shapes = this.parseShapes(json.shapes);\n                geometries = this.parseGeometries(json.geometries, shapes);\n                _context10.next = 5;\n                return this.parseImagesAsync(json.images);\n\n              case 5:\n                images = _context10.sent;\n                textures = this.parseTextures(json.textures, images);\n                materials = this.parseMaterials(json.materials, textures);\n                object = this.parseObject(json.object, geometries, materials, textures, animations);\n                skeletons = this.parseSkeletons(json.skeletons, object);\n                this.bindSkeletons(object, skeletons);\n                return _context10.abrupt(\"return\", object);\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function parseAsync(_x9) {\n        return _parseAsync.apply(this, arguments);\n      }\n\n      return parseAsync;\n    }()\n  }, {\n    key: \"parseShapes\",\n    value: function parseShapes(json) {\n      var shapes = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var shape = new Shape().fromJSON(json[i]);\n          shapes[shape.uuid] = shape;\n        }\n      }\n\n      return shapes;\n    }\n  }, {\n    key: \"parseSkeletons\",\n    value: function parseSkeletons(json, object) {\n      var skeletons = {};\n      var bones = {}; // generate bone lookup table\n\n      object.traverse(function (child) {\n        if (child.isBone) bones[child.uuid] = child;\n      }); // create skeletons\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var skeleton = new Skeleton().fromJSON(json[i], bones);\n          skeletons[skeleton.uuid] = skeleton;\n        }\n      }\n\n      return skeletons;\n    }\n  }, {\n    key: \"parseGeometries\",\n    value: function parseGeometries(json, shapes) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry = void 0;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'BufferGeometry':\n            case 'InstancedBufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              console.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n              break;\n\n            default:\n              if (data.type in Geometries) {\n                geometry = Geometries[data.type].fromJSON(data, shapes);\n              } else {\n                console.warn(\"THREE.ObjectLoader: Unsupported geometry type \\\"\".concat(data.type, \"\\\"\"));\n              }\n\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    }\n  }, {\n    key: \"parseMaterials\",\n    value: function parseMaterials(json, textures) {\n      var cache = {}; // MultiMaterial\n\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              var material = data.materials[j];\n\n              if (cache[material.uuid] === undefined) {\n                cache[material.uuid] = loader.parse(material);\n              }\n\n              array.push(cache[material.uuid]);\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            if (cache[data.uuid] === undefined) {\n              cache[data.uuid] = loader.parse(data);\n            }\n\n            materials[data.uuid] = cache[data.uuid];\n          }\n        }\n      }\n\n      return materials;\n    }\n  }, {\n    key: \"parseAnimations\",\n    value: function parseAnimations(json) {\n      var animations = {};\n\n      if (json !== undefined) {\n        for (var i = 0; i < json.length; i++) {\n          var data = json[i];\n          var clip = AnimationClip.parse(data);\n          animations[clip.uuid] = clip;\n        }\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"parseImages\",\n    value: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n      var loader;\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        });\n      }\n\n      function deserializeImage(image) {\n        if (typeof image === 'string') {\n          var url = image;\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n          return loadImage(path);\n        } else {\n          if (image.data) {\n            return {\n              data: getTypedArray(image.type, image.data),\n              width: image.width,\n              height: image.height\n            };\n          } else {\n            return null;\n          }\n        }\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            var imageArray = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var deserializedImage = deserializeImage(currentUrl);\n\n              if (deserializedImage !== null) {\n                if (deserializedImage instanceof HTMLImageElement) {\n                  imageArray.push(deserializedImage);\n                } else {\n                  // special case: handle array of data textures for cube textures\n                  imageArray.push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n                }\n              }\n            }\n\n            images[image.uuid] = new Source(imageArray);\n          } else {\n            // load single image\n            var _deserializedImage = deserializeImage(image.url);\n\n            images[image.uuid] = new Source(_deserializedImage);\n          }\n        }\n      }\n\n      return images;\n    }\n  }, {\n    key: \"parseImagesAsync\",\n    value: function () {\n      var _parseImagesAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(json) {\n        var scope, images, loader, deserializeImage, _deserializeImage, i, il, image, url, imageArray, j, jl, currentUrl, deserializedImage, _deserializedImage2;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _deserializeImage = function _deserializeImage3() {\n                  _deserializeImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(image) {\n                    var _url, path;\n\n                    return _regeneratorRuntime.wrap(function _callee4$(_context11) {\n                      while (1) {\n                        switch (_context11.prev = _context11.next) {\n                          case 0:\n                            if (!(typeof image === 'string')) {\n                              _context11.next = 8;\n                              break;\n                            }\n\n                            _url = image;\n                            path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(_url) ? _url : scope.resourcePath + _url;\n                            _context11.next = 5;\n                            return loader.loadAsync(path);\n\n                          case 5:\n                            return _context11.abrupt(\"return\", _context11.sent);\n\n                          case 8:\n                            if (!image.data) {\n                              _context11.next = 12;\n                              break;\n                            }\n\n                            return _context11.abrupt(\"return\", {\n                              data: getTypedArray(image.type, image.data),\n                              width: image.width,\n                              height: image.height\n                            });\n\n                          case 12:\n                            return _context11.abrupt(\"return\", null);\n\n                          case 13:\n                          case \"end\":\n                            return _context11.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n                  return _deserializeImage.apply(this, arguments);\n                };\n\n                deserializeImage = function _deserializeImage2(_x11) {\n                  return _deserializeImage.apply(this, arguments);\n                };\n\n                scope = this;\n                images = {};\n\n                if (!(json !== undefined && json.length > 0)) {\n                  _context12.next = 33;\n                  break;\n                }\n\n                loader = new ImageLoader(this.manager);\n                loader.setCrossOrigin(this.crossOrigin);\n                i = 0, il = json.length;\n\n              case 8:\n                if (!(i < il)) {\n                  _context12.next = 33;\n                  break;\n                }\n\n                image = json[i];\n                url = image.url;\n\n                if (!Array.isArray(url)) {\n                  _context12.next = 26;\n                  break;\n                }\n\n                // load array of images e.g CubeTexture\n                imageArray = [];\n                j = 0, jl = url.length;\n\n              case 14:\n                if (!(j < jl)) {\n                  _context12.next = 23;\n                  break;\n                }\n\n                currentUrl = url[j];\n                _context12.next = 18;\n                return deserializeImage(currentUrl);\n\n              case 18:\n                deserializedImage = _context12.sent;\n\n                if (deserializedImage !== null) {\n                  if (deserializedImage instanceof HTMLImageElement) {\n                    imageArray.push(deserializedImage);\n                  } else {\n                    // special case: handle array of data textures for cube textures\n                    imageArray.push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n                  }\n                }\n\n              case 20:\n                j++;\n                _context12.next = 14;\n                break;\n\n              case 23:\n                images[image.uuid] = new Source(imageArray);\n                _context12.next = 30;\n                break;\n\n              case 26:\n                _context12.next = 28;\n                return deserializeImage(image.url);\n\n              case 28:\n                _deserializedImage2 = _context12.sent;\n                images[image.uuid] = new Source(_deserializedImage2);\n\n              case 30:\n                i++;\n                _context12.next = 8;\n                break;\n\n              case 33:\n                return _context12.abrupt(\"return\", images);\n\n              case 34:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function parseImagesAsync(_x10) {\n        return _parseImagesAsync.apply(this, arguments);\n      }\n\n      return parseImagesAsync;\n    }()\n  }, {\n    key: \"parseTextures\",\n    value: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var source = images[data.image];\n          var image = source.data;\n          var texture = void 0;\n\n          if (Array.isArray(image)) {\n            texture = new CubeTexture();\n            if (image.length === 6) texture.needsUpdate = true;\n          } else {\n            if (image && image.data) {\n              texture = new DataTexture();\n            } else {\n              texture = new Texture();\n            }\n\n            if (image) texture.needsUpdate = true; // textures can have undefined image data\n          }\n\n          texture.source = source;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          if (data.userData !== undefined) texture.userData = data.userData;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    }\n  }, {\n    key: \"parseObject\",\n    value: function parseObject(data, geometries, materials, textures, animations) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      function getTexture(uuid) {\n        if (textures[uuid] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined texture', uuid);\n        }\n\n        return textures[uuid];\n      }\n\n      var geometry, material;\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            } else {\n              object.background = getTexture(data.background);\n            }\n          }\n\n          if (data.environment !== undefined) {\n            object.environment = getTexture(data.environment);\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'LightProbe':\n          object = new LightProbe().fromJSON(data);\n          break;\n\n        case 'SkinnedMesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          object = new SkinnedMesh(geometry, material);\n          if (data.bindMode !== undefined) object.bindMode = data.bindMode;\n          if (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n          if (data.skeleton !== undefined) object.skeleton = data.skeleton;\n          break;\n\n        case 'Mesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          object = new Mesh(geometry, material);\n          break;\n\n        case 'InstancedMesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          var count = data.count;\n          var instanceMatrix = data.instanceMatrix;\n          var instanceColor = data.instanceColor;\n          object = new InstancedMesh(geometry, material, count);\n          object.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n          if (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        case 'Bone':\n          object = new Bone();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials, textures, animations));\n        }\n      }\n\n      if (data.animations !== undefined) {\n        var objectAnimations = data.animations;\n\n        for (var _i86 = 0; _i86 < objectAnimations.length; _i86++) {\n          var uuid = objectAnimations[_i86];\n          object.animations.push(animations[uuid]);\n        }\n      }\n\n      if (data.type === 'LOD') {\n        if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    }\n  }, {\n    key: \"bindSkeletons\",\n    value: function bindSkeletons(object, skeletons) {\n      if (Object.keys(skeletons).length === 0) return;\n      object.traverse(function (child) {\n        if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n          var skeleton = skeletons[child.skeleton];\n\n          if (skeleton === undefined) {\n            console.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n          } else {\n            child.bind(skeleton, child.bindMatrix);\n          }\n        }\n      });\n    }\n    /* DEPRECATED */\n\n  }, {\n    key: \"setTexturePath\",\n    value: function setTexturePath(value) {\n      console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n      return this.setResourcePath(value);\n    }\n  }]);\n\n  return ObjectLoader;\n}(Loader);\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nvar ImageBitmapLoader = /*#__PURE__*/function (_Loader11) {\n  _inherits(ImageBitmapLoader, _Loader11);\n\n  var _super132 = _createSuper(ImageBitmapLoader);\n\n  function ImageBitmapLoader(manager) {\n    var _this106;\n\n    _classCallCheck(this, ImageBitmapLoader);\n\n    _this106 = _super132.call(this, manager);\n    _this106.isImageBitmapLoader = true;\n\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    _this106.options = {\n      premultiplyAlpha: 'none'\n    };\n    return _this106;\n  }\n\n  _createClass(ImageBitmapLoader, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = options;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var fetchOptions = {};\n      fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n      fetchOptions.headers = this.requestHeader;\n      fetch(url, fetchOptions).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        return createImageBitmap(blob, Object.assign(scope.options, {\n          colorSpaceConversion: 'none'\n        }));\n      }).then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n        if (onLoad) onLoad(imageBitmap);\n        scope.manager.itemEnd(url);\n      }).catch(function (e) {\n        if (onError) onError(e);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n      scope.manager.itemStart(url);\n    }\n  }]);\n\n  return ImageBitmapLoader;\n}(Loader);\n\nvar _context;\n\nvar AudioContext = {\n  getContext: function getContext() {\n    if (_context === undefined) {\n      _context = new (window.AudioContext || window.webkitAudioContext)();\n    }\n\n    return _context;\n  },\n  setContext: function setContext(value) {\n    _context = value;\n  }\n};\n\nvar AudioLoader = /*#__PURE__*/function (_Loader12) {\n  _inherits(AudioLoader, _Loader12);\n\n  var _super133 = _createSuper(AudioLoader);\n\n  function AudioLoader(manager) {\n    _classCallCheck(this, AudioLoader);\n\n    return _super133.call(this, manager);\n  }\n\n  _createClass(AudioLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (buffer) {\n        try {\n          // Create a copy of the buffer. The `decodeAudioData` method\n          // detaches the buffer when complete, preventing reuse.\n          var bufferCopy = buffer.slice(0);\n          var context = AudioContext.getContext();\n          context.decodeAudioData(bufferCopy, function (audioBuffer) {\n            onLoad(audioBuffer);\n          });\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }]);\n\n  return AudioLoader;\n}(Loader);\n\nvar HemisphereLightProbe = /*#__PURE__*/function (_LightProbe) {\n  _inherits(HemisphereLightProbe, _LightProbe);\n\n  var _super134 = _createSuper(HemisphereLightProbe);\n\n  function HemisphereLightProbe(skyColor, groundColor) {\n    var _this107;\n\n    var intensity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    _classCallCheck(this, HemisphereLightProbe);\n\n    _this107 = _super134.call(this, undefined, intensity);\n    _this107.isHemisphereLightProbe = true;\n    var color1 = new Color().set(skyColor);\n    var color2 = new Color().set(groundColor);\n    var sky = new Vector3(color1.r, color1.g, color1.b);\n    var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n    var c0 = Math.sqrt(Math.PI);\n    var c1 = c0 * Math.sqrt(0.75);\n\n    _this107.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\n    _this107.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\n    return _this107;\n  }\n\n  return HemisphereLightProbe;\n}(LightProbe);\n\nvar AmbientLightProbe = /*#__PURE__*/function (_LightProbe2) {\n  _inherits(AmbientLightProbe, _LightProbe2);\n\n  var _super135 = _createSuper(AmbientLightProbe);\n\n  function AmbientLightProbe(color) {\n    var _this108;\n\n    var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    _classCallCheck(this, AmbientLightProbe);\n\n    _this108 = _super135.call(this, undefined, intensity);\n    _this108.isAmbientLightProbe = true;\n    var color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n    _this108.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\n    return _this108;\n  }\n\n  return AmbientLightProbe;\n}(LightProbe);\n\nvar _eyeRight = /*@__PURE__*/new Matrix4();\n\nvar _eyeLeft = /*@__PURE__*/new Matrix4();\n\nvar _projectionMatrix = /*@__PURE__*/new Matrix4();\n\nvar StereoCamera = /*#__PURE__*/function () {\n  function StereoCamera() {\n    _classCallCheck(this, StereoCamera);\n\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n\n  _createClass(StereoCamera, [{\n    key: \"update\",\n    value: function update(camera) {\n      var cache = this._cache;\n      var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n      if (needsUpdate) {\n        cache.focus = camera.focus;\n        cache.fov = camera.fov;\n        cache.aspect = camera.aspect * this.aspect;\n        cache.near = camera.near;\n        cache.far = camera.far;\n        cache.zoom = camera.zoom;\n        cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        _projectionMatrix.copy(camera.projectionMatrix);\n\n        var eyeSepHalf = cache.eyeSep / 2;\n        var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n        var ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n        var xmin, xmax; // translate xOffset\n\n        _eyeLeft.elements[12] = -eyeSepHalf;\n        _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n        xmin = -ymax * cache.aspect + eyeSepOnProjection;\n        xmax = ymax * cache.aspect + eyeSepOnProjection;\n        _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(_projectionMatrix); // for right eye\n\n        xmin = -ymax * cache.aspect - eyeSepOnProjection;\n        xmax = ymax * cache.aspect - eyeSepOnProjection;\n        _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(_projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n    }\n  }]);\n\n  return StereoCamera;\n}();\n\nvar Clock = /*#__PURE__*/function () {\n  function Clock() {\n    var autoStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    _classCallCheck(this, Clock);\n\n    this.autoStart = autoStart;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  _createClass(Clock, [{\n    key: \"start\",\n    value: function start() {\n      this.startTime = now();\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    }\n  }, {\n    key: \"getElapsedTime\",\n    value: function getElapsedTime() {\n      this.getDelta();\n      return this.elapsedTime;\n    }\n  }, {\n    key: \"getDelta\",\n    value: function getDelta() {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  }]);\n\n  return Clock;\n}();\n\nfunction now() {\n  return (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n}\n\nvar _position$1 = /*@__PURE__*/new Vector3();\n\nvar _quaternion$1 = /*@__PURE__*/new Quaternion();\n\nvar _scale$1 = /*@__PURE__*/new Vector3();\n\nvar _orientation$1 = /*@__PURE__*/new Vector3();\n\nvar AudioListener = /*#__PURE__*/function (_Object3D12) {\n  _inherits(AudioListener, _Object3D12);\n\n  var _super136 = _createSuper(AudioListener);\n\n  function AudioListener() {\n    var _this109;\n\n    _classCallCheck(this, AudioListener);\n\n    _this109 = _super136.call(this);\n    _this109.type = 'AudioListener';\n    _this109.context = AudioContext.getContext();\n    _this109.gain = _this109.context.createGain();\n\n    _this109.gain.connect(_this109.context.destination);\n\n    _this109.filter = null;\n    _this109.timeDelta = 0; // private\n\n    _this109._clock = new Clock();\n    return _this109;\n  }\n\n  _createClass(AudioListener, [{\n    key: \"getInput\",\n    value: function getInput() {\n      return this.gain;\n    }\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter() {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter() {\n      return this.filter;\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n      return this;\n    }\n  }, {\n    key: \"getMasterVolume\",\n    value: function getMasterVolume() {\n      return this.gain.gain.value;\n    }\n  }, {\n    key: \"setMasterVolume\",\n    value: function setMasterVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(AudioListener.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      var listener = this.context.listener;\n      var up = this.up;\n      this.timeDelta = this._clock.getDelta();\n      this.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n      _orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n      if (listener.positionX) {\n        // code path for Chrome (see #14393)\n        var endTime = this.context.currentTime + this.timeDelta;\n        listener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n        listener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n        listener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n        listener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n        listener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n        listener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n        listener.upX.linearRampToValueAtTime(up.x, endTime);\n        listener.upY.linearRampToValueAtTime(up.y, endTime);\n        listener.upZ.linearRampToValueAtTime(up.z, endTime);\n      } else {\n        listener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n        listener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n      }\n    }\n  }]);\n\n  return AudioListener;\n}(Object3D);\n\nvar Audio = /*#__PURE__*/function (_Object3D13) {\n  _inherits(Audio, _Object3D13);\n\n  var _super137 = _createSuper(Audio);\n\n  function Audio(listener) {\n    var _this110;\n\n    _classCallCheck(this, Audio);\n\n    _this110 = _super137.call(this);\n    _this110.type = 'Audio';\n    _this110.listener = listener;\n    _this110.context = listener.context;\n    _this110.gain = _this110.context.createGain();\n\n    _this110.gain.connect(listener.getInput());\n\n    _this110.autoplay = false;\n    _this110.buffer = null;\n    _this110.detune = 0;\n    _this110.loop = false;\n    _this110.loopStart = 0;\n    _this110.loopEnd = 0;\n    _this110.offset = 0;\n    _this110.duration = undefined;\n    _this110.playbackRate = 1;\n    _this110.isPlaying = false;\n    _this110.hasPlaybackControl = true;\n    _this110.source = null;\n    _this110.sourceType = 'empty';\n    _this110._startedAt = 0;\n    _this110._progress = 0;\n    _this110._connected = false;\n    _this110.filters = [];\n    return _this110;\n  }\n\n  _createClass(Audio, [{\n    key: \"getOutput\",\n    value: function getOutput() {\n      return this.gain;\n    }\n  }, {\n    key: \"setNodeSource\",\n    value: function setNodeSource(audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    }\n  }, {\n    key: \"setMediaElementSource\",\n    value: function setMediaElementSource(mediaElement) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaNode';\n      this.source = this.context.createMediaElementSource(mediaElement);\n      this.connect();\n      return this;\n    }\n  }, {\n    key: \"setMediaStreamSource\",\n    value: function setMediaStreamSource(mediaStream) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaStreamNode';\n      this.source = this.context.createMediaStreamSource(mediaStream);\n      this.connect();\n      return this;\n    }\n  }, {\n    key: \"setBuffer\",\n    value: function setBuffer(audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._startedAt = this.context.currentTime + delay;\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.loop = this.loop;\n      source.loopStart = this.loopStart;\n      source.loopEnd = this.loopEnd;\n      source.onended = this.onEnded.bind(this);\n      source.start(this._startedAt, this._progress + this.offset, this.duration);\n      this.isPlaying = true;\n      this.source = source;\n      this.setDetune(this.detune);\n      this.setPlaybackRate(this.playbackRate);\n      return this.connect();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      if (this.isPlaying === true) {\n        // update current progress\n        this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n        if (this.loop === true) {\n          // ensure _progress does not exceed duration with looped audios\n          this._progress = this._progress % (this.duration || this.buffer.duration);\n        }\n\n        this.source.stop();\n        this.source.onended = null;\n        this.isPlaying = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._progress = 0;\n      this.source.stop();\n      this.source.onended = null;\n      this.isPlaying = false;\n      return this;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      this._connected = true;\n      return this;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      this._connected = false;\n      return this;\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.filters;\n    }\n  }, {\n    key: \"setFilters\",\n    value: function setFilters(value) {\n      if (!value) value = [];\n\n      if (this._connected === true) {\n        this.disconnect();\n        this.filters = value.slice();\n        this.connect();\n      } else {\n        this.filters = value.slice();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setDetune\",\n    value: function setDetune(value) {\n      this.detune = value;\n      if (this.source.detune === undefined) return; // only set detune when available\n\n      if (this.isPlaying === true) {\n        this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getDetune\",\n    value: function getDetune() {\n      return this.detune;\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter() {\n      return this.getFilters()[0];\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      return this.setFilters(filter ? [filter] : []);\n    }\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.playbackRate;\n    }\n  }, {\n    key: \"onEnded\",\n    value: function onEnded() {\n      this.isPlaying = false;\n    }\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    }\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setLoopStart\",\n    value: function setLoopStart(value) {\n      this.loopStart = value;\n      return this;\n    }\n  }, {\n    key: \"setLoopEnd\",\n    value: function setLoopEnd(value) {\n      this.loopEnd = value;\n      return this;\n    }\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.gain.gain.value;\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    }\n  }]);\n\n  return Audio;\n}(Object3D);\n\nvar _position = /*@__PURE__*/new Vector3();\n\nvar _quaternion = /*@__PURE__*/new Quaternion();\n\nvar _scale = /*@__PURE__*/new Vector3();\n\nvar _orientation = /*@__PURE__*/new Vector3();\n\nvar PositionalAudio = /*#__PURE__*/function (_Audio) {\n  _inherits(PositionalAudio, _Audio);\n\n  var _super138 = _createSuper(PositionalAudio);\n\n  function PositionalAudio(listener) {\n    var _this111;\n\n    _classCallCheck(this, PositionalAudio);\n\n    _this111 = _super138.call(this, listener);\n    _this111.panner = _this111.context.createPanner();\n    _this111.panner.panningModel = 'HRTF';\n\n    _this111.panner.connect(_this111.gain);\n\n    return _this111;\n  }\n\n  _createClass(PositionalAudio, [{\n    key: \"disconnect\",\n    value: function disconnect() {\n      _get(_getPrototypeOf(PositionalAudio.prototype), \"disconnect\", this).call(this);\n\n      this.panner.disconnect(this.gain);\n    }\n  }, {\n    key: \"getOutput\",\n    value: function getOutput() {\n      return this.panner;\n    }\n  }, {\n    key: \"getRefDistance\",\n    value: function getRefDistance() {\n      return this.panner.refDistance;\n    }\n  }, {\n    key: \"setRefDistance\",\n    value: function setRefDistance(value) {\n      this.panner.refDistance = value;\n      return this;\n    }\n  }, {\n    key: \"getRolloffFactor\",\n    value: function getRolloffFactor() {\n      return this.panner.rolloffFactor;\n    }\n  }, {\n    key: \"setRolloffFactor\",\n    value: function setRolloffFactor(value) {\n      this.panner.rolloffFactor = value;\n      return this;\n    }\n  }, {\n    key: \"getDistanceModel\",\n    value: function getDistanceModel() {\n      return this.panner.distanceModel;\n    }\n  }, {\n    key: \"setDistanceModel\",\n    value: function setDistanceModel(value) {\n      this.panner.distanceModel = value;\n      return this;\n    }\n  }, {\n    key: \"getMaxDistance\",\n    value: function getMaxDistance() {\n      return this.panner.maxDistance;\n    }\n  }, {\n    key: \"setMaxDistance\",\n    value: function setMaxDistance(value) {\n      this.panner.maxDistance = value;\n      return this;\n    }\n  }, {\n    key: \"setDirectionalCone\",\n    value: function setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n      this.panner.coneInnerAngle = coneInnerAngle;\n      this.panner.coneOuterAngle = coneOuterAngle;\n      this.panner.coneOuterGain = coneOuterGain;\n      return this;\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(PositionalAudio.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n      this.matrixWorld.decompose(_position, _quaternion, _scale);\n\n      _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n      var panner = this.panner;\n\n      if (panner.positionX) {\n        // code path for Chrome and Firefox (see #14393)\n        var endTime = this.context.currentTime + this.listener.timeDelta;\n        panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n        panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n        panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n        panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n        panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n        panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n      } else {\n        panner.setPosition(_position.x, _position.y, _position.z);\n        panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n      }\n    }\n  }]);\n\n  return PositionalAudio;\n}(Audio);\n\nvar AudioAnalyser = /*#__PURE__*/function () {\n  function AudioAnalyser(audio) {\n    var fftSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2048;\n\n    _classCallCheck(this, AudioAnalyser);\n\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  _createClass(AudioAnalyser, [{\n    key: \"getFrequencyData\",\n    value: function getFrequencyData() {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    }\n  }, {\n    key: \"getAverageFrequency\",\n    value: function getAverageFrequency() {\n      var value = 0;\n      var data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  }]);\n\n  return AudioAnalyser;\n}();\n\nvar PropertyMixer = /*#__PURE__*/function () {\n  function PropertyMixer(binding, typeName, valueSize) {\n    _classCallCheck(this, PropertyMixer);\n\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n    //\n    // 'add' is used for additive cumulative results\n    //\n    // 'work' is optional and is only present for quaternion types. It is used\n    // to store intermediate quaternion multiplication results\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        mixFunctionAdditive = this._slerpAdditive;\n        setIdentity = this._setAdditiveIdentityQuaternion;\n        this.buffer = new Float64Array(valueSize * 6);\n        this._workIndex = 5;\n        break;\n\n      case 'string':\n      case 'bool':\n        mixFunction = this._select; // Use the regular mix function and for additive on these types,\n        // additive is not relevant for non-numeric types\n\n        mixFunctionAdditive = this._select;\n        setIdentity = this._setAdditiveIdentityOther;\n        this.buffer = new Array(valueSize * 5);\n        break;\n\n      default:\n        mixFunction = this._lerp;\n        mixFunctionAdditive = this._lerpAdditive;\n        setIdentity = this._setAdditiveIdentityNumeric;\n        this.buffer = new Float64Array(valueSize * 5);\n    }\n\n    this._mixBufferRegion = mixFunction;\n    this._mixBufferRegionAdditive = mixFunctionAdditive;\n    this._setIdentity = setIdentity;\n    this._origIndex = 3;\n    this._addIndex = 4;\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  } // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n  _createClass(PropertyMixer, [{\n    key: \"accumulate\",\n    value: function accumulate(accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride;\n      var currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    } // accumulate data in the 'incoming' region into 'add'\n\n  }, {\n    key: \"accumulateAdditive\",\n    value: function accumulateAdditive(weight) {\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = stride * this._addIndex;\n\n      if (this.cumulativeWeightAdditive === 0) {\n        // add = identity\n        this._setIdentity();\n      } // add := add + incoming * weight\n\n\n      this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n      this.cumulativeWeightAdditive += weight;\n    } // apply the state of 'accu<i>' to the binding when accus differ\n\n  }, {\n    key: \"apply\",\n    value: function apply(accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          weightAdditive = this.cumulativeWeightAdditive,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n      this.cumulativeWeightAdditive = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * this._origIndex;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      if (weightAdditive > 0) {\n        // accuN := accuN + additive accuN\n        this._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    } // remember the state of the bound property and copy it to both accus\n\n  }, {\n    key: \"saveOriginalState\",\n    value: function saveOriginalState() {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * this._origIndex;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      } // Add to identity for additive\n\n\n      this._setIdentity();\n\n      this.cumulativeWeight = 0;\n      this.cumulativeWeightAdditive = 0;\n    } // apply the state previously taken via 'saveOriginalState' to the binding\n\n  }, {\n    key: \"restoreOriginalState\",\n    value: function restoreOriginalState() {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    }\n  }, {\n    key: \"_setAdditiveIdentityNumeric\",\n    value: function _setAdditiveIdentityNumeric() {\n      var startIndex = this._addIndex * this.valueSize;\n      var endIndex = startIndex + this.valueSize;\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this.buffer[i] = 0;\n      }\n    }\n  }, {\n    key: \"_setAdditiveIdentityQuaternion\",\n    value: function _setAdditiveIdentityQuaternion() {\n      this._setAdditiveIdentityNumeric();\n\n      this.buffer[this._addIndex * this.valueSize + 3] = 1;\n    }\n  }, {\n    key: \"_setAdditiveIdentityOther\",\n    value: function _setAdditiveIdentityOther() {\n      var startIndex = this._origIndex * this.valueSize;\n      var targetIndex = this._addIndex * this.valueSize;\n\n      for (var i = 0; i < this.valueSize; i++) {\n        this.buffer[targetIndex + i] = this.buffer[startIndex + i];\n      }\n    } // mix functions\n\n  }, {\n    key: \"_select\",\n    value: function _select(buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    }\n  }, {\n    key: \"_slerp\",\n    value: function _slerp(buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    }\n  }, {\n    key: \"_slerpAdditive\",\n    value: function _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n      var workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n      Quaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n    }\n  }, {\n    key: \"_lerp\",\n    value: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  }, {\n    key: \"_lerpAdditive\",\n    value: function _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n      }\n    }\n  }]);\n\n  return PropertyMixer;\n}(); // Characters [].:/ are reserved for track binding syntax.\n\n\nvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nvar _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\n\n\nvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\nvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\n\n\nvar _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\nvar _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\n\n\nvar _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\n\n\nvar _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\nvar _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\nvar _supportedObjectNames = ['material', 'materials', 'bones'];\n\nvar Composite = /*#__PURE__*/function () {\n  function Composite(targetGroup, path, optionalParsedPath) {\n    _classCallCheck(this, Composite);\n\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  _createClass(Composite, [{\n    key: \"getValue\",\n    value: function getValue(array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  }]);\n\n  return Composite;\n}(); // Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\n\n\nvar PropertyBinding = /*#__PURE__*/function () {\n  function PropertyBinding(rootNode, path, parsedPath) {\n    _classCallCheck(this, PropertyBinding);\n\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n\n  _createClass(PropertyBinding, [{\n    key: \"_getValue_unavailable\",\n    value: // these are used to \"bind\" a nonexistent property\n    function _getValue_unavailable() {}\n  }, {\n    key: \"_setValue_unavailable\",\n    value: function _setValue_unavailable() {} // Getters\n\n  }, {\n    key: \"_getValue_direct\",\n    value: function _getValue_direct(buffer, offset) {\n      buffer[offset] = this.targetObject[this.propertyName];\n    }\n  }, {\n    key: \"_getValue_array\",\n    value: function _getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }\n  }, {\n    key: \"_getValue_arrayElement\",\n    value: function _getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }\n  }, {\n    key: \"_getValue_toArray\",\n    value: function _getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    } // Direct\n\n  }, {\n    key: \"_setValue_direct\",\n    value: function _setValue_direct(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n    }\n  }, {\n    key: \"_setValue_direct_setNeedsUpdate\",\n    value: function _setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }\n  }, {\n    key: \"_setValue_direct_setMatrixWorldNeedsUpdate\",\n    value: function _setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    } // EntireArray\n\n  }, {\n    key: \"_setValue_array\",\n    value: function _setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }\n  }, {\n    key: \"_setValue_array_setNeedsUpdate\",\n    value: function _setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }\n  }, {\n    key: \"_setValue_array_setMatrixWorldNeedsUpdate\",\n    value: function _setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    } // ArrayElement\n\n  }, {\n    key: \"_setValue_arrayElement\",\n    value: function _setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }\n  }, {\n    key: \"_setValue_arrayElement_setNeedsUpdate\",\n    value: function _setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }\n  }, {\n    key: \"_setValue_arrayElement_setMatrixWorldNeedsUpdate\",\n    value: function _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    } // HasToFromArray\n\n  }, {\n    key: \"_setValue_fromArray\",\n    value: function _setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }\n  }, {\n    key: \"_setValue_fromArray_setNeedsUpdate\",\n    value: function _setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }\n  }, {\n    key: \"_setValue_fromArray_setMatrixWorldNeedsUpdate\",\n    value: function _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }\n  }, {\n    key: \"_getValue_unbound\",\n    value: function _getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset);\n    }\n  }, {\n    key: \"_setValue_unbound\",\n    value: function _setValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    } // create getter / setter pair for a property in the scene graph\n\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var targetObject = this.node;\n      var parsedPath = this.parsedPath;\n      var objectName = parsedPath.objectName;\n      var propertyName = parsedPath.propertyName;\n      var propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n      this.targetObject = targetObject;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === 'morphTargetInfluences') {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (!targetObject.geometry.morphAttributes) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n            return;\n          }\n\n          if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n            propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    }\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param {string} name Node name to be sanitized.\n     * @return {string}\n     */\n\n  }, {\n    key: \"sanitizeNodeName\",\n    value: function sanitizeNodeName(name) {\n      return name.replace(/\\s/g, '_').replace(_reservedRe, '');\n    }\n  }, {\n    key: \"parseTrackName\",\n    value: function parseTrackName(trackName) {\n      var matches = _trackRe.exec(trackName);\n\n      if (matches === null) {\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n      }\n\n      var results = {\n        // directoryName: matches[ 1 ], // (tschw) currently unused\n        nodeName: matches[2],\n        objectName: matches[3],\n        objectIndex: matches[4],\n        propertyName: matches[5],\n        // required\n        propertyIndex: matches[6]\n      };\n      var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n      if (lastDot !== undefined && lastDot !== -1) {\n        var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n        // 'bar' could be the objectName, or part of a nodeName (which can\n        // include '.' characters).\n\n        if (_supportedObjectNames.indexOf(objectName) !== -1) {\n          results.nodeName = results.nodeName.substring(0, lastDot);\n          results.objectName = objectName;\n        }\n      }\n\n      if (results.propertyName === null || results.propertyName.length === 0) {\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n      }\n\n      return results;\n    }\n  }, {\n    key: \"findNode\",\n    value: function findNode(root, nodeName) {\n      if (nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var bone = root.skeleton.getBoneByName(nodeName);\n\n        if (bone !== undefined) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function searchNodeSubtree(children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n            if (result) return result;\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return PropertyBinding;\n}();\n\nPropertyBinding.Composite = Composite;\nPropertyBinding.prototype.BindingType = {\n  Direct: 0,\n  EntireArray: 1,\n  ArrayElement: 2,\n  HasFromToArray: 3\n};\nPropertyBinding.prototype.Versioning = {\n  None: 0,\n  NeedsUpdate: 1,\n  MatrixWorldNeedsUpdate: 2\n};\nPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\nPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\nPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\nPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\nPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nvar AnimationObjectGroup = /*#__PURE__*/function () {\n  function AnimationObjectGroup() {\n    _classCallCheck(this, AnimationObjectGroup);\n\n    this.isAnimationObjectGroup = true;\n    this.uuid = generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  _createClass(AnimationObjectGroup, [{\n    key: \"add\",\n    value: function add() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var knownObject = undefined,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid;\n        var index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var _j16 = 0, _m2 = nBindings; _j16 !== _m2; ++_j16) {\n            var bindingsForPath = bindings[_j16],\n                lastCached = bindingsForPath[firstActiveIndex];\n            var binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[_j16], parsedPaths[_j16]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var nCachedObjects = this.nCachedObjects_;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    } // remove & forget\n\n  }, {\n    key: \"uncache\",\n    value: function uncache() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var nCachedObjects = this.nCachedObjects_,\n          nObjects = objects.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var _lastIndex = --nObjects,\n                _lastObject = objects[_lastIndex];\n\n            if (_lastIndex > 0) {\n              indicesByUUID[_lastObject.uuid] = index;\n            }\n\n            objects[index] = _lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var _j17 = 0, _m3 = nBindings; _j17 !== _m3; ++_j17) {\n              var _bindingsForPath = bindings[_j17];\n              _bindingsForPath[index] = _bindingsForPath[_lastIndex];\n\n              _bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    } // Internal interface used by befriended PropertyBinding.Composite:\n\n  }, {\n    key: \"subscribe_\",\n    value: function subscribe_(path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath;\n      var index = indicesByPath[path];\n      var bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    }\n  }, {\n    key: \"unsubscribe_\",\n    value: function unsubscribe_(path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  }]);\n\n  return AnimationObjectGroup;\n}();\n\nvar AnimationAction = /*#__PURE__*/function () {\n  function AnimationAction(mixer, clip) {\n    var localRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : clip.blendMode;\n\n    _classCallCheck(this, AnimationAction);\n\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot;\n    this.blendMode = blendMode;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  } // State & Scheduling\n\n\n  _createClass(AnimationAction, [{\n    key: \"play\",\n    value: function play() {\n      this._mixer._activateAction(this);\n\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    } // return true when play has been called\n\n  }, {\n    key: \"isScheduled\",\n    value: function isScheduled() {\n      return this._mixer._isActiveAction(this);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt(time) {\n      this._startTime = time;\n      return this;\n    }\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    } // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n\n  }, {\n    key: \"setEffectiveWeight\",\n    value: function setEffectiveWeight(weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    } // return the weight considering fading and .enabled\n\n  }, {\n    key: \"getEffectiveWeight\",\n    value: function getEffectiveWeight() {\n      return this._effectiveWeight;\n    }\n  }, {\n    key: \"fadeIn\",\n    value: function fadeIn(duration) {\n      return this._scheduleFading(duration, 0, 1);\n    }\n  }, {\n    key: \"fadeOut\",\n    value: function fadeOut(duration) {\n      return this._scheduleFading(duration, 1, 0);\n    }\n  }, {\n    key: \"crossFadeFrom\",\n    value: function crossFadeFrom(fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"crossFadeTo\",\n    value: function crossFadeTo(fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    }\n  }, {\n    key: \"stopFading\",\n    value: function stopFading() {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    } // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n\n  }, {\n    key: \"setEffectiveTimeScale\",\n    value: function setEffectiveTimeScale(timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    } // return the time scale considering warping and .paused\n\n  }, {\n    key: \"getEffectiveTimeScale\",\n    value: function getEffectiveTimeScale() {\n      return this._effectiveTimeScale;\n    }\n  }, {\n    key: \"setDuration\",\n    value: function setDuration(duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    }\n  }, {\n    key: \"syncWith\",\n    value: function syncWith(action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    }\n  }, {\n    key: \"halt\",\n    value: function halt(duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    }\n  }, {\n    key: \"warp\",\n    value: function warp(startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    }\n  }, {\n    key: \"stopWarping\",\n    value: function stopWarping() {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    } // Object Accessors\n\n  }, {\n    key: \"getMixer\",\n    value: function getMixer() {\n      return this._mixer;\n    }\n  }, {\n    key: \"getClip\",\n    value: function getClip() {\n      return this._clip;\n    }\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      return this._localRoot || this._mixer._root;\n    } // Interna\n\n  }, {\n    key: \"_update\",\n    value: function _update(time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        switch (this.blendMode) {\n          case AdditiveAnimationBlendMode:\n            for (var j = 0, m = interpolants.length; j !== m; ++j) {\n              interpolants[j].evaluate(clipTime);\n              propertyMixers[j].accumulateAdditive(weight);\n            }\n\n            break;\n\n          case NormalAnimationBlendMode:\n          default:\n            for (var _j18 = 0, _m4 = interpolants.length; _j18 !== _m4; ++_j18) {\n              interpolants[_j18].evaluate(clipTime);\n\n              propertyMixers[_j18].accumulate(accuIndex, weight);\n            }\n\n        }\n      }\n    }\n  }, {\n    key: \"_updateWeight\",\n    value: function _updateWeight(time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    }\n  }, {\n    key: \"_updateTimeScale\",\n    value: function _updateTimeScale(time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    }\n  }, {\n    key: \"_updateTime\",\n    value: function _updateTime(deltaTime) {\n      var duration = this._clip.duration;\n      var loop = this.loop;\n      var time = this.time + deltaTime;\n      var loopCount = this._loopCount;\n      var pingPong = loop === LoopPingPong;\n\n      if (deltaTime === 0) {\n        if (loopCount === -1) return time;\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n      }\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else {\n            this.time = time;\n            break handle_stop;\n          }\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          this.time = time;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending <= 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 1) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        } else {\n          this.time = time;\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          return duration - time;\n        }\n      }\n\n      return time;\n    }\n  }, {\n    key: \"_setEndings\",\n    value: function _setEndings(atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    }\n  }, {\n    key: \"_scheduleFading\",\n    value: function _scheduleFading(duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  }]);\n\n  return AnimationAction;\n}();\n\nvar _controlInterpolantsResultBuffer = /*@__PURE__*/new Float32Array(1);\n\nvar AnimationMixer = /*#__PURE__*/function (_EventDispatcher7) {\n  _inherits(AnimationMixer, _EventDispatcher7);\n\n  var _super139 = _createSuper(AnimationMixer);\n\n  function AnimationMixer(root) {\n    var _this112;\n\n    _classCallCheck(this, AnimationMixer);\n\n    _this112 = _super139.call(this);\n    _this112._root = root;\n\n    _this112._initMemoryManager();\n\n    _this112._accuIndex = 0;\n    _this112.time = 0;\n    _this112.timeScale = 1.0;\n    return _this112;\n  }\n\n  _createClass(AnimationMixer, [{\n    key: \"_bindAction\",\n    value: function _bindAction(action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName;\n      var bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name;\n        var binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          ++binding.referenceCount;\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    }\n  }, {\n    key: \"_activateAction\",\n    value: function _activateAction(action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    }\n  }, {\n    key: \"_deactivateAction\",\n    value: function _deactivateAction(action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    } // Memory manager\n\n  }, {\n    key: \"_initMemoryManager\",\n    value: function _initMemoryManager() {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \tknownActions: Array< AnimationAction > - used as prototypes\n      // \tactionByRoot: AnimationAction - lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    } // Memory management for AnimationAction objects\n\n  }, {\n    key: \"_isActiveAction\",\n    value: function _isActiveAction(action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    }\n  }, {\n    key: \"_addInactiveAction\",\n    value: function _addInactiveAction(action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip;\n      var actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    }\n  }, {\n    key: \"_removeInactiveAction\",\n    value: function _removeInactiveAction(action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    }\n  }, {\n    key: \"_removeInactiveBindingsForAction\",\n    value: function _removeInactiveBindingsForAction(action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    }\n  }, {\n    key: \"_lendAction\",\n    value: function _lendAction(action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    }\n  }, {\n    key: \"_takeBackAction\",\n    value: function _takeBackAction(action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    } // Memory management for PropertyMixer objects\n\n  }, {\n    key: \"_addInactiveBinding\",\n    value: function _addInactiveBinding(binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindings = this._bindings;\n      var bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    }\n  }, {\n    key: \"_removeInactiveBinding\",\n    value: function _removeInactiveBinding(binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      if (Object.keys(bindingByName).length === 0) {\n        delete bindingsByRoot[rootUuid];\n      }\n    }\n  }, {\n    key: \"_lendBinding\",\n    value: function _lendBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    }\n  }, {\n    key: \"_takeBackBinding\",\n    value: function _takeBackBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    } // Memory management of Interpolants for weight and time scale\n\n  }, {\n    key: \"_lendControlInterpolant\",\n    value: function _lendControlInterpolant() {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++;\n      var interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, _controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    }\n  }, {\n    key: \"_takeBackControlInterpolant\",\n    value: function _takeBackControlInterpolant(interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    } // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n\n  }, {\n    key: \"clipAction\",\n    value: function clipAction(clip, optionalRoot, blendMode) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid;\n      var clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n      var clipUuid = clipObject !== null ? clipObject.uuid : clip;\n      var actionsForClip = this._actionsByClip[clipUuid];\n      var prototypeAction = null;\n\n      if (blendMode === undefined) {\n        if (clipObject !== null) {\n          blendMode = clipObject.blendMode;\n        } else {\n          blendMode = NormalAnimationBlendMode;\n        }\n      }\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined && existingAction.blendMode === blendMode) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    } // get an existing action\n\n  }, {\n    key: \"existingAction\",\n    value: function existingAction(clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    } // deactivates all previously scheduled actions\n\n  }, {\n    key: \"stopAllAction\",\n    value: function stopAllAction() {\n      var actions = this._actions,\n          nActions = this._nActiveActions;\n\n      for (var i = nActions - 1; i >= 0; --i) {\n        actions[i].stop();\n      }\n\n      return this;\n    } // advance the time and update apply the animation\n\n  }, {\n    key: \"update\",\n    value: function update(deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var _i87 = 0; _i87 !== nBindings; ++_i87) {\n        bindings[_i87].apply(accuIndex);\n      }\n\n      return this;\n    } // Allows you to seek to a specific time in an animation.\n\n  }, {\n    key: \"setTime\",\n    value: function setTime(timeInSeconds) {\n      this.time = 0; // Zero out time attribute for AnimationMixer object;\n\n      for (var i = 0; i < this._actions.length; i++) {\n        this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n      }\n\n      return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n    } // return this mixer's root target object\n\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      return this._root;\n    } // free all resources specific to a particular clip\n\n  }, {\n    key: \"uncacheClip\",\n    value: function uncacheClip(clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    } // free all resources specific to a particular root target object\n\n  }, {\n    key: \"uncacheRoot\",\n    value: function uncacheRoot(root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    } // remove a targeted clip from the cache\n\n  }, {\n    key: \"uncacheAction\",\n    value: function uncacheAction(clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  }]);\n\n  return AnimationMixer;\n}(EventDispatcher);\n\nvar Uniform = /*#__PURE__*/function () {\n  function Uniform(value) {\n    _classCallCheck(this, Uniform);\n\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  _createClass(Uniform, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n    }\n  }]);\n\n  return Uniform;\n}();\n\nvar InstancedInterleavedBuffer = /*#__PURE__*/function (_InterleavedBuffer) {\n  _inherits(InstancedInterleavedBuffer, _InterleavedBuffer);\n\n  var _super140 = _createSuper(InstancedInterleavedBuffer);\n\n  function InstancedInterleavedBuffer(array, stride) {\n    var _this113;\n\n    var meshPerAttribute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    _classCallCheck(this, InstancedInterleavedBuffer);\n\n    _this113 = _super140.call(this, array, stride);\n    _this113.isInstancedInterleavedBuffer = true;\n    _this113.meshPerAttribute = meshPerAttribute;\n    return _this113;\n  }\n\n  _createClass(InstancedInterleavedBuffer, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"copy\", this).call(this, source);\n\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(data) {\n      var ib = _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"clone\", this).call(this, data);\n\n      ib.meshPerAttribute = this.meshPerAttribute;\n      return ib;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      var json = _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"toJSON\", this).call(this, data);\n\n      json.isInstancedInterleavedBuffer = true;\n      json.meshPerAttribute = this.meshPerAttribute;\n      return json;\n    }\n  }]);\n\n  return InstancedInterleavedBuffer;\n}(InterleavedBuffer);\n\nvar GLBufferAttribute = /*#__PURE__*/function () {\n  function GLBufferAttribute(buffer, type, itemSize, elementSize, count) {\n    _classCallCheck(this, GLBufferAttribute);\n\n    this.isGLBufferAttribute = true;\n    this.buffer = buffer;\n    this.type = type;\n    this.itemSize = itemSize;\n    this.elementSize = elementSize;\n    this.count = count;\n    this.version = 0;\n  }\n\n  _createClass(GLBufferAttribute, [{\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }, {\n    key: \"setBuffer\",\n    value: function setBuffer(buffer) {\n      this.buffer = buffer;\n      return this;\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type, elementSize) {\n      this.type = type;\n      this.elementSize = elementSize;\n      return this;\n    }\n  }, {\n    key: \"setItemSize\",\n    value: function setItemSize(itemSize) {\n      this.itemSize = itemSize;\n      return this;\n    }\n  }, {\n    key: \"setCount\",\n    value: function setCount(count) {\n      this.count = count;\n      return this;\n    }\n  }]);\n\n  return GLBufferAttribute;\n}();\n\nvar Raycaster = /*#__PURE__*/function () {\n  function Raycaster(origin, direction) {\n    var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n\n    _classCallCheck(this, Raycaster);\n\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near;\n    this.far = far;\n    this.camera = null;\n    this.layers = new Layers();\n    this.params = {\n      Mesh: {},\n      Line: {\n        threshold: 1\n      },\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n  }\n\n  _createClass(Raycaster, [{\n    key: \"set\",\n    value: function set(origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    }\n  }, {\n    key: \"setFromCamera\",\n    value: function setFromCamera(coords, camera) {\n      if (camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n        this.camera = camera;\n      } else if (camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n        this.camera = camera;\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n      }\n    }\n  }, {\n    key: \"intersectObject\",\n    value: function intersectObject(object) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      _intersectObject(object, this, intersects, recursive);\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  }, {\n    key: \"intersectObjects\",\n    value: function intersectObjects(objects) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        _intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  }]);\n\n  return Raycaster;\n}();\n\nfunction ascSort(a, b) {\n  return a.distance - b.distance;\n}\n\nfunction _intersectObject(object, raycaster, intersects, recursive) {\n  if (object.layers.test(raycaster.layers)) {\n    object.raycast(raycaster, intersects);\n  }\n\n  if (recursive === true) {\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      _intersectObject(children[i], raycaster, intersects, true);\n    }\n  }\n}\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nvar Spherical = /*#__PURE__*/function () {\n  function Spherical() {\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var phi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var theta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Spherical);\n\n    this.radius = radius;\n    this.phi = phi; // polar angle\n\n    this.theta = theta; // azimuthal angle\n\n    return this;\n  }\n\n  _createClass(Spherical, [{\n    key: \"set\",\n    value: function set(radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    } // restrict phi to be between EPS and PI-EPS\n\n  }, {\n    key: \"makeSafe\",\n    value: function makeSafe() {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    }\n  }, {\n    key: \"setFromVector3\",\n    value: function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    }\n  }, {\n    key: \"setFromCartesianCoords\",\n    value: function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + y * y + z * z);\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(x, z);\n        this.phi = Math.acos(clamp(y / this.radius, -1, 1));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Spherical;\n}();\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\n\nvar Cylindrical = /*#__PURE__*/function () {\n  function Cylindrical() {\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var theta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Cylindrical);\n\n    this.radius = radius; // distance from the origin to a point in the x-z plane\n\n    this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n    this.y = y; // height above the x-z plane\n\n    return this;\n  }\n\n  _createClass(Cylindrical, [{\n    key: \"set\",\n    value: function set(radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    }\n  }, {\n    key: \"setFromVector3\",\n    value: function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    }\n  }, {\n    key: \"setFromCartesianCoords\",\n    value: function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + z * z);\n      this.theta = Math.atan2(x, z);\n      this.y = y;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Cylindrical;\n}();\n\nvar _vector$4 = /*@__PURE__*/new Vector2();\n\nvar Box2 = /*#__PURE__*/function () {\n  function Box2() {\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2(+Infinity, +Infinity);\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2(-Infinity, -Infinity);\n\n    _classCallCheck(this, Box2);\n\n    this.isBox2 = true;\n    this.min = min;\n    this.max = max;\n  }\n\n  _createClass(Box2, [{\n    key: \"set\",\n    value: function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    }\n  }, {\n    key: \"setFromPoints\",\n    value: function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setFromCenterAndSize\",\n    value: function setFromCenterAndSize(center, size) {\n      var halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    }\n  }, {\n    key: \"makeEmpty\",\n    value: function makeEmpty() {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(target) {\n      return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(target) {\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n    }\n  }, {\n    key: \"expandByPoint\",\n    value: function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    }\n  }, {\n    key: \"expandByVector\",\n    value: function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    }\n  }, {\n    key: \"expandByScalar\",\n    value: function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    }\n  }, {\n    key: \"containsBox\",\n    value: function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    }\n  }, {\n    key: \"getParameter\",\n    value: function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    }\n  }, {\n    key: \"clampPoint\",\n    value: function clampPoint(point, target) {\n      return target.copy(point).clamp(this.min, this.max);\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      var clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    }\n  }, {\n    key: \"union\",\n    value: function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  }]);\n\n  return Box2;\n}();\n\nvar _startP = /*@__PURE__*/new Vector3();\n\nvar _startEnd = /*@__PURE__*/new Vector3();\n\nvar Line3 = /*#__PURE__*/function () {\n  function Line3() {\n    var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n\n    _classCallCheck(this, Line3);\n\n    this.start = start;\n    this.end = end;\n  }\n\n  _createClass(Line3, [{\n    key: \"set\",\n    value: function set(start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(target) {\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"delta\",\n    value: function delta(target) {\n      return target.subVectors(this.end, this.start);\n    }\n  }, {\n    key: \"distanceSq\",\n    value: function distanceSq() {\n      return this.start.distanceToSquared(this.end);\n    }\n  }, {\n    key: \"distance\",\n    value: function distance() {\n      return this.start.distanceTo(this.end);\n    }\n  }, {\n    key: \"at\",\n    value: function at(t, target) {\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: \"closestPointToPointParameter\",\n    value: function closestPointToPointParameter(point, clampToLine) {\n      _startP.subVectors(point, this.start);\n\n      _startEnd.subVectors(this.end, this.start);\n\n      var startEnd2 = _startEnd.dot(_startEnd);\n\n      var startEnd_startP = _startEnd.dot(_startP);\n\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = clamp(t, 0, 1);\n      }\n\n      return t;\n    }\n  }, {\n    key: \"closestPointToPoint\",\n    value: function closestPointToPoint(point, clampToLine, target) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }]);\n\n  return Line3;\n}();\n\nvar _vector$3 = /*@__PURE__*/new Vector3();\n\nvar SpotLightHelper = /*#__PURE__*/function (_Object3D14) {\n  _inherits(SpotLightHelper, _Object3D14);\n\n  var _super141 = _createSuper(SpotLightHelper);\n\n  function SpotLightHelper(light, color) {\n    var _this114;\n\n    _classCallCheck(this, SpotLightHelper);\n\n    _this114 = _super141.call(this);\n    _this114.light = light;\n\n    _this114.light.updateMatrixWorld();\n\n    _this114.matrix = light.matrixWorld;\n    _this114.matrixAutoUpdate = false;\n    _this114.color = color;\n    var geometry = new BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    var material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    _this114.cone = new LineSegments(geometry, material);\n\n    _this114.add(_this114.cone);\n\n    _this114.update();\n\n    return _this114;\n  }\n\n  _createClass(SpotLightHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.cone.geometry.dispose();\n      this.cone.material.dispose();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.light.updateMatrixWorld();\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n      _vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n      this.cone.lookAt(_vector$3);\n\n      if (this.color !== undefined) {\n        this.cone.material.color.set(this.color);\n      } else {\n        this.cone.material.color.copy(this.light.color);\n      }\n    }\n  }]);\n\n  return SpotLightHelper;\n}(Object3D);\n\nvar _vector$2 = /*@__PURE__*/new Vector3();\n\nvar _boneMatrix = /*@__PURE__*/new Matrix4();\n\nvar _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\nvar SkeletonHelper = /*#__PURE__*/function (_LineSegments) {\n  _inherits(SkeletonHelper, _LineSegments);\n\n  var _super142 = _createSuper(SkeletonHelper);\n\n  function SkeletonHelper(object) {\n    var _this115;\n\n    _classCallCheck(this, SkeletonHelper);\n\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: false,\n      depthWrite: false,\n      toneMapped: false,\n      transparent: true\n    });\n    _this115 = _super142.call(this, geometry, material);\n    _this115.isSkeletonHelper = true;\n    _this115.type = 'SkeletonHelper';\n    _this115.root = object;\n    _this115.bones = bones;\n    _this115.matrix = object.matrixWorld;\n    _this115.matrixAutoUpdate = false;\n    return _this115;\n  }\n\n  _createClass(SkeletonHelper, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      var bones = this.bones;\n      var geometry = this.geometry;\n      var position = geometry.getAttribute('position');\n\n      _matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n      for (var i = 0, j = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n          _vector$2.setFromMatrixPosition(_boneMatrix);\n\n          position.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n          _vector$2.setFromMatrixPosition(_boneMatrix);\n\n          position.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n          j += 2;\n        }\n      }\n\n      geometry.getAttribute('position').needsUpdate = true;\n\n      _get(_getPrototypeOf(SkeletonHelper.prototype), \"updateMatrixWorld\", this).call(this, force);\n    }\n  }]);\n\n  return SkeletonHelper;\n}(LineSegments);\n\nfunction getBoneList(object) {\n  var boneList = [];\n\n  if (object.isBone === true) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nvar PointLightHelper = /*#__PURE__*/function (_Mesh3) {\n  _inherits(PointLightHelper, _Mesh3);\n\n  var _super143 = _createSuper(PointLightHelper);\n\n  function PointLightHelper(light, sphereSize, color) {\n    var _this116;\n\n    _classCallCheck(this, PointLightHelper);\n\n    var geometry = new SphereGeometry(sphereSize, 4, 2);\n    var material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false\n    });\n    _this116 = _super143.call(this, geometry, material);\n    _this116.light = light;\n\n    _this116.light.updateMatrixWorld();\n\n    _this116.color = color;\n    _this116.type = 'PointLightHelper';\n    _this116.matrix = _this116.light.matrixWorld;\n    _this116.matrixAutoUpdate = false;\n\n    _this116.update();\n    /*\n    // TODO: delete this comment?\n    const distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    const d = light.distance;\n    if ( d === 0.0 ) {\n    \tthis.lightDistance.visible = false;\n    } else {\n    \tthis.lightDistance.scale.set( d, d, d );\n    }\n    this.add( this.lightDistance );\n    */\n\n\n    return _this116;\n  }\n\n  _createClass(PointLightHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        this.material.color.copy(this.light.color);\n      }\n      /*\n      const d = this.light.distance;\n      \tif ( d === 0.0 ) {\n      \t\tthis.lightDistance.visible = false;\n      \t} else {\n      \t\tthis.lightDistance.visible = true;\n      \tthis.lightDistance.scale.set( d, d, d );\n      \t}\n      */\n\n    }\n  }]);\n\n  return PointLightHelper;\n}(Mesh);\n\nvar _vector$1 = /*@__PURE__*/new Vector3();\n\nvar _color1 = /*@__PURE__*/new Color();\n\nvar _color2 = /*@__PURE__*/new Color();\n\nvar HemisphereLightHelper = /*#__PURE__*/function (_Object3D15) {\n  _inherits(HemisphereLightHelper, _Object3D15);\n\n  var _super144 = _createSuper(HemisphereLightHelper);\n\n  function HemisphereLightHelper(light, size, color) {\n    var _this117;\n\n    _classCallCheck(this, HemisphereLightHelper);\n\n    _this117 = _super144.call(this);\n    _this117.light = light;\n\n    _this117.light.updateMatrixWorld();\n\n    _this117.matrix = light.matrixWorld;\n    _this117.matrixAutoUpdate = false;\n    _this117.color = color;\n    var geometry = new OctahedronGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    _this117.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false\n    });\n    if (_this117.color === undefined) _this117.material.vertexColors = true;\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.setAttribute('color', new BufferAttribute(colors, 3));\n\n    _this117.add(new Mesh(geometry, _this117.material));\n\n    _this117.update();\n\n    return _this117;\n  }\n\n  _createClass(HemisphereLightHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.children[0].geometry.dispose();\n      this.children[0].material.dispose();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var mesh = this.children[0];\n\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        var colors = mesh.geometry.getAttribute('color');\n\n        _color1.copy(this.light.color);\n\n        _color2.copy(this.light.groundColor);\n\n        for (var i = 0, l = colors.count; i < l; i++) {\n          var color = i < l / 2 ? _color1 : _color2;\n          colors.setXYZ(i, color.r, color.g, color.b);\n        }\n\n        colors.needsUpdate = true;\n      }\n\n      mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n    }\n  }]);\n\n  return HemisphereLightHelper;\n}(Object3D);\n\nvar GridHelper = /*#__PURE__*/function (_LineSegments2) {\n  _inherits(GridHelper, _LineSegments2);\n\n  var _super145 = _createSuper(GridHelper);\n\n  function GridHelper() {\n    var _this118;\n\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    var divisions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    var color1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0x444444;\n    var color2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0x888888;\n\n    _classCallCheck(this, GridHelper);\n\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    var center = divisions / 2;\n    var step = size / divisions;\n    var halfSize = size / 2;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    _this118 = _super145.call(this, geometry, material);\n    _this118.type = 'GridHelper';\n    return _this118;\n  }\n\n  return GridHelper;\n}(LineSegments);\n\nvar PolarGridHelper = /*#__PURE__*/function (_LineSegments3) {\n  _inherits(PolarGridHelper, _LineSegments3);\n\n  var _super146 = _createSuper(PolarGridHelper);\n\n  function PolarGridHelper() {\n    var _this119;\n\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    var radials = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    var circles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    var divisions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 64;\n    var color1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0x444444;\n    var color2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0x888888;\n\n    _classCallCheck(this, PolarGridHelper);\n\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    var vertices = [];\n    var colors = []; // create the radials\n\n    for (var i = 0; i <= radials; i++) {\n      var v = i / radials * (Math.PI * 2);\n      var x = Math.sin(v) * radius;\n      var z = Math.cos(v) * radius;\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n      var color = i & 1 ? color1 : color2;\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    } // create the circles\n\n\n    for (var _i88 = 0; _i88 <= circles; _i88++) {\n      var _color = _i88 & 1 ? color1 : color2;\n\n      var r = radius - radius / circles * _i88;\n\n      for (var j = 0; j < divisions; j++) {\n        // first vertex\n        var _v = j / divisions * (Math.PI * 2);\n\n        var _x12 = Math.sin(_v) * r;\n\n        var _z3 = Math.cos(_v) * r;\n\n        vertices.push(_x12, 0, _z3);\n        colors.push(_color.r, _color.g, _color.b); // second vertex\n\n        _v = (j + 1) / divisions * (Math.PI * 2);\n        _x12 = Math.sin(_v) * r;\n        _z3 = Math.cos(_v) * r;\n        vertices.push(_x12, 0, _z3);\n        colors.push(_color.r, _color.g, _color.b);\n      }\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    _this119 = _super146.call(this, geometry, material);\n    _this119.type = 'PolarGridHelper';\n    return _this119;\n  }\n\n  return PolarGridHelper;\n}(LineSegments);\n\nvar _v1 = /*@__PURE__*/new Vector3();\n\nvar _v2 = /*@__PURE__*/new Vector3();\n\nvar _v3 = /*@__PURE__*/new Vector3();\n\nvar DirectionalLightHelper = /*#__PURE__*/function (_Object3D16) {\n  _inherits(DirectionalLightHelper, _Object3D16);\n\n  var _super147 = _createSuper(DirectionalLightHelper);\n\n  function DirectionalLightHelper(light, size, color) {\n    var _this120;\n\n    _classCallCheck(this, DirectionalLightHelper);\n\n    _this120 = _super147.call(this);\n    _this120.light = light;\n\n    _this120.light.updateMatrixWorld();\n\n    _this120.matrix = light.matrixWorld;\n    _this120.matrixAutoUpdate = false;\n    _this120.color = color;\n    if (size === undefined) size = 1;\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    _this120.lightPlane = new Line(geometry, material);\n\n    _this120.add(_this120.lightPlane);\n\n    geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    _this120.targetLine = new Line(geometry, material);\n\n    _this120.add(_this120.targetLine);\n\n    _this120.update();\n\n    return _this120;\n  }\n\n  _createClass(DirectionalLightHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.lightPlane.geometry.dispose();\n      this.lightPlane.material.dispose();\n      this.targetLine.geometry.dispose();\n      this.targetLine.material.dispose();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _v1.setFromMatrixPosition(this.light.matrixWorld);\n\n      _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n      _v3.subVectors(_v2, _v1);\n\n      this.lightPlane.lookAt(_v2);\n\n      if (this.color !== undefined) {\n        this.lightPlane.material.color.set(this.color);\n        this.targetLine.material.color.set(this.color);\n      } else {\n        this.lightPlane.material.color.copy(this.light.color);\n        this.targetLine.material.color.copy(this.light.color);\n      }\n\n      this.targetLine.lookAt(_v2);\n      this.targetLine.scale.z = _v3.length();\n    }\n  }]);\n\n  return DirectionalLightHelper;\n}(Object3D);\n\nvar _vector = /*@__PURE__*/new Vector3();\n\nvar _camera = /*@__PURE__*/new Camera();\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\n\nvar CameraHelper = /*#__PURE__*/function (_LineSegments4) {\n  _inherits(CameraHelper, _LineSegments4);\n\n  var _super148 = _createSuper(CameraHelper);\n\n  function CameraHelper(camera) {\n    var _this121;\n\n    _classCallCheck(this, CameraHelper);\n\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: true,\n      toneMapped: false\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // near\n\n    addLine('n1', 'n2');\n    addLine('n2', 'n4');\n    addLine('n4', 'n3');\n    addLine('n3', 'n1'); // far\n\n    addLine('f1', 'f2');\n    addLine('f2', 'f4');\n    addLine('f4', 'f3');\n    addLine('f3', 'f1'); // sides\n\n    addLine('n1', 'f1');\n    addLine('n2', 'f2');\n    addLine('n3', 'f3');\n    addLine('n4', 'f4'); // cone\n\n    addLine('p', 'n1');\n    addLine('p', 'n2');\n    addLine('p', 'n3');\n    addLine('p', 'n4'); // up\n\n    addLine('u1', 'u2');\n    addLine('u2', 'u3');\n    addLine('u3', 'u1'); // target\n\n    addLine('c', 't');\n    addLine('p', 'c'); // cross\n\n    addLine('cn1', 'cn2');\n    addLine('cn3', 'cn4');\n    addLine('cf1', 'cf2');\n    addLine('cf3', 'cf4');\n\n    function addLine(a, b) {\n      addPoint(a);\n      addPoint(b);\n    }\n\n    function addPoint(id) {\n      vertices.push(0, 0, 0);\n      colors.push(0, 0, 0);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    _this121 = _super148.call(this, geometry, material);\n    _this121.type = 'CameraHelper';\n    _this121.camera = camera;\n    if (_this121.camera.updateProjectionMatrix) _this121.camera.updateProjectionMatrix();\n    _this121.matrix = camera.matrixWorld;\n    _this121.matrixAutoUpdate = false;\n    _this121.pointMap = pointMap;\n\n    _this121.update(); // colors\n\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333);\n\n    _this121.setColors(colorFrustum, colorCone, colorUp, colorTarget, colorCross);\n\n    return _this121;\n  }\n\n  _createClass(CameraHelper, [{\n    key: \"setColors\",\n    value: function setColors(frustum, cone, up, target, cross) {\n      var geometry = this.geometry;\n      var colorAttribute = geometry.getAttribute('color'); // near\n\n      colorAttribute.setXYZ(0, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(1, frustum.r, frustum.g, frustum.b); // n1, n2\n\n      colorAttribute.setXYZ(2, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(3, frustum.r, frustum.g, frustum.b); // n2, n4\n\n      colorAttribute.setXYZ(4, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(5, frustum.r, frustum.g, frustum.b); // n4, n3\n\n      colorAttribute.setXYZ(6, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(7, frustum.r, frustum.g, frustum.b); // n3, n1\n      // far\n\n      colorAttribute.setXYZ(8, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(9, frustum.r, frustum.g, frustum.b); // f1, f2\n\n      colorAttribute.setXYZ(10, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(11, frustum.r, frustum.g, frustum.b); // f2, f4\n\n      colorAttribute.setXYZ(12, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(13, frustum.r, frustum.g, frustum.b); // f4, f3\n\n      colorAttribute.setXYZ(14, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(15, frustum.r, frustum.g, frustum.b); // f3, f1\n      // sides\n\n      colorAttribute.setXYZ(16, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(17, frustum.r, frustum.g, frustum.b); // n1, f1\n\n      colorAttribute.setXYZ(18, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(19, frustum.r, frustum.g, frustum.b); // n2, f2\n\n      colorAttribute.setXYZ(20, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(21, frustum.r, frustum.g, frustum.b); // n3, f3\n\n      colorAttribute.setXYZ(22, frustum.r, frustum.g, frustum.b);\n      colorAttribute.setXYZ(23, frustum.r, frustum.g, frustum.b); // n4, f4\n      // cone\n\n      colorAttribute.setXYZ(24, cone.r, cone.g, cone.b);\n      colorAttribute.setXYZ(25, cone.r, cone.g, cone.b); // p, n1\n\n      colorAttribute.setXYZ(26, cone.r, cone.g, cone.b);\n      colorAttribute.setXYZ(27, cone.r, cone.g, cone.b); // p, n2\n\n      colorAttribute.setXYZ(28, cone.r, cone.g, cone.b);\n      colorAttribute.setXYZ(29, cone.r, cone.g, cone.b); // p, n3\n\n      colorAttribute.setXYZ(30, cone.r, cone.g, cone.b);\n      colorAttribute.setXYZ(31, cone.r, cone.g, cone.b); // p, n4\n      // up\n\n      colorAttribute.setXYZ(32, up.r, up.g, up.b);\n      colorAttribute.setXYZ(33, up.r, up.g, up.b); // u1, u2\n\n      colorAttribute.setXYZ(34, up.r, up.g, up.b);\n      colorAttribute.setXYZ(35, up.r, up.g, up.b); // u2, u3\n\n      colorAttribute.setXYZ(36, up.r, up.g, up.b);\n      colorAttribute.setXYZ(37, up.r, up.g, up.b); // u3, u1\n      // target\n\n      colorAttribute.setXYZ(38, target.r, target.g, target.b);\n      colorAttribute.setXYZ(39, target.r, target.g, target.b); // c, t\n\n      colorAttribute.setXYZ(40, cross.r, cross.g, cross.b);\n      colorAttribute.setXYZ(41, cross.r, cross.g, cross.b); // p, c\n      // cross\n\n      colorAttribute.setXYZ(42, cross.r, cross.g, cross.b);\n      colorAttribute.setXYZ(43, cross.r, cross.g, cross.b); // cn1, cn2\n\n      colorAttribute.setXYZ(44, cross.r, cross.g, cross.b);\n      colorAttribute.setXYZ(45, cross.r, cross.g, cross.b); // cn3, cn4\n\n      colorAttribute.setXYZ(46, cross.r, cross.g, cross.b);\n      colorAttribute.setXYZ(47, cross.r, cross.g, cross.b); // cf1, cf2\n\n      colorAttribute.setXYZ(48, cross.r, cross.g, cross.b);\n      colorAttribute.setXYZ(49, cross.r, cross.g, cross.b); // cf3, cf4\n\n      colorAttribute.needsUpdate = true;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var geometry = this.geometry;\n      var pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix inverse\n      // world matrix must be identity\n\n      _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n      setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n      setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n      setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n      setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n      setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n      setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n      setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n      setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n      setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n      setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n      setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n      setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n      setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n      setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n      setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n      setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n      setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n      setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n      setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n      setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n      setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n      geometry.getAttribute('position').needsUpdate = true;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n    }\n  }]);\n\n  return CameraHelper;\n}(LineSegments);\n\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n\n  var points = pointMap[point];\n\n  if (points !== undefined) {\n    var position = geometry.getAttribute('position');\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\n\nvar _box = /*@__PURE__*/new Box3();\n\nvar BoxHelper = /*#__PURE__*/function (_LineSegments5) {\n  _inherits(BoxHelper, _LineSegments5);\n\n  var _super149 = _createSuper(BoxHelper);\n\n  function BoxHelper(object) {\n    var _this122;\n\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n\n    _classCallCheck(this, BoxHelper);\n\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    _this122 = _super149.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this122.object = object;\n    _this122.type = 'BoxHelper';\n    _this122.matrixAutoUpdate = false;\n\n    _this122.update();\n\n    return _this122;\n  }\n\n  _createClass(BoxHelper, [{\n    key: \"update\",\n    value: function update(object) {\n      if (object !== undefined) {\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n      }\n\n      if (this.object !== undefined) {\n        _box.setFromObject(this.object);\n      }\n\n      if (_box.isEmpty()) return;\n      var min = _box.min;\n      var max = _box.max;\n      /*\n      \t5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    }\n  }, {\n    key: \"setFromObject\",\n    value: function setFromObject(object) {\n      this.object = object;\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(BoxHelper.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.object = source.object;\n      return this;\n    }\n  }]);\n\n  return BoxHelper;\n}(LineSegments);\n\nvar Box3Helper = /*#__PURE__*/function (_LineSegments6) {\n  _inherits(Box3Helper, _LineSegments6);\n\n  var _super150 = _createSuper(Box3Helper);\n\n  function Box3Helper(box) {\n    var _this123;\n\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n\n    _classCallCheck(this, Box3Helper);\n\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    _this123 = _super150.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this123.box = box;\n    _this123.type = 'Box3Helper';\n\n    _this123.geometry.computeBoundingSphere();\n\n    return _this123;\n  }\n\n  _createClass(Box3Helper, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      var box = this.box;\n      if (box.isEmpty()) return;\n      box.getCenter(this.position);\n      box.getSize(this.scale);\n      this.scale.multiplyScalar(0.5);\n\n      _get(_getPrototypeOf(Box3Helper.prototype), \"updateMatrixWorld\", this).call(this, force);\n    }\n  }]);\n\n  return Box3Helper;\n}(LineSegments);\n\nvar PlaneHelper = /*#__PURE__*/function (_Line3) {\n  _inherits(PlaneHelper, _Line3);\n\n  var _super151 = _createSuper(PlaneHelper);\n\n  function PlaneHelper(plane) {\n    var _this124;\n\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var hex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0xffff00;\n\n    _classCallCheck(this, PlaneHelper);\n\n    var color = hex;\n    var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    _this124 = _super151.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this124.type = 'PlaneHelper';\n    _this124.plane = plane;\n    _this124.size = size;\n    var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n    var geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n\n    _this124.add(new Mesh(geometry2, new MeshBasicMaterial({\n      color: color,\n      opacity: 0.2,\n      transparent: true,\n      depthWrite: false,\n      toneMapped: false\n    })));\n\n    return _this124;\n  }\n\n  _createClass(PlaneHelper, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      var scale = -this.plane.constant;\n      if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n      this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n      this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n      this.lookAt(this.plane.normal);\n\n      _get(_getPrototypeOf(PlaneHelper.prototype), \"updateMatrixWorld\", this).call(this, force);\n    }\n  }]);\n\n  return PlaneHelper;\n}(Line);\n\nvar _axis = /*@__PURE__*/new Vector3();\n\nvar _lineGeometry, _coneGeometry;\n\nvar ArrowHelper = /*#__PURE__*/function (_Object3D17) {\n  _inherits(ArrowHelper, _Object3D17);\n\n  var _super152 = _createSuper(ArrowHelper);\n\n  // dir is assumed to be normalized\n  function ArrowHelper() {\n    var _this125;\n\n    var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 1);\n    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, 0);\n    var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0xffff00;\n    var headLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : length * 0.2;\n    var headWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : headLength * 0.2;\n\n    _classCallCheck(this, ArrowHelper);\n\n    _this125 = _super152.call(this);\n    _this125.type = 'ArrowHelper';\n\n    if (_lineGeometry === undefined) {\n      _lineGeometry = new BufferGeometry();\n\n      _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n      _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n      _coneGeometry.translate(0, -0.5, 0);\n    }\n\n    _this125.position.copy(origin);\n\n    _this125.line = new Line(_lineGeometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this125.line.matrixAutoUpdate = false;\n\n    _this125.add(_this125.line);\n\n    _this125.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this125.cone.matrixAutoUpdate = false;\n\n    _this125.add(_this125.cone);\n\n    _this125.setDirection(dir);\n\n    _this125.setLength(length, headLength, headWidth);\n\n    return _this125;\n  }\n\n  _createClass(ArrowHelper, [{\n    key: \"setDirection\",\n    value: function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        _axis.set(dir.z, 0, -dir.x).normalize();\n\n        var radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(_axis, radians);\n      }\n    }\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      var headLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : length * 0.2;\n      var headWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : headLength * 0.2;\n      this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n      this.line.updateMatrix();\n      this.cone.scale.set(headWidth, headLength, headWidth);\n      this.cone.position.y = length;\n      this.cone.updateMatrix();\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this.line.material.color.set(color);\n      this.cone.material.color.set(color);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(ArrowHelper.prototype), \"copy\", this).call(this, source, false);\n\n      this.line.copy(source.line);\n      this.cone.copy(source.cone);\n      return this;\n    }\n  }]);\n\n  return ArrowHelper;\n}(Object3D);\n\nvar AxesHelper = /*#__PURE__*/function (_LineSegments7) {\n  _inherits(AxesHelper, _LineSegments7);\n\n  var _super153 = _createSuper(AxesHelper);\n\n  function AxesHelper() {\n    var _this126;\n\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    _classCallCheck(this, AxesHelper);\n\n    var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    _this126 = _super153.call(this, geometry, material);\n    _this126.type = 'AxesHelper';\n    return _this126;\n  }\n\n  _createClass(AxesHelper, [{\n    key: \"setColors\",\n    value: function setColors(xAxisColor, yAxisColor, zAxisColor) {\n      var color = new Color();\n      var array = this.geometry.attributes.color.array;\n      color.set(xAxisColor);\n      color.toArray(array, 0);\n      color.toArray(array, 3);\n      color.set(yAxisColor);\n      color.toArray(array, 6);\n      color.toArray(array, 9);\n      color.set(zAxisColor);\n      color.toArray(array, 12);\n      color.toArray(array, 15);\n      this.geometry.attributes.color.needsUpdate = true;\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n    }\n  }]);\n\n  return AxesHelper;\n}(LineSegments);\n\nvar ShapePath = /*#__PURE__*/function () {\n  function ShapePath() {\n    _classCallCheck(this, ShapePath);\n\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  _createClass(ShapePath, [{\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n      return this;\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(x, y) {\n      this.currentPath.lineTo(x, y);\n      return this;\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n      return this;\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n      return this;\n    }\n  }, {\n    key: \"splineThru\",\n    value: function splineThru(pts) {\n      this.currentPath.splineThru(pts);\n      return this;\n    }\n  }, {\n    key: \"toShapes\",\n    value: function toShapes(isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var _tmpPath = inSubpaths[i];\n\n          var _tmpShape = new Shape();\n\n          _tmpShape.curves = _tmpPath.curves;\n          shapes.push(_tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid, tmpPath, tmpShape;\n      var shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = 0;\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var _sIdx = 0, _sLen = newShapes.length; _sIdx < _sLen; _sIdx++) {\n          var sho = newShapeHoles[_sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (_sIdx !== s2Idx) toChange++;\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[_sIdx].push(ho);\n            }\n          }\n        }\n\n        if (toChange > 0 && ambiguous === false) {\n          newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var _i89 = 0, il = newShapes.length; _i89 < il; _i89++) {\n        tmpShape = newShapes[_i89].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[_i89];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  }]);\n\n  return ShapePath;\n}(); // Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\n\nvar _generateTables2 = /*@__PURE__*/_generateTables(),\n    _floatView = _generateTables2.floatView,\n    _uint32View = _generateTables2.uint32View,\n    _baseTable = _generateTables2.baseTable,\n    _shiftTable = _generateTables2.shiftTable,\n    _mantissaTable = _generateTables2.mantissaTable,\n    _exponentTable = _generateTables2.exponentTable,\n    _offsetTable = _generateTables2.offsetTable;\n\nfunction _generateTables() {\n  // float32 to float16 helpers\n  var buffer = new ArrayBuffer(4);\n  var floatView = new Float32Array(buffer);\n  var uint32View = new Uint32Array(buffer);\n  var baseTable = new Uint32Array(512);\n  var shiftTable = new Uint32Array(512);\n\n  for (var i = 0; i < 256; ++i) {\n    var e = i - 127; // very small number (0, -0)\n\n    if (e < -27) {\n      baseTable[i] = 0x0000;\n      baseTable[i | 0x100] = 0x8000;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24; // small number (denorm)\n    } else if (e < -14) {\n      baseTable[i] = 0x0400 >> -e - 14;\n      baseTable[i | 0x100] = 0x0400 >> -e - 14 | 0x8000;\n      shiftTable[i] = -e - 1;\n      shiftTable[i | 0x100] = -e - 1; // normal number\n    } else if (e <= 15) {\n      baseTable[i] = e + 15 << 10;\n      baseTable[i | 0x100] = e + 15 << 10 | 0x8000;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13; // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24; // stay (NaN, Infinity, -Infinity)\n    } else {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13;\n    }\n  } // float16 to float32 helpers\n\n\n  var mantissaTable = new Uint32Array(2048);\n  var exponentTable = new Uint32Array(64);\n  var offsetTable = new Uint32Array(64);\n\n  for (var _i90 = 1; _i90 < 1024; ++_i90) {\n    var m = _i90 << 13; // zero pad mantissa bits\n\n    var _e = 0; // zero exponent\n    // normalized\n\n    while ((m & 0x00800000) === 0) {\n      m <<= 1;\n      _e -= 0x00800000; // decrement exponent\n    }\n\n    m &= ~0x00800000; // clear leading 1 bit\n\n    _e += 0x38800000; // adjust bias\n\n    mantissaTable[_i90] = m | _e;\n  }\n\n  for (var _i91 = 1024; _i91 < 2048; ++_i91) {\n    mantissaTable[_i91] = 0x38000000 + (_i91 - 1024 << 13);\n  }\n\n  for (var _i92 = 1; _i92 < 31; ++_i92) {\n    exponentTable[_i92] = _i92 << 23;\n  }\n\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n\n  for (var _i93 = 33; _i93 < 63; ++_i93) {\n    exponentTable[_i93] = 0x80000000 + (_i93 - 32 << 23);\n  }\n\n  exponentTable[63] = 0xc7800000;\n\n  for (var _i94 = 1; _i94 < 64; ++_i94) {\n    if (_i94 !== 32) {\n      offsetTable[_i94] = 1024;\n    }\n  }\n\n  return {\n    floatView: floatView,\n    uint32View: uint32View,\n    baseTable: baseTable,\n    shiftTable: shiftTable,\n    mantissaTable: mantissaTable,\n    exponentTable: exponentTable,\n    offsetTable: offsetTable\n  };\n} // float32 to float16\n\n\nfunction toHalfFloat(val) {\n  if (Math.abs(val) > 65504) console.warn('THREE.DataUtils.toHalfFloat(): Value out of range.');\n  val = clamp(val, -65504, 65504);\n  _floatView[0] = val;\n  var f = _uint32View[0];\n  var e = f >> 23 & 0x1ff;\n  return _baseTable[e] + ((f & 0x007fffff) >> _shiftTable[e]);\n} // float16 to float32\n\n\nfunction fromHalfFloat(val) {\n  var m = val >> 10;\n  _uint32View[0] = _mantissaTable[_offsetTable[m] + (val & 0x3ff)] + _exponentTable[m];\n  return _floatView[0];\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toHalfFloat: toHalfFloat,\n  fromHalfFloat: fromHalfFloat\n}); // r133, c5bb5434555a3c3ddd784944a0a124f996fc721b\n\nvar ParametricGeometry = /*#__PURE__*/function (_BufferGeometry17) {\n  _inherits(ParametricGeometry, _BufferGeometry17);\n\n  var _super154 = _createSuper(ParametricGeometry);\n\n  function ParametricGeometry() {\n    _classCallCheck(this, ParametricGeometry);\n\n    console.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\n    return _super154.call(this);\n  }\n\n  return ParametricGeometry;\n}(BufferGeometry); // r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\n\nvar TextGeometry = /*#__PURE__*/function (_BufferGeometry18) {\n  _inherits(TextGeometry, _BufferGeometry18);\n\n  var _super155 = _createSuper(TextGeometry);\n\n  function TextGeometry() {\n    _classCallCheck(this, TextGeometry);\n\n    console.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\n    return _super155.call(this);\n  }\n\n  return TextGeometry;\n}(BufferGeometry); // r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\n\nfunction FontLoader() {\n  console.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\n} // r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\n\nfunction Font() {\n  console.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\n} // r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\n\nfunction ImmediateRenderObject() {\n  console.error('THREE.ImmediateRenderObject has been removed.');\n} // r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\n\nvar WebGLMultisampleRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget5) {\n  _inherits(WebGLMultisampleRenderTarget, _WebGLRenderTarget5);\n\n  var _super156 = _createSuper(WebGLMultisampleRenderTarget);\n\n  function WebGLMultisampleRenderTarget(width, height, options) {\n    var _this127;\n\n    _classCallCheck(this, WebGLMultisampleRenderTarget);\n\n    console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.');\n    _this127 = _super156.call(this, width, height, options);\n    _this127.samples = 4;\n    return _this127;\n  }\n\n  return WebGLMultisampleRenderTarget;\n}(WebGLRenderTarget); // r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\n\nvar DataTexture2DArray = /*#__PURE__*/function (_DataArrayTexture) {\n  _inherits(DataTexture2DArray, _DataArrayTexture);\n\n  var _super157 = _createSuper(DataTexture2DArray);\n\n  function DataTexture2DArray(data, width, height, depth) {\n    _classCallCheck(this, DataTexture2DArray);\n\n    console.warn('THREE.DataTexture2DArray has been renamed to DataArrayTexture.');\n    return _super157.call(this, data, width, height, depth);\n  }\n\n  return DataTexture2DArray;\n}(DataArrayTexture); // r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\n\nvar DataTexture3D = /*#__PURE__*/function (_Data3DTexture) {\n  _inherits(DataTexture3D, _Data3DTexture);\n\n  var _super158 = _createSuper(DataTexture3D);\n\n  function DataTexture3D(data, width, height, depth) {\n    _classCallCheck(this, DataTexture3D);\n\n    console.warn('THREE.DataTexture3D has been renamed to Data3DTexture.');\n    return _super158.call(this, data, width, height, depth);\n  }\n\n  return DataTexture3D;\n}(Data3DTexture);\n\nif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n  __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n    detail: {\n      revision: REVISION\n    }\n  }));\n}\n\nif (typeof window !== 'undefined') {\n  if (window.__THREE__) {\n    console.warn('WARNING: Multiple instances of Three.js being imported.');\n  } else {\n    window.__THREE__ = REVISION;\n  }\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, FlatShading, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };","map":{"version":3,"sources":["/Users/warren/sites/interactive-frame-tfjs/node_modules/three/build/three.module.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize$1","constructor","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Object","freeze","__proto__","denormalize","Vector2","prototype","isVector2","scalar","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","sqrt","angle","atan2","distanceToSquared","dx","dy","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","Matrix3","isMatrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","isColor","setRGB","copy","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","toString","hue","saturation","lightness","delta","getHSL","color1","color2","getZ","normalized","NAMES","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","from","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","isTexture","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","setUvTransform","JSON","parse","stringify","needsUpdate","textures","metadata","generator","toJSON","wrap","dispatchEvent","uv","applyMatrix3","Vector4","z","isVector4","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","WebGLRenderTarget","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","dispose","clone","assign","DataArrayTexture","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","Vector3","isVector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","Box3","Infinity","isBox3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","halfSize","_vector$b","add","object","precise","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","attributes","position","fromBufferAttribute","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","toArray","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","setValues","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","isBufferAttribute","usage","updateRange","index1","index2","colors","vectors","setXY","setXYZ","applyNormalMatrix","onUploadCallback","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","hasAttribute","tangents","getAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","isPlane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","enableAll","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","makeOrthographic","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapMaterial","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","fromEquirectangular","fromCubemap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","disableAll","enable","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","disable","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","cameras","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","inputjoint","jointPose","getJointPose","jointName","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","self","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","seqWithValue","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","setOptional","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","upload","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","segments","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CapsuleBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","_sheen","_clearcoat","_iridescence","_transmission","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coeff","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","shading","materialLib","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","bind","setResourcePath","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","isHemisphereLightProbe","sky","ground","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_generateTables","_floatView","floatView","_uint32View","uint32View","_baseTable","baseTable","_shiftTable","shiftTable","_mantissaTable","mantissaTable","_exponentTable","exponentTable","_offsetTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ParametricGeometry","TextGeometry","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","revision","__THREE__"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,IAAMA,QAAQ,GAAG,KAAjB;AACA,IAAMC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,MAAM,EAAE,CAAnB;AAAsBC,EAAAA,KAAK,EAAE,CAA7B;AAAgCC,EAAAA,MAAM,EAAE,CAAxC;AAA2CC,EAAAA,KAAK,EAAE,CAAlD;AAAqDC,EAAAA,GAAG,EAAE;AAA1D,CAAd;AACA,IAAMC,KAAK,GAAG;AAAEH,EAAAA,MAAM,EAAE,CAAV;AAAaE,EAAAA,GAAG,EAAE,CAAlB;AAAqBE,EAAAA,SAAS,EAAE,CAAhC;AAAmCC,EAAAA,YAAY,EAAE;AAAjD,CAAd;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,SAAS,GAAG,CAAlB;AACA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,mBAAmB,GAAG,CAA5B;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,gBAAgB,GAAG,GAAzB;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,UAAU,GAAG,GAAnB;AACA,IAAMC,SAAS,GAAG,GAAlB;AACA,IAAMC,cAAc,GAAG,GAAvB;AACA,IAAMC,sBAAsB,GAAG,GAA/B;AACA,IAAMC,cAAc,GAAG,GAAvB;AACA,IAAMC,sBAAsB,GAAG,GAA/B;AACA,IAAMC,cAAc,GAAG,GAAvB;AACA,IAAMC,sBAAsB,GAAG,GAA/B;AACA,IAAMC,cAAc,GAAG,GAAvB;AACA,IAAMC,sBAAsB,GAAG,GAA/B;AACA,IAAMC,sBAAsB,GAAG,GAA/B;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,SAAS,GAAG,CAAlB;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,mBAAmB,GAAG,CAA5B;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,qBAAqB,GAAG,CAA9B;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AAEA,IAAMC,SAAS,GAAG,GAAlB;AACA,IAAMC,qBAAqB,GAAG,GAA9B;AACA,IAAMC,qBAAqB,GAAG,GAA9B;AACA,IAAMC,gCAAgC,GAAG,GAAzC;AACA,IAAMC,gCAAgC,GAAG,GAAzC;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,cAAc,GAAG,IAAvB;AACA,IAAMC,mBAAmB,GAAG,IAA5B;AACA,IAAMC,sBAAsB,GAAG,IAA/B;AACA,IAAMC,aAAa,GAAG,IAAtB;AACA,IAAMC,0BAA0B,GAAG,IAAnC;AACA,IAAMC,0BAA0B,GAAG,IAAnC;AACA,IAAMC,yBAAyB,GAAG,IAAlC;AACA,IAAMC,yBAAyB,GAAG,IAAlC;AACA,IAAMC,YAAY,GAAG,IAArB;AACA,IAAMC,yBAAyB,GAAG,IAAlC;AACA,IAAMC,yBAAyB,GAAG,IAAlC;AACA,IAAMC,wBAAwB,GAAG,IAAjC;AACA,IAAMC,wBAAwB,GAAG,IAAjC;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA,IAAMC,QAAQ,GAAG,IAAjB;AACA,IAAMC,SAAS,GAAG,IAAlB;AACA,IAAMC,iBAAiB,GAAG,IAA1B;AACA,IAAMC,OAAO,GAAG,IAAhB;AACA,IAAMC,eAAe,GAAG,IAAxB;AACA,IAAMC,SAAS,GAAG,IAAlB;AACA,IAAMC,aAAa,GAAG,IAAtB;AACA,IAAMC,qBAAqB,GAAG,IAA9B;AACA,IAAMC,qBAAqB,GAAG,IAA9B;AACA,IAAMC,kBAAkB,GAAG,IAA3B;AACA,IAAMC,WAAW,GAAG,IAApB;AACA,IAAMC,SAAS,GAAG,IAAlB;AACA,IAAMC,UAAU,GAAG,IAAnB;AACA,IAAMC,eAAe,GAAG,IAAxB;AACA,IAAMC,oBAAoB,GAAG,IAA7B;AACA,IAAMC,WAAW,GAAG,IAApB;AACA,IAAMC,kBAAkB,GAAG,IAA3B;AACA,IAAMC,SAAS,GAAG,IAAlB;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA,IAAMC,QAAQ,GAAG,IAAjB;AACA,IAAMC,eAAe,GAAG,IAAxB;AACA,IAAMC,iBAAiB,GAAG,IAA1B;AAEA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,uBAAuB,GAAG,KAAhC;AACA,IAAMC,uBAAuB,GAAG,KAAhC;AACA,IAAMC,wBAAwB,GAAG,KAAjC;AACA,IAAMC,wBAAwB,GAAG,KAAjC;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,qBAAqB,GAAG,KAA9B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;AACA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,QAAQ,GAAG,IAAjB;AACA,IAAMC,UAAU,GAAG,IAAnB;AACA,IAAMC,YAAY,GAAG,IAArB;AACA,IAAMC,mBAAmB,GAAG,IAA5B;AACA,IAAMC,iBAAiB,GAAG,IAA1B;AACA,IAAMC,iBAAiB,GAAG,IAA1B;AACA,IAAMC,mBAAmB,GAAG,IAA5B;AACA,IAAMC,eAAe,GAAG,IAAxB;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA,IAAMC,wBAAwB,GAAG,IAAjC;AACA,IAAMC,0BAA0B,GAAG,IAAnC;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,qBAAqB,GAAG,CAA9B;AACA,IAAMC,mBAAmB,GAAG,CAA5B;AACA,IAAMC,cAAc,GAAG,IAAvB;AACA,IAAMC,YAAY,GAAG,IAArB;AACA,IAAMC,iBAAiB,GAAG,IAA1B;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA,IAAMC,qBAAqB,GAAG,CAA9B;AACA,IAAMC,oBAAoB,GAAG,CAA7B,C,CAEA;;AACA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,cAAc,GAAG,MAAvB;AACA,IAAMC,oBAAoB,GAAG,aAA7B;AAEA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,aAAa,GAAG,IAAtB;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA,IAAMC,kBAAkB,GAAG,IAA3B;AACA,IAAMC,kBAAkB,GAAG,IAA3B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;AACA,IAAMC,eAAe,GAAG,IAAxB;AAEA,IAAMC,gBAAgB,GAAG,GAAzB;AACA,IAAMC,eAAe,GAAG,GAAxB;AACA,IAAMC,gBAAgB,GAAG,GAAzB;AACA,IAAMC,oBAAoB,GAAG,GAA7B;AACA,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,mBAAmB,GAAG,GAA5B;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,iBAAiB,GAAG,GAA1B;AAEA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,eAAe,GAAG,KAAxB;AACA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,eAAe,GAAG,KAAxB;AAEA,IAAMC,KAAK,GAAG,KAAd;AACA,IAAMC,KAAK,GAAG,QAAd;AAEA,IAAMC,YAAY,GAAG,IAArB,C,CAA2B;;AAE3B;AACA;AACA;;IAEMC,e;;;;;;;WAEL,0BAAkBC,IAAlB,EAAwBC,QAAxB,EAAmC;AAElC,UAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC,KAAKD,UAAL,GAAkB,EAAlB;AAErC,UAAME,SAAS,GAAG,KAAKF,UAAvB;;AAEA,UAAKE,SAAS,CAAEJ,IAAF,CAAT,KAAsBG,SAA3B,EAAuC;AAEtCC,QAAAA,SAAS,CAAEJ,IAAF,CAAT,GAAoB,EAApB;AAEA;;AAED,UAAKI,SAAS,CAAEJ,IAAF,CAAT,CAAkBK,OAAlB,CAA2BJ,QAA3B,MAA0C,CAAE,CAAjD,EAAqD;AAEpDG,QAAAA,SAAS,CAAEJ,IAAF,CAAT,CAAkBM,IAAlB,CAAwBL,QAAxB;AAEA;AAED;;;WAED,0BAAkBD,IAAlB,EAAwBC,QAAxB,EAAmC;AAElC,UAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC,OAAO,KAAP;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AAEA,aAAOE,SAAS,CAAEJ,IAAF,CAAT,KAAsBG,SAAtB,IAAmCC,SAAS,CAAEJ,IAAF,CAAT,CAAkBK,OAAlB,CAA2BJ,QAA3B,MAA0C,CAAE,CAAtF;AAEA;;;WAED,6BAAqBD,IAArB,EAA2BC,QAA3B,EAAsC;AAErC,UAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAMK,aAAa,GAAGH,SAAS,CAAEJ,IAAF,CAA/B;;AAEA,UAAKO,aAAa,KAAKJ,SAAvB,EAAmC;AAElC,YAAMK,KAAK,GAAGD,aAAa,CAACF,OAAd,CAAuBJ,QAAvB,CAAd;;AAEA,YAAKO,KAAK,KAAK,CAAE,CAAjB,EAAqB;AAEpBD,UAAAA,aAAa,CAACE,MAAd,CAAsBD,KAAtB,EAA6B,CAA7B;AAEA;AAED;AAED;;;WAED,uBAAeE,KAAf,EAAuB;AAEtB,UAAK,KAAKR,UAAL,KAAoBC,SAAzB,EAAqC;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAMK,aAAa,GAAGH,SAAS,CAAEM,KAAK,CAACV,IAAR,CAA/B;;AAEA,UAAKO,aAAa,KAAKJ,SAAvB,EAAmC;AAElCO,QAAAA,KAAK,CAACC,MAAN,GAAe,IAAf,CAFkC,CAIlC;;AACA,YAAMC,KAAK,GAAGL,aAAa,CAACM,KAAd,CAAqB,CAArB,CAAd;;AAEA,aAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhDF,UAAAA,KAAK,CAAEE,CAAF,CAAL,CAAWG,IAAX,CAAiB,IAAjB,EAAuBP,KAAvB;AAEA;;AAEDA,QAAAA,KAAK,CAACC,MAAN,GAAe,IAAf;AAEA;AAED;;;;;;AAIF,IAAMO,IAAI,GAAG,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwD,IAAxD,EAA8D,IAA9D,EAAoE,IAApE,EAA0E,IAA1E,EAAgF,IAAhF,EAAsF,IAAtF,EAA4F,IAA5F,EAAkG,IAAlG,EAAwG,IAAxG,EAA8G,IAA9G,EAAoH,IAApH,EAA0H,IAA1H,EAAgI,IAAhI,EAAsI,IAAtI,EAA4I,IAA5I,EAAkJ,IAAlJ,EAAwJ,IAAxJ,EAA8J,IAA9J,EAAoK,IAApK,EAA0K,IAA1K,EAAgL,IAAhL,EAAsL,IAAtL,EAA4L,IAA5L,EAAkM,IAAlM,EAAwM,IAAxM,EAA8M,IAA9M,EAAoN,IAApN,EAA0N,IAA1N,EAAgO,IAAhO,EAAsO,IAAtO,EAA4O,IAA5O,EAAkP,IAAlP,EAAwP,IAAxP,EAA8P,IAA9P,EAAoQ,IAApQ,EAA0Q,IAA1Q,EAAgR,IAAhR,EAAsR,IAAtR,EAA4R,IAA5R,EAAkS,IAAlS,EAAwS,IAAxS,EAA8S,IAA9S,EAAoT,IAApT,EAA0T,IAA1T,EAAgU,IAAhU,EAAsU,IAAtU,EAA4U,IAA5U,EAAkV,IAAlV,EAAwV,IAAxV,EAA8V,IAA9V,EAAoW,IAApW,EAA0W,IAA1W,EAAgX,IAAhX,EAAsX,IAAtX,EAA4X,IAA5X,EAAkY,IAAlY,EAAwY,IAAxY,EAA8Y,IAA9Y,EAAoZ,IAApZ,EAA0Z,IAA1Z,EAAga,IAAha,EAAsa,IAAta,EAA4a,IAA5a,EAAkb,IAAlb,EAAwb,IAAxb,EAA8b,IAA9b,EAAoc,IAApc,EAA0c,IAA1c,EAAgd,IAAhd,EAAsd,IAAtd,EAA4d,IAA5d,EAAke,IAAle,EAAwe,IAAxe,EAA8e,IAA9e,EAAof,IAApf,EAA0f,IAA1f,EAAggB,IAAhgB,EAAsgB,IAAtgB,EAA4gB,IAA5gB,EAAkhB,IAAlhB,EAAwhB,IAAxhB,EAA8hB,IAA9hB,EAAoiB,IAApiB,EAA0iB,IAA1iB,EAAgjB,IAAhjB,EAAsjB,IAAtjB,EAA4jB,IAA5jB,EAAkkB,IAAlkB,EAAwkB,IAAxkB,EAA8kB,IAA9kB,EAAolB,IAAplB,EAA0lB,IAA1lB,EAAgmB,IAAhmB,EAAsmB,IAAtmB,EAA4mB,IAA5mB,EAAknB,IAAlnB,EAAwnB,IAAxnB,EAA8nB,IAA9nB,EAAooB,IAApoB,EAA0oB,IAA1oB,EAAgpB,IAAhpB,EAAspB,IAAtpB,EAA4pB,IAA5pB,EAAkqB,IAAlqB,EAAwqB,IAAxqB,EAA8qB,IAA9qB,EAAorB,IAAprB,EAA0rB,IAA1rB,EAAgsB,IAAhsB,EAAssB,IAAtsB,EAA4sB,IAA5sB,EAAktB,IAAltB,EAAwtB,IAAxtB,EAA8tB,IAA9tB,EAAouB,IAApuB,EAA0uB,IAA1uB,EAAgvB,IAAhvB,EAAsvB,IAAtvB,EAA4vB,IAA5vB,EAAkwB,IAAlwB,EAAwwB,IAAxwB,EAA8wB,IAA9wB,EAAoxB,IAApxB,EAA0xB,IAA1xB,EAAgyB,IAAhyB,EAAsyB,IAAtyB,EAA4yB,IAA5yB,EAAkzB,IAAlzB,EAAwzB,IAAxzB,EAA8zB,IAA9zB,EAAo0B,IAAp0B,EAA00B,IAA10B,EAAg1B,IAAh1B,EAAs1B,IAAt1B,EAA41B,IAA51B,EAAk2B,IAAl2B,EAAw2B,IAAx2B,EAA82B,IAA92B,EAAo3B,IAAp3B,EAA03B,IAA13B,EAAg4B,IAAh4B,EAAs4B,IAAt4B,EAA44B,IAA54B,EAAk5B,IAAl5B,EAAw5B,IAAx5B,EAA85B,IAA95B,EAAo6B,IAAp6B,EAA06B,IAA16B,EAAg7B,IAAh7B,EAAs7B,IAAt7B,EAA47B,IAA57B,EAAk8B,IAAl8B,EAAw8B,IAAx8B,EAA88B,IAA98B,EAAo9B,IAAp9B,EAA09B,IAA19B,EAAg+B,IAAh+B,EAAs+B,IAAt+B,EAA4+B,IAA5+B,EAAk/B,IAAl/B,EAAw/B,IAAx/B,EAA8/B,IAA9/B,EAAogC,IAApgC,EAA0gC,IAA1gC,EAAghC,IAAhhC,EAAshC,IAAthC,EAA4hC,IAA5hC,EAAkiC,IAAliC,EAAwiC,IAAxiC,EAA8iC,IAA9iC,EAAojC,IAApjC,EAA0jC,IAA1jC,EAAgkC,IAAhkC,EAAskC,IAAtkC,EAA4kC,IAA5kC,EAAklC,IAAllC,EAAwlC,IAAxlC,EAA8lC,IAA9lC,EAAomC,IAApmC,EAA0mC,IAA1mC,EAAgnC,IAAhnC,EAAsnC,IAAtnC,EAA4nC,IAA5nC,EAAkoC,IAAloC,EAAwoC,IAAxoC,EAA8oC,IAA9oC,EAAopC,IAAppC,EAA0pC,IAA1pC,EAAgqC,IAAhqC,EAAsqC,IAAtqC,EAA4qC,IAA5qC,EAAkrC,IAAlrC,EAAwrC,IAAxrC,EAA8rC,IAA9rC,EAAosC,IAApsC,EAA0sC,IAA1sC,EAAgtC,IAAhtC,EAAstC,IAAttC,EAA4tC,IAA5tC,EAAkuC,IAAluC,EAAwuC,IAAxuC,EAA8uC,IAA9uC,EAAovC,IAApvC,EAA0vC,IAA1vC,EAAgwC,IAAhwC,EAAswC,IAAtwC,EAA4wC,IAA5wC,EAAkxC,IAAlxC,EAAwxC,IAAxxC,EAA8xC,IAA9xC,EAAoyC,IAApyC,EAA0yC,IAA1yC,EAAgzC,IAAhzC,EAAszC,IAAtzC,EAA4zC,IAA5zC,EAAk0C,IAAl0C,EAAw0C,IAAx0C,EAA80C,IAA90C,EAAo1C,IAAp1C,EAA01C,IAA11C,EAAg2C,IAAh2C,EAAs2C,IAAt2C,EAA42C,IAA52C,EAAk3C,IAAl3C,EAAw3C,IAAx3C,EAA83C,IAA93C,EAAo4C,IAAp4C,EAA04C,IAA14C,EAAg5C,IAAh5C,EAAs5C,IAAt5C,EAA45C,IAA55C,EAAk6C,IAAl6C,EAAw6C,IAAx6C,EAA86C,IAA96C,EAAo7C,IAAp7C,EAA07C,IAA17C,EAAg8C,IAAh8C,EAAs8C,IAAt8C,EAA48C,IAA58C,EAAk9C,IAAl9C,EAAw9C,IAAx9C,EAA89C,IAA99C,EAAo+C,IAAp+C,EAA0+C,IAA1+C,EAAg/C,IAAh/C,EAAs/C,IAAt/C,EAA4/C,IAA5/C,CAAb;AAEA,IAAIC,KAAK,GAAG,OAAZ;AAGA,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAL,GAAU,GAA1B;AACA,IAAMC,OAAO,GAAG,MAAMF,IAAI,CAACC,EAA3B,C,CAEA;;AACA,SAASE,YAAT,GAAwB;AAEvB,MAAMC,EAAE,GAAGJ,IAAI,CAACK,MAAL,KAAgB,UAAhB,GAA6B,CAAxC;AACA,MAAMC,EAAE,GAAGN,IAAI,CAACK,MAAL,KAAgB,UAAhB,GAA6B,CAAxC;AACA,MAAME,EAAE,GAAGP,IAAI,CAACK,MAAL,KAAgB,UAAhB,GAA6B,CAAxC;AACA,MAAMG,EAAE,GAAGR,IAAI,CAACK,MAAL,KAAgB,UAAhB,GAA6B,CAAxC;AACA,MAAMI,IAAI,GAAGZ,IAAI,CAAEO,EAAE,GAAG,IAAP,CAAJ,GAAoBP,IAAI,CAAEO,EAAE,IAAI,CAAN,GAAU,IAAZ,CAAxB,GAA6CP,IAAI,CAAEO,EAAE,IAAI,EAAN,GAAW,IAAb,CAAjD,GAAuEP,IAAI,CAAEO,EAAE,IAAI,EAAN,GAAW,IAAb,CAA3E,GAAiG,GAAjG,GACXP,IAAI,CAAES,EAAE,GAAG,IAAP,CADO,GACST,IAAI,CAAES,EAAE,IAAI,CAAN,GAAU,IAAZ,CADb,GACkC,GADlC,GACwCT,IAAI,CAAES,EAAE,IAAI,EAAN,GAAW,IAAX,GAAkB,IAApB,CAD5C,GACyET,IAAI,CAAES,EAAE,IAAI,EAAN,GAAW,IAAb,CAD7E,GACmG,GADnG,GAEXT,IAAI,CAAEU,EAAE,GAAG,IAAL,GAAY,IAAd,CAFO,GAEgBV,IAAI,CAAEU,EAAE,IAAI,CAAN,GAAU,IAAZ,CAFpB,GAEyC,GAFzC,GAE+CV,IAAI,CAAEU,EAAE,IAAI,EAAN,GAAW,IAAb,CAFnD,GAEyEV,IAAI,CAAEU,EAAE,IAAI,EAAN,GAAW,IAAb,CAF7E,GAGXV,IAAI,CAAEW,EAAE,GAAG,IAAP,CAHO,GAGSX,IAAI,CAAEW,EAAE,IAAI,CAAN,GAAU,IAAZ,CAHb,GAGkCX,IAAI,CAAEW,EAAE,IAAI,EAAN,GAAW,IAAb,CAHtC,GAG4DX,IAAI,CAAEW,EAAE,IAAI,EAAN,GAAW,IAAb,CAH7E,CANuB,CAWvB;;AACA,SAAOC,IAAI,CAACC,WAAL,EAAP;AAEA;;AAED,SAASC,KAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAkC;AAEjC,SAAOd,IAAI,CAACc,GAAL,CAAUD,GAAV,EAAeb,IAAI,CAACa,GAAL,CAAUC,GAAV,EAAeF,KAAf,CAAf,CAAP;AAEA,C,CAED;AACA;;;AACA,SAASG,eAAT,CAA0BC,CAA1B,EAA6BC,CAA7B,EAAiC;AAEhC,SAAO,CAAID,CAAC,GAAGC,CAAN,GAAYA,CAAd,IAAoBA,CAA3B;AAEA,C,CAED;;;AACA,SAASC,SAAT,CAAoBC,CAApB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAwC;AAEvC,SAAOD,EAAE,GAAG,CAAEH,CAAC,GAAGC,EAAN,KAAeG,EAAE,GAAGD,EAApB,KAA6BD,EAAE,GAAGD,EAAlC,CAAZ;AAEA,C,CAED;;;AACA,SAASI,WAAT,CAAsBL,CAAtB,EAAyBM,CAAzB,EAA4Bb,KAA5B,EAAoC;AAEnC,MAAKO,CAAC,KAAKM,CAAX,EAAe;AAEd,WAAO,CAAEb,KAAK,GAAGO,CAAV,KAAkBM,CAAC,GAAGN,CAAtB,CAAP;AAEA,GAJD,MAIO;AAEN,WAAO,CAAP;AAEA;AAED,C,CAED;;;AACA,SAASO,IAAT,CAAeP,CAAf,EAAkBM,CAAlB,EAAqBE,CAArB,EAAyB;AAExB,SAAO,CAAE,IAAIA,CAAN,IAAYR,CAAZ,GAAgBQ,CAAC,GAAGF,CAA3B;AAEA,C,CAED;;;AACA,SAASG,IAAT,CAAeT,CAAf,EAAkBM,CAAlB,EAAqBI,MAArB,EAA6BC,EAA7B,EAAkC;AAEjC,SAAOJ,IAAI,CAAEP,CAAF,EAAKM,CAAL,EAAQ,IAAIzB,IAAI,CAAC+B,GAAL,CAAU,CAAEF,MAAF,GAAWC,EAArB,CAAZ,CAAX;AAEA,C,CAED;;;AACA,SAASE,QAAT,CAAmBb,CAAnB,EAAmC;AAAA,MAAbxB,MAAa,uEAAJ,CAAI;AAElC,SAAOA,MAAM,GAAGK,IAAI,CAACiC,GAAL,CAAUlB,eAAe,CAAEI,CAAF,EAAKxB,MAAM,GAAG,CAAd,CAAf,GAAmCA,MAA7C,CAAhB;AAEA,C,CAED;;;AACA,SAASuC,UAAT,CAAqBf,CAArB,EAAwBN,GAAxB,EAA6BC,GAA7B,EAAmC;AAElC,MAAKK,CAAC,IAAIN,GAAV,EAAgB,OAAO,CAAP;AAChB,MAAKM,CAAC,IAAIL,GAAV,EAAgB,OAAO,CAAP;AAEhBK,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAN,KAAgBC,GAAG,GAAGD,GAAtB,CAAJ;AAEA,SAAOM,CAAC,GAAGA,CAAJ,IAAU,IAAI,IAAIA,CAAlB,CAAP;AAEA;;AAED,SAASgB,YAAT,CAAuBhB,CAAvB,EAA0BN,GAA1B,EAA+BC,GAA/B,EAAqC;AAEpC,MAAKK,CAAC,IAAIN,GAAV,EAAgB,OAAO,CAAP;AAChB,MAAKM,CAAC,IAAIL,GAAV,EAAgB,OAAO,CAAP;AAEhBK,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAN,KAAgBC,GAAG,GAAGD,GAAtB,CAAJ;AAEA,SAAOM,CAAC,GAAGA,CAAJ,GAAQA,CAAR,IAAcA,CAAC,IAAKA,CAAC,GAAG,CAAJ,GAAQ,EAAb,CAAD,GAAqB,EAAnC,CAAP;AAEA,C,CAED;;;AACA,SAASiB,OAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA8B;AAE7B,SAAOD,GAAG,GAAGrC,IAAI,CAACuC,KAAL,CAAYvC,IAAI,CAACK,MAAL,MAAkBiC,IAAI,GAAGD,GAAP,GAAa,CAA/B,CAAZ,CAAb;AAEA,C,CAED;;;AACA,SAASG,SAAT,CAAoBH,GAApB,EAAyBC,IAAzB,EAAgC;AAE/B,SAAOD,GAAG,GAAGrC,IAAI,CAACK,MAAL,MAAkBiC,IAAI,GAAGD,GAAzB,CAAb;AAEA,C,CAED;;;AACA,SAASI,eAAT,CAA0BC,KAA1B,EAAkC;AAEjC,SAAOA,KAAK,IAAK,MAAM1C,IAAI,CAACK,MAAL,EAAX,CAAZ;AAEA,C,CAED;;;AACA,SAASsC,YAAT,CAAuBC,CAAvB,EAA2B;AAE1B,MAAKA,CAAC,KAAK9D,SAAX,EAAuBgB,KAAK,GAAG8C,CAAR,CAFG,CAI1B;;AAEA,MAAIjB,CAAC,GAAG7B,KAAK,IAAI,UAAjB;AAEA6B,EAAAA,CAAC,GAAG3B,IAAI,CAAC6C,IAAL,CAAWlB,CAAC,GAAGA,CAAC,KAAK,EAArB,EAAyBA,CAAC,GAAG,CAA7B,CAAJ;AAEAA,EAAAA,CAAC,IAAIA,CAAC,GAAG3B,IAAI,CAAC6C,IAAL,CAAWlB,CAAC,GAAGA,CAAC,KAAK,CAArB,EAAwBA,CAAC,GAAG,EAA5B,CAAT;AAEA,SAAO,CAAE,CAAEA,CAAC,GAAGA,CAAC,KAAK,EAAZ,MAAqB,CAAvB,IAA6B,UAApC;AAEA;;AAED,SAASmB,QAAT,CAAmBC,OAAnB,EAA6B;AAE5B,SAAOA,OAAO,GAAGhD,OAAjB;AAEA;;AAED,SAASiD,QAAT,CAAmBC,OAAnB,EAA6B;AAE5B,SAAOA,OAAO,GAAG/C,OAAjB;AAEA;;AAED,SAASgD,YAAT,CAAuBtC,KAAvB,EAA+B;AAE9B,SAAO,CAAEA,KAAK,GAAKA,KAAK,GAAG,CAApB,MAA8B,CAA9B,IAAmCA,KAAK,KAAK,CAApD;AAEA;;AAED,SAASuC,cAAT,CAAyBvC,KAAzB,EAAiC;AAEhC,SAAOZ,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAapD,IAAI,CAACqD,IAAL,CAAWrD,IAAI,CAACsD,GAAL,CAAU1C,KAAV,IAAoBZ,IAAI,CAACuD,GAApC,CAAb,CAAP;AAEA;;AAED,SAASC,eAAT,CAA0B5C,KAA1B,EAAkC;AAEjC,SAAOZ,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAapD,IAAI,CAACuC,KAAL,CAAYvC,IAAI,CAACsD,GAAL,CAAU1C,KAAV,IAAoBZ,IAAI,CAACuD,GAArC,CAAb,CAAP;AAEA;;AAED,SAASE,4BAAT,CAAuCC,CAAvC,EAA0CC,CAA1C,EAA6CC,CAA7C,EAAgDC,CAAhD,EAAmDC,KAAnD,EAA2D;AAE1D;AAEA;AACA;AACA;AAEA,MAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAjB;AACA,MAAMC,GAAG,GAAGhE,IAAI,CAACgE,GAAjB;AAEA,MAAMC,EAAE,GAAGF,GAAG,CAAEH,CAAC,GAAG,CAAN,CAAd;AACA,MAAMM,EAAE,GAAGF,GAAG,CAAEJ,CAAC,GAAG,CAAN,CAAd;AAEA,MAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAN,IAAY,CAAd,CAAf;AACA,MAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAN,IAAY,CAAd,CAAf;AAEA,MAAMQ,IAAI,GAAGN,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAN,IAAY,CAAd,CAAhB;AACA,MAAMS,IAAI,GAAGN,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAN,IAAY,CAAd,CAAhB;AAEA,MAAMU,IAAI,GAAGR,GAAG,CAAE,CAAEF,CAAC,GAAGF,CAAN,IAAY,CAAd,CAAhB;AACA,MAAMa,IAAI,GAAGR,GAAG,CAAE,CAAEH,CAAC,GAAGF,CAAN,IAAY,CAAd,CAAhB;;AAEA,UAASG,KAAT;AAEC,SAAK,KAAL;AACCJ,MAAAA,CAAC,CAACe,GAAF,CAAOR,EAAE,GAAGG,GAAZ,EAAiBF,EAAE,GAAGG,IAAtB,EAA4BH,EAAE,GAAGI,IAAjC,EAAuCL,EAAE,GAAGE,GAA5C;AACA;;AAED,SAAK,KAAL;AACCT,MAAAA,CAAC,CAACe,GAAF,CAAOP,EAAE,GAAGI,IAAZ,EAAkBL,EAAE,GAAGG,GAAvB,EAA4BF,EAAE,GAAGG,IAAjC,EAAuCJ,EAAE,GAAGE,GAA5C;AACA;;AAED,SAAK,KAAL;AACCT,MAAAA,CAAC,CAACe,GAAF,CAAOP,EAAE,GAAGG,IAAZ,EAAkBH,EAAE,GAAGI,IAAvB,EAA6BL,EAAE,GAAGG,GAAlC,EAAuCH,EAAE,GAAGE,GAA5C;AACA;;AAED,SAAK,KAAL;AACCT,MAAAA,CAAC,CAACe,GAAF,CAAOR,EAAE,GAAGG,GAAZ,EAAiBF,EAAE,GAAGM,IAAtB,EAA4BN,EAAE,GAAGK,IAAjC,EAAuCN,EAAE,GAAGE,GAA5C;AACA;;AAED,SAAK,KAAL;AACCT,MAAAA,CAAC,CAACe,GAAF,CAAOP,EAAE,GAAGK,IAAZ,EAAkBN,EAAE,GAAGG,GAAvB,EAA4BF,EAAE,GAAGM,IAAjC,EAAuCP,EAAE,GAAGE,GAA5C;AACA;;AAED,SAAK,KAAL;AACCT,MAAAA,CAAC,CAACe,GAAF,CAAOP,EAAE,GAAGM,IAAZ,EAAkBN,EAAE,GAAGK,IAAvB,EAA6BN,EAAE,GAAGG,GAAlC,EAAuCH,EAAE,GAAGE,GAA5C;AACA;;AAED;AACCO,MAAAA,OAAO,CAACC,IAAR,CAAc,oFAAoFb,KAAlG;AA3BF;AA+BA;;AAED,SAASc,aAAT,CAAwBhE,KAAxB,EAA+BrB,KAA/B,EAAuC;AAEtC,UAASA,KAAK,CAACsF,WAAf;AAEC,SAAKC,YAAL;AAEC,aAAOlE,KAAP;;AAED,SAAKmE,WAAL;AAEC,aAAOnE,KAAK,GAAG,OAAf;;AAED,SAAKoE,UAAL;AAEC,aAAOpE,KAAK,GAAG,KAAf;;AAED,SAAKqE,UAAL;AAEC,aAAOjF,IAAI,CAACc,GAAL,CAAUF,KAAK,GAAG,OAAlB,EAA2B,CAAE,GAA7B,CAAP;;AAED,SAAKsE,SAAL;AAEC,aAAOlF,IAAI,CAACc,GAAL,CAAUF,KAAK,GAAG,KAAlB,EAAyB,CAAE,GAA3B,CAAP;;AAED;AAEC,YAAM,IAAIuE,KAAJ,CAAW,yBAAX,CAAN;AAxBF;AA4BA;;AAED,SAASC,SAAT,CAAoBxE,KAApB,EAA2BrB,KAA3B,EAAmC;AAElC,UAASA,KAAK,CAACsF,WAAf;AAEC,SAAKC,YAAL;AAEC,aAAOlE,KAAP;;AAED,SAAKmE,WAAL;AAEC,aAAO/E,IAAI,CAACqF,KAAL,CAAYzE,KAAK,GAAG,OAApB,CAAP;;AAED,SAAKoE,UAAL;AAEC,aAAOhF,IAAI,CAACqF,KAAL,CAAYzE,KAAK,GAAG,KAApB,CAAP;;AAED,SAAKqE,UAAL;AAEC,aAAOjF,IAAI,CAACqF,KAAL,CAAYzE,KAAK,GAAG,OAApB,CAAP;;AAED,SAAKsE,SAAL;AAEC,aAAOlF,IAAI,CAACqF,KAAL,CAAYzE,KAAK,GAAG,KAApB,CAAP;;AAED;AAEC,YAAM,IAAIuE,KAAJ,CAAW,yBAAX,CAAN;AAxBF;AA4BA;;AAED,IAAIG,SAAS,GAAG,aAAaC,MAAM,CAACC,MAAP,CAAc;AAC1CC,EAAAA,SAAS,EAAE,IAD+B;AAE1C1F,EAAAA,OAAO,EAAEA,OAFiC;AAG1CG,EAAAA,OAAO,EAAEA,OAHiC;AAI1CC,EAAAA,YAAY,EAAEA,YAJ4B;AAK1CQ,EAAAA,KAAK,EAAEA,KALmC;AAM1CI,EAAAA,eAAe,EAAEA,eANyB;AAO1CG,EAAAA,SAAS,EAAEA,SAP+B;AAQ1CM,EAAAA,WAAW,EAAEA,WAR6B;AAS1CE,EAAAA,IAAI,EAAEA,IAToC;AAU1CE,EAAAA,IAAI,EAAEA,IAVoC;AAW1CI,EAAAA,QAAQ,EAAEA,QAXgC;AAY1CE,EAAAA,UAAU,EAAEA,UAZ8B;AAa1CC,EAAAA,YAAY,EAAEA,YAb4B;AAc1CC,EAAAA,OAAO,EAAEA,OAdiC;AAe1CI,EAAAA,SAAS,EAAEA,SAf+B;AAgB1CC,EAAAA,eAAe,EAAEA,eAhByB;AAiB1CE,EAAAA,YAAY,EAAEA,YAjB4B;AAkB1CG,EAAAA,QAAQ,EAAEA,QAlBgC;AAmB1CE,EAAAA,QAAQ,EAAEA,QAnBgC;AAoB1CE,EAAAA,YAAY,EAAEA,YApB4B;AAqB1CC,EAAAA,cAAc,EAAEA,cArB0B;AAsB1CK,EAAAA,eAAe,EAAEA,eAtByB;AAuB1CC,EAAAA,4BAA4B,EAAEA,4BAvBY;AAwB1C2B,EAAAA,SAAS,EAAEA,SAxB+B;AAyB1CM,EAAAA,WAAW,EAAEd;AAzB6B,CAAd,CAA7B;;IA4BMe,O;AAEL,qBAA4B;AAAA,QAAfxE,CAAe,uEAAX,CAAW;AAAA,QAARM,CAAQ,uEAAJ,CAAI;;AAAA;;AAE3BkE,IAAAA,OAAO,CAACC,SAAR,CAAkBC,SAAlB,GAA8B,IAA9B;AAEA,SAAK1E,CAAL,GAASA,CAAT;AACA,SAAKM,CAAL,GAASA,CAAT;AAEA;;;;SAED,eAAY;AAEX,aAAO,KAAKN,CAAZ;AAEA,K;SAED,aAAWP,KAAX,EAAmB;AAElB,WAAKO,CAAL,GAASP,KAAT;AAEA;;;SAED,eAAa;AAEZ,aAAO,KAAKa,CAAZ;AAEA,K;SAED,aAAYb,KAAZ,EAAoB;AAEnB,WAAKa,CAAL,GAASb,KAAT;AAEA;;;WAED,aAAKO,CAAL,EAAQM,CAAR,EAAY;AAEX,WAAKN,CAAL,GAASA,CAAT;AACA,WAAKM,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWqE,MAAX,EAAoB;AAEnB,WAAK3E,CAAL,GAAS2E,MAAT;AACA,WAAKrE,CAAL,GAASqE,MAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM3E,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMM,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAActC,KAAd,EAAqByB,KAArB,EAA6B;AAE5B,cAASzB,KAAT;AAEC,aAAK,CAAL;AAAQ,eAAKgC,CAAL,GAASP,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKa,CAAL,GAASb,KAAT;AAAgB;;AACxB;AAAS,gBAAM,IAAIuE,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AAJV;;AAQA,aAAO,IAAP;AAEA;;;WAED,sBAAcA,KAAd,EAAsB;AAErB,cAASA,KAAT;AAEC,aAAK,CAAL;AAAQ,iBAAO,KAAKgC,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAKM,CAAZ;;AACR;AAAS,gBAAM,IAAI0D,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AAJV;AAQA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK0F,WAAT,CAAsB,KAAK1D,CAA3B,EAA8B,KAAKM,CAAnC,CAAP;AAEA;;;WAED,cAAMsE,CAAN,EAAU;AAET,WAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX;AACA,WAAKM,CAAL,GAASsE,CAAC,CAACtE,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKsE,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKsB,UAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWmB,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBsE,CAAjB,EAAoBnD,CAApB,EAAwB;AAEvB,WAAKzB,CAAL,IAAU4E,CAAC,CAAC5E,CAAF,GAAMyB,CAAhB;AACA,WAAKnB,CAAL,IAAUsE,CAAC,CAACtE,CAAF,GAAMmB,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKmD,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKuB,UAAL,CAAiBH,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWmB,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUsE,CAAV,EAAc;AAEb,WAAK5E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBqE,MAAhB,EAAyB;AAExB,WAAK3E,CAAL,IAAU2E,MAAV;AACA,WAAKrE,CAAL,IAAUqE,MAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQC,CAAR,EAAY;AAEX,WAAK5E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcqE,MAAd,EAAuB;AAEtB,aAAO,KAAKK,cAAL,CAAqB,IAAIL,MAAzB,CAAP;AAEA;;;WAED,sBAAc7E,CAAd,EAAkB;AAEjB,UAAME,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AACA,UAAM2E,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,WAAKlF,CAAL,GAASiF,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAApC;AACA,WAAK3E,CAAL,GAAS2E,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAApC;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKL,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACa,GAAL,CAAU,KAAKM,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACa,GAAL,CAAU,KAAKY,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKsE,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAU,KAAKK,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAU,KAAKW,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAOZ,GAAP,EAAYC,GAAZ,EAAkB;AAEjB;AAEA,WAAKK,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACM,CAAd,EAAiBnB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACK,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACY,CAAd,EAAiBzB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACW,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAa6E,MAAb,EAAqBC,MAArB,EAA8B;AAE7B,WAAKpF,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAKpF,CAAvB,CAAlB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAK9E,CAAvB,CAAlB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaZ,GAAb,EAAkBC,GAAlB,EAAwB;AAEvB,UAAMnB,MAAM,GAAG,KAAKA,MAAL,EAAf;AAEA,aAAO,KAAK6G,YAAL,CAAmB7G,MAAM,IAAI,CAA7B,EAAiCwG,cAAjC,CAAiDnG,IAAI,CAACc,GAAL,CAAUD,GAAV,EAAeb,IAAI,CAACa,GAAL,CAAUC,GAAV,EAAenB,MAAf,CAAf,CAAjD,CAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKwB,CAAL,GAASnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAKN,CAAL,GAASnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKN,CAAL,GAASnB,IAAI,CAACqF,KAAL,CAAY,KAAKlE,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqF,KAAL,CAAY,KAAK5D,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,WAAKN,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAjB,GAAuCnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAhD;AACA,WAAKM,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAjB,GAAuCzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAhD;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAKN,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAKM,CAAL,GAAS,CAAE,KAAKA,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKsE,CAAL,EAAS;AAER,aAAO,KAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX,GAAe,KAAKM,CAAL,GAASsE,CAAC,CAACtE,CAAjC;AAEA;;;WAED,eAAOsE,CAAP,EAAW;AAEV,aAAO,KAAK5E,CAAL,GAAS4E,CAAC,CAACtE,CAAX,GAAe,KAAKA,CAAL,GAASsE,CAAC,CAAC5E,CAAjC;AAEA;;;WAED,oBAAW;AAEV,aAAO,KAAKA,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAAvC;AAEA;;;WAED,kBAAS;AAER,aAAOzB,IAAI,CAACyG,IAAL,CAAW,KAAKtF,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAA3C,CAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAOzB,IAAI,CAACiC,GAAL,CAAU,KAAKd,CAAf,IAAqBnB,IAAI,CAACiC,GAAL,CAAU,KAAKR,CAAf,CAA5B;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAK+E,YAAL,CAAmB,KAAK7G,MAAL,MAAiB,CAApC,CAAP;AAEA;;;WAED,iBAAQ;AAEP;AAEA,UAAM+G,KAAK,GAAG1G,IAAI,CAAC2G,KAAL,CAAY,CAAE,KAAKlF,CAAnB,EAAsB,CAAE,KAAKN,CAA7B,IAAmCnB,IAAI,CAACC,EAAtD;AAEA,aAAOyG,KAAP;AAEA;;;WAED,oBAAYX,CAAZ,EAAgB;AAEf,aAAO/F,IAAI,CAACyG,IAAL,CAAW,KAAKG,iBAAL,CAAwBb,CAAxB,CAAX,CAAP;AAEA;;;WAED,2BAAmBA,CAAnB,EAAuB;AAEtB,UAAMc,EAAE,GAAG,KAAK1F,CAAL,GAAS4E,CAAC,CAAC5E,CAAtB;AAAA,UAAyB2F,EAAE,GAAG,KAAKrF,CAAL,GAASsE,CAAC,CAACtE,CAAzC;AACA,aAAOoF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtB;AAEA;;;WAED,6BAAqBf,CAArB,EAAyB;AAExB,aAAO/F,IAAI,CAACiC,GAAL,CAAU,KAAKd,CAAL,GAAS4E,CAAC,CAAC5E,CAArB,IAA2BnB,IAAI,CAACiC,GAAL,CAAU,KAAKR,CAAL,GAASsE,CAAC,CAACtE,CAArB,CAAlC;AAEA;;;WAED,mBAAW9B,MAAX,EAAoB;AAEnB,aAAO,KAAKyF,SAAL,GAAiBe,cAAjB,CAAiCxG,MAAjC,CAAP;AAEA;;;WAED,cAAMoG,CAAN,EAASgB,KAAT,EAAiB;AAEhB,WAAK5F,CAAL,IAAU,CAAE4E,CAAC,CAAC5E,CAAF,GAAM,KAAKA,CAAb,IAAmB4F,KAA7B;AACA,WAAKtF,CAAL,IAAU,CAAEsE,CAAC,CAACtE,CAAF,GAAM,KAAKA,CAAb,IAAmBsF,KAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaC,EAAb,EAAiBC,EAAjB,EAAqBF,KAArB,EAA6B;AAE5B,WAAK5F,CAAL,GAAS6F,EAAE,CAAC7F,CAAH,GAAO,CAAE8F,EAAE,CAAC9F,CAAH,GAAO6F,EAAE,CAAC7F,CAAZ,IAAkB4F,KAAlC;AACA,WAAKtF,CAAL,GAASuF,EAAE,CAACvF,CAAH,GAAO,CAAEwF,EAAE,CAACxF,CAAH,GAAOuF,EAAE,CAACvF,CAAZ,IAAkBsF,KAAlC;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQhB,CAAR,EAAY;AAEX,aAAWA,CAAC,CAAC5E,CAAF,KAAQ,KAAKA,CAAf,IAAwB4E,CAAC,CAACtE,CAAF,KAAQ,KAAKA,CAA9C;AAEA;;;WAED,mBAAWlC,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,WAAK/F,CAAL,GAAS5B,KAAK,CAAE2H,MAAF,CAAd;AACA,WAAKzF,CAAL,GAASlC,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAK/F,CAAvB;AACA5B,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKzF,CAA3B;AAEA,aAAOlC,KAAP;AAEA;;;WAED,6BAAqB4H,SAArB,EAAgChI,KAAhC,EAAuC+H,MAAvC,EAAgD;AAE/C,UAAKA,MAAM,KAAKpI,SAAhB,EAA4B;AAE3B4F,QAAAA,OAAO,CAACC,IAAR,CAAc,qEAAd;AAEA;;AAED,WAAKxD,CAAL,GAASgG,SAAS,CAACC,IAAV,CAAgBjI,KAAhB,CAAT;AACA,WAAKsC,CAAL,GAAS0F,SAAS,CAACE,IAAV,CAAgBlI,KAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcmI,MAAd,EAAsBZ,KAAtB,EAA8B;AAE7B,UAAM7C,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAU2C,KAAV,CAAV;AAAA,UAA6B9D,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAU0C,KAAV,CAAjC;AAEA,UAAMvF,CAAC,GAAG,KAAKA,CAAL,GAASmG,MAAM,CAACnG,CAA1B;AACA,UAAMM,CAAC,GAAG,KAAKA,CAAL,GAAS6F,MAAM,CAAC7F,CAA1B;AAEA,WAAKN,CAAL,GAASA,CAAC,GAAG0C,CAAJ,GAAQpC,CAAC,GAAGmB,CAAZ,GAAgB0E,MAAM,CAACnG,CAAhC;AACA,WAAKM,CAAL,GAASN,CAAC,GAAGyB,CAAJ,GAAQnB,CAAC,GAAGoC,CAAZ,GAAgByD,MAAM,CAAC7F,CAAhC;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAKN,CAAL,GAASnB,IAAI,CAACK,MAAL,EAAT;AACA,WAAKoB,CAAL,GAASzB,IAAI,CAACK,MAAL,EAAT;AAEA,aAAO,IAAP;AAEA;;SAEEkH,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKrG,CAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKM,CAAX;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;IASKgG,O;AAEL,qBAAc;AAAA;;AAEbA,IAAAA,OAAO,CAAC7B,SAAR,CAAkB8B,SAAlB,GAA8B,IAA9B;AAEA,SAAKrB,QAAL,GAAgB,CAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,CAAhB;;AAQA,QAAKsB,SAAS,CAAChI,MAAV,GAAmB,CAAxB,EAA4B;AAE3B+E,MAAAA,OAAO,CAACkD,KAAR,CAAe,+EAAf;AAEA;AAED;;;;WAED,aAAKC,GAAL,EAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAmD;AAElD,UAAMC,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUT,GAAV;AAAeS,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUN,GAAV;AAAeM,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUH,GAAV;AAC9BG,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUR,GAAV;AAAeQ,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUL,GAAV;AAAeK,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUF,GAAV;AAC9BE,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUP,GAAV;AAAeO,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUJ,GAAV;AAAeI,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUD,GAAV;AAE9B,aAAO,IAAP;AAEA;;;WAED,oBAAW;AAEV,WAAK5D,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP;AAQA,aAAO,IAAP;AAEA;;;WAED,cAAMxD,CAAN,EAAU;AAET,UAAMqH,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMkC,EAAE,GAAGtH,CAAC,CAACoF,QAAb;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AACtCD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AACtCD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAEtC,aAAO,IAAP;AAEA;;;WAED,sBAAcC,KAAd,EAAqBC,KAArB,EAA4BC,KAA5B,EAAoC;AAEnCF,MAAAA,KAAK,CAACG,oBAAN,CAA4B,IAA5B,EAAkC,CAAlC;AACAF,MAAAA,KAAK,CAACE,oBAAN,CAA4B,IAA5B,EAAkC,CAAlC;AACAD,MAAAA,KAAK,CAACC,oBAAN,CAA4B,IAA5B,EAAkC,CAAlC;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgB1H,CAAhB,EAAoB;AAEnB,UAAMsH,EAAE,GAAGtH,CAAC,CAACoF,QAAb;AAEA,WAAK5B,GAAL,CAEC8D,EAAE,CAAE,CAAF,CAFH,EAEUA,EAAE,CAAE,CAAF,CAFZ,EAEmBA,EAAE,CAAE,CAAF,CAFrB,EAGCA,EAAE,CAAE,CAAF,CAHH,EAGUA,EAAE,CAAE,CAAF,CAHZ,EAGmBA,EAAE,CAAE,CAAF,CAHrB,EAICA,EAAE,CAAE,CAAF,CAJH,EAIUA,EAAE,CAAE,CAAF,CAJZ,EAImBA,EAAE,CAAE,EAAF,CAJrB;AAQA,aAAO,IAAP;AAEA;;;WAED,kBAAUtH,CAAV,EAAc;AAEb,aAAO,KAAK2H,gBAAL,CAAuB,IAAvB,EAA6B3H,CAA7B,CAAP;AAEA;;;WAED,qBAAaA,CAAb,EAAiB;AAEhB,aAAO,KAAK2H,gBAAL,CAAuB3H,CAAvB,EAA0B,IAA1B,CAAP;AAEA;;;WAED,0BAAkB0C,CAAlB,EAAqBC,CAArB,EAAyB;AAExB,UAAMiF,EAAE,GAAGlF,CAAC,CAAC0C,QAAb;AACA,UAAMyC,EAAE,GAAGlF,CAAC,CAACyC,QAAb;AACA,UAAMiC,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAM0C,GAAG,GAAGF,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBG,GAAG,GAAGH,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCI,GAAG,GAAGJ,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMK,GAAG,GAAGL,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBM,GAAG,GAAGN,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCO,GAAG,GAAGP,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBS,GAAG,GAAGT,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCU,GAAG,GAAGV,EAAE,CAAE,CAAF,CAA5C;AAEA,UAAMW,GAAG,GAAGV,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBW,GAAG,GAAGX,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCY,GAAG,GAAGZ,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMa,GAAG,GAAGb,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBc,GAAG,GAAGd,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCe,GAAG,GAAGf,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBiB,GAAG,GAAGjB,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCkB,GAAG,GAAGlB,EAAE,CAAE,CAAF,CAA5C;AAEAR,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGS,GAAN,GAAYR,GAAG,GAAGW,GAAlB,GAAwBV,GAAG,GAAGa,GAAxC;AACAxB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGU,GAAN,GAAYT,GAAG,GAAGY,GAAlB,GAAwBX,GAAG,GAAGc,GAAxC;AACAzB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGW,GAAN,GAAYV,GAAG,GAAGa,GAAlB,GAAwBZ,GAAG,GAAGe,GAAxC;AAEA1B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGM,GAAN,GAAYL,GAAG,GAAGQ,GAAlB,GAAwBP,GAAG,GAAGU,GAAxC;AACAxB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGO,GAAN,GAAYN,GAAG,GAAGS,GAAlB,GAAwBR,GAAG,GAAGW,GAAxC;AACAzB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGQ,GAAN,GAAYP,GAAG,GAAGU,GAAlB,GAAwBT,GAAG,GAAGY,GAAxC;AAEA1B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGK,GAAlB,GAAwBJ,GAAG,GAAGO,GAAxC;AACAxB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGM,GAAlB,GAAwBL,GAAG,GAAGQ,GAAxC;AACAzB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGO,GAAlB,GAAwBN,GAAG,GAAGS,GAAxC;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBpH,CAAhB,EAAoB;AAEnB,UAAM0F,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAC5B0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAC5B0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAE5B,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,UAAM0F,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAM1C,CAAC,GAAG2E,EAAE,CAAE,CAAF,CAAZ;AAAA,UAAmB1E,CAAC,GAAG0E,EAAE,CAAE,CAAF,CAAzB;AAAA,UAAgCzE,CAAC,GAAGyE,EAAE,CAAE,CAAF,CAAtC;AAAA,UACC2B,CAAC,GAAG3B,EAAE,CAAE,CAAF,CADP;AAAA,UACclC,CAAC,GAAGkC,EAAE,CAAE,CAAF,CADpB;AAAA,UAC2B4B,CAAC,GAAG5B,EAAE,CAAE,CAAF,CADjC;AAAA,UAEC6B,CAAC,GAAG7B,EAAE,CAAE,CAAF,CAFP;AAAA,UAEc8B,CAAC,GAAG9B,EAAE,CAAE,CAAF,CAFpB;AAAA,UAE2B7I,CAAC,GAAG6I,EAAE,CAAE,CAAF,CAFjC;AAIA,aAAO3E,CAAC,GAAGyC,CAAJ,GAAQ3G,CAAR,GAAYkE,CAAC,GAAGuG,CAAJ,GAAQE,CAApB,GAAwBxG,CAAC,GAAGqG,CAAJ,GAAQxK,CAAhC,GAAoCmE,CAAC,GAAGsG,CAAJ,GAAQC,CAA5C,GAAgDtG,CAAC,GAAGoG,CAAJ,GAAQG,CAAxD,GAA4DvG,CAAC,GAAGuC,CAAJ,GAAQ+D,CAA3E;AAEA;;;WAED,kBAAS;AAER,UAAM7B,EAAE,GAAG,KAAKjC,QAAhB;AAAA,UAECwB,GAAG,GAAGS,EAAE,CAAE,CAAF,CAFT;AAAA,UAEgBN,GAAG,GAAGM,EAAE,CAAE,CAAF,CAFxB;AAAA,UAE+BH,GAAG,GAAGG,EAAE,CAAE,CAAF,CAFvC;AAAA,UAGCR,GAAG,GAAGQ,EAAE,CAAE,CAAF,CAHT;AAAA,UAGgBL,GAAG,GAAGK,EAAE,CAAE,CAAF,CAHxB;AAAA,UAG+BF,GAAG,GAAGE,EAAE,CAAE,CAAF,CAHvC;AAAA,UAICP,GAAG,GAAGO,EAAE,CAAE,CAAF,CAJT;AAAA,UAIgBJ,GAAG,GAAGI,EAAE,CAAE,CAAF,CAJxB;AAAA,UAI+BD,GAAG,GAAGC,EAAE,CAAE,CAAF,CAJvC;AAAA,UAMC+B,GAAG,GAAGhC,GAAG,GAAGJ,GAAN,GAAYG,GAAG,GAAGF,GANzB;AAAA,UAOCoC,GAAG,GAAGlC,GAAG,GAAGL,GAAN,GAAYM,GAAG,GAAGP,GAPzB;AAAA,UAQCyC,GAAG,GAAGrC,GAAG,GAAGJ,GAAN,GAAYG,GAAG,GAAGF,GARzB;AAAA,UAUCyC,GAAG,GAAG3C,GAAG,GAAGwC,GAAN,GAAYrC,GAAG,GAAGsC,GAAlB,GAAwBnC,GAAG,GAAGoC,GAVrC;AAYA,UAAKC,GAAG,KAAK,CAAb,EAAiB,OAAO,KAAK/F,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAP;AAEjB,UAAMgG,MAAM,GAAG,IAAID,GAAnB;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,GAAG,GAAGI,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEH,GAAG,GAAGD,GAAN,GAAYG,GAAG,GAAGL,GAApB,IAA4ByC,MAAtC;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEF,GAAG,GAAGJ,GAAN,GAAYG,GAAG,GAAGF,GAApB,IAA4BwC,MAAtC;AAEAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgC,GAAG,GAAGG,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAED,GAAG,GAAGR,GAAN,GAAYM,GAAG,GAAGJ,GAApB,IAA4B0C,MAAtC;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEH,GAAG,GAAGL,GAAN,GAAYM,GAAG,GAAGP,GAApB,IAA4B4C,MAAtC;AAEAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUiC,GAAG,GAAGE,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEN,GAAG,GAAGD,GAAN,GAAYG,GAAG,GAAGL,GAApB,IAA4B4C,MAAtC;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEL,GAAG,GAAGJ,GAAN,GAAYG,GAAG,GAAGF,GAApB,IAA4B2C,MAAtC;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,UAAIC,GAAJ;AACA,UAAMzJ,CAAC,GAAG,KAAKoF,QAAf;AAEAqE,MAAAA,GAAG,GAAGzJ,CAAC,CAAE,CAAF,CAAP;AAAcA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASA,CAAC,CAAE,CAAF,CAAV;AAAiBA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASyJ,GAAT;AAC/BA,MAAAA,GAAG,GAAGzJ,CAAC,CAAE,CAAF,CAAP;AAAcA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASA,CAAC,CAAE,CAAF,CAAV;AAAiBA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASyJ,GAAT;AAC/BA,MAAAA,GAAG,GAAGzJ,CAAC,CAAE,CAAF,CAAP;AAAcA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASA,CAAC,CAAE,CAAF,CAAV;AAAiBA,MAAAA,CAAC,CAAE,CAAF,CAAD,GAASyJ,GAAT;AAE/B,aAAO,IAAP;AAEA;;;WAED,yBAAiBC,OAAjB,EAA2B;AAE1B,aAAO,KAAKC,cAAL,CAAqBD,OAArB,EAA+BE,MAA/B,GAAwCC,SAAxC,EAAP;AAEA;;;WAED,4BAAoBC,CAApB,EAAwB;AAEvB,UAAM9J,CAAC,GAAG,KAAKoF,QAAf;AAEA0E,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AACA8J,MAAAA,CAAC,CAAE,CAAF,CAAD,GAAS9J,CAAC,CAAE,CAAF,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgB+J,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,QAAhC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAmD;AAElD,UAAMzH,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUqH,QAAV,CAAV;AACA,UAAMxI,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUoH,QAAV,CAAV;AAEA,WAAK3G,GAAL,CACCyG,EAAE,GAAGrH,CADN,EACSqH,EAAE,GAAGtI,CADd,EACiB,CAAEsI,EAAF,IAASrH,CAAC,GAAGwH,EAAJ,GAASzI,CAAC,GAAG0I,EAAtB,IAA6BD,EAA7B,GAAkCL,EADnD,EAEC,CAAEG,EAAF,GAAOvI,CAFR,EAEWuI,EAAE,GAAGtH,CAFhB,EAEmB,CAAEsH,EAAF,IAAS,CAAEvI,CAAF,GAAMyI,EAAN,GAAWxH,CAAC,GAAGyH,EAAxB,IAA+BA,EAA/B,GAAoCL,EAFvD,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP;AAMA,aAAO,IAAP;AAEA;;;WAED,eAAOC,EAAP,EAAWC,EAAX,EAAgB;AAEf,UAAM7C,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW4C,EAAX;AAAe5C,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW4C,EAAX;AAAe5C,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW4C,EAAX;AAC9B5C,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW6C,EAAX;AAAe7C,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW6C,EAAX;AAAe7C,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW6C,EAAX;AAE9B,aAAO,IAAP;AAEA;;;WAED,gBAAQI,KAAR,EAAgB;AAEf,UAAM1H,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAV;AACA,UAAM3I,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAV;AAEA,UAAMjD,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAM0C,GAAG,GAAGT,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBU,GAAG,GAAGV,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCW,GAAG,GAAGX,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMY,GAAG,GAAGZ,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBa,GAAG,GAAGb,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCc,GAAG,GAAGd,EAAE,CAAE,CAAF,CAA5C;AAEAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGkF,GAAJ,GAAUnG,CAAC,GAAGsG,GAAxB;AACAZ,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGmF,GAAJ,GAAUpG,CAAC,GAAGuG,GAAxB;AACAb,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGoF,GAAJ,GAAUrG,CAAC,GAAGwG,GAAxB;AAEAd,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1F,CAAF,GAAMmG,GAAN,GAAYlF,CAAC,GAAGqF,GAA1B;AACAZ,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1F,CAAF,GAAMoG,GAAN,GAAYnF,CAAC,GAAGsF,GAA1B;AACAb,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1F,CAAF,GAAMqG,GAAN,GAAYpF,CAAC,GAAGuF,GAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW4B,EAAX,EAAeC,EAAf,EAAoB;AAEnB,UAAM3C,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW0C,EAAE,GAAG1C,EAAE,CAAE,CAAF,CAAlB;AAAyBA,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW0C,EAAE,GAAG1C,EAAE,CAAE,CAAF,CAAlB;AAAyBA,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW0C,EAAE,GAAG1C,EAAE,CAAE,CAAF,CAAlB;AAClDA,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW2C,EAAE,GAAG3C,EAAE,CAAE,CAAF,CAAlB;AAAyBA,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW2C,EAAE,GAAG3C,EAAE,CAAE,CAAF,CAAlB;AAAyBA,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW2C,EAAE,GAAG3C,EAAE,CAAE,CAAF,CAAlB;AAElD,aAAO,IAAP;AAEA;;;WAED,gBAAQkD,MAAR,EAAiB;AAEhB,UAAMlD,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMkC,EAAE,GAAGiD,MAAM,CAACnF,QAAlB;;AAEA,WAAM,IAAI5G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAK6I,EAAE,CAAE7I,CAAF,CAAF,KAAY8I,EAAE,CAAE9I,CAAF,CAAnB,EAA2B,OAAO,KAAP;AAE3B;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAWF,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;;AAE9B,WAAM,IAAIzH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAK4G,QAAL,CAAe5G,CAAf,IAAqBF,KAAK,CAAEE,CAAC,GAAGyH,MAAN,CAA1B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC,UAAMoB,EAAE,GAAG,KAAKjC,QAAhB;AAEA9G,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkBoB,EAAE,CAAE,CAAF,CAApB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AAEA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AAEA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AAEA,aAAO/I,KAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKsF,WAAT,GAAuB4G,SAAvB,CAAkC,KAAKpF,QAAvC,CAAP;AAEA;;;;;;AAIF,SAASqF,gBAAT,CAA2BnM,KAA3B,EAAmC;AAElC;AAEA,OAAM,IAAIE,CAAC,GAAGF,KAAK,CAACI,MAAN,GAAe,CAA7B,EAAgCF,CAAC,IAAI,CAArC,EAAwC,EAAGA,CAA3C,EAA+C;AAE9C,QAAKF,KAAK,CAAEE,CAAF,CAAL,GAAa,KAAlB,EAA0B,OAAO,IAAP;AAE1B;;AAED,SAAO,KAAP;AAEA;;AAED,IAAMkM,YAAY,GAAG;AACpBzG,EAAAA,SAAS,EAAEA,SADS;AAEpBF,EAAAA,UAAU,EAAEA,UAFQ;AAGpB4G,EAAAA,iBAAiB,EAAEA,iBAHC;AAIpB3G,EAAAA,UAAU,EAAEA,UAJQ;AAKpBF,EAAAA,WAAW,EAAEA,WALO;AAMpB8G,EAAAA,UAAU,EAAEA,UANQ;AAOpBC,EAAAA,WAAW,EAAEA,WAPO;AAQpBhH,EAAAA,YAAY,EAAEA,YARM;AASpBiH,EAAAA,YAAY,EAAEA;AATM,CAArB;;AAYA,SAASC,aAAT,CAAwBrN,IAAxB,EAA8BsN,MAA9B,EAAuC;AAEtC,SAAO,IAAIN,YAAY,CAAEhN,IAAF,CAAhB,CAA0BsN,MAA1B,CAAP;AAEA;;AAED,SAASC,eAAT,CAA0BC,IAA1B,EAAiC;AAEhC,SAAOC,QAAQ,CAACF,eAAT,CAA0B,8BAA1B,EAA0DC,IAA1D,CAAP;AAEA;;AAED,SAASE,YAAT,CAAuBxI,CAAvB,EAA2B;AAE1B,SAASA,CAAC,GAAG,OAAN,GAAkBA,CAAC,GAAG,YAAtB,GAAqC7D,IAAI,CAACoD,GAAL,CAAUS,CAAC,GAAG,YAAJ,GAAmB,YAA7B,EAA2C,GAA3C,CAA5C;AAEA;;AAED,SAASyI,YAAT,CAAuBzI,CAAvB,EAA2B;AAE1B,SAASA,CAAC,GAAG,SAAN,GAAoBA,CAAC,GAAG,KAAxB,GAAgC,QAAU7D,IAAI,CAACoD,GAAL,CAAUS,CAAV,EAAa,OAAb,CAAV,GAAqC,KAA5E;AAEA,C,CAED;AACA;;;AACA,IAAM0I,EAAE,mCACL3P,cADK,sBACiBC,oBADjB,EACyCwP,YADzC,yBAELxP,oBAFK,sBAEuBD,cAFvB,EAEyC0P,YAFzC,QAAR;AAKA,IAAME,eAAe,GAAG;AAEvBC,EAAAA,UAAU,EAAE,IAFW;;AAIvB,MAAIC,iBAAJ,GAAwB;AAEvB,WAAO7P,oBAAP;AAEA,GARsB;;AAUvB,MAAI6P,iBAAJ,CAAuBC,UAAvB,EAAoC;AAEnCjI,IAAAA,OAAO,CAACC,IAAR,CAAc,wDAAd;AAEA,GAdsB;;AAgBvBiI,EAAAA,OAAO,EAAE,iBAAWC,KAAX,EAAkBC,gBAAlB,EAAoCC,gBAApC,EAAuD;AAE/D,QAAK,KAAKN,UAAL,IAAmBK,gBAAgB,KAAKC,gBAAxC,IAA4D,CAAED,gBAA9D,IAAkF,CAAEC,gBAAzF,EAA4G;AAE3G,aAAOF,KAAP;AAEA;;AAED,QAAKN,EAAE,CAAEO,gBAAF,CAAF,IAA0BP,EAAE,CAAEO,gBAAF,CAAF,CAAwBC,gBAAxB,MAA+CjO,SAA9E,EAA0F;AAEzF,UAAMkO,EAAE,GAAGT,EAAE,CAAEO,gBAAF,CAAF,CAAwBC,gBAAxB,CAAX;AAEAF,MAAAA,KAAK,CAAC9B,CAAN,GAAUiC,EAAE,CAAEH,KAAK,CAAC9B,CAAR,CAAZ;AACA8B,MAAAA,KAAK,CAAC1C,CAAN,GAAU6C,EAAE,CAAEH,KAAK,CAAC1C,CAAR,CAAZ;AACA0C,MAAAA,KAAK,CAACjJ,CAAN,GAAUoJ,EAAE,CAAEH,KAAK,CAACjJ,CAAR,CAAZ;AAEA,aAAOiJ,KAAP;AAEA;;AAED,UAAM,IAAI1H,KAAJ,CAAW,qCAAX,CAAN;AAEA,GAtCsB;AAwCvB8H,EAAAA,qBAAqB,EAAE,+BAAWJ,KAAX,EAAkBE,gBAAlB,EAAqC;AAE3D,WAAO,KAAKH,OAAL,CAAcC,KAAd,EAAqB,KAAKH,iBAA1B,EAA6CK,gBAA7C,CAAP;AAEA,GA5CsB;AA8CvBG,EAAAA,mBAAmB,EAAE,6BAAWL,KAAX,EAAkBC,gBAAlB,EAAqC;AAEzD,WAAO,KAAKF,OAAL,CAAcC,KAAd,EAAqBC,gBAArB,EAAuC,KAAKJ,iBAA5C,CAAP;AAEA;AAlDsB,CAAxB;AAsDA,IAAMS,cAAc,GAAG;AAAE,eAAa,QAAf;AAAyB,kBAAgB,QAAzC;AAAmD,UAAQ,QAA3D;AAAqE,gBAAc,QAAnF;AAA6F,WAAS,QAAtG;AACtB,WAAS,QADa;AACH,YAAU,QADP;AACiB,WAAS,QAD1B;AACoC,oBAAkB,QADtD;AACgE,UAAQ,QADxE;AACkF,gBAAc,QADhG;AAEtB,WAAS,QAFa;AAEH,eAAa,QAFV;AAEoB,eAAa,QAFjC;AAE2C,gBAAc,QAFzD;AAEmE,eAAa,QAFhF;AAE0F,WAAS,QAFnG;AAGtB,oBAAkB,QAHI;AAGM,cAAY,QAHlB;AAG4B,aAAW,QAHvC;AAGiD,UAAQ,QAHzD;AAGmE,cAAY,QAH/E;AAGyF,cAAY,QAHrG;AAItB,mBAAiB,QAJK;AAIK,cAAY,QAJjB;AAI2B,eAAa,QAJxC;AAIkD,cAAY,QAJ9D;AAIwE,eAAa,QAJrF;AAI+F,iBAAe,QAJ9G;AAKtB,oBAAkB,QALI;AAKM,gBAAc,QALpB;AAK8B,gBAAc,QAL5C;AAKsD,aAAW,QALjE;AAK2E,gBAAc,QALzF;AAKmG,kBAAgB,QALnH;AAMtB,mBAAiB,QANK;AAMK,mBAAiB,QANtB;AAMgC,mBAAiB,QANjD;AAM2D,mBAAiB,QAN5E;AAMsF,gBAAc,QANpG;AAOtB,cAAY,QAPU;AAOA,iBAAe,QAPf;AAOyB,aAAW,QAPpC;AAO8C,aAAW,QAPzD;AAOmE,gBAAc,QAPjF;AAO2F,eAAa,QAPxG;AAQtB,iBAAe,QARO;AAQG,iBAAe,QARlB;AAQ4B,aAAW,QARvC;AAQiD,eAAa,QAR9D;AAQwE,gBAAc,QARtF;AAQgG,UAAQ,QARxG;AAStB,eAAa,QATS;AASC,UAAQ,QATT;AASmB,WAAS,QAT5B;AASsC,iBAAe,QATrD;AAS+D,UAAQ,QATvE;AASiF,cAAY,QAT7F;AASuG,aAAW,QATlH;AAUtB,eAAa,QAVS;AAUC,YAAU,QAVX;AAUqB,WAAS,QAV9B;AAUwC,WAAS,QAVjD;AAU2D,cAAY,QAVvE;AAUiF,mBAAiB,QAVlG;AAU4G,eAAa,QAVzH;AAWtB,kBAAgB,QAXM;AAWI,eAAa,QAXjB;AAW2B,gBAAc,QAXzC;AAWmD,eAAa,QAXhE;AAW0E,0BAAwB,QAXlG;AAW4G,eAAa,QAXzH;AAYtB,gBAAc,QAZQ;AAYE,eAAa,QAZf;AAYyB,eAAa,QAZtC;AAYgD,iBAAe,QAZ/D;AAYyE,mBAAiB,QAZ1F;AAYoG,kBAAgB,QAZpH;AAatB,oBAAkB,QAbI;AAaM,oBAAkB,QAbxB;AAakC,oBAAkB,QAbpD;AAa8D,iBAAe,QAb7E;AAauF,UAAQ,QAb/F;AAayG,eAAa,QAbtH;AActB,WAAS,QAda;AAcH,aAAW,QAdR;AAckB,YAAU,QAd5B;AAcsC,sBAAoB,QAd1D;AAcoE,gBAAc,QAdlF;AAc4F,kBAAgB,QAd5G;AAetB,kBAAgB,QAfM;AAeI,oBAAkB,QAftB;AAegC,qBAAmB,QAfnD;AAe6D,uBAAqB,QAflF;AAe4F,qBAAmB,QAf/G;AAgBtB,qBAAmB,QAhBG;AAgBO,kBAAgB,QAhBvB;AAgBiC,eAAa,QAhB9C;AAgBwD,eAAa,QAhBrE;AAgB+E,cAAY,QAhB3F;AAgBqG,iBAAe,QAhBpH;AAiBtB,UAAQ,QAjBc;AAiBJ,aAAW,QAjBP;AAiBiB,WAAS,QAjB1B;AAiBoC,eAAa,QAjBjD;AAiB2D,YAAU,QAjBrE;AAiB+E,eAAa,QAjB5F;AAiBsG,YAAU,QAjBhH;AAkBtB,mBAAiB,QAlBK;AAkBK,eAAa,QAlBlB;AAkB4B,mBAAiB,QAlB7C;AAkBuD,mBAAiB,QAlBxE;AAkBkF,gBAAc,QAlBhG;AAkB0G,eAAa,QAlBvH;AAmBtB,UAAQ,QAnBc;AAmBJ,UAAQ,QAnBJ;AAmBc,UAAQ,QAnBtB;AAmBgC,gBAAc,QAnB9C;AAmBwD,YAAU,QAnBlE;AAmB4E,mBAAiB,QAnB7F;AAmBuG,SAAO,QAnB9G;AAmBwH,eAAa,QAnBrI;AAoBtB,eAAa,QApBS;AAoBC,iBAAe,QApBhB;AAoB0B,YAAU,QApBpC;AAoB8C,gBAAc,QApB5D;AAoBsE,cAAY,QApBlF;AAoB4F,cAAY,QApBxG;AAqBtB,YAAU,QArBY;AAqBF,YAAU,QArBR;AAqBkB,aAAW,QArB7B;AAqBuC,eAAa,QArBpD;AAqB8D,eAAa,QArB3E;AAqBqF,eAAa,QArBlG;AAqB4G,UAAQ,QArBpH;AAsBtB,iBAAe,QAtBO;AAsBG,eAAa,QAtBhB;AAsB0B,SAAO,QAtBjC;AAsB2C,UAAQ,QAtBnD;AAsB6D,aAAW,QAtBxE;AAsBkF,YAAU,QAtB5F;AAsBsG,eAAa,QAtBnH;AAuBtB,YAAU,QAvBY;AAuBF,WAAS,QAvBP;AAuBiB,WAAS,QAvB1B;AAuBoC,gBAAc,QAvBlD;AAuB4D,YAAU,QAvBtE;AAuBgF,iBAAe;AAvB/F,CAAvB;AAyBA,IAAMC,IAAI,GAAG;AAAErC,EAAAA,CAAC,EAAE,CAAL;AAAQZ,EAAAA,CAAC,EAAE,CAAX;AAAcvG,EAAAA,CAAC,EAAE;AAAjB,CAAb;AACA,IAAMyJ,KAAK,GAAG;AAAEjD,EAAAA,CAAC,EAAE,CAAL;AAAQxH,EAAAA,CAAC,EAAE,CAAX;AAAclD,EAAAA,CAAC,EAAE;AAAjB,CAAd;AACA,IAAM4N,KAAK,GAAG;AAAElD,EAAAA,CAAC,EAAE,CAAL;AAAQxH,EAAAA,CAAC,EAAE,CAAX;AAAclD,EAAAA,CAAC,EAAE;AAAjB,CAAd;;AAEA,SAAS6N,OAAT,CAAkBC,CAAlB,EAAqB9J,CAArB,EAAwB/B,CAAxB,EAA4B;AAE3B,MAAKA,CAAC,GAAG,CAAT,EAAaA,CAAC,IAAI,CAAL;AACb,MAAKA,CAAC,GAAG,CAAT,EAAaA,CAAC,IAAI,CAAL;AACb,MAAKA,CAAC,GAAG,IAAI,CAAb,EAAiB,OAAO6L,CAAC,GAAG,CAAE9J,CAAC,GAAG8J,CAAN,IAAY,CAAZ,GAAgB7L,CAA3B;AACjB,MAAKA,CAAC,GAAG,IAAI,CAAb,EAAiB,OAAO+B,CAAP;AACjB,MAAK/B,CAAC,GAAG,IAAI,CAAb,EAAiB,OAAO6L,CAAC,GAAG,CAAE9J,CAAC,GAAG8J,CAAN,IAAY,CAAZ,IAAkB,IAAI,CAAJ,GAAQ7L,CAA1B,CAAX;AACjB,SAAO6L,CAAP;AAEA;;AAED,SAASC,YAAT,CAAuBC,MAAvB,EAA+BpO,MAA/B,EAAwC;AAEvCA,EAAAA,MAAM,CAACyL,CAAP,GAAW2C,MAAM,CAAC3C,CAAlB;AACAzL,EAAAA,MAAM,CAAC6K,CAAP,GAAWuD,MAAM,CAACvD,CAAlB;AACA7K,EAAAA,MAAM,CAACsE,CAAP,GAAW8J,MAAM,CAAC9J,CAAlB;AAEA,SAAOtE,MAAP;AAEA;;IAEKqO,K;AAEL,iBAAa5C,CAAb,EAAgBZ,CAAhB,EAAmBvG,CAAnB,EAAuB;AAAA;;AAEtB,SAAKgK,OAAL,GAAe,IAAf;AAEA,SAAK7C,CAAL,GAAS,CAAT;AACA,SAAKZ,CAAL,GAAS,CAAT;AACA,SAAKvG,CAAL,GAAS,CAAT;;AAEA,QAAKuG,CAAC,KAAKrL,SAAN,IAAmB8E,CAAC,KAAK9E,SAA9B,EAA0C;AAEzC;AACA,aAAO,KAAK2F,GAAL,CAAUsG,CAAV,CAAP;AAEA;;AAED,WAAO,KAAK8C,MAAL,CAAa9C,CAAb,EAAgBZ,CAAhB,EAAmBvG,CAAnB,CAAP;AAEA;;;;WAED,aAAKhD,KAAL,EAAa;AAEZ,UAAKA,KAAK,IAAIA,KAAK,CAACgN,OAApB,EAA8B;AAE7B,aAAKE,IAAL,CAAWlN,KAAX;AAEA,OAJD,MAIO,IAAK,OAAOA,KAAP,KAAiB,QAAtB,EAAiC;AAEvC,aAAKmN,MAAL,CAAanN,KAAb;AAEA,OAJM,MAIA,IAAK,OAAOA,KAAP,KAAiB,QAAtB,EAAiC;AAEvC,aAAKoN,QAAL,CAAepN,KAAf;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAWkF,MAAX,EAAoB;AAEnB,WAAKiF,CAAL,GAASjF,MAAT;AACA,WAAKqE,CAAL,GAASrE,MAAT;AACA,WAAKlC,CAAL,GAASkC,MAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQmI,GAAR,EAA2C;AAAA,UAA9BtB,UAA8B,uEAAjB/P,cAAiB;AAE1CqR,MAAAA,GAAG,GAAGjO,IAAI,CAACuC,KAAL,CAAY0L,GAAZ,CAAN;AAEA,WAAKlD,CAAL,GAAS,CAAEkD,GAAG,IAAI,EAAP,GAAY,GAAd,IAAsB,GAA/B;AACA,WAAK9D,CAAL,GAAS,CAAE8D,GAAG,IAAI,CAAP,GAAW,GAAb,IAAqB,GAA9B;AACA,WAAKrK,CAAL,GAAS,CAAEqK,GAAG,GAAG,GAAR,IAAgB,GAAzB;AAEAzB,MAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ5B,CAAR,EAAWZ,CAAX,EAAcvG,CAAd,EAAqD;AAAA,UAApC+I,UAAoC,uEAAvB9P,oBAAuB;AAEpD,WAAKkO,CAAL,GAASA,CAAT;AACA,WAAKZ,CAAL,GAASA,CAAT;AACA,WAAKvG,CAAL,GAASA,CAAT;AAEA4I,MAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQvC,CAAR,EAAWxH,CAAX,EAAclD,CAAd,EAAqD;AAAA,UAApCiN,UAAoC,uEAAvB9P,oBAAuB;AAEpD;AACAuN,MAAAA,CAAC,GAAGrJ,eAAe,CAAEqJ,CAAF,EAAK,CAAL,CAAnB;AACAxH,MAAAA,CAAC,GAAGjC,KAAK,CAAEiC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAT;AACAlD,MAAAA,CAAC,GAAGiB,KAAK,CAAEjB,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAT;;AAEA,UAAKkD,CAAC,KAAK,CAAX,EAAe;AAEd,aAAKmI,CAAL,GAAS,KAAKZ,CAAL,GAAS,KAAKvG,CAAL,GAASlE,CAA3B;AAEA,OAJD,MAIO;AAEN,YAAM8N,CAAC,GAAG9N,CAAC,IAAI,GAAL,GAAWA,CAAC,IAAK,IAAIkD,CAAT,CAAZ,GAA2BlD,CAAC,GAAGkD,CAAJ,GAAUlD,CAAC,GAAGkD,CAAnD;AACA,YAAMc,CAAC,GAAK,IAAIhE,CAAN,GAAY8N,CAAtB;AAEA,aAAKzC,CAAL,GAASwC,OAAO,CAAE7J,CAAF,EAAK8J,CAAL,EAAQpD,CAAC,GAAG,IAAI,CAAhB,CAAhB;AACA,aAAKD,CAAL,GAASoD,OAAO,CAAE7J,CAAF,EAAK8J,CAAL,EAAQpD,CAAR,CAAhB;AACA,aAAKxG,CAAL,GAAS2J,OAAO,CAAE7J,CAAF,EAAK8J,CAAL,EAAQpD,CAAC,GAAG,IAAI,CAAhB,CAAhB;AAEA;;AAEDoC,MAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUuB,KAAV,EAA+C;AAAA,UAA9BvB,UAA8B,uEAAjB/P,cAAiB;;AAE9C,eAASuR,WAAT,CAAsBC,MAAtB,EAA+B;AAE9B,YAAKA,MAAM,KAAKtP,SAAhB,EAA4B;;AAE5B,YAAKuP,UAAU,CAAED,MAAF,CAAV,GAAuB,CAA5B,EAAgC;AAE/B1J,UAAAA,OAAO,CAACC,IAAR,CAAc,qCAAqCuJ,KAArC,GAA6C,mBAA3D;AAEA;AAED;;AAGD,UAAIjN,CAAJ;;AAEA,UAAKA,CAAC,GAAG,+BAA+BqN,IAA/B,CAAqCJ,KAArC,CAAT,EAAwD;AAEvD;AAEA,YAAIrB,KAAJ;AACA,YAAMV,IAAI,GAAGlL,CAAC,CAAE,CAAF,CAAd;AACA,YAAMsN,UAAU,GAAGtN,CAAC,CAAE,CAAF,CAApB;;AAEA,gBAASkL,IAAT;AAEC,eAAK,KAAL;AACA,eAAK,MAAL;AAEC,gBAAKU,KAAK,GAAG,+DAA+DyB,IAA/D,CAAqEC,UAArE,CAAb,EAAiG;AAEhG;AACA,mBAAKxD,CAAL,GAAS/K,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AACA,mBAAK1C,CAAL,GAASnK,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AACA,mBAAKjJ,CAAL,GAAS5D,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AAEAL,cAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEAwB,cAAAA,WAAW,CAAEtB,KAAK,CAAE,CAAF,CAAP,CAAX;AAEA,qBAAO,IAAP;AAEA;;AAED,gBAAKA,KAAK,GAAG,qEAAqEyB,IAArE,CAA2EC,UAA3E,CAAb,EAAuG;AAEtG;AACA,mBAAKxD,CAAL,GAAS/K,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AACA,mBAAK1C,CAAL,GAASnK,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AACA,mBAAKjJ,CAAL,GAAS5D,IAAI,CAACa,GAAL,CAAU,GAAV,EAAe2N,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAvB,IAA8C,GAAvD;AAEAL,cAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEAwB,cAAAA,WAAW,CAAEtB,KAAK,CAAE,CAAF,CAAP,CAAX;AAEA,qBAAO,IAAP;AAEA;;AAED;;AAED,eAAK,KAAL;AACA,eAAK,MAAL;AAEC,gBAAKA,KAAK,GAAG,yEAAyEyB,IAAzE,CAA+EC,UAA/E,CAAb,EAA2G;AAE1G;AACA,kBAAMnE,CAAC,GAAGiE,UAAU,CAAExB,KAAK,CAAE,CAAF,CAAP,CAAV,GAA2B,GAArC;AACA,kBAAMjK,CAAC,GAAG4L,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAR,GAA6B,GAAvC;AACA,kBAAMnN,CAAC,GAAG8O,QAAQ,CAAE3B,KAAK,CAAE,CAAF,CAAP,EAAc,EAAd,CAAR,GAA6B,GAAvC;AAEAsB,cAAAA,WAAW,CAAEtB,KAAK,CAAE,CAAF,CAAP,CAAX;AAEA,qBAAO,KAAK4B,MAAL,CAAarE,CAAb,EAAgBxH,CAAhB,EAAmBlD,CAAnB,EAAsBiN,UAAtB,CAAP;AAEA;;AAED;AArDF;AAyDA,OAjED,MAiEO,IAAK1L,CAAC,GAAG,oBAAoBqN,IAApB,CAA0BJ,KAA1B,CAAT,EAA6C;AAEnD;AAEA,YAAMD,GAAG,GAAGhN,CAAC,CAAE,CAAF,CAAb;AACA,YAAMyN,IAAI,GAAGT,GAAG,CAACtO,MAAjB;;AAEA,YAAK+O,IAAI,KAAK,CAAd,EAAkB;AAEjB;AACA,eAAK3D,CAAL,GAASyD,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AACA,eAAKxE,CAAL,GAASqE,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AACA,eAAK/K,CAAL,GAAS4K,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AAEAnC,UAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEA,iBAAO,IAAP;AAEA,SAXD,MAWO,IAAK+B,IAAI,KAAK,CAAd,EAAkB;AAExB;AACA,eAAK3D,CAAL,GAASyD,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AACA,eAAKxE,CAAL,GAASqE,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AACA,eAAK/K,CAAL,GAAS4K,QAAQ,CAAEP,GAAG,CAACU,MAAJ,CAAY,CAAZ,IAAkBV,GAAG,CAACU,MAAJ,CAAY,CAAZ,CAApB,EAAqC,EAArC,CAAR,GAAoD,GAA7D;AAEAnC,UAAAA,eAAe,CAACU,mBAAhB,CAAqC,IAArC,EAA2CP,UAA3C;AAEA,iBAAO,IAAP;AAEA;AAED;;AAED,UAAKuB,KAAK,IAAIA,KAAK,CAACvO,MAAN,GAAe,CAA7B,EAAiC;AAEhC,eAAO,KAAKiP,YAAL,CAAmBV,KAAnB,EAA0BvB,UAA1B,CAAP;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,sBAAcuB,KAAd,EAAmD;AAAA,UAA9BvB,UAA8B,uEAAjB/P,cAAiB;;AAElD;AACA,UAAMqR,GAAG,GAAGd,cAAc,CAAEe,KAAK,CAACxN,WAAN,EAAF,CAA1B;;AAEA,UAAKuN,GAAG,KAAKnP,SAAb,EAAyB;AAExB;AACA,aAAKiP,MAAL,CAAaE,GAAb,EAAkBtB,UAAlB;AAEA,OALD,MAKO;AAEN;AACAjI,QAAAA,OAAO,CAACC,IAAR,CAAc,gCAAgCuJ,KAA9C;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKrJ,WAAT,CAAsB,KAAKkG,CAA3B,EAA8B,KAAKZ,CAAnC,EAAsC,KAAKvG,CAA3C,CAAP;AAEA;;;WAED,cAAMiJ,KAAN,EAAc;AAEb,WAAK9B,CAAL,GAAS8B,KAAK,CAAC9B,CAAf;AACA,WAAKZ,CAAL,GAAS0C,KAAK,CAAC1C,CAAf;AACA,WAAKvG,CAAL,GAASiJ,KAAK,CAACjJ,CAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkBiJ,KAAlB,EAA0B;AAEzB,WAAK9B,CAAL,GAASsB,YAAY,CAAEQ,KAAK,CAAC9B,CAAR,CAArB;AACA,WAAKZ,CAAL,GAASkC,YAAY,CAAEQ,KAAK,CAAC1C,CAAR,CAArB;AACA,WAAKvG,CAAL,GAASyI,YAAY,CAAEQ,KAAK,CAACjJ,CAAR,CAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkBiJ,KAAlB,EAA0B;AAEzB,WAAK9B,CAAL,GAASuB,YAAY,CAAEO,KAAK,CAAC9B,CAAR,CAArB;AACA,WAAKZ,CAAL,GAASmC,YAAY,CAAEO,KAAK,CAAC1C,CAAR,CAArB;AACA,WAAKvG,CAAL,GAAS0I,YAAY,CAAEO,KAAK,CAACjJ,CAAR,CAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAsB;AAErB,WAAKiL,gBAAL,CAAuB,IAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAsB;AAErB,WAAKC,gBAAL,CAAuB,IAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAsC;AAAA,UAA9BnC,UAA8B,uEAAjB/P,cAAiB;AAErC4P,MAAAA,eAAe,CAACS,qBAAhB,CAAuCQ,YAAY,CAAE,IAAF,EAAQL,IAAR,CAAnD,EAAmET,UAAnE;AAEA,aAAOhM,KAAK,CAAEyM,IAAI,CAACrC,CAAL,GAAS,GAAX,EAAgB,CAAhB,EAAmB,GAAnB,CAAL,IAAiC,EAAjC,GAAsCpK,KAAK,CAAEyM,IAAI,CAACjD,CAAL,GAAS,GAAX,EAAgB,CAAhB,EAAmB,GAAnB,CAAL,IAAiC,CAAvE,GAA2ExJ,KAAK,CAAEyM,IAAI,CAACxJ,CAAL,GAAS,GAAX,EAAgB,CAAhB,EAAmB,GAAnB,CAAL,IAAiC,CAAnH;AAEA;;;WAED,wBAA4C;AAAA,UAA9B+I,UAA8B,uEAAjB/P,cAAiB;AAE3C,aAAO,CAAE,WAAW,KAAKmS,MAAL,CAAapC,UAAb,EAA0BqC,QAA1B,CAAoC,EAApC,CAAb,EAAwDxP,KAAxD,CAA+D,CAAE,CAAjE,CAAP;AAEA;;;WAED,gBAAQF,MAAR,EAAoD;AAAA,UAApCqN,UAAoC,uEAAvB9P,oBAAuB;AAEnD;AAEA2P,MAAAA,eAAe,CAACS,qBAAhB,CAAuCQ,YAAY,CAAE,IAAF,EAAQL,IAAR,CAAnD,EAAmET,UAAnE;AAEA,UAAM5B,CAAC,GAAGqC,IAAI,CAACrC,CAAf;AAAA,UAAkBZ,CAAC,GAAGiD,IAAI,CAACjD,CAA3B;AAAA,UAA8BvG,CAAC,GAAGwJ,IAAI,CAACxJ,CAAvC;AAEA,UAAM9C,GAAG,GAAGd,IAAI,CAACc,GAAL,CAAUiK,CAAV,EAAaZ,CAAb,EAAgBvG,CAAhB,CAAZ;AACA,UAAM/C,GAAG,GAAGb,IAAI,CAACa,GAAL,CAAUkK,CAAV,EAAaZ,CAAb,EAAgBvG,CAAhB,CAAZ;AAEA,UAAIqL,GAAJ,EAASC,UAAT;AACA,UAAMC,SAAS,GAAG,CAAEtO,GAAG,GAAGC,GAAR,IAAgB,GAAlC;;AAEA,UAAKD,GAAG,KAAKC,GAAb,EAAmB;AAElBmO,QAAAA,GAAG,GAAG,CAAN;AACAC,QAAAA,UAAU,GAAG,CAAb;AAEA,OALD,MAKO;AAEN,YAAME,KAAK,GAAGtO,GAAG,GAAGD,GAApB;AAEAqO,QAAAA,UAAU,GAAGC,SAAS,IAAI,GAAb,GAAmBC,KAAK,IAAKtO,GAAG,GAAGD,GAAX,CAAxB,GAA2CuO,KAAK,IAAK,IAAItO,GAAJ,GAAUD,GAAf,CAA7D;;AAEA,gBAASC,GAAT;AAEC,eAAKiK,CAAL;AAAQkE,YAAAA,GAAG,GAAG,CAAE9E,CAAC,GAAGvG,CAAN,IAAYwL,KAAZ,IAAsBjF,CAAC,GAAGvG,CAAJ,GAAQ,CAAR,GAAY,CAAlC,CAAN;AAA6C;;AACrD,eAAKuG,CAAL;AAAQ8E,YAAAA,GAAG,GAAG,CAAErL,CAAC,GAAGmH,CAAN,IAAYqE,KAAZ,GAAoB,CAA1B;AAA6B;;AACrC,eAAKxL,CAAL;AAAQqL,YAAAA,GAAG,GAAG,CAAElE,CAAC,GAAGZ,CAAN,IAAYiF,KAAZ,GAAoB,CAA1B;AAA6B;AAJtC;;AAQAH,QAAAA,GAAG,IAAI,CAAP;AAEA;;AAED3P,MAAAA,MAAM,CAAC8K,CAAP,GAAW6E,GAAX;AACA3P,MAAAA,MAAM,CAACsD,CAAP,GAAWsM,UAAX;AACA5P,MAAAA,MAAM,CAACI,CAAP,GAAWyP,SAAX;AAEA,aAAO7P,MAAP;AAEA;;;WAED,gBAAQA,MAAR,EAAoD;AAAA,UAApCqN,UAAoC,uEAAvB9P,oBAAuB;AAEnD2P,MAAAA,eAAe,CAACS,qBAAhB,CAAuCQ,YAAY,CAAE,IAAF,EAAQL,IAAR,CAAnD,EAAmET,UAAnE;AAEArN,MAAAA,MAAM,CAACyL,CAAP,GAAWqC,IAAI,CAACrC,CAAhB;AACAzL,MAAAA,MAAM,CAAC6K,CAAP,GAAWiD,IAAI,CAACjD,CAAhB;AACA7K,MAAAA,MAAM,CAACsE,CAAP,GAAWwJ,IAAI,CAACxJ,CAAhB;AAEA,aAAOtE,MAAP;AAEA;;;WAED,oBAAwC;AAAA,UAA9BqN,UAA8B,uEAAjB/P,cAAiB;AAEvC4P,MAAAA,eAAe,CAACS,qBAAhB,CAAuCQ,YAAY,CAAE,IAAF,EAAQL,IAAR,CAAnD,EAAmET,UAAnE;;AAEA,UAAKA,UAAU,KAAK/P,cAApB,EAAqC;AAEpC;AACA,+BAAiB+P,UAAjB,cAAiCS,IAAI,CAACrC,CAAtC,cAA6CqC,IAAI,CAACjD,CAAlD,cAAyDiD,IAAI,CAACxJ,CAA9D;AAEA;;AAED,2BAAgBwJ,IAAI,CAACrC,CAAL,GAAS,GAAX,GAAmB,CAAjC,cAAwCqC,IAAI,CAACjD,CAAL,GAAS,GAAX,GAAmB,CAAzD,cAAgEiD,IAAI,CAACxJ,CAAL,GAAS,GAAX,GAAmB,CAAjF;AAEA;;;WAED,mBAAWwG,CAAX,EAAcxH,CAAd,EAAiBlD,CAAjB,EAAqB;AAEpB,WAAK2P,MAAL,CAAahC,KAAb;AAEAA,MAAAA,KAAK,CAACjD,CAAN,IAAWA,CAAX;AAAciD,MAAAA,KAAK,CAACzK,CAAN,IAAWA,CAAX;AAAcyK,MAAAA,KAAK,CAAC3N,CAAN,IAAWA,CAAX;AAE5B,WAAK+O,MAAL,CAAapB,KAAK,CAACjD,CAAnB,EAAsBiD,KAAK,CAACzK,CAA5B,EAA+ByK,KAAK,CAAC3N,CAArC;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKmN,KAAL,EAAa;AAEZ,WAAK9B,CAAL,IAAU8B,KAAK,CAAC9B,CAAhB;AACA,WAAKZ,CAAL,IAAU0C,KAAK,CAAC1C,CAAhB;AACA,WAAKvG,CAAL,IAAUiJ,KAAK,CAACjJ,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW0L,MAAX,EAAmBC,MAAnB,EAA4B;AAE3B,WAAKxE,CAAL,GAASuE,MAAM,CAACvE,CAAP,GAAWwE,MAAM,CAACxE,CAA3B;AACA,WAAKZ,CAAL,GAASmF,MAAM,CAACnF,CAAP,GAAWoF,MAAM,CAACpF,CAA3B;AACA,WAAKvG,CAAL,GAAS0L,MAAM,CAAC1L,CAAP,GAAW2L,MAAM,CAAC3L,CAA3B;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWhB,CAAX,EAAe;AAEd,WAAKmI,CAAL,IAAUnI,CAAV;AACA,WAAKuH,CAAL,IAAUvH,CAAV;AACA,WAAKgB,CAAL,IAAUhB,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKiK,KAAL,EAAa;AAEZ,WAAK9B,CAAL,GAAS/K,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,KAAKiK,CAAL,GAAS8B,KAAK,CAAC9B,CAA5B,CAAT;AACA,WAAKZ,CAAL,GAASnK,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,KAAKqJ,CAAL,GAAS0C,KAAK,CAAC1C,CAA5B,CAAT;AACA,WAAKvG,CAAL,GAAS5D,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,KAAK8C,CAAL,GAASiJ,KAAK,CAACjJ,CAA5B,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUiJ,KAAV,EAAkB;AAEjB,WAAK9B,CAAL,IAAU8B,KAAK,CAAC9B,CAAhB;AACA,WAAKZ,CAAL,IAAU0C,KAAK,CAAC1C,CAAhB;AACA,WAAKvG,CAAL,IAAUiJ,KAAK,CAACjJ,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBhB,CAAhB,EAAoB;AAEnB,WAAKmI,CAAL,IAAUnI,CAAV;AACA,WAAKuH,CAAL,IAAUvH,CAAV;AACA,WAAKgB,CAAL,IAAUhB,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMiK,KAAN,EAAa9F,KAAb,EAAqB;AAEpB,WAAKgE,CAAL,IAAU,CAAE8B,KAAK,CAAC9B,CAAN,GAAU,KAAKA,CAAjB,IAAuBhE,KAAjC;AACA,WAAKoD,CAAL,IAAU,CAAE0C,KAAK,CAAC1C,CAAN,GAAU,KAAKA,CAAjB,IAAuBpD,KAAjC;AACA,WAAKnD,CAAL,IAAU,CAAEiJ,KAAK,CAACjJ,CAAN,GAAU,KAAKA,CAAjB,IAAuBmD,KAAjC;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYuI,MAAZ,EAAoBC,MAApB,EAA4BxI,KAA5B,EAAoC;AAEnC,WAAKgE,CAAL,GAASuE,MAAM,CAACvE,CAAP,GAAW,CAAEwE,MAAM,CAACxE,CAAP,GAAWuE,MAAM,CAACvE,CAApB,IAA0BhE,KAA9C;AACA,WAAKoD,CAAL,GAASmF,MAAM,CAACnF,CAAP,GAAW,CAAEoF,MAAM,CAACpF,CAAP,GAAWmF,MAAM,CAACnF,CAApB,IAA0BpD,KAA9C;AACA,WAAKnD,CAAL,GAAS0L,MAAM,CAAC1L,CAAP,GAAW,CAAE2L,MAAM,CAAC3L,CAAP,GAAW0L,MAAM,CAAC1L,CAApB,IAA0BmD,KAA9C;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS8F,KAAT,EAAgB9F,KAAhB,EAAwB;AAEvB,WAAKsI,MAAL,CAAahC,KAAb;AACAR,MAAAA,KAAK,CAACwC,MAAN,CAAc/B,KAAd;AAEA,UAAMlD,CAAC,GAAG1I,IAAI,CAAE2L,KAAK,CAACjD,CAAR,EAAWkD,KAAK,CAAClD,CAAjB,EAAoBrD,KAApB,CAAd;AACA,UAAMnE,CAAC,GAAGlB,IAAI,CAAE2L,KAAK,CAACzK,CAAR,EAAW0K,KAAK,CAAC1K,CAAjB,EAAoBmE,KAApB,CAAd;AACA,UAAMrH,CAAC,GAAGgC,IAAI,CAAE2L,KAAK,CAAC3N,CAAR,EAAW4N,KAAK,CAAC5N,CAAjB,EAAoBqH,KAApB,CAAd;AAEA,WAAK0H,MAAL,CAAarE,CAAb,EAAgBxH,CAAhB,EAAmBlD,CAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQmE,CAAR,EAAY;AAEX,aAASA,CAAC,CAACkH,CAAF,KAAQ,KAAKA,CAAf,IAAwBlH,CAAC,CAACsG,CAAF,KAAQ,KAAKA,CAArC,IAA8CtG,CAAC,CAACD,CAAF,KAAQ,KAAKA,CAAlE;AAEA;;;WAED,mBAAWrE,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,WAAK6D,CAAL,GAASxL,KAAK,CAAE2H,MAAF,CAAd;AACA,WAAKiD,CAAL,GAAS5K,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AACA,WAAKtD,CAAL,GAASrE,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAK6D,CAAvB;AACAxL,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKiD,CAA3B;AACA5K,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKtD,CAA3B;AAEA,aAAOrE,KAAP;AAEA;;;WAED,6BAAqB4H,SAArB,EAAgChI,KAAhC,EAAwC;AAEvC,WAAK4L,CAAL,GAAS5D,SAAS,CAACC,IAAV,CAAgBjI,KAAhB,CAAT;AACA,WAAKgL,CAAL,GAAShD,SAAS,CAACE,IAAV,CAAgBlI,KAAhB,CAAT;AACA,WAAKyE,CAAL,GAASuD,SAAS,CAACqI,IAAV,CAAgBrQ,KAAhB,CAAT;;AAEA,UAAKgI,SAAS,CAACsI,UAAV,KAAyB,IAA9B,EAAqC;AAEpC;AAEA,aAAK1E,CAAL,IAAU,GAAV;AACA,aAAKZ,CAAL,IAAU,GAAV;AACA,aAAKvG,CAAL,IAAU,GAAV;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,aAAO,KAAKmL,MAAL,EAAP;AAEA;;SAEExH,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKuD,CAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKZ,CAAX;;AAHD;AAAA;AAIC,qBAAM,KAAKvG,CAAX;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;AAUD+J,KAAK,CAAC+B,KAAN,GAAcvC,cAAd;;AAEA,IAAIwC,OAAJ;;IAEMC,U;;;;;;;WAEL,oBAAmBC,KAAnB,EAA2B;AAE1B,UAAK,UAAUC,IAAV,CAAgBD,KAAK,CAACE,GAAtB,CAAL,EAAmC;AAElC,eAAOF,KAAK,CAACE,GAAb;AAEA;;AAED,UAAK,OAAOC,iBAAP,IAA4B,WAAjC,EAA+C;AAE9C,eAAOH,KAAK,CAACE,GAAb;AAEA;;AAED,UAAIE,MAAJ;;AAEA,UAAKJ,KAAK,YAAYG,iBAAtB,EAA0C;AAEzCC,QAAAA,MAAM,GAAGJ,KAAT;AAEA,OAJD,MAIO;AAEN,YAAKF,OAAO,KAAK7Q,SAAjB,EAA6B6Q,OAAO,GAAGzD,eAAe,CAAE,QAAF,CAAzB;AAE7ByD,QAAAA,OAAO,CAACO,KAAR,GAAgBL,KAAK,CAACK,KAAtB;AACAP,QAAAA,OAAO,CAACQ,MAAR,GAAiBN,KAAK,CAACM,MAAvB;;AAEA,YAAMC,OAAO,GAAGT,OAAO,CAACU,UAAR,CAAoB,IAApB,CAAhB;;AAEA,YAAKR,KAAK,YAAYS,SAAtB,EAAkC;AAEjCF,UAAAA,OAAO,CAACG,YAAR,CAAsBV,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC;AAEA,SAJD,MAIO;AAENO,UAAAA,OAAO,CAACI,SAAR,CAAmBX,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCA,KAAK,CAACK,KAAtC,EAA6CL,KAAK,CAACM,MAAnD;AAEA;;AAEDF,QAAAA,MAAM,GAAGN,OAAT;AAEA;;AAED,UAAKM,MAAM,CAACC,KAAP,GAAe,IAAf,IAAuBD,MAAM,CAACE,MAAP,GAAgB,IAA5C,EAAmD;AAElDzL,QAAAA,OAAO,CAACC,IAAR,CAAc,6EAAd,EAA6FkL,KAA7F;AAEA,eAAOI,MAAM,CAACQ,SAAP,CAAkB,YAAlB,EAAgC,GAAhC,CAAP;AAEA,OAND,MAMO;AAEN,eAAOR,MAAM,CAACQ,SAAP,CAAkB,WAAlB,CAAP;AAEA;AAED;;;WAED,sBAAqBZ,KAArB,EAA6B;AAE5B,UAAO,OAAOa,gBAAP,KAA4B,WAA5B,IAA2Cb,KAAK,YAAYa,gBAA9D,IACF,OAAOV,iBAAP,KAA6B,WAA7B,IAA4CH,KAAK,YAAYG,iBAD3D,IAEF,OAAOW,WAAP,KAAuB,WAAvB,IAAsCd,KAAK,YAAYc,WAF1D,EAE0E;AAEzE,YAAMV,MAAM,GAAG/D,eAAe,CAAE,QAAF,CAA9B;AAEA+D,QAAAA,MAAM,CAACC,KAAP,GAAeL,KAAK,CAACK,KAArB;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgBN,KAAK,CAACM,MAAtB;AAEA,YAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAmB,IAAnB,CAAhB;AACAD,QAAAA,OAAO,CAACI,SAAR,CAAmBX,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCA,KAAK,CAACK,KAAtC,EAA6CL,KAAK,CAACM,MAAnD;AAEA,YAAMS,SAAS,GAAGR,OAAO,CAACS,YAAR,CAAsB,CAAtB,EAAyB,CAAzB,EAA4BhB,KAAK,CAACK,KAAlC,EAAyCL,KAAK,CAACM,MAA/C,CAAlB;AACA,YAAMW,IAAI,GAAGF,SAAS,CAACE,IAAvB;;AAEA,aAAM,IAAIrR,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGqR,IAAI,CAACnR,MAA1B,EAAkCF,CAAC,EAAnC,EAAyC;AAExCqR,UAAAA,IAAI,CAAErR,CAAF,CAAJ,GAAY4M,YAAY,CAAEyE,IAAI,CAAErR,CAAF,CAAJ,GAAY,GAAd,CAAZ,GAAkC,GAA9C;AAEA;;AAED2Q,QAAAA,OAAO,CAACG,YAAR,CAAsBK,SAAtB,EAAiC,CAAjC,EAAoC,CAApC;AAEA,eAAOX,MAAP;AAEA,OAzBD,MAyBO,IAAKJ,KAAK,CAACiB,IAAX,EAAkB;AAExB,YAAMA,KAAI,GAAGjB,KAAK,CAACiB,IAAN,CAAWtR,KAAX,CAAkB,CAAlB,CAAb;;AAEA,aAAM,IAAIC,EAAC,GAAG,CAAd,EAAiBA,EAAC,GAAGqR,KAAI,CAACnR,MAA1B,EAAkCF,EAAC,EAAnC,EAAyC;AAExC,cAAKqR,KAAI,YAAY9L,UAAhB,IAA8B8L,KAAI,YAAYlF,iBAAnD,EAAuE;AAEtEkF,YAAAA,KAAI,CAAErR,EAAF,CAAJ,GAAYO,IAAI,CAACuC,KAAL,CAAY8J,YAAY,CAAEyE,KAAI,CAAErR,EAAF,CAAJ,GAAY,GAAd,CAAZ,GAAkC,GAA9C,CAAZ;AAEA,WAJD,MAIO;AAEN;AAEAqR,YAAAA,KAAI,CAAErR,EAAF,CAAJ,GAAY4M,YAAY,CAAEyE,KAAI,CAAErR,EAAF,CAAN,CAAxB;AAEA;AAED;;AAED,eAAO;AACNqR,UAAAA,IAAI,EAAEA,KADA;AAENZ,UAAAA,KAAK,EAAEL,KAAK,CAACK,KAFP;AAGNC,UAAAA,MAAM,EAAEN,KAAK,CAACM;AAHR,SAAP;AAMA,OA1BM,MA0BA;AAENzL,QAAAA,OAAO,CAACC,IAAR,CAAc,6FAAd;AACA,eAAOkL,KAAP;AAEA;AAED;;;;;;IAIIkB,M;AAEL,oBAA2B;AAAA,QAAdD,IAAc,uEAAP,IAAO;;AAAA;;AAE1B,SAAKE,QAAL,GAAgB,IAAhB;AAEA,SAAKvQ,IAAL,GAAYN,YAAY,EAAxB;AAEA,SAAK2Q,IAAL,GAAYA,IAAZ;AAEA,SAAKG,OAAL,GAAe,CAAf;AAEA;;;;SAED,aAAiBrQ,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKqQ,OAAL;AAEtB;;;WAED,gBAAQC,IAAR,EAAe;AAEd,UAAMC,YAAY,GAAKD,IAAI,KAAKpS,SAAT,IAAsB,OAAOoS,IAAP,KAAgB,QAA7D;;AAEA,UAAK,CAAEC,YAAF,IAAkBD,IAAI,CAACE,MAAL,CAAa,KAAK3Q,IAAlB,MAA6B3B,SAApD,EAAgE;AAE/D,eAAOoS,IAAI,CAACE,MAAL,CAAa,KAAK3Q,IAAlB,CAAP;AAEA;;AAED,UAAM4Q,MAAM,GAAG;AACd5Q,QAAAA,IAAI,EAAE,KAAKA,IADG;AAEd6Q,QAAAA,GAAG,EAAE;AAFS,OAAf;AAKA,UAAMR,IAAI,GAAG,KAAKA,IAAlB;;AAEA,UAAKA,IAAI,KAAK,IAAd,EAAqB;AAEpB,YAAIQ,GAAJ;;AAEA,YAAKC,KAAK,CAACC,OAAN,CAAeV,IAAf,CAAL,EAA6B;AAE5B;AAEAQ,UAAAA,GAAG,GAAG,EAAN;;AAEA,eAAM,IAAI7R,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGoR,IAAI,CAACnR,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,gBAAKqR,IAAI,CAAErR,CAAF,CAAJ,CAAUgS,aAAf,EAA+B;AAE9BH,cAAAA,GAAG,CAACrS,IAAJ,CAAUyS,cAAc,CAAEZ,IAAI,CAAErR,CAAF,CAAJ,CAAUoQ,KAAZ,CAAxB;AAEA,aAJD,MAIO;AAENyB,cAAAA,GAAG,CAACrS,IAAJ,CAAUyS,cAAc,CAAEZ,IAAI,CAAErR,CAAF,CAAN,CAAxB;AAEA;AAED;AAED,SApBD,MAoBO;AAEN;AAEA6R,UAAAA,GAAG,GAAGI,cAAc,CAAEZ,IAAF,CAApB;AAEA;;AAEDO,QAAAA,MAAM,CAACC,GAAP,GAAaA,GAAb;AAEA;;AAED,UAAK,CAAEH,YAAP,EAAsB;AAErBD,QAAAA,IAAI,CAACE,MAAL,CAAa,KAAK3Q,IAAlB,IAA2B4Q,MAA3B;AAEA;;AAED,aAAOA,MAAP;AAEA;;;;;;AAIF,SAASK,cAAT,CAAyB7B,KAAzB,EAAiC;AAEhC,MAAO,OAAOa,gBAAP,KAA4B,WAA5B,IAA2Cb,KAAK,YAAYa,gBAA9D,IACF,OAAOV,iBAAP,KAA6B,WAA7B,IAA4CH,KAAK,YAAYG,iBAD3D,IAEF,OAAOW,WAAP,KAAuB,WAAvB,IAAsCd,KAAK,YAAYc,WAF1D,EAE0E;AAEzE;AAEA,WAAOf,UAAU,CAAC+B,UAAX,CAAuB9B,KAAvB,CAAP;AAEA,GARD,MAQO;AAEN,QAAKA,KAAK,CAACiB,IAAX,EAAkB;AAEjB;AAEA,aAAO;AACNA,QAAAA,IAAI,EAAES,KAAK,CAACK,IAAN,CAAY/B,KAAK,CAACiB,IAAlB,CADA;AAENZ,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAFP;AAGNC,QAAAA,MAAM,EAAEN,KAAK,CAACM,MAHR;AAINxR,QAAAA,IAAI,EAAEkR,KAAK,CAACiB,IAAN,CAAWjM,WAAX,CAAuBsH;AAJvB,OAAP;AAOA,KAXD,MAWO;AAENzH,MAAAA,OAAO,CAACC,IAAR,CAAc,6CAAd;AACA,aAAO,EAAP;AAEA;AAED;AAED;;AAED,IAAIkN,SAAS,GAAG,CAAhB;;IAEMC,O;;;;;AAEL,qBAAmS;AAAA;;AAAA,QAAtRjC,KAAsR,uEAA9QiC,OAAO,CAACC,aAAsQ;AAAA,QAAvPC,OAAuP,uEAA7OF,OAAO,CAACG,eAAqO;AAAA,QAApNC,KAAoN,uEAA5Mxa,mBAA4M;AAAA,QAAvLya,KAAuL,uEAA/Kza,mBAA+K;AAAA,QAA1J0a,SAA0J,uEAA9Ina,YAA8I;AAAA,QAAhIoa,SAAgI,uEAApHja,wBAAoH;AAAA,QAA1Fka,MAA0F,uEAAjFnZ,UAAiF;AAAA,QAArEwF,IAAqE,uEAA9DrG,gBAA8D;AAAA,QAA5Cia,UAA4C,uEAA/B,CAA+B;AAAA,QAA5BC,QAA4B,uEAAjBnW,cAAiB;;AAAA;;AAElS;AAEA,WAAKoW,SAAL,GAAiB,IAAjB;AAEAlN,IAAAA,MAAM,CAACmN,cAAP,iCAA6B,IAA7B,EAAmC;AAAE9R,MAAAA,KAAK,EAAEiR,SAAS;AAAlB,KAAnC;AAEA,WAAKpR,IAAL,GAAYN,YAAY,EAAxB;AAEA,WAAKgM,IAAL,GAAY,EAAZ;AAEA,WAAKuB,MAAL,GAAc,IAAIqD,MAAJ,CAAYlB,KAAZ,CAAd;AACA,WAAK8C,OAAL,GAAe,EAAf;AAEA,WAAKX,OAAL,GAAeA,OAAf;AAEA,WAAKE,KAAL,GAAaA,KAAb;AACA,WAAKC,KAAL,GAAaA,KAAb;AAEA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AAEA,WAAKE,UAAL,GAAkBA,UAAlB;AAEA,WAAKD,MAAL,GAAcA,MAAd;AACA,WAAKM,cAAL,GAAsB,IAAtB;AACA,WAAKjU,IAAL,GAAYA,IAAZ;AAEA,WAAKuI,MAAL,GAAc,IAAIvB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,WAAKkN,MAAL,GAAc,IAAIlN,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,WAAK2B,MAAL,GAAc,IAAI3B,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,WAAKyF,QAAL,GAAgB,CAAhB;AAEA,WAAK0H,gBAAL,GAAwB,IAAxB;AACA,WAAKtH,MAAL,GAAc,IAAI/D,OAAJ,EAAd;AAEA,WAAKsL,eAAL,GAAuB,IAAvB;AACA,WAAKC,gBAAL,GAAwB,KAAxB;AACA,WAAKC,KAAL,GAAa,IAAb;AACA,WAAKC,eAAL,GAAuB,CAAvB,CAxCkS,CAwCxQ;AAE1B;AACA;AACA;AACA;;AACA,WAAKV,QAAL,GAAgBA,QAAhB;AAEA,WAAKW,QAAL,GAAgB,EAAhB;AAEA,WAAKlC,OAAL,GAAe,CAAf;AACA,WAAKmC,QAAL,GAAgB,IAAhB;AAEA,WAAKC,qBAAL,GAA6B,KAA7B,CArDkS,CAqD9P;;AACpC,WAAKC,gBAAL,GAAwB,KAAxB,CAtDkS,CAsDnQ;;AAtDmQ;AAwDlS;;;;SAED,eAAY;AAEX,aAAO,KAAK5F,MAAL,CAAYoD,IAAnB;AAEA,K;SAED,aAAWlQ,KAAX,EAAmB;AAElB,WAAK8M,MAAL,CAAYoD,IAAZ,GAAmBlQ,KAAnB;AAEA;;;WAED,wBAAe;AAEd,WAAK4K,MAAL,CAAY+H,cAAZ,CAA4B,KAAKrM,MAAL,CAAY/F,CAAxC,EAA2C,KAAK+F,MAAL,CAAYzF,CAAvD,EAA0D,KAAKoR,MAAL,CAAY1R,CAAtE,EAAyE,KAAK0R,MAAL,CAAYpR,CAArF,EAAwF,KAAK2J,QAA7F,EAAuG,KAAK9D,MAAL,CAAYnG,CAAnH,EAAsH,KAAKmG,MAAL,CAAY7F,CAAlI;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKoD,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAMJ,MAAN,EAAe;AAEd,WAAKvB,IAAL,GAAYuB,MAAM,CAACvB,IAAnB;AAEA,WAAKuB,MAAL,GAAcA,MAAM,CAACA,MAArB;AACA,WAAKiF,OAAL,GAAejF,MAAM,CAACiF,OAAP,CAAenT,KAAf,CAAsB,CAAtB,CAAf;AAEA,WAAKwS,OAAL,GAAetE,MAAM,CAACsE,OAAtB;AAEA,WAAKE,KAAL,GAAaxE,MAAM,CAACwE,KAApB;AACA,WAAKC,KAAL,GAAazE,MAAM,CAACyE,KAApB;AAEA,WAAKC,SAAL,GAAiB1E,MAAM,CAAC0E,SAAxB;AACA,WAAKC,SAAL,GAAiB3E,MAAM,CAAC2E,SAAxB;AAEA,WAAKE,UAAL,GAAkB7E,MAAM,CAAC6E,UAAzB;AAEA,WAAKD,MAAL,GAAc5E,MAAM,CAAC4E,MAArB;AACA,WAAKM,cAAL,GAAsBlF,MAAM,CAACkF,cAA7B;AACA,WAAKjU,IAAL,GAAY+O,MAAM,CAAC/O,IAAnB;AAEA,WAAKuI,MAAL,CAAY4G,IAAZ,CAAkBJ,MAAM,CAACxG,MAAzB;AACA,WAAK2L,MAAL,CAAY/E,IAAZ,CAAkBJ,MAAM,CAACmF,MAAzB;AACA,WAAKvL,MAAL,CAAYwG,IAAZ,CAAkBJ,MAAM,CAACpG,MAAzB;AACA,WAAK8D,QAAL,GAAgBsC,MAAM,CAACtC,QAAvB;AAEA,WAAK0H,gBAAL,GAAwBpF,MAAM,CAACoF,gBAA/B;AACA,WAAKtH,MAAL,CAAYsC,IAAZ,CAAkBJ,MAAM,CAAClC,MAAzB;AAEA,WAAKuH,eAAL,GAAuBrF,MAAM,CAACqF,eAA9B;AACA,WAAKC,gBAAL,GAAwBtF,MAAM,CAACsF,gBAA/B;AACA,WAAKC,KAAL,GAAavF,MAAM,CAACuF,KAApB;AACA,WAAKC,eAAL,GAAuBxF,MAAM,CAACwF,eAA9B;AACA,WAAKV,QAAL,GAAgB9E,MAAM,CAAC8E,QAAvB;AAEA,WAAKW,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAgBhG,MAAM,CAACyF,QAAvB,CAAZ,CAAhB;AAEA,WAAKQ,WAAL,GAAmB,IAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQzC,IAAR,EAAe;AAEd,UAAMC,YAAY,GAAKD,IAAI,KAAKpS,SAAT,IAAsB,OAAOoS,IAAP,KAAgB,QAA7D;;AAEA,UAAK,CAAEC,YAAF,IAAkBD,IAAI,CAAC0C,QAAL,CAAe,KAAKnT,IAApB,MAA+B3B,SAAtD,EAAkE;AAEjE,eAAOoS,IAAI,CAAC0C,QAAL,CAAe,KAAKnT,IAApB,CAAP;AAEA;;AAED,UAAM4Q,MAAM,GAAG;AAEdwC,QAAAA,QAAQ,EAAE;AACT5C,UAAAA,OAAO,EAAE,GADA;AAETtS,UAAAA,IAAI,EAAE,SAFG;AAGTmV,UAAAA,SAAS,EAAE;AAHF,SAFI;AAQdrT,QAAAA,IAAI,EAAE,KAAKA,IARG;AASd0L,QAAAA,IAAI,EAAE,KAAKA,IATG;AAWd0D,QAAAA,KAAK,EAAE,KAAKnC,MAAL,CAAYqG,MAAZ,CAAoB7C,IAApB,EAA2BzQ,IAXpB;AAaduR,QAAAA,OAAO,EAAE,KAAKA,OAbA;AAeda,QAAAA,MAAM,EAAE,CAAE,KAAKA,MAAL,CAAY1R,CAAd,EAAiB,KAAK0R,MAAL,CAAYpR,CAA7B,CAfM;AAgBdyF,QAAAA,MAAM,EAAE,CAAE,KAAKA,MAAL,CAAY/F,CAAd,EAAiB,KAAK+F,MAAL,CAAYzF,CAA7B,CAhBM;AAiBd6F,QAAAA,MAAM,EAAE,CAAE,KAAKA,MAAL,CAAYnG,CAAd,EAAiB,KAAKmG,MAAL,CAAY7F,CAA7B,CAjBM;AAkBd2J,QAAAA,QAAQ,EAAE,KAAKA,QAlBD;AAoBd4I,QAAAA,IAAI,EAAE,CAAE,KAAK9B,KAAP,EAAc,KAAKC,KAAnB,CApBQ;AAsBdG,QAAAA,MAAM,EAAE,KAAKA,MAtBC;AAuBd3T,QAAAA,IAAI,EAAE,KAAKA,IAvBG;AAwBd6T,QAAAA,QAAQ,EAAE,KAAKA,QAxBD;AA0BdH,QAAAA,SAAS,EAAE,KAAKA,SA1BF;AA2BdD,QAAAA,SAAS,EAAE,KAAKA,SA3BF;AA4BdG,QAAAA,UAAU,EAAE,KAAKA,UA5BH;AA8BdU,QAAAA,KAAK,EAAE,KAAKA,KA9BE;AAgCdD,QAAAA,gBAAgB,EAAE,KAAKA,gBAhCT;AAiCdE,QAAAA,eAAe,EAAE,KAAKA;AAjCR,OAAf;AAqCA,UAAKM,IAAI,CAACE,SAAL,CAAgB,KAAKP,QAArB,MAAoC,IAAzC,EAAgD9B,MAAM,CAAC8B,QAAP,GAAkB,KAAKA,QAAvB;;AAEhD,UAAK,CAAEhC,YAAP,EAAsB;AAErBD,QAAAA,IAAI,CAAC0C,QAAL,CAAe,KAAKnT,IAApB,IAA6B4Q,MAA7B;AAEA;;AAED,aAAOA,MAAP;AAEA;;;WAED,mBAAU;AAET,WAAK4C,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAApB;AAEA;;;WAED,qBAAauV,EAAb,EAAkB;AAEjB,UAAK,KAAKlC,OAAL,KAAiB7a,SAAtB,EAAkC,OAAO+c,EAAP;AAElCA,MAAAA,EAAE,CAACC,YAAH,CAAiB,KAAK3I,MAAtB;;AAEA,UAAK0I,EAAE,CAAC/S,CAAH,GAAO,CAAP,IAAY+S,EAAE,CAAC/S,CAAH,GAAO,CAAxB,EAA4B;AAE3B,gBAAS,KAAK+Q,KAAd;AAEC,eAAKza,cAAL;AAECyc,YAAAA,EAAE,CAAC/S,CAAH,GAAO+S,EAAE,CAAC/S,CAAH,GAAOnB,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAAC/S,CAAf,CAAd;AACA;;AAED,eAAKzJ,mBAAL;AAECwc,YAAAA,EAAE,CAAC/S,CAAH,GAAO+S,EAAE,CAAC/S,CAAH,GAAO,CAAP,GAAW,CAAX,GAAe,CAAtB;AACA;;AAED,eAAKxJ,sBAAL;AAEC,gBAAKqI,IAAI,CAACiC,GAAL,CAAUjC,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAAC/S,CAAf,IAAqB,CAA/B,MAAuC,CAA5C,EAAgD;AAE/C+S,cAAAA,EAAE,CAAC/S,CAAH,GAAOnB,IAAI,CAACqD,IAAL,CAAW6Q,EAAE,CAAC/S,CAAd,IAAoB+S,EAAE,CAAC/S,CAA9B;AAEA,aAJD,MAIO;AAEN+S,cAAAA,EAAE,CAAC/S,CAAH,GAAO+S,EAAE,CAAC/S,CAAH,GAAOnB,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAAC/S,CAAf,CAAd;AAEA;;AAED;AAxBF;AA4BA;;AAED,UAAK+S,EAAE,CAACzS,CAAH,GAAO,CAAP,IAAYyS,EAAE,CAACzS,CAAH,GAAO,CAAxB,EAA4B;AAE3B,gBAAS,KAAK0Q,KAAd;AAEC,eAAK1a,cAAL;AAECyc,YAAAA,EAAE,CAACzS,CAAH,GAAOyS,EAAE,CAACzS,CAAH,GAAOzB,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAACzS,CAAf,CAAd;AACA;;AAED,eAAK/J,mBAAL;AAECwc,YAAAA,EAAE,CAACzS,CAAH,GAAOyS,EAAE,CAACzS,CAAH,GAAO,CAAP,GAAW,CAAX,GAAe,CAAtB;AACA;;AAED,eAAK9J,sBAAL;AAEC,gBAAKqI,IAAI,CAACiC,GAAL,CAAUjC,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAACzS,CAAf,IAAqB,CAA/B,MAAuC,CAA5C,EAAgD;AAE/CyS,cAAAA,EAAE,CAACzS,CAAH,GAAOzB,IAAI,CAACqD,IAAL,CAAW6Q,EAAE,CAACzS,CAAd,IAAoByS,EAAE,CAACzS,CAA9B;AAEA,aAJD,MAIO;AAENyS,cAAAA,EAAE,CAACzS,CAAH,GAAOyS,EAAE,CAACzS,CAAH,GAAOzB,IAAI,CAACuC,KAAL,CAAY2R,EAAE,CAACzS,CAAf,CAAd;AAEA;;AAED;AAxBF;AA4BA;;AAED,UAAK,KAAKwR,KAAV,EAAkB;AAEjBiB,QAAAA,EAAE,CAACzS,CAAH,GAAO,IAAIyS,EAAE,CAACzS,CAAd;AAEA;;AAED,aAAOyS,EAAP;AAEA;;;SAED,aAAiBtT,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB;AAErB,aAAKqQ,OAAL;AACA,aAAKvD,MAAL,CAAYiG,WAAZ,GAA0B,IAA1B;AAEA;AAED;;;;EAzRoBjV,e;;AA6RtBoT,OAAO,CAACC,aAAR,GAAwB,IAAxB;AACAD,OAAO,CAACG,eAAR,GAA0B9a,SAA1B;;IAEMid,O;AAEL,qBAA0C;AAAA,QAA7BjT,CAA6B,uEAAzB,CAAyB;AAAA,QAAtBM,CAAsB,uEAAlB,CAAkB;AAAA,QAAf4S,CAAe,uEAAX,CAAW;AAAA,QAARrO,CAAQ,uEAAJ,CAAI;;AAAA;;AAEzCoO,IAAAA,OAAO,CAACxO,SAAR,CAAkB0O,SAAlB,GAA8B,IAA9B;AAEA,SAAKnT,CAAL,GAASA,CAAT;AACA,SAAKM,CAAL,GAASA,CAAT;AACA,SAAK4S,CAAL,GAASA,CAAT;AACA,SAAKrO,CAAL,GAASA,CAAT;AAEA;;;;SAED,eAAY;AAEX,aAAO,KAAKqO,CAAZ;AAEA,K;SAED,aAAWzT,KAAX,EAAmB;AAElB,WAAKyT,CAAL,GAASzT,KAAT;AAEA;;;SAED,eAAa;AAEZ,aAAO,KAAKoF,CAAZ;AAEA,K;SAED,aAAYpF,KAAZ,EAAoB;AAEnB,WAAKoF,CAAL,GAASpF,KAAT;AAEA;;;WAED,aAAKO,CAAL,EAAQM,CAAR,EAAW4S,CAAX,EAAcrO,CAAd,EAAkB;AAEjB,WAAK7E,CAAL,GAASA,CAAT;AACA,WAAKM,CAAL,GAASA,CAAT;AACA,WAAK4S,CAAL,GAASA,CAAT;AACA,WAAKrO,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWF,MAAX,EAAoB;AAEnB,WAAK3E,CAAL,GAAS2E,MAAT;AACA,WAAKrE,CAAL,GAASqE,MAAT;AACA,WAAKuO,CAAL,GAASvO,MAAT;AACA,WAAKE,CAAL,GAASF,MAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM3E,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMM,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM4S,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMrO,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAc7G,KAAd,EAAqByB,KAArB,EAA6B;AAE5B,cAASzB,KAAT;AAEC,aAAK,CAAL;AAAQ,eAAKgC,CAAL,GAASP,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKa,CAAL,GAASb,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKyT,CAAL,GAASzT,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKoF,CAAL,GAASpF,KAAT;AAAgB;;AACxB;AAAS,gBAAM,IAAIuE,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AANV;;AAUA,aAAO,IAAP;AAEA;;;WAED,sBAAcA,KAAd,EAAsB;AAErB,cAASA,KAAT;AAEC,aAAK,CAAL;AAAQ,iBAAO,KAAKgC,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAKM,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAK4S,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAKrO,CAAZ;;AACR;AAAS,gBAAM,IAAIb,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AANV;AAUA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK0F,WAAT,CAAsB,KAAK1D,CAA3B,EAA8B,KAAKM,CAAnC,EAAsC,KAAK4S,CAA3C,EAA8C,KAAKrO,CAAnD,CAAP;AAEA;;;WAED,cAAMD,CAAN,EAAU;AAET,WAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX;AACA,WAAKM,CAAL,GAASsE,CAAC,CAACtE,CAAX;AACA,WAAK4S,CAAL,GAAStO,CAAC,CAACsO,CAAX;AACA,WAAKrO,CAAL,GAAWD,CAAC,CAACC,CAAF,KAAQlH,SAAV,GAAwBiH,CAAC,CAACC,CAA1B,GAA8B,CAAvC;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKD,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKsB,UAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AACA,WAAKrO,CAAL,IAAUD,CAAC,CAACC,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWpD,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AACA,WAAKyR,CAAL,IAAUzR,CAAV;AACA,WAAKoD,CAAL,IAAUpD,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AACA,WAAK4S,CAAL,GAAS1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAjB;AACA,WAAKrO,CAAL,GAASrC,CAAC,CAACqC,CAAF,GAAMpC,CAAC,CAACoC,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBD,CAAjB,EAAoBnD,CAApB,EAAwB;AAEvB,WAAKzB,CAAL,IAAU4E,CAAC,CAAC5E,CAAF,GAAMyB,CAAhB;AACA,WAAKnB,CAAL,IAAUsE,CAAC,CAACtE,CAAF,GAAMmB,CAAhB;AACA,WAAKyR,CAAL,IAAUtO,CAAC,CAACsO,CAAF,GAAMzR,CAAhB;AACA,WAAKoD,CAAL,IAAUD,CAAC,CAACC,CAAF,GAAMpD,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKmD,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKuB,UAAL,CAAiBH,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AACA,WAAKrO,CAAL,IAAUD,CAAC,CAACC,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWpD,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AACA,WAAKyR,CAAL,IAAUzR,CAAV;AACA,WAAKoD,CAAL,IAAUpD,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AACA,WAAK4S,CAAL,GAAS1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAjB;AACA,WAAKrO,CAAL,GAASrC,CAAC,CAACqC,CAAF,GAAMpC,CAAC,CAACoC,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUD,CAAV,EAAc;AAEb,WAAK5E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AACA,WAAKrO,CAAL,IAAUD,CAAC,CAACC,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBF,MAAhB,EAAyB;AAExB,WAAK3E,CAAL,IAAU2E,MAAV;AACA,WAAKrE,CAAL,IAAUqE,MAAV;AACA,WAAKuO,CAAL,IAAUvO,MAAV;AACA,WAAKE,CAAL,IAAUF,MAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAc7E,CAAd,EAAkB;AAEjB,UAAME,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8B4S,CAAC,GAAG,KAAKA,CAAvC;AAAA,UAA0CrO,CAAC,GAAG,KAAKA,CAAnD;AACA,UAAMI,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,WAAKlF,CAAL,GAASiF,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAAnC,GAAuCjO,CAAC,CAAE,EAAF,CAAD,GAAUJ,CAA1D;AACA,WAAKvE,CAAL,GAAS2E,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAAnC,GAAuCjO,CAAC,CAAE,EAAF,CAAD,GAAUJ,CAA1D;AACA,WAAKqO,CAAL,GAASjO,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,EAAF,CAAD,GAAUiO,CAApC,GAAwCjO,CAAC,CAAE,EAAF,CAAD,GAAUJ,CAA3D;AACA,WAAKA,CAAL,GAASI,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,EAAF,CAAD,GAAUiO,CAApC,GAAwCjO,CAAC,CAAE,EAAF,CAAD,GAAUJ,CAA3D;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcF,MAAd,EAAuB;AAEtB,aAAO,KAAKK,cAAL,CAAqB,IAAIL,MAAzB,CAAP;AAEA;;;WAED,oCAA4BpC,CAA5B,EAAgC;AAE/B;AAEA;AAEA,WAAKsC,CAAL,GAAS,IAAIhG,IAAI,CAACuU,IAAL,CAAW7Q,CAAC,CAACsC,CAAb,CAAb;AAEA,UAAMpD,CAAC,GAAG5C,IAAI,CAACyG,IAAL,CAAW,IAAI/C,CAAC,CAACsC,CAAF,GAAMtC,CAAC,CAACsC,CAAvB,CAAV;;AAEA,UAAKpD,CAAC,GAAG,MAAT,EAAkB;AAEjB,aAAKzB,CAAL,GAAS,CAAT;AACA,aAAKM,CAAL,GAAS,CAAT;AACA,aAAK4S,CAAL,GAAS,CAAT;AAEA,OAND,MAMO;AAEN,aAAKlT,CAAL,GAASuC,CAAC,CAACvC,CAAF,GAAMyB,CAAf;AACA,aAAKnB,CAAL,GAASiC,CAAC,CAACjC,CAAF,GAAMmB,CAAf;AACA,aAAKyR,CAAL,GAAS3Q,CAAC,CAAC2Q,CAAF,GAAMzR,CAAf;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,wCAAgC3B,CAAhC,EAAoC;AAEnC;AAEA;AAEA,UAAIyF,KAAJ,EAAWvF,CAAX,EAAcM,CAAd,EAAiB4S,CAAjB,CANmC,CAMf;;AACpB,UAAMG,OAAO,GAAG,IAAhB;AAAA,UAAuB;AACtBC,MAAAA,QAAQ,GAAG,GADZ;AAAA,UACkB;AAEjBnM,MAAAA,EAAE,GAAGrH,CAAC,CAACoF,QAHR;AAAA,UAKCqO,GAAG,GAAGpM,EAAE,CAAE,CAAF,CALT;AAAA,UAKgBqM,GAAG,GAAGrM,EAAE,CAAE,CAAF,CALxB;AAAA,UAK+BsM,GAAG,GAAGtM,EAAE,CAAE,CAAF,CALvC;AAAA,UAMCuM,GAAG,GAAGvM,EAAE,CAAE,CAAF,CANT;AAAA,UAMgBwM,GAAG,GAAGxM,EAAE,CAAE,CAAF,CANxB;AAAA,UAM+ByM,GAAG,GAAGzM,EAAE,CAAE,CAAF,CANvC;AAAA,UAOC0M,GAAG,GAAG1M,EAAE,CAAE,CAAF,CAPT;AAAA,UAOgB2M,GAAG,GAAG3M,EAAE,CAAE,CAAF,CAPxB;AAAA,UAO+B4M,GAAG,GAAG5M,EAAE,CAAE,EAAF,CAPvC;;AASA,UAAOtI,IAAI,CAACiC,GAAL,CAAU0S,GAAG,GAAGE,GAAhB,IAAwBL,OAA1B,IACExU,IAAI,CAACiC,GAAL,CAAU2S,GAAG,GAAGI,GAAhB,IAAwBR,OAD1B,IAEExU,IAAI,CAACiC,GAAL,CAAU8S,GAAG,GAAGE,GAAhB,IAAwBT,OAF/B,EAE2C;AAE1C;AACA;AACA;AAEA,YAAOxU,IAAI,CAACiC,GAAL,CAAU0S,GAAG,GAAGE,GAAhB,IAAwBJ,QAA1B,IACEzU,IAAI,CAACiC,GAAL,CAAU2S,GAAG,GAAGI,GAAhB,IAAwBP,QAD1B,IAEEzU,IAAI,CAACiC,GAAL,CAAU8S,GAAG,GAAGE,GAAhB,IAAwBR,QAF1B,IAGEzU,IAAI,CAACiC,GAAL,CAAUyS,GAAG,GAAGI,GAAN,GAAYI,GAAZ,GAAkB,CAA5B,IAAkCT,QAHzC,EAGsD;AAErD;AAEA,eAAKhQ,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;AAEA,iBAAO,IAAP,CANqD,CAMxC;AAEb,SAjByC,CAmB1C;;;AAEAiC,QAAAA,KAAK,GAAG1G,IAAI,CAACC,EAAb;AAEA,YAAMkV,EAAE,GAAG,CAAET,GAAG,GAAG,CAAR,IAAc,CAAzB;AACA,YAAMU,EAAE,GAAG,CAAEN,GAAG,GAAG,CAAR,IAAc,CAAzB;AACA,YAAMO,EAAE,GAAG,CAAEH,GAAG,GAAG,CAAR,IAAc,CAAzB;AACA,YAAMI,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAR,IAAgB,CAA3B;AACA,YAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGI,GAAR,IAAgB,CAA3B;AACA,YAAMQ,EAAE,GAAG,CAAET,GAAG,GAAGE,GAAR,IAAgB,CAA3B;;AAEA,YAAOE,EAAE,GAAGC,EAAP,IAAiBD,EAAE,GAAGE,EAA3B,EAAkC;AAEjC;AAEA,cAAKF,EAAE,GAAGX,OAAV,EAAoB;AAEnBrT,YAAAA,CAAC,GAAG,CAAJ;AACAM,YAAAA,CAAC,GAAG,WAAJ;AACA4S,YAAAA,CAAC,GAAG,WAAJ;AAEA,WAND,MAMO;AAENlT,YAAAA,CAAC,GAAGnB,IAAI,CAACyG,IAAL,CAAW0O,EAAX,CAAJ;AACA1T,YAAAA,CAAC,GAAG6T,EAAE,GAAGnU,CAAT;AACAkT,YAAAA,CAAC,GAAGkB,EAAE,GAAGpU,CAAT;AAEA;AAED,SAlBD,MAkBO,IAAKiU,EAAE,GAAGC,EAAV,EAAe;AAErB;AAEA,cAAKD,EAAE,GAAGZ,OAAV,EAAoB;AAEnBrT,YAAAA,CAAC,GAAG,WAAJ;AACAM,YAAAA,CAAC,GAAG,CAAJ;AACA4S,YAAAA,CAAC,GAAG,WAAJ;AAEA,WAND,MAMO;AAEN5S,YAAAA,CAAC,GAAGzB,IAAI,CAACyG,IAAL,CAAW2O,EAAX,CAAJ;AACAjU,YAAAA,CAAC,GAAGmU,EAAE,GAAG7T,CAAT;AACA4S,YAAAA,CAAC,GAAGmB,EAAE,GAAG/T,CAAT;AAEA;AAED,SAlBM,MAkBA;AAEN;AAEA,cAAK4T,EAAE,GAAGb,OAAV,EAAoB;AAEnBrT,YAAAA,CAAC,GAAG,WAAJ;AACAM,YAAAA,CAAC,GAAG,WAAJ;AACA4S,YAAAA,CAAC,GAAG,CAAJ;AAEA,WAND,MAMO;AAENA,YAAAA,CAAC,GAAGrU,IAAI,CAACyG,IAAL,CAAW4O,EAAX,CAAJ;AACAlU,YAAAA,CAAC,GAAGoU,EAAE,GAAGlB,CAAT;AACA5S,YAAAA,CAAC,GAAG+T,EAAE,GAAGnB,CAAT;AAEA;AAED;;AAED,aAAK5P,GAAL,CAAUtD,CAAV,EAAaM,CAAb,EAAgB4S,CAAhB,EAAmB3N,KAAnB;AAEA,eAAO,IAAP,CAxF0C,CAwF7B;AAEb,OA5GkC,CA8GnC;;;AAEA,UAAI9D,CAAC,GAAG5C,IAAI,CAACyG,IAAL,CAAW,CAAEwO,GAAG,GAAGF,GAAR,KAAkBE,GAAG,GAAGF,GAAxB,IAClB,CAAEH,GAAG,GAAGI,GAAR,KAAkBJ,GAAG,GAAGI,GAAxB,CADkB,GAElB,CAAEH,GAAG,GAAGF,GAAR,KAAkBE,GAAG,GAAGF,GAAxB,CAFO,CAAR,CAhHmC,CAkHD;;AAElC,UAAK3U,IAAI,CAACiC,GAAL,CAAUW,CAAV,IAAgB,KAArB,EAA6BA,CAAC,GAAG,CAAJ,CApHM,CAsHnC;AACA;;AAEA,WAAKzB,CAAL,GAAS,CAAE8T,GAAG,GAAGF,GAAR,IAAgBnS,CAAzB;AACA,WAAKnB,CAAL,GAAS,CAAEmT,GAAG,GAAGI,GAAR,IAAgBpS,CAAzB;AACA,WAAKyR,CAAL,GAAS,CAAEQ,GAAG,GAAGF,GAAR,IAAgB/R,CAAzB;AACA,WAAKoD,CAAL,GAAShG,IAAI,CAACuU,IAAL,CAAW,CAAEG,GAAG,GAAGI,GAAN,GAAYI,GAAZ,GAAkB,CAApB,IAA0B,CAArC,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKnP,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACa,GAAL,CAAU,KAAKM,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACa,GAAL,CAAU,KAAKY,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACa,GAAL,CAAU,KAAKwT,CAAf,EAAkBtO,CAAC,CAACsO,CAApB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACa,GAAL,CAAU,KAAKmF,CAAf,EAAkBD,CAAC,CAACC,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKD,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAU,KAAKK,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAU,KAAKW,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAU,KAAKuT,CAAf,EAAkBtO,CAAC,CAACsO,CAApB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACc,GAAL,CAAU,KAAKkF,CAAf,EAAkBD,CAAC,CAACC,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAOnF,GAAP,EAAYC,GAAZ,EAAkB;AAEjB;AAEA,WAAKK,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACM,CAAd,EAAiBnB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACK,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACY,CAAd,EAAiBzB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACW,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACwT,CAAd,EAAiBrU,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACuT,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACmF,CAAd,EAAiBhG,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACkF,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaM,MAAb,EAAqBC,MAArB,EAA8B;AAE7B,WAAKpF,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAKpF,CAAvB,CAAlB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAK9E,CAAvB,CAAlB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAK8N,CAAvB,CAAlB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAKP,CAAvB,CAAlB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAanF,GAAb,EAAkBC,GAAlB,EAAwB;AAEvB,UAAMnB,MAAM,GAAG,KAAKA,MAAL,EAAf;AAEA,aAAO,KAAK6G,YAAL,CAAmB7G,MAAM,IAAI,CAA7B,EAAiCwG,cAAjC,CAAiDnG,IAAI,CAACc,GAAL,CAAUD,GAAV,EAAeb,IAAI,CAACa,GAAL,CAAUC,GAAV,EAAenB,MAAf,CAAf,CAAjD,CAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKwB,CAAL,GAASnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACuC,KAAL,CAAY,KAAK8R,CAAjB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACuC,KAAL,CAAY,KAAKyD,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAK7E,CAAL,GAASnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACqD,IAAL,CAAW,KAAKgR,CAAhB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACqD,IAAL,CAAW,KAAK2C,CAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAK7E,CAAL,GAASnB,IAAI,CAACqF,KAAL,CAAY,KAAKlE,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqF,KAAL,CAAY,KAAK5D,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACqF,KAAL,CAAY,KAAKgP,CAAjB,CAAT;AACA,WAAKrO,CAAL,GAAShG,IAAI,CAACqF,KAAL,CAAY,KAAKW,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,WAAK7E,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAjB,GAAuCnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAhD;AACA,WAAKM,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAjB,GAAuCzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAhD;AACA,WAAK4S,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBrU,IAAI,CAACqD,IAAL,CAAW,KAAKgR,CAAhB,CAAjB,GAAuCrU,IAAI,CAACuC,KAAL,CAAY,KAAK8R,CAAjB,CAAhD;AACA,WAAKrO,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBhG,IAAI,CAACqD,IAAL,CAAW,KAAK2C,CAAhB,CAAjB,GAAuChG,IAAI,CAACuC,KAAL,CAAY,KAAKyD,CAAjB,CAAhD;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAK7E,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAKM,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAK4S,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAKrO,CAAL,GAAS,CAAE,KAAKA,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKD,CAAL,EAAS;AAER,aAAO,KAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX,GAAe,KAAKM,CAAL,GAASsE,CAAC,CAACtE,CAA1B,GAA8B,KAAK4S,CAAL,GAAStO,CAAC,CAACsO,CAAzC,GAA6C,KAAKrO,CAAL,GAASD,CAAC,CAACC,CAA/D;AAEA;;;WAED,oBAAW;AAEV,aAAO,KAAK7E,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAK4S,CAAL,GAAS,KAAKA,CAAlD,GAAsD,KAAKrO,CAAL,GAAS,KAAKA,CAA3E;AAEA;;;WAED,kBAAS;AAER,aAAOhG,IAAI,CAACyG,IAAL,CAAW,KAAKtF,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAK4S,CAAL,GAAS,KAAKA,CAAlD,GAAsD,KAAKrO,CAAL,GAAS,KAAKA,CAA/E,CAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAOhG,IAAI,CAACiC,GAAL,CAAU,KAAKd,CAAf,IAAqBnB,IAAI,CAACiC,GAAL,CAAU,KAAKR,CAAf,CAArB,GAA0CzB,IAAI,CAACiC,GAAL,CAAU,KAAKoS,CAAf,CAA1C,GAA+DrU,IAAI,CAACiC,GAAL,CAAU,KAAK+D,CAAf,CAAtE;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKQ,YAAL,CAAmB,KAAK7G,MAAL,MAAiB,CAApC,CAAP;AAEA;;;WAED,mBAAWA,MAAX,EAAoB;AAEnB,aAAO,KAAKyF,SAAL,GAAiBe,cAAjB,CAAiCxG,MAAjC,CAAP;AAEA;;;WAED,cAAMoG,CAAN,EAASgB,KAAT,EAAiB;AAEhB,WAAK5F,CAAL,IAAU,CAAE4E,CAAC,CAAC5E,CAAF,GAAM,KAAKA,CAAb,IAAmB4F,KAA7B;AACA,WAAKtF,CAAL,IAAU,CAAEsE,CAAC,CAACtE,CAAF,GAAM,KAAKA,CAAb,IAAmBsF,KAA7B;AACA,WAAKsN,CAAL,IAAU,CAAEtO,CAAC,CAACsO,CAAF,GAAM,KAAKA,CAAb,IAAmBtN,KAA7B;AACA,WAAKf,CAAL,IAAU,CAAED,CAAC,CAACC,CAAF,GAAM,KAAKA,CAAb,IAAmBe,KAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaC,EAAb,EAAiBC,EAAjB,EAAqBF,KAArB,EAA6B;AAE5B,WAAK5F,CAAL,GAAS6F,EAAE,CAAC7F,CAAH,GAAO,CAAE8F,EAAE,CAAC9F,CAAH,GAAO6F,EAAE,CAAC7F,CAAZ,IAAkB4F,KAAlC;AACA,WAAKtF,CAAL,GAASuF,EAAE,CAACvF,CAAH,GAAO,CAAEwF,EAAE,CAACxF,CAAH,GAAOuF,EAAE,CAACvF,CAAZ,IAAkBsF,KAAlC;AACA,WAAKsN,CAAL,GAASrN,EAAE,CAACqN,CAAH,GAAO,CAAEpN,EAAE,CAACoN,CAAH,GAAOrN,EAAE,CAACqN,CAAZ,IAAkBtN,KAAlC;AACA,WAAKf,CAAL,GAASgB,EAAE,CAAChB,CAAH,GAAO,CAAEiB,EAAE,CAACjB,CAAH,GAAOgB,EAAE,CAAChB,CAAZ,IAAkBe,KAAlC;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQhB,CAAR,EAAY;AAEX,aAAWA,CAAC,CAAC5E,CAAF,KAAQ,KAAKA,CAAf,IAAwB4E,CAAC,CAACtE,CAAF,KAAQ,KAAKA,CAArC,IAA8CsE,CAAC,CAACsO,CAAF,KAAQ,KAAKA,CAA3D,IAAoEtO,CAAC,CAACC,CAAF,KAAQ,KAAKA,CAA1F;AAEA;;;WAED,mBAAWzG,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,WAAK/F,CAAL,GAAS5B,KAAK,CAAE2H,MAAF,CAAd;AACA,WAAKzF,CAAL,GAASlC,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AACA,WAAKmN,CAAL,GAAS9U,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AACA,WAAKlB,CAAL,GAASzG,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAK/F,CAAvB;AACA5B,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKzF,CAA3B;AACAlC,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKmN,CAA3B;AACA9U,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKlB,CAA3B;AAEA,aAAOzG,KAAP;AAEA;;;WAED,6BAAqB4H,SAArB,EAAgChI,KAAhC,EAAuC+H,MAAvC,EAAgD;AAE/C,UAAKA,MAAM,KAAKpI,SAAhB,EAA4B;AAE3B4F,QAAAA,OAAO,CAACC,IAAR,CAAc,qEAAd;AAEA;;AAED,WAAKxD,CAAL,GAASgG,SAAS,CAACC,IAAV,CAAgBjI,KAAhB,CAAT;AACA,WAAKsC,CAAL,GAAS0F,SAAS,CAACE,IAAV,CAAgBlI,KAAhB,CAAT;AACA,WAAKkV,CAAL,GAASlN,SAAS,CAACqI,IAAV,CAAgBrQ,KAAhB,CAAT;AACA,WAAK6G,CAAL,GAASmB,SAAS,CAACsO,IAAV,CAAgBtW,KAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAKgC,CAAL,GAASnB,IAAI,CAACK,MAAL,EAAT;AACA,WAAKoB,CAAL,GAASzB,IAAI,CAACK,MAAL,EAAT;AACA,WAAKgU,CAAL,GAASrU,IAAI,CAACK,MAAL,EAAT;AACA,WAAK2F,CAAL,GAAShG,IAAI,CAACK,MAAL,EAAT;AAEA,aAAO,IAAP;AAEA;;SAEEkH,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKrG,CAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKM,CAAX;;AAHD;AAAA;AAIC,qBAAM,KAAK4S,CAAX;;AAJD;AAAA;AAKC,qBAAM,KAAKrO,CAAX;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;AAWD;AACA;AACA;AACA;AACA;;;IACM0P,iB;;;;;AAEL,6BAAaxF,KAAb,EAAoBC,MAApB,EAA2C;AAAA;;AAAA,QAAfwF,OAAe,uEAAL,EAAK;;AAAA;;AAE1C;AAEA,WAAKC,mBAAL,GAA2B,IAA3B;AAEA,WAAK1F,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAK0F,KAAL,GAAa,CAAb;AAEA,WAAKC,OAAL,GAAe,IAAI1B,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBlE,KAAnB,EAA0BC,MAA1B,CAAf;AACA,WAAK4F,WAAL,GAAmB,KAAnB;AAEA,WAAKC,QAAL,GAAgB,IAAI5B,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBlE,KAAnB,EAA0BC,MAA1B,CAAhB;AAEA,QAAMN,KAAK,GAAG;AAAEK,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEA,MAAxB;AAAgC0F,MAAAA,KAAK,EAAE;AAAvC,KAAd;AAEA,WAAKI,OAAL,GAAe,IAAInE,OAAJ,CAAajC,KAAb,EAAoB8F,OAAO,CAAC3D,OAA5B,EAAqC2D,OAAO,CAACzD,KAA7C,EAAoDyD,OAAO,CAACxD,KAA5D,EAAmEwD,OAAO,CAACvD,SAA3E,EAAsFuD,OAAO,CAACtD,SAA9F,EAAyGsD,OAAO,CAACrD,MAAjH,EAAyHqD,OAAO,CAAChX,IAAjI,EAAuIgX,OAAO,CAACpD,UAA/I,EAA2JoD,OAAO,CAACnD,QAAnK,CAAf;AACA,WAAKyD,OAAL,CAAa5C,qBAAb,GAAqC,IAArC;AAEA,WAAK4C,OAAL,CAAahD,KAAb,GAAqB,KAArB;AACA,WAAKgD,OAAL,CAAalD,eAAb,GAA+B4C,OAAO,CAAC5C,eAAR,KAA4BjU,SAA5B,GAAwC6W,OAAO,CAAC5C,eAAhD,GAAkE,KAAjG;AACA,WAAKkD,OAAL,CAAarD,cAAb,GAA8B+C,OAAO,CAAC/C,cAAR,KAA2B9T,SAA3B,GAAuC6W,OAAO,CAAC/C,cAA/C,GAAgE,IAA9F;AACA,WAAKqD,OAAL,CAAa5D,SAAb,GAAyBsD,OAAO,CAACtD,SAAR,KAAsBvT,SAAtB,GAAkC6W,OAAO,CAACtD,SAA1C,GAAsDpa,YAA/E;AAEA,WAAKie,WAAL,GAAmBP,OAAO,CAACO,WAAR,KAAwBpX,SAAxB,GAAoC6W,OAAO,CAACO,WAA5C,GAA0D,IAA7E;AACA,WAAKC,aAAL,GAAqBR,OAAO,CAACQ,aAAR,KAA0BrX,SAA1B,GAAsC6W,OAAO,CAACQ,aAA9C,GAA8D,KAAnF;AAEA,WAAKC,YAAL,GAAoBT,OAAO,CAACS,YAAR,KAAyBtX,SAAzB,GAAqC6W,OAAO,CAACS,YAA7C,GAA4D,IAAhF;AAEA,WAAKC,OAAL,GAAeV,OAAO,CAACU,OAAR,KAAoBvX,SAApB,GAAgC6W,OAAO,CAACU,OAAxC,GAAkD,CAAjE;AA9B0C;AAgC1C;;;;WAED,iBAASnG,KAAT,EAAgBC,MAAhB,EAAoC;AAAA,UAAZ0F,KAAY,uEAAJ,CAAI;;AAEnC,UAAK,KAAK3F,KAAL,KAAeA,KAAf,IAAwB,KAAKC,MAAL,KAAgBA,MAAxC,IAAkD,KAAK0F,KAAL,KAAeA,KAAtE,EAA8E;AAE7E,aAAK3F,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAK0F,KAAL,GAAaA,KAAb;AAEA,aAAKI,OAAL,CAAapG,KAAb,CAAmBK,KAAnB,GAA2BA,KAA3B;AACA,aAAK+F,OAAL,CAAapG,KAAb,CAAmBM,MAAnB,GAA4BA,MAA5B;AACA,aAAK8F,OAAL,CAAapG,KAAb,CAAmBgG,KAAnB,GAA2BA,KAA3B;AAEA,aAAKS,OAAL;AAEA;;AAED,WAAKN,QAAL,CAAcvR,GAAd,CAAmB,CAAnB,EAAsB,CAAtB,EAAyByL,KAAzB,EAAgCC,MAAhC;AACA,WAAK2F,OAAL,CAAarR,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwByL,KAAxB,EAA+BC,MAA/B;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKtL,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAMJ,MAAN,EAAe;AAEd,WAAKwC,KAAL,GAAaxC,MAAM,CAACwC,KAApB;AACA,WAAKC,MAAL,GAAczC,MAAM,CAACyC,MAArB;AACA,WAAK0F,KAAL,GAAanI,MAAM,CAACmI,KAApB;AAEA,WAAKG,QAAL,CAAclI,IAAd,CAAoBJ,MAAM,CAACsI,QAA3B;AAEA,WAAKC,OAAL,GAAevI,MAAM,CAACuI,OAAP,CAAeM,KAAf,EAAf;AACA,WAAKN,OAAL,CAAa5C,qBAAb,GAAqC,IAArC,CATc,CAWd;;AAEA,UAAMxD,KAAK,GAAGtK,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAACuI,OAAP,CAAepG,KAAlC,CAAd;AACA,WAAKoG,OAAL,CAAavI,MAAb,GAAsB,IAAIqD,MAAJ,CAAYlB,KAAZ,CAAtB;AAEA,WAAKqG,WAAL,GAAmBxI,MAAM,CAACwI,WAA1B;AACA,WAAKC,aAAL,GAAqBzI,MAAM,CAACyI,aAA5B;AAEA,UAAKzI,MAAM,CAAC0I,YAAP,KAAwB,IAA7B,EAAoC,KAAKA,YAAL,GAAoB1I,MAAM,CAAC0I,YAAP,CAAoBG,KAApB,EAApB;AAEpC,WAAKF,OAAL,GAAe3I,MAAM,CAAC2I,OAAtB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,WAAKpC,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAApB;AAEA;;;;EA9F8BD,e;;IAkG1B+X,gB;;;;;AAEL,8BAA6D;AAAA;;AAAA,QAAhD3F,IAAgD,uEAAzC,IAAyC;AAAA,QAAnCZ,KAAmC,uEAA3B,CAA2B;AAAA,QAAxBC,MAAwB,uEAAf,CAAe;AAAA,QAAZ0F,KAAY,uEAAJ,CAAI;;AAAA;;AAE5D,gCAAO,IAAP;AAEA,WAAKa,kBAAL,GAA0B,IAA1B;AAEA,WAAK7G,KAAL,GAAa;AAAEiB,MAAAA,IAAI,EAAJA,IAAF;AAAQZ,MAAAA,KAAK,EAALA,KAAR;AAAeC,MAAAA,MAAM,EAANA,MAAf;AAAuB0F,MAAAA,KAAK,EAALA;AAAvB,KAAb;AAEA,WAAKzD,SAAL,GAAiBxa,aAAjB;AACA,WAAKya,SAAL,GAAiBza,aAAjB;AAEA,WAAK+e,KAAL,GAAajf,mBAAb;AAEA,WAAKqb,eAAL,GAAuB,KAAvB;AACA,WAAKE,KAAL,GAAa,KAAb;AACA,WAAKC,eAAL,GAAuB,CAAvB;AAf4D;AAiB5D;;;EAnB6BpB,O;;IAuBzB8E,sB;;;;;AAEL,kCAAa1G,KAAb,EAAoBC,MAApB,EAA4B0F,KAA5B,EAAoC;AAAA;;AAAA;;AAEnC,gCAAO3F,KAAP,EAAcC,MAAd;AAEA,WAAK0G,wBAAL,GAAgC,IAAhC;AAEA,WAAKhB,KAAL,GAAaA,KAAb;AAEA,WAAKI,OAAL,GAAe,IAAIQ,gBAAJ,CAAsB,IAAtB,EAA4BvG,KAA5B,EAAmCC,MAAnC,EAA2C0F,KAA3C,CAAf;AAEA,WAAKI,OAAL,CAAa5C,qBAAb,GAAqC,IAArC;AAVmC;AAYnC;;;EAdmCqC,iB;;IAkB/BoB,a;;;;;AAEL,2BAA6D;AAAA;;AAAA,QAAhDhG,IAAgD,uEAAzC,IAAyC;AAAA,QAAnCZ,KAAmC,uEAA3B,CAA2B;AAAA,QAAxBC,MAAwB,uEAAf,CAAe;AAAA,QAAZ0F,KAAY,uEAAJ,CAAI;;AAAA;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,gCAAO,IAAP;AAEA,WAAKkB,eAAL,GAAuB,IAAvB;AAEA,WAAKlH,KAAL,GAAa;AAAEiB,MAAAA,IAAI,EAAJA,IAAF;AAAQZ,MAAAA,KAAK,EAALA,KAAR;AAAeC,MAAAA,MAAM,EAANA,MAAf;AAAuB0F,MAAAA,KAAK,EAALA;AAAvB,KAAb;AAEA,WAAKzD,SAAL,GAAiBxa,aAAjB;AACA,WAAKya,SAAL,GAAiBza,aAAjB;AAEA,WAAK+e,KAAL,GAAajf,mBAAb;AAEA,WAAKqb,eAAL,GAAuB,KAAvB;AACA,WAAKE,KAAL,GAAa,KAAb;AACA,WAAKC,eAAL,GAAuB,CAAvB;AAvB4D;AAyB5D;;;EA3B0BpB,O;;IA+BtBkF,mB;;;;;AAEL,+BAAa9G,KAAb,EAAoBC,MAApB,EAA4B0F,KAA5B,EAAoC;AAAA;;AAAA;;AAEnC,gCAAO3F,KAAP,EAAcC,MAAd;AAEA,WAAK8G,qBAAL,GAA6B,IAA7B;AAEA,WAAKpB,KAAL,GAAaA,KAAb;AAEA,WAAKI,OAAL,GAAe,IAAIa,aAAJ,CAAmB,IAAnB,EAAyB5G,KAAzB,EAAgCC,MAAhC,EAAwC0F,KAAxC,CAAf;AAEA,WAAKI,OAAL,CAAa5C,qBAAb,GAAqC,IAArC;AAVmC;AAYnC;;;EAdgCqC,iB;;IAkB5BwB,0B;;;;;AAEL,sCAAahH,KAAb,EAAoBC,MAApB,EAA4BgH,KAA5B,EAAkD;AAAA;;AAAA,QAAfxB,OAAe,uEAAL,EAAK;;AAAA;;AAEjD,gCAAOzF,KAAP,EAAcC,MAAd,EAAsBwF,OAAtB;AAEA,WAAKyB,4BAAL,GAAoC,IAApC;AAEA,QAAMnB,OAAO,GAAG,OAAKA,OAArB;AAEA,WAAKA,OAAL,GAAe,EAAf;;AAEA,SAAM,IAAIxW,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0X,KAArB,EAA4B1X,CAAC,EAA7B,EAAmC;AAElC,aAAKwW,OAAL,CAAcxW,CAAd,IAAoBwW,OAAO,CAACM,KAAR,EAApB;AACA,aAAKN,OAAL,CAAcxW,CAAd,EAAkB4T,qBAAlB,GAA0C,IAA1C;AAEA;;AAfgD;AAiBjD;;;;WAED,iBAASnD,KAAT,EAAgBC,MAAhB,EAAoC;AAAA,UAAZ0F,KAAY,uEAAJ,CAAI;;AAEnC,UAAK,KAAK3F,KAAL,KAAeA,KAAf,IAAwB,KAAKC,MAAL,KAAgBA,MAAxC,IAAkD,KAAK0F,KAAL,KAAeA,KAAtE,EAA8E;AAE7E,aAAK3F,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAK0F,KAAL,GAAaA,KAAb;;AAEA,aAAM,IAAIpW,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG,KAAKpB,OAAL,CAAatW,MAAnC,EAA2CF,CAAC,GAAG4X,EAA/C,EAAmD5X,CAAC,EAApD,EAA0D;AAEzD,eAAKwW,OAAL,CAAcxW,CAAd,EAAkBoQ,KAAlB,CAAwBK,KAAxB,GAAgCA,KAAhC;AACA,eAAK+F,OAAL,CAAcxW,CAAd,EAAkBoQ,KAAlB,CAAwBM,MAAxB,GAAiCA,MAAjC;AACA,eAAK8F,OAAL,CAAcxW,CAAd,EAAkBoQ,KAAlB,CAAwBgG,KAAxB,GAAgCA,KAAhC;AAEA;;AAED,aAAKS,OAAL;AAEA;;AAED,WAAKN,QAAL,CAAcvR,GAAd,CAAmB,CAAnB,EAAsB,CAAtB,EAAyByL,KAAzB,EAAgCC,MAAhC;AACA,WAAK2F,OAAL,CAAarR,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwByL,KAAxB,EAA+BC,MAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMzC,MAAN,EAAe;AAEd,WAAK4I,OAAL;AAEA,WAAKpG,KAAL,GAAaxC,MAAM,CAACwC,KAApB;AACA,WAAKC,MAAL,GAAczC,MAAM,CAACyC,MAArB;AACA,WAAK0F,KAAL,GAAanI,MAAM,CAACmI,KAApB;AAEA,WAAKG,QAAL,CAAcvR,GAAd,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKyL,KAA9B,EAAqC,KAAKC,MAA1C;AACA,WAAK2F,OAAL,CAAarR,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKyL,KAA7B,EAAoC,KAAKC,MAAzC;AAEA,WAAK+F,WAAL,GAAmBxI,MAAM,CAACwI,WAA1B;AACA,WAAKC,aAAL,GAAqBzI,MAAM,CAACyI,aAA5B;AAEA,UAAKzI,MAAM,CAAC0I,YAAP,KAAwB,IAA7B,EAAoC,KAAKA,YAAL,GAAoB1I,MAAM,CAAC0I,YAAP,CAAoBG,KAApB,EAApB;AAEpC,WAAKN,OAAL,CAAatW,MAAb,GAAsB,CAAtB;;AAEA,WAAM,IAAIF,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG3J,MAAM,CAACuI,OAAP,CAAetW,MAArC,EAA6CF,CAAC,GAAG4X,EAAjD,EAAqD5X,CAAC,EAAtD,EAA4D;AAE3D,aAAKwW,OAAL,CAAcxW,CAAd,IAAoBiO,MAAM,CAACuI,OAAP,CAAgBxW,CAAhB,EAAoB8W,KAApB,EAApB;AACA,aAAKN,OAAL,CAAcxW,CAAd,EAAkB4T,qBAAlB,GAA0C,IAA1C;AAEA;;AAED,aAAO,IAAP;AAEA;;;;EA3EuCqC,iB;;IA+EnC4B,U;AAEL,wBAA0C;AAAA,QAA7BnW,CAA6B,uEAAzB,CAAyB;AAAA,QAAtBM,CAAsB,uEAAlB,CAAkB;AAAA,QAAf4S,CAAe,uEAAX,CAAW;AAAA,QAARrO,CAAQ,uEAAJ,CAAI;;AAAA;;AAEzC,SAAKuR,YAAL,GAAoB,IAApB;AAEA,SAAKC,EAAL,GAAUrW,CAAV;AACA,SAAKsW,EAAL,GAAUhW,CAAV;AACA,SAAKiW,EAAL,GAAUrD,CAAV;AACA,SAAKsD,EAAL,GAAU3R,CAAV;AAEA;;;;SA8GD,eAAQ;AAEP,aAAO,KAAKwR,EAAZ;AAEA,K;SAED,aAAO5W,KAAP,EAAe;AAEd,WAAK4W,EAAL,GAAU5W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAQ;AAEP,aAAO,KAAKH,EAAZ;AAEA,K;SAED,aAAO7W,KAAP,EAAe;AAEd,WAAK6W,EAAL,GAAU7W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAQ;AAEP,aAAO,KAAKF,EAAZ;AAEA,K;SAED,aAAO9W,KAAP,EAAe;AAEd,WAAK8W,EAAL,GAAU9W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAQ;AAEP,aAAO,KAAKD,EAAZ;AAEA,K;SAED,aAAO/W,KAAP,EAAe;AAEd,WAAK+W,EAAL,GAAU/W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;WAED,aAAKzW,CAAL,EAAQM,CAAR,EAAW4S,CAAX,EAAcrO,CAAd,EAAkB;AAEjB,WAAKwR,EAAL,GAAUrW,CAAV;AACA,WAAKsW,EAAL,GAAUhW,CAAV;AACA,WAAKiW,EAAL,GAAUrD,CAAV;AACA,WAAKsD,EAAL,GAAU3R,CAAV;;AAEA,WAAK4R,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK/S,WAAT,CAAsB,KAAK2S,EAA3B,EAA+B,KAAKC,EAApC,EAAwC,KAAKC,EAA7C,EAAiD,KAAKC,EAAtD,CAAP;AAEA;;;WAED,cAAME,UAAN,EAAmB;AAElB,WAAKL,EAAL,GAAUK,UAAU,CAAC1W,CAArB;AACA,WAAKsW,EAAL,GAAUI,UAAU,CAACpW,CAArB;AACA,WAAKiW,EAAL,GAAUG,UAAU,CAACxD,CAArB;AACA,WAAKsD,EAAL,GAAUE,UAAU,CAAC7R,CAArB;;AAEA,WAAK4R,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcE,KAAd,EAAqBC,MAArB,EAA8B;AAE7B,UAAK,EAAID,KAAK,IAAIA,KAAK,CAACE,OAAnB,CAAL,EAAoC;AAEnC,cAAM,IAAI7S,KAAJ,CAAW,kGAAX,CAAN;AAEA;;AAED,UAAMhE,CAAC,GAAG2W,KAAK,CAACN,EAAhB;AAAA,UAAoB/V,CAAC,GAAGqW,KAAK,CAACL,EAA9B;AAAA,UAAkCpD,CAAC,GAAGyD,KAAK,CAACJ,EAA5C;AAAA,UAAgD5T,KAAK,GAAGgU,KAAK,CAACG,MAA9D,CAR6B,CAU7B;AACA;AACA;;AAEA,UAAMlU,GAAG,GAAG/D,IAAI,CAAC+D,GAAjB;AACA,UAAMC,GAAG,GAAGhE,IAAI,CAACgE,GAAjB;AAEA,UAAMkU,EAAE,GAAGnU,GAAG,CAAE5C,CAAC,GAAG,CAAN,CAAd;AACA,UAAM8C,EAAE,GAAGF,GAAG,CAAEtC,CAAC,GAAG,CAAN,CAAd;AACA,UAAM0W,EAAE,GAAGpU,GAAG,CAAEsQ,CAAC,GAAG,CAAN,CAAd;AAEA,UAAM+D,EAAE,GAAGpU,GAAG,CAAE7C,CAAC,GAAG,CAAN,CAAd;AACA,UAAM+C,EAAE,GAAGF,GAAG,CAAEvC,CAAC,GAAG,CAAN,CAAd;AACA,UAAM4W,EAAE,GAAGrU,GAAG,CAAEqQ,CAAC,GAAG,CAAN,CAAd;;AAEA,cAASvQ,KAAT;AAEC,aAAK,KAAL;AACC,eAAK0T,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED,aAAK,KAAL;AACC,eAAKb,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED,aAAK,KAAL;AACC,eAAKb,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED,aAAK,KAAL;AACC,eAAKb,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED,aAAK,KAAL;AACC,eAAKb,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED,aAAK,KAAL;AACC,eAAKb,EAAL,GAAUY,EAAE,GAAGnU,EAAL,GAAUkU,EAAV,GAAeD,EAAE,GAAGhU,EAAL,GAAUmU,EAAnC;AACA,eAAKZ,EAAL,GAAUS,EAAE,GAAGhU,EAAL,GAAUiU,EAAV,GAAeC,EAAE,GAAGnU,EAAL,GAAUoU,EAAnC;AACA,eAAKX,EAAL,GAAUQ,EAAE,GAAGjU,EAAL,GAAUoU,EAAV,GAAeD,EAAE,GAAGlU,EAAL,GAAUiU,EAAnC;AACA,eAAKR,EAAL,GAAUO,EAAE,GAAGjU,EAAL,GAAUkU,EAAV,GAAeC,EAAE,GAAGlU,EAAL,GAAUmU,EAAnC;AACA;;AAED;AACC3T,UAAAA,OAAO,CAACC,IAAR,CAAc,qEAAqEb,KAAnF;AA7CF;;AAiDA,UAAKiU,MAAM,KAAK,KAAhB,EAAwB,KAAKH,iBAAL;AAExB,aAAO,IAAP;AAEA;;;WAED,0BAAkBU,IAAlB,EAAwB5R,KAAxB,EAAgC;AAE/B;AAEA;AAEA,UAAM6R,SAAS,GAAG7R,KAAK,GAAG,CAA1B;AAAA,UAA6B9D,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUuU,SAAV,CAAjC;AAEA,WAAKf,EAAL,GAAUc,IAAI,CAACnX,CAAL,GAASyB,CAAnB;AACA,WAAK6U,EAAL,GAAUa,IAAI,CAAC7W,CAAL,GAASmB,CAAnB;AACA,WAAK8U,EAAL,GAAUY,IAAI,CAACjE,CAAL,GAASzR,CAAnB;AACA,WAAK+U,EAAL,GAAU3X,IAAI,CAAC+D,GAAL,CAAUwU,SAAV,CAAV;;AAEA,WAAKX,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuB3W,CAAvB,EAA2B;AAE1B;AAEA;AAEA,UAAMqH,EAAE,GAAGrH,CAAC,CAACoF,QAAb;AAAA,UAECqO,GAAG,GAAGpM,EAAE,CAAE,CAAF,CAFT;AAAA,UAEgBqM,GAAG,GAAGrM,EAAE,CAAE,CAAF,CAFxB;AAAA,UAE+BsM,GAAG,GAAGtM,EAAE,CAAE,CAAF,CAFvC;AAAA,UAGCuM,GAAG,GAAGvM,EAAE,CAAE,CAAF,CAHT;AAAA,UAGgBwM,GAAG,GAAGxM,EAAE,CAAE,CAAF,CAHxB;AAAA,UAG+ByM,GAAG,GAAGzM,EAAE,CAAE,CAAF,CAHvC;AAAA,UAIC0M,GAAG,GAAG1M,EAAE,CAAE,CAAF,CAJT;AAAA,UAIgB2M,GAAG,GAAG3M,EAAE,CAAE,CAAF,CAJxB;AAAA,UAI+B4M,GAAG,GAAG5M,EAAE,CAAE,EAAF,CAJvC;AAAA,UAMCkQ,KAAK,GAAG9D,GAAG,GAAGI,GAAN,GAAYI,GANrB;;AAQA,UAAKsD,KAAK,GAAG,CAAb,EAAiB;AAEhB,YAAM5V,CAAC,GAAG,MAAM5C,IAAI,CAACyG,IAAL,CAAW+R,KAAK,GAAG,GAAnB,CAAhB;AAEA,aAAKb,EAAL,GAAU,OAAO/U,CAAjB;AACA,aAAK4U,EAAL,GAAU,CAAEvC,GAAG,GAAGF,GAAR,IAAgBnS,CAA1B;AACA,aAAK6U,EAAL,GAAU,CAAE7C,GAAG,GAAGI,GAAR,IAAgBpS,CAA1B;AACA,aAAK8U,EAAL,GAAU,CAAE7C,GAAG,GAAGF,GAAR,IAAgB/R,CAA1B;AAEA,OATD,MASO,IAAK8R,GAAG,GAAGI,GAAN,IAAaJ,GAAG,GAAGQ,GAAxB,EAA8B;AAEpC,YAAMtS,EAAC,GAAG,MAAM5C,IAAI,CAACyG,IAAL,CAAW,MAAMiO,GAAN,GAAYI,GAAZ,GAAkBI,GAA7B,CAAhB;;AAEA,aAAKyC,EAAL,GAAU,CAAE1C,GAAG,GAAGF,GAAR,IAAgBnS,EAA1B;AACA,aAAK4U,EAAL,GAAU,OAAO5U,EAAjB;AACA,aAAK6U,EAAL,GAAU,CAAE9C,GAAG,GAAGE,GAAR,IAAgBjS,EAA1B;AACA,aAAK8U,EAAL,GAAU,CAAE9C,GAAG,GAAGI,GAAR,IAAgBpS,EAA1B;AAEA,OATM,MASA,IAAKkS,GAAG,GAAGI,GAAX,EAAiB;AAEvB,YAAMtS,GAAC,GAAG,MAAM5C,IAAI,CAACyG,IAAL,CAAW,MAAMqO,GAAN,GAAYJ,GAAZ,GAAkBQ,GAA7B,CAAhB;;AAEA,aAAKyC,EAAL,GAAU,CAAE/C,GAAG,GAAGI,GAAR,IAAgBpS,GAA1B;AACA,aAAK4U,EAAL,GAAU,CAAE7C,GAAG,GAAGE,GAAR,IAAgBjS,GAA1B;AACA,aAAK6U,EAAL,GAAU,OAAO7U,GAAjB;AACA,aAAK8U,EAAL,GAAU,CAAE3C,GAAG,GAAGE,GAAR,IAAgBrS,GAA1B;AAEA,OATM,MASA;AAEN,YAAMA,GAAC,GAAG,MAAM5C,IAAI,CAACyG,IAAL,CAAW,MAAMyO,GAAN,GAAYR,GAAZ,GAAkBI,GAA7B,CAAhB;;AAEA,aAAK6C,EAAL,GAAU,CAAE9C,GAAG,GAAGF,GAAR,IAAgB/R,GAA1B;AACA,aAAK4U,EAAL,GAAU,CAAE5C,GAAG,GAAGI,GAAR,IAAgBpS,GAA1B;AACA,aAAK6U,EAAL,GAAU,CAAE1C,GAAG,GAAGE,GAAR,IAAgBrS,GAA1B;AACA,aAAK8U,EAAL,GAAU,OAAO9U,GAAjB;AAEA;;AAED,WAAKgV,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAoBa,KAApB,EAA2BC,GAA3B,EAAiC;AAEhC;AAEA,UAAI3N,CAAC,GAAG0N,KAAK,CAACE,GAAN,CAAWD,GAAX,IAAmB,CAA3B;;AAEA,UAAK3N,CAAC,GAAG6N,MAAM,CAACC,OAAhB,EAA0B;AAEzB;AAEA9N,QAAAA,CAAC,GAAG,CAAJ;;AAEA,YAAK/K,IAAI,CAACiC,GAAL,CAAUwW,KAAK,CAACtX,CAAhB,IAAsBnB,IAAI,CAACiC,GAAL,CAAUwW,KAAK,CAACpE,CAAhB,CAA3B,EAAiD;AAEhD,eAAKmD,EAAL,GAAU,CAAEiB,KAAK,CAAChX,CAAlB;AACA,eAAKgW,EAAL,GAAUgB,KAAK,CAACtX,CAAhB;AACA,eAAKuW,EAAL,GAAU,CAAV;AACA,eAAKC,EAAL,GAAU5M,CAAV;AAEA,SAPD,MAOO;AAEN,eAAKyM,EAAL,GAAU,CAAV;AACA,eAAKC,EAAL,GAAU,CAAEgB,KAAK,CAACpE,CAAlB;AACA,eAAKqD,EAAL,GAAUe,KAAK,CAAChX,CAAhB;AACA,eAAKkW,EAAL,GAAU5M,CAAV;AAEA;AAED,OAtBD,MAsBO;AAEN;AAEA,aAAKyM,EAAL,GAAUiB,KAAK,CAAChX,CAAN,GAAUiX,GAAG,CAACrE,CAAd,GAAkBoE,KAAK,CAACpE,CAAN,GAAUqE,GAAG,CAACjX,CAA1C;AACA,aAAKgW,EAAL,GAAUgB,KAAK,CAACpE,CAAN,GAAUqE,GAAG,CAACvX,CAAd,GAAkBsX,KAAK,CAACtX,CAAN,GAAUuX,GAAG,CAACrE,CAA1C;AACA,aAAKqD,EAAL,GAAUe,KAAK,CAACtX,CAAN,GAAUuX,GAAG,CAACjX,CAAd,GAAkBgX,KAAK,CAAChX,CAAN,GAAUiX,GAAG,CAACvX,CAA1C;AACA,aAAKwW,EAAL,GAAU5M,CAAV;AAEA;;AAED,aAAO,KAAK3F,SAAL,EAAP;AAEA;;;WAED,iBAAS1B,CAAT,EAAa;AAEZ,aAAO,IAAI1D,IAAI,CAACuU,IAAL,CAAWvU,IAAI,CAACiC,GAAL,CAAUtB,KAAK,CAAE,KAAKgY,GAAL,CAAUjV,CAAV,CAAF,EAAiB,CAAE,CAAnB,EAAsB,CAAtB,CAAf,CAAX,CAAX;AAEA;;;WAED,uBAAeA,CAAf,EAAkBoV,IAAlB,EAAyB;AAExB,UAAMpS,KAAK,GAAG,KAAKqS,OAAL,CAAcrV,CAAd,CAAd;AAEA,UAAKgD,KAAK,KAAK,CAAf,EAAmB,OAAO,IAAP;AAEnB,UAAM/E,CAAC,GAAG3B,IAAI,CAACa,GAAL,CAAU,CAAV,EAAaiY,IAAI,GAAGpS,KAApB,CAAV;AAEA,WAAKsS,KAAL,CAAYtV,CAAZ,EAAe/B,CAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAW;AAEV,aAAO,KAAK8C,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAP;AAEA;;;WAED,kBAAS;AAER;AAEA,aAAO,KAAKwU,SAAL,EAAP;AAEA;;;WAED,qBAAY;AAEX,WAAKzB,EAAL,IAAW,CAAE,CAAb;AACA,WAAKC,EAAL,IAAW,CAAE,CAAb;AACA,WAAKC,EAAL,IAAW,CAAE,CAAb;;AAEA,WAAKE,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAK7R,CAAL,EAAS;AAER,aAAO,KAAKyR,EAAL,GAAUzR,CAAC,CAACyR,EAAZ,GAAiB,KAAKC,EAAL,GAAU1R,CAAC,CAAC0R,EAA7B,GAAkC,KAAKC,EAAL,GAAU3R,CAAC,CAAC2R,EAA9C,GAAmD,KAAKC,EAAL,GAAU5R,CAAC,CAAC4R,EAAtE;AAEA;;;WAED,oBAAW;AAEV,aAAO,KAAKH,EAAL,GAAU,KAAKA,EAAf,GAAoB,KAAKC,EAAL,GAAU,KAAKA,EAAnC,GAAwC,KAAKC,EAAL,GAAU,KAAKA,EAAvD,GAA4D,KAAKC,EAAL,GAAU,KAAKA,EAAlF;AAEA;;;WAED,kBAAS;AAER,aAAO3X,IAAI,CAACyG,IAAL,CAAW,KAAK+Q,EAAL,GAAU,KAAKA,EAAf,GAAoB,KAAKC,EAAL,GAAU,KAAKA,EAAnC,GAAwC,KAAKC,EAAL,GAAU,KAAKA,EAAvD,GAA4D,KAAKC,EAAL,GAAU,KAAKA,EAAtF,CAAP;AAEA;;;WAED,qBAAY;AAEX,UAAIjY,CAAC,GAAG,KAAKC,MAAL,EAAR;;AAEA,UAAKD,CAAC,KAAK,CAAX,EAAe;AAEd,aAAK8X,EAAL,GAAU,CAAV;AACA,aAAKC,EAAL,GAAU,CAAV;AACA,aAAKC,EAAL,GAAU,CAAV;AACA,aAAKC,EAAL,GAAU,CAAV;AAEA,OAPD,MAOO;AAENjY,QAAAA,CAAC,GAAG,IAAIA,CAAR;AAEA,aAAK8X,EAAL,GAAU,KAAKA,EAAL,GAAU9X,CAApB;AACA,aAAK+X,EAAL,GAAU,KAAKA,EAAL,GAAU/X,CAApB;AACA,aAAKgY,EAAL,GAAU,KAAKA,EAAL,GAAUhY,CAApB;AACA,aAAKiY,EAAL,GAAU,KAAKA,EAAL,GAAUjY,CAApB;AAEA;;AAED,WAAKkY,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUlU,CAAV,EAAa8J,CAAb,EAAiB;AAEhB,UAAKA,CAAC,KAAK1O,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,wGAAd;AACA,eAAO,KAAKuU,mBAAL,CAA0BxV,CAA1B,EAA6B8J,CAA7B,CAAP;AAEA;;AAED,aAAO,KAAK0L,mBAAL,CAA0B,IAA1B,EAAgCxV,CAAhC,CAAP;AAEA;;;WAED,qBAAaA,CAAb,EAAiB;AAEhB,aAAO,KAAKwV,mBAAL,CAA0BxV,CAA1B,EAA6B,IAA7B,CAAP;AAEA;;;WAED,6BAAqBC,CAArB,EAAwBC,CAAxB,EAA4B;AAE3B;AAEA,UAAMuV,GAAG,GAAGxV,CAAC,CAAC6T,EAAd;AAAA,UAAkB4B,GAAG,GAAGzV,CAAC,CAAC8T,EAA1B;AAAA,UAA8B4B,GAAG,GAAG1V,CAAC,CAAC+T,EAAtC;AAAA,UAA0C4B,GAAG,GAAG3V,CAAC,CAACgU,EAAlD;AACA,UAAM4B,GAAG,GAAG3V,CAAC,CAAC4T,EAAd;AAAA,UAAkBgC,GAAG,GAAG5V,CAAC,CAAC6T,EAA1B;AAAA,UAA8BgC,GAAG,GAAG7V,CAAC,CAAC8T,EAAtC;AAAA,UAA0CgC,GAAG,GAAG9V,CAAC,CAAC+T,EAAlD;AAEA,WAAKH,EAAL,GAAU2B,GAAG,GAAGO,GAAN,GAAYJ,GAAG,GAAGC,GAAlB,GAAwBH,GAAG,GAAGK,GAA9B,GAAoCJ,GAAG,GAAGG,GAApD;AACA,WAAK/B,EAAL,GAAU2B,GAAG,GAAGM,GAAN,GAAYJ,GAAG,GAAGE,GAAlB,GAAwBH,GAAG,GAAGE,GAA9B,GAAoCJ,GAAG,GAAGM,GAApD;AACA,WAAK/B,EAAL,GAAU2B,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGG,GAAlB,GAAwBN,GAAG,GAAGK,GAA9B,GAAoCJ,GAAG,GAAGG,GAApD;AACA,WAAK5B,EAAL,GAAU2B,GAAG,GAAGI,GAAN,GAAYP,GAAG,GAAGI,GAAlB,GAAwBH,GAAG,GAAGI,GAA9B,GAAoCH,GAAG,GAAGI,GAApD;;AAEA,WAAK7B,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO+B,EAAP,EAAWhY,CAAX,EAAe;AAEd,UAAKA,CAAC,KAAK,CAAX,EAAe,OAAO,IAAP;AACf,UAAKA,CAAC,KAAK,CAAX,EAAe,OAAO,KAAKmM,IAAL,CAAW6L,EAAX,CAAP;AAEf,UAAMxY,CAAC,GAAG,KAAKqW,EAAf;AAAA,UAAmB/V,CAAC,GAAG,KAAKgW,EAA5B;AAAA,UAAgCpD,CAAC,GAAG,KAAKqD,EAAzC;AAAA,UAA6C1R,CAAC,GAAG,KAAK2R,EAAtD,CALc,CAOd;;AAEA,UAAIiC,YAAY,GAAG5T,CAAC,GAAG2T,EAAE,CAAChC,EAAP,GAAYxW,CAAC,GAAGwY,EAAE,CAACnC,EAAnB,GAAwB/V,CAAC,GAAGkY,EAAE,CAAClC,EAA/B,GAAoCpD,CAAC,GAAGsF,EAAE,CAACjC,EAA9D;;AAEA,UAAKkC,YAAY,GAAG,CAApB,EAAwB;AAEvB,aAAKjC,EAAL,GAAU,CAAEgC,EAAE,CAAChC,EAAf;AACA,aAAKH,EAAL,GAAU,CAAEmC,EAAE,CAACnC,EAAf;AACA,aAAKC,EAAL,GAAU,CAAEkC,EAAE,CAAClC,EAAf;AACA,aAAKC,EAAL,GAAU,CAAEiC,EAAE,CAACjC,EAAf;AAEAkC,QAAAA,YAAY,GAAG,CAAEA,YAAjB;AAEA,OATD,MASO;AAEN,aAAK9L,IAAL,CAAW6L,EAAX;AAEA;;AAED,UAAKC,YAAY,IAAI,GAArB,EAA2B;AAE1B,aAAKjC,EAAL,GAAU3R,CAAV;AACA,aAAKwR,EAAL,GAAUrW,CAAV;AACA,aAAKsW,EAAL,GAAUhW,CAAV;AACA,aAAKiW,EAAL,GAAUrD,CAAV;AAEA,eAAO,IAAP;AAEA;;AAED,UAAMwF,eAAe,GAAG,MAAMD,YAAY,GAAGA,YAA7C;;AAEA,UAAKC,eAAe,IAAIjB,MAAM,CAACC,OAA/B,EAAyC;AAExC,YAAMjW,CAAC,GAAG,IAAIjB,CAAd;AACA,aAAKgW,EAAL,GAAU/U,CAAC,GAAGoD,CAAJ,GAAQrE,CAAC,GAAG,KAAKgW,EAA3B;AACA,aAAKH,EAAL,GAAU5U,CAAC,GAAGzB,CAAJ,GAAQQ,CAAC,GAAG,KAAK6V,EAA3B;AACA,aAAKC,EAAL,GAAU7U,CAAC,GAAGnB,CAAJ,GAAQE,CAAC,GAAG,KAAK8V,EAA3B;AACA,aAAKC,EAAL,GAAU9U,CAAC,GAAGyR,CAAJ,GAAQ1S,CAAC,GAAG,KAAK+V,EAA3B;AAEA,aAAKtS,SAAL;;AACA,aAAKwS,iBAAL;;AAEA,eAAO,IAAP;AAEA;;AAED,UAAMkC,YAAY,GAAG9Z,IAAI,CAACyG,IAAL,CAAWoT,eAAX,CAArB;AACA,UAAME,SAAS,GAAG/Z,IAAI,CAAC2G,KAAL,CAAYmT,YAAZ,EAA0BF,YAA1B,CAAlB;AACA,UAAMI,MAAM,GAAGha,IAAI,CAACgE,GAAL,CAAU,CAAE,IAAIrC,CAAN,IAAYoY,SAAtB,IAAoCD,YAAnD;AAAA,UACCG,MAAM,GAAGja,IAAI,CAACgE,GAAL,CAAUrC,CAAC,GAAGoY,SAAd,IAA4BD,YADtC;AAGA,WAAKnC,EAAL,GAAY3R,CAAC,GAAGgU,MAAJ,GAAa,KAAKrC,EAAL,GAAUsC,MAAnC;AACA,WAAKzC,EAAL,GAAYrW,CAAC,GAAG6Y,MAAJ,GAAa,KAAKxC,EAAL,GAAUyC,MAAnC;AACA,WAAKxC,EAAL,GAAYhW,CAAC,GAAGuY,MAAJ,GAAa,KAAKvC,EAAL,GAAUwC,MAAnC;AACA,WAAKvC,EAAL,GAAYrD,CAAC,GAAG2F,MAAJ,GAAa,KAAKtC,EAAL,GAAUuC,MAAnC;;AAEA,WAAKrC,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkBsC,EAAlB,EAAsBP,EAAtB,EAA0BhY,CAA1B,EAA8B;AAE7B,aAAO,KAAKmM,IAAL,CAAWoM,EAAX,EAAgBlB,KAAhB,CAAuBW,EAAvB,EAA2BhY,CAA3B,CAAP;AAEA;;;WAED,kBAAS;AAER;AACA;AACA;AAEA,UAAMwY,EAAE,GAAGna,IAAI,CAACK,MAAL,EAAX;AACA,UAAM+Z,OAAO,GAAGpa,IAAI,CAACyG,IAAL,CAAW,IAAI0T,EAAf,CAAhB;AACA,UAAME,MAAM,GAAGra,IAAI,CAACyG,IAAL,CAAW0T,EAAX,CAAf;AAEA,UAAMG,EAAE,GAAG,IAAIta,IAAI,CAACC,EAAT,GAAcD,IAAI,CAACK,MAAL,EAAzB;AAEA,UAAMka,EAAE,GAAG,IAAIva,IAAI,CAACC,EAAT,GAAcD,IAAI,CAACK,MAAL,EAAzB;AAEA,aAAO,KAAKoE,GAAL,CACN2V,OAAO,GAAGpa,IAAI,CAAC+D,GAAL,CAAUuW,EAAV,CADJ,EAEND,MAAM,GAAGra,IAAI,CAACgE,GAAL,CAAUuW,EAAV,CAFH,EAGNF,MAAM,GAAGra,IAAI,CAAC+D,GAAL,CAAUwW,EAAV,CAHH,EAINH,OAAO,GAAGpa,IAAI,CAACgE,GAAL,CAAUsW,EAAV,CAJJ,CAAP;AAOA;;;WAED,gBAAQzC,UAAR,EAAqB;AAEpB,aAASA,UAAU,CAACL,EAAX,KAAkB,KAAKA,EAAzB,IAAmCK,UAAU,CAACJ,EAAX,KAAkB,KAAKA,EAA1D,IAAoEI,UAAU,CAACH,EAAX,KAAkB,KAAKA,EAA3F,IAAqGG,UAAU,CAACF,EAAX,KAAkB,KAAKA,EAAnI;AAEA;;;WAED,mBAAWpY,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,WAAKsQ,EAAL,GAAUjY,KAAK,CAAE2H,MAAF,CAAf;AACA,WAAKuQ,EAAL,GAAUlY,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAf;AACA,WAAKwQ,EAAL,GAAUnY,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAf;AACA,WAAKyQ,EAAL,GAAUpY,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAf;;AAEA,WAAK0Q,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzBrY,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAKsQ,EAAvB;AACAjY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKuQ,EAA3B;AACAlY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKwQ,EAA3B;AACAnY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKyQ,EAA3B;AAEA,aAAOpY,KAAP;AAEA;;;WAED,6BAAqB4H,SAArB,EAAgChI,KAAhC,EAAwC;AAEvC,WAAKqY,EAAL,GAAUrQ,SAAS,CAACC,IAAV,CAAgBjI,KAAhB,CAAV;AACA,WAAKsY,EAAL,GAAUtQ,SAAS,CAACE,IAAV,CAAgBlI,KAAhB,CAAV;AACA,WAAKuY,EAAL,GAAUvQ,SAAS,CAACqI,IAAV,CAAgBrQ,KAAhB,CAAV;AACA,WAAKwY,EAAL,GAAUxQ,SAAS,CAACsO,IAAV,CAAgBtW,KAAhB,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWqb,QAAX,EAAsB;AAErB,WAAK5C,iBAAL,GAAyB4C,QAAzB;AAEA,aAAO,IAAP;AAEA;;;WAED,6BAAoB,CAAE;;SAEnBjT,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKgQ,EAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKC,EAAX;;AAHD;AAAA;AAIC,qBAAM,KAAKC,EAAX;;AAJD;AAAA;AAKC,qBAAM,KAAKC,EAAX;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;WA/pBA,eAAcuC,EAAd,EAAkBP,EAAlB,EAAsBc,EAAtB,EAA0B9Y,CAA1B,EAA8B;AAE7B+C,MAAAA,OAAO,CAACC,IAAR,CAAc,sGAAd;AACA,aAAO8V,EAAE,CAACC,gBAAH,CAAqBR,EAArB,EAAyBP,EAAzB,EAA6BhY,CAA7B,CAAP;AAEA;;;WAED,mBAAkBgZ,GAAlB,EAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,UAAxC,EAAoDC,IAApD,EAA0DC,UAA1D,EAAsErZ,CAAtE,EAA0E;AAEzE;AAEA,UAAIsZ,EAAE,GAAGJ,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAb;AAAA,UACCI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAf,CADV;AAAA,UAECK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAf,CAFV;AAAA,UAGCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAf,CAHV;AAKA,UAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AAAA,UACCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAf,CADV;AAAA,UAECO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAf,CAFV;AAAA,UAGCQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAf,CAHV;;AAKA,UAAKrZ,CAAC,KAAK,CAAX,EAAe;AAEdgZ,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBK,EAAvB;AACAN,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBM,EAAvB;AACAP,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBO,EAAvB;AACAR,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBQ,EAAvB;AACA;AAEA;;AAED,UAAKzZ,CAAC,KAAK,CAAX,EAAe;AAEdgZ,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBS,EAAvB;AACAV,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBU,EAAvB;AACAX,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBW,EAAvB;AACAZ,QAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBY,EAAvB;AACA;AAEA;;AAED,UAAKJ,EAAE,KAAKI,EAAP,IAAaP,EAAE,KAAKI,EAApB,IAA0BH,EAAE,KAAKI,EAAjC,IAAuCH,EAAE,KAAKI,EAAnD,EAAwD;AAEvD,YAAI3Y,CAAC,GAAG,IAAIjB,CAAZ;AACA,YAAMoC,GAAG,GAAGkX,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGI,EAAf,GAAoBH,EAAE,GAAGI,EAAzB,GAA8BH,EAAE,GAAGI,EAA/C;AAAA,YACCC,GAAG,GAAK1X,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAE,CAD1B;AAAA,YAEC2X,MAAM,GAAG,IAAI3X,GAAG,GAAGA,GAFpB,CAHuD,CAOvD;;AACA,YAAK2X,MAAM,GAAG9C,MAAM,CAACC,OAArB,EAA+B;AAE9B,cAAM7U,GAAG,GAAGhE,IAAI,CAACyG,IAAL,CAAWiV,MAAX,CAAZ;AAAA,cACCC,GAAG,GAAG3b,IAAI,CAAC2G,KAAL,CAAY3C,GAAZ,EAAiBD,GAAG,GAAG0X,GAAvB,CADP;AAGA7Y,UAAAA,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUpB,CAAC,GAAG+Y,GAAd,IAAsB3X,GAA1B;AACArC,UAAAA,CAAC,GAAG3B,IAAI,CAACgE,GAAL,CAAUrC,CAAC,GAAGga,GAAd,IAAsB3X,GAA1B;AAEA;;AAED,YAAM4X,IAAI,GAAGja,CAAC,GAAG8Z,GAAjB;AAEAR,QAAAA,EAAE,GAAGA,EAAE,GAAGrY,CAAL,GAASyY,EAAE,GAAGO,IAAnB;AACAV,QAAAA,EAAE,GAAGA,EAAE,GAAGtY,CAAL,GAAS0Y,EAAE,GAAGM,IAAnB;AACAT,QAAAA,EAAE,GAAGA,EAAE,GAAGvY,CAAL,GAAS2Y,EAAE,GAAGK,IAAnB;AACAR,QAAAA,EAAE,GAAGA,EAAE,GAAGxY,CAAL,GAAS4Y,EAAE,GAAGI,IAAnB,CAvBuD,CAyBvD;;AACA,YAAKhZ,CAAC,KAAK,IAAIjB,CAAf,EAAmB;AAElB,cAAMuI,CAAC,GAAG,IAAIlK,IAAI,CAACyG,IAAL,CAAWwU,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBC,EAAE,GAAGA,EAAzB,GAA8BC,EAAE,GAAGA,EAA9C,CAAd;AAEAH,UAAAA,EAAE,IAAI/Q,CAAN;AACAgR,UAAAA,EAAE,IAAIhR,CAAN;AACAiR,UAAAA,EAAE,IAAIjR,CAAN;AACAkR,UAAAA,EAAE,IAAIlR,CAAN;AAEA;AAED;;AAEDyQ,MAAAA,GAAG,CAAEC,SAAF,CAAH,GAAmBK,EAAnB;AACAN,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBM,EAAvB;AACAP,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBO,EAAvB;AACAR,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBQ,EAAvB;AAEA;;;WAED,iCAAgCT,GAAhC,EAAqCC,SAArC,EAAgDC,IAAhD,EAAsDC,UAAtD,EAAkEC,IAAlE,EAAwEC,UAAxE,EAAqF;AAEpF,UAAMC,EAAE,GAAGJ,IAAI,CAAEC,UAAF,CAAf;AACA,UAAMI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AACA,UAAMK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AACA,UAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AAEA,UAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAF,CAAf;AACA,UAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AACA,UAAMO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AACA,UAAMQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAf,CAAf;AAEAL,MAAAA,GAAG,CAAEC,SAAF,CAAH,GAAmBK,EAAE,GAAGO,EAAL,GAAUJ,EAAE,GAAGC,EAAf,GAAoBH,EAAE,GAAGK,EAAzB,GAA8BJ,EAAE,GAAGG,EAAtD;AACAX,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBM,EAAE,GAAGM,EAAL,GAAUJ,EAAE,GAAGE,EAAf,GAAoBH,EAAE,GAAGE,EAAzB,GAA8BJ,EAAE,GAAGM,EAA1D;AACAZ,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBO,EAAE,GAAGK,EAAL,GAAUJ,EAAE,GAAGG,EAAf,GAAoBN,EAAE,GAAGK,EAAzB,GAA8BJ,EAAE,GAAGG,EAA1D;AACAV,MAAAA,GAAG,CAAEC,SAAS,GAAG,CAAd,CAAH,GAAuBQ,EAAE,GAAGI,EAAL,GAAUP,EAAE,GAAGI,EAAf,GAAoBH,EAAE,GAAGI,EAAzB,GAA8BH,EAAE,GAAGI,EAA1D;AAEA,aAAOZ,GAAP;AAEA;;;;;;IAgkBIkB,O;AAEL,qBAAmC;AAAA,QAAtB1a,CAAsB,uEAAlB,CAAkB;AAAA,QAAfM,CAAe,uEAAX,CAAW;AAAA,QAAR4S,CAAQ,uEAAJ,CAAI;;AAAA;;AAElCwH,IAAAA,OAAO,CAACjW,SAAR,CAAkBkW,SAAlB,GAA8B,IAA9B;AAEA,SAAK3a,CAAL,GAASA,CAAT;AACA,SAAKM,CAAL,GAASA,CAAT;AACA,SAAK4S,CAAL,GAASA,CAAT;AAEA;;;;WAED,aAAKlT,CAAL,EAAQM,CAAR,EAAW4S,CAAX,EAAe;AAEd,UAAKA,CAAC,KAAKvV,SAAX,EAAuBuV,CAAC,GAAG,KAAKA,CAAT,CAFT,CAEqB;;AAEnC,WAAKlT,CAAL,GAASA,CAAT;AACA,WAAKM,CAAL,GAASA,CAAT;AACA,WAAK4S,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWvO,MAAX,EAAoB;AAEnB,WAAK3E,CAAL,GAAS2E,MAAT;AACA,WAAKrE,CAAL,GAASqE,MAAT;AACA,WAAKuO,CAAL,GAASvO,MAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM3E,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMM,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM4S,CAAN,EAAU;AAET,WAAKA,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAclV,KAAd,EAAqByB,KAArB,EAA6B;AAE5B,cAASzB,KAAT;AAEC,aAAK,CAAL;AAAQ,eAAKgC,CAAL,GAASP,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKa,CAAL,GAASb,KAAT;AAAgB;;AACxB,aAAK,CAAL;AAAQ,eAAKyT,CAAL,GAASzT,KAAT;AAAgB;;AACxB;AAAS,gBAAM,IAAIuE,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AALV;;AASA,aAAO,IAAP;AAEA;;;WAED,sBAAcA,KAAd,EAAsB;AAErB,cAASA,KAAT;AAEC,aAAK,CAAL;AAAQ,iBAAO,KAAKgC,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAKM,CAAZ;;AACR,aAAK,CAAL;AAAQ,iBAAO,KAAK4S,CAAZ;;AACR;AAAS,gBAAM,IAAIlP,KAAJ,CAAW,4BAA4BhG,KAAvC,CAAN;AALV;AASA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK0F,WAAT,CAAsB,KAAK1D,CAA3B,EAA8B,KAAKM,CAAnC,EAAsC,KAAK4S,CAA3C,CAAP;AAEA;;;WAED,cAAMtO,CAAN,EAAU;AAET,WAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX;AACA,WAAKM,CAAL,GAASsE,CAAC,CAACtE,CAAX;AACA,WAAK4S,CAAL,GAAStO,CAAC,CAACsO,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKtO,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKsB,UAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWzR,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AACA,WAAKyR,CAAL,IAAUzR,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AACA,WAAK4S,CAAL,GAAS1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBtO,CAAjB,EAAoBnD,CAApB,EAAwB;AAEvB,WAAKzB,CAAL,IAAU4E,CAAC,CAAC5E,CAAF,GAAMyB,CAAhB;AACA,WAAKnB,CAAL,IAAUsE,CAAC,CAACtE,CAAF,GAAMmB,CAAhB;AACA,WAAKyR,CAAL,IAAUtO,CAAC,CAACsO,CAAF,GAAMzR,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKmD,CAAL,EAAQC,CAAR,EAAY;AAEX,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,eAAO,KAAKuB,UAAL,CAAiBH,CAAjB,EAAoBC,CAApB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWzR,CAAX,EAAe;AAEd,WAAKzB,CAAL,IAAUyB,CAAV;AACA,WAAKnB,CAAL,IAAUmB,CAAV;AACA,WAAKyR,CAAL,IAAUzR,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYe,CAAZ,EAAeC,CAAf,EAAmB;AAElB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AACA,WAAK4S,CAAL,GAAS1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUtO,CAAV,EAAaC,CAAb,EAAiB;AAEhB,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,iGAAd;AACA,eAAO,KAAKoX,eAAL,CAAsBhW,CAAtB,EAAyBC,CAAzB,CAAP;AAEA;;AAED,WAAK7E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBvO,MAAhB,EAAyB;AAExB,WAAK3E,CAAL,IAAU2E,MAAV;AACA,WAAKrE,CAAL,IAAUqE,MAAV;AACA,WAAKuO,CAAL,IAAUvO,MAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBnC,CAAjB,EAAoBC,CAApB,EAAwB;AAEvB,WAAKzC,CAAL,GAASwC,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAjB;AACA,WAAKM,CAAL,GAASkC,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAjB;AACA,WAAK4S,CAAL,GAAS1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYyD,KAAZ,EAAoB;AAEnB,UAAK,EAAIA,KAAK,IAAIA,KAAK,CAACE,OAAnB,CAAL,EAAoC;AAEnCtT,QAAAA,OAAO,CAACkD,KAAR,CAAe,6FAAf;AAEA;;AAED,aAAO,KAAKoU,eAAL,CAAsBC,aAAa,CAACC,YAAd,CAA4BpE,KAA5B,CAAtB,CAAP;AAEA;;;WAED,wBAAgBQ,IAAhB,EAAsB5R,KAAtB,EAA8B;AAE7B,aAAO,KAAKsV,eAAL,CAAsBC,aAAa,CAACE,gBAAd,CAAgC7D,IAAhC,EAAsC5R,KAAtC,CAAtB,CAAP;AAEA;;;WAED,sBAAczF,CAAd,EAAkB;AAEjB,UAAME,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8B4S,CAAC,GAAG,KAAKA,CAAvC;AACA,UAAMjO,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,WAAKlF,CAAL,GAASiF,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAA5C;AACA,WAAK5S,CAAL,GAAS2E,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAA5C;AACA,WAAKA,CAAL,GAASjO,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAA5C;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmBpT,CAAnB,EAAuB;AAEtB,aAAO,KAAKkT,YAAL,CAAmBlT,CAAnB,EAAuBmE,SAAvB,EAAP;AAEA;;;WAED,sBAAcnE,CAAd,EAAkB;AAEjB,UAAME,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8B4S,CAAC,GAAG,KAAKA,CAAvC;AACA,UAAMjO,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,UAAML,CAAC,GAAG,KAAMI,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,EAAF,CAAD,GAAUiO,CAApC,GAAwCjO,CAAC,CAAE,EAAF,CAA/C,CAAV;AAEA,WAAKjF,CAAL,GAAS,CAAEiF,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAAnC,GAAuCjO,CAAC,CAAE,EAAF,CAA1C,IAAqDJ,CAA9D;AACA,WAAKvE,CAAL,GAAS,CAAE2E,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAAnC,GAAuCjO,CAAC,CAAE,EAAF,CAA1C,IAAqDJ,CAA9D;AACA,WAAKqO,CAAL,GAAS,CAAEjO,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,EAAF,CAAD,GAAUiO,CAApC,GAAwCjO,CAAC,CAAE,EAAF,CAA3C,IAAsDJ,CAA/D;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBtC,CAAjB,EAAqB;AAEpB,UAAMvC,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8B4S,CAAC,GAAG,KAAKA,CAAvC;AACA,UAAM+H,EAAE,GAAG1Y,CAAC,CAACvC,CAAb;AAAA,UAAgBkb,EAAE,GAAG3Y,CAAC,CAACjC,CAAvB;AAAA,UAA0B6a,EAAE,GAAG5Y,CAAC,CAAC2Q,CAAjC;AAAA,UAAoCkI,EAAE,GAAG7Y,CAAC,CAACsC,CAA3C,CAHoB,CAKpB;;AAEA,UAAMwW,EAAE,GAAGD,EAAE,GAAGpb,CAAL,GAASkb,EAAE,GAAGhI,CAAd,GAAkBiI,EAAE,GAAG7a,CAAlC;AACA,UAAMgb,EAAE,GAAGF,EAAE,GAAG9a,CAAL,GAAS6a,EAAE,GAAGnb,CAAd,GAAkBib,EAAE,GAAG/H,CAAlC;AACA,UAAMqI,EAAE,GAAGH,EAAE,GAAGlI,CAAL,GAAS+H,EAAE,GAAG3a,CAAd,GAAkB4a,EAAE,GAAGlb,CAAlC;AACA,UAAMwb,EAAE,GAAG,CAAEP,EAAF,GAAOjb,CAAP,GAAWkb,EAAE,GAAG5a,CAAhB,GAAoB6a,EAAE,GAAGjI,CAApC,CAVoB,CAYpB;;AAEA,WAAKlT,CAAL,GAASqb,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAG,CAAEP,EAAjB,GAAsBK,EAAE,GAAG,CAAEH,EAA7B,GAAkCI,EAAE,GAAG,CAAEL,EAAlD;AACA,WAAK5a,CAAL,GAASgb,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAG,CAAEN,EAAjB,GAAsBK,EAAE,GAAG,CAAEN,EAA7B,GAAkCI,EAAE,GAAG,CAAEF,EAAlD;AACA,WAAKjI,CAAL,GAASqI,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAG,CAAEL,EAAjB,GAAsBE,EAAE,GAAG,CAAEH,EAA7B,GAAkCI,EAAE,GAAG,CAAEL,EAAlD;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAASQ,MAAT,EAAkB;AAEjB,aAAO,KAAKC,YAAL,CAAmBD,MAAM,CAACE,kBAA1B,EAA+CD,YAA/C,CAA6DD,MAAM,CAACG,gBAApE,CAAP;AAEA;;;WAED,mBAAWH,MAAX,EAAoB;AAEnB,aAAO,KAAKC,YAAL,CAAmBD,MAAM,CAACI,uBAA1B,EAAoDH,YAApD,CAAkED,MAAM,CAACK,WAAzE,CAAP;AAEA;;;WAED,4BAAoBhc,CAApB,EAAwB;AAEvB;AACA;AAEA,UAAME,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBM,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8B4S,CAAC,GAAG,KAAKA,CAAvC;AACA,UAAMjO,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,WAAKlF,CAAL,GAASiF,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAA5C;AACA,WAAK5S,CAAL,GAAS2E,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,CAAF,CAAD,GAASiO,CAA5C;AACA,WAAKA,CAAL,GAASjO,CAAC,CAAE,CAAF,CAAD,GAASjF,CAAT,GAAaiF,CAAC,CAAE,CAAF,CAAD,GAAS3E,CAAtB,GAA0B2E,CAAC,CAAE,EAAF,CAAD,GAAUiO,CAA7C;AAEA,aAAO,KAAKjP,SAAL,EAAP;AAEA;;;WAED,gBAAQW,CAAR,EAAY;AAEX,WAAK5E,CAAL,IAAU4E,CAAC,CAAC5E,CAAZ;AACA,WAAKM,CAAL,IAAUsE,CAAC,CAACtE,CAAZ;AACA,WAAK4S,CAAL,IAAUtO,CAAC,CAACsO,CAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcvO,MAAd,EAAuB;AAEtB,aAAO,KAAKK,cAAL,CAAqB,IAAIL,MAAzB,CAAP;AAEA;;;WAED,aAAKC,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACa,GAAL,CAAU,KAAKM,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACa,GAAL,CAAU,KAAKY,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACa,GAAL,CAAU,KAAKwT,CAAf,EAAkBtO,CAAC,CAACsO,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKtO,CAAL,EAAS;AAER,WAAK5E,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAU,KAAKK,CAAf,EAAkB4E,CAAC,CAAC5E,CAApB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAU,KAAKW,CAAf,EAAkBsE,CAAC,CAACtE,CAApB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAU,KAAKuT,CAAf,EAAkBtO,CAAC,CAACsO,CAApB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAOxT,GAAP,EAAYC,GAAZ,EAAkB;AAEjB;AAEA,WAAKK,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACM,CAAd,EAAiBnB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACK,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACY,CAAd,EAAiBzB,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACW,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAUD,GAAG,CAACwT,CAAd,EAAiBrU,IAAI,CAACa,GAAL,CAAUC,GAAG,CAACuT,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAa/N,MAAb,EAAqBC,MAArB,EAA8B;AAE7B,WAAKpF,CAAL,GAASnB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAKpF,CAAvB,CAAlB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAK9E,CAAvB,CAAlB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACc,GAAL,CAAUwF,MAAV,EAAkBtG,IAAI,CAACa,GAAL,CAAU0F,MAAV,EAAkB,KAAK8N,CAAvB,CAAlB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaxT,GAAb,EAAkBC,GAAlB,EAAwB;AAEvB,UAAMnB,MAAM,GAAG,KAAKA,MAAL,EAAf;AAEA,aAAO,KAAK6G,YAAL,CAAmB7G,MAAM,IAAI,CAA7B,EAAiCwG,cAAjC,CAAiDnG,IAAI,CAACc,GAAL,CAAUD,GAAV,EAAeb,IAAI,CAACa,GAAL,CAAUC,GAAV,EAAenB,MAAf,CAAf,CAAjD,CAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKwB,CAAL,GAASnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACuC,KAAL,CAAY,KAAK8R,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAKlT,CAAL,GAASnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACqD,IAAL,CAAW,KAAKgR,CAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKlT,CAAL,GAASnB,IAAI,CAACqF,KAAL,CAAY,KAAKlE,CAAjB,CAAT;AACA,WAAKM,CAAL,GAASzB,IAAI,CAACqF,KAAL,CAAY,KAAK5D,CAAjB,CAAT;AACA,WAAK4S,CAAL,GAASrU,IAAI,CAACqF,KAAL,CAAY,KAAKgP,CAAjB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,WAAKlT,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBnB,IAAI,CAACqD,IAAL,CAAW,KAAKlC,CAAhB,CAAjB,GAAuCnB,IAAI,CAACuC,KAAL,CAAY,KAAKpB,CAAjB,CAAhD;AACA,WAAKM,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBzB,IAAI,CAACqD,IAAL,CAAW,KAAK5B,CAAhB,CAAjB,GAAuCzB,IAAI,CAACuC,KAAL,CAAY,KAAKd,CAAjB,CAAhD;AACA,WAAK4S,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiBrU,IAAI,CAACqD,IAAL,CAAW,KAAKgR,CAAhB,CAAjB,GAAuCrU,IAAI,CAACuC,KAAL,CAAY,KAAK8R,CAAjB,CAAhD;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAKlT,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAKM,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,WAAK4S,CAAL,GAAS,CAAE,KAAKA,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAKtO,CAAL,EAAS;AAER,aAAO,KAAK5E,CAAL,GAAS4E,CAAC,CAAC5E,CAAX,GAAe,KAAKM,CAAL,GAASsE,CAAC,CAACtE,CAA1B,GAA8B,KAAK4S,CAAL,GAAStO,CAAC,CAACsO,CAAhD;AAEA,K,CAED;;;;WAEA,oBAAW;AAEV,aAAO,KAAKlT,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAK4S,CAAL,GAAS,KAAKA,CAAzD;AAEA;;;WAED,kBAAS;AAER,aAAOrU,IAAI,CAACyG,IAAL,CAAW,KAAKtF,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKM,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAK4S,CAAL,GAAS,KAAKA,CAA7D,CAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAOrU,IAAI,CAACiC,GAAL,CAAU,KAAKd,CAAf,IAAqBnB,IAAI,CAACiC,GAAL,CAAU,KAAKR,CAAf,CAArB,GAA0CzB,IAAI,CAACiC,GAAL,CAAU,KAAKoS,CAAf,CAAjD;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAK7N,YAAL,CAAmB,KAAK7G,MAAL,MAAiB,CAApC,CAAP;AAEA;;;WAED,mBAAWA,MAAX,EAAoB;AAEnB,aAAO,KAAKyF,SAAL,GAAiBe,cAAjB,CAAiCxG,MAAjC,CAAP;AAEA;;;WAED,cAAMoG,CAAN,EAASgB,KAAT,EAAiB;AAEhB,WAAK5F,CAAL,IAAU,CAAE4E,CAAC,CAAC5E,CAAF,GAAM,KAAKA,CAAb,IAAmB4F,KAA7B;AACA,WAAKtF,CAAL,IAAU,CAAEsE,CAAC,CAACtE,CAAF,GAAM,KAAKA,CAAb,IAAmBsF,KAA7B;AACA,WAAKsN,CAAL,IAAU,CAAEtO,CAAC,CAACsO,CAAF,GAAM,KAAKA,CAAb,IAAmBtN,KAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAaC,EAAb,EAAiBC,EAAjB,EAAqBF,KAArB,EAA6B;AAE5B,WAAK5F,CAAL,GAAS6F,EAAE,CAAC7F,CAAH,GAAO,CAAE8F,EAAE,CAAC9F,CAAH,GAAO6F,EAAE,CAAC7F,CAAZ,IAAkB4F,KAAlC;AACA,WAAKtF,CAAL,GAASuF,EAAE,CAACvF,CAAH,GAAO,CAAEwF,EAAE,CAACxF,CAAH,GAAOuF,EAAE,CAACvF,CAAZ,IAAkBsF,KAAlC;AACA,WAAKsN,CAAL,GAASrN,EAAE,CAACqN,CAAH,GAAO,CAAEpN,EAAE,CAACoN,CAAH,GAAOrN,EAAE,CAACqN,CAAZ,IAAkBtN,KAAlC;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAOhB,CAAP,EAAUC,CAAV,EAAc;AAEb,UAAKA,CAAC,KAAKlH,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,2FAAd;AACA,eAAO,KAAKuY,YAAL,CAAmBnX,CAAnB,EAAsBC,CAAtB,CAAP;AAEA;;AAED,aAAO,KAAKkX,YAAL,CAAmB,IAAnB,EAAyBnX,CAAzB,CAAP;AAEA;;;WAED,sBAAcpC,CAAd,EAAiBC,CAAjB,EAAqB;AAEpB,UAAMuZ,EAAE,GAAGxZ,CAAC,CAACxC,CAAb;AAAA,UAAgBic,EAAE,GAAGzZ,CAAC,CAAClC,CAAvB;AAAA,UAA0B4b,EAAE,GAAG1Z,CAAC,CAAC0Q,CAAjC;AACA,UAAMiJ,EAAE,GAAG1Z,CAAC,CAACzC,CAAb;AAAA,UAAgBoc,EAAE,GAAG3Z,CAAC,CAACnC,CAAvB;AAAA,UAA0B+b,EAAE,GAAG5Z,CAAC,CAACyQ,CAAjC;AAEA,WAAKlT,CAAL,GAASic,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGE,EAAxB;AACA,WAAK9b,CAAL,GAAS4b,EAAE,GAAGC,EAAL,GAAUH,EAAE,GAAGK,EAAxB;AACA,WAAKnJ,CAAL,GAAS8I,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGE,EAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBvX,CAAjB,EAAqB;AAEpB,UAAM0X,WAAW,GAAG1X,CAAC,CAAC2X,QAAF,EAApB;AAEA,UAAKD,WAAW,KAAK,CAArB,EAAyB,OAAO,KAAKhZ,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP;AAEzB,UAAMqB,MAAM,GAAGC,CAAC,CAAC4S,GAAF,CAAO,IAAP,IAAgB8E,WAA/B;AAEA,aAAO,KAAK3P,IAAL,CAAW/H,CAAX,EAAeI,cAAf,CAA+BL,MAA/B,CAAP;AAEA;;;WAED,wBAAgB6X,WAAhB,EAA8B;AAE7BC,MAAAA,SAAS,CAAC9P,IAAV,CAAgB,IAAhB,EAAuB+P,eAAvB,CAAwCF,WAAxC;;AAEA,aAAO,KAAKG,GAAL,CAAUF,SAAV,CAAP;AAEA;;;WAED,iBAASG,MAAT,EAAkB;AAEjB;AACA;AAEA,aAAO,KAAKD,GAAL,CAAUF,SAAS,CAAC9P,IAAV,CAAgBiQ,MAAhB,EAAyB5X,cAAzB,CAAyC,IAAI,KAAKwS,GAAL,CAAUoF,MAAV,CAA7C,CAAV,CAAP;AAEA;;;WAED,iBAAShY,CAAT,EAAa;AAEZ,UAAM0X,WAAW,GAAGzd,IAAI,CAACyG,IAAL,CAAW,KAAKiX,QAAL,KAAkB3X,CAAC,CAAC2X,QAAF,EAA7B,CAApB;AAEA,UAAKD,WAAW,KAAK,CAArB,EAAyB,OAAOzd,IAAI,CAACC,EAAL,GAAU,CAAjB;AAEzB,UAAMsL,KAAK,GAAG,KAAKoN,GAAL,CAAU5S,CAAV,IAAgB0X,WAA9B,CANY,CAQZ;;AAEA,aAAOzd,IAAI,CAACuU,IAAL,CAAW5T,KAAK,CAAE4K,KAAF,EAAS,CAAE,CAAX,EAAc,CAAd,CAAhB,CAAP;AAEA;;;WAED,oBAAYxF,CAAZ,EAAgB;AAEf,aAAO/F,IAAI,CAACyG,IAAL,CAAW,KAAKG,iBAAL,CAAwBb,CAAxB,CAAX,CAAP;AAEA;;;WAED,2BAAmBA,CAAnB,EAAuB;AAEtB,UAAMc,EAAE,GAAG,KAAK1F,CAAL,GAAS4E,CAAC,CAAC5E,CAAtB;AAAA,UAAyB2F,EAAE,GAAG,KAAKrF,CAAL,GAASsE,CAAC,CAACtE,CAAzC;AAAA,UAA4Cuc,EAAE,GAAG,KAAK3J,CAAL,GAAStO,CAAC,CAACsO,CAA5D;AAEA,aAAOxN,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBkX,EAAE,GAAGA,EAAhC;AAEA;;;WAED,6BAAqBjY,CAArB,EAAyB;AAExB,aAAO/F,IAAI,CAACiC,GAAL,CAAU,KAAKd,CAAL,GAAS4E,CAAC,CAAC5E,CAArB,IAA2BnB,IAAI,CAACiC,GAAL,CAAU,KAAKR,CAAL,GAASsE,CAAC,CAACtE,CAArB,CAA3B,GAAsDzB,IAAI,CAACiC,GAAL,CAAU,KAAKoS,CAAL,GAAStO,CAAC,CAACsO,CAArB,CAA7D;AAEA;;;WAED,0BAAkBzR,CAAlB,EAAsB;AAErB,aAAO,KAAKqb,sBAAL,CAA6Brb,CAAC,CAACsb,MAA/B,EAAuCtb,CAAC,CAACub,GAAzC,EAA8Cvb,CAAC,CAAC2I,KAAhD,CAAP;AAEA;;;WAED,gCAAwB2S,MAAxB,EAAgCC,GAAhC,EAAqC5S,KAArC,EAA6C;AAE5C,UAAM6S,YAAY,GAAGpe,IAAI,CAACgE,GAAL,CAAUma,GAAV,IAAkBD,MAAvC;AAEA,WAAK/c,CAAL,GAASid,YAAY,GAAGpe,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAxB;AACA,WAAK9J,CAAL,GAASzB,IAAI,CAAC+D,GAAL,CAAUoa,GAAV,IAAkBD,MAA3B;AACA,WAAK7J,CAAL,GAAS+J,YAAY,GAAGpe,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAoB1H,CAApB,EAAwB;AAEvB,aAAO,KAAKwa,wBAAL,CAA+Bxa,CAAC,CAACqa,MAAjC,EAAyCra,CAAC,CAAC0H,KAA3C,EAAkD1H,CAAC,CAACpC,CAApD,CAAP;AAEA;;;WAED,kCAA0Byc,MAA1B,EAAkC3S,KAAlC,EAAyC9J,CAAzC,EAA6C;AAE5C,WAAKN,CAAL,GAAS+c,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAlB;AACA,WAAK9J,CAAL,GAASA,CAAT;AACA,WAAK4S,CAAL,GAAS6J,MAAM,GAAGle,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuBtK,CAAvB,EAA2B;AAE1B,UAAMmF,CAAC,GAAGnF,CAAC,CAACoF,QAAZ;AAEA,WAAKlF,CAAL,GAASiF,CAAC,CAAE,EAAF,CAAV;AACA,WAAK3E,CAAL,GAAS2E,CAAC,CAAE,EAAF,CAAV;AACA,WAAKiO,CAAL,GAASjO,CAAC,CAAE,EAAF,CAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAoBnF,CAApB,EAAwB;AAEvB,UAAMiK,EAAE,GAAG,KAAKoT,mBAAL,CAA0Brd,CAA1B,EAA6B,CAA7B,EAAiCtB,MAAjC,EAAX;AACA,UAAMwL,EAAE,GAAG,KAAKmT,mBAAL,CAA0Brd,CAA1B,EAA6B,CAA7B,EAAiCtB,MAAjC,EAAX;AACA,UAAM4e,EAAE,GAAG,KAAKD,mBAAL,CAA0Brd,CAA1B,EAA6B,CAA7B,EAAiCtB,MAAjC,EAAX;AAEA,WAAKwB,CAAL,GAAS+J,EAAT;AACA,WAAKzJ,CAAL,GAAS0J,EAAT;AACA,WAAKkJ,CAAL,GAASkK,EAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,6BAAqBtd,CAArB,EAAwB9B,KAAxB,EAAgC;AAE/B,aAAO,KAAKsM,SAAL,CAAgBxK,CAAC,CAACoF,QAAlB,EAA4BlH,KAAK,GAAG,CAApC,CAAP;AAEA;;;WAED,8BAAsB8B,CAAtB,EAAyB9B,KAAzB,EAAiC;AAEhC,aAAO,KAAKsM,SAAL,CAAgBxK,CAAC,CAACoF,QAAlB,EAA4BlH,KAAK,GAAG,CAApC,CAAP;AAEA;;;WAED,sBAAciH,CAAd,EAAkB;AAEjB,WAAKjF,CAAL,GAASiF,CAAC,CAACoR,EAAX;AACA,WAAK/V,CAAL,GAAS2E,CAAC,CAACqR,EAAX;AACA,WAAKpD,CAAL,GAASjO,CAAC,CAACsR,EAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ3R,CAAR,EAAY;AAEX,aAAWA,CAAC,CAAC5E,CAAF,KAAQ,KAAKA,CAAf,IAAwB4E,CAAC,CAACtE,CAAF,KAAQ,KAAKA,CAArC,IAA8CsE,CAAC,CAACsO,CAAF,KAAQ,KAAKA,CAApE;AAEA;;;WAED,mBAAW9U,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,WAAK/F,CAAL,GAAS5B,KAAK,CAAE2H,MAAF,CAAd;AACA,WAAKzF,CAAL,GAASlC,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AACA,WAAKmN,CAAL,GAAS9U,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAK/F,CAAvB;AACA5B,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKzF,CAA3B;AACAlC,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKmN,CAA3B;AAEA,aAAO9U,KAAP;AAEA;;;WAED,6BAAqB4H,SAArB,EAAgChI,KAAhC,EAAuC+H,MAAvC,EAAgD;AAE/C,UAAKA,MAAM,KAAKpI,SAAhB,EAA4B;AAE3B4F,QAAAA,OAAO,CAACC,IAAR,CAAc,qEAAd;AAEA;;AAED,WAAKxD,CAAL,GAASgG,SAAS,CAACC,IAAV,CAAgBjI,KAAhB,CAAT;AACA,WAAKsC,CAAL,GAAS0F,SAAS,CAACE,IAAV,CAAgBlI,KAAhB,CAAT;AACA,WAAKkV,CAAL,GAASlN,SAAS,CAACqI,IAAV,CAAgBrQ,KAAhB,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAKgC,CAAL,GAASnB,IAAI,CAACK,MAAL,EAAT;AACA,WAAKoB,CAAL,GAASzB,IAAI,CAACK,MAAL,EAAT;AACA,WAAKgU,CAAL,GAASrU,IAAI,CAACK,MAAL,EAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAkB;AAEjB;AAEA,UAAMme,CAAC,GAAG,CAAExe,IAAI,CAACK,MAAL,KAAgB,GAAlB,IAA0B,CAApC;AACA,UAAMsB,CAAC,GAAG3B,IAAI,CAACK,MAAL,KAAgBL,IAAI,CAACC,EAArB,GAA0B,CAApC;AACA,UAAMiK,CAAC,GAAGlK,IAAI,CAACyG,IAAL,CAAW,aAAI+X,CAAJ,EAAS,CAAT,CAAX,CAAV;AAEA,WAAKrd,CAAL,GAAS+I,CAAC,GAAGlK,IAAI,CAAC+D,GAAL,CAAUpC,CAAV,CAAb;AACA,WAAKF,CAAL,GAASyI,CAAC,GAAGlK,IAAI,CAACgE,GAAL,CAAUrC,CAAV,CAAb;AACA,WAAK0S,CAAL,GAASmK,CAAT;AAEA,aAAO,IAAP;AAEA;;SAEEjX,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKrG,CAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKM,CAAX;;AAHD;AAAA;AAIC,qBAAM,KAAK4S,CAAX;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;AAUD,IAAMuJ,SAAS,GAAG,aAAc,IAAI/B,OAAJ,EAAhC;;AACA,IAAMI,aAAa,GAAG,aAAc,IAAI3E,UAAJ,EAApC;;IAEMmH,I;AAEL,kBAAgI;AAAA,QAAnH5d,GAAmH,uEAA7G,IAAIgb,OAAJ,CAAa,CAAE6C,QAAf,EAAyB,CAAEA,QAA3B,EAAqC,CAAEA,QAAvC,CAA6G;AAAA,QAA1D5d,GAA0D,uEAApD,IAAI+a,OAAJ,CAAa,CAAE6C,QAAf,EAAyB,CAAEA,QAA3B,EAAqC,CAAEA,QAAvC,CAAoD;;AAAA;;AAE/H,SAAKC,MAAL,GAAc,IAAd;AAEA,SAAK9d,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AAEA;;;;WAED,aAAKD,GAAL,EAAUC,GAAV,EAAgB;AAEf,WAAKD,GAAL,CAASiN,IAAT,CAAejN,GAAf;AACA,WAAKC,GAAL,CAASgN,IAAT,CAAehN,GAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcvB,KAAd,EAAsB;AAErB,UAAIqf,IAAI,GAAG,CAAEF,QAAb;AACA,UAAIG,IAAI,GAAG,CAAEH,QAAb;AACA,UAAII,IAAI,GAAG,CAAEJ,QAAb;AAEA,UAAIK,IAAI,GAAG,CAAEL,QAAb;AACA,UAAIM,IAAI,GAAG,CAAEN,QAAb;AACA,UAAIO,IAAI,GAAG,CAAEP,QAAb;;AAEA,WAAM,IAAIjf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,IAAI,CAA/C,EAAmD;AAElD,YAAM0B,CAAC,GAAG5B,KAAK,CAAEE,CAAF,CAAf;AACA,YAAMgC,CAAC,GAAGlC,KAAK,CAAEE,CAAC,GAAG,CAAN,CAAf;AACA,YAAM4U,CAAC,GAAG9U,KAAK,CAAEE,CAAC,GAAG,CAAN,CAAf;AAEA,YAAK0B,CAAC,GAAGyd,IAAT,EAAgBA,IAAI,GAAGzd,CAAP;AAChB,YAAKM,CAAC,GAAGod,IAAT,EAAgBA,IAAI,GAAGpd,CAAP;AAChB,YAAK4S,CAAC,GAAGyK,IAAT,EAAgBA,IAAI,GAAGzK,CAAP;AAEhB,YAAKlT,CAAC,GAAG4d,IAAT,EAAgBA,IAAI,GAAG5d,CAAP;AAChB,YAAKM,CAAC,GAAGud,IAAT,EAAgBA,IAAI,GAAGvd,CAAP;AAChB,YAAK4S,CAAC,GAAG4K,IAAT,EAAgBA,IAAI,GAAG5K,CAAP;AAEhB;;AAED,WAAKxT,GAAL,CAAS4D,GAAT,CAAcma,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B;AACA,WAAKhe,GAAL,CAAS2D,GAAT,CAAcsa,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,gCAAwB9X,SAAxB,EAAoC;AAEnC,UAAIyX,IAAI,GAAG,CAAEF,QAAb;AACA,UAAIG,IAAI,GAAG,CAAEH,QAAb;AACA,UAAII,IAAI,GAAG,CAAEJ,QAAb;AAEA,UAAIK,IAAI,GAAG,CAAEL,QAAb;AACA,UAAIM,IAAI,GAAG,CAAEN,QAAb;AACA,UAAIO,IAAI,GAAG,CAAEP,QAAb;;AAEA,WAAM,IAAIjf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGyH,SAAS,CAACgQ,KAA/B,EAAsC1X,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnD,YAAM0B,CAAC,GAAGgG,SAAS,CAACC,IAAV,CAAgB3H,CAAhB,CAAV;AACA,YAAMgC,CAAC,GAAG0F,SAAS,CAACE,IAAV,CAAgB5H,CAAhB,CAAV;AACA,YAAM4U,CAAC,GAAGlN,SAAS,CAACqI,IAAV,CAAgB/P,CAAhB,CAAV;AAEA,YAAK0B,CAAC,GAAGyd,IAAT,EAAgBA,IAAI,GAAGzd,CAAP;AAChB,YAAKM,CAAC,GAAGod,IAAT,EAAgBA,IAAI,GAAGpd,CAAP;AAChB,YAAK4S,CAAC,GAAGyK,IAAT,EAAgBA,IAAI,GAAGzK,CAAP;AAEhB,YAAKlT,CAAC,GAAG4d,IAAT,EAAgBA,IAAI,GAAG5d,CAAP;AAChB,YAAKM,CAAC,GAAGud,IAAT,EAAgBA,IAAI,GAAGvd,CAAP;AAChB,YAAK4S,CAAC,GAAG4K,IAAT,EAAgBA,IAAI,GAAG5K,CAAP;AAEhB;;AAED,WAAKxT,GAAL,CAAS4D,GAAT,CAAcma,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B;AACA,WAAKhe,GAAL,CAAS2D,GAAT,CAAcsa,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAeC,MAAf,EAAwB;AAEvB,WAAKC,SAAL;;AAEA,WAAM,IAAI1f,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG6H,MAAM,CAACvf,MAA7B,EAAqCF,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnD,aAAK2f,aAAL,CAAoBF,MAAM,CAAEzf,CAAF,CAA1B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,8BAAsB6H,MAAtB,EAA8BoH,IAA9B,EAAqC;AAEpC,UAAM2Q,QAAQ,GAAGC,SAAS,CAACxR,IAAV,CAAgBY,IAAhB,EAAuBvI,cAAvB,CAAuC,GAAvC,CAAjB;;AAEA,WAAKtF,GAAL,CAASiN,IAAT,CAAexG,MAAf,EAAwBwW,GAAxB,CAA6BuB,QAA7B;AACA,WAAKve,GAAL,CAASgN,IAAT,CAAexG,MAAf,EAAwBiY,GAAxB,CAA6BF,QAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAeG,MAAf,EAAyC;AAAA,UAAlBC,OAAkB,uEAAR,KAAQ;AAExC,WAAKN,SAAL;AAEA,aAAO,KAAKO,cAAL,CAAqBF,MAArB,EAA6BC,OAA7B,CAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK5a,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAM6R,GAAN,EAAY;AAEX,WAAK9e,GAAL,CAASiN,IAAT,CAAe6R,GAAG,CAAC9e,GAAnB;AACA,WAAKC,GAAL,CAASgN,IAAT,CAAe6R,GAAG,CAAC7e,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,WAAKD,GAAL,CAASM,CAAT,GAAa,KAAKN,GAAL,CAASY,CAAT,GAAa,KAAKZ,GAAL,CAASwT,CAAT,GAAa,CAAEqK,QAAzC;AACA,WAAK5d,GAAL,CAASK,CAAT,GAAa,KAAKL,GAAL,CAASW,CAAT,GAAa,KAAKX,GAAL,CAASuT,CAAT,GAAa,CAAEqK,QAAzC;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET;AAEA,aAAS,KAAK5d,GAAL,CAASK,CAAT,GAAa,KAAKN,GAAL,CAASM,CAAxB,IAAiC,KAAKL,GAAL,CAASW,CAAT,GAAa,KAAKZ,GAAL,CAASY,CAAvD,IAAgE,KAAKX,GAAL,CAASuT,CAAT,GAAa,KAAKxT,GAAL,CAASwT,CAA7F;AAEA;;;WAED,mBAAW/U,MAAX,EAAoB;AAEnB,aAAO,KAAKsgB,OAAL,KAAiBtgB,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB,GAAyCnF,MAAM,CAAC2G,UAAP,CAAmB,KAAKpF,GAAxB,EAA6B,KAAKC,GAAlC,EAAwCqF,cAAxC,CAAwD,GAAxD,CAAhD;AAEA;;;WAED,iBAAS7G,MAAT,EAAkB;AAEjB,aAAO,KAAKsgB,OAAL,KAAiBtgB,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB,GAAyCnF,MAAM,CAAC4G,UAAP,CAAmB,KAAKpF,GAAxB,EAA6B,KAAKD,GAAlC,CAAhD;AAEA;;;WAED,uBAAegf,KAAf,EAAuB;AAEtB,WAAKhf,GAAL,CAASA,GAAT,CAAcgf,KAAd;AACA,WAAK/e,GAAL,CAASA,GAAT,CAAc+e,KAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBC,MAAhB,EAAyB;AAExB,WAAKjf,GAAL,CAASid,GAAT,CAAcgC,MAAd;AACA,WAAKhf,GAAL,CAASye,GAAT,CAAcO,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBha,MAAhB,EAAyB;AAExB,WAAKjF,GAAL,CAASkf,SAAT,CAAoB,CAAEja,MAAtB;AACA,WAAKhF,GAAL,CAASif,SAAT,CAAoBja,MAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgB0Z,MAAhB,EAA0C;AAAA,UAAlBC,OAAkB,uEAAR,KAAQ;AAEzC;AACA;AAEAD,MAAAA,MAAM,CAACQ,iBAAP,CAA0B,KAA1B,EAAiC,KAAjC;AAEA,UAAMC,QAAQ,GAAGT,MAAM,CAACS,QAAxB;;AAEA,UAAKA,QAAQ,KAAKnhB,SAAlB,EAA8B;AAE7B,YAAK2gB,OAAO,IAAIQ,QAAQ,CAACC,UAAT,IAAuBphB,SAAlC,IAA+CmhB,QAAQ,CAACC,UAAT,CAAoBC,QAApB,KAAiCrhB,SAArF,EAAiG;AAEhG,cAAMqhB,QAAQ,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,QAArC;;AACA,eAAM,IAAI1gB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGygB,QAAQ,CAAChJ,KAA9B,EAAqC1X,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD6f,YAAAA,SAAS,CAACc,mBAAV,CAA+BD,QAA/B,EAAyC1gB,CAAzC,EAA6Cod,YAA7C,CAA2D2C,MAAM,CAACvC,WAAlE;;AACA,iBAAKmC,aAAL,CAAoBE,SAApB;AAEA;AAED,SAVD,MAUO;AAEN,cAAKW,QAAQ,CAACI,WAAT,KAAyB,IAA9B,EAAqC;AAEpCJ,YAAAA,QAAQ,CAACK,kBAAT;AAEA;;AAEDC,UAAAA,MAAM,CAACzS,IAAP,CAAamS,QAAQ,CAACI,WAAtB;;AACAE,UAAAA,MAAM,CAAC1D,YAAP,CAAqB2C,MAAM,CAACvC,WAA5B;;AAEA,eAAKuD,KAAL,CAAYD,MAAZ;AAEA;AAED;;AAED,UAAME,QAAQ,GAAGjB,MAAM,CAACiB,QAAxB;;AAEA,WAAM,IAAIhhB,GAAC,GAAG,CAAR,EAAWC,EAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,GAAC,GAAGC,EAA1C,EAA6CD,GAAC,EAA9C,EAAoD;AAEnD,aAAKigB,cAAL,CAAqBe,QAAQ,CAAEhhB,GAAF,CAA7B,EAAoCggB,OAApC;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,uBAAeI,KAAf,EAAuB;AAEtB,aAAOA,KAAK,CAAC1e,CAAN,GAAU,KAAKN,GAAL,CAASM,CAAnB,IAAwB0e,KAAK,CAAC1e,CAAN,GAAU,KAAKL,GAAL,CAASK,CAA3C,IACN0e,KAAK,CAACpe,CAAN,GAAU,KAAKZ,GAAL,CAASY,CADb,IACkBoe,KAAK,CAACpe,CAAN,GAAU,KAAKX,GAAL,CAASW,CADrC,IAENoe,KAAK,CAACxL,CAAN,GAAU,KAAKxT,GAAL,CAASwT,CAFb,IAEkBwL,KAAK,CAACxL,CAAN,GAAU,KAAKvT,GAAL,CAASuT,CAFrC,GAEyC,KAFzC,GAEiD,IAFxD;AAIA;;;WAED,qBAAasL,GAAb,EAAmB;AAElB,aAAO,KAAK9e,GAAL,CAASM,CAAT,IAAcwe,GAAG,CAAC9e,GAAJ,CAAQM,CAAtB,IAA2Bwe,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,IAAa,KAAKL,GAAL,CAASK,CAAjD,IACN,KAAKN,GAAL,CAASY,CAAT,IAAcke,GAAG,CAAC9e,GAAJ,CAAQY,CADhB,IACqBke,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,IAAa,KAAKX,GAAL,CAASW,CAD3C,IAEN,KAAKZ,GAAL,CAASwT,CAAT,IAAcsL,GAAG,CAAC9e,GAAJ,CAAQwT,CAFhB,IAEqBsL,GAAG,CAAC7e,GAAJ,CAAQuT,CAAR,IAAa,KAAKvT,GAAL,CAASuT,CAFlD;AAIA;;;WAED,sBAAcwL,KAAd,EAAqBvgB,MAArB,EAA8B;AAE7B;AACA;AAEA,aAAOA,MAAM,CAACmF,GAAP,CACN,CAAEob,KAAK,CAAC1e,CAAN,GAAU,KAAKN,GAAL,CAASM,CAArB,KAA6B,KAAKL,GAAL,CAASK,CAAT,GAAa,KAAKN,GAAL,CAASM,CAAnD,CADM,EAEN,CAAE0e,KAAK,CAACpe,CAAN,GAAU,KAAKZ,GAAL,CAASY,CAArB,KAA6B,KAAKX,GAAL,CAASW,CAAT,GAAa,KAAKZ,GAAL,CAASY,CAAnD,CAFM,EAGN,CAAEoe,KAAK,CAACxL,CAAN,GAAU,KAAKxT,GAAL,CAASwT,CAArB,KAA6B,KAAKvT,GAAL,CAASuT,CAAT,GAAa,KAAKxT,GAAL,CAASwT,CAAnD,CAHM,CAAP;AAMA;;;WAED,uBAAesL,GAAf,EAAqB;AAEpB;AACA,aAAOA,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,GAAY,KAAKN,GAAL,CAASM,CAArB,IAA0Bwe,GAAG,CAAC9e,GAAJ,CAAQM,CAAR,GAAY,KAAKL,GAAL,CAASK,CAA/C,IACNwe,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,GAAY,KAAKZ,GAAL,CAASY,CADf,IACoBke,GAAG,CAAC9e,GAAJ,CAAQY,CAAR,GAAY,KAAKX,GAAL,CAASW,CADzC,IAENke,GAAG,CAAC7e,GAAJ,CAAQuT,CAAR,GAAY,KAAKxT,GAAL,CAASwT,CAFf,IAEoBsL,GAAG,CAAC9e,GAAJ,CAAQwT,CAAR,GAAY,KAAKvT,GAAL,CAASuT,CAFzC,GAE6C,KAF7C,GAEqD,IAF5D;AAIA;;;WAED,0BAAkBqM,MAAlB,EAA2B;AAE1B;AACA,WAAKC,UAAL,CAAiBD,MAAM,CAACpZ,MAAxB,EAAgCgY,SAAhC,EAH0B,CAK1B;;AACA,aAAOA,SAAS,CAAC1Y,iBAAV,CAA6B8Z,MAAM,CAACpZ,MAApC,KAAkDoZ,MAAM,CAACxC,MAAP,GAAgBwC,MAAM,CAACxC,MAAhF;AAEA;;;WAED,yBAAiB0C,KAAjB,EAAyB;AAExB;AACA;AAEA,UAAI/f,GAAJ,EAASC,GAAT;;AAEA,UAAK8f,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,CAAtB,EAA0B;AAEzBN,QAAAA,GAAG,GAAG+f,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,KAAKN,GAAL,CAASM,CAAhC;AACAL,QAAAA,GAAG,GAAG8f,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,KAAKL,GAAL,CAASK,CAAhC;AAEA,OALD,MAKO;AAENN,QAAAA,GAAG,GAAG+f,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,KAAKL,GAAL,CAASK,CAAhC;AACAL,QAAAA,GAAG,GAAG8f,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,KAAKN,GAAL,CAASM,CAAhC;AAEA;;AAED,UAAKyf,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,CAAtB,EAA0B;AAEzBZ,QAAAA,GAAG,IAAI+f,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,KAAKZ,GAAL,CAASY,CAAjC;AACAX,QAAAA,GAAG,IAAI8f,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,KAAKX,GAAL,CAASW,CAAjC;AAEA,OALD,MAKO;AAENZ,QAAAA,GAAG,IAAI+f,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,KAAKX,GAAL,CAASW,CAAjC;AACAX,QAAAA,GAAG,IAAI8f,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,KAAKZ,GAAL,CAASY,CAAjC;AAEA;;AAED,UAAKmf,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,CAAtB,EAA0B;AAEzBxT,QAAAA,GAAG,IAAI+f,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,KAAKxT,GAAL,CAASwT,CAAjC;AACAvT,QAAAA,GAAG,IAAI8f,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,KAAKvT,GAAL,CAASuT,CAAjC;AAEA,OALD,MAKO;AAENxT,QAAAA,GAAG,IAAI+f,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,KAAKvT,GAAL,CAASuT,CAAjC;AACAvT,QAAAA,GAAG,IAAI8f,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,KAAKxT,GAAL,CAASwT,CAAjC;AAEA;;AAED,aAASxT,GAAG,IAAI,CAAE+f,KAAK,CAACC,QAAf,IAA2B/f,GAAG,IAAI,CAAE8f,KAAK,CAACC,QAAnD;AAEA;;;WAED,4BAAoBC,QAApB,EAA+B;AAE9B,UAAK,KAAKlB,OAAL,EAAL,EAAsB;AAErB,eAAO,KAAP;AAEA,OAN6B,CAQ9B;;;AACA,WAAKmB,SAAL,CAAgBC,OAAhB;;AACAC,MAAAA,QAAQ,CAAC/a,UAAT,CAAqB,KAAKpF,GAA1B,EAA+BkgB,OAA/B,EAV8B,CAY9B;;;AACAE,MAAAA,KAAK,CAAChb,UAAN,CAAkB4a,QAAQ,CAACnd,CAA3B,EAA8Bqd,OAA9B;;AACAG,MAAAA,KAAK,CAACjb,UAAN,CAAkB4a,QAAQ,CAACld,CAA3B,EAA8Bod,OAA9B;;AACAI,MAAAA,KAAK,CAAClb,UAAN,CAAkB4a,QAAQ,CAACjd,CAA3B,EAA8Bmd,OAA9B,EAf8B,CAiB9B;;;AACAK,MAAAA,GAAG,CAACnb,UAAJ,CAAgBib,KAAhB,EAAuBD,KAAvB;;AACAI,MAAAA,GAAG,CAACpb,UAAJ,CAAgBkb,KAAhB,EAAuBD,KAAvB;;AACAI,MAAAA,GAAG,CAACrb,UAAJ,CAAgBgb,KAAhB,EAAuBE,KAAvB,EApB8B,CAsB9B;AACA;AACA;;;AACA,UAAII,IAAI,GAAG,CACV,CADU,EACP,CAAEH,GAAG,CAAChN,CADC,EACEgN,GAAG,CAAC5f,CADN,EACS,CADT,EACY,CAAE6f,GAAG,CAACjN,CADlB,EACqBiN,GAAG,CAAC7f,CADzB,EAC4B,CAD5B,EAC+B,CAAE8f,GAAG,CAAClN,CADrC,EACwCkN,GAAG,CAAC9f,CAD5C,EAEV4f,GAAG,CAAChN,CAFM,EAEH,CAFG,EAEA,CAAEgN,GAAG,CAAClgB,CAFN,EAESmgB,GAAG,CAACjN,CAFb,EAEgB,CAFhB,EAEmB,CAAEiN,GAAG,CAACngB,CAFzB,EAE4BogB,GAAG,CAAClN,CAFhC,EAEmC,CAFnC,EAEsC,CAAEkN,GAAG,CAACpgB,CAF5C,EAGV,CAAEkgB,GAAG,CAAC5f,CAHI,EAGD4f,GAAG,CAAClgB,CAHH,EAGM,CAHN,EAGS,CAAEmgB,GAAG,CAAC7f,CAHf,EAGkB6f,GAAG,CAACngB,CAHtB,EAGyB,CAHzB,EAG4B,CAAEogB,GAAG,CAAC9f,CAHlC,EAGqC8f,GAAG,CAACpgB,CAHzC,EAG4C,CAH5C,CAAX;;AAKA,UAAK,CAAEsgB,UAAU,CAAED,IAAF,EAAQN,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BH,QAA7B,CAAjB,EAA2D;AAE1D,eAAO,KAAP;AAEA,OAlC6B,CAoC9B;;;AACAO,MAAAA,IAAI,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAP;;AACA,UAAK,CAAEC,UAAU,CAAED,IAAF,EAAQN,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BH,QAA7B,CAAjB,EAA2D;AAE1D,eAAO,KAAP;AAEA,OA1C6B,CA4C9B;AACA;;;AACAS,MAAAA,eAAe,CAACxE,YAAhB,CAA8BmE,GAA9B,EAAmCC,GAAnC;;AACAE,MAAAA,IAAI,GAAG,CAAEE,eAAe,CAACvgB,CAAlB,EAAqBugB,eAAe,CAACjgB,CAArC,EAAwCigB,eAAe,CAACrN,CAAxD,CAAP;AAEA,aAAOoN,UAAU,CAAED,IAAF,EAAQN,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BH,QAA7B,CAAjB;AAEA;;;WAED,oBAAYpB,KAAZ,EAAmBvgB,MAAnB,EAA4B;AAE3B,aAAOA,MAAM,CAACwO,IAAP,CAAa+R,KAAb,EAAqBlf,KAArB,CAA4B,KAAKE,GAAjC,EAAsC,KAAKC,GAA3C,CAAP;AAEA;;;WAED,yBAAiB+e,KAAjB,EAAyB;AAExB,UAAM8B,YAAY,GAAGrC,SAAS,CAACxR,IAAV,CAAgB+R,KAAhB,EAAwBlf,KAAxB,CAA+B,KAAKE,GAApC,EAAyC,KAAKC,GAA9C,CAArB;;AAEA,aAAO6gB,YAAY,CAAC7D,GAAb,CAAkB+B,KAAlB,EAA0BlgB,MAA1B,EAAP;AAEA;;;WAED,2BAAmBL,MAAnB,EAA4B;AAE3B,WAAKyhB,SAAL,CAAgBzhB,MAAM,CAACgI,MAAvB;AAEAhI,MAAAA,MAAM,CAAC4e,MAAP,GAAgB,KAAK0D,OAAL,CAActC,SAAd,EAA0B3f,MAA1B,KAAqC,GAArD;AAEA,aAAOL,MAAP;AAEA;;;WAED,mBAAWqgB,GAAX,EAAiB;AAEhB,WAAK9e,GAAL,CAASC,GAAT,CAAc6e,GAAG,CAAC9e,GAAlB;AACA,WAAKC,GAAL,CAASD,GAAT,CAAc8e,GAAG,CAAC7e,GAAlB,EAHgB,CAKhB;;AACA,UAAK,KAAK8e,OAAL,EAAL,EAAsB,KAAKT,SAAL;AAEtB,aAAO,IAAP;AAEA;;;WAED,eAAOQ,GAAP,EAAa;AAEZ,WAAK9e,GAAL,CAASA,GAAT,CAAc8e,GAAG,CAAC9e,GAAlB;AACA,WAAKC,GAAL,CAASA,GAAT,CAAc6e,GAAG,CAAC7e,GAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAc0K,MAAd,EAAuB;AAEtB;AACA,UAAK,KAAKoU,OAAL,EAAL,EAAsB,OAAO,IAAP,CAHA,CAKtB;;AACAiC,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK5D,GAAL,CAASM,CAA3B,EAA8B,KAAKN,GAAL,CAASY,CAAvC,EAA0C,KAAKZ,GAAL,CAASwT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EANsB,CAMyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK5D,GAAL,CAASM,CAA3B,EAA8B,KAAKN,GAAL,CAASY,CAAvC,EAA0C,KAAKX,GAAL,CAASuT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EAPsB,CAOyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK5D,GAAL,CAASM,CAA3B,EAA8B,KAAKL,GAAL,CAASW,CAAvC,EAA0C,KAAKZ,GAAL,CAASwT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EARsB,CAQyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK5D,GAAL,CAASM,CAA3B,EAA8B,KAAKL,GAAL,CAASW,CAAvC,EAA0C,KAAKX,GAAL,CAASuT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EATsB,CASyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK3D,GAAL,CAASK,CAA3B,EAA8B,KAAKN,GAAL,CAASY,CAAvC,EAA0C,KAAKZ,GAAL,CAASwT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EAVsB,CAUyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK3D,GAAL,CAASK,CAA3B,EAA8B,KAAKN,GAAL,CAASY,CAAvC,EAA0C,KAAKX,GAAL,CAASuT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EAXsB,CAWyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK3D,GAAL,CAASK,CAA3B,EAA8B,KAAKL,GAAL,CAASW,CAAvC,EAA0C,KAAKZ,GAAL,CAASwT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EAZsB,CAYyD;;;AAC/EqW,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAapd,GAAb,CAAkB,KAAK3D,GAAL,CAASK,CAA3B,EAA8B,KAAKL,GAAL,CAASW,CAAvC,EAA0C,KAAKX,GAAL,CAASuT,CAAnD,EAAuDwI,YAAvD,CAAqErR,MAArE,EAbsB,CAayD;;;AAE/E,WAAKsW,aAAL,CAAoBD,OAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW3a,MAAX,EAAoB;AAEnB,WAAKrG,GAAL,CAAS0e,GAAT,CAAcrY,MAAd;AACA,WAAKpG,GAAL,CAASye,GAAT,CAAcrY,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQyY,GAAR,EAAc;AAEb,aAAOA,GAAG,CAAC9e,GAAJ,CAAQkhB,MAAR,CAAgB,KAAKlhB,GAArB,KAA8B8e,GAAG,CAAC7e,GAAJ,CAAQihB,MAAR,CAAgB,KAAKjhB,GAArB,CAArC;AAEA;;;;;;AAIF,IAAM+gB,OAAO,GAAG,CACf,aAAc,IAAIhG,OAAJ,EADC,EAEf,aAAc,IAAIA,OAAJ,EAFC,EAGf,aAAc,IAAIA,OAAJ,EAHC,EAIf,aAAc,IAAIA,OAAJ,EAJC,EAKf,aAAc,IAAIA,OAAJ,EALC,EAMf,aAAc,IAAIA,OAAJ,EANC,EAOf,aAAc,IAAIA,OAAJ,EAPC,EAQf,aAAc,IAAIA,OAAJ,EARC,CAAhB;;AAWA,IAAMyD,SAAS,GAAG,aAAc,IAAIzD,OAAJ,EAAhC;;AAEA,IAAM0E,MAAM,GAAG,aAAc,IAAI9B,IAAJ,EAA7B,C,CAEA;;;AAEA,IAAMyC,KAAK,GAAG,aAAc,IAAIrF,OAAJ,EAA5B;;AACA,IAAMsF,KAAK,GAAG,aAAc,IAAItF,OAAJ,EAA5B;;AACA,IAAMuF,KAAK,GAAG,aAAc,IAAIvF,OAAJ,EAA5B,C,CAEA;;;AAEA,IAAMwF,GAAG,GAAG,aAAc,IAAIxF,OAAJ,EAA1B;;AACA,IAAMyF,GAAG,GAAG,aAAc,IAAIzF,OAAJ,EAA1B;;AACA,IAAM0F,GAAG,GAAG,aAAc,IAAI1F,OAAJ,EAA1B;;AAEA,IAAMmF,OAAO,GAAG,aAAc,IAAInF,OAAJ,EAA9B;;AACA,IAAMoF,QAAQ,GAAG,aAAc,IAAIpF,OAAJ,EAA/B;;AACA,IAAM6F,eAAe,GAAG,aAAc,IAAI7F,OAAJ,EAAtC;;AACA,IAAMmG,SAAS,GAAG,aAAc,IAAInG,OAAJ,EAAhC;;AAEA,SAAS4F,UAAT,CAAqBD,IAArB,EAA2BS,EAA3B,EAA+Bjb,EAA/B,EAAmCC,EAAnC,EAAuCib,OAAvC,EAAiD;AAEhD,OAAM,IAAIziB,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAGX,IAAI,CAAC7hB,MAAL,GAAc,CAAnC,EAAsCF,CAAC,IAAI0iB,CAA3C,EAA8C1iB,CAAC,IAAI,CAAnD,EAAuD;AAEtDuiB,IAAAA,SAAS,CAACvW,SAAV,CAAqB+V,IAArB,EAA2B/hB,CAA3B,EAFsD,CAGtD;;;AACA,QAAMsL,CAAC,GAAGmX,OAAO,CAAC/gB,CAAR,GAAYnB,IAAI,CAACiC,GAAL,CAAU+f,SAAS,CAAC7gB,CAApB,CAAZ,GAAsC+gB,OAAO,CAACzgB,CAAR,GAAYzB,IAAI,CAACiC,GAAL,CAAU+f,SAAS,CAACvgB,CAApB,CAAlD,GAA4EygB,OAAO,CAAC7N,CAAR,GAAYrU,IAAI,CAACiC,GAAL,CAAU+f,SAAS,CAAC3N,CAApB,CAAlG,CAJsD,CAKtD;;AACA,QAAM+N,EAAE,GAAGH,EAAE,CAACtJ,GAAH,CAAQqJ,SAAR,CAAX;AACA,QAAMK,EAAE,GAAGrb,EAAE,CAAC2R,GAAH,CAAQqJ,SAAR,CAAX;AACA,QAAMM,EAAE,GAAGrb,EAAE,CAAC0R,GAAH,CAAQqJ,SAAR,CAAX,CARsD,CAStD;;AACA,QAAKhiB,IAAI,CAACc,GAAL,CAAU,CAAEd,IAAI,CAACc,GAAL,CAAUshB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,CAAZ,EAAoCtiB,IAAI,CAACa,GAAL,CAAUuhB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,CAApC,IAA+DvX,CAApE,EAAwE;AAEvE;AACA;AACA,aAAO,KAAP;AAEA;AAED;;AAED,SAAO,IAAP;AAEA;;AAED,IAAMwX,MAAM,GAAG,aAAc,IAAI9D,IAAJ,EAA7B;;AACA,IAAM+D,KAAK,GAAG,aAAc,IAAI3G,OAAJ,EAA5B;;AACA,IAAM4G,gBAAgB,GAAG,aAAc,IAAI5G,OAAJ,EAAvC;;AACA,IAAM6G,QAAQ,GAAG,aAAc,IAAI7G,OAAJ,EAA/B;;IAEM8G,M;AAEL,oBAAoD;AAAA,QAAvCrb,MAAuC,uEAA9B,IAAIuU,OAAJ,EAA8B;AAAA,QAAfqC,MAAe,uEAAN,CAAE,CAAI;;AAAA;;AAEnD,SAAK5W,MAAL,GAAcA,MAAd;AACA,SAAK4W,MAAL,GAAcA,MAAd;AAEA;;;;WAED,aAAK5W,MAAL,EAAa4W,MAAb,EAAsB;AAErB,WAAK5W,MAAL,CAAYwG,IAAZ,CAAkBxG,MAAlB;AACA,WAAK4W,MAAL,GAAcA,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAegB,MAAf,EAAuB0D,cAAvB,EAAwC;AAEvC,UAAMtb,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKsb,cAAc,KAAK9jB,SAAxB,EAAoC;AAEnCwI,QAAAA,MAAM,CAACwG,IAAP,CAAa8U,cAAb;AAEA,OAJD,MAIO;AAENL,QAAAA,MAAM,CAACT,aAAP,CAAsB5C,MAAtB,EAA+B6B,SAA/B,CAA0CzZ,MAA1C;AAEA;;AAED,UAAIub,WAAW,GAAG,CAAlB;;AAEA,WAAM,IAAIpjB,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG6H,MAAM,CAACvf,MAA7B,EAAqCF,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnDojB,QAAAA,WAAW,GAAG7iB,IAAI,CAACc,GAAL,CAAU+hB,WAAV,EAAuBvb,MAAM,CAACV,iBAAP,CAA0BsY,MAAM,CAAEzf,CAAF,CAAhC,CAAvB,CAAd;AAEA;;AAED,WAAKye,MAAL,GAAcle,IAAI,CAACyG,IAAL,CAAWoc,WAAX,CAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMnC,MAAN,EAAe;AAEd,WAAKpZ,MAAL,CAAYwG,IAAZ,CAAkB4S,MAAM,CAACpZ,MAAzB;AACA,WAAK4W,MAAL,GAAcwC,MAAM,CAACxC,MAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,aAAS,KAAKA,MAAL,GAAc,CAAvB;AAEA;;;WAED,qBAAY;AAEX,WAAK5W,MAAL,CAAY7C,GAAZ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,WAAKyZ,MAAL,GAAc,CAAE,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAe2B,KAAf,EAAuB;AAEtB,aAASA,KAAK,CAACjZ,iBAAN,CAAyB,KAAKU,MAA9B,KAA4C,KAAK4W,MAAL,GAAc,KAAKA,MAAxE;AAEA;;;WAED,yBAAiB2B,KAAjB,EAAyB;AAExB,aAASA,KAAK,CAACiD,UAAN,CAAkB,KAAKxb,MAAvB,IAAkC,KAAK4W,MAAhD;AAEA;;;WAED,0BAAkBwC,MAAlB,EAA2B;AAE1B,UAAMqC,SAAS,GAAG,KAAK7E,MAAL,GAAcwC,MAAM,CAACxC,MAAvC;AAEA,aAAOwC,MAAM,CAACpZ,MAAP,CAAcV,iBAAd,CAAiC,KAAKU,MAAtC,KAAoDyb,SAAS,GAAGA,SAAvE;AAEA;;;WAED,uBAAepD,GAAf,EAAqB;AAEpB,aAAOA,GAAG,CAACqD,gBAAJ,CAAsB,IAAtB,CAAP;AAEA;;;WAED,yBAAiBpC,KAAjB,EAAyB;AAExB,aAAO5gB,IAAI,CAACiC,GAAL,CAAU2e,KAAK,CAACqC,eAAN,CAAuB,KAAK3b,MAA5B,CAAV,KAAoD,KAAK4W,MAAhE;AAEA;;;WAED,oBAAY2B,KAAZ,EAAmBvgB,MAAnB,EAA4B;AAE3B,UAAM4jB,aAAa,GAAG,KAAK5b,MAAL,CAAYV,iBAAZ,CAA+BiZ,KAA/B,CAAtB;AAEAvgB,MAAAA,MAAM,CAACwO,IAAP,CAAa+R,KAAb;;AAEA,UAAKqD,aAAa,GAAK,KAAKhF,MAAL,GAAc,KAAKA,MAA1C,EAAqD;AAEpD5e,QAAAA,MAAM,CAACwe,GAAP,CAAY,KAAKxW,MAAjB,EAA0BlC,SAA1B;AACA9F,QAAAA,MAAM,CAAC6G,cAAP,CAAuB,KAAK+X,MAA5B,EAAqCqB,GAArC,CAA0C,KAAKjY,MAA/C;AAEA;;AAED,aAAOhI,MAAP;AAEA;;;WAED,wBAAgBA,MAAhB,EAAyB;AAExB,UAAK,KAAKsgB,OAAL,EAAL,EAAsB;AAErB;AACAtgB,QAAAA,MAAM,CAAC6f,SAAP;AACA,eAAO7f,MAAP;AAEA;;AAEDA,MAAAA,MAAM,CAACmF,GAAP,CAAY,KAAK6C,MAAjB,EAAyB,KAAKA,MAA9B;AACAhI,MAAAA,MAAM,CAAC6jB,cAAP,CAAuB,KAAKjF,MAA5B;AAEA,aAAO5e,MAAP;AAEA;;;WAED,sBAAckM,MAAd,EAAuB;AAEtB,WAAKlE,MAAL,CAAYuV,YAAZ,CAA0BrR,MAA1B;AACA,WAAK0S,MAAL,GAAc,KAAKA,MAAL,GAAc1S,MAAM,CAAC4X,iBAAP,EAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWlc,MAAX,EAAoB;AAEnB,WAAKI,MAAL,CAAYiY,GAAZ,CAAiBrY,MAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAe2Y,KAAf,EAAuB;AAEtB;AAEA6C,MAAAA,QAAQ,CAACxc,UAAT,CAAqB2Z,KAArB,EAA4B,KAAKvY,MAAjC;;AAEA,UAAMoW,QAAQ,GAAGgF,QAAQ,CAAChF,QAAT,EAAjB;;AAEA,UAAKA,QAAQ,GAAK,KAAKQ,MAAL,GAAc,KAAKA,MAArC,EAAgD;AAE/C,YAAMve,MAAM,GAAGK,IAAI,CAACyG,IAAL,CAAWiX,QAAX,CAAf;AACA,YAAM2F,iBAAiB,GAAG,CAAE1jB,MAAM,GAAG,KAAKue,MAAhB,IAA2B,GAArD,CAH+C,CAK/C;AACA;AACA;;AAEA,aAAK5W,MAAL,CAAYiY,GAAZ,CAAiBmD,QAAQ,CAACvc,cAAT,CAAyBkd,iBAAiB,GAAG1jB,MAA7C,CAAjB;AACA,aAAKue,MAAL,IAAemF,iBAAf;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,eAAO3C,MAAP,EAAgB;AAEf;AAEA;AACA;AACA;AAEC,UAAK,KAAKpZ,MAAL,CAAYya,MAAZ,CAAoBrB,MAAM,CAACpZ,MAA3B,MAAwC,IAA7C,EAAoD;AAEnDmb,QAAAA,gBAAgB,CAAChe,GAAjB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAAgC0B,cAAhC,CAAgDua,MAAM,CAACxC,MAAvD;AAGD,OALA,MAKM;AAENuE,QAAAA,gBAAgB,CAACvc,UAAjB,CAA6Bwa,MAAM,CAACpZ,MAApC,EAA4C,KAAKA,MAAjD,EAA0DlC,SAA1D,GAAsEe,cAAtE,CAAsFua,MAAM,CAACxC,MAA7F;AAEA;;AAED,WAAKkB,aAAL,CAAoBoD,KAAK,CAAC1U,IAAN,CAAY4S,MAAM,CAACpZ,MAAnB,EAA4BiY,GAA5B,CAAiCkD,gBAAjC,CAApB;AACA,WAAKrD,aAAL,CAAoBoD,KAAK,CAAC1U,IAAN,CAAY4S,MAAM,CAACpZ,MAAnB,EAA4BwW,GAA5B,CAAiC2E,gBAAjC,CAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ/B,MAAR,EAAiB;AAEhB,aAAOA,MAAM,CAACpZ,MAAP,CAAcya,MAAd,CAAsB,KAAKza,MAA3B,KAAyCoZ,MAAM,CAACxC,MAAP,KAAkB,KAAKA,MAAvE;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKrZ,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;AAIF,IAAMwV,SAAS,GAAG,aAAc,IAAIzH,OAAJ,EAAhC;;AACA,IAAM0H,UAAU,GAAG,aAAc,IAAI1H,OAAJ,EAAjC;;AACA,IAAM2H,OAAO,GAAG,aAAc,IAAI3H,OAAJ,EAA9B;;AACA,IAAM4H,KAAK,GAAG,aAAc,IAAI5H,OAAJ,EAA5B;;AAEA,IAAM6H,MAAM,GAAG,aAAc,IAAI7H,OAAJ,EAA7B;;AACA,IAAM8H,MAAM,GAAG,aAAc,IAAI9H,OAAJ,EAA7B;;AACA,IAAM+H,SAAS,GAAG,aAAc,IAAI/H,OAAJ,EAAhC;;IAEMgI,G;AAEL,iBAA4E;AAAA,QAA/DC,MAA+D,uEAAtD,IAAIjI,OAAJ,EAAsD;AAAA,QAAvCkI,SAAuC,uEAA3B,IAAIlI,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAE,CAArB,CAA2B;;AAAA;;AAE3E,SAAKiI,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AAEA;;;;WAED,aAAKD,MAAL,EAAaC,SAAb,EAAyB;AAExB,WAAKD,MAAL,CAAYhW,IAAZ,CAAkBgW,MAAlB;AACA,WAAKC,SAAL,CAAejW,IAAf,CAAqBiW,SAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMC,GAAN,EAAY;AAEX,WAAKF,MAAL,CAAYhW,IAAZ,CAAkBkW,GAAG,CAACF,MAAtB;AACA,WAAKC,SAAL,CAAejW,IAAf,CAAqBkW,GAAG,CAACD,SAAzB;AAEA,aAAO,IAAP;AAEA;;;WAED,YAAIpiB,CAAJ,EAAOrC,MAAP,EAAgB;AAEf,aAAOA,MAAM,CAACwO,IAAP,CAAa,KAAKiW,SAAlB,EAA8B5d,cAA9B,CAA8CxE,CAA9C,EAAkD4d,GAAlD,CAAuD,KAAKuE,MAA5D,CAAP;AAEA;;;WAED,gBAAQ/d,CAAR,EAAY;AAEX,WAAKge,SAAL,CAAejW,IAAf,CAAqB/H,CAArB,EAAyB+X,GAAzB,CAA8B,KAAKgG,MAAnC,EAA4C1e,SAA5C;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQzD,CAAR,EAAY;AAEX,WAAKmiB,MAAL,CAAYhW,IAAZ,CAAkB,KAAKmW,EAAL,CAAStiB,CAAT,EAAY2hB,SAAZ,CAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,6BAAqBzD,KAArB,EAA4BvgB,MAA5B,EAAqC;AAEpCA,MAAAA,MAAM,CAAC4G,UAAP,CAAmB2Z,KAAnB,EAA0B,KAAKiE,MAA/B;AAEA,UAAMI,iBAAiB,GAAG5kB,MAAM,CAACqZ,GAAP,CAAY,KAAKoL,SAAjB,CAA1B;;AAEA,UAAKG,iBAAiB,GAAG,CAAzB,EAA6B;AAE5B,eAAO5kB,MAAM,CAACwO,IAAP,CAAa,KAAKgW,MAAlB,CAAP;AAEA;;AAED,aAAOxkB,MAAM,CAACwO,IAAP,CAAa,KAAKiW,SAAlB,EAA8B5d,cAA9B,CAA8C+d,iBAA9C,EAAkE3E,GAAlE,CAAuE,KAAKuE,MAA5E,CAAP;AAEA;;;WAED,yBAAiBjE,KAAjB,EAAyB;AAExB,aAAO7f,IAAI,CAACyG,IAAL,CAAW,KAAK0d,iBAAL,CAAwBtE,KAAxB,CAAX,CAAP;AAEA;;;WAED,2BAAmBA,KAAnB,EAA2B;AAE1B,UAAMqE,iBAAiB,GAAGZ,SAAS,CAACpd,UAAV,CAAsB2Z,KAAtB,EAA6B,KAAKiE,MAAlC,EAA2CnL,GAA3C,CAAgD,KAAKoL,SAArD,CAA1B,CAF0B,CAI1B;;;AAEA,UAAKG,iBAAiB,GAAG,CAAzB,EAA6B;AAE5B,eAAO,KAAKJ,MAAL,CAAYld,iBAAZ,CAA+BiZ,KAA/B,CAAP;AAEA;;AAEDyD,MAAAA,SAAS,CAACxV,IAAV,CAAgB,KAAKiW,SAArB,EAAiC5d,cAAjC,CAAiD+d,iBAAjD,EAAqE3E,GAArE,CAA0E,KAAKuE,MAA/E;;AAEA,aAAOR,SAAS,CAAC1c,iBAAV,CAA6BiZ,KAA7B,CAAP;AAEA;;;WAED,6BAAqBoC,EAArB,EAAyBjb,EAAzB,EAA6Bod,kBAA7B,EAAiDC,sBAAjD,EAA0E;AAEzE;AACA;AACA;AACA;AACA;AACA;AAEAd,MAAAA,UAAU,CAACzV,IAAX,CAAiBmU,EAAjB,EAAsB1C,GAAtB,CAA2BvY,EAA3B,EAAgCb,cAAhC,CAAgD,GAAhD;;AACAqd,MAAAA,OAAO,CAAC1V,IAAR,CAAc9G,EAAd,EAAmB8W,GAAnB,CAAwBmE,EAAxB,EAA6B7c,SAA7B;;AACAqe,MAAAA,KAAK,CAAC3V,IAAN,CAAY,KAAKgW,MAAjB,EAA0BhG,GAA1B,CAA+ByF,UAA/B;;AAEA,UAAMe,SAAS,GAAGrC,EAAE,CAACa,UAAH,CAAe9b,EAAf,IAAsB,GAAxC;AACA,UAAMud,GAAG,GAAG,CAAE,KAAKR,SAAL,CAAepL,GAAf,CAAoB6K,OAApB,CAAd;;AACA,UAAMgB,EAAE,GAAGf,KAAK,CAAC9K,GAAN,CAAW,KAAKoL,SAAhB,CAAX;;AACA,UAAMziB,EAAE,GAAG,CAAEmiB,KAAK,CAAC9K,GAAN,CAAW6K,OAAX,CAAb;;AACA,UAAM3f,CAAC,GAAG4f,KAAK,CAAC/F,QAAN,EAAV;;AACA,UAAMlT,GAAG,GAAGxK,IAAI,CAACiC,GAAL,CAAU,IAAIsiB,GAAG,GAAGA,GAApB,CAAZ;AACA,UAAIE,EAAJ,EAAQrM,EAAR,EAAYsM,OAAZ,EAAqBC,MAArB;;AAEA,UAAKna,GAAG,GAAG,CAAX,EAAe;AAEd;AAEAia,QAAAA,EAAE,GAAGF,GAAG,GAAGjjB,EAAN,GAAWkjB,EAAhB;AACApM,QAAAA,EAAE,GAAGmM,GAAG,GAAGC,EAAN,GAAWljB,EAAhB;AACAqjB,QAAAA,MAAM,GAAGL,SAAS,GAAG9Z,GAArB;;AAEA,YAAKia,EAAE,IAAI,CAAX,EAAe;AAEd,cAAKrM,EAAE,IAAI,CAAEuM,MAAb,EAAsB;AAErB,gBAAKvM,EAAE,IAAIuM,MAAX,EAAoB;AAEnB;AACA;AAEA,kBAAMC,MAAM,GAAG,IAAIpa,GAAnB;AACAia,cAAAA,EAAE,IAAIG,MAAN;AACAxM,cAAAA,EAAE,IAAIwM,MAAN;AACAF,cAAAA,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAGnM,EAAX,GAAgB,IAAIoM,EAAzB,CAAF,GAAkCpM,EAAE,IAAKmM,GAAG,GAAGE,EAAN,GAAWrM,EAAX,GAAgB,IAAI9W,EAAzB,CAApC,GAAoEuC,CAA9E;AAEA,aAVD,MAUO;AAEN;AAEAuU,cAAAA,EAAE,GAAGkM,SAAL;AACAG,cAAAA,EAAE,GAAGzkB,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,EAAIyjB,GAAG,GAAGnM,EAAN,GAAWoM,EAAf,CAAb,CAAL;AACAE,cAAAA,OAAO,GAAG,CAAED,EAAF,GAAOA,EAAP,GAAYrM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAd,GAAmCuC,CAA7C;AAEA;AAED,WAtBD,MAsBO;AAEN;AAEAuU,YAAAA,EAAE,GAAG,CAAEkM,SAAP;AACAG,YAAAA,EAAE,GAAGzkB,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,EAAIyjB,GAAG,GAAGnM,EAAN,GAAWoM,EAAf,CAAb,CAAL;AACAE,YAAAA,OAAO,GAAG,CAAED,EAAF,GAAOA,EAAP,GAAYrM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAd,GAAmCuC,CAA7C;AAEA;AAED,SAlCD,MAkCO;AAEN,cAAKuU,EAAE,IAAI,CAAEuM,MAAb,EAAsB;AAErB;AAEAF,YAAAA,EAAE,GAAGzkB,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,EAAI,CAAEyjB,GAAF,GAAQD,SAAR,GAAoBE,EAAxB,CAAb,CAAL;AACApM,YAAAA,EAAE,GAAKqM,EAAE,GAAG,CAAP,GAAa,CAAEH,SAAf,GAA2BtkB,IAAI,CAACa,GAAL,CAAUb,IAAI,CAACc,GAAL,CAAU,CAAEwjB,SAAZ,EAAuB,CAAEhjB,EAAzB,CAAV,EAAyCgjB,SAAzC,CAAhC;AACAI,YAAAA,OAAO,GAAG,CAAED,EAAF,GAAOA,EAAP,GAAYrM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAd,GAAmCuC,CAA7C;AAEA,WARD,MAQO,IAAKuU,EAAE,IAAIuM,MAAX,EAAoB;AAE1B;AAEAF,YAAAA,EAAE,GAAG,CAAL;AACArM,YAAAA,EAAE,GAAGpY,IAAI,CAACa,GAAL,CAAUb,IAAI,CAACc,GAAL,CAAU,CAAEwjB,SAAZ,EAAuB,CAAEhjB,EAAzB,CAAV,EAAyCgjB,SAAzC,CAAL;AACAI,YAAAA,OAAO,GAAGtM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAF,GAAuBuC,CAAjC;AAEA,WARM,MAQA;AAEN;AAEA4gB,YAAAA,EAAE,GAAGzkB,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,EAAIyjB,GAAG,GAAGD,SAAN,GAAkBE,EAAtB,CAAb,CAAL;AACApM,YAAAA,EAAE,GAAKqM,EAAE,GAAG,CAAP,GAAaH,SAAb,GAAyBtkB,IAAI,CAACa,GAAL,CAAUb,IAAI,CAACc,GAAL,CAAU,CAAEwjB,SAAZ,EAAuB,CAAEhjB,EAAzB,CAAV,EAAyCgjB,SAAzC,CAA9B;AACAI,YAAAA,OAAO,GAAG,CAAED,EAAF,GAAOA,EAAP,GAAYrM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAd,GAAmCuC,CAA7C;AAEA;AAED;AAED,OAxED,MAwEO;AAEN;AAEAuU,QAAAA,EAAE,GAAKmM,GAAG,GAAG,CAAR,GAAc,CAAED,SAAhB,GAA4BA,SAAjC;AACAG,QAAAA,EAAE,GAAGzkB,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa,EAAIyjB,GAAG,GAAGnM,EAAN,GAAWoM,EAAf,CAAb,CAAL;AACAE,QAAAA,OAAO,GAAG,CAAED,EAAF,GAAOA,EAAP,GAAYrM,EAAE,IAAKA,EAAE,GAAG,IAAI9W,EAAd,CAAd,GAAmCuC,CAA7C;AAEA;;AAED,UAAKugB,kBAAL,EAA0B;AAEzBA,QAAAA,kBAAkB,CAACtW,IAAnB,CAAyB,KAAKiW,SAA9B,EAA0C5d,cAA1C,CAA0Dse,EAA1D,EAA+DlF,GAA/D,CAAoE,KAAKuE,MAAzE;AAEA;;AAED,UAAKO,sBAAL,EAA8B;AAE7BA,QAAAA,sBAAsB,CAACvW,IAAvB,CAA6B0V,OAA7B,EAAuCrd,cAAvC,CAAuDiS,EAAvD,EAA4DmH,GAA5D,CAAiEgE,UAAjE;AAEA;;AAED,aAAOmB,OAAP;AAEA;;;WAED,yBAAiBhE,MAAjB,EAAyBphB,MAAzB,EAAkC;AAEjCgkB,MAAAA,SAAS,CAACpd,UAAV,CAAsBwa,MAAM,CAACpZ,MAA7B,EAAqC,KAAKwc,MAA1C;;AACA,UAAMe,GAAG,GAAGvB,SAAS,CAAC3K,GAAV,CAAe,KAAKoL,SAApB,CAAZ;;AACA,UAAMxjB,EAAE,GAAG+iB,SAAS,CAAC3K,GAAV,CAAe2K,SAAf,IAA6BuB,GAAG,GAAGA,GAA9C;AACA,UAAMC,OAAO,GAAGpE,MAAM,CAACxC,MAAP,GAAgBwC,MAAM,CAACxC,MAAvC;AAEA,UAAK3d,EAAE,GAAGukB,OAAV,EAAoB,OAAO,IAAP;AAEpB,UAAMC,GAAG,GAAG/kB,IAAI,CAACyG,IAAL,CAAWqe,OAAO,GAAGvkB,EAArB,CAAZ,CATiC,CAWjC;;AACA,UAAMykB,EAAE,GAAGH,GAAG,GAAGE,GAAjB,CAZiC,CAcjC;;AACA,UAAME,EAAE,GAAGJ,GAAG,GAAGE,GAAjB,CAfiC,CAiBjC;;AACA,UAAKC,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAApB,EAAwB,OAAO,IAAP,CAlBS,CAoBjC;AACA;AACA;;AACA,UAAKD,EAAE,GAAG,CAAV,EAAc,OAAO,KAAKf,EAAL,CAASgB,EAAT,EAAa3lB,MAAb,CAAP,CAvBmB,CAyBjC;;AACA,aAAO,KAAK2kB,EAAL,CAASe,EAAT,EAAa1lB,MAAb,CAAP;AAEA;;;WAED,0BAAkBohB,MAAlB,EAA2B;AAE1B,aAAO,KAAKyD,iBAAL,CAAwBzD,MAAM,CAACpZ,MAA/B,KAA6CoZ,MAAM,CAACxC,MAAP,GAAgBwC,MAAM,CAACxC,MAA3E;AAEA;;;WAED,yBAAiB0C,KAAjB,EAAyB;AAExB,UAAMnD,WAAW,GAAGmD,KAAK,CAAC7C,MAAN,CAAapF,GAAb,CAAkB,KAAKoL,SAAvB,CAApB;;AAEA,UAAKtG,WAAW,KAAK,CAArB,EAAyB;AAExB;AACA,YAAKmD,KAAK,CAACqC,eAAN,CAAuB,KAAKa,MAA5B,MAAyC,CAA9C,EAAkD;AAEjD,iBAAO,CAAP;AAEA,SAPuB,CASxB;;;AAEA,eAAO,IAAP;AAEA;;AAED,UAAMniB,CAAC,GAAG,EAAI,KAAKmiB,MAAL,CAAYnL,GAAZ,CAAiBiI,KAAK,CAAC7C,MAAvB,IAAkC6C,KAAK,CAACC,QAA5C,IAAyDpD,WAAnE,CAnBwB,CAqBxB;;AAEA,aAAO9b,CAAC,IAAI,CAAL,GAASA,CAAT,GAAa,IAApB;AAEA;;;WAED,wBAAgBif,KAAhB,EAAuBthB,MAAvB,EAAgC;AAE/B,UAAMqC,CAAC,GAAG,KAAKujB,eAAL,CAAsBtE,KAAtB,CAAV;;AAEA,UAAKjf,CAAC,KAAK,IAAX,EAAkB;AAEjB,eAAO,IAAP;AAEA;;AAED,aAAO,KAAKsiB,EAAL,CAAStiB,CAAT,EAAYrC,MAAZ,CAAP;AAEA;;;WAED,yBAAiBshB,KAAjB,EAAyB;AAExB;AAEA,UAAMuE,WAAW,GAAGvE,KAAK,CAACqC,eAAN,CAAuB,KAAKa,MAA5B,CAApB;;AAEA,UAAKqB,WAAW,KAAK,CAArB,EAAyB;AAExB,eAAO,IAAP;AAEA;;AAED,UAAM1H,WAAW,GAAGmD,KAAK,CAAC7C,MAAN,CAAapF,GAAb,CAAkB,KAAKoL,SAAvB,CAApB;;AAEA,UAAKtG,WAAW,GAAG0H,WAAd,GAA4B,CAAjC,EAAqC;AAEpC,eAAO,IAAP;AAEA,OAlBuB,CAoBxB;;;AAEA,aAAO,KAAP;AAEA;;;WAED,sBAAcxF,GAAd,EAAmBrgB,MAAnB,EAA4B;AAE3B,UAAI8lB,IAAJ,EAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,KAArC;AAEA,UAAMC,OAAO,GAAG,IAAI,KAAK3B,SAAL,CAAe5iB,CAAnC;AAAA,UACCwkB,OAAO,GAAG,IAAI,KAAK5B,SAAL,CAAetiB,CAD9B;AAAA,UAECmkB,OAAO,GAAG,IAAI,KAAK7B,SAAL,CAAe1P,CAF9B;AAIA,UAAMyP,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAK4B,OAAO,IAAI,CAAhB,EAAoB;AAEnBN,QAAAA,IAAI,GAAG,CAAEzF,GAAG,CAAC9e,GAAJ,CAAQM,CAAR,GAAY2iB,MAAM,CAAC3iB,CAArB,IAA2BukB,OAAlC;AACAL,QAAAA,IAAI,GAAG,CAAE1F,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,GAAY2iB,MAAM,CAAC3iB,CAArB,IAA2BukB,OAAlC;AAEA,OALD,MAKO;AAENN,QAAAA,IAAI,GAAG,CAAEzF,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,GAAY2iB,MAAM,CAAC3iB,CAArB,IAA2BukB,OAAlC;AACAL,QAAAA,IAAI,GAAG,CAAE1F,GAAG,CAAC9e,GAAJ,CAAQM,CAAR,GAAY2iB,MAAM,CAAC3iB,CAArB,IAA2BukB,OAAlC;AAEA;;AAED,UAAKC,OAAO,IAAI,CAAhB,EAAoB;AAEnBL,QAAAA,KAAK,GAAG,CAAE3F,GAAG,CAAC9e,GAAJ,CAAQY,CAAR,GAAYqiB,MAAM,CAACriB,CAArB,IAA2BkkB,OAAnC;AACAJ,QAAAA,KAAK,GAAG,CAAE5F,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,GAAYqiB,MAAM,CAACriB,CAArB,IAA2BkkB,OAAnC;AAEA,OALD,MAKO;AAENL,QAAAA,KAAK,GAAG,CAAE3F,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,GAAYqiB,MAAM,CAACriB,CAArB,IAA2BkkB,OAAnC;AACAJ,QAAAA,KAAK,GAAG,CAAE5F,GAAG,CAAC9e,GAAJ,CAAQY,CAAR,GAAYqiB,MAAM,CAACriB,CAArB,IAA2BkkB,OAAnC;AAEA;;AAED,UAAOP,IAAI,GAAGG,KAAT,IAAsBD,KAAK,GAAGD,IAAnC,EAA4C,OAAO,IAAP,CAlCjB,CAoC3B;AACA;;AAEA,UAAKC,KAAK,GAAGF,IAAR,IAAgBA,IAAI,KAAKA,IAA9B,EAAqCA,IAAI,GAAGE,KAAP;AAErC,UAAKC,KAAK,GAAGF,IAAR,IAAgBA,IAAI,KAAKA,IAA9B,EAAqCA,IAAI,GAAGE,KAAP;;AAErC,UAAKK,OAAO,IAAI,CAAhB,EAAoB;AAEnBJ,QAAAA,KAAK,GAAG,CAAE7F,GAAG,CAAC9e,GAAJ,CAAQwT,CAAR,GAAYyP,MAAM,CAACzP,CAArB,IAA2BuR,OAAnC;AACAH,QAAAA,KAAK,GAAG,CAAE9F,GAAG,CAAC7e,GAAJ,CAAQuT,CAAR,GAAYyP,MAAM,CAACzP,CAArB,IAA2BuR,OAAnC;AAEA,OALD,MAKO;AAENJ,QAAAA,KAAK,GAAG,CAAE7F,GAAG,CAAC7e,GAAJ,CAAQuT,CAAR,GAAYyP,MAAM,CAACzP,CAArB,IAA2BuR,OAAnC;AACAH,QAAAA,KAAK,GAAG,CAAE9F,GAAG,CAAC9e,GAAJ,CAAQwT,CAAR,GAAYyP,MAAM,CAACzP,CAArB,IAA2BuR,OAAnC;AAEA;;AAED,UAAOR,IAAI,GAAGK,KAAT,IAAsBD,KAAK,GAAGH,IAAnC,EAA4C,OAAO,IAAP;AAE5C,UAAKG,KAAK,GAAGJ,IAAR,IAAgBA,IAAI,KAAKA,IAA9B,EAAqCA,IAAI,GAAGI,KAAP;AAErC,UAAKC,KAAK,GAAGJ,IAAR,IAAgBA,IAAI,KAAKA,IAA9B,EAAqCA,IAAI,GAAGI,KAAP,CA3DV,CA6D3B;;AAEA,UAAKJ,IAAI,GAAG,CAAZ,EAAgB,OAAO,IAAP;AAEhB,aAAO,KAAKpB,EAAL,CAASmB,IAAI,IAAI,CAAR,GAAYA,IAAZ,GAAmBC,IAA5B,EAAkC/lB,MAAlC,CAAP;AAEA;;;WAED,uBAAeqgB,GAAf,EAAqB;AAEpB,aAAO,KAAKkG,YAAL,CAAmBlG,GAAnB,EAAwB2D,SAAxB,MAAwC,IAA/C;AAEA;;;WAED,2BAAmB3f,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BiiB,eAA5B,EAA6CxmB,MAA7C,EAAsD;AAErD;AAEA;AAEAokB,MAAAA,MAAM,CAACxd,UAAP,CAAmBtC,CAAnB,EAAsBD,CAAtB;;AACAggB,MAAAA,MAAM,CAACzd,UAAP,CAAmBrC,CAAnB,EAAsBF,CAAtB;;AACAigB,MAAAA,SAAS,CAAC1G,YAAV,CAAwBwG,MAAxB,EAAgCC,MAAhC,EARqD,CAUrD;AACA;AACA;AACA;AACA;;;AACA,UAAIoC,GAAG,GAAG,KAAKhC,SAAL,CAAepL,GAAf,CAAoBiL,SAApB,CAAV;AACA,UAAIoC,IAAJ;;AAEA,UAAKD,GAAG,GAAG,CAAX,EAAe;AAEd,YAAKD,eAAL,EAAuB,OAAO,IAAP;AACvBE,QAAAA,IAAI,GAAG,CAAP;AAEA,OALD,MAKO,IAAKD,GAAG,GAAG,CAAX,EAAe;AAErBC,QAAAA,IAAI,GAAG,CAAE,CAAT;AACAD,QAAAA,GAAG,GAAG,CAAEA,GAAR;AAEA,OALM,MAKA;AAEN,eAAO,IAAP;AAEA;;AAEDtC,MAAAA,KAAK,CAACvd,UAAN,CAAkB,KAAK4d,MAAvB,EAA+BngB,CAA/B;;AACA,UAAMsiB,MAAM,GAAGD,IAAI,GAAG,KAAKjC,SAAL,CAAepL,GAAf,CAAoBgL,MAAM,CAACzG,YAAP,CAAqBuG,KAArB,EAA4BE,MAA5B,CAApB,CAAtB,CAnCqD,CAqCrD;;AACA,UAAKsC,MAAM,GAAG,CAAd,EAAkB;AAEjB,eAAO,IAAP;AAEA;;AAED,UAAMC,MAAM,GAAGF,IAAI,GAAG,KAAKjC,SAAL,CAAepL,GAAf,CAAoB+K,MAAM,CAACyC,KAAP,CAAc1C,KAAd,CAApB,CAAtB,CA5CqD,CA8CrD;;AACA,UAAKyC,MAAM,GAAG,CAAd,EAAkB;AAEjB,eAAO,IAAP;AAEA,OAnDoD,CAqDrD;;;AACA,UAAKD,MAAM,GAAGC,MAAT,GAAkBH,GAAvB,EAA6B;AAE5B,eAAO,IAAP;AAEA,OA1DoD,CA4DrD;;;AACA,UAAMK,GAAG,GAAG,CAAEJ,IAAF,GAASvC,KAAK,CAAC9K,GAAN,CAAWiL,SAAX,CAArB,CA7DqD,CA+DrD;;;AACA,UAAKwC,GAAG,GAAG,CAAX,EAAe;AAEd,eAAO,IAAP;AAEA,OApEoD,CAsErD;;;AACA,aAAO,KAAKnC,EAAL,CAASmC,GAAG,GAAGL,GAAf,EAAoBzmB,MAApB,CAAP;AAEA;;;WAED,sBAAcqL,OAAd,EAAwB;AAEvB,WAAKmZ,MAAL,CAAYjH,YAAZ,CAA0BlS,OAA1B;AACA,WAAKoZ,SAAL,CAAesC,kBAAf,CAAmC1b,OAAnC;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQqZ,GAAR,EAAc;AAEb,aAAOA,GAAG,CAACF,MAAJ,CAAW/B,MAAX,CAAmB,KAAK+B,MAAxB,KAAoCE,GAAG,CAACD,SAAJ,CAAchC,MAAd,CAAsB,KAAKgC,SAA3B,CAA3C;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKlf,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;IAIIwY,O;AAEL,qBAAc;AAAA;;AAEbA,IAAAA,OAAO,CAAC1gB,SAAR,CAAkB2gB,SAAlB,GAA8B,IAA9B;AAEA,SAAKlgB,QAAL,GAAgB,CAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAKf,CALe,EAKZ,CALY,EAKT,CALS,EAKN,CALM,CAAhB;;AASA,QAAKsB,SAAS,CAAChI,MAAV,GAAmB,CAAxB,EAA4B;AAE3B+E,MAAAA,OAAO,CAACkD,KAAR,CAAe,+EAAf;AAEA;AAED;;;;WAED,aAAKC,GAAL,EAAUC,GAAV,EAAeC,GAAf,EAAoBye,GAApB,EAAyBxe,GAAzB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCue,GAAxC,EAA6Cte,GAA7C,EAAkDC,GAAlD,EAAuDC,GAAvD,EAA4Dqe,GAA5D,EAAiEC,GAAjE,EAAsEC,GAAtE,EAA2EC,GAA3E,EAAgFC,GAAhF,EAAsF;AAErF,UAAMxe,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUT,GAAV;AAAeS,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUR,GAAV;AAAeQ,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUP,GAAV;AAAeO,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWke,GAAX;AAC7Cle,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUN,GAAV;AAAeM,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUL,GAAV;AAAeK,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUJ,GAAV;AAAeI,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWme,GAAX;AAC7Cne,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUH,GAAV;AAAeG,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUF,GAAV;AAAeE,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWD,GAAX;AAAgBC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWoe,GAAX;AAC9Cpe,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUqe,GAAV;AAAere,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUse,GAAV;AAAete,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWue,GAAX;AAAgBve,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWwe,GAAX;AAE9C,aAAO,IAAP;AAEA;;;WAED,oBAAW;AAEV,WAAKriB,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI6hB,OAAJ,GAAc7a,SAAd,CAAyB,KAAKpF,QAA9B,CAAP;AAEA;;;WAED,cAAMpF,CAAN,EAAU;AAET,UAAMqH,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMkC,EAAE,GAAGtH,CAAC,CAACoF,QAAb;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AACzDD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AACzDD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAZ;AAAmBD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAAqBD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAC3DD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAAqBD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAAqBD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAAqBD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAE/D,aAAO,IAAP;AAEA;;;WAED,sBAActH,CAAd,EAAkB;AAEjB,UAAMqH,EAAE,GAAG,KAAKjC,QAAhB;AAAA,UAA0BkC,EAAE,GAAGtH,CAAC,CAACoF,QAAjC;AAEAiC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AACAD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AACAD,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAb;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBtH,CAAhB,EAAoB;AAEnB,UAAMsH,EAAE,GAAGtH,CAAC,CAACoF,QAAb;AAEA,WAAK5B,GAAL,CAEC8D,EAAE,CAAE,CAAF,CAFH,EAEUA,EAAE,CAAE,CAAF,CAFZ,EAEmBA,EAAE,CAAE,CAAF,CAFrB,EAE4B,CAF5B,EAGCA,EAAE,CAAE,CAAF,CAHH,EAGUA,EAAE,CAAE,CAAF,CAHZ,EAGmBA,EAAE,CAAE,CAAF,CAHrB,EAG4B,CAH5B,EAICA,EAAE,CAAE,CAAF,CAJH,EAIUA,EAAE,CAAE,CAAF,CAJZ,EAImBA,EAAE,CAAE,CAAF,CAJrB,EAI4B,CAJ5B,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,sBAAcC,KAAd,EAAqBC,KAArB,EAA4BC,KAA5B,EAAoC;AAEnCF,MAAAA,KAAK,CAAC8V,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AACA7V,MAAAA,KAAK,CAAC6V,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AACA5V,MAAAA,KAAK,CAAC4V,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW9V,KAAX,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAiC;AAEhC,WAAKjE,GAAL,CACC+D,KAAK,CAACrH,CADP,EACUsH,KAAK,CAACtH,CADhB,EACmBuH,KAAK,CAACvH,CADzB,EAC4B,CAD5B,EAECqH,KAAK,CAAC/G,CAFP,EAEUgH,KAAK,CAAChH,CAFhB,EAEmBiH,KAAK,CAACjH,CAFzB,EAE4B,CAF5B,EAGC+G,KAAK,CAAC6L,CAHP,EAGU5L,KAAK,CAAC4L,CAHhB,EAGmB3L,KAAK,CAAC2L,CAHzB,EAG4B,CAH5B,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV;AAOA,aAAO,IAAP;AAEA;;;WAED,yBAAiBpT,CAAjB,EAAqB;AAEpB;AAEA,UAAMqH,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMkC,EAAE,GAAGtH,CAAC,CAACoF,QAAb;;AAEA,UAAM0gB,MAAM,GAAG,IAAIC,KAAK,CAAC1I,mBAAN,CAA2Brd,CAA3B,EAA8B,CAA9B,EAAkCtB,MAAlC,EAAnB;;AACA,UAAMsnB,MAAM,GAAG,IAAID,KAAK,CAAC1I,mBAAN,CAA2Brd,CAA3B,EAA8B,CAA9B,EAAkCtB,MAAlC,EAAnB;;AACA,UAAMunB,MAAM,GAAG,IAAIF,KAAK,CAAC1I,mBAAN,CAA2Brd,CAA3B,EAA8B,CAA9B,EAAkCtB,MAAlC,EAAnB;;AAEA2I,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAUwe,MAApB;AACAze,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAUwe,MAApB;AACAze,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAUwe,MAApB;AACAze,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAU0e,MAApB;AACA3e,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAU0e,MAApB;AACA3e,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAU0e,MAApB;AACA3e,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAU2e,MAApB;AACA5e,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUC,EAAE,CAAE,CAAF,CAAF,GAAU2e,MAApB;AACA5e,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWC,EAAE,CAAE,EAAF,CAAF,GAAW2e,MAAtB;AACA5e,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuBwP,KAAvB,EAA+B;AAE9B,UAAK,EAAIA,KAAK,IAAIA,KAAK,CAACE,OAAnB,CAAL,EAAoC;AAEnCtT,QAAAA,OAAO,CAACkD,KAAR,CAAe,uGAAf;AAEA;;AAED,UAAMU,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAMlF,CAAC,GAAG2W,KAAK,CAAC3W,CAAhB;AAAA,UAAmBM,CAAC,GAAGqW,KAAK,CAACrW,CAA7B;AAAA,UAAgC4S,CAAC,GAAGyD,KAAK,CAACzD,CAA1C;AACA,UAAM1Q,CAAC,GAAG3D,IAAI,CAAC+D,GAAL,CAAU5C,CAAV,CAAV;AAAA,UAAyByC,CAAC,GAAG5D,IAAI,CAACgE,GAAL,CAAU7C,CAAV,CAA7B;AACA,UAAM0C,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUtC,CAAV,CAAV;AAAA,UAAyBwI,CAAC,GAAGjK,IAAI,CAACgE,GAAL,CAAUvC,CAAV,CAA7B;AACA,UAAM2E,CAAC,GAAGpG,IAAI,CAAC+D,GAAL,CAAUsQ,CAAV,CAAV;AAAA,UAAyBnK,CAAC,GAAGlK,IAAI,CAACgE,GAAL,CAAUqQ,CAAV,CAA7B;;AAEA,UAAKyD,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAE5B,YAAM+E,EAAE,GAAGlF,CAAC,GAAGyC,CAAf;AAAA,YAAkB+gB,EAAE,GAAGxjB,CAAC,GAAGuG,CAA3B;AAAA,YAA8BpB,EAAE,GAAGlF,CAAC,GAAGwC,CAAvC;AAAA,YAA0CghB,EAAE,GAAGxjB,CAAC,GAAGsG,CAAnD;AAEA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGuC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEzE,CAAF,GAAMqG,CAAhB;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2B,CAAV;AAEA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6e,EAAE,GAAGre,EAAE,GAAGmB,CAApB;AACA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUO,EAAE,GAAGue,EAAE,GAAGnd,CAApB;AACA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1E,CAAF,GAAMC,CAAhB;AAEAyE,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU8e,EAAE,GAAGve,EAAE,GAAGoB,CAApB;AACA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUQ,EAAE,GAAGqe,EAAE,GAAGld,CAApB;AACA3B,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW3E,CAAC,GAAGE,CAAf;AAEA,OAhBD,MAgBO,IAAKiU,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMujB,EAAE,GAAGxjB,CAAC,GAAGuC,CAAf;AAAA,YAAkBkhB,EAAE,GAAGzjB,CAAC,GAAGqG,CAA3B;AAAA,YAA8Bqd,EAAE,GAAGtd,CAAC,GAAG7D,CAAvC;AAAA,YAA0CohB,EAAE,GAAGvd,CAAC,GAAGC,CAAnD;AAEA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+e,EAAE,GAAGG,EAAE,GAAG5jB,CAApB;AACA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUif,EAAE,GAAG3jB,CAAL,GAAS0jB,EAAnB;AACAhf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGsG,CAAd;AAEA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGuG,CAAd;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGyC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1E,CAAZ;AAEA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgf,EAAE,GAAG1jB,CAAL,GAAS2jB,EAAnB;AACAjf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkf,EAAE,GAAGH,EAAE,GAAGzjB,CAApB;AACA0E,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW3E,CAAC,GAAGE,CAAf;AAEA,OAhBM,MAgBA,IAAKiU,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMujB,GAAE,GAAGxjB,CAAC,GAAGuC,CAAf;AAAA,YAAkBkhB,GAAE,GAAGzjB,CAAC,GAAGqG,CAA3B;AAAA,YAA8Bqd,GAAE,GAAGtd,CAAC,GAAG7D,CAAvC;AAAA,YAA0CohB,GAAE,GAAGvd,CAAC,GAAGC,CAAnD;;AAEA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+e,GAAE,GAAGG,GAAE,GAAG5jB,CAApB;AACA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE3E,CAAF,GAAMuG,CAAhB;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUif,GAAE,GAAGD,GAAE,GAAG1jB,CAApB;AAEA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgf,GAAE,GAAGC,GAAE,GAAG3jB,CAApB;AACA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGyC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkf,GAAE,GAAGH,GAAE,GAAGzjB,CAApB;AAEA0E,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE3E,CAAF,GAAMsG,CAAhB;AACA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU1E,CAAV;AACA0E,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW3E,CAAC,GAAGE,CAAf;AAEA,OAhBM,MAgBA,IAAKiU,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAM+E,GAAE,GAAGlF,CAAC,GAAGyC,CAAf;AAAA,YAAkB+gB,GAAE,GAAGxjB,CAAC,GAAGuG,CAA3B;AAAA,YAA8BpB,GAAE,GAAGlF,CAAC,GAAGwC,CAAvC;AAAA,YAA0CghB,GAAE,GAAGxjB,CAAC,GAAGsG,CAAnD;;AAEA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGuC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUQ,GAAE,GAAGmB,CAAL,GAASkd,GAAnB;AACA7e,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUO,GAAE,GAAGoB,CAAL,GAASmd,GAAnB;AAEA9e,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGqG,CAAd;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU8e,GAAE,GAAGnd,CAAL,GAASpB,GAAnB;AACAP,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6e,GAAE,GAAGld,CAAL,GAASnB,GAAnB;AAEAR,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE2B,CAAZ;AACA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU1E,CAAC,GAAGC,CAAd;AACAyE,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW3E,CAAC,GAAGE,CAAf;AAEA,OAhBM,MAgBA,IAAKiU,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAM2jB,EAAE,GAAG9jB,CAAC,GAAGE,CAAf;AAAA,YAAkB6jB,EAAE,GAAG/jB,CAAC,GAAGsG,CAA3B;AAAA,YAA8B0d,EAAE,GAAG/jB,CAAC,GAAGC,CAAvC;AAAA,YAA0C+jB,EAAE,GAAGhkB,CAAC,GAAGqG,CAAnD;AAEA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGuC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUsf,EAAE,GAAGH,EAAE,GAAGvd,CAApB;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUqf,EAAE,GAAGzd,CAAL,GAASwd,EAAnB;AAEApf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU4B,CAAV;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGyC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE1E,CAAF,GAAMwC,CAAhB;AAEAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE2B,CAAF,GAAM7D,CAAhB;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUof,EAAE,GAAGxd,CAAL,GAASyd,EAAnB;AACArf,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWmf,EAAE,GAAGG,EAAE,GAAG1d,CAArB;AAEA,OAhBM,MAgBA,IAAK4N,KAAK,CAAChU,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAM2jB,GAAE,GAAG9jB,CAAC,GAAGE,CAAf;AAAA,YAAkB6jB,GAAE,GAAG/jB,CAAC,GAAGsG,CAA3B;AAAA,YAA8B0d,GAAE,GAAG/jB,CAAC,GAAGC,CAAvC;AAAA,YAA0C+jB,GAAE,GAAGhkB,CAAC,GAAGqG,CAAnD;;AAEA3B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUzE,CAAC,GAAGuC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE4B,CAAZ;AACA5B,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2B,CAAC,GAAG7D,CAAd;AAEAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmf,GAAE,GAAGvd,CAAL,GAAS0d,GAAnB;AACAtf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAC,GAAGyC,CAAd;AACAkC,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUof,GAAE,GAAGxd,CAAL,GAASyd,GAAnB;AAEArf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAUqf,GAAE,GAAGzd,CAAL,GAASwd,GAAnB;AACApf,QAAAA,EAAE,CAAE,CAAF,CAAF,GAAU1E,CAAC,GAAGwC,CAAd;AACAkC,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWsf,GAAE,GAAG1d,CAAL,GAASud,GAApB;AAEA,OA/G6B,CAiH9B;;;AACAnf,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AACAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX,CApH8B,CAsH9B;;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,oCAA4B5E,CAA5B,EAAgC;AAE/B,aAAO,KAAKmkB,OAAL,CAAcC,KAAd,EAAqBpkB,CAArB,EAAwBqkB,IAAxB,CAAP;AAEA;;;WAED,gBAAQC,GAAR,EAAa1oB,MAAb,EAAqB2oB,EAArB,EAA0B;AAEzB,UAAM3f,EAAE,GAAG,KAAKjC,QAAhB;;AAEAqR,MAAAA,EAAE,CAACxR,UAAH,CAAe8hB,GAAf,EAAoB1oB,MAApB;;AAEA,UAAKoY,EAAE,CAACgG,QAAH,OAAkB,CAAvB,EAA2B;AAE1B;AAEAhG,QAAAA,EAAE,CAACrD,CAAH,GAAO,CAAP;AAEA;;AAEDqD,MAAAA,EAAE,CAACtS,SAAH;;AACAoS,MAAAA,EAAE,CAAC0F,YAAH,CAAiB+K,EAAjB,EAAqBvQ,EAArB;;AAEA,UAAKF,EAAE,CAACkG,QAAH,OAAkB,CAAvB,EAA2B;AAE1B;AAEA,YAAK1d,IAAI,CAACiC,GAAL,CAAUgmB,EAAE,CAAC5T,CAAb,MAAqB,CAA1B,EAA8B;AAE7BqD,UAAAA,EAAE,CAACvW,CAAH,IAAQ,MAAR;AAEA,SAJD,MAIO;AAENuW,UAAAA,EAAE,CAACrD,CAAH,IAAQ,MAAR;AAEA;;AAEDqD,QAAAA,EAAE,CAACtS,SAAH;;AACAoS,QAAAA,EAAE,CAAC0F,YAAH,CAAiB+K,EAAjB,EAAqBvQ,EAArB;AAEA;;AAEDF,MAAAA,EAAE,CAACpS,SAAH;;AACAqS,MAAAA,EAAE,CAACyF,YAAH,CAAiBxF,EAAjB,EAAqBF,EAArB;;AAEAlP,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkP,EAAE,CAACrW,CAAb;AAAgBmH,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmP,EAAE,CAACtW,CAAb;AAAgBmH,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoP,EAAE,CAACvW,CAAb;AAChCmH,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkP,EAAE,CAAC/V,CAAb;AAAgB6G,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmP,EAAE,CAAChW,CAAb;AAAgB6G,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoP,EAAE,CAACjW,CAAb;AAChC6G,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkP,EAAE,CAACnD,CAAb;AAAgB/L,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmP,EAAE,CAACpD,CAAb;AAAgB/L,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWoP,EAAE,CAACrD,CAAd;AAEhC,aAAO,IAAP;AAEA;;;WAED,kBAAUpT,CAAV,EAAaD,CAAb,EAAiB;AAEhB,UAAKA,CAAC,KAAKlC,SAAX,EAAuB;AAEtB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,kGAAd;AACA,eAAO,KAAKiE,gBAAL,CAAuB3H,CAAvB,EAA0BD,CAA1B,CAAP;AAEA;;AAED,aAAO,KAAK4H,gBAAL,CAAuB,IAAvB,EAA6B3H,CAA7B,CAAP;AAEA;;;WAED,qBAAaA,CAAb,EAAiB;AAEhB,aAAO,KAAK2H,gBAAL,CAAuB3H,CAAvB,EAA0B,IAA1B,CAAP;AAEA;;;WAED,0BAAkB0C,CAAlB,EAAqBC,CAArB,EAAyB;AAExB,UAAMiF,EAAE,GAAGlF,CAAC,CAAC0C,QAAb;AACA,UAAMyC,EAAE,GAAGlF,CAAC,CAACyC,QAAb;AACA,UAAMiC,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAM0C,GAAG,GAAGF,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBG,GAAG,GAAGH,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCI,GAAG,GAAGJ,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDqf,GAAG,GAAGrf,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMK,GAAG,GAAGL,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBM,GAAG,GAAGN,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCO,GAAG,GAAGP,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDsf,GAAG,GAAGtf,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBS,GAAG,GAAGT,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCU,GAAG,GAAGV,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDuf,GAAG,GAAGvf,EAAE,CAAE,EAAF,CAA5D;AACA,UAAMwf,GAAG,GAAGxf,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqByf,GAAG,GAAGzf,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC0f,GAAG,GAAG1f,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoD2f,GAAG,GAAG3f,EAAE,CAAE,EAAF,CAA5D;AAEA,UAAMW,GAAG,GAAGV,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBW,GAAG,GAAGX,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCY,GAAG,GAAGZ,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmD2f,GAAG,GAAG3f,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMa,GAAG,GAAGb,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBc,GAAG,GAAGd,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCe,GAAG,GAAGf,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmD4f,GAAG,GAAG5f,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBiB,GAAG,GAAGjB,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCkB,GAAG,GAAGlB,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoD6f,GAAG,GAAG7f,EAAE,CAAE,EAAF,CAA5D;AACA,UAAM8f,GAAG,GAAG9f,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB+f,GAAG,GAAG/f,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCggB,GAAG,GAAGhgB,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDigB,GAAG,GAAGjgB,EAAE,CAAE,EAAF,CAA5D;AAEAR,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGS,GAAN,GAAYR,GAAG,GAAGW,GAAlB,GAAwBV,GAAG,GAAGa,GAA9B,GAAoCoe,GAAG,GAAGU,GAApD;AACAtgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGU,GAAN,GAAYT,GAAG,GAAGY,GAAlB,GAAwBX,GAAG,GAAGc,GAA9B,GAAoCme,GAAG,GAAGW,GAApD;AACAvgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUS,GAAG,GAAGW,GAAN,GAAYV,GAAG,GAAGa,GAAlB,GAAwBZ,GAAG,GAAGe,GAA9B,GAAoCke,GAAG,GAAGY,GAApD;AACAxgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWS,GAAG,GAAG0f,GAAN,GAAYzf,GAAG,GAAG0f,GAAlB,GAAwBzf,GAAG,GAAG0f,GAA9B,GAAoCT,GAAG,GAAGa,GAArD;AAEAzgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGM,GAAN,GAAYL,GAAG,GAAGQ,GAAlB,GAAwBP,GAAG,GAAGU,GAA9B,GAAoCqe,GAAG,GAAGS,GAApD;AACAtgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGO,GAAN,GAAYN,GAAG,GAAGS,GAAlB,GAAwBR,GAAG,GAAGW,GAA9B,GAAoCoe,GAAG,GAAGU,GAApD;AACAvgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUY,GAAG,GAAGQ,GAAN,GAAYP,GAAG,GAAGU,GAAlB,GAAwBT,GAAG,GAAGY,GAA9B,GAAoCme,GAAG,GAAGW,GAApD;AACAxgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWY,GAAG,GAAGuf,GAAN,GAAYtf,GAAG,GAAGuf,GAAlB,GAAwBtf,GAAG,GAAGuf,GAA9B,GAAoCR,GAAG,GAAGY,GAArD;AAEAzgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGK,GAAlB,GAAwBJ,GAAG,GAAGO,GAA9B,GAAoCse,GAAG,GAAGQ,GAApD;AACAtgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGM,GAAlB,GAAwBL,GAAG,GAAGQ,GAA9B,GAAoCqe,GAAG,GAAGS,GAApD;AACAvgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGO,GAAlB,GAAwBN,GAAG,GAAGS,GAA9B,GAAoCoe,GAAG,GAAGU,GAArD;AACAxgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,GAAG,GAAGof,GAAN,GAAYnf,GAAG,GAAGof,GAAlB,GAAwBnf,GAAG,GAAGof,GAA9B,GAAoCP,GAAG,GAAGW,GAArD;AAEAzgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+f,GAAG,GAAG7e,GAAN,GAAY8e,GAAG,GAAG3e,GAAlB,GAAwB4e,GAAG,GAAGze,GAA9B,GAAoC0e,GAAG,GAAGI,GAApD;AACAtgB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+f,GAAG,GAAG5e,GAAN,GAAY6e,GAAG,GAAG1e,GAAlB,GAAwB2e,GAAG,GAAGxe,GAA9B,GAAoCye,GAAG,GAAGK,GAApD;AACAvgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+f,GAAG,GAAG3e,GAAN,GAAY4e,GAAG,GAAGze,GAAlB,GAAwB0e,GAAG,GAAGve,GAA9B,GAAoCwe,GAAG,GAAGM,GAArD;AACAxgB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+f,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGI,GAAlB,GAAwBH,GAAG,GAAGI,GAA9B,GAAoCH,GAAG,GAAGO,GAArD;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBnmB,CAAhB,EAAoB;AAEnB,UAAM0F,EAAE,GAAG,KAAKjC,QAAhB;AAEAiC,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAC1C0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAC1C0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAAe0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAC3C0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW1F,CAAX;AAAc0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAAe0F,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY1F,CAAZ;AAE3C,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,UAAM0F,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAMwB,GAAG,GAAGS,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBR,GAAG,GAAGQ,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCP,GAAG,GAAGO,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDke,GAAG,GAAGle,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMN,GAAG,GAAGM,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBL,GAAG,GAAGK,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCJ,GAAG,GAAGI,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDme,GAAG,GAAGne,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMH,GAAG,GAAGG,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBF,GAAG,GAAGE,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCD,GAAG,GAAGC,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDoe,GAAG,GAAGpe,EAAE,CAAE,EAAF,CAA5D;AACA,UAAMqe,GAAG,GAAGre,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBse,GAAG,GAAGte,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCue,GAAG,GAAGve,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDwe,GAAG,GAAGxe,EAAE,CAAE,EAAF,CAA5D,CAPa,CASb;AACA;;AAEA,aACCqe,GAAG,IACF,CAAEH,GAAF,GAAQte,GAAR,GAAcE,GAAd,GACGL,GAAG,GAAG0e,GAAN,GAAYre,GADf,GAEGoe,GAAG,GAAGve,GAAN,GAAYI,GAFf,GAGGP,GAAG,GAAG2e,GAAN,GAAYpe,GAHf,GAIGN,GAAG,GAAGE,GAAN,GAAYye,GAJf,GAKG5e,GAAG,GAAGI,GAAN,GAAYwe,GANb,CAAH,GAQAE,GAAG,IACF,CAAE/e,GAAF,GAAQK,GAAR,GAAcwe,GAAd,GACG7e,GAAG,GAAG4e,GAAN,GAAYpe,GADf,GAEGme,GAAG,GAAGxe,GAAN,GAAYK,GAFf,GAGGN,GAAG,GAAGC,GAAN,GAAY0e,GAHf,GAIG3e,GAAG,GAAG0e,GAAN,GAAYte,GAJf,GAKGqe,GAAG,GAAGte,GAAN,GAAYC,GANb,CARH,GAgBA0e,GAAG,IACF,CAAEhf,GAAF,GAAQ4e,GAAR,GAAcre,GAAd,GACGP,GAAG,GAAGI,GAAN,GAAYye,GADf,GAEGF,GAAG,GAAGxe,GAAN,GAAYI,GAFf,GAGGN,GAAG,GAAGE,GAAN,GAAY0e,GAHf,GAIGF,GAAG,GAAGve,GAAN,GAAYE,GAJf,GAKGL,GAAG,GAAG2e,GAAN,GAAYte,GANb,CAhBH,GAwBA2e,GAAG,IACF,CAAE/e,GAAF,GAAQE,GAAR,GAAcE,GAAd,GACGN,GAAG,GAAGK,GAAN,GAAYE,GADf,GAEGP,GAAG,GAAGI,GAAN,GAAYI,GAFf,GAGGN,GAAG,GAAGC,GAAN,GAAYI,GAHf,GAIGN,GAAG,GAAGE,GAAN,GAAYK,GAJf,GAKGP,GAAG,GAAGI,GAAN,GAAYC,GANb,CAzBJ;AAoCA;;;WAED,qBAAY;AAEX,UAAMG,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAIqE,GAAJ;AAEAA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAAR;AAAeA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoC,GAAV;AAClCA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAAR;AAAeA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoC,GAAV;AAClCA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAAR;AAAeA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoC,GAAV;AAElCA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAAR;AAAeA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,EAAF,CAAZ;AAAoBA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWoC,GAAX;AACnCA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAAR;AAAeA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,EAAF,CAAZ;AAAoBA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWoC,GAAX;AACnCA,MAAAA,GAAG,GAAGpC,EAAE,CAAE,EAAF,CAAR;AAAgBA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWA,EAAE,CAAE,EAAF,CAAb;AAAqBA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWoC,GAAX;AAErC,aAAO,IAAP;AAEA;;;WAED,qBAAavJ,CAAb,EAAgBM,CAAhB,EAAmB4S,CAAnB,EAAuB;AAEtB,UAAM/L,EAAE,GAAG,KAAKjC,QAAhB;;AAEA,UAAKlF,CAAC,CAAC2a,SAAP,EAAmB;AAElBxT,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWnH,CAAC,CAACA,CAAb;AACAmH,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWnH,CAAC,CAACM,CAAb;AACA6G,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWnH,CAAC,CAACkT,CAAb;AAEA,OAND,MAMO;AAEN/L,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAWnH,CAAX;AACAmH,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW7G,CAAX;AACA6G,QAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+L,CAAX;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER;AACA,UAAM/L,EAAE,GAAG,KAAKjC,QAAhB;AAAA,UAECwB,GAAG,GAAGS,EAAE,CAAE,CAAF,CAFT;AAAA,UAEgBN,GAAG,GAAGM,EAAE,CAAE,CAAF,CAFxB;AAAA,UAE+BH,GAAG,GAAGG,EAAE,CAAE,CAAF,CAFvC;AAAA,UAE8Cqe,GAAG,GAAGre,EAAE,CAAE,CAAF,CAFtD;AAAA,UAGCR,GAAG,GAAGQ,EAAE,CAAE,CAAF,CAHT;AAAA,UAGgBL,GAAG,GAAGK,EAAE,CAAE,CAAF,CAHxB;AAAA,UAG+BF,GAAG,GAAGE,EAAE,CAAE,CAAF,CAHvC;AAAA,UAG8Cse,GAAG,GAAGte,EAAE,CAAE,CAAF,CAHtD;AAAA,UAICP,GAAG,GAAGO,EAAE,CAAE,CAAF,CAJT;AAAA,UAIgBJ,GAAG,GAAGI,EAAE,CAAE,CAAF,CAJxB;AAAA,UAI+BD,GAAG,GAAGC,EAAE,CAAE,EAAF,CAJvC;AAAA,UAI+Cue,GAAG,GAAGve,EAAE,CAAE,EAAF,CAJvD;AAAA,UAKCke,GAAG,GAAGle,EAAE,CAAE,EAAF,CALT;AAAA,UAKiBme,GAAG,GAAGne,EAAE,CAAE,EAAF,CALzB;AAAA,UAKiCoe,GAAG,GAAGpe,EAAE,CAAE,EAAF,CALzC;AAAA,UAKiDwe,GAAG,GAAGxe,EAAE,CAAE,EAAF,CALzD;AAAA,UAOC+B,GAAG,GAAGnC,GAAG,GAAGwe,GAAN,GAAYE,GAAZ,GAAkBH,GAAG,GAAGpe,GAAN,GAAYue,GAA9B,GAAoCH,GAAG,GAAGre,GAAN,GAAYye,GAAhD,GAAsD5e,GAAG,GAAGye,GAAN,GAAYG,GAAlE,GAAwE3e,GAAG,GAAGE,GAAN,GAAY0e,GAApF,GAA0F7e,GAAG,GAAGI,GAAN,GAAYye,GAP7G;AAAA,UAQCxc,GAAG,GAAGkc,GAAG,GAAGne,GAAN,GAAYue,GAAZ,GAAkB7e,GAAG,GAAG2e,GAAN,GAAYE,GAA9B,GAAoCJ,GAAG,GAAGpe,GAAN,GAAYye,GAAhD,GAAsD/e,GAAG,GAAG4e,GAAN,GAAYG,GAAlE,GAAwE9e,GAAG,GAAGK,GAAN,GAAY0e,GAApF,GAA0Fhf,GAAG,GAAGO,GAAN,GAAYye,GAR7G;AAAA,UASCvc,GAAG,GAAGxC,GAAG,GAAG0e,GAAN,GAAYG,GAAZ,GAAkBJ,GAAG,GAAGte,GAAN,GAAY0e,GAA9B,GAAoCJ,GAAG,GAAGve,GAAN,GAAY4e,GAAhD,GAAsD/e,GAAG,GAAG2e,GAAN,GAAYI,GAAlE,GAAwE9e,GAAG,GAAGE,GAAN,GAAY6e,GAApF,GAA0Fhf,GAAG,GAAGI,GAAN,GAAY4e,GAT7G;AAAA,UAUCkC,GAAG,GAAGxC,GAAG,GAAGte,GAAN,GAAYE,GAAZ,GAAkBL,GAAG,GAAG0e,GAAN,GAAYre,GAA9B,GAAoCoe,GAAG,GAAGve,GAAN,GAAYI,GAAhD,GAAsDP,GAAG,GAAG2e,GAAN,GAAYpe,GAAlE,GAAwEN,GAAG,GAAGE,GAAN,GAAYye,GAApF,GAA0F5e,GAAG,GAAGI,GAAN,GAAYwe,GAV7G;AAYA,UAAMlc,GAAG,GAAG3C,GAAG,GAAGwC,GAAN,GAAYrC,GAAG,GAAGsC,GAAlB,GAAwBnC,GAAG,GAAGoC,GAA9B,GAAoCoc,GAAG,GAAGqC,GAAtD;AAEA,UAAKxe,GAAG,KAAK,CAAb,EAAiB,OAAO,KAAK/F,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAP;AAEjB,UAAMgG,MAAM,GAAG,IAAID,GAAnB;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,GAAG,GAAGI,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEme,GAAG,GAAGpe,GAAN,GAAYse,GAAZ,GAAkBze,GAAG,GAAGwe,GAAN,GAAYC,GAA9B,GAAoCF,GAAG,GAAGte,GAAN,GAAY0e,GAAhD,GAAsD7e,GAAG,GAAG0e,GAAN,GAAYG,GAAlE,GAAwE3e,GAAG,GAAGC,GAAN,GAAY2e,GAApF,GAA0F9e,GAAG,GAAGK,GAAN,GAAYye,GAAxG,IAAgHrc,MAA1H;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEL,GAAG,GAAGye,GAAN,GAAYC,GAAZ,GAAkBF,GAAG,GAAGre,GAAN,GAAYue,GAA9B,GAAoCF,GAAG,GAAGte,GAAN,GAAYye,GAAhD,GAAsD5e,GAAG,GAAG0e,GAAN,GAAYE,GAAlE,GAAwE3e,GAAG,GAAGE,GAAN,GAAY2e,GAApF,GAA0F9e,GAAG,GAAGI,GAAN,GAAY0e,GAAxG,IAAgHrc,MAA1H;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEJ,GAAG,GAAGE,GAAN,GAAYue,GAAZ,GAAkB1e,GAAG,GAAGI,GAAN,GAAYse,GAA9B,GAAoCze,GAAG,GAAGC,GAAN,GAAYye,GAAhD,GAAsD5e,GAAG,GAAGK,GAAN,GAAYue,GAAlE,GAAwE3e,GAAG,GAAGE,GAAN,GAAY0e,GAApF,GAA0F7e,GAAG,GAAGI,GAAN,GAAYye,GAAxG,IAAgHpc,MAA1H;AAEAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgC,GAAG,GAAGG,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEP,GAAG,GAAG2e,GAAN,GAAYC,GAAZ,GAAkBH,GAAG,GAAGne,GAAN,GAAYse,GAA9B,GAAoCH,GAAG,GAAGre,GAAN,GAAY0e,GAAhD,GAAsDhf,GAAG,GAAG6e,GAAN,GAAYG,GAAlE,GAAwE9e,GAAG,GAAGI,GAAN,GAAY2e,GAApF,GAA0Fjf,GAAG,GAAGQ,GAAN,GAAYye,GAAxG,IAAgHrc,MAA1H;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEke,GAAG,GAAGpe,GAAN,GAAYue,GAAZ,GAAkB7e,GAAG,GAAG4e,GAAN,GAAYC,GAA9B,GAAoCH,GAAG,GAAGre,GAAN,GAAYye,GAAhD,GAAsD/e,GAAG,GAAG6e,GAAN,GAAYE,GAAlE,GAAwE9e,GAAG,GAAGK,GAAN,GAAY2e,GAApF,GAA0Fjf,GAAG,GAAGO,GAAN,GAAY0e,GAAxG,IAAgHrc,MAA1H;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAER,GAAG,GAAGO,GAAN,GAAYse,GAAZ,GAAkB5e,GAAG,GAAGK,GAAN,GAAYue,GAA9B,GAAoC5e,GAAG,GAAGI,GAAN,GAAYye,GAAhD,GAAsD/e,GAAG,GAAGQ,GAAN,GAAYue,GAAlE,GAAwE9e,GAAG,GAAGK,GAAN,GAAY0e,GAApF,GAA0Fhf,GAAG,GAAGO,GAAN,GAAYye,GAAxG,IAAgHpc,MAA1H;AAEAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUiC,GAAG,GAAGE,MAAhB;AACAnC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEke,GAAG,GAAGte,GAAN,GAAYye,GAAZ,GAAkB5e,GAAG,GAAG0e,GAAN,GAAYE,GAA9B,GAAoCH,GAAG,GAAGxe,GAAN,GAAY6e,GAAhD,GAAsDhf,GAAG,GAAG4e,GAAN,GAAYI,GAAlE,GAAwE9e,GAAG,GAAGC,GAAN,GAAY8e,GAApF,GAA0Fjf,GAAG,GAAGK,GAAN,GAAY4e,GAAxG,IAAgHrc,MAA1H;AACAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAER,GAAG,GAAG2e,GAAN,GAAYE,GAAZ,GAAkBH,GAAG,GAAGve,GAAN,GAAY0e,GAA9B,GAAoCH,GAAG,GAAGxe,GAAN,GAAY4e,GAAhD,GAAsD/e,GAAG,GAAG4e,GAAN,GAAYG,GAAlE,GAAwE9e,GAAG,GAAGE,GAAN,GAAY8e,GAApF,GAA0Fjf,GAAG,GAAGI,GAAN,GAAY6e,GAAxG,IAAgHrc,MAA3H;AACAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEP,GAAG,GAAGE,GAAN,GAAY0e,GAAZ,GAAkB7e,GAAG,GAAGI,GAAN,GAAYye,GAA9B,GAAoC5e,GAAG,GAAGC,GAAN,GAAY4e,GAAhD,GAAsD/e,GAAG,GAAGK,GAAN,GAAY0e,GAAlE,GAAwE9e,GAAG,GAAGE,GAAN,GAAY6e,GAApF,GAA0Fhf,GAAG,GAAGI,GAAN,GAAY4e,GAAxG,IAAgHpc,MAA3H;AAEAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW0gB,GAAG,GAAGve,MAAjB;AACAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEP,GAAG,GAAG0e,GAAN,GAAYte,GAAZ,GAAkBqe,GAAG,GAAGte,GAAN,GAAYC,GAA9B,GAAoCqe,GAAG,GAAGxe,GAAN,GAAYK,GAAhD,GAAsDR,GAAG,GAAG4e,GAAN,GAAYpe,GAAlE,GAAwEN,GAAG,GAAGC,GAAN,GAAY0e,GAApF,GAA0F7e,GAAG,GAAGK,GAAN,GAAYwe,GAAxG,IAAgHjc,MAA3H;AACAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEke,GAAG,GAAGve,GAAN,GAAYE,GAAZ,GAAkBL,GAAG,GAAG2e,GAAN,GAAYte,GAA9B,GAAoCqe,GAAG,GAAGxe,GAAN,GAAYI,GAAhD,GAAsDP,GAAG,GAAG4e,GAAN,GAAYre,GAAlE,GAAwEN,GAAG,GAAGE,GAAN,GAAY0e,GAApF,GAA0F7e,GAAG,GAAGI,GAAN,GAAYye,GAAxG,IAAgHjc,MAA3H;AACAnC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAER,GAAG,GAAGI,GAAN,GAAYC,GAAZ,GAAkBJ,GAAG,GAAGE,GAAN,GAAYE,GAA9B,GAAoCJ,GAAG,GAAGC,GAAN,GAAYI,GAAhD,GAAsDP,GAAG,GAAGK,GAAN,GAAYE,GAAlE,GAAwEN,GAAG,GAAGE,GAAN,GAAYK,GAApF,GAA0FR,GAAG,GAAGI,GAAN,GAAYI,GAAxG,IAAgHoC,MAA3H;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO1E,CAAP,EAAW;AAEV,UAAMuC,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMlF,CAAC,GAAG4E,CAAC,CAAC5E,CAAZ;AAAA,UAAeM,CAAC,GAAGsE,CAAC,CAACtE,CAArB;AAAA,UAAwB4S,CAAC,GAAGtO,CAAC,CAACsO,CAA9B;AAEA/L,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAWnH,CAAX;AAAcmH,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW7G,CAAX;AAAc6G,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW+L,CAAX;AAC5B/L,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAWnH,CAAX;AAAcmH,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW7G,CAAX;AAAc6G,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW+L,CAAX;AAC5B/L,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAWnH,CAAX;AAAcmH,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW7G,CAAX;AAAc6G,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY+L,CAAZ;AAC5B/L,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAWnH,CAAX;AAAcmH,MAAAA,EAAE,CAAE,CAAF,CAAF,IAAW7G,CAAX;AAAc6G,MAAAA,EAAE,CAAE,EAAF,CAAF,IAAY+L,CAAZ;AAE5B,aAAO,IAAP;AAEA;;;WAED,6BAAoB;AAEnB,UAAM/L,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAM4iB,QAAQ,GAAG3gB,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAArE;AACA,UAAM4gB,QAAQ,GAAG5gB,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAArE;AACA,UAAM6gB,QAAQ,GAAG7gB,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,EAAF,CAAF,GAAWA,EAAE,CAAE,EAAF,CAAtE;AAEA,aAAOtI,IAAI,CAACyG,IAAL,CAAWzG,IAAI,CAACc,GAAL,CAAUmoB,QAAV,EAAoBC,QAApB,EAA8BC,QAA9B,CAAX,CAAP;AAEA;;;WAED,yBAAiBhoB,CAAjB,EAAoBM,CAApB,EAAuB4S,CAAvB,EAA2B;AAE1B,WAAK5P,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEUtD,CAFV,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGUM,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU4S,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,uBAAe9I,KAAf,EAAuB;AAEtB,UAAM1H,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAV;AAAA,UAA6B3I,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAjC;AAEA,WAAK9G,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGIZ,CAHJ,EAGO,CAAEjB,CAHT,EAGY,CAHZ,EAIC,CAJD,EAIIA,CAJJ,EAIOiB,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,uBAAe0H,KAAf,EAAuB;AAEtB,UAAM1H,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAV;AAAA,UAA6B3I,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAjC;AAEA,WAAK9G,GAAL,CAEEZ,CAFF,EAEK,CAFL,EAEQjB,CAFR,EAEW,CAFX,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAGW,CAHX,EAIC,CAAEA,CAJH,EAIM,CAJN,EAISiB,CAJT,EAIY,CAJZ,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAKW,CALX;AASA,aAAO,IAAP;AAEA;;;WAED,uBAAe0H,KAAf,EAAuB;AAEtB,UAAM1H,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAV;AAAA,UAA6B3I,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAjC;AAEA,WAAK9G,GAAL,CAECZ,CAFD,EAEI,CAAEjB,CAFN,EAES,CAFT,EAEY,CAFZ,EAGCA,CAHD,EAGIiB,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,0BAAkByU,IAAlB,EAAwB5R,KAAxB,EAAgC;AAE/B;AAEA,UAAM7C,CAAC,GAAG7D,IAAI,CAAC+D,GAAL,CAAU2C,KAAV,CAAV;AACA,UAAM9D,CAAC,GAAG5C,IAAI,CAACgE,GAAL,CAAU0C,KAAV,CAAV;AACA,UAAM/E,CAAC,GAAG,IAAIkC,CAAd;AACA,UAAM1C,CAAC,GAAGmX,IAAI,CAACnX,CAAf;AAAA,UAAkBM,CAAC,GAAG6W,IAAI,CAAC7W,CAA3B;AAAA,UAA8B4S,CAAC,GAAGiE,IAAI,CAACjE,CAAvC;AACA,UAAMrJ,EAAE,GAAGrJ,CAAC,GAAGR,CAAf;AAAA,UAAkB8J,EAAE,GAAGtJ,CAAC,GAAGF,CAA3B;AAEA,WAAKgD,GAAL,CAECuG,EAAE,GAAG7J,CAAL,GAAS0C,CAFV,EAEamH,EAAE,GAAGvJ,CAAL,GAASmB,CAAC,GAAGyR,CAF1B,EAE6BrJ,EAAE,GAAGqJ,CAAL,GAASzR,CAAC,GAAGnB,CAF1C,EAE6C,CAF7C,EAGCuJ,EAAE,GAAGvJ,CAAL,GAASmB,CAAC,GAAGyR,CAHd,EAGiBpJ,EAAE,GAAGxJ,CAAL,GAASoC,CAH1B,EAG6BoH,EAAE,GAAGoJ,CAAL,GAASzR,CAAC,GAAGzB,CAH1C,EAG6C,CAH7C,EAIC6J,EAAE,GAAGqJ,CAAL,GAASzR,CAAC,GAAGnB,CAJd,EAIiBwJ,EAAE,GAAGoJ,CAAL,GAASzR,CAAC,GAAGzB,CAJ9B,EAIiCQ,CAAC,GAAG0S,CAAJ,GAAQA,CAAR,GAAYxQ,CAJ7C,EAIgD,CAJhD,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,mBAAW1C,CAAX,EAAcM,CAAd,EAAiB4S,CAAjB,EAAqB;AAEpB,WAAK5P,GAAL,CAECtD,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGIM,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO4S,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,mBAAWiB,EAAX,EAAeC,EAAf,EAAmB6T,EAAnB,EAAuB5T,EAAvB,EAA2B6T,EAA3B,EAA+BC,EAA/B,EAAoC;AAEnC,WAAK7kB,GAAL,CAEC,CAFD,EAEI2kB,EAFJ,EAEQC,EAFR,EAEY,CAFZ,EAGC/T,EAHD,EAGK,CAHL,EAGQgU,EAHR,EAGY,CAHZ,EAIC/T,EAJD,EAIKC,EAJL,EAIS,CAJT,EAIY,CAJZ,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,aAAO,IAAP;AAEA;;;WAED,iBAAS2K,QAAT,EAAmBtI,UAAnB,EAA+B0R,KAA/B,EAAuC;AAEtC,UAAMjhB,EAAE,GAAG,KAAKjC,QAAhB;AAEA,UAAMlF,CAAC,GAAG0W,UAAU,CAACL,EAArB;AAAA,UAAyB/V,CAAC,GAAGoW,UAAU,CAACJ,EAAxC;AAAA,UAA4CpD,CAAC,GAAGwD,UAAU,CAACH,EAA3D;AAAA,UAA+D1R,CAAC,GAAG6R,UAAU,CAACF,EAA9E;AACA,UAAM6R,EAAE,GAAGroB,CAAC,GAAGA,CAAf;AAAA,UAAkBsoB,EAAE,GAAGhoB,CAAC,GAAGA,CAA3B;AAAA,UAA8BioB,EAAE,GAAGrV,CAAC,GAAGA,CAAvC;AACA,UAAMc,EAAE,GAAGhU,CAAC,GAAGqoB,EAAf;AAAA,UAAmBlU,EAAE,GAAGnU,CAAC,GAAGsoB,EAA5B;AAAA,UAAgClU,EAAE,GAAGpU,CAAC,GAAGuoB,EAAzC;AACA,UAAMtU,EAAE,GAAG3T,CAAC,GAAGgoB,EAAf;AAAA,UAAmBjU,EAAE,GAAG/T,CAAC,GAAGioB,EAA5B;AAAA,UAAgCrU,EAAE,GAAGhB,CAAC,GAAGqV,EAAzC;AACA,UAAMC,EAAE,GAAG3jB,CAAC,GAAGwjB,EAAf;AAAA,UAAmBI,EAAE,GAAG5jB,CAAC,GAAGyjB,EAA5B;AAAA,UAAgCI,EAAE,GAAG7jB,CAAC,GAAG0jB,EAAzC;AAEA,UAAMxe,EAAE,GAAGqe,KAAK,CAACpoB,CAAjB;AAAA,UAAoBgK,EAAE,GAAGoe,KAAK,CAAC9nB,CAA/B;AAAA,UAAkC8c,EAAE,GAAGgL,KAAK,CAAClV,CAA7C;AAEA/L,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE,KAAM8M,EAAE,GAAGC,EAAX,CAAF,IAAsBnK,EAAhC;AACA5C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEgN,EAAE,GAAGuU,EAAP,IAAc3e,EAAxB;AACA5C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEiN,EAAE,GAAGqU,EAAP,IAAc1e,EAAxB;AACA5C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEgN,EAAE,GAAGuU,EAAP,IAAc1e,EAAxB;AACA7C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE,KAAM6M,EAAE,GAAGE,EAAX,CAAF,IAAsBlK,EAAhC;AACA7C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEkN,EAAE,GAAGmU,EAAP,IAAcxe,EAAxB;AACA7C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEiN,EAAE,GAAGqU,EAAP,IAAcrL,EAAxB;AACAjW,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEkN,EAAE,GAAGmU,EAAP,IAAcpL,EAAxB;AACAjW,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,KAAM6M,EAAE,GAAGC,EAAX,CAAF,IAAsBmJ,EAAjC;AACAjW,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEAA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW6X,QAAQ,CAAChf,CAApB;AACAmH,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW6X,QAAQ,CAAC1e,CAApB;AACA6G,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW6X,QAAQ,CAAC9L,CAApB;AACA/L,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW6X,QAAX,EAAqBtI,UAArB,EAAiC0R,KAAjC,EAAyC;AAExC,UAAMjhB,EAAE,GAAG,KAAKjC,QAAhB;;AAEA,UAAI6E,EAAE,GAAG8b,KAAK,CAACviB,GAAN,CAAW6D,EAAE,CAAE,CAAF,CAAb,EAAoBA,EAAE,CAAE,CAAF,CAAtB,EAA6BA,EAAE,CAAE,CAAF,CAA/B,EAAuC3I,MAAvC,EAAT;;AACA,UAAMwL,EAAE,GAAG6b,KAAK,CAACviB,GAAN,CAAW6D,EAAE,CAAE,CAAF,CAAb,EAAoBA,EAAE,CAAE,CAAF,CAAtB,EAA6BA,EAAE,CAAE,CAAF,CAA/B,EAAuC3I,MAAvC,EAAX;;AACA,UAAM4e,EAAE,GAAGyI,KAAK,CAACviB,GAAN,CAAW6D,EAAE,CAAE,CAAF,CAAb,EAAoBA,EAAE,CAAE,CAAF,CAAtB,EAA6BA,EAAE,CAAE,EAAF,CAA/B,EAAwC3I,MAAxC,EAAX,CANwC,CAQxC;;;AACA,UAAM6K,GAAG,GAAG,KAAKsf,WAAL,EAAZ;AACA,UAAKtf,GAAG,GAAG,CAAX,EAAeU,EAAE,GAAG,CAAEA,EAAP;AAEfiV,MAAAA,QAAQ,CAAChf,CAAT,GAAamH,EAAE,CAAE,EAAF,CAAf;AACA6X,MAAAA,QAAQ,CAAC1e,CAAT,GAAa6G,EAAE,CAAE,EAAF,CAAf;AACA6X,MAAAA,QAAQ,CAAC9L,CAAT,GAAa/L,EAAE,CAAE,EAAF,CAAf,CAdwC,CAgBxC;;AACAyhB,MAAAA,KAAK,CAACjc,IAAN,CAAY,IAAZ;;AAEA,UAAMkc,KAAK,GAAG,IAAI9e,EAAlB;AACA,UAAM+e,KAAK,GAAG,IAAI9e,EAAlB;AACA,UAAM+e,KAAK,GAAG,IAAI3L,EAAlB;AAEAwL,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB2jB,KAAvB;AACAD,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB2jB,KAAvB;AACAD,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB2jB,KAAvB;AAEAD,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB4jB,KAAvB;AACAF,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB4jB,KAAvB;AACAF,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB4jB,KAAvB;AAEAF,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB6jB,KAAvB;AACAH,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,CAAhB,KAAuB6jB,KAAvB;AACAH,MAAAA,KAAK,CAAC1jB,QAAN,CAAgB,EAAhB,KAAwB6jB,KAAxB;AAEArS,MAAAA,UAAU,CAACsS,qBAAX,CAAkCJ,KAAlC;AAEAR,MAAAA,KAAK,CAACpoB,CAAN,GAAU+J,EAAV;AACAqe,MAAAA,KAAK,CAAC9nB,CAAN,GAAU0J,EAAV;AACAoe,MAAAA,KAAK,CAAClV,CAAN,GAAUkK,EAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiB6L,IAAjB,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,GAAjD,EAAuD;AAEtD,UAAKA,GAAG,KAAK3rB,SAAb,EAAyB;AAExB4F,QAAAA,OAAO,CAACC,IAAR,CAAc,sGAAd;AAEA;;AAED,UAAM2D,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMlF,CAAC,GAAG,IAAIqpB,IAAJ,IAAaH,KAAK,GAAGD,IAArB,CAAV;AACA,UAAM3oB,CAAC,GAAG,IAAI+oB,IAAJ,IAAaF,GAAG,GAAGC,MAAnB,CAAV;AAEA,UAAM5mB,CAAC,GAAG,CAAE0mB,KAAK,GAAGD,IAAV,KAAqBC,KAAK,GAAGD,IAA7B,CAAV;AACA,UAAMxmB,CAAC,GAAG,CAAE0mB,GAAG,GAAGC,MAAR,KAAqBD,GAAG,GAAGC,MAA3B,CAAV;AACA,UAAM1mB,CAAC,GAAG,EAAI4mB,GAAG,GAAGD,IAAV,KAAqBC,GAAG,GAAGD,IAA3B,CAAV;AACA,UAAMvgB,CAAC,GAAG,CAAE,CAAF,GAAMwgB,GAAN,GAAYD,IAAZ,IAAqBC,GAAG,GAAGD,IAA3B,CAAV;AAEAliB,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUnH,CAAV;AAAamH,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU3E,CAAV;AAAa2E,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACvCA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU7G,CAAV;AAAa6G,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU1E,CAAV;AAAa0E,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACvCA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWzE,CAAX;AAAcyE,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW2B,CAAX;AACxC3B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,CAAb;AAAgBA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAE1C,aAAO,IAAP;AAEA;;;WAED,0BAAkB8hB,IAAlB,EAAwBC,KAAxB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,GAAlD,EAAwD;AAEvD,UAAMniB,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAML,CAAC,GAAG,OAAQqkB,KAAK,GAAGD,IAAhB,CAAV;AACA,UAAMhgB,CAAC,GAAG,OAAQkgB,GAAG,GAAGC,MAAd,CAAV;AACA,UAAM/c,CAAC,GAAG,OAAQid,GAAG,GAAGD,IAAd,CAAV;AAEA,UAAMrpB,CAAC,GAAG,CAAEkpB,KAAK,GAAGD,IAAV,IAAmBpkB,CAA7B;AACA,UAAMvE,CAAC,GAAG,CAAE6oB,GAAG,GAAGC,MAAR,IAAmBngB,CAA7B;AACA,UAAMiK,CAAC,GAAG,CAAEoW,GAAG,GAAGD,IAAR,IAAiBhd,CAA3B;AAEAlF,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,IAAItC,CAAd;AAAiBsC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEnH,CAAb;AAC3CmH,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,IAAI8B,CAAd;AAAiB9B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE7G,CAAb;AAC3C6G,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,CAAF,GAAMkF,CAAjB;AAAoBlF,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE+L,CAAb;AAC9C/L,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAAcA,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAExC,aAAO,IAAP;AAEA;;;WAED,gBAAQkD,MAAR,EAAiB;AAEhB,UAAMlD,EAAE,GAAG,KAAKjC,QAAhB;AACA,UAAMkC,EAAE,GAAGiD,MAAM,CAACnF,QAAlB;;AAEA,WAAM,IAAI5G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAAgC;AAE/B,YAAK6I,EAAE,CAAE7I,CAAF,CAAF,KAAY8I,EAAE,CAAE9I,CAAF,CAAnB,EAA2B,OAAO,KAAP;AAE3B;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAWF,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;;AAE9B,WAAM,IAAIzH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAAgC;AAE/B,aAAK4G,QAAL,CAAe5G,CAAf,IAAqBF,KAAK,CAAEE,CAAC,GAAGyH,MAAN,CAA1B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzB3H,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC,UAAMoB,EAAE,GAAG,KAAKjC,QAAhB;AAEA9G,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkBoB,EAAE,CAAE,CAAF,CAApB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AAEA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AAEA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsBoB,EAAE,CAAE,CAAF,CAAxB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AAEA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AACA/I,MAAAA,KAAK,CAAE2H,MAAM,GAAG,EAAX,CAAL,GAAuBoB,EAAE,CAAE,EAAF,CAAzB;AAEA,aAAO/I,KAAP;AAEA;;;;;;AAIF,IAAMynB,KAAK,GAAG,aAAc,IAAInL,OAAJ,EAA5B;;AACA,IAAMkO,KAAK,GAAG,aAAc,IAAIzD,OAAJ,EAA5B;;AACA,IAAMwB,KAAK,GAAG,aAAc,IAAIjM,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA5B;;AACA,IAAMkM,IAAI,GAAG,aAAc,IAAIlM,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA3B;;AACA,IAAMrE,EAAE,GAAG,aAAc,IAAIqE,OAAJ,EAAzB;;AACA,IAAMpE,EAAE,GAAG,aAAc,IAAIoE,OAAJ,EAAzB;;AACA,IAAMnE,EAAE,GAAG,aAAc,IAAImE,OAAJ,EAAzB;;AAEA,IAAM6O,SAAS,GAAG,aAAc,IAAIpE,OAAJ,EAAhC;;AACA,IAAMqE,aAAa,GAAG,aAAc,IAAIrT,UAAJ,EAApC;;IAEMsT,K;AAEL,mBAA+D;AAAA,QAAlDzpB,CAAkD,uEAA9C,CAA8C;AAAA,QAA3CM,CAA2C,uEAAvC,CAAuC;AAAA,QAApC4S,CAAoC,uEAAhC,CAAgC;AAAA,QAA7BvQ,KAA6B,uEAArB8mB,KAAK,CAACC,YAAe;;AAAA;;AAE9D,SAAK7S,OAAL,GAAe,IAAf;AAEA,SAAKR,EAAL,GAAUrW,CAAV;AACA,SAAKsW,EAAL,GAAUhW,CAAV;AACA,SAAKiW,EAAL,GAAUrD,CAAV;AACA,SAAK4D,MAAL,GAAcnU,KAAd;AAEA;;;;SAED,eAAQ;AAEP,aAAO,KAAK0T,EAAZ;AAEA,K;SAED,aAAO5W,KAAP,EAAe;AAEd,WAAK4W,EAAL,GAAU5W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAQ;AAEP,aAAO,KAAKH,EAAZ;AAEA,K;SAED,aAAO7W,KAAP,EAAe;AAEd,WAAK6W,EAAL,GAAU7W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAQ;AAEP,aAAO,KAAKF,EAAZ;AAEA,K;SAED,aAAO9W,KAAP,EAAe;AAEd,WAAK8W,EAAL,GAAU9W,KAAV;;AACA,WAAKgX,iBAAL;AAEA;;;SAED,eAAY;AAEX,aAAO,KAAKK,MAAZ;AAEA,K;SAED,aAAWrX,KAAX,EAAmB;AAElB,WAAKqX,MAAL,GAAcrX,KAAd;;AACA,WAAKgX,iBAAL;AAEA;;;WAED,aAAKzW,CAAL,EAAQM,CAAR,EAAW4S,CAAX,EAAoC;AAAA,UAAtBvQ,KAAsB,uEAAd,KAAKmU,MAAS;AAEnC,WAAKT,EAAL,GAAUrW,CAAV;AACA,WAAKsW,EAAL,GAAUhW,CAAV;AACA,WAAKiW,EAAL,GAAUrD,CAAV;AACA,WAAK4D,MAAL,GAAcnU,KAAd;;AAEA,WAAK8T,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK/S,WAAT,CAAsB,KAAK2S,EAA3B,EAA+B,KAAKC,EAApC,EAAwC,KAAKC,EAA7C,EAAiD,KAAKO,MAAtD,CAAP;AAEA;;;WAED,cAAMH,KAAN,EAAc;AAEb,WAAKN,EAAL,GAAUM,KAAK,CAACN,EAAhB;AACA,WAAKC,EAAL,GAAUK,KAAK,CAACL,EAAhB;AACA,WAAKC,EAAL,GAAUI,KAAK,CAACJ,EAAhB;AACA,WAAKO,MAAL,GAAcH,KAAK,CAACG,MAApB;;AAEA,WAAKL,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuB3W,CAAvB,EAA+D;AAAA,UAArC6C,KAAqC,uEAA7B,KAAKmU,MAAwB;AAAA,UAAhBF,MAAgB,uEAAP,IAAO;AAE9D;AAEA,UAAMzP,EAAE,GAAGrH,CAAC,CAACoF,QAAb;AACA,UAAMqO,GAAG,GAAGpM,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBqM,GAAG,GAAGrM,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCsM,GAAG,GAAGtM,EAAE,CAAE,CAAF,CAA5C;AACA,UAAMuM,GAAG,GAAGvM,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBwM,GAAG,GAAGxM,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCyM,GAAG,GAAGzM,EAAE,CAAE,CAAF,CAA5C;AACA,UAAM0M,GAAG,GAAG1M,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB2M,GAAG,GAAG3M,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC4M,GAAG,GAAG5M,EAAE,CAAE,EAAF,CAA5C;;AAEA,cAASxE,KAAT;AAEC,aAAK,KAAL;AAEC,eAAK2T,EAAL,GAAUzX,IAAI,CAAC8qB,IAAL,CAAWnqB,KAAK,CAAEiU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAhB,CAAV;;AAEA,cAAK5U,IAAI,CAACiC,GAAL,CAAU2S,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAK4C,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAY,CAAEoO,GAAd,EAAmBG,GAAnB,CAAV;AACA,iBAAKwC,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAY,CAAEgO,GAAd,EAAmBD,GAAnB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK8C,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAYsO,GAAZ,EAAiBH,GAAjB,CAAV;AACA,iBAAK4C,EAAL,GAAU,CAAV;AAEA;;AAED;;AAED,aAAK,KAAL;AAEC,eAAKF,EAAL,GAAUxX,IAAI,CAAC8qB,IAAL,CAAW,CAAEnqB,KAAK,CAAEoU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAlB,CAAV;;AAEA,cAAK/U,IAAI,CAACiC,GAAL,CAAU8S,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAK0C,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAYiO,GAAZ,EAAiBM,GAAjB,CAAV;AACA,iBAAKwC,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAYkO,GAAZ,EAAiBC,GAAjB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK2C,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAY,CAAEqO,GAAd,EAAmBN,GAAnB,CAAV;AACA,iBAAKgD,EAAL,GAAU,CAAV;AAEA;;AAED;;AAED,aAAK,KAAL;AAEC,eAAKF,EAAL,GAAUxX,IAAI,CAAC8qB,IAAL,CAAWnqB,KAAK,CAAEsU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAhB,CAAV;;AAEA,cAAKjV,IAAI,CAACiC,GAAL,CAAUgT,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAKwC,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAY,CAAEqO,GAAd,EAAmBE,GAAnB,CAAV;AACA,iBAAKwC,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAY,CAAEgO,GAAd,EAAmBG,GAAnB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK2C,EAAL,GAAU,CAAV;AACA,iBAAKC,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAYkO,GAAZ,EAAiBH,GAAjB,CAAV;AAEA;;AAED;;AAED,aAAK,KAAL;AAEC,eAAK+C,EAAL,GAAUzX,IAAI,CAAC8qB,IAAL,CAAW,CAAEnqB,KAAK,CAAEqU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAlB,CAAV;;AAEA,cAAKhV,IAAI,CAACiC,GAAL,CAAU+S,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAKwC,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAYsO,GAAZ,EAAiBC,GAAjB,CAAV;AACA,iBAAKwC,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAYkO,GAAZ,EAAiBH,GAAjB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK8C,EAAL,GAAU,CAAV;AACA,iBAAKE,EAAL,GAAU1X,IAAI,CAAC2G,KAAL,CAAY,CAAEgO,GAAd,EAAmBG,GAAnB,CAAV;AAEA;;AAED;;AAED,aAAK,KAAL;AAEC,eAAK4C,EAAL,GAAU1X,IAAI,CAAC8qB,IAAL,CAAWnqB,KAAK,CAAEkU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAhB,CAAV;;AAEA,cAAK7U,IAAI,CAACiC,GAAL,CAAU4S,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAK2C,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAY,CAAEoO,GAAd,EAAmBD,GAAnB,CAAV;AACA,iBAAK2C,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAY,CAAEqO,GAAd,EAAmBN,GAAnB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK8C,EAAL,GAAU,CAAV;AACA,iBAAKC,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAYiO,GAAZ,EAAiBM,GAAjB,CAAV;AAEA;;AAED;;AAED,aAAK,KAAL;AAEC,eAAKwC,EAAL,GAAU1X,IAAI,CAAC8qB,IAAL,CAAW,CAAEnqB,KAAK,CAAEgU,GAAF,EAAO,CAAE,CAAT,EAAY,CAAZ,CAAlB,CAAV;;AAEA,cAAK3U,IAAI,CAACiC,GAAL,CAAU0S,GAAV,IAAkB,SAAvB,EAAmC;AAElC,iBAAK6C,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAYsO,GAAZ,EAAiBH,GAAjB,CAAV;AACA,iBAAK2C,EAAL,GAAUzX,IAAI,CAAC2G,KAAL,CAAYiO,GAAZ,EAAiBF,GAAjB,CAAV;AAEA,WALD,MAKO;AAEN,iBAAK8C,EAAL,GAAUxX,IAAI,CAAC2G,KAAL,CAAY,CAAEoO,GAAd,EAAmBG,GAAnB,CAAV;AACA,iBAAKuC,EAAL,GAAU,CAAV;AAEA;;AAED;;AAED;AAEC/S,UAAAA,OAAO,CAACC,IAAR,CAAc,yEAAyEb,KAAvF;AAhHF;;AAoHA,WAAKmU,MAAL,GAAcnU,KAAd;AAEA,UAAKiU,MAAM,KAAK,IAAhB,EAAuB,KAAKH,iBAAL;AAEvB,aAAO,IAAP;AAEA;;;WAED,2BAAmBlU,CAAnB,EAAsBI,KAAtB,EAA6BiU,MAA7B,EAAsC;AAErC2S,MAAAA,SAAS,CAACK,0BAAV,CAAsCrnB,CAAtC;;AAEA,aAAO,KAAKymB,qBAAL,CAA4BO,SAA5B,EAAuC5mB,KAAvC,EAA8CiU,MAA9C,CAAP;AAEA;;;WAED,wBAAgBhS,CAAhB,EAAyC;AAAA,UAAtBjC,KAAsB,uEAAd,KAAKmU,MAAS;AAExC,aAAO,KAAKxT,GAAL,CAAUsB,CAAC,CAAC5E,CAAZ,EAAe4E,CAAC,CAACtE,CAAjB,EAAoBsE,CAAC,CAACsO,CAAtB,EAAyBvQ,KAAzB,CAAP;AAEA;;;WAED,iBAASknB,QAAT,EAAoB;AAEnB;AAEAL,MAAAA,aAAa,CAACzO,YAAd,CAA4B,IAA5B;;AAEA,aAAO,KAAK+O,iBAAL,CAAwBN,aAAxB,EAAuCK,QAAvC,CAAP;AAEA;;;WAED,gBAAQlT,KAAR,EAAgB;AAEf,aAASA,KAAK,CAACN,EAAN,KAAa,KAAKA,EAApB,IAA8BM,KAAK,CAACL,EAAN,KAAa,KAAKA,EAAhD,IAA0DK,KAAK,CAACJ,EAAN,KAAa,KAAKA,EAA5E,IAAsFI,KAAK,CAACG,MAAN,KAAiB,KAAKA,MAAnH;AAEA;;;WAED,mBAAW1Y,KAAX,EAAmB;AAElB,WAAKiY,EAAL,GAAUjY,KAAK,CAAE,CAAF,CAAf;AACA,WAAKkY,EAAL,GAAUlY,KAAK,CAAE,CAAF,CAAf;AACA,WAAKmY,EAAL,GAAUnY,KAAK,CAAE,CAAF,CAAf;AACA,UAAKA,KAAK,CAAE,CAAF,CAAL,KAAeT,SAApB,EAAgC,KAAKmZ,MAAL,GAAc1Y,KAAK,CAAE,CAAF,CAAnB;;AAEhC,WAAKqY,iBAAL;;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzBrY,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC3H,MAAAA,KAAK,CAAE2H,MAAF,CAAL,GAAkB,KAAKsQ,EAAvB;AACAjY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKuQ,EAA3B;AACAlY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAKwQ,EAA3B;AACAnY,MAAAA,KAAK,CAAE2H,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAK+Q,MAA3B;AAEA,aAAO1Y,KAAP;AAEA;;;WAED,mBAAWib,QAAX,EAAsB;AAErB,WAAK5C,iBAAL,GAAyB4C,QAAzB;AAEA,aAAO,IAAP;AAEA;;;WAED,6BAAoB,CAAE;;SAEnBjT,MAAM,CAACC,Q;iDAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,qBAAM,KAAKgQ,EAAX;;AAFD;AAAA;AAGC,qBAAM,KAAKC,EAAX;;AAHD;AAAA;AAIC,qBAAM,KAAKC,EAAX;;AAJD;AAAA;AAKC,qBAAM,KAAKO,MAAX;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K,EASA;;;;WAEA,qBAAY;AAEXvT,MAAAA,OAAO,CAACkD,KAAR,CAAe,gFAAf;AAEA;;;;;;AAIFgjB,KAAK,CAACC,YAAN,GAAqB,KAArB;AACAD,KAAK,CAACM,cAAN,GAAuB,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,CAAvB;;IAEMC,M;AAEL,oBAAc;AAAA;;AAEb,SAAKC,IAAL,GAAY,IAAI,CAAhB;AAEA;;;;WAED,aAAKC,OAAL,EAAe;AAEd,WAAKD,IAAL,GAAY,CAAE,KAAKC,OAAL,GAAe,CAAjB,MAAyB,CAArC;AAEA;;;WAED,gBAAQA,OAAR,EAAkB;AAEjB,WAAKD,IAAL,IAAa,KAAKC,OAAL,GAAe,CAA5B;AAEA;;;WAED,qBAAY;AAEX,WAAKD,IAAL,GAAY,aAAa,CAAzB;AAEA;;;WAED,gBAAQC,OAAR,EAAkB;AAEjB,WAAKD,IAAL,IAAa,KAAKC,OAAL,GAAe,CAA5B;AAEA;;;WAED,iBAASA,OAAT,EAAmB;AAElB,WAAKD,IAAL,IAAa,EAAI,KAAKC,OAAL,GAAe,CAAnB,CAAb;AAEA;;;WAED,sBAAa;AAEZ,WAAKD,IAAL,GAAY,CAAZ;AAEA;;;WAED,cAAME,MAAN,EAAe;AAEd,aAAO,CAAE,KAAKF,IAAL,GAAYE,MAAM,CAACF,IAArB,MAAgC,CAAvC;AAEA;;;WAED,mBAAWC,OAAX,EAAqB;AAEpB,aAAO,CAAE,KAAKD,IAAL,IAAc,KAAKC,OAAL,GAAe,CAA7B,CAAF,MAAyC,CAAhD;AAEA;;;;;;AAIF,IAAIE,WAAW,GAAG,CAAlB;;AAEA,IAAMC,KAAK,GAAG,aAAc,IAAI3P,OAAJ,EAA5B;;AACA,IAAM4P,GAAG,GAAG,aAAc,IAAInU,UAAJ,EAA1B;;AACA,IAAMoU,KAAK,GAAG,aAAc,IAAIpF,OAAJ,EAA5B;;AACA,IAAMqF,OAAO,GAAG,aAAc,IAAI9P,OAAJ,EAA9B;;AAEA,IAAM+P,WAAW,GAAG,aAAc,IAAI/P,OAAJ,EAAlC;;AACA,IAAMgQ,QAAQ,GAAG,aAAc,IAAIhQ,OAAJ,EAA/B;;AACA,IAAMiQ,aAAa,GAAG,aAAc,IAAIxU,UAAJ,EAApC;;AAEA,IAAMyU,MAAM,GAAG,aAAc,IAAIlQ,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA7B;;AACA,IAAMmQ,MAAM,GAAG,aAAc,IAAInQ,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA7B;;AACA,IAAMoQ,MAAM,GAAG,aAAc,IAAIpQ,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA7B;;AAEA,IAAMqQ,WAAW,GAAG;AAAEvtB,EAAAA,IAAI,EAAE;AAAR,CAApB;AACA,IAAMwtB,aAAa,GAAG;AAAExtB,EAAAA,IAAI,EAAE;AAAR,CAAtB;;IAEMytB,Q;;;;;AAEL,sBAAc;AAAA;;AAAA;;AAEb;AAEA,WAAKC,UAAL,GAAkB,IAAlB;AAEA9mB,IAAAA,MAAM,CAACmN,cAAP,iCAA6B,IAA7B,EAAmC;AAAE9R,MAAAA,KAAK,EAAE2qB,WAAW;AAApB,KAAnC;AAEA,WAAK9qB,IAAL,GAAYN,YAAY,EAAxB;AAEA,WAAKgM,IAAL,GAAY,EAAZ;AACA,WAAKxN,IAAL,GAAY,UAAZ;AAEA,WAAK2tB,MAAL,GAAc,IAAd;AACA,WAAK7L,QAAL,GAAgB,EAAhB;AAEA,WAAKwH,EAAL,GAAUmE,QAAQ,CAACG,SAAT,CAAmBhW,KAAnB,EAAV;AAEA,QAAM4J,QAAQ,GAAG,IAAItE,OAAJ,EAAjB;AACA,QAAMzQ,QAAQ,GAAG,IAAIwf,KAAJ,EAAjB;AACA,QAAM/S,UAAU,GAAG,IAAIP,UAAJ,EAAnB;AACA,QAAMiS,KAAK,GAAG,IAAI1N,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd;;AAEA,aAAS2Q,gBAAT,GAA4B;AAE3B3U,MAAAA,UAAU,CAACqE,YAAX,CAAyB9Q,QAAzB,EAAmC,KAAnC;AAEA;;AAED,aAASqhB,kBAAT,GAA8B;AAE7BrhB,MAAAA,QAAQ,CAAC6f,iBAAT,CAA4BpT,UAA5B,EAAwC/Y,SAAxC,EAAmD,KAAnD;AAEA;;AAEDsM,IAAAA,QAAQ,CAACshB,SAAT,CAAoBF,gBAApB;;AACA3U,IAAAA,UAAU,CAAC6U,SAAX,CAAsBD,kBAAtB;;AAEAlnB,IAAAA,MAAM,CAAConB,gBAAP,iCAA+B;AAC9BxM,MAAAA,QAAQ,EAAE;AACTyM,QAAAA,YAAY,EAAE,IADL;AAETC,QAAAA,UAAU,EAAE,IAFH;AAGTjsB,QAAAA,KAAK,EAAEuf;AAHE,OADoB;AAM9B/U,MAAAA,QAAQ,EAAE;AACTwhB,QAAAA,YAAY,EAAE,IADL;AAETC,QAAAA,UAAU,EAAE,IAFH;AAGTjsB,QAAAA,KAAK,EAAEwK;AAHE,OANoB;AAW9ByM,MAAAA,UAAU,EAAE;AACX+U,QAAAA,YAAY,EAAE,IADH;AAEXC,QAAAA,UAAU,EAAE,IAFD;AAGXjsB,QAAAA,KAAK,EAAEiX;AAHI,OAXkB;AAgB9B0R,MAAAA,KAAK,EAAE;AACNqD,QAAAA,YAAY,EAAE,IADR;AAENC,QAAAA,UAAU,EAAE,IAFN;AAGNjsB,QAAAA,KAAK,EAAE2oB;AAHD,OAhBuB;AAqB9BuD,MAAAA,eAAe,EAAE;AAChBlsB,QAAAA,KAAK,EAAE,IAAI0lB,OAAJ;AADS,OArBa;AAwB9ByG,MAAAA,YAAY,EAAE;AACbnsB,QAAAA,KAAK,EAAE,IAAI6G,OAAJ;AADM;AAxBgB,KAA/B;AA6BA,WAAK+D,MAAL,GAAc,IAAI8a,OAAJ,EAAd;AACA,WAAKrJ,WAAL,GAAmB,IAAIqJ,OAAJ,EAAnB;AAEA,WAAKxT,gBAAL,GAAwBsZ,QAAQ,CAACY,uBAAjC;AACA,WAAKC,sBAAL,GAA8B,KAA9B;AAEA,WAAK3B,MAAL,GAAc,IAAIH,MAAJ,EAAd;AACA,WAAK+B,OAAL,GAAe,IAAf;AAEA,WAAKC,UAAL,GAAkB,KAAlB;AACA,WAAKC,aAAL,GAAqB,KAArB;AAEA,WAAKC,aAAL,GAAqB,IAArB;AACA,WAAKC,WAAL,GAAmB,CAAnB;AAEA,WAAKC,UAAL,GAAkB,EAAlB;AAEA,WAAKpa,QAAL,GAAgB,EAAhB;AApFa;AAsFb;;;;WAED,0BAA2E,CAAE;;;WAE7E,yBAA0E,CAAE;;;WAE5E,sBAAc3H,MAAd,EAAuB;AAEtB,UAAK,KAAKsH,gBAAV,EAA6B,KAAK0a,YAAL;AAE7B,WAAKhiB,MAAL,CAAYiiB,WAAZ,CAAyBjiB,MAAzB;AAEA,WAAKA,MAAL,CAAYkiB,SAAZ,CAAuB,KAAKvN,QAA5B,EAAsC,KAAKtI,UAA3C,EAAuD,KAAK0R,KAA5D;AAEA;;;WAED,yBAAiB7lB,CAAjB,EAAqB;AAEpB,WAAKmU,UAAL,CAAgB4V,WAAhB,CAA6B/pB,CAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,kCAA0B4U,IAA1B,EAAgC5R,KAAhC,EAAwC;AAEvC;AAEA,WAAKmR,UAAL,CAAgBsE,gBAAhB,CAAkC7D,IAAlC,EAAwC5R,KAAxC;AAEA;;;WAED,8BAAsBoR,KAAtB,EAA8B;AAE7B,WAAKD,UAAL,CAAgBqE,YAAhB,CAA8BpE,KAA9B,EAAqC,IAArC;AAEA;;;WAED,+BAAuB7W,CAAvB,EAA2B;AAE1B;AAEA,WAAK4W,UAAL,CAAgBsS,qBAAhB,CAAuClpB,CAAvC;AAEA;;;WAED,mCAA2ByC,CAA3B,EAA+B;AAE9B;AAEA,WAAKmU,UAAL,CAAgB/J,IAAhB,CAAsBpK,CAAtB;AAEA;;;WAED,sBAAc4U,IAAd,EAAoB5R,KAApB,EAA4B;AAE3B;AACA;AAEA+kB,MAAAA,GAAG,CAACtP,gBAAJ,CAAsB7D,IAAtB,EAA4B5R,KAA5B;;AAEA,WAAKmR,UAAL,CAAgB8V,QAAhB,CAA0BlC,GAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmBnT,IAAnB,EAAyB5R,KAAzB,EAAiC;AAEhC;AACA;AACA;AAEA+kB,MAAAA,GAAG,CAACtP,gBAAJ,CAAsB7D,IAAtB,EAA4B5R,KAA5B;;AAEA,WAAKmR,UAAL,CAAgB4V,WAAhB,CAA6BhC,GAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS/kB,KAAT,EAAiB;AAEhB,aAAO,KAAKknB,YAAL,CAAmB7B,MAAnB,EAA2BrlB,KAA3B,CAAP;AAEA;;;WAED,iBAASA,KAAT,EAAiB;AAEhB,aAAO,KAAKknB,YAAL,CAAmB5B,MAAnB,EAA2BtlB,KAA3B,CAAP;AAEA;;;WAED,iBAASA,KAAT,EAAiB;AAEhB,aAAO,KAAKknB,YAAL,CAAmB3B,MAAnB,EAA2BvlB,KAA3B,CAAP;AAEA;;;WAED,yBAAiB4R,IAAjB,EAAuBuV,QAAvB,EAAkC;AAEjC;AACA;AAEArC,MAAAA,KAAK,CAAC1d,IAAN,CAAYwK,IAAZ,EAAmB0D,eAAnB,CAAoC,KAAKnE,UAAzC;;AAEA,WAAKsI,QAAL,CAAcZ,GAAd,CAAmBiM,KAAK,CAACrlB,cAAN,CAAsB0nB,QAAtB,CAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYA,QAAZ,EAAuB;AAEtB,aAAO,KAAKC,eAAL,CAAsB/B,MAAtB,EAA8B8B,QAA9B,CAAP;AAEA;;;WAED,oBAAYA,QAAZ,EAAuB;AAEtB,aAAO,KAAKC,eAAL,CAAsB9B,MAAtB,EAA8B6B,QAA9B,CAAP;AAEA;;;WAED,oBAAYA,QAAZ,EAAuB;AAEtB,aAAO,KAAKC,eAAL,CAAsB7B,MAAtB,EAA8B4B,QAA9B,CAAP;AAEA;;;WAED,sBAAc/N,MAAd,EAAuB;AAEtB,aAAOA,MAAM,CAACjD,YAAP,CAAqB,KAAKI,WAA1B,CAAP;AAEA;;;WAED,sBAAc6C,MAAd,EAAuB;AAEtB,aAAOA,MAAM,CAACjD,YAAP,CAAqB6O,KAAK,CAAC5d,IAAN,CAAY,KAAKmP,WAAjB,EAA+BpS,MAA/B,EAArB,CAAP;AAEA;;;WAED,gBAAQ1J,CAAR,EAAWM,CAAX,EAAc4S,CAAd,EAAkB;AAEjB;AAEA,UAAKlT,CAAC,CAAC2a,SAAP,EAAmB;AAElB6P,QAAAA,OAAO,CAAC7d,IAAR,CAAc3M,CAAd;AAEA,OAJD,MAIO;AAENwqB,QAAAA,OAAO,CAAClnB,GAAR,CAAatD,CAAb,EAAgBM,CAAhB,EAAmB4S,CAAnB;AAEA;;AAED,UAAMiY,MAAM,GAAG,KAAKA,MAApB;AAEA,WAAKtM,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;;AAEA4L,MAAAA,WAAW,CAACmC,qBAAZ,CAAmC,KAAK9Q,WAAxC;;AAEA,UAAK,KAAK+Q,QAAL,IAAiB,KAAKC,OAA3B,EAAqC;AAEpCvC,QAAAA,KAAK,CAACwC,MAAN,CAActC,WAAd,EAA2BD,OAA3B,EAAoC,KAAK1D,EAAzC;AAEA,OAJD,MAIO;AAENyD,QAAAA,KAAK,CAACwC,MAAN,CAAcvC,OAAd,EAAuBC,WAAvB,EAAoC,KAAK3D,EAAzC;AAEA;;AAED,WAAKpQ,UAAL,CAAgBsS,qBAAhB,CAAuCuB,KAAvC;;AAEA,UAAKY,MAAL,EAAc;AAEbZ,QAAAA,KAAK,CAACyC,eAAN,CAAuB7B,MAAM,CAACrP,WAA9B;;AACAwO,QAAAA,GAAG,CAACtB,qBAAJ,CAA2BuB,KAA3B;;AACA,aAAK7T,UAAL,CAAgB4V,WAAhB,CAA6BhC,GAAG,CAAC5gB,MAAJ,EAA7B;AAEA;AAED;;;WAED,aAAK2U,MAAL,EAAc;AAEb,UAAK7X,SAAS,CAAChI,MAAV,GAAmB,CAAxB,EAA4B;AAE3B,aAAM,IAAIF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGkI,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,EAAxC,EAA8C;AAE7C,eAAK8f,GAAL,CAAU5X,SAAS,CAAElI,CAAF,CAAnB;AAEA;;AAED,eAAO,IAAP;AAEA;;AAED,UAAK+f,MAAM,KAAK,IAAhB,EAAuB;AAEtB9a,QAAAA,OAAO,CAACkD,KAAR,CAAe,kEAAf,EAAmF4X,MAAnF;AACA,eAAO,IAAP;AAEA;;AAED,UAAKA,MAAM,IAAIA,MAAM,CAAC6M,UAAtB,EAAmC;AAElC,YAAK7M,MAAM,CAAC8M,MAAP,KAAkB,IAAvB,EAA8B;AAE7B9M,UAAAA,MAAM,CAAC8M,MAAP,CAAc8B,MAAd,CAAsB5O,MAAtB;AAEA;;AAEDA,QAAAA,MAAM,CAAC8M,MAAP,GAAgB,IAAhB;AACA,aAAK7L,QAAL,CAAcxhB,IAAd,CAAoBugB,MAApB;AAEAA,QAAAA,MAAM,CAACvL,aAAP,CAAsBiY,WAAtB;AAEA,OAbD,MAaO;AAENxnB,QAAAA,OAAO,CAACkD,KAAR,CAAe,+DAAf,EAAgF4X,MAAhF;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAQA,MAAR,EAAiB;AAEhB,UAAK7X,SAAS,CAAChI,MAAV,GAAmB,CAAxB,EAA4B;AAE3B,aAAM,IAAIF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGkI,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,EAAxC,EAA8C;AAE7C,eAAK2uB,MAAL,CAAazmB,SAAS,CAAElI,CAAF,CAAtB;AAEA;;AAED,eAAO,IAAP;AAEA;;AAED,UAAMN,KAAK,GAAG,KAAKshB,QAAL,CAAczhB,OAAd,CAAuBwgB,MAAvB,CAAd;;AAEA,UAAKrgB,KAAK,KAAK,CAAE,CAAjB,EAAqB;AAEpBqgB,QAAAA,MAAM,CAAC8M,MAAP,GAAgB,IAAhB;AACA,aAAK7L,QAAL,CAAcrhB,MAAd,CAAsBD,KAAtB,EAA6B,CAA7B;AAEAqgB,QAAAA,MAAM,CAACvL,aAAP,CAAsBkY,aAAtB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,4BAAmB;AAElB,UAAMG,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,KAAK,IAAhB,EAAuB;AAEtBA,QAAAA,MAAM,CAAC8B,MAAP,CAAe,IAAf;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAM,IAAI3uB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKghB,QAAL,CAAc9gB,MAAnC,EAA2CF,CAAC,EAA5C,EAAkD;AAEjD,YAAM+f,MAAM,GAAG,KAAKiB,QAAL,CAAehhB,CAAf,CAAf;AAEA+f,QAAAA,MAAM,CAAC8M,MAAP,GAAgB,IAAhB;AAEA9M,QAAAA,MAAM,CAACvL,aAAP,CAAsBkY,aAAtB;AAEA;;AAED,WAAK1L,QAAL,CAAc9gB,MAAd,GAAuB,CAAvB;AAEA,aAAO,IAAP;AAGA;;;WAED,gBAAQ6f,MAAR,EAAiB;AAEhB;AAEA;AAEA,WAAKQ,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;;AAEA0L,MAAAA,KAAK,CAAC5d,IAAN,CAAY,KAAKmP,WAAjB,EAA+BpS,MAA/B;;AAEA,UAAK2U,MAAM,CAAC8M,MAAP,KAAkB,IAAvB,EAA8B;AAE7B9M,QAAAA,MAAM,CAAC8M,MAAP,CAActM,iBAAd,CAAiC,IAAjC,EAAuC,KAAvC;;AAEA0L,QAAAA,KAAK,CAACiC,QAAN,CAAgBnO,MAAM,CAAC8M,MAAP,CAAcrP,WAA9B;AAEA;;AAEDuC,MAAAA,MAAM,CAAC3C,YAAP,CAAqB6O,KAArB;AAEA,WAAKnM,GAAL,CAAUC,MAAV;AAEAA,MAAAA,MAAM,CAACQ,iBAAP,CAA0B,KAA1B,EAAiC,IAAjC;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAeqO,EAAf,EAAoB;AAEnB,aAAO,KAAKC,mBAAL,CAA0B,IAA1B,EAAgCD,EAAhC,CAAP;AAEA;;;WAED,yBAAiBliB,IAAjB,EAAwB;AAEvB,aAAO,KAAKmiB,mBAAL,CAA0B,MAA1B,EAAkCniB,IAAlC,CAAP;AAEA;;;WAED,6BAAqBA,IAArB,EAA2BvL,KAA3B,EAAmC;AAElC,UAAK,KAAMuL,IAAN,MAAiBvL,KAAtB,EAA8B,OAAO,IAAP;;AAE9B,WAAM,IAAInB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAK+gB,QAAL,CAAc9gB,MAAnC,EAA2CF,CAAC,GAAGC,CAA/C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,YAAM8uB,KAAK,GAAG,KAAK9N,QAAL,CAAehhB,CAAf,CAAd;AACA,YAAM+f,MAAM,GAAG+O,KAAK,CAACD,mBAAN,CAA2BniB,IAA3B,EAAiCvL,KAAjC,CAAf;;AAEA,YAAK4e,MAAM,KAAK1gB,SAAhB,EAA4B;AAE3B,iBAAO0gB,MAAP;AAEA;AAED;;AAED,aAAO1gB,SAAP;AAEA;;;WAED,0BAAkBQ,MAAlB,EAA2B;AAE1B,WAAK0gB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;AAEA,aAAO1gB,MAAM,CAACyuB,qBAAP,CAA8B,KAAK9Q,WAAnC,CAAP;AAEA;;;WAED,4BAAoB3d,MAApB,EAA6B;AAE5B,WAAK0gB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;AAEA,WAAK/C,WAAL,CAAiByQ,SAAjB,CAA4B9B,WAA5B,EAAyCtsB,MAAzC,EAAiDusB,QAAjD;AAEA,aAAOvsB,MAAP;AAEA;;;WAED,uBAAeA,MAAf,EAAwB;AAEvB,WAAK0gB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;AAEA,WAAK/C,WAAL,CAAiByQ,SAAjB,CAA4B9B,WAA5B,EAAyCE,aAAzC,EAAwDxsB,MAAxD;AAEA,aAAOA,MAAP;AAEA;;;WAED,2BAAmBA,MAAnB,EAA4B;AAE3B,WAAK0gB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;AAEA,UAAM5Z,CAAC,GAAG,KAAK6W,WAAL,CAAiB5W,QAA3B;AAEA,aAAO/G,MAAM,CAACmF,GAAP,CAAY2B,CAAC,CAAE,CAAF,CAAb,EAAoBA,CAAC,CAAE,CAAF,CAArB,EAA4BA,CAAC,CAAE,EAAF,CAA7B,EAAsChB,SAAtC,EAAP;AAEA;;;WAED,mBAAuC,CAAE;;;WAEzC,kBAAUoV,QAAV,EAAqB;AAEpBA,MAAAA,QAAQ,CAAE,IAAF,CAAR;AAEA,UAAMiG,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,WAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDghB,QAAAA,QAAQ,CAAEhhB,CAAF,CAAR,CAAc+uB,QAAd,CAAwBhU,QAAxB;AAEA;AAED;;;WAED,yBAAiBA,QAAjB,EAA4B;AAE3B,UAAK,KAAK0S,OAAL,KAAiB,KAAtB,EAA8B;AAE9B1S,MAAAA,QAAQ,CAAE,IAAF,CAAR;AAEA,UAAMiG,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,WAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDghB,QAAAA,QAAQ,CAAEhhB,CAAF,CAAR,CAAcgvB,eAAd,CAA+BjU,QAA/B;AAEA;AAED;;;WAED,2BAAmBA,QAAnB,EAA8B;AAE7B,UAAM8R,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,KAAK,IAAhB,EAAuB;AAEtB9R,QAAAA,QAAQ,CAAE8R,MAAF,CAAR;AAEAA,QAAAA,MAAM,CAACoC,iBAAP,CAA0BlU,QAA1B;AAEA;AAED;;;WAED,wBAAe;AAEd,WAAKhP,MAAL,CAAYqc,OAAZ,CAAqB,KAAK1H,QAA1B,EAAoC,KAAKtI,UAAzC,EAAqD,KAAK0R,KAA1D;AAEA,WAAK0D,sBAAL,GAA8B,IAA9B;AAEA;;;WAED,2BAAmB0B,KAAnB,EAA2B;AAE1B,UAAK,KAAK7b,gBAAV,EAA6B,KAAK0a,YAAL;;AAE7B,UAAK,KAAKP,sBAAL,IAA+B0B,KAApC,EAA4C;AAE3C,YAAK,KAAKrC,MAAL,KAAgB,IAArB,EAA4B;AAE3B,eAAKrP,WAAL,CAAiBnP,IAAjB,CAAuB,KAAKtC,MAA5B;AAEA,SAJD,MAIO;AAEN,eAAKyR,WAAL,CAAiBrU,gBAAjB,CAAmC,KAAK0jB,MAAL,CAAYrP,WAA/C,EAA4D,KAAKzR,MAAjE;AAEA;;AAED,aAAKyhB,sBAAL,GAA8B,KAA9B;AAEA0B,QAAAA,KAAK,GAAG,IAAR;AAEA,OApByB,CAsB1B;;;AAEA,UAAMlO,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,WAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDghB,QAAAA,QAAQ,CAAEhhB,CAAF,CAAR,CAAcmvB,iBAAd,CAAiCD,KAAjC;AAEA;AAED;;;WAED,2BAAmBE,aAAnB,EAAkCC,cAAlC,EAAmD;AAElD,UAAMxC,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKuC,aAAa,KAAK,IAAlB,IAA0BvC,MAAM,KAAK,IAA1C,EAAiD;AAEhDA,QAAAA,MAAM,CAACtM,iBAAP,CAA0B,IAA1B,EAAgC,KAAhC;AAEA;;AAED,UAAK,KAAKlN,gBAAV,EAA6B,KAAK0a,YAAL;;AAE7B,UAAK,KAAKlB,MAAL,KAAgB,IAArB,EAA4B;AAE3B,aAAKrP,WAAL,CAAiBnP,IAAjB,CAAuB,KAAKtC,MAA5B;AAEA,OAJD,MAIO;AAEN,aAAKyR,WAAL,CAAiBrU,gBAAjB,CAAmC,KAAK0jB,MAAL,CAAYrP,WAA/C,EAA4D,KAAKzR,MAAjE;AAEA,OApBiD,CAsBlD;;;AAEA,UAAKsjB,cAAc,KAAK,IAAxB,EAA+B;AAE9B,YAAMrO,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,aAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDghB,UAAAA,QAAQ,CAAEhhB,CAAF,CAAR,CAAcugB,iBAAd,CAAiC,KAAjC,EAAwC,IAAxC;AAEA;AAED;AAED;;;WAED,gBAAQ9O,IAAR,EAAe;AAEd;AACA,UAAMC,YAAY,GAAKD,IAAI,KAAKpS,SAAT,IAAsB,OAAOoS,IAAP,KAAgB,QAA7D;AAEA,UAAMG,MAAM,GAAG,EAAf,CALc,CAOd;AACA;AACA;;AACA,UAAKF,YAAL,EAAoB;AAEnB;AACAD,QAAAA,IAAI,GAAG;AACN6d,UAAAA,UAAU,EAAE,EADN;AAENC,UAAAA,SAAS,EAAE,EAFL;AAGNpb,UAAAA,QAAQ,EAAE,EAHJ;AAINxC,UAAAA,MAAM,EAAE,EAJF;AAKN6d,UAAAA,MAAM,EAAE,EALF;AAMNC,UAAAA,SAAS,EAAE,EANL;AAON3B,UAAAA,UAAU,EAAE,EAPN;AAQN4B,UAAAA,KAAK,EAAE;AARD,SAAP;AAWA9d,QAAAA,MAAM,CAACwC,QAAP,GAAkB;AACjB5C,UAAAA,OAAO,EAAE,GADQ;AAEjBtS,UAAAA,IAAI,EAAE,QAFW;AAGjBmV,UAAAA,SAAS,EAAE;AAHM,SAAlB;AAMA,OA9Ba,CAgCd;;;AAEA,UAAM0L,MAAM,GAAG,EAAf;AAEAA,MAAAA,MAAM,CAAC/e,IAAP,GAAc,KAAKA,IAAnB;AACA+e,MAAAA,MAAM,CAAC7gB,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAK,KAAKwN,IAAL,KAAc,EAAnB,EAAwBqT,MAAM,CAACrT,IAAP,GAAc,KAAKA,IAAnB;AACxB,UAAK,KAAKghB,UAAL,KAAoB,IAAzB,EAAgC3N,MAAM,CAAC2N,UAAP,GAAoB,IAApB;AAChC,UAAK,KAAKC,aAAL,KAAuB,IAA5B,EAAmC5N,MAAM,CAAC4N,aAAP,GAAuB,IAAvB;AACnC,UAAK,KAAKF,OAAL,KAAiB,KAAtB,EAA8B1N,MAAM,CAAC0N,OAAP,GAAiB,KAAjB;AAC9B,UAAK,KAAKG,aAAL,KAAuB,KAA5B,EAAoC7N,MAAM,CAAC6N,aAAP,GAAuB,KAAvB;AACpC,UAAK,KAAKC,WAAL,KAAqB,CAA1B,EAA8B9N,MAAM,CAAC8N,WAAP,GAAqB,KAAKA,WAA1B;AAC9B,UAAK9Z,IAAI,CAACE,SAAL,CAAgB,KAAKP,QAArB,MAAoC,IAAzC,EAAgDqM,MAAM,CAACrM,QAAP,GAAkB,KAAKA,QAAvB;AAEhDqM,MAAAA,MAAM,CAAC8L,MAAP,GAAgB,KAAKA,MAAL,CAAYF,IAA5B;AACA5L,MAAAA,MAAM,CAAChU,MAAP,GAAgB,KAAKA,MAAL,CAAY4jB,OAAZ,EAAhB;AAEA,UAAK,KAAKtc,gBAAL,KAA0B,KAA/B,EAAuC0M,MAAM,CAAC1M,gBAAP,GAA0B,KAA1B,CAlDzB,CAoDd;;AAEA,UAAK,KAAKuc,eAAV,EAA4B;AAE3B7P,QAAAA,MAAM,CAAC7gB,IAAP,GAAc,eAAd;AACA6gB,QAAAA,MAAM,CAACrI,KAAP,GAAe,KAAKA,KAApB;AACAqI,QAAAA,MAAM,CAAC8P,cAAP,GAAwB,KAAKA,cAAL,CAAoBvb,MAApB,EAAxB;AACA,YAAK,KAAKwb,aAAL,KAAuB,IAA5B,EAAmC/P,MAAM,CAAC+P,aAAP,GAAuB,KAAKA,aAAL,CAAmBxb,MAAnB,EAAvB;AAEnC,OA7Da,CA+Dd;;;AAEA,eAASyb,SAAT,CAAoBC,OAApB,EAA6BC,OAA7B,EAAuC;AAEtC,YAAKD,OAAO,CAAEC,OAAO,CAACjvB,IAAV,CAAP,KAA4B3B,SAAjC,EAA6C;AAE5C2wB,UAAAA,OAAO,CAAEC,OAAO,CAACjvB,IAAV,CAAP,GAA0BivB,OAAO,CAAC3b,MAAR,CAAgB7C,IAAhB,CAA1B;AAEA;;AAED,eAAOwe,OAAO,CAACjvB,IAAf;AAEA;;AAED,UAAK,KAAKkvB,OAAV,EAAoB;AAEnB,YAAK,KAAKC,UAAV,EAAuB;AAEtB,cAAK,KAAKA,UAAL,CAAgBhiB,OAArB,EAA+B;AAE9B4R,YAAAA,MAAM,CAACoQ,UAAP,GAAoB,KAAKA,UAAL,CAAgB7b,MAAhB,EAApB;AAEA,WAJD,MAIO,IAAK,KAAK6b,UAAL,CAAgBnd,SAArB,EAAiC;AAEvC+M,YAAAA,MAAM,CAACoQ,UAAP,GAAoB,KAAKA,UAAL,CAAgB7b,MAAhB,CAAwB7C,IAAxB,EAA+BzQ,IAAnD;AAEA;AAED;;AAED,YAAK,KAAKovB,WAAL,IAAoB,KAAKA,WAAL,CAAiBpd,SAA1C,EAAsD;AAErD+M,UAAAA,MAAM,CAACqQ,WAAP,GAAqB,KAAKA,WAAL,CAAiB9b,MAAjB,CAAyB7C,IAAzB,EAAgCzQ,IAArD;AAEA;AAED,OAtBD,MAsBO,IAAK,KAAKqvB,MAAL,IAAe,KAAKC,MAApB,IAA8B,KAAKC,QAAxC,EAAmD;AAEzDxQ,QAAAA,MAAM,CAACS,QAAP,GAAkBuP,SAAS,CAAEte,IAAI,CAAC6d,UAAP,EAAmB,KAAK9O,QAAxB,CAA3B;AAEA,YAAMgQ,UAAU,GAAG,KAAKhQ,QAAL,CAAcgQ,UAAjC;;AAEA,YAAKA,UAAU,KAAKnxB,SAAf,IAA4BmxB,UAAU,CAAChB,MAAX,KAAsBnwB,SAAvD,EAAmE;AAElE,cAAMmwB,MAAM,GAAGgB,UAAU,CAAChB,MAA1B;;AAEA,cAAK1d,KAAK,CAACC,OAAN,CAAeyd,MAAf,CAAL,EAA+B;AAE9B,iBAAM,IAAIxvB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGuvB,MAAM,CAACtvB,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,kBAAMywB,KAAK,GAAGjB,MAAM,CAAExvB,CAAF,CAApB;AAEA+vB,cAAAA,SAAS,CAAEte,IAAI,CAAC+d,MAAP,EAAeiB,KAAf,CAAT;AAEA;AAED,WAVD,MAUO;AAENV,YAAAA,SAAS,CAAEte,IAAI,CAAC+d,MAAP,EAAeA,MAAf,CAAT;AAEA;AAED;AAED;;AAED,UAAK,KAAKkB,aAAV,EAA0B;AAEzB3Q,QAAAA,MAAM,CAAC4Q,QAAP,GAAkB,KAAKA,QAAvB;AACA5Q,QAAAA,MAAM,CAAC6Q,UAAP,GAAoB,KAAKA,UAAL,CAAgBjB,OAAhB,EAApB;;AAEA,YAAK,KAAKkB,QAAL,KAAkBxxB,SAAvB,EAAmC;AAElC0wB,UAAAA,SAAS,CAAEte,IAAI,CAACge,SAAP,EAAkB,KAAKoB,QAAvB,CAAT;AAEA9Q,UAAAA,MAAM,CAAC8Q,QAAP,GAAkB,KAAKA,QAAL,CAAc7vB,IAAhC;AAEA;AAED;;AAED,UAAK,KAAK8vB,QAAL,KAAkBzxB,SAAvB,EAAmC;AAElC,YAAKyS,KAAK,CAACC,OAAN,CAAe,KAAK+e,QAApB,CAAL,EAAsC;AAErC,cAAMC,KAAK,GAAG,EAAd;;AAEA,eAAM,IAAI/wB,GAAC,GAAG,CAAR,EAAWC,GAAC,GAAG,KAAK6wB,QAAL,CAAc5wB,MAAnC,EAA2CF,GAAC,GAAGC,GAA/C,EAAkDD,GAAC,EAAnD,EAAyD;AAExD+wB,YAAAA,KAAK,CAACvxB,IAAN,CAAYuwB,SAAS,CAAEte,IAAI,CAAC8d,SAAP,EAAkB,KAAKuB,QAAL,CAAe9wB,GAAf,CAAlB,CAArB;AAEA;;AAED+f,UAAAA,MAAM,CAAC+Q,QAAP,GAAkBC,KAAlB;AAEA,SAZD,MAYO;AAENhR,UAAAA,MAAM,CAAC+Q,QAAP,GAAkBf,SAAS,CAAEte,IAAI,CAAC8d,SAAP,EAAkB,KAAKuB,QAAvB,CAA3B;AAEA;AAED,OApKa,CAsKd;;;AAEA,UAAK,KAAK9P,QAAL,CAAc9gB,MAAd,GAAuB,CAA5B,EAAgC;AAE/B6f,QAAAA,MAAM,CAACiB,QAAP,GAAkB,EAAlB;;AAEA,aAAM,IAAIhhB,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAG,KAAKghB,QAAL,CAAc9gB,MAAnC,EAA2CF,GAAC,EAA5C,EAAkD;AAEjD+f,UAAAA,MAAM,CAACiB,QAAP,CAAgBxhB,IAAhB,CAAsB,KAAKwhB,QAAL,CAAehhB,GAAf,EAAmBsU,MAAnB,CAA2B7C,IAA3B,EAAkCsO,MAAxD;AAEA;AAED,OAlLa,CAoLd;;;AAEA,UAAK,KAAK+N,UAAL,CAAgB5tB,MAAhB,GAAyB,CAA9B,EAAkC;AAEjC6f,QAAAA,MAAM,CAAC+N,UAAP,GAAoB,EAApB;;AAEA,aAAM,IAAI9tB,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAG,KAAK8tB,UAAL,CAAgB5tB,MAArC,EAA6CF,GAAC,EAA9C,EAAoD;AAEnD,cAAMgxB,SAAS,GAAG,KAAKlD,UAAL,CAAiB9tB,GAAjB,CAAlB;AAEA+f,UAAAA,MAAM,CAAC+N,UAAP,CAAkBtuB,IAAlB,CAAwBuwB,SAAS,CAAEte,IAAI,CAACqc,UAAP,EAAmBkD,SAAnB,CAAjC;AAEA;AAED;;AAED,UAAKtf,YAAL,EAAoB;AAEnB,YAAM4d,UAAU,GAAG2B,gBAAgB,CAAExf,IAAI,CAAC6d,UAAP,CAAnC;AACA,YAAMC,SAAS,GAAG0B,gBAAgB,CAAExf,IAAI,CAAC8d,SAAP,CAAlC;AACA,YAAMpb,QAAQ,GAAG8c,gBAAgB,CAAExf,IAAI,CAAC0C,QAAP,CAAjC;AACA,YAAMxC,MAAM,GAAGsf,gBAAgB,CAAExf,IAAI,CAACE,MAAP,CAA/B;;AACA,YAAM6d,OAAM,GAAGyB,gBAAgB,CAAExf,IAAI,CAAC+d,MAAP,CAA/B;;AACA,YAAMC,SAAS,GAAGwB,gBAAgB,CAAExf,IAAI,CAACge,SAAP,CAAlC;AACA,YAAM3B,UAAU,GAAGmD,gBAAgB,CAAExf,IAAI,CAACqc,UAAP,CAAnC;AACA,YAAM4B,KAAK,GAAGuB,gBAAgB,CAAExf,IAAI,CAACie,KAAP,CAA9B;AAEA,YAAKJ,UAAU,CAACpvB,MAAX,GAAoB,CAAzB,EAA6B0R,MAAM,CAAC0d,UAAP,GAAoBA,UAApB;AAC7B,YAAKC,SAAS,CAACrvB,MAAV,GAAmB,CAAxB,EAA4B0R,MAAM,CAAC2d,SAAP,GAAmBA,SAAnB;AAC5B,YAAKpb,QAAQ,CAACjU,MAAT,GAAkB,CAAvB,EAA2B0R,MAAM,CAACuC,QAAP,GAAkBA,QAAlB;AAC3B,YAAKxC,MAAM,CAACzR,MAAP,GAAgB,CAArB,EAAyB0R,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACzB,YAAK6d,OAAM,CAACtvB,MAAP,GAAgB,CAArB,EAAyB0R,MAAM,CAAC4d,MAAP,GAAgBA,OAAhB;AACzB,YAAKC,SAAS,CAACvvB,MAAV,GAAmB,CAAxB,EAA4B0R,MAAM,CAAC6d,SAAP,GAAmBA,SAAnB;AAC5B,YAAK3B,UAAU,CAAC5tB,MAAX,GAAoB,CAAzB,EAA6B0R,MAAM,CAACkc,UAAP,GAAoBA,UAApB;AAC7B,YAAK4B,KAAK,CAACxvB,MAAN,GAAe,CAApB,EAAwB0R,MAAM,CAAC8d,KAAP,GAAeA,KAAf;AAExB;;AAED9d,MAAAA,MAAM,CAACmO,MAAP,GAAgBA,MAAhB;AAEA,aAAOnO,MAAP,CA5Nc,CA8Nd;AACA;AACA;;AACA,eAASqf,gBAAT,CAA2BC,KAA3B,EAAmC;AAElC,YAAMC,MAAM,GAAG,EAAf;;AACA,aAAM,IAAMC,GAAZ,IAAmBF,KAAnB,EAA2B;AAE1B,cAAM7f,IAAI,GAAG6f,KAAK,CAAEE,GAAF,CAAlB;AACA,iBAAO/f,IAAI,CAAC+C,QAAZ;AACA+c,UAAAA,MAAM,CAAC3xB,IAAP,CAAa6R,IAAb;AAEA;;AAED,eAAO8f,MAAP;AAEA;AAED;;;WAED,eAAOE,SAAP,EAAmB;AAElB,aAAO,IAAI,KAAKjsB,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,EAAmCgjB,SAAnC,CAAP;AAEA;;;WAED,cAAMpjB,MAAN,EAAiC;AAAA,UAAnBojB,SAAmB,uEAAP,IAAO;AAEhC,WAAK3kB,IAAL,GAAYuB,MAAM,CAACvB,IAAnB;AAEA,WAAK8b,EAAL,CAAQna,IAAR,CAAcJ,MAAM,CAACua,EAArB;AAEA,WAAK9H,QAAL,CAAcrS,IAAd,CAAoBJ,MAAM,CAACyS,QAA3B;AACA,WAAK/U,QAAL,CAActH,KAAd,GAAsB4J,MAAM,CAACtC,QAAP,CAAgBtH,KAAtC;AACA,WAAK+T,UAAL,CAAgB/J,IAAhB,CAAsBJ,MAAM,CAACmK,UAA7B;AACA,WAAK0R,KAAL,CAAWzb,IAAX,CAAiBJ,MAAM,CAAC6b,KAAxB;AAEA,WAAK/d,MAAL,CAAYsC,IAAZ,CAAkBJ,MAAM,CAAClC,MAAzB;AACA,WAAKyR,WAAL,CAAiBnP,IAAjB,CAAuBJ,MAAM,CAACuP,WAA9B;AAEA,WAAKnK,gBAAL,GAAwBpF,MAAM,CAACoF,gBAA/B;AACA,WAAKma,sBAAL,GAA8Bvf,MAAM,CAACuf,sBAArC;AAEA,WAAK3B,MAAL,CAAYF,IAAZ,GAAmB1d,MAAM,CAAC4d,MAAP,CAAcF,IAAjC;AACA,WAAK8B,OAAL,GAAexf,MAAM,CAACwf,OAAtB;AAEA,WAAKC,UAAL,GAAkBzf,MAAM,CAACyf,UAAzB;AACA,WAAKC,aAAL,GAAqB1f,MAAM,CAAC0f,aAA5B;AAEA,WAAKC,aAAL,GAAqB3f,MAAM,CAAC2f,aAA5B;AACA,WAAKC,WAAL,GAAmB5f,MAAM,CAAC4f,WAA1B;AAEA,WAAKna,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAgBhG,MAAM,CAACyF,QAAvB,CAAZ,CAAhB;;AAEA,UAAK2d,SAAS,KAAK,IAAnB,EAA0B;AAEzB,aAAM,IAAIrxB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGiO,MAAM,CAAC+S,QAAP,CAAgB9gB,MAArC,EAA6CF,CAAC,EAA9C,EAAoD;AAEnD,cAAM8uB,KAAK,GAAG7gB,MAAM,CAAC+S,QAAP,CAAiBhhB,CAAjB,CAAd;AACA,eAAK8f,GAAL,CAAUgP,KAAK,CAAChY,KAAN,EAAV;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;;EA53BqB7X,e;;AAg4BvB0tB,QAAQ,CAACG,SAAT,GAAqB,aAAc,IAAI1Q,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAnC;AACAuQ,QAAQ,CAACY,uBAAT,GAAmC,IAAnC;;AAEA,IAAM+D,KAAK,GAAG,aAAc,IAAIlV,OAAJ,EAA5B;;AACA,IAAMmV,KAAK,GAAG,aAAc,IAAInV,OAAJ,EAA5B;;AACA,IAAMoV,KAAK,GAAG,aAAc,IAAIpV,OAAJ,EAA5B;;AACA,IAAMqV,KAAK,GAAG,aAAc,IAAIrV,OAAJ,EAA5B;;AAEA,IAAMsV,IAAI,GAAG,aAAc,IAAItV,OAAJ,EAA3B;;AACA,IAAMuV,IAAI,GAAG,aAAc,IAAIvV,OAAJ,EAA3B;;AACA,IAAMwV,IAAI,GAAG,aAAc,IAAIxV,OAAJ,EAA3B;;AACA,IAAMyV,IAAI,GAAG,aAAc,IAAIzV,OAAJ,EAA3B;;AACA,IAAM0V,IAAI,GAAG,aAAc,IAAI1V,OAAJ,EAA3B;;AACA,IAAM2V,IAAI,GAAG,aAAc,IAAI3V,OAAJ,EAA3B;;IAEM4V,Q;AAEL,sBAAuE;AAAA,QAA1D9tB,CAA0D,uEAAtD,IAAIkY,OAAJ,EAAsD;AAAA,QAAvCjY,CAAuC,uEAAnC,IAAIiY,OAAJ,EAAmC;AAAA,QAApBhY,CAAoB,uEAAhB,IAAIgY,OAAJ,EAAgB;;AAAA;;AAEtE,SAAKlY,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AAEA;;;;WAoFD,aAAKF,CAAL,EAAQC,CAAR,EAAWC,CAAX,EAAe;AAEd,WAAKF,CAAL,CAAOmK,IAAP,CAAanK,CAAb;AACA,WAAKC,CAAL,CAAOkK,IAAP,CAAalK,CAAb;AACA,WAAKC,CAAL,CAAOiK,IAAP,CAAajK,CAAb;AAEA,aAAO,IAAP;AAEA;;;WAED,iCAAyBqb,MAAzB,EAAiCwS,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA8C;AAE7C,WAAKjuB,CAAL,CAAOmK,IAAP,CAAaoR,MAAM,CAAEwS,EAAF,CAAnB;AACA,WAAK9tB,CAAL,CAAOkK,IAAP,CAAaoR,MAAM,CAAEyS,EAAF,CAAnB;AACA,WAAK9tB,CAAL,CAAOiK,IAAP,CAAaoR,MAAM,CAAE0S,EAAF,CAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,oCAA4BzqB,SAA5B,EAAuCuqB,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAoD;AAEnD,WAAKjuB,CAAL,CAAOyc,mBAAP,CAA4BjZ,SAA5B,EAAuCuqB,EAAvC;AACA,WAAK9tB,CAAL,CAAOwc,mBAAP,CAA4BjZ,SAA5B,EAAuCwqB,EAAvC;AACA,WAAK9tB,CAAL,CAAOuc,mBAAP,CAA4BjZ,SAA5B,EAAuCyqB,EAAvC;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK/sB,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAMgT,QAAN,EAAiB;AAEhB,WAAKnd,CAAL,CAAOmK,IAAP,CAAagT,QAAQ,CAACnd,CAAtB;AACA,WAAKC,CAAL,CAAOkK,IAAP,CAAagT,QAAQ,CAACld,CAAtB;AACA,WAAKC,CAAL,CAAOiK,IAAP,CAAagT,QAAQ,CAACjd,CAAtB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAETktB,MAAAA,KAAK,CAAC7qB,UAAN,CAAkB,KAAKrC,CAAvB,EAA0B,KAAKD,CAA/B;;AACAotB,MAAAA,KAAK,CAAC9qB,UAAN,CAAkB,KAAKvC,CAAvB,EAA0B,KAAKC,CAA/B;;AAEA,aAAOmtB,KAAK,CAAC5K,KAAN,CAAa6K,KAAb,EAAqBrxB,MAArB,KAAgC,GAAvC;AAEA;;;WAED,qBAAaL,MAAb,EAAsB;AAErB,aAAOA,MAAM,CAAC2G,UAAP,CAAmB,KAAKtC,CAAxB,EAA2B,KAAKC,CAAhC,EAAoC2b,GAApC,CAAyC,KAAK1b,CAA9C,EAAkDsC,cAAlD,CAAkE,IAAI,CAAtE,CAAP;AAEA;;;WAED,mBAAW7G,MAAX,EAAoB;AAEnB,aAAOmyB,QAAQ,CAACI,SAAT,CAAoB,KAAKluB,CAAzB,EAA4B,KAAKC,CAAjC,EAAoC,KAAKC,CAAzC,EAA4CvE,MAA5C,CAAP;AAEA;;;WAED,kBAAUA,MAAV,EAAmB;AAElB,aAAOA,MAAM,CAACwyB,qBAAP,CAA8B,KAAKnuB,CAAnC,EAAsC,KAAKC,CAA3C,EAA8C,KAAKC,CAAnD,CAAP;AAEA;;;WAED,sBAAcgc,KAAd,EAAqBvgB,MAArB,EAA8B;AAE7B,aAAOmyB,QAAQ,CAACM,YAAT,CAAuBlS,KAAvB,EAA8B,KAAKlc,CAAnC,EAAsC,KAAKC,CAA3C,EAA8C,KAAKC,CAAnD,EAAsDvE,MAAtD,CAAP;AAEA;;;WAED,eAAOugB,KAAP,EAAcmS,GAAd,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B5yB,MAA7B,EAAsC;AAErC,aAAOmyB,QAAQ,CAACU,KAAT,CAAgBtS,KAAhB,EAAuB,KAAKlc,CAA5B,EAA+B,KAAKC,CAApC,EAAuC,KAAKC,CAA5C,EAA+CmuB,GAA/C,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8D5yB,MAA9D,CAAP;AAEA;;;WAED,uBAAeugB,KAAf,EAAuB;AAEtB,aAAO4R,QAAQ,CAACW,aAAT,CAAwBvS,KAAxB,EAA+B,KAAKlc,CAApC,EAAuC,KAAKC,CAA5C,EAA+C,KAAKC,CAApD,CAAP;AAEA;;;WAED,uBAAekgB,SAAf,EAA2B;AAE1B,aAAO0N,QAAQ,CAACY,aAAT,CAAwB,KAAK1uB,CAA7B,EAAgC,KAAKC,CAArC,EAAwC,KAAKC,CAA7C,EAAgDkgB,SAAhD,CAAP;AAEA;;;WAED,uBAAepE,GAAf,EAAqB;AAEpB,aAAOA,GAAG,CAAC2S,kBAAJ,CAAwB,IAAxB,CAAP;AAEA;;;WAED,6BAAqB9kB,CAArB,EAAwBlO,MAAxB,EAAiC;AAEhC,UAAMqE,CAAC,GAAG,KAAKA,CAAf;AAAA,UAAkBC,CAAC,GAAG,KAAKA,CAA3B;AAAA,UAA8BC,CAAC,GAAG,KAAKA,CAAvC;AACA,UAAIkC,CAAJ,EAAOC,CAAP,CAHgC,CAKhC;AACA;AACA;AACA;AACA;;AAEAmrB,MAAAA,IAAI,CAACjrB,UAAL,CAAiBtC,CAAjB,EAAoBD,CAApB;;AACAytB,MAAAA,IAAI,CAAClrB,UAAL,CAAiBrC,CAAjB,EAAoBF,CAApB;;AACA2tB,MAAAA,IAAI,CAACprB,UAAL,CAAiBsH,CAAjB,EAAoB7J,CAApB;;AACA,UAAMrD,EAAE,GAAG6wB,IAAI,CAACxY,GAAL,CAAU2Y,IAAV,CAAX;;AACA,UAAM/wB,EAAE,GAAG6wB,IAAI,CAACzY,GAAL,CAAU2Y,IAAV,CAAX;;AACA,UAAKhxB,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAAtB,EAA0B;AAEzB;AACA,eAAOjB,MAAM,CAACwO,IAAP,CAAanK,CAAb,CAAP;AAEA;;AAED4tB,MAAAA,IAAI,CAACrrB,UAAL,CAAiBsH,CAAjB,EAAoB5J,CAApB;;AACA,UAAMpD,EAAE,GAAG2wB,IAAI,CAACxY,GAAL,CAAU4Y,IAAV,CAAX;;AACA,UAAMgB,EAAE,GAAGnB,IAAI,CAACzY,GAAL,CAAU4Y,IAAV,CAAX;;AACA,UAAK/wB,EAAE,IAAI,CAAN,IAAW+xB,EAAE,IAAI/xB,EAAtB,EAA2B;AAE1B;AACA,eAAOlB,MAAM,CAACwO,IAAP,CAAalK,CAAb,CAAP;AAEA;;AAED,UAAM4uB,EAAE,GAAGlyB,EAAE,GAAGiyB,EAAL,GAAU/xB,EAAE,GAAGD,EAA1B;;AACA,UAAKiyB,EAAE,IAAI,CAAN,IAAWlyB,EAAE,IAAI,CAAjB,IAAsBE,EAAE,IAAI,CAAjC,EAAqC;AAEpCuF,QAAAA,CAAC,GAAGzF,EAAE,IAAKA,EAAE,GAAGE,EAAV,CAAN,CAFoC,CAGpC;;AACA,eAAOlB,MAAM,CAACwO,IAAP,CAAanK,CAAb,EAAiB8uB,eAAjB,CAAkCtB,IAAlC,EAAwCprB,CAAxC,CAAP;AAEA;;AAEDyrB,MAAAA,IAAI,CAACtrB,UAAL,CAAiBsH,CAAjB,EAAoB3J,CAApB;;AACA,UAAM6uB,EAAE,GAAGvB,IAAI,CAACxY,GAAL,CAAU6Y,IAAV,CAAX;;AACA,UAAMmB,EAAE,GAAGvB,IAAI,CAACzY,GAAL,CAAU6Y,IAAV,CAAX;;AACA,UAAKmB,EAAE,IAAI,CAAN,IAAWD,EAAE,IAAIC,EAAtB,EAA2B;AAE1B;AACA,eAAOrzB,MAAM,CAACwO,IAAP,CAAajK,CAAb,CAAP;AAEA;;AAED,UAAM+uB,EAAE,GAAGF,EAAE,GAAGnyB,EAAL,GAAUD,EAAE,GAAGqyB,EAA1B;;AACA,UAAKC,EAAE,IAAI,CAAN,IAAWryB,EAAE,IAAI,CAAjB,IAAsBoyB,EAAE,IAAI,CAAjC,EAAqC;AAEpC3sB,QAAAA,CAAC,GAAGzF,EAAE,IAAKA,EAAE,GAAGoyB,EAAV,CAAN,CAFoC,CAGpC;;AACA,eAAOrzB,MAAM,CAACwO,IAAP,CAAanK,CAAb,EAAiB8uB,eAAjB,CAAkCrB,IAAlC,EAAwCprB,CAAxC,CAAP;AAEA;;AAED,UAAM6sB,EAAE,GAAGryB,EAAE,GAAGmyB,EAAL,GAAUD,EAAE,GAAGH,EAA1B;;AACA,UAAKM,EAAE,IAAI,CAAN,IAAaN,EAAE,GAAG/xB,EAAP,IAAe,CAA1B,IAAiCkyB,EAAE,GAAGC,EAAP,IAAe,CAAnD,EAAuD;AAEtDtB,QAAAA,IAAI,CAACnrB,UAAL,CAAiBrC,CAAjB,EAAoBD,CAApB;;AACAoC,QAAAA,CAAC,GAAG,CAAEusB,EAAE,GAAG/xB,EAAP,KAAkB+xB,EAAE,GAAG/xB,EAAP,IAAgBkyB,EAAE,GAAGC,EAArB,CAAhB,CAAJ,CAHsD,CAItD;;AACA,eAAOrzB,MAAM,CAACwO,IAAP,CAAalK,CAAb,EAAiB6uB,eAAjB,CAAkCpB,IAAlC,EAAwCrrB,CAAxC,CAAP,CALsD,CAKF;AAEpD,OArE+B,CAuEhC;;;AACA,UAAM8sB,KAAK,GAAG,KAAMD,EAAE,GAAGD,EAAL,GAAUJ,EAAhB,CAAd,CAxEgC,CAyEhC;;AACAzsB,MAAAA,CAAC,GAAG6sB,EAAE,GAAGE,KAAT;AACA9sB,MAAAA,CAAC,GAAGwsB,EAAE,GAAGM,KAAT;AAEA,aAAOxzB,MAAM,CAACwO,IAAP,CAAanK,CAAb,EAAiB8uB,eAAjB,CAAkCtB,IAAlC,EAAwCprB,CAAxC,EAA4C0sB,eAA5C,CAA6DrB,IAA7D,EAAmEprB,CAAnE,CAAP;AAEA;;;WAED,gBAAQ8a,QAAR,EAAmB;AAElB,aAAOA,QAAQ,CAACnd,CAAT,CAAWoe,MAAX,CAAmB,KAAKpe,CAAxB,KAA+Bmd,QAAQ,CAACld,CAAT,CAAWme,MAAX,CAAmB,KAAKne,CAAxB,CAA/B,IAA8Dkd,QAAQ,CAACjd,CAAT,CAAWke,MAAX,CAAmB,KAAKle,CAAxB,CAArE;AAEA;;;WA9QD,mBAAkBF,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BvE,MAA3B,EAAoC;AAEnCA,MAAAA,MAAM,CAAC4G,UAAP,CAAmBrC,CAAnB,EAAsBD,CAAtB;;AACAmtB,MAAAA,KAAK,CAAC7qB,UAAN,CAAkBvC,CAAlB,EAAqBC,CAArB;;AACAtE,MAAAA,MAAM,CAAC6mB,KAAP,CAAc4K,KAAd;AAEA,UAAMgC,cAAc,GAAGzzB,MAAM,CAACoe,QAAP,EAAvB;;AACA,UAAKqV,cAAc,GAAG,CAAtB,EAA0B;AAEzB,eAAOzzB,MAAM,CAAC6G,cAAP,CAAuB,IAAInG,IAAI,CAACyG,IAAL,CAAWssB,cAAX,CAA3B,CAAP;AAEA;;AAED,aAAOzzB,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAP;AAEA,K,CAED;AACA;;;;WACA,sBAAqBob,KAArB,EAA4Blc,CAA5B,EAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCvE,MAArC,EAA8C;AAE7CyxB,MAAAA,KAAK,CAAC7qB,UAAN,CAAkBrC,CAAlB,EAAqBF,CAArB;;AACAqtB,MAAAA,KAAK,CAAC9qB,UAAN,CAAkBtC,CAAlB,EAAqBD,CAArB;;AACAstB,MAAAA,KAAK,CAAC/qB,UAAN,CAAkB2Z,KAAlB,EAAyBlc,CAAzB;;AAEA,UAAMqvB,KAAK,GAAGjC,KAAK,CAACpY,GAAN,CAAWoY,KAAX,CAAd;;AACA,UAAMkC,KAAK,GAAGlC,KAAK,CAACpY,GAAN,CAAWqY,KAAX,CAAd;;AACA,UAAMkC,KAAK,GAAGnC,KAAK,CAACpY,GAAN,CAAWsY,KAAX,CAAd;;AACA,UAAMkC,KAAK,GAAGnC,KAAK,CAACrY,GAAN,CAAWqY,KAAX,CAAd;;AACA,UAAMoC,KAAK,GAAGpC,KAAK,CAACrY,GAAN,CAAWsY,KAAX,CAAd;;AAEA,UAAM6B,KAAK,GAAKE,KAAK,GAAGG,KAAR,GAAgBF,KAAK,GAAGA,KAAxC,CAZ6C,CAc7C;;AACA,UAAKH,KAAK,KAAK,CAAf,EAAmB;AAElB;AACA;AACA,eAAOxzB,MAAM,CAACmF,GAAP,CAAY,CAAE,CAAd,EAAiB,CAAE,CAAnB,EAAsB,CAAE,CAAxB,CAAP;AAEA;;AAED,UAAM4uB,QAAQ,GAAG,IAAIP,KAArB;AACA,UAAMtU,CAAC,GAAG,CAAE2U,KAAK,GAAGD,KAAR,GAAgBD,KAAK,GAAGG,KAA1B,IAAoCC,QAA9C;AACA,UAAMttB,CAAC,GAAG,CAAEitB,KAAK,GAAGI,KAAR,GAAgBH,KAAK,GAAGC,KAA1B,IAAoCG,QAA9C,CAzB6C,CA2B7C;;AACA,aAAO/zB,MAAM,CAACmF,GAAP,CAAY,IAAI+Z,CAAJ,GAAQzY,CAApB,EAAuBA,CAAvB,EAA0ByY,CAA1B,CAAP;AAEA;;;WAED,uBAAsBqB,KAAtB,EAA6Blc,CAA7B,EAAgCC,CAAhC,EAAmCC,CAAnC,EAAuC;AAEtC,WAAKkuB,YAAL,CAAmBlS,KAAnB,EAA0Blc,CAA1B,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCqtB,KAAnC;AAEA,aAASA,KAAK,CAAC/vB,CAAN,IAAW,CAAb,IAAsB+vB,KAAK,CAACzvB,CAAN,IAAW,CAAjC,IAA4CyvB,KAAK,CAAC/vB,CAAN,GAAU+vB,KAAK,CAACzvB,CAAlB,IAAyB,CAA1E;AAEA;;;WAED,eAAcoe,KAAd,EAAqBwC,EAArB,EAAyBC,EAAzB,EAA6BgR,EAA7B,EAAiCtB,GAAjC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgD5yB,MAAhD,EAAyD;AAExD,WAAKyyB,YAAL,CAAmBlS,KAAnB,EAA0BwC,EAA1B,EAA8BC,EAA9B,EAAkCgR,EAAlC,EAAsCpC,KAAtC;AAEA5xB,MAAAA,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf;AACAnF,MAAAA,MAAM,CAACmzB,eAAP,CAAwBT,GAAxB,EAA6Bd,KAAK,CAAC/vB,CAAnC;AACA7B,MAAAA,MAAM,CAACmzB,eAAP,CAAwBR,GAAxB,EAA6Bf,KAAK,CAACzvB,CAAnC;AACAnC,MAAAA,MAAM,CAACmzB,eAAP,CAAwBP,GAAxB,EAA6BhB,KAAK,CAAC7c,CAAnC;AAEA,aAAO/U,MAAP;AAEA;;;WAED,uBAAsBqE,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BkgB,SAA/B,EAA2C;AAE1CgN,MAAAA,KAAK,CAAC7qB,UAAN,CAAkBrC,CAAlB,EAAqBD,CAArB;;AACAotB,MAAAA,KAAK,CAAC9qB,UAAN,CAAkBvC,CAAlB,EAAqBC,CAArB,EAH0C,CAK1C;;;AACA,aAASmtB,KAAK,CAAC5K,KAAN,CAAa6K,KAAb,EAAqBrY,GAArB,CAA0BoL,SAA1B,IAAwC,CAA1C,GAAgD,IAAhD,GAAuD,KAA9D;AAEA;;;;;;AAkMF,IAAIwP,UAAU,GAAG,CAAjB;;IAEMC,Q;;;;;AAEL,sBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKC,UAAL,GAAkB,IAAlB;AAEAluB,IAAAA,MAAM,CAACmN,cAAP,kCAA6B,IAA7B,EAAmC;AAAE9R,MAAAA,KAAK,EAAE2yB,UAAU;AAAnB,KAAnC;AAEA,YAAK9yB,IAAL,GAAYN,YAAY,EAAxB;AAEA,YAAKgM,IAAL,GAAY,EAAZ;AACA,YAAKxN,IAAL,GAAY,UAAZ;AAEA,YAAK+0B,QAAL,GAAgB7+B,cAAhB;AACA,YAAK8+B,IAAL,GAAYp/B,SAAZ;AACA,YAAKq/B,YAAL,GAAoB,KAApB;AAEA,YAAKC,OAAL,GAAe,CAAf;AACA,YAAKC,WAAL,GAAmB,KAAnB;AAEA,YAAKC,QAAL,GAAgBp+B,cAAhB;AACA,YAAKq+B,QAAL,GAAgBp+B,sBAAhB;AACA,YAAKq+B,aAAL,GAAqB/+B,WAArB;AACA,YAAKg/B,aAAL,GAAqB,IAArB;AACA,YAAKC,aAAL,GAAqB,IAArB;AACA,YAAKC,kBAAL,GAA0B,IAA1B;AAEA,YAAKC,SAAL,GAAiBh+B,cAAjB;AACA,YAAKi+B,SAAL,GAAiB,IAAjB;AACA,YAAKC,UAAL,GAAkB,IAAlB;AAEA,YAAKC,gBAAL,GAAwB,IAAxB;AACA,YAAKC,WAAL,GAAmB52B,iBAAnB;AACA,YAAK62B,UAAL,GAAkB,CAAlB;AACA,YAAKC,eAAL,GAAuB,IAAvB;AACA,YAAKC,WAAL,GAAmB73B,aAAnB;AACA,YAAK83B,YAAL,GAAoB93B,aAApB;AACA,YAAK+3B,YAAL,GAAoB/3B,aAApB;AACA,YAAKg4B,YAAL,GAAoB,KAApB;AAEA,YAAKC,cAAL,GAAsB,IAAtB;AACA,YAAKC,gBAAL,GAAwB,KAAxB;AACA,YAAKC,WAAL,GAAmB,KAAnB;AAEA,YAAKC,UAAL,GAAkB,IAAlB;AAEA,YAAKC,UAAL,GAAkB,IAAlB;AAEA,YAAKC,SAAL,GAAiB,IAAjB,CAhDa,CAgDU;;AAEvB,YAAKC,aAAL,GAAqB,KAArB;AACA,YAAKC,mBAAL,GAA2B,CAA3B;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AAEA,YAAKC,SAAL,GAAiB,KAAjB;AAEA,YAAKC,eAAL,GAAuB,KAAvB;AACA,YAAKC,kBAAL,GAA0B,KAA1B;AAEA,YAAKzI,OAAL,GAAe,IAAf;AAEA,YAAK0I,UAAL,GAAkB,IAAlB;AAEA,YAAKziB,QAAL,GAAgB,EAAhB;AAEA,YAAKlC,OAAL,GAAe,CAAf;AAEA,YAAK4kB,UAAL,GAAkB,CAAlB;AAnEa;AAqEb;;;;SAED,eAAgB;AAEf,aAAO,KAAKA,UAAZ;AAEA,K;SAED,aAAej1B,KAAf,EAAuB;AAEtB,UAAK,KAAKi1B,UAAL,GAAkB,CAAlB,KAAwBj1B,KAAK,GAAG,CAArC,EAAyC;AAExC,aAAKqQ,OAAL;AAEA;;AAED,WAAK4kB,UAAL,GAAkBj1B,KAAlB;AAEA;;;WAED,mBAAwC,CAAE;;;WAE1C,0BAAyE,CAAE;;;WAE3E,2BAAgD,CAAE;;;WAElD,iCAAwB;AAEvB,aAAO,KAAKk1B,eAAL,CAAqB9mB,QAArB,EAAP;AAEA;;;WAED,mBAAW4hB,MAAX,EAAoB;AAEnB,UAAKA,MAAM,KAAK9xB,SAAhB,EAA4B;;AAE5B,WAAM,IAAM+xB,GAAZ,IAAmBD,MAAnB,EAA4B;AAE3B,YAAMmF,QAAQ,GAAGnF,MAAM,CAAEC,GAAF,CAAvB;;AAEA,YAAKkF,QAAQ,KAAKj3B,SAAlB,EAA8B;AAE7B4F,UAAAA,OAAO,CAACC,IAAR,CAAc,uBAAuBksB,GAAvB,GAA6B,4BAA3C;AACA;AAEA,SAT0B,CAW3B;;;AACA,YAAKA,GAAG,KAAK,SAAb,EAAyB;AAExBnsB,UAAAA,OAAO,CAACC,IAAR,CAAc,WAAW,KAAKhG,IAAhB,GAAuB,oEAArC;AACA,eAAKq3B,WAAL,GAAqBD,QAAQ,KAAKrhC,WAAf,GAA+B,IAA/B,GAAsC,KAAzD;AACA;AAEA;;AAED,YAAMuhC,YAAY,GAAG,KAAMpF,GAAN,CAArB;;AAEA,YAAKoF,YAAY,KAAKn3B,SAAtB,EAAkC;AAEjC4F,UAAAA,OAAO,CAACC,IAAR,CAAc,WAAW,KAAKhG,IAAhB,GAAuB,MAAvB,GAAgCkyB,GAAhC,GAAsC,wCAApD;AACA;AAEA;;AAED,YAAKoF,YAAY,IAAIA,YAAY,CAACroB,OAAlC,EAA4C;AAE3CqoB,UAAAA,YAAY,CAACxxB,GAAb,CAAkBsxB,QAAlB;AAEA,SAJD,MAIO,IAAOE,YAAY,IAAIA,YAAY,CAACna,SAA/B,IAAgDia,QAAQ,IAAIA,QAAQ,CAACja,SAA1E,EAAwF;AAE9Fma,UAAAA,YAAY,CAACnoB,IAAb,CAAmBioB,QAAnB;AAEA,SAJM,MAIA;AAEN,eAAMlF,GAAN,IAAckF,QAAd;AAEA;AAED;AAED;;;WAED,gBAAQ7kB,IAAR,EAAe;AAEd,UAAMC,YAAY,GAAKD,IAAI,KAAKpS,SAAT,IAAsB,OAAOoS,IAAP,KAAgB,QAA7D;;AAEA,UAAKC,YAAL,EAAoB;AAEnBD,QAAAA,IAAI,GAAG;AACN0C,UAAAA,QAAQ,EAAE,EADJ;AAENxC,UAAAA,MAAM,EAAE;AAFF,SAAP;AAKA;;AAED,UAAMN,IAAI,GAAG;AACZ+C,QAAAA,QAAQ,EAAE;AACT5C,UAAAA,OAAO,EAAE,GADA;AAETtS,UAAAA,IAAI,EAAE,UAFG;AAGTmV,UAAAA,SAAS,EAAE;AAHF;AADE,OAAb,CAbc,CAqBd;;AACAhD,MAAAA,IAAI,CAACrQ,IAAL,GAAY,KAAKA,IAAjB;AACAqQ,MAAAA,IAAI,CAACnS,IAAL,GAAY,KAAKA,IAAjB;AAEA,UAAK,KAAKwN,IAAL,KAAc,EAAnB,EAAwB2E,IAAI,CAAC3E,IAAL,GAAY,KAAKA,IAAjB;AAExB,UAAK,KAAKU,KAAL,IAAc,KAAKA,KAAL,CAAWe,OAA9B,EAAwCkD,IAAI,CAACjE,KAAL,GAAa,KAAKA,KAAL,CAAWkC,MAAX,EAAb;AAExC,UAAK,KAAKmnB,SAAL,KAAmBp3B,SAAxB,EAAoCgS,IAAI,CAAColB,SAAL,GAAiB,KAAKA,SAAtB;AACpC,UAAK,KAAKC,SAAL,KAAmBr3B,SAAxB,EAAoCgS,IAAI,CAACqlB,SAAL,GAAiB,KAAKA,SAAtB;AAEpC,UAAK,KAAKC,KAAL,KAAet3B,SAApB,EAAgCgS,IAAI,CAACslB,KAAL,GAAa,KAAKA,KAAlB;AAChC,UAAK,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgBzoB,OAAxC,EAAkDkD,IAAI,CAACulB,UAAL,GAAkB,KAAKA,UAAL,CAAgBtnB,MAAhB,EAAlB;AAClD,UAAK,KAAKunB,cAAL,KAAwBx3B,SAA7B,EAAyCgS,IAAI,CAACwlB,cAAL,GAAsB,KAAKA,cAA3B;AACzC,UAAK,KAAKC,QAAL,IAAiB,KAAKA,QAAL,CAAc3oB,OAApC,EAA8CkD,IAAI,CAACylB,QAAL,GAAgB,KAAKA,QAAL,CAAcxnB,MAAd,EAAhB;AAC9C,UAAK,KAAKynB,iBAAL,IAA0B,KAAKA,iBAAL,KAA2B,CAA1D,EAA8D1lB,IAAI,CAAC0lB,iBAAL,GAAyB,KAAKA,iBAA9B;AAE9D,UAAK,KAAKC,QAAL,IAAiB,KAAKA,QAAL,CAAc7oB,OAApC,EAA8CkD,IAAI,CAAC2lB,QAAL,GAAgB,KAAKA,QAAL,CAAc1nB,MAAd,EAAhB;AAC9C,UAAK,KAAK2nB,iBAAL,KAA2B53B,SAAhC,EAA4CgS,IAAI,CAAC4lB,iBAAL,GAAyB,KAAKA,iBAA9B;AAC5C,UAAK,KAAKC,aAAL,IAAsB,KAAKA,aAAL,CAAmB/oB,OAA9C,EAAwDkD,IAAI,CAAC6lB,aAAL,GAAqB,KAAKA,aAAL,CAAmB5nB,MAAnB,EAArB;AACxD,UAAK,KAAK6nB,SAAL,KAAmB93B,SAAxB,EAAoCgS,IAAI,CAAC8lB,SAAL,GAAiB,KAAKA,SAAtB;AACpC,UAAK,KAAKC,SAAL,KAAmB/3B,SAAxB,EAAoCgS,IAAI,CAAC+lB,SAAL,GAAiB,KAAKA,SAAtB;AACpC,UAAK,KAAKC,kBAAL,KAA4Bh4B,SAAjC,EAA6CgS,IAAI,CAACgmB,kBAAL,GAA0B,KAAKA,kBAA/B;;AAE7C,UAAK,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBtkB,SAA5C,EAAwD;AAEvD3B,QAAAA,IAAI,CAACimB,YAAL,GAAoB,KAAKA,YAAL,CAAkBhjB,MAAlB,CAA0B7C,IAA1B,EAAiCzQ,IAArD;AAEA;;AAED,UAAK,KAAKu2B,qBAAL,IAA8B,KAAKA,qBAAL,CAA2BvkB,SAA9D,EAA0E;AAEzE3B,QAAAA,IAAI,CAACkmB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BjjB,MAA3B,CAAmC7C,IAAnC,EAA0CzQ,IAAvE;AAEA;;AAED,UAAK,KAAKw2B,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBxkB,SAAxD,EAAoE;AAEnE3B,QAAAA,IAAI,CAACmmB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBljB,MAAxB,CAAgC7C,IAAhC,EAAuCzQ,IAAjE;AACAqQ,QAAAA,IAAI,CAAComB,oBAAL,GAA4B,KAAKA,oBAAL,CAA0B9H,OAA1B,EAA5B;AAEA;;AAED,UAAK,KAAK+H,WAAL,KAAqBr4B,SAA1B,EAAsCgS,IAAI,CAACqmB,WAAL,GAAmB,KAAKA,WAAxB;AACtC,UAAK,KAAKC,cAAL,KAAwBt4B,SAA7B,EAAyCgS,IAAI,CAACsmB,cAAL,GAAsB,KAAKA,cAA3B;AACzC,UAAK,KAAKC,yBAAL,KAAmCv4B,SAAxC,EAAoDgS,IAAI,CAACumB,yBAAL,GAAiC,KAAKA,yBAAtC;;AAEpD,UAAK,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoB7kB,SAAhD,EAA4D;AAE3D3B,QAAAA,IAAI,CAACwmB,cAAL,GAAsB,KAAKA,cAAL,CAAoBvjB,MAApB,CAA4B7C,IAA5B,EAAmCzQ,IAAzD;AAEA;;AAED,UAAK,KAAK82B,uBAAL,IAAgC,KAAKA,uBAAL,CAA6B9kB,SAAlE,EAA8E;AAE7E3B,QAAAA,IAAI,CAACymB,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BxjB,MAA7B,CAAqC7C,IAArC,EAA4CzQ,IAA3E;AAEA;;AAED,UAAK,KAAK+2B,GAAL,IAAY,KAAKA,GAAL,CAAS/kB,SAA1B,EAAsC3B,IAAI,CAAC0mB,GAAL,GAAW,KAAKA,GAAL,CAASzjB,MAAT,CAAiB7C,IAAjB,EAAwBzQ,IAAnC;AACtC,UAAK,KAAKg3B,MAAL,IAAe,KAAKA,MAAL,CAAYhlB,SAAhC,EAA4C3B,IAAI,CAAC2mB,MAAL,GAAc,KAAKA,MAAL,CAAY1jB,MAAZ,CAAoB7C,IAApB,EAA2BzQ,IAAzC;AAC5C,UAAK,KAAKi3B,QAAL,IAAiB,KAAKA,QAAL,CAAcjlB,SAApC,EAAgD3B,IAAI,CAAC4mB,QAAL,GAAgB,KAAKA,QAAL,CAAc3jB,MAAd,CAAsB7C,IAAtB,EAA6BzQ,IAA7C;;AAEhD,UAAK,KAAKk3B,QAAL,IAAiB,KAAKA,QAAL,CAAcllB,SAApC,EAAgD;AAE/C3B,QAAAA,IAAI,CAAC6mB,QAAL,GAAgB,KAAKA,QAAL,CAAc5jB,MAAd,CAAsB7C,IAAtB,EAA6BzQ,IAA7C;AACAqQ,QAAAA,IAAI,CAAC8mB,iBAAL,GAAyB,KAAKA,iBAA9B;AAEA;;AAED,UAAK,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWplB,SAA9B,EAA0C;AAEzC3B,QAAAA,IAAI,CAAC+mB,KAAL,GAAa,KAAKA,KAAL,CAAW9jB,MAAX,CAAmB7C,IAAnB,EAA0BzQ,IAAvC;AACAqQ,QAAAA,IAAI,CAACgnB,cAAL,GAAsB,KAAKA,cAA3B;AAEA;;AAED,UAAK,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAatlB,SAAlC,EAA8C;AAE7C3B,QAAAA,IAAI,CAACinB,OAAL,GAAe,KAAKA,OAAL,CAAahkB,MAAb,CAAqB7C,IAArB,EAA4BzQ,IAA3C;AACAqQ,QAAAA,IAAI,CAACknB,SAAL,GAAiB,KAAKA,SAAtB;AAEA;;AAED,UAAK,KAAKC,SAAL,IAAkB,KAAKA,SAAL,CAAexlB,SAAtC,EAAkD;AAEjD3B,QAAAA,IAAI,CAACmnB,SAAL,GAAiB,KAAKA,SAAL,CAAelkB,MAAf,CAAuB7C,IAAvB,EAA8BzQ,IAA/C;AACAqQ,QAAAA,IAAI,CAAConB,aAAL,GAAqB,KAAKA,aAA1B;AACApnB,QAAAA,IAAI,CAACqnB,WAAL,GAAmB,KAAKA,WAAL,CAAiB/I,OAAjB,EAAnB;AAEA;;AAED,UAAK,KAAKgJ,eAAL,IAAwB,KAAKA,eAAL,CAAqB3lB,SAAlD,EAA8D;AAE7D3B,QAAAA,IAAI,CAACsnB,eAAL,GAAuB,KAAKA,eAAL,CAAqBrkB,MAArB,CAA6B7C,IAA7B,EAAoCzQ,IAA3D;AACAqQ,QAAAA,IAAI,CAACunB,iBAAL,GAAyB,KAAKA,iBAA9B;AACAvnB,QAAAA,IAAI,CAACwnB,gBAAL,GAAwB,KAAKA,gBAA7B;AAEA;;AAED,UAAK,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkB9lB,SAA5C,EAAwD3B,IAAI,CAACynB,YAAL,GAAoB,KAAKA,YAAL,CAAkBxkB,MAAlB,CAA0B7C,IAA1B,EAAiCzQ,IAArD;AACxD,UAAK,KAAK+3B,YAAL,IAAqB,KAAKA,YAAL,CAAkB/lB,SAA5C,EAAwD3B,IAAI,CAAC0nB,YAAL,GAAoB,KAAKA,YAAL,CAAkBzkB,MAAlB,CAA0B7C,IAA1B,EAAiCzQ,IAArD;AAExD,UAAK,KAAKg4B,WAAL,IAAoB,KAAKA,WAAL,CAAiBhmB,SAA1C,EAAsD3B,IAAI,CAAC2nB,WAAL,GAAmB,KAAKA,WAAL,CAAiB1kB,MAAjB,CAAyB7C,IAAzB,EAAgCzQ,IAAnD;AACtD,UAAK,KAAKi4B,WAAL,IAAoB,KAAKA,WAAL,CAAiBjmB,SAA1C,EAAsD3B,IAAI,CAAC4nB,WAAL,GAAmB,KAAKA,WAAL,CAAiB3kB,MAAjB,CAAyB7C,IAAzB,EAAgCzQ,IAAnD;AACtD,UAAK,KAAKk4B,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BlmB,SAA5D,EAAwE3B,IAAI,CAAC6nB,oBAAL,GAA4B,KAAKA,oBAAL,CAA0B5kB,MAA1B,CAAkC7C,IAAlC,EAAyCzQ,IAArE;AACxE,UAAK,KAAKm4B,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBnmB,SAApD,EAAgE3B,IAAI,CAAC8nB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB7kB,MAAtB,CAA8B7C,IAA9B,EAAqCzQ,IAA7D;;AAEhE,UAAK,KAAKo4B,MAAL,IAAe,KAAKA,MAAL,CAAYpmB,SAAhC,EAA4C;AAE3C3B,QAAAA,IAAI,CAAC+nB,MAAL,GAAc,KAAKA,MAAL,CAAY9kB,MAAZ,CAAoB7C,IAApB,EAA2BzQ,IAAzC;AAEA,YAAK,KAAKq4B,OAAL,KAAiBh6B,SAAtB,EAAkCgS,IAAI,CAACgoB,OAAL,GAAe,KAAKA,OAApB;AAElC;;AAED,UAAK,KAAKC,eAAL,KAAyBj6B,SAA9B,EAA0CgS,IAAI,CAACioB,eAAL,GAAuB,KAAKA,eAA5B;AAC1C,UAAK,KAAKC,YAAL,KAAsBl6B,SAA3B,EAAuCgS,IAAI,CAACkoB,YAAL,GAAoB,KAAKA,YAAzB;AACvC,UAAK,KAAKC,eAAL,KAAyBn6B,SAA9B,EAA0CgS,IAAI,CAACmoB,eAAL,GAAuB,KAAKA,eAA5B;;AAE1C,UAAK,KAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBzmB,SAA1C,EAAsD;AAErD3B,QAAAA,IAAI,CAACooB,WAAL,GAAmB,KAAKA,WAAL,CAAiBnlB,MAAjB,CAAyB7C,IAAzB,EAAgCzQ,IAAnD;AAEA;;AAED,UAAK,KAAK04B,YAAL,KAAsBr6B,SAA3B,EAAuCgS,IAAI,CAACqoB,YAAL,GAAoB,KAAKA,YAAzB;AACvC,UAAK,KAAKC,eAAL,IAAwB,KAAKA,eAAL,CAAqB3mB,SAAlD,EAA8D3B,IAAI,CAACsoB,eAAL,GAAuB,KAAKA,eAAL,CAAqBrlB,MAArB,CAA6B7C,IAA7B,EAAoCzQ,IAA3D;AAC9D,UAAK,KAAK44B,SAAL,KAAmBv6B,SAAxB,EAAoCgS,IAAI,CAACuoB,SAAL,GAAiB,KAAKA,SAAtB;AACpC,UAAK,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkB7mB,SAA5C,EAAwD3B,IAAI,CAACwoB,YAAL,GAAoB,KAAKA,YAAL,CAAkBvlB,MAAlB,CAA0B7C,IAA1B,EAAiCzQ,IAArD;AACxD,UAAK,KAAK84B,mBAAL,KAA6Bz6B,SAAlC,EAA8CgS,IAAI,CAACyoB,mBAAL,GAA2B,KAAKA,mBAAhC;AAC9C,UAAK,KAAKC,gBAAL,KAA0B16B,SAA/B,EAA2CgS,IAAI,CAAC0oB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBzqB,MAAtB,EAAxB;AAE3C,UAAK,KAAKL,IAAL,KAAc5P,SAAnB,EAA+BgS,IAAI,CAACpC,IAAL,GAAY,KAAKA,IAAjB;AAC/B,UAAK,KAAKymB,UAAL,KAAoB,IAAzB,EAAgCrkB,IAAI,CAACqkB,UAAL,GAAkB,KAAKA,UAAvB;AAChC,UAAK,KAAKsE,eAAL,KAAyB36B,SAA9B,EAA0CgS,IAAI,CAAC2oB,eAAL,GAAuB,KAAKA,eAA5B;AAE1C,UAAK,KAAK/F,QAAL,KAAkB7+B,cAAvB,EAAwCic,IAAI,CAAC4iB,QAAL,GAAgB,KAAKA,QAArB;AACxC,UAAK,KAAKC,IAAL,KAAcp/B,SAAnB,EAA+Buc,IAAI,CAAC6iB,IAAL,GAAY,KAAKA,IAAjB;AAC/B,UAAK,KAAKC,YAAV,EAAyB9iB,IAAI,CAAC8iB,YAAL,GAAoB,IAApB;AAEzB,UAAK,KAAKC,OAAL,GAAe,CAApB,EAAwB/iB,IAAI,CAAC+iB,OAAL,GAAe,KAAKA,OAApB;AACxB,UAAK,KAAKC,WAAL,KAAqB,IAA1B,EAAiChjB,IAAI,CAACgjB,WAAL,GAAmB,KAAKA,WAAxB;AAEjChjB,MAAAA,IAAI,CAACujB,SAAL,GAAiB,KAAKA,SAAtB;AACAvjB,MAAAA,IAAI,CAACwjB,SAAL,GAAiB,KAAKA,SAAtB;AACAxjB,MAAAA,IAAI,CAACyjB,UAAL,GAAkB,KAAKA,UAAvB;AACAzjB,MAAAA,IAAI,CAACskB,UAAL,GAAkB,KAAKA,UAAvB;AAEAtkB,MAAAA,IAAI,CAACikB,YAAL,GAAoB,KAAKA,YAAzB;AACAjkB,MAAAA,IAAI,CAAC0jB,gBAAL,GAAwB,KAAKA,gBAA7B;AACA1jB,MAAAA,IAAI,CAAC2jB,WAAL,GAAmB,KAAKA,WAAxB;AACA3jB,MAAAA,IAAI,CAAC4jB,UAAL,GAAkB,KAAKA,UAAvB;AACA5jB,MAAAA,IAAI,CAAC6jB,eAAL,GAAuB,KAAKA,eAA5B;AACA7jB,MAAAA,IAAI,CAAC8jB,WAAL,GAAmB,KAAKA,WAAxB;AACA9jB,MAAAA,IAAI,CAAC+jB,YAAL,GAAoB,KAAKA,YAAzB;AACA/jB,MAAAA,IAAI,CAACgkB,YAAL,GAAoB,KAAKA,YAAzB,CAjLc,CAmLd;;AACA,UAAK,KAAK1pB,QAAL,KAAkBtM,SAAlB,IAA+B,KAAKsM,QAAL,KAAkB,CAAtD,EAA0D0F,IAAI,CAAC1F,QAAL,GAAgB,KAAKA,QAArB;AAE1D,UAAK,KAAKkqB,aAAL,KAAuB,IAA5B,EAAmCxkB,IAAI,CAACwkB,aAAL,GAAqB,IAArB;AACnC,UAAK,KAAKC,mBAAL,KAA6B,CAAlC,EAAsCzkB,IAAI,CAACykB,mBAAL,GAA2B,KAAKA,mBAAhC;AACtC,UAAK,KAAKC,kBAAL,KAA4B,CAAjC,EAAqC1kB,IAAI,CAAC0kB,kBAAL,GAA0B,KAAKA,kBAA/B;AAErC,UAAK,KAAKkE,SAAL,KAAmB56B,SAAnB,IAAgC,KAAK46B,SAAL,KAAmB,CAAxD,EAA4D5oB,IAAI,CAAC4oB,SAAL,GAAiB,KAAKA,SAAtB;AAC5D,UAAK,KAAKC,QAAL,KAAkB76B,SAAvB,EAAmCgS,IAAI,CAAC6oB,QAAL,GAAgB,KAAKA,QAArB;AACnC,UAAK,KAAKC,OAAL,KAAiB96B,SAAtB,EAAkCgS,IAAI,CAAC8oB,OAAL,GAAe,KAAKA,OAApB;AAClC,UAAK,KAAKrQ,KAAL,KAAezqB,SAApB,EAAgCgS,IAAI,CAACyY,KAAL,GAAa,KAAKA,KAAlB;AAEhC,UAAK,KAAKkM,SAAL,KAAmB,IAAxB,EAA+B3kB,IAAI,CAAC2kB,SAAL,GAAiB,IAAjB;AAE/B,UAAK,KAAKoE,SAAL,GAAiB,CAAtB,EAA0B/oB,IAAI,CAAC+oB,SAAL,GAAiB,KAAKA,SAAtB;AAC1B,UAAK,KAAKnE,eAAL,KAAyB,IAA9B,EAAqC5kB,IAAI,CAAC4kB,eAAL,GAAuB,KAAKA,eAA5B;AACrC,UAAK,KAAKC,kBAAL,KAA4B,IAAjC,EAAwC7kB,IAAI,CAAC6kB,kBAAL,GAA0B,KAAKA,kBAA/B;AAExC,UAAK,KAAKmE,SAAL,KAAmB,IAAxB,EAA+BhpB,IAAI,CAACgpB,SAAL,GAAiB,KAAKA,SAAtB;AAC/B,UAAK,KAAKC,kBAAL,GAA0B,CAA/B,EAAmCjpB,IAAI,CAACipB,kBAAL,GAA0B,KAAKA,kBAA/B;AACnC,UAAK,KAAKC,gBAAL,KAA0B,OAA/B,EAAyClpB,IAAI,CAACkpB,gBAAL,GAAwB,KAAKA,gBAA7B;AACzC,UAAK,KAAKC,iBAAL,KAA2B,OAAhC,EAA0CnpB,IAAI,CAACmpB,iBAAL,GAAyB,KAAKA,iBAA9B;AAE1C,UAAK,KAAKjE,WAAL,KAAqB,IAA1B,EAAiCllB,IAAI,CAACklB,WAAL,GAAmB,KAAKA,WAAxB;AAEjC,UAAK,KAAK9I,OAAL,KAAiB,KAAtB,EAA8Bpc,IAAI,CAACoc,OAAL,GAAe,KAAf;AAE9B,UAAK,KAAK0I,UAAL,KAAoB,KAAzB,EAAiC9kB,IAAI,CAAC8kB,UAAL,GAAkB,KAAlB;AAEjC,UAAK,KAAKsE,GAAL,KAAa,KAAlB,EAA0BppB,IAAI,CAACopB,GAAL,GAAW,KAAX;AAE1B,UAAK1mB,IAAI,CAACE,SAAL,CAAgB,KAAKP,QAArB,MAAoC,IAAzC,EAAgDrC,IAAI,CAACqC,QAAL,GAAgB,KAAKA,QAArB,CAlNlC,CAoNd;;AAEA,eAASud,gBAAT,CAA2BC,KAA3B,EAAmC;AAElC,YAAMC,MAAM,GAAG,EAAf;;AAEA,aAAM,IAAMC,GAAZ,IAAmBF,KAAnB,EAA2B;AAE1B,cAAM7f,MAAI,GAAG6f,KAAK,CAAEE,GAAF,CAAlB;AACA,iBAAO/f,MAAI,CAAC+C,QAAZ;AACA+c,UAAAA,MAAM,CAAC3xB,IAAP,CAAa6R,MAAb;AAEA;;AAED,eAAO8f,MAAP;AAEA;;AAED,UAAKzf,YAAL,EAAoB;AAEnB,YAAMyC,QAAQ,GAAG8c,gBAAgB,CAAExf,IAAI,CAAC0C,QAAP,CAAjC;AACA,YAAMxC,MAAM,GAAGsf,gBAAgB,CAAExf,IAAI,CAACE,MAAP,CAA/B;AAEA,YAAKwC,QAAQ,CAACjU,MAAT,GAAkB,CAAvB,EAA2BmR,IAAI,CAAC8C,QAAL,GAAgBA,QAAhB;AAC3B,YAAKxC,MAAM,CAACzR,MAAP,GAAgB,CAArB,EAAyBmR,IAAI,CAACM,MAAL,GAAcA,MAAd;AAEzB;;AAED,aAAON,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKjM,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAMJ,MAAN,EAAe;AAEd,WAAKvB,IAAL,GAAYuB,MAAM,CAACvB,IAAnB;AAEA,WAAKunB,QAAL,GAAgBhmB,MAAM,CAACgmB,QAAvB;AACA,WAAKC,IAAL,GAAYjmB,MAAM,CAACimB,IAAnB;AACA,WAAKC,YAAL,GAAoBlmB,MAAM,CAACkmB,YAA3B;AAEA,WAAKC,OAAL,GAAenmB,MAAM,CAACmmB,OAAtB;AACA,WAAKC,WAAL,GAAmBpmB,MAAM,CAAComB,WAA1B;AAEA,WAAKC,QAAL,GAAgBrmB,MAAM,CAACqmB,QAAvB;AACA,WAAKC,QAAL,GAAgBtmB,MAAM,CAACsmB,QAAvB;AACA,WAAKC,aAAL,GAAqBvmB,MAAM,CAACumB,aAA5B;AACA,WAAKC,aAAL,GAAqBxmB,MAAM,CAACwmB,aAA5B;AACA,WAAKC,aAAL,GAAqBzmB,MAAM,CAACymB,aAA5B;AACA,WAAKC,kBAAL,GAA0B1mB,MAAM,CAAC0mB,kBAAjC;AAEA,WAAKC,SAAL,GAAiB3mB,MAAM,CAAC2mB,SAAxB;AACA,WAAKC,SAAL,GAAiB5mB,MAAM,CAAC4mB,SAAxB;AACA,WAAKC,UAAL,GAAkB7mB,MAAM,CAAC6mB,UAAzB;AAEA,WAAKC,gBAAL,GAAwB9mB,MAAM,CAAC8mB,gBAA/B;AACA,WAAKC,WAAL,GAAmB/mB,MAAM,CAAC+mB,WAA1B;AACA,WAAKC,UAAL,GAAkBhnB,MAAM,CAACgnB,UAAzB;AACA,WAAKC,eAAL,GAAuBjnB,MAAM,CAACinB,eAA9B;AACA,WAAKC,WAAL,GAAmBlnB,MAAM,CAACknB,WAA1B;AACA,WAAKC,YAAL,GAAoBnnB,MAAM,CAACmnB,YAA3B;AACA,WAAKC,YAAL,GAAoBpnB,MAAM,CAAConB,YAA3B;AACA,WAAKC,YAAL,GAAoBrnB,MAAM,CAACqnB,YAA3B;AAEA,UAAMoF,SAAS,GAAGzsB,MAAM,CAACsnB,cAAzB;AACA,UAAIoF,SAAS,GAAG,IAAhB;;AAEA,UAAKD,SAAS,KAAK,IAAnB,EAA0B;AAEzB,YAAMn5B,CAAC,GAAGm5B,SAAS,CAACx6B,MAApB;AACAy6B,QAAAA,SAAS,GAAG,IAAI7oB,KAAJ,CAAWvQ,CAAX,CAAZ;;AAEA,aAAM,IAAIvB,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhC26B,UAAAA,SAAS,CAAE36B,CAAF,CAAT,GAAiB06B,SAAS,CAAE16B,CAAF,CAAT,CAAe8W,KAAf,EAAjB;AAEA;AAED;;AAED,WAAKye,cAAL,GAAsBoF,SAAtB;AACA,WAAKnF,gBAAL,GAAwBvnB,MAAM,CAACunB,gBAA/B;AACA,WAAKC,WAAL,GAAmBxnB,MAAM,CAACwnB,WAA1B;AAEA,WAAKC,UAAL,GAAkBznB,MAAM,CAACynB,UAAzB;AAEA,WAAKC,UAAL,GAAkB1nB,MAAM,CAAC0nB,UAAzB;AAEA,WAAKC,SAAL,GAAiB3nB,MAAM,CAAC2nB,SAAxB;AAEA,WAAKC,aAAL,GAAqB5nB,MAAM,CAAC4nB,aAA5B;AACA,WAAKC,mBAAL,GAA2B7nB,MAAM,CAAC6nB,mBAAlC;AACA,WAAKC,kBAAL,GAA0B9nB,MAAM,CAAC8nB,kBAAjC;AAEA,WAAKC,SAAL,GAAiB/nB,MAAM,CAAC+nB,SAAxB;AAEA,WAAKoE,SAAL,GAAiBnsB,MAAM,CAACmsB,SAAxB;AACA,WAAKnE,eAAL,GAAuBhoB,MAAM,CAACgoB,eAA9B;AACA,WAAKC,kBAAL,GAA0BjoB,MAAM,CAACioB,kBAAjC;AAEA,WAAKzI,OAAL,GAAexf,MAAM,CAACwf,OAAtB;AAEA,WAAK0I,UAAL,GAAkBloB,MAAM,CAACkoB,UAAzB;AAEA,WAAKziB,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAgBhG,MAAM,CAACyF,QAAvB,CAAZ,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,WAAKc,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAApB;AAEA;;;SAED,aAAiBiC,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKqQ,OAAL;AAEtB;;;;EA3eqBvS,e;;IA+ejB27B,iB;;;;;AAEL,6BAAapK,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKqK,mBAAL,GAA2B,IAA3B;AAEA,YAAK37B,IAAL,GAAY,mBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb,CARyB,CAQW;;AAEpC,YAAK6pB,GAAL,GAAW,IAAX;AAEA,YAAKG,QAAL,GAAgB,IAAhB;AACA,YAAKC,iBAAL,GAAyB,GAAzB;AAEA,YAAKC,KAAL,GAAa,IAAb;AACA,YAAKC,cAAL,GAAsB,GAAtB;AAEA,YAAKY,WAAL,GAAmB,IAAnB;AAEA,YAAKhB,QAAL,GAAgB,IAAhB;AAEA,YAAKmB,MAAL,GAAc,IAAd;AACA,YAAKC,OAAL,GAAepiC,iBAAf;AACA,YAAKsiC,YAAL,GAAoB,CAApB;AACA,YAAKC,eAAL,GAAuB,IAAvB;AAEA,YAAKa,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AACA,YAAKC,gBAAL,GAAwB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,OAAzB;AAEA,YAAKC,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAlCyB;AAoCzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,kFAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK2qB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKG,QAAL,GAAgBjqB,MAAM,CAACiqB,QAAvB;AACA,WAAKC,iBAAL,GAAyBlqB,MAAM,CAACkqB,iBAAhC;AAEA,WAAKC,KAAL,GAAanqB,MAAM,CAACmqB,KAApB;AACA,WAAKC,cAAL,GAAsBpqB,MAAM,CAACoqB,cAA7B;AAEA,WAAKY,WAAL,GAAmBhrB,MAAM,CAACgrB,WAA1B;AAEA,WAAKhB,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKmB,MAAL,GAAcnrB,MAAM,CAACmrB,MAArB;AACA,WAAKC,OAAL,GAAeprB,MAAM,CAACorB,OAAtB;AACA,WAAKE,YAAL,GAAoBtrB,MAAM,CAACsrB,YAA3B;AACA,WAAKC,eAAL,GAAuBvrB,MAAM,CAACurB,eAA9B;AAEA,WAAKa,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AACA,WAAKC,gBAAL,GAAwBtsB,MAAM,CAACssB,gBAA/B;AACA,WAAKC,iBAAL,GAAyBvsB,MAAM,CAACusB,iBAAhC;AAEA,WAAKC,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EAxE8B1G,Q;;AA4EhC,IAAMgH,SAAS,GAAG,aAAc,IAAI3e,OAAJ,EAAhC;;AACA,IAAM4e,UAAU,GAAG,aAAc,IAAI90B,OAAJ,EAAjC;;IAEM+0B,e;AAEL,2BAAan7B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAE1C,QAAK8B,KAAK,CAACC,OAAN,CAAejS,KAAf,CAAL,EAA8B;AAE7B,YAAM,IAAIq7B,SAAJ,CAAe,uDAAf,CAAN;AAEA;;AAED,SAAKC,iBAAL,GAAyB,IAAzB;AAEA,SAAK1uB,IAAL,GAAY,EAAZ;AAEA,SAAK5M,KAAL,GAAaA,KAAb;AACA,SAAKo7B,QAAL,GAAgBA,QAAhB;AACA,SAAKxjB,KAAL,GAAa5X,KAAK,KAAKT,SAAV,GAAsBS,KAAK,CAACI,MAAN,GAAeg7B,QAArC,GAAgD,CAA7D;AACA,SAAKlrB,UAAL,GAAkBA,UAAU,KAAK,IAAjC;AAEA,SAAKqrB,KAAL,GAAah9B,eAAb;AACA,SAAKi9B,WAAL,GAAmB;AAAE7zB,MAAAA,MAAM,EAAE,CAAV;AAAaiQ,MAAAA,KAAK,EAAE,CAAE;AAAtB,KAAnB;AAEA,SAAKlG,OAAL,GAAe,CAAf;AAEA;;;;WAED,4BAAmB,CAAE;;;SAErB,aAAiBrQ,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKqQ,OAAL;AAEtB;;;WAED,kBAAUrQ,KAAV,EAAkB;AAEjB,WAAKk6B,KAAL,GAAal6B,KAAb;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM8M,MAAN,EAAe;AAEd,WAAKvB,IAAL,GAAYuB,MAAM,CAACvB,IAAnB;AACA,WAAK5M,KAAL,GAAa,IAAImO,MAAM,CAACnO,KAAP,CAAasF,WAAjB,CAA8B6I,MAAM,CAACnO,KAArC,CAAb;AACA,WAAKo7B,QAAL,GAAgBjtB,MAAM,CAACitB,QAAvB;AACA,WAAKxjB,KAAL,GAAazJ,MAAM,CAACyJ,KAApB;AACA,WAAK1H,UAAL,GAAkB/B,MAAM,CAAC+B,UAAzB;AAEA,WAAKqrB,KAAL,GAAaptB,MAAM,CAACotB,KAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQE,MAAR,EAAgB7zB,SAAhB,EAA2B8zB,MAA3B,EAAoC;AAEnCD,MAAAA,MAAM,IAAI,KAAKL,QAAf;AACAM,MAAAA,MAAM,IAAI9zB,SAAS,CAACwzB,QAApB;;AAEA,WAAM,IAAIl7B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKi7B,QAA1B,EAAoCl7B,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,aAAKF,KAAL,CAAYy7B,MAAM,GAAGv7B,CAArB,IAA2B0H,SAAS,CAAC5H,KAAV,CAAiB07B,MAAM,GAAGx7B,CAA1B,CAA3B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAWF,KAAX,EAAmB;AAElB,WAAKA,KAAL,CAAWkF,GAAX,CAAgBlF,KAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiB27B,MAAjB,EAA0B;AAEzB,UAAM37B,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAI2H,MAAM,GAAG,CAAb;;AAEA,WAAM,IAAIzH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGw7B,MAAM,CAACv7B,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,YAAIoN,KAAK,GAAGquB,MAAM,CAAEz7B,CAAF,CAAlB;;AAEA,YAAKoN,KAAK,KAAK/N,SAAf,EAA2B;AAE1B4F,UAAAA,OAAO,CAACC,IAAR,CAAc,6DAAd,EAA6ElF,CAA7E;AACAoN,UAAAA,KAAK,GAAG,IAAIc,KAAJ,EAAR;AAEA;;AAEDpO,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB2F,KAAK,CAAC9B,CAA3B;AACAxL,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB2F,KAAK,CAAC1C,CAA3B;AACA5K,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB2F,KAAK,CAACjJ,CAA3B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAmBu3B,OAAnB,EAA6B;AAE5B,UAAM57B,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAI2H,MAAM,GAAG,CAAb;;AAEA,WAAM,IAAIzH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy7B,OAAO,CAACx7B,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD,YAAIqgB,MAAM,GAAGqb,OAAO,CAAE17B,CAAF,CAApB;;AAEA,YAAKqgB,MAAM,KAAKhhB,SAAhB,EAA4B;AAE3B4F,UAAAA,OAAO,CAACC,IAAR,CAAc,gEAAd,EAAgFlF,CAAhF;AACAqgB,UAAAA,MAAM,GAAG,IAAIna,OAAJ,EAAT;AAEA;;AAEDpG,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAAC3e,CAA5B;AACA5B,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAACre,CAA5B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAmB05B,OAAnB,EAA6B;AAE5B,UAAM57B,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAI2H,MAAM,GAAG,CAAb;;AAEA,WAAM,IAAIzH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy7B,OAAO,CAACx7B,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD,YAAIqgB,MAAM,GAAGqb,OAAO,CAAE17B,CAAF,CAApB;;AAEA,YAAKqgB,MAAM,KAAKhhB,SAAhB,EAA4B;AAE3B4F,UAAAA,OAAO,CAACC,IAAR,CAAc,gEAAd,EAAgFlF,CAAhF;AACAqgB,UAAAA,MAAM,GAAG,IAAIjE,OAAJ,EAAT;AAEA;;AAEDtc,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAAC3e,CAA5B;AACA5B,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAACre,CAA5B;AACAlC,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAACzL,CAA5B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAmB8mB,OAAnB,EAA6B;AAE5B,UAAM57B,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAI2H,MAAM,GAAG,CAAb;;AAEA,WAAM,IAAIzH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy7B,OAAO,CAACx7B,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD,YAAIqgB,MAAM,GAAGqb,OAAO,CAAE17B,CAAF,CAApB;;AAEA,YAAKqgB,MAAM,KAAKhhB,SAAhB,EAA4B;AAE3B4F,UAAAA,OAAO,CAACC,IAAR,CAAc,gEAAd,EAAgFlF,CAAhF;AACAqgB,UAAAA,MAAM,GAAG,IAAI1L,OAAJ,EAAT;AAEA;;AAED7U,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAAC3e,CAA5B;AACA5B,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAACre,CAA5B;AACAlC,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAACzL,CAA5B;AACA9U,QAAAA,KAAK,CAAE2H,MAAM,EAAR,CAAL,GAAqB4Y,MAAM,CAAC9Z,CAA5B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,sBAAc/E,CAAd,EAAkB;AAEjB,UAAK,KAAK05B,QAAL,KAAkB,CAAvB,EAA2B;AAE1B,aAAM,IAAIl7B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9Cg7B,UAAAA,UAAU,CAACra,mBAAX,CAAgC,IAAhC,EAAsC3gB,CAAtC;;AACAg7B,UAAAA,UAAU,CAACtmB,YAAX,CAAyBlT,CAAzB;;AAEA,eAAKm6B,KAAL,CAAY37B,CAAZ,EAAeg7B,UAAU,CAACt5B,CAA1B,EAA6Bs5B,UAAU,CAACh5B,CAAxC;AAEA;AAED,OAXD,MAWO,IAAK,KAAKk5B,QAAL,KAAkB,CAAvB,EAA2B;AAEjC,aAAM,IAAIl7B,GAAC,GAAG,CAAR,EAAWC,GAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,GAAC,GAAGC,GAArC,EAAwCD,GAAC,EAAzC,EAA+C;AAE9C+6B,UAAAA,SAAS,CAACpa,mBAAV,CAA+B,IAA/B,EAAqC3gB,GAArC;;AACA+6B,UAAAA,SAAS,CAACrmB,YAAV,CAAwBlT,CAAxB;;AAEA,eAAKo6B,MAAL,CAAa57B,GAAb,EAAgB+6B,SAAS,CAACr5B,CAA1B,EAA6Bq5B,SAAS,CAAC/4B,CAAvC,EAA0C+4B,SAAS,CAACnmB,CAApD;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,sBAAcpT,CAAd,EAAkB;AAEjB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9C+6B,QAAAA,SAAS,CAACpa,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+6B,QAAAA,SAAS,CAAC3d,YAAV,CAAwB5b,CAAxB;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+6B,SAAS,CAACr5B,CAA1B,EAA6Bq5B,SAAS,CAAC/4B,CAAvC,EAA0C+4B,SAAS,CAACnmB,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAmBpT,CAAnB,EAAuB;AAEtB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9C+6B,QAAAA,SAAS,CAACpa,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+6B,QAAAA,SAAS,CAACc,iBAAV,CAA6Br6B,CAA7B;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+6B,SAAS,CAACr5B,CAA1B,EAA6Bq5B,SAAS,CAAC/4B,CAAvC,EAA0C+4B,SAAS,CAACnmB,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,4BAAoBpT,CAApB,EAAwB;AAEvB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9C+6B,QAAAA,SAAS,CAACpa,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+6B,QAAAA,SAAS,CAACnU,kBAAV,CAA8BplB,CAA9B;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+6B,SAAS,CAACr5B,CAA1B,EAA6Bq5B,SAAS,CAAC/4B,CAAvC,EAA0C+4B,SAAS,CAACnmB,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,aAAKzT,KAAL,EAAyB;AAAA,UAAbsG,MAAa,uEAAJ,CAAI;AAExB,WAAK3H,KAAL,CAAWkF,GAAX,CAAgB7D,KAAhB,EAAuBsG,MAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM/H,KAAN,EAAc;AAEb,aAAO,KAAKI,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAzB,CAAP;AAEA;;;WAED,cAAMx7B,KAAN,EAAagC,CAAb,EAAiB;AAEhB,WAAK5B,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAzB,IAAsCx5B,CAAtC;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMhC,KAAN,EAAc;AAEb,aAAO,KAAKI,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,CAAP;AAEA;;;WAED,cAAMx7B,KAAN,EAAasC,CAAb,EAAiB;AAEhB,WAAKlC,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,IAA0Cl5B,CAA1C;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMtC,KAAN,EAAc;AAEb,aAAO,KAAKI,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,CAAP;AAEA;;;WAED,cAAMx7B,KAAN,EAAakV,CAAb,EAAiB;AAEhB,WAAK9U,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,IAA0CtmB,CAA1C;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMlV,KAAN,EAAc;AAEb,aAAO,KAAKI,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,CAAP;AAEA;;;WAED,cAAMx7B,KAAN,EAAa6G,CAAb,EAAiB;AAEhB,WAAKzG,KAAL,CAAYJ,KAAK,GAAG,KAAKw7B,QAAb,GAAwB,CAApC,IAA0C30B,CAA1C;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO7G,KAAP,EAAcgC,CAAd,EAAiBM,CAAjB,EAAqB;AAEpBtC,MAAAA,KAAK,IAAI,KAAKw7B,QAAd;AAEA,WAAKp7B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BgC,CAA1B;AACA,WAAK5B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BsC,CAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQtC,KAAR,EAAegC,CAAf,EAAkBM,CAAlB,EAAqB4S,CAArB,EAAyB;AAExBlV,MAAAA,KAAK,IAAI,KAAKw7B,QAAd;AAEA,WAAKp7B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BgC,CAA1B;AACA,WAAK5B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BsC,CAA1B;AACA,WAAKlC,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BkV,CAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAASlV,KAAT,EAAgBgC,CAAhB,EAAmBM,CAAnB,EAAsB4S,CAAtB,EAAyBrO,CAAzB,EAA6B;AAE5B7G,MAAAA,KAAK,IAAI,KAAKw7B,QAAd;AAEA,WAAKp7B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BgC,CAA1B;AACA,WAAK5B,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BsC,CAA1B;AACA,WAAKlC,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0BkV,CAA1B;AACA,WAAK9U,KAAL,CAAYJ,KAAK,GAAG,CAApB,IAA0B6G,CAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUwU,QAAV,EAAqB;AAEpB,WAAK+gB,gBAAL,GAAwB/gB,QAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK3V,WAAT,CAAsB,KAAKtF,KAA3B,EAAkC,KAAKo7B,QAAvC,EAAkD7sB,IAAlD,CAAwD,IAAxD,CAAP;AAEA;;;WAED,kBAAS;AAER,UAAMgD,IAAI,GAAG;AACZ6pB,QAAAA,QAAQ,EAAE,KAAKA,QADH;AAEZh8B,QAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWsF,WAAX,CAAuBsH,IAFjB;AAGZ5M,QAAAA,KAAK,EAAEgS,KAAK,CAACK,IAAN,CAAY,KAAKrS,KAAjB,CAHK;AAIZkQ,QAAAA,UAAU,EAAE,KAAKA;AAJL,OAAb;AAOA,UAAK,KAAKtD,IAAL,KAAc,EAAnB,EAAwB2E,IAAI,CAAC3E,IAAL,GAAY,KAAKA,IAAjB;AACxB,UAAK,KAAK2uB,KAAL,KAAeh9B,eAApB,EAAsCgT,IAAI,CAACgqB,KAAL,GAAa,KAAKA,KAAlB;AACtC,UAAK,KAAKC,WAAL,CAAiB7zB,MAAjB,KAA4B,CAA5B,IAAiC,KAAK6zB,WAAL,CAAiB5jB,KAAjB,KAA2B,CAAE,CAAnE,EAAuErG,IAAI,CAACiqB,WAAL,GAAmB,KAAKA,WAAxB;AAEvE,aAAOjqB,IAAP;AAEA;;;;KAIF;;;IAEM0qB,mB;;;;;AAEL,+BAAaj8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAIvK,SAAJ,CAAe3F,KAAf,CAFmC,EAEXo7B,QAFW,EAEDlrB,UAFC;AAI1C;;;EANgCirB,e;;IAU5Be,oB;;;;;AAEL,gCAAal8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAIzK,UAAJ,CAAgBzF,KAAhB,CAFmC,EAEVo7B,QAFU,EAEAlrB,UAFA;AAI1C;;;EANiCirB,e;;IAU7BgB,2B;;;;;AAEL,uCAAan8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI7D,iBAAJ,CAAuBrM,KAAvB,CAFmC,EAEHo7B,QAFG,EAEOlrB,UAFP;AAI1C;;;EANwCirB,e;;IAUpCiB,oB;;;;;AAEL,gCAAap8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAIxK,UAAJ,CAAgB1F,KAAhB,CAFmC,EAEVo7B,QAFU,EAEAlrB,UAFA;AAI1C;;;EANiCirB,e;;IAU7BkB,qB;;;;;AAEL,iCAAar8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI1K,WAAJ,CAAiBxF,KAAjB,CAFmC,EAETo7B,QAFS,EAEClrB,UAFD;AAI1C;;;EANkCirB,e;;IAU9BmB,oB;;;;;AAEL,gCAAat8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI5D,UAAJ,CAAgBtM,KAAhB,CAFmC,EAEVo7B,QAFU,EAEAlrB,UAFA;AAI1C;;;EANiCirB,e;;IAU7BoB,qB;;;;;AAEL,iCAAav8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI3D,WAAJ,CAAiBvM,KAAjB,CAFmC,EAETo7B,QAFS,EAEClrB,UAFD;AAI1C;;;EANkCirB,e;;IAU9BqB,sB;;;;;AAEL,kCAAax8B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA;;AAE1C,kCAAO,IAAI1K,WAAJ,CAAiBxF,KAAjB,CAAP,EAAiCo7B,QAAjC,EAA2ClrB,UAA3C;AAEA,YAAKusB,wBAAL,GAAgC,IAAhC;AAJ0C;AAM1C;;;EARmCtB,e;;IAa/BuB,sB;;;;;AAEL,kCAAa18B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI3K,YAAJ,CAAkBvF,KAAlB,CAFmC,EAERo7B,QAFQ,EAEElrB,UAFF;AAI1C;;;EANmCirB,e;;IAU/BwB,sB;;;;;AAEL,kCAAa38B,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAA2C;AAAA;;AAAA,+BAEnC,IAAI1D,YAAJ,CAAkBxM,KAAlB,CAFmC,EAERo7B,QAFQ,EAEElrB,UAFF;AAI1C;;;EANmCirB,e;;AAUrC,IAAIyB,KAAK,GAAG,CAAZ;;AAEA,IAAMC,GAAG,GAAG,aAAc,IAAI9V,OAAJ,EAA1B;;AACA,IAAM+V,IAAI,GAAG,aAAc,IAAIjQ,QAAJ,EAA3B;;AACA,IAAMkQ,OAAO,GAAG,aAAc,IAAIzgB,OAAJ,EAA9B;;AACA,IAAM0gB,MAAM,GAAG,aAAc,IAAI9d,IAAJ,EAA7B;;AACA,IAAM+d,gBAAgB,GAAG,aAAc,IAAI/d,IAAJ,EAAvC;;AACA,IAAMge,SAAS,GAAG,aAAc,IAAI5gB,OAAJ,EAAhC;;IAEM6gB,c;;;;;AAEL,4BAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKC,gBAAL,GAAwB,IAAxB;AAEAp3B,IAAAA,MAAM,CAACmN,cAAP,kCAA6B,IAA7B,EAAmC;AAAE9R,MAAAA,KAAK,EAAEu7B,KAAK;AAAd,KAAnC;AAEA,YAAK17B,IAAL,GAAYN,YAAY,EAAxB;AAEA,YAAKgM,IAAL,GAAY,EAAZ;AACA,YAAKxN,IAAL,GAAY,gBAAZ;AAEA,YAAKQ,KAAL,GAAa,IAAb;AACA,YAAK+gB,UAAL,GAAkB,EAAlB;AAEA,YAAK0c,eAAL,GAAuB,EAAvB;AACA,YAAKC,oBAAL,GAA4B,KAA5B;AAEA,YAAKC,MAAL,GAAc,EAAd;AAEA,YAAKzc,WAAL,GAAmB,IAAnB;AACA,YAAK0c,cAAL,GAAsB,IAAtB;AAEA,YAAKC,SAAL,GAAiB;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAY9lB,MAAAA,KAAK,EAAEuH;AAAnB,KAAjB;AAEA,YAAKvL,QAAL,GAAgB,EAAhB;AA1Ba;AA4Bb;;;;WAED,oBAAW;AAEV,aAAO,KAAKhU,KAAZ;AAEA;;;WAED,kBAAUA,KAAV,EAAkB;AAEjB,UAAKoS,KAAK,CAACC,OAAN,CAAerS,KAAf,CAAL,EAA8B;AAE7B,aAAKA,KAAL,GAAa,KAAMuM,gBAAgB,CAAEvM,KAAF,CAAhB,GAA4B28B,qBAA5B,GAAoDF,qBAA1D,EAAmFz8B,KAAnF,EAA0F,CAA1F,CAAb;AAEA,OAJD,MAIO;AAEN,aAAKA,KAAL,GAAaA,KAAb;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,sBAAcgN,IAAd,EAAqB;AAEpB,aAAO,KAAK+T,UAAL,CAAiB/T,IAAjB,CAAP;AAEA;;;WAED,sBAAcA,IAAd,EAAoBhF,SAApB,EAAgC;AAE/B,WAAK+Y,UAAL,CAAiB/T,IAAjB,IAA0BhF,SAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiBgF,IAAjB,EAAwB;AAEvB,aAAO,KAAK+T,UAAL,CAAiB/T,IAAjB,CAAP;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAcA,IAAd,EAAqB;AAEpB,aAAO,KAAK+T,UAAL,CAAiB/T,IAAjB,MAA4BrN,SAAnC;AAEA;;;WAED,kBAAUm+B,KAAV,EAAiB9lB,KAAjB,EAA4C;AAAA,UAApB+lB,aAAoB,uEAAJ,CAAI;AAE3C,WAAKJ,MAAL,CAAY79B,IAAZ,CAAkB;AAEjBg+B,QAAAA,KAAK,EAAEA,KAFU;AAGjB9lB,QAAAA,KAAK,EAAEA,KAHU;AAIjB+lB,QAAAA,aAAa,EAAEA;AAJE,OAAlB;AAQA;;;WAED,uBAAc;AAEb,WAAKJ,MAAL,GAAc,EAAd;AAEA;;;WAED,sBAAcG,KAAd,EAAqB9lB,KAArB,EAA6B;AAE5B,WAAK6lB,SAAL,CAAeC,KAAf,GAAuBA,KAAvB;AACA,WAAKD,SAAL,CAAe7lB,KAAf,GAAuBA,KAAvB;AAEA;;;WAED,sBAAc3L,MAAd,EAAuB;AAEtB,UAAM2U,QAAQ,GAAG,KAAKD,UAAL,CAAgBC,QAAjC;;AAEA,UAAKA,QAAQ,KAAKrhB,SAAlB,EAA8B;AAE7BqhB,QAAAA,QAAQ,CAACtD,YAAT,CAAuBrR,MAAvB;AAEA2U,QAAAA,QAAQ,CAACxM,WAAT,GAAuB,IAAvB;AAEA;;AAED,UAAMoK,MAAM,GAAG,KAAKmC,UAAL,CAAgBnC,MAA/B;;AAEA,UAAKA,MAAM,KAAKjf,SAAhB,EAA4B;AAE3B,YAAMiuB,YAAY,GAAG,IAAItlB,OAAJ,GAAc01B,eAAd,CAA+B3xB,MAA/B,CAArB;AAEAuS,QAAAA,MAAM,CAACud,iBAAP,CAA0BvO,YAA1B;AAEAhP,QAAAA,MAAM,CAACpK,WAAP,GAAqB,IAArB;AAEA;;AAED,UAAMypB,OAAO,GAAG,KAAKld,UAAL,CAAgBkd,OAAhC;;AAEA,UAAKA,OAAO,KAAKt+B,SAAjB,EAA6B;AAE5Bs+B,QAAAA,OAAO,CAAC/W,kBAAR,CAA4B7a,MAA5B;AAEA4xB,QAAAA,OAAO,CAACzpB,WAAR,GAAsB,IAAtB;AAEA;;AAED,UAAK,KAAK0M,WAAL,KAAqB,IAA1B,EAAiC;AAEhC,aAAKC,kBAAL;AAEA;;AAED,UAAK,KAAKyc,cAAL,KAAwB,IAA7B,EAAoC;AAEnC,aAAKM,qBAAL;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,yBAAiB35B,CAAjB,EAAqB;AAEpB04B,MAAAA,GAAG,CAACrR,0BAAJ,CAAgCrnB,CAAhC;;AAEA,WAAKmZ,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS11B,KAAT,EAAiB;AAEhB;AAEA01B,MAAAA,GAAG,CAACkB,aAAJ,CAAmB52B,KAAnB;;AAEA,WAAKmW,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS11B,KAAT,EAAiB;AAEhB;AAEA01B,MAAAA,GAAG,CAACmB,aAAJ,CAAmB72B,KAAnB;;AAEA,WAAKmW,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS11B,KAAT,EAAiB;AAEhB;AAEA01B,MAAAA,GAAG,CAACoB,aAAJ,CAAmB92B,KAAnB;;AAEA,WAAKmW,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWj7B,CAAX,EAAcM,CAAd,EAAiB4S,CAAjB,EAAqB;AAEpB;AAEA+nB,MAAAA,GAAG,CAACqB,eAAJ,CAAqBt8B,CAArB,EAAwBM,CAAxB,EAA2B4S,CAA3B;;AAEA,WAAKwI,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAOj7B,CAAP,EAAUM,CAAV,EAAa4S,CAAb,EAAiB;AAEhB;AAEA+nB,MAAAA,GAAG,CAACsB,SAAJ,CAAev8B,CAAf,EAAkBM,CAAlB,EAAqB4S,CAArB;;AAEA,WAAKwI,YAAL,CAAmBuf,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQtc,MAAR,EAAiB;AAEhBuc,MAAAA,IAAI,CAACnO,MAAL,CAAapO,MAAb;;AAEAuc,MAAAA,IAAI,CAAC7O,YAAL;;AAEA,WAAK3Q,YAAL,CAAmBwf,IAAI,CAAC7wB,MAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAK8U,kBAAL;AAEA,WAAKD,WAAL,CAAiBU,SAAjB,CAA4Bub,OAA5B,EAAsCqB,MAAtC;AAEA,WAAKC,SAAL,CAAgBtB,OAAO,CAACn7B,CAAxB,EAA2Bm7B,OAAO,CAAC76B,CAAnC,EAAsC66B,OAAO,CAACjoB,CAA9C;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAe6K,MAAf,EAAwB;AAEvB,UAAMiB,QAAQ,GAAG,EAAjB;;AAEA,WAAM,IAAI1gB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGwf,MAAM,CAACvf,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,YAAMogB,KAAK,GAAGX,MAAM,CAAEzf,CAAF,CAApB;AACA0gB,QAAAA,QAAQ,CAAClhB,IAAT,CAAe4gB,KAAK,CAAC1e,CAArB,EAAwB0e,KAAK,CAACpe,CAA9B,EAAiCoe,KAAK,CAACxL,CAAN,IAAW,CAA5C;AAEA;;AAED,WAAKwpB,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4B9b,QAA5B,EAAsC,CAAtC,CAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,8BAAqB;AAEpB,UAAK,KAAKE,WAAL,KAAqB,IAA1B,EAAiC;AAEhC,aAAKA,WAAL,GAAmB,IAAI5B,IAAJ,EAAnB;AAEA;;AAED,UAAM0B,QAAQ,GAAG,KAAKD,UAAL,CAAgBC,QAAjC;AACA,UAAM2d,uBAAuB,GAAG,KAAKlB,eAAL,CAAqBzc,QAArD;;AAEA,UAAKA,QAAQ,IAAIA,QAAQ,CAAC4d,mBAA1B,EAAgD;AAE/Cr5B,QAAAA,OAAO,CAACkD,KAAR,CAAe,iJAAf,EAAkK,IAAlK;AAEA,aAAKyY,WAAL,CAAiB5b,GAAjB,CACC,IAAIoX,OAAJ,CAAa,CAAE6C,QAAf,EAAyB,CAAEA,QAA3B,EAAqC,CAAEA,QAAvC,CADD,EAEC,IAAI7C,OAAJ,CAAa,CAAE6C,QAAf,EAAyB,CAAEA,QAA3B,EAAqC,CAAEA,QAAvC,CAFD;AAKA;AAEA;;AAED,UAAKyB,QAAQ,KAAKrhB,SAAlB,EAA8B;AAE7B,aAAKuhB,WAAL,CAAiB2d,sBAAjB,CAAyC7d,QAAzC,EAF6B,CAI7B;;AAEA,YAAK2d,uBAAL,EAA+B;AAE9B,eAAM,IAAIr+B,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGymB,uBAAuB,CAACn+B,MAA9C,EAAsDF,CAAC,GAAG4X,EAA1D,EAA8D5X,CAAC,EAA/D,EAAqE;AAEpE,gBAAMw+B,cAAc,GAAGH,uBAAuB,CAAEr+B,CAAF,CAA9C;;AACA88B,YAAAA,MAAM,CAACyB,sBAAP,CAA+BC,cAA/B;;AAEA,gBAAK,KAAKpB,oBAAV,EAAiC;AAEhCJ,cAAAA,SAAS,CAACx2B,UAAV,CAAsB,KAAKoa,WAAL,CAAiBxf,GAAvC,EAA4C07B,MAAM,CAAC17B,GAAnD;;AACA,mBAAKwf,WAAL,CAAiBjB,aAAjB,CAAgCqd,SAAhC;;AAEAA,cAAAA,SAAS,CAACx2B,UAAV,CAAsB,KAAKoa,WAAL,CAAiBvf,GAAvC,EAA4Cy7B,MAAM,CAACz7B,GAAnD;;AACA,mBAAKuf,WAAL,CAAiBjB,aAAjB,CAAgCqd,SAAhC;AAEA,aARD,MAQO;AAEN,mBAAKpc,WAAL,CAAiBjB,aAAjB,CAAgCmd,MAAM,CAAC17B,GAAvC;AACA,mBAAKwf,WAAL,CAAiBjB,aAAjB,CAAgCmd,MAAM,CAACz7B,GAAvC;AAEA;AAED;AAED;AAED,OAhCD,MAgCO;AAEN,aAAKuf,WAAL,CAAiBlB,SAAjB;AAEA;;AAED,UAAK+e,KAAK,CAAE,KAAK7d,WAAL,CAAiBxf,GAAjB,CAAqBM,CAAvB,CAAL,IAAmC+8B,KAAK,CAAE,KAAK7d,WAAL,CAAiBxf,GAAjB,CAAqBY,CAAvB,CAAxC,IAAsEy8B,KAAK,CAAE,KAAK7d,WAAL,CAAiBxf,GAAjB,CAAqBwT,CAAvB,CAAhF,EAA6G;AAE5G3P,QAAAA,OAAO,CAACkD,KAAR,CAAe,qIAAf,EAAsJ,IAAtJ;AAEA;AAED;;;WAED,iCAAwB;AAEvB,UAAK,KAAKm1B,cAAL,KAAwB,IAA7B,EAAoC;AAEnC,aAAKA,cAAL,GAAsB,IAAIpa,MAAJ,EAAtB;AAEA;;AAED,UAAMxC,QAAQ,GAAG,KAAKD,UAAL,CAAgBC,QAAjC;AACA,UAAM2d,uBAAuB,GAAG,KAAKlB,eAAL,CAAqBzc,QAArD;;AAEA,UAAKA,QAAQ,IAAIA,QAAQ,CAAC4d,mBAA1B,EAAgD;AAE/Cr5B,QAAAA,OAAO,CAACkD,KAAR,CAAe,uJAAf,EAAwK,IAAxK;AAEA,aAAKm1B,cAAL,CAAoBt4B,GAApB,CAAyB,IAAIoX,OAAJ,EAAzB,EAAwC6C,QAAxC;AAEA;AAEA;;AAED,UAAKyB,QAAL,EAAgB;AAEf;AAEA,YAAM7Y,MAAM,GAAG,KAAKy1B,cAAL,CAAoBz1B,MAAnC;;AAEAi1B,QAAAA,MAAM,CAACyB,sBAAP,CAA+B7d,QAA/B,EANe,CAQf;;;AAEA,YAAK2d,uBAAL,EAA+B;AAE9B,eAAM,IAAIr+B,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGymB,uBAAuB,CAACn+B,MAA9C,EAAsDF,CAAC,GAAG4X,EAA1D,EAA8D5X,CAAC,EAA/D,EAAqE;AAEpE,gBAAMw+B,cAAc,GAAGH,uBAAuB,CAAEr+B,CAAF,CAA9C;;AACA+8B,YAAAA,gBAAgB,CAACwB,sBAAjB,CAAyCC,cAAzC;;AAEA,gBAAK,KAAKpB,oBAAV,EAAiC;AAEhCJ,cAAAA,SAAS,CAACx2B,UAAV,CAAsBs2B,MAAM,CAAC17B,GAA7B,EAAkC27B,gBAAgB,CAAC37B,GAAnD;;AACA07B,cAAAA,MAAM,CAACnd,aAAP,CAAsBqd,SAAtB;;AAEAA,cAAAA,SAAS,CAACx2B,UAAV,CAAsBs2B,MAAM,CAACz7B,GAA7B,EAAkC07B,gBAAgB,CAAC17B,GAAnD;;AACAy7B,cAAAA,MAAM,CAACnd,aAAP,CAAsBqd,SAAtB;AAEA,aARD,MAQO;AAENF,cAAAA,MAAM,CAACnd,aAAP,CAAsBod,gBAAgB,CAAC37B,GAAvC;;AACA07B,cAAAA,MAAM,CAACnd,aAAP,CAAsBod,gBAAgB,CAAC17B,GAAvC;AAEA;AAED;AAED;;AAEDy7B,QAAAA,MAAM,CAACxb,SAAP,CAAkBzZ,MAAlB,EApCe,CAsCf;AACA;;;AAEA,YAAIub,WAAW,GAAG,CAAlB;;AAEA,aAAM,IAAIpjB,GAAC,GAAG,CAAR,EAAW4X,GAAE,GAAG8I,QAAQ,CAAChJ,KAA/B,EAAsC1X,GAAC,GAAG4X,GAA1C,EAA8C5X,GAAC,EAA/C,EAAqD;AAEpDg9B,UAAAA,SAAS,CAACrc,mBAAV,CAA+BD,QAA/B,EAAyC1gB,GAAzC;;AAEAojB,UAAAA,WAAW,GAAG7iB,IAAI,CAACc,GAAL,CAAU+hB,WAAV,EAAuBvb,MAAM,CAACV,iBAAP,CAA0B61B,SAA1B,CAAvB,CAAd;AAEA,SAjDc,CAmDf;;;AAEA,YAAKqB,uBAAL,EAA+B;AAE9B,eAAM,IAAIr+B,GAAC,GAAG,CAAR,EAAW4X,IAAE,GAAGymB,uBAAuB,CAACn+B,MAA9C,EAAsDF,GAAC,GAAG4X,IAA1D,EAA8D5X,GAAC,EAA/D,EAAqE;AAEpE,gBAAMw+B,eAAc,GAAGH,uBAAuB,CAAEr+B,GAAF,CAA9C;AACA,gBAAMo9B,oBAAoB,GAAG,KAAKA,oBAAlC;;AAEA,iBAAM,IAAI1a,CAAC,GAAG,CAAR,EAAWgc,EAAE,GAAGF,eAAc,CAAC9mB,KAArC,EAA4CgL,CAAC,GAAGgc,EAAhD,EAAoDhc,CAAC,EAArD,EAA2D;AAE1Dsa,cAAAA,SAAS,CAACrc,mBAAV,CAA+B6d,eAA/B,EAA+C9b,CAA/C;;AAEA,kBAAK0a,oBAAL,EAA4B;AAE3BP,gBAAAA,OAAO,CAAClc,mBAAR,CAA6BD,QAA7B,EAAuCgC,CAAvC;;AACAsa,gBAAAA,SAAS,CAACld,GAAV,CAAe+c,OAAf;AAEA;;AAEDzZ,cAAAA,WAAW,GAAG7iB,IAAI,CAACc,GAAL,CAAU+hB,WAAV,EAAuBvb,MAAM,CAACV,iBAAP,CAA0B61B,SAA1B,CAAvB,CAAd;AAEA;AAED;AAED;;AAED,aAAKM,cAAL,CAAoB7e,MAApB,GAA6Ble,IAAI,CAACyG,IAAL,CAAWoc,WAAX,CAA7B;;AAEA,YAAKqb,KAAK,CAAE,KAAKnB,cAAL,CAAoB7e,MAAtB,CAAV,EAA2C;AAE1CxZ,UAAAA,OAAO,CAACkD,KAAR,CAAe,8HAAf,EAA+I,IAA/I;AAEA;AAED;AAED;;;WAED,2BAAkB;AAEjB,UAAMzI,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM+gB,UAAU,GAAG,KAAKA,UAAxB,CAHiB,CAKjB;AACA;;AAEA,UAAK/gB,KAAK,KAAK,IAAV,IACH+gB,UAAU,CAACC,QAAX,KAAwBrhB,SADrB,IAEHohB,UAAU,CAACnC,MAAX,KAAsBjf,SAFnB,IAGHohB,UAAU,CAAChM,EAAX,KAAkBpV,SAHpB,EAGgC;AAE/B4F,QAAAA,OAAO,CAACkD,KAAR,CAAe,8GAAf;AACA;AAEA;;AAED,UAAMw2B,OAAO,GAAGj/B,KAAK,CAACI,KAAtB;AACA,UAAM8+B,SAAS,GAAGne,UAAU,CAACC,QAAX,CAAoB5gB,KAAtC;AACA,UAAM++B,OAAO,GAAGpe,UAAU,CAACnC,MAAX,CAAkBxe,KAAlC;AACA,UAAMg/B,GAAG,GAAGre,UAAU,CAAChM,EAAX,CAAc3U,KAA1B;AAEA,UAAMi/B,SAAS,GAAGH,SAAS,CAAC1+B,MAAV,GAAmB,CAArC;;AAEA,UAAK,KAAK8+B,YAAL,CAAmB,SAAnB,MAAmC,KAAxC,EAAgD;AAE/C,aAAKZ,YAAL,CAAmB,SAAnB,EAA8B,IAAInD,eAAJ,CAAqB,IAAI51B,YAAJ,CAAkB,IAAI05B,SAAtB,CAArB,EAAwD,CAAxD,CAA9B;AAEA;;AAED,UAAME,QAAQ,GAAG,KAAKC,YAAL,CAAmB,SAAnB,EAA+Bp/B,KAAhD;AAEA,UAAMq/B,IAAI,GAAG,EAAb;AAAA,UAAiBC,IAAI,GAAG,EAAxB;;AAEA,WAAM,IAAIp/B,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG++B,SAArB,EAAgC/+B,CAAC,EAAjC,EAAuC;AAEtCm/B,QAAAA,IAAI,CAAEn/B,CAAF,CAAJ,GAAY,IAAIoc,OAAJ,EAAZ;AACAgjB,QAAAA,IAAI,CAAEp/B,CAAF,CAAJ,GAAY,IAAIoc,OAAJ,EAAZ;AAEA;;AAED,UAAMijB,EAAE,GAAG,IAAIjjB,OAAJ,EAAX;AAAA,UACCkjB,EAAE,GAAG,IAAIljB,OAAJ,EADN;AAAA,UAECmjB,EAAE,GAAG,IAAInjB,OAAJ,EAFN;AAAA,UAICojB,GAAG,GAAG,IAAIt5B,OAAJ,EAJP;AAAA,UAKCu5B,GAAG,GAAG,IAAIv5B,OAAJ,EALP;AAAA,UAMCw5B,GAAG,GAAG,IAAIx5B,OAAJ,EANP;AAAA,UAQCy5B,IAAI,GAAG,IAAIvjB,OAAJ,EARR;AAAA,UASCwjB,IAAI,GAAG,IAAIxjB,OAAJ,EATR;;AAWA,eAASyjB,cAAT,CAAyB37B,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAmC;AAElCi7B,QAAAA,EAAE,CAACrzB,SAAH,CAAc4yB,SAAd,EAAyB16B,CAAC,GAAG,CAA7B;AACAo7B,QAAAA,EAAE,CAACtzB,SAAH,CAAc4yB,SAAd,EAAyBz6B,CAAC,GAAG,CAA7B;AACAo7B,QAAAA,EAAE,CAACvzB,SAAH,CAAc4yB,SAAd,EAAyBx6B,CAAC,GAAG,CAA7B;AAEAo7B,QAAAA,GAAG,CAACxzB,SAAJ,CAAe8yB,GAAf,EAAoB56B,CAAC,GAAG,CAAxB;AACAu7B,QAAAA,GAAG,CAACzzB,SAAJ,CAAe8yB,GAAf,EAAoB36B,CAAC,GAAG,CAAxB;AACAu7B,QAAAA,GAAG,CAAC1zB,SAAJ,CAAe8yB,GAAf,EAAoB16B,CAAC,GAAG,CAAxB;AAEAk7B,QAAAA,EAAE,CAACjhB,GAAH,CAAQghB,EAAR;AACAE,QAAAA,EAAE,CAAClhB,GAAH,CAAQghB,EAAR;AAEAI,QAAAA,GAAG,CAACphB,GAAJ,CAASmhB,GAAT;AACAE,QAAAA,GAAG,CAACrhB,GAAJ,CAASmhB,GAAT;AAEA,YAAMl0B,CAAC,GAAG,OAAQm0B,GAAG,CAAC/9B,CAAJ,GAAQg+B,GAAG,CAAC19B,CAAZ,GAAgB09B,GAAG,CAACh+B,CAAJ,GAAQ+9B,GAAG,CAACz9B,CAApC,CAAV,CAhBkC,CAkBlC;;AAEA,YAAK,CAAE89B,QAAQ,CAAEx0B,CAAF,CAAf,EAAuB;AAEvBq0B,QAAAA,IAAI,CAACtxB,IAAL,CAAWixB,EAAX,EAAgB54B,cAAhB,CAAgCg5B,GAAG,CAAC19B,CAApC,EAAwCgxB,eAAxC,CAAyDuM,EAAzD,EAA6D,CAAEE,GAAG,CAACz9B,CAAnE,EAAuE0E,cAAvE,CAAuF4E,CAAvF;AACAs0B,QAAAA,IAAI,CAACvxB,IAAL,CAAWkxB,EAAX,EAAgB74B,cAAhB,CAAgC+4B,GAAG,CAAC/9B,CAApC,EAAwCsxB,eAAxC,CAAyDsM,EAAzD,EAA6D,CAAEI,GAAG,CAACh+B,CAAnE,EAAuEgF,cAAvE,CAAuF4E,CAAvF;AAEA6zB,QAAAA,IAAI,CAAEj7B,CAAF,CAAJ,CAAU4b,GAAV,CAAe6f,IAAf;AACAR,QAAAA,IAAI,CAAEh7B,CAAF,CAAJ,CAAU2b,GAAV,CAAe6f,IAAf;AACAR,QAAAA,IAAI,CAAE/6B,CAAF,CAAJ,CAAU0b,GAAV,CAAe6f,IAAf;AAEAP,QAAAA,IAAI,CAAEl7B,CAAF,CAAJ,CAAU4b,GAAV,CAAe8f,IAAf;AACAR,QAAAA,IAAI,CAAEj7B,CAAF,CAAJ,CAAU2b,GAAV,CAAe8f,IAAf;AACAR,QAAAA,IAAI,CAAEh7B,CAAF,CAAJ,CAAU0b,GAAV,CAAe8f,IAAf;AAEA;;AAED,UAAIvC,MAAM,GAAG,KAAKA,MAAlB;;AAEA,UAAKA,MAAM,CAACn9B,MAAP,KAAkB,CAAvB,EAA2B;AAE1Bm9B,QAAAA,MAAM,GAAG,CAAE;AACVG,UAAAA,KAAK,EAAE,CADG;AAEV9lB,UAAAA,KAAK,EAAEinB,OAAO,CAACz+B;AAFL,SAAF,CAAT;AAKA;;AAED,WAAM,IAAIF,GAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGylB,MAAM,CAACn9B,MAA7B,EAAqCF,GAAC,GAAG4X,EAAzC,EAA6C,EAAG5X,GAAhD,EAAoD;AAEnD,YAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,GAAF,CAApB;AAEA,YAAMw9B,KAAK,GAAGuC,KAAK,CAACvC,KAApB;AACA,YAAM9lB,KAAK,GAAGqoB,KAAK,CAACroB,KAApB;;AAEA,aAAM,IAAIgL,CAAC,GAAG8a,KAAR,EAAekB,EAAE,GAAGlB,KAAK,GAAG9lB,KAAlC,EAAyCgL,CAAC,GAAGgc,EAA7C,EAAiDhc,CAAC,IAAI,CAAtD,EAA0D;AAEzDmd,UAAAA,cAAc,CACblB,OAAO,CAAEjc,CAAC,GAAG,CAAN,CADM,EAEbic,OAAO,CAAEjc,CAAC,GAAG,CAAN,CAFM,EAGbic,OAAO,CAAEjc,CAAC,GAAG,CAAN,CAHM,CAAd;AAMA;AAED;;AAED,UAAMzX,GAAG,GAAG,IAAImR,OAAJ,EAAZ;AAAA,UAA2B4jB,IAAI,GAAG,IAAI5jB,OAAJ,EAAlC;AACA,UAAM7a,CAAC,GAAG,IAAI6a,OAAJ,EAAV;AAAA,UAAyB6jB,EAAE,GAAG,IAAI7jB,OAAJ,EAA9B;;AAEA,eAAS8jB,YAAT,CAAuB55B,CAAvB,EAA2B;AAE1B/E,QAAAA,CAAC,CAACyK,SAAF,CAAa6yB,OAAb,EAAsBv4B,CAAC,GAAG,CAA1B;AACA25B,QAAAA,EAAE,CAAC5xB,IAAH,CAAS9M,CAAT;AAEA,YAAMW,CAAC,GAAGi9B,IAAI,CAAE74B,CAAF,CAAd,CAL0B,CAO1B;;AAEA2E,QAAAA,GAAG,CAACoD,IAAJ,CAAUnM,CAAV;AACA+I,QAAAA,GAAG,CAACoT,GAAJ,CAAS9c,CAAC,CAACmF,cAAF,CAAkBnF,CAAC,CAAC2X,GAAF,CAAOhX,CAAP,CAAlB,CAAT,EAA0CyD,SAA1C,GAV0B,CAY1B;;AAEAq6B,QAAAA,IAAI,CAACviB,YAAL,CAAmBwiB,EAAnB,EAAuB/9B,CAAvB;AACA,YAAMmO,IAAI,GAAG2vB,IAAI,CAAC9mB,GAAL,CAAUkmB,IAAI,CAAE94B,CAAF,CAAd,CAAb;AACA,YAAMC,CAAC,GAAK8J,IAAI,GAAG,GAAT,GAAiB,CAAE,GAAnB,GAAyB,GAAnC;AAEA4uB,QAAAA,QAAQ,CAAE34B,CAAC,GAAG,CAAN,CAAR,GAAoB2E,GAAG,CAACvJ,CAAxB;AACAu9B,QAAAA,QAAQ,CAAE34B,CAAC,GAAG,CAAJ,GAAQ,CAAV,CAAR,GAAwB2E,GAAG,CAACjJ,CAA5B;AACAi9B,QAAAA,QAAQ,CAAE34B,CAAC,GAAG,CAAJ,GAAQ,CAAV,CAAR,GAAwB2E,GAAG,CAAC2J,CAA5B;AACAqqB,QAAAA,QAAQ,CAAE34B,CAAC,GAAG,CAAJ,GAAQ,CAAV,CAAR,GAAwBC,CAAxB;AAEA;;AAED,WAAM,IAAIvG,IAAC,GAAG,CAAR,EAAW4X,IAAE,GAAGylB,MAAM,CAACn9B,MAA7B,EAAqCF,IAAC,GAAG4X,IAAzC,EAA6C,EAAG5X,IAAhD,EAAoD;AAEnD,YAAM+/B,MAAK,GAAG1C,MAAM,CAAEr9B,IAAF,CAApB;AAEA,YAAMw9B,OAAK,GAAGuC,MAAK,CAACvC,KAApB;AACA,YAAM9lB,MAAK,GAAGqoB,MAAK,CAACroB,KAApB;;AAEA,aAAM,IAAIgL,EAAC,GAAG8a,OAAR,EAAekB,GAAE,GAAGlB,OAAK,GAAG9lB,MAAlC,EAAyCgL,EAAC,GAAGgc,GAA7C,EAAiDhc,EAAC,IAAI,CAAtD,EAA0D;AAEzDwd,UAAAA,YAAY,CAAEvB,OAAO,CAAEjc,EAAC,GAAG,CAAN,CAAT,CAAZ;AACAwd,UAAAA,YAAY,CAAEvB,OAAO,CAAEjc,EAAC,GAAG,CAAN,CAAT,CAAZ;AACAwd,UAAAA,YAAY,CAAEvB,OAAO,CAAEjc,EAAC,GAAG,CAAN,CAAT,CAAZ;AAEA;AAED;AAED;;;WAED,gCAAuB;AAEtB,UAAMhjB,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMygC,iBAAiB,GAAG,KAAKjB,YAAL,CAAmB,UAAnB,CAA1B;;AAEA,UAAKiB,iBAAiB,KAAK9gC,SAA3B,EAAuC;AAEtC,YAAI+gC,eAAe,GAAG,KAAKlB,YAAL,CAAmB,QAAnB,CAAtB;;AAEA,YAAKkB,eAAe,KAAK/gC,SAAzB,EAAqC;AAEpC+gC,UAAAA,eAAe,GAAG,IAAInF,eAAJ,CAAqB,IAAI51B,YAAJ,CAAkB86B,iBAAiB,CAACzoB,KAAlB,GAA0B,CAA5C,CAArB,EAAsE,CAAtE,CAAlB;AACA,eAAK0mB,YAAL,CAAmB,QAAnB,EAA6BgC,eAA7B;AAEA,SALD,MAKO;AAEN;AAEA,eAAM,IAAIpgC,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGwoB,eAAe,CAAC1oB,KAAtC,EAA6C1X,CAAC,GAAG4X,EAAjD,EAAqD5X,CAAC,EAAtD,EAA4D;AAE3DogC,YAAAA,eAAe,CAACxE,MAAhB,CAAwB57B,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;AAEA;AAED;;AAED,YAAMqgC,EAAE,GAAG,IAAIjkB,OAAJ,EAAX;AAAA,YAA0BkkB,EAAE,GAAG,IAAIlkB,OAAJ,EAA/B;AAAA,YAA8CmkB,EAAE,GAAG,IAAInkB,OAAJ,EAAnD;AACA,YAAMokB,EAAE,GAAG,IAAIpkB,OAAJ,EAAX;AAAA,YAA0BqkB,EAAE,GAAG,IAAIrkB,OAAJ,EAA/B;AAAA,YAA8CskB,EAAE,GAAG,IAAItkB,OAAJ,EAAnD;AACA,YAAMukB,EAAE,GAAG,IAAIvkB,OAAJ,EAAX;AAAA,YAA0BwkB,EAAE,GAAG,IAAIxkB,OAAJ,EAA/B,CAvBsC,CAyBtC;;AAEA,YAAK1c,KAAL,EAAa;AAEZ,eAAM,IAAIM,IAAC,GAAG,CAAR,EAAW4X,IAAE,GAAGlY,KAAK,CAACgY,KAA5B,EAAmC1X,IAAC,GAAG4X,IAAvC,EAA2C5X,IAAC,IAAI,CAAhD,EAAoD;AAEnD,gBAAMq/B,EAAE,GAAG3/B,KAAK,CAACiI,IAAN,CAAY3H,IAAC,GAAG,CAAhB,CAAX;AACA,gBAAMs/B,EAAE,GAAG5/B,KAAK,CAACiI,IAAN,CAAY3H,IAAC,GAAG,CAAhB,CAAX;AACA,gBAAMu/B,EAAE,GAAG7/B,KAAK,CAACiI,IAAN,CAAY3H,IAAC,GAAG,CAAhB,CAAX;AAEAqgC,YAAAA,EAAE,CAAC1f,mBAAH,CAAwBwf,iBAAxB,EAA2Cd,EAA3C;AACAiB,YAAAA,EAAE,CAAC3f,mBAAH,CAAwBwf,iBAAxB,EAA2Cb,EAA3C;AACAiB,YAAAA,EAAE,CAAC5f,mBAAH,CAAwBwf,iBAAxB,EAA2CZ,EAA3C;AAEAoB,YAAAA,EAAE,CAACl6B,UAAH,CAAe85B,EAAf,EAAmBD,EAAnB;AACAM,YAAAA,EAAE,CAACn6B,UAAH,CAAe45B,EAAf,EAAmBC,EAAnB;AACAK,YAAAA,EAAE,CAACja,KAAH,CAAUka,EAAV;AAEAJ,YAAAA,EAAE,CAAC7f,mBAAH,CAAwByf,eAAxB,EAAyCf,EAAzC;AACAoB,YAAAA,EAAE,CAAC9f,mBAAH,CAAwByf,eAAxB,EAAyCd,EAAzC;AACAoB,YAAAA,EAAE,CAAC/f,mBAAH,CAAwByf,eAAxB,EAAyCb,EAAzC;AAEAiB,YAAAA,EAAE,CAAC1gB,GAAH,CAAQ6gB,EAAR;AACAF,YAAAA,EAAE,CAAC3gB,GAAH,CAAQ6gB,EAAR;AACAD,YAAAA,EAAE,CAAC5gB,GAAH,CAAQ6gB,EAAR;AAEAP,YAAAA,eAAe,CAACxE,MAAhB,CAAwByD,EAAxB,EAA4BmB,EAAE,CAAC9+B,CAA/B,EAAkC8+B,EAAE,CAACx+B,CAArC,EAAwCw+B,EAAE,CAAC5rB,CAA3C;AACAwrB,YAAAA,eAAe,CAACxE,MAAhB,CAAwB0D,EAAxB,EAA4BmB,EAAE,CAAC/+B,CAA/B,EAAkC++B,EAAE,CAACz+B,CAArC,EAAwCy+B,EAAE,CAAC7rB,CAA3C;AACAwrB,YAAAA,eAAe,CAACxE,MAAhB,CAAwB2D,EAAxB,EAA4BmB,EAAE,CAACh/B,CAA/B,EAAkCg/B,EAAE,CAAC1+B,CAArC,EAAwC0+B,EAAE,CAAC9rB,CAA3C;AAEA;AAED,SA9BD,MA8BO;AAEN;AAEA,eAAM,IAAI5U,IAAC,GAAG,CAAR,EAAW4X,IAAE,GAAGuoB,iBAAiB,CAACzoB,KAAxC,EAA+C1X,IAAC,GAAG4X,IAAnD,EAAuD5X,IAAC,IAAI,CAA5D,EAAgE;AAE/DqgC,YAAAA,EAAE,CAAC1f,mBAAH,CAAwBwf,iBAAxB,EAA2CngC,IAAC,GAAG,CAA/C;AACAsgC,YAAAA,EAAE,CAAC3f,mBAAH,CAAwBwf,iBAAxB,EAA2CngC,IAAC,GAAG,CAA/C;AACAugC,YAAAA,EAAE,CAAC5f,mBAAH,CAAwBwf,iBAAxB,EAA2CngC,IAAC,GAAG,CAA/C;AAEA2gC,YAAAA,EAAE,CAACl6B,UAAH,CAAe85B,EAAf,EAAmBD,EAAnB;AACAM,YAAAA,EAAE,CAACn6B,UAAH,CAAe45B,EAAf,EAAmBC,EAAnB;AACAK,YAAAA,EAAE,CAACja,KAAH,CAAUka,EAAV;AAEAR,YAAAA,eAAe,CAACxE,MAAhB,CAAwB57B,IAAC,GAAG,CAA5B,EAA+B2gC,EAAE,CAACj/B,CAAlC,EAAqCi/B,EAAE,CAAC3+B,CAAxC,EAA2C2+B,EAAE,CAAC/rB,CAA9C;AACAwrB,YAAAA,eAAe,CAACxE,MAAhB,CAAwB57B,IAAC,GAAG,CAA5B,EAA+B2gC,EAAE,CAACj/B,CAAlC,EAAqCi/B,EAAE,CAAC3+B,CAAxC,EAA2C2+B,EAAE,CAAC/rB,CAA9C;AACAwrB,YAAAA,eAAe,CAACxE,MAAhB,CAAwB57B,IAAC,GAAG,CAA5B,EAA+B2gC,EAAE,CAACj/B,CAAlC,EAAqCi/B,EAAE,CAAC3+B,CAAxC,EAA2C2+B,EAAE,CAAC/rB,CAA9C;AAEA;AAED;;AAED,aAAKisB,gBAAL;AAEAT,QAAAA,eAAe,CAAClsB,WAAhB,GAA8B,IAA9B;AAEA;AAED;;;WAED,eAAOsM,QAAP,EAAiB/Y,MAAjB,EAA0B;AAEzB,UAAK,EAAI+Y,QAAQ,IAAIA,QAAQ,CAAC0c,gBAAzB,CAAL,EAAmD;AAElDj4B,QAAAA,OAAO,CAACkD,KAAR,CAAe,iFAAf,EAAkGqY,QAAlG;AACA;AAEA;;AAED,UAAK/Y,MAAM,KAAKpI,SAAhB,EAA4B;AAE3BoI,QAAAA,MAAM,GAAG,CAAT;AAEAxC,QAAAA,OAAO,CAACC,IAAR,CACC,wFACE,qEAFH;AAKA;;AAED,UAAMub,UAAU,GAAG,KAAKA,UAAxB;;AAEA,WAAM,IAAM2Q,GAAZ,IAAmB3Q,UAAnB,EAAgC;AAE/B,YAAKD,QAAQ,CAACC,UAAT,CAAqB2Q,GAArB,MAA+B/xB,SAApC,EAAgD;AAEhD,YAAMyhC,UAAU,GAAGrgB,UAAU,CAAE2Q,GAAF,CAA7B;AACA,YAAM2P,eAAe,GAAGD,UAAU,CAAChhC,KAAnC;AAEA,YAAMkhC,UAAU,GAAGxgB,QAAQ,CAACC,UAAT,CAAqB2Q,GAArB,CAAnB;AACA,YAAM6P,eAAe,GAAGD,UAAU,CAAClhC,KAAnC;AAEA,YAAMohC,eAAe,GAAGF,UAAU,CAAC9F,QAAX,GAAsBzzB,MAA9C;AACA,YAAMvH,MAAM,GAAGK,IAAI,CAACa,GAAL,CAAU6/B,eAAe,CAAC/gC,MAA1B,EAAkC6gC,eAAe,CAAC7gC,MAAhB,GAAyBghC,eAA3D,CAAf;;AAEA,aAAM,IAAIlhC,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAGwe,eAArB,EAAsClhC,CAAC,GAAGE,MAA1C,EAAkDF,CAAC,IAAK0iB,CAAC,EAAzD,EAA+D;AAE9Dqe,UAAAA,eAAe,CAAEre,CAAF,CAAf,GAAuBue,eAAe,CAAEjhC,CAAF,CAAtC;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,4BAAmB;AAElB,UAAM6+B,OAAO,GAAG,KAAKpe,UAAL,CAAgBnC,MAAhC;;AAEA,WAAM,IAAIte,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGinB,OAAO,CAACnnB,KAA9B,EAAqC1X,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnDg9B,QAAAA,SAAS,CAACrc,mBAAV,CAA+Bke,OAA/B,EAAwC7+B,CAAxC;;AAEAg9B,QAAAA,SAAS,CAACr3B,SAAV;;AAEAk5B,QAAAA,OAAO,CAACjD,MAAR,CAAgB57B,CAAhB,EAAmBg9B,SAAS,CAACt7B,CAA7B,EAAgCs7B,SAAS,CAACh7B,CAA1C,EAA6Cg7B,SAAS,CAACpoB,CAAvD;AAEA;AAED;;;WAED,wBAAe;AAEd,eAASusB,sBAAT,CAAiCz5B,SAAjC,EAA4Ci3B,OAA5C,EAAsD;AAErD,YAAM7+B,KAAK,GAAG4H,SAAS,CAAC5H,KAAxB;AACA,YAAMo7B,QAAQ,GAAGxzB,SAAS,CAACwzB,QAA3B;AACA,YAAMlrB,UAAU,GAAGtI,SAAS,CAACsI,UAA7B;AAEA,YAAMoxB,MAAM,GAAG,IAAIthC,KAAK,CAACsF,WAAV,CAAuBu5B,OAAO,CAACz+B,MAAR,GAAiBg7B,QAAxC,CAAf;AAEA,YAAIx7B,KAAK,GAAG,CAAZ;AAAA,YAAe87B,MAAM,GAAG,CAAxB;;AAEA,aAAM,IAAIx7B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG0+B,OAAO,CAACz+B,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD,cAAK0H,SAAS,CAAC25B,4BAAf,EAA8C;AAE7C3hC,YAAAA,KAAK,GAAGi/B,OAAO,CAAE3+B,CAAF,CAAP,GAAe0H,SAAS,CAAC2J,IAAV,CAAeiwB,MAA9B,GAAuC55B,SAAS,CAACD,MAAzD;AAEA,WAJD,MAIO;AAEN/H,YAAAA,KAAK,GAAGi/B,OAAO,CAAE3+B,CAAF,CAAP,GAAek7B,QAAvB;AAEA;;AAED,eAAM,IAAIxY,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGwY,QAArB,EAA+BxY,CAAC,EAAhC,EAAsC;AAErC0e,YAAAA,MAAM,CAAE5F,MAAM,EAAR,CAAN,GAAsB17B,KAAK,CAAEJ,KAAK,EAAP,CAA3B;AAEA;AAED;;AAED,eAAO,IAAIu7B,eAAJ,CAAqBmG,MAArB,EAA6BlG,QAA7B,EAAuClrB,UAAvC,CAAP;AAEA,OAlCa,CAoCd;;;AAEA,UAAK,KAAKtQ,KAAL,KAAe,IAApB,EAA2B;AAE1BuF,QAAAA,OAAO,CAACC,IAAR,CAAc,6EAAd;AACA,eAAO,IAAP;AAEA;;AAED,UAAMq8B,SAAS,GAAG,IAAItE,cAAJ,EAAlB;AAEA,UAAM0B,OAAO,GAAG,KAAKj/B,KAAL,CAAWI,KAA3B;AACA,UAAM2gB,UAAU,GAAG,KAAKA,UAAxB,CAhDc,CAkDd;;AAEA,WAAM,IAAM/T,IAAZ,IAAoB+T,UAApB,EAAiC;AAEhC,YAAM/Y,SAAS,GAAG+Y,UAAU,CAAE/T,IAAF,CAA5B;AAEA,YAAM80B,YAAY,GAAGL,sBAAsB,CAAEz5B,SAAF,EAAai3B,OAAb,CAA3C;AAEA4C,QAAAA,SAAS,CAACnD,YAAV,CAAwB1xB,IAAxB,EAA8B80B,YAA9B;AAEA,OA5Da,CA8Dd;;;AAEA,UAAMrE,eAAe,GAAG,KAAKA,eAA7B;;AAEA,WAAM,IAAMzwB,KAAZ,IAAoBywB,eAApB,EAAsC;AAErC,YAAMsE,UAAU,GAAG,EAAnB;AACA,YAAMjD,cAAc,GAAGrB,eAAe,CAAEzwB,KAAF,CAAtC,CAHqC,CAGW;;AAEhD,aAAM,IAAI1M,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG4mB,cAAc,CAACt+B,MAArC,EAA6CF,CAAC,GAAG4X,EAAjD,EAAqD5X,CAAC,EAAtD,EAA4D;AAE3D,cAAM0H,UAAS,GAAG82B,cAAc,CAAEx+B,CAAF,CAAhC;;AAEA,cAAMwhC,aAAY,GAAGL,sBAAsB,CAAEz5B,UAAF,EAAai3B,OAAb,CAA3C;;AAEA8C,UAAAA,UAAU,CAACjiC,IAAX,CAAiBgiC,aAAjB;AAEA;;AAEDD,QAAAA,SAAS,CAACpE,eAAV,CAA2BzwB,KAA3B,IAAoC+0B,UAApC;AAEA;;AAEDF,MAAAA,SAAS,CAACnE,oBAAV,GAAiC,KAAKA,oBAAtC,CArFc,CAuFd;;AAEA,UAAMC,MAAM,GAAG,KAAKA,MAApB;;AAEA,WAAM,IAAIr9B,IAAC,GAAG,CAAR,EAAWC,CAAC,GAAGo9B,MAAM,CAACn9B,MAA5B,EAAoCF,IAAC,GAAGC,CAAxC,EAA2CD,IAAC,EAA5C,EAAkD;AAEjD,YAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,IAAF,CAApB;AACAuhC,QAAAA,SAAS,CAACG,QAAV,CAAoB3B,KAAK,CAACvC,KAA1B,EAAiCuC,KAAK,CAACroB,KAAvC,EAA8CqoB,KAAK,CAACtC,aAApD;AAEA;;AAED,aAAO8D,SAAP;AAEA;;;WAED,kBAAS;AAER,UAAMlwB,IAAI,GAAG;AACZ+C,QAAAA,QAAQ,EAAE;AACT5C,UAAAA,OAAO,EAAE,GADA;AAETtS,UAAAA,IAAI,EAAE,gBAFG;AAGTmV,UAAAA,SAAS,EAAE;AAHF;AADE,OAAb,CAFQ,CAUR;;AAEAhD,MAAAA,IAAI,CAACrQ,IAAL,GAAY,KAAKA,IAAjB;AACAqQ,MAAAA,IAAI,CAACnS,IAAL,GAAY,KAAKA,IAAjB;AACA,UAAK,KAAKwN,IAAL,KAAc,EAAnB,EAAwB2E,IAAI,CAAC3E,IAAL,GAAY,KAAKA,IAAjB;AACxB,UAAK5G,MAAM,CAAC67B,IAAP,CAAa,KAAKjuB,QAAlB,EAA6BxT,MAA7B,GAAsC,CAA3C,EAA+CmR,IAAI,CAACqC,QAAL,GAAgB,KAAKA,QAArB;;AAE/C,UAAK,KAAK8c,UAAL,KAAoBnxB,SAAzB,EAAqC;AAEpC,YAAMmxB,UAAU,GAAG,KAAKA,UAAxB;;AAEA,aAAM,IAAMY,GAAZ,IAAmBZ,UAAnB,EAAgC;AAE/B,cAAKA,UAAU,CAAEY,GAAF,CAAV,KAAsB/xB,SAA3B,EAAuCgS,IAAI,CAAE+f,GAAF,CAAJ,GAAcZ,UAAU,CAAEY,GAAF,CAAxB;AAEvC;;AAED,eAAO/f,IAAP;AAEA,OA7BO,CA+BR;;;AAEAA,MAAAA,IAAI,CAACA,IAAL,GAAY;AAAEoP,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAEA,UAAM/gB,KAAK,GAAG,KAAKA,KAAnB;;AAEA,UAAKA,KAAK,KAAK,IAAf,EAAsB;AAErB2R,QAAAA,IAAI,CAACA,IAAL,CAAU3R,KAAV,GAAkB;AACjBR,UAAAA,IAAI,EAAEQ,KAAK,CAACI,KAAN,CAAYsF,WAAZ,CAAwBsH,IADb;AAEjB5M,UAAAA,KAAK,EAAEgS,KAAK,CAAC3L,SAAN,CAAgBpG,KAAhB,CAAsBI,IAAtB,CAA4BT,KAAK,CAACI,KAAlC;AAFU,SAAlB;AAKA;;AAED,UAAM2gB,UAAU,GAAG,KAAKA,UAAxB;;AAEA,WAAM,IAAM2Q,IAAZ,IAAmB3Q,UAAnB,EAAgC;AAE/B,YAAM/Y,SAAS,GAAG+Y,UAAU,CAAE2Q,IAAF,CAA5B;AAEA/f,QAAAA,IAAI,CAACA,IAAL,CAAUoP,UAAV,CAAsB2Q,IAAtB,IAA8B1pB,SAAS,CAAC4M,MAAV,CAAkBjD,IAAI,CAACA,IAAvB,CAA9B;AAEA;;AAED,UAAM8rB,eAAe,GAAG,EAAxB;AACA,UAAIyE,kBAAkB,GAAG,KAAzB;;AAEA,WAAM,IAAMxQ,KAAZ,IAAmB,KAAK+L,eAAxB,EAA0C;AAEzC,YAAM0E,cAAc,GAAG,KAAK1E,eAAL,CAAsB/L,KAAtB,CAAvB;AAEA,YAAMtxB,KAAK,GAAG,EAAd;;AAEA,aAAM,IAAIE,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGiqB,cAAc,CAAC3hC,MAArC,EAA6CF,CAAC,GAAG4X,EAAjD,EAAqD5X,CAAC,EAAtD,EAA4D;AAE3D,cAAM0H,WAAS,GAAGm6B,cAAc,CAAE7hC,CAAF,CAAhC;AAEAF,UAAAA,KAAK,CAACN,IAAN,CAAYkI,WAAS,CAAC4M,MAAV,CAAkBjD,IAAI,CAACA,IAAvB,CAAZ;AAEA;;AAED,YAAKvR,KAAK,CAACI,MAAN,GAAe,CAApB,EAAwB;AAEvBi9B,UAAAA,eAAe,CAAE/L,KAAF,CAAf,GAAyBtxB,KAAzB;AAEA8hC,UAAAA,kBAAkB,GAAG,IAArB;AAEA;AAED;;AAED,UAAKA,kBAAL,EAA0B;AAEzBvwB,QAAAA,IAAI,CAACA,IAAL,CAAU8rB,eAAV,GAA4BA,eAA5B;AACA9rB,QAAAA,IAAI,CAACA,IAAL,CAAU+rB,oBAAV,GAAiC,KAAKA,oBAAtC;AAEA;;AAED,UAAMC,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,CAACn9B,MAAP,GAAgB,CAArB,EAAyB;AAExBmR,QAAAA,IAAI,CAACA,IAAL,CAAUgsB,MAAV,GAAmBtpB,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAgBopB,MAAhB,CAAZ,CAAnB;AAEA;;AAED,UAAMC,cAAc,GAAG,KAAKA,cAA5B;;AAEA,UAAKA,cAAc,KAAK,IAAxB,EAA+B;AAE9BjsB,QAAAA,IAAI,CAACA,IAAL,CAAUisB,cAAV,GAA2B;AAC1Bz1B,UAAAA,MAAM,EAAEy1B,cAAc,CAACz1B,MAAf,CAAsB8nB,OAAtB,EADkB;AAE1BlR,UAAAA,MAAM,EAAE6e,cAAc,CAAC7e;AAFG,SAA3B;AAKA;;AAED,aAAOpN,IAAP;AAEA;;;WAED,iBAAQ;AAEN,aAAO,IAAI,KAAKjM,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAED;;;WAED,cAAMJ,MAAN,EAAe;AAEd;AAEA,WAAKvO,KAAL,GAAa,IAAb;AACA,WAAK+gB,UAAL,GAAkB,EAAlB;AACA,WAAK0c,eAAL,GAAuB,EAAvB;AACA,WAAKE,MAAL,GAAc,EAAd;AACA,WAAKzc,WAAL,GAAmB,IAAnB;AACA,WAAK0c,cAAL,GAAsB,IAAtB,CATc,CAWd;;AAEA,UAAMjsB,IAAI,GAAG,EAAb,CAbc,CAed;;AAEA,WAAK3E,IAAL,GAAYuB,MAAM,CAACvB,IAAnB,CAjBc,CAmBd;;AAEA,UAAMhN,KAAK,GAAGuO,MAAM,CAACvO,KAArB;;AAEA,UAAKA,KAAK,KAAK,IAAf,EAAsB;AAErB,aAAKoiC,QAAL,CAAepiC,KAAK,CAACoX,KAAN,CAAazF,IAAb,CAAf;AAEA,OA3Ba,CA6Bd;;;AAEA,UAAMoP,UAAU,GAAGxS,MAAM,CAACwS,UAA1B;;AAEA,WAAM,IAAM/T,IAAZ,IAAoB+T,UAApB,EAAiC;AAEhC,YAAM/Y,SAAS,GAAG+Y,UAAU,CAAE/T,IAAF,CAA5B;AACA,aAAK0xB,YAAL,CAAmB1xB,IAAnB,EAAyBhF,SAAS,CAACoP,KAAV,CAAiBzF,IAAjB,CAAzB;AAEA,OAtCa,CAwCd;;;AAEA,UAAM8rB,eAAe,GAAGlvB,MAAM,CAACkvB,eAA/B;;AAEA,WAAM,IAAMzwB,MAAZ,IAAoBywB,eAApB,EAAsC;AAErC,YAAMr9B,KAAK,GAAG,EAAd;AACA,YAAM0+B,cAAc,GAAGrB,eAAe,CAAEzwB,MAAF,CAAtC,CAHqC,CAGW;;AAEhD,aAAM,IAAI1M,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGu+B,cAAc,CAACt+B,MAApC,EAA4CF,CAAC,GAAGC,CAAhD,EAAmDD,CAAC,EAApD,EAA0D;AAEzDF,UAAAA,KAAK,CAACN,IAAN,CAAYg/B,cAAc,CAAEx+B,CAAF,CAAd,CAAoB8W,KAApB,CAA2BzF,IAA3B,CAAZ;AAEA;;AAED,aAAK8rB,eAAL,CAAsBzwB,MAAtB,IAA+B5M,KAA/B;AAEA;;AAED,WAAKs9B,oBAAL,GAA4BnvB,MAAM,CAACmvB,oBAAnC,CA3Dc,CA6Dd;;AAEA,UAAMC,MAAM,GAAGpvB,MAAM,CAACovB,MAAtB;;AAEA,WAAM,IAAIr9B,IAAC,GAAG,CAAR,EAAWC,GAAC,GAAGo9B,MAAM,CAACn9B,MAA5B,EAAoCF,IAAC,GAAGC,GAAxC,EAA2CD,IAAC,EAA5C,EAAkD;AAEjD,YAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,IAAF,CAApB;AACA,aAAK0hC,QAAL,CAAe3B,KAAK,CAACvC,KAArB,EAA4BuC,KAAK,CAACroB,KAAlC,EAAyCqoB,KAAK,CAACtC,aAA/C;AAEA,OAtEa,CAwEd;;;AAEA,UAAM7c,WAAW,GAAG3S,MAAM,CAAC2S,WAA3B;;AAEA,UAAKA,WAAW,KAAK,IAArB,EAA4B;AAE3B,aAAKA,WAAL,GAAmBA,WAAW,CAAC9J,KAAZ,EAAnB;AAEA,OAhFa,CAkFd;;;AAEA,UAAMwmB,cAAc,GAAGrvB,MAAM,CAACqvB,cAA9B;;AAEA,UAAKA,cAAc,KAAK,IAAxB,EAA+B;AAE9B,aAAKA,cAAL,GAAsBA,cAAc,CAACxmB,KAAf,EAAtB;AAEA,OA1Fa,CA4Fd;;;AAEA,WAAKymB,SAAL,CAAeC,KAAf,GAAuBvvB,MAAM,CAACsvB,SAAP,CAAiBC,KAAxC;AACA,WAAKD,SAAL,CAAe7lB,KAAf,GAAuBzJ,MAAM,CAACsvB,SAAP,CAAiB7lB,KAAxC,CA/Fc,CAiGd;;AAEA,WAAKhE,QAAL,GAAgBzF,MAAM,CAACyF,QAAvB,CAnGc,CAqGd;;AAEA,UAAKzF,MAAM,CAACuiB,UAAP,KAAsBnxB,SAA3B,EAAuC,KAAKmxB,UAAL,GAAkB1qB,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAACuiB,UAA1B,CAAlB;AAEvC,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,WAAKhc,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAApB;AAEA;;;;EAhlC2BD,e;;AAolC7B,IAAM8iC,gBAAgB,GAAG,aAAc,IAAIlb,OAAJ,EAAvC;;AACA,IAAMmb,MAAM,GAAG,aAAc,IAAI5d,GAAJ,EAA7B;;AACA,IAAM6d,SAAS,GAAG,aAAc,IAAI/e,MAAJ,EAAhC;;AAEA,IAAMgf,KAAK,GAAG,aAAc,IAAI9lB,OAAJ,EAA5B;;AACA,IAAM+lB,KAAK,GAAG,aAAc,IAAI/lB,OAAJ,EAA5B;;AACA,IAAMgmB,KAAK,GAAG,aAAc,IAAIhmB,OAAJ,EAA5B;;AAEA,IAAMimB,MAAM,GAAG,aAAc,IAAIjmB,OAAJ,EAA7B;;AACA,IAAMkmB,MAAM,GAAG,aAAc,IAAIlmB,OAAJ,EAA7B;;AACA,IAAMmmB,MAAM,GAAG,aAAc,IAAInmB,OAAJ,EAA7B;;AAEA,IAAMomB,OAAO,GAAG,aAAc,IAAIpmB,OAAJ,EAA9B;;AACA,IAAMqmB,OAAO,GAAG,aAAc,IAAIrmB,OAAJ,EAA9B;;AACA,IAAMsmB,OAAO,GAAG,aAAc,IAAItmB,OAAJ,EAA9B;;AAEA,IAAMumB,MAAM,GAAG,aAAc,IAAIz8B,OAAJ,EAA7B;;AACA,IAAM08B,MAAM,GAAG,aAAc,IAAI18B,OAAJ,EAA7B;;AACA,IAAM28B,MAAM,GAAG,aAAc,IAAI38B,OAAJ,EAA7B;;AAEA,IAAM48B,kBAAkB,GAAG,aAAc,IAAI1mB,OAAJ,EAAzC;;AACA,IAAM2mB,uBAAuB,GAAG,aAAc,IAAI3mB,OAAJ,EAA9C;;IAEM4mB,I;;;;;AAEL,kBAAmF;AAAA;;AAAA,QAAtExiB,QAAsE,uEAA3D,IAAIyc,cAAJ,EAA2D;AAAA,QAArCnM,QAAqC,uEAA1B,IAAI8J,iBAAJ,EAA0B;;AAAA;;AAElF;AAEA,YAAKvK,MAAL,GAAc,IAAd;AAEA,YAAKnxB,IAAL,GAAY,MAAZ;AAEA,YAAKshB,QAAL,GAAgBA,QAAhB;AACA,YAAKsQ,QAAL,GAAgBA,QAAhB;;AAEA,YAAKmS,kBAAL;;AAXkF;AAalF;;;;WAED,cAAMh1B,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,qEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,UAAKpjB,MAAM,CAACi1B,qBAAP,KAAiC7jC,SAAtC,EAAkD;AAEjD,aAAK6jC,qBAAL,GAA6Bj1B,MAAM,CAACi1B,qBAAP,CAA6BnjC,KAA7B,EAA7B;AAEA;;AAED,UAAKkO,MAAM,CAACk1B,qBAAP,KAAiC9jC,SAAtC,EAAkD;AAEjD,aAAK8jC,qBAAL,GAA6Br9B,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAACk1B,qBAA1B,CAA7B;AAEA;;AAED,WAAKrS,QAAL,GAAgB7iB,MAAM,CAAC6iB,QAAvB;AACA,WAAKtQ,QAAL,GAAgBvS,MAAM,CAACuS,QAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,8BAAqB;AAEpB,UAAMA,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAM2c,eAAe,GAAG3c,QAAQ,CAAC2c,eAAjC;AACA,UAAMwE,IAAI,GAAG77B,MAAM,CAAC67B,IAAP,CAAaxE,eAAb,CAAb;;AAEA,UAAKwE,IAAI,CAACzhC,MAAL,GAAc,CAAnB,EAAuB;AAEtB,YAAMs+B,cAAc,GAAGrB,eAAe,CAAEwE,IAAI,CAAE,CAAF,CAAN,CAAtC;;AAEA,YAAKnD,cAAc,KAAKn/B,SAAxB,EAAoC;AAEnC,eAAK6jC,qBAAL,GAA6B,EAA7B;AACA,eAAKC,qBAAL,GAA6B,EAA7B;;AAEA,eAAM,IAAI3hC,CAAC,GAAG,CAAR,EAAW4hC,EAAE,GAAG5E,cAAc,CAACt+B,MAArC,EAA6CsB,CAAC,GAAG4hC,EAAjD,EAAqD5hC,CAAC,EAAtD,EAA4D;AAE3D,gBAAMkL,IAAI,GAAG8xB,cAAc,CAAEh9B,CAAF,CAAd,CAAoBkL,IAApB,IAA4B22B,MAAM,CAAE7hC,CAAF,CAA/C;AAEA,iBAAK0hC,qBAAL,CAA2B1jC,IAA3B,CAAiC,CAAjC;AACA,iBAAK2jC,qBAAL,CAA4Bz2B,IAA5B,IAAqClL,CAArC;AAEA;AAED;AAED;AAED;;;WAED,iBAAS8hC,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAM/iB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMsQ,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMtT,WAAW,GAAG,KAAKA,WAAzB;AAEA,UAAKsT,QAAQ,KAAKzxB,SAAlB,EAA8B,OANE,CAQhC;;AAEA,UAAKmhB,QAAQ,CAAC8c,cAAT,KAA4B,IAAjC,EAAwC9c,QAAQ,CAACod,qBAAT;;AAExCqE,MAAAA,SAAS,CAAC5zB,IAAV,CAAgBmS,QAAQ,CAAC8c,cAAzB;;AACA2E,MAAAA,SAAS,CAAC7kB,YAAV,CAAwBI,WAAxB;;AAEA,UAAK8lB,SAAS,CAAC/e,GAAV,CAAchB,gBAAd,CAAgC0e,SAAhC,MAAgD,KAArD,EAA6D,OAf7B,CAiBhC;;AAEAF,MAAAA,gBAAgB,CAAC1zB,IAAjB,CAAuBmP,WAAvB,EAAqCpS,MAArC;;AACA42B,MAAAA,MAAM,CAAC3zB,IAAP,CAAai1B,SAAS,CAAC/e,GAAvB,EAA6BnH,YAA7B,CAA2C2kB,gBAA3C,EApBgC,CAsBhC;;;AAEA,UAAKvhB,QAAQ,CAACI,WAAT,KAAyB,IAA9B,EAAqC;AAEpC,YAAKohB,MAAM,CAACwB,aAAP,CAAsBhjB,QAAQ,CAACI,WAA/B,MAAiD,KAAtD,EAA8D;AAE9D;;AAED,UAAI6iB,YAAJ;AAEA,UAAM/jC,KAAK,GAAG8gB,QAAQ,CAAC9gB,KAAvB;AACA,UAAMghB,QAAQ,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,QAArC;AACA,UAAMgjB,aAAa,GAAGljB,QAAQ,CAAC2c,eAAT,CAAyBzc,QAA/C;AACA,UAAM0c,oBAAoB,GAAG5c,QAAQ,CAAC4c,oBAAtC;AACA,UAAM3oB,EAAE,GAAG+L,QAAQ,CAACC,UAAT,CAAoBhM,EAA/B;AACA,UAAM+d,GAAG,GAAGhS,QAAQ,CAACC,UAAT,CAAoB+R,GAAhC;AACA,UAAM6K,MAAM,GAAG7c,QAAQ,CAAC6c,MAAxB;AACA,UAAME,SAAS,GAAG/c,QAAQ,CAAC+c,SAA3B;;AAEA,UAAK79B,KAAK,KAAK,IAAf,EAAsB;AAErB;AAEA,YAAKoS,KAAK,CAACC,OAAN,CAAe+e,QAAf,CAAL,EAAiC;AAEhC,eAAM,IAAI9wB,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGylB,MAAM,CAACn9B,MAA7B,EAAqCF,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnD,gBAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,CAAF,CAApB;AACA,gBAAM2jC,aAAa,GAAG7S,QAAQ,CAAEiP,KAAK,CAACtC,aAAR,CAA9B;AAEA,gBAAMD,KAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU0+B,KAAK,CAACvC,KAAhB,EAAuBD,SAAS,CAACC,KAAjC,CAAd;AACA,gBAAMoG,GAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU1B,KAAK,CAACgY,KAAhB,EAAuBnX,IAAI,CAACa,GAAL,CAAY2+B,KAAK,CAACvC,KAAN,GAAcuC,KAAK,CAACroB,KAAhC,EAA2C6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAAvE,CAAvB,CAAZ;;AAEA,iBAAM,IAAIgL,CAAC,GAAG8a,KAAR,EAAekB,EAAE,GAAGkF,GAA1B,EAA+BlhB,CAAC,GAAGgc,EAAnC,EAAuChc,CAAC,IAAI,CAA5C,EAAgD;AAE/C,kBAAMxe,CAAC,GAAGxE,KAAK,CAACiI,IAAN,CAAY+a,CAAZ,CAAV;AACA,kBAAMve,CAAC,GAAGzE,KAAK,CAACiI,IAAN,CAAY+a,CAAC,GAAG,CAAhB,CAAV;AACA,kBAAMte,CAAC,GAAG1E,KAAK,CAACiI,IAAN,CAAY+a,CAAC,GAAG,CAAhB,CAAV;AAEA+gB,cAAAA,YAAY,GAAGI,+BAA+B,CAAE,IAAF,EAAQF,aAAR,EAAuBL,SAAvB,EAAkCtB,MAAlC,EAA0CthB,QAA1C,EAAoDgjB,aAApD,EAAmEtG,oBAAnE,EAAyF3oB,EAAzF,EAA6F+d,GAA7F,EAAkGtuB,CAAlG,EAAqGC,CAArG,EAAwGC,CAAxG,CAA9C;;AAEA,kBAAKq/B,YAAL,EAAoB;AAEnBA,gBAAAA,YAAY,CAACK,SAAb,GAAyBvjC,IAAI,CAACuC,KAAL,CAAY4f,CAAC,GAAG,CAAhB,CAAzB,CAFmB,CAE2B;;AAC9C+gB,gBAAAA,YAAY,CAACM,IAAb,CAAkBtG,aAAlB,GAAkCsC,KAAK,CAACtC,aAAxC;AACA8F,gBAAAA,UAAU,CAAC/jC,IAAX,CAAiBikC,YAAjB;AAEA;AAED;AAED;AAED,SA9BD,MA8BO;AAEN,cAAMjG,OAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;;AACA,cAAMoG,KAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU1B,KAAK,CAACgY,KAAhB,EAAyB6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAArD,CAAZ;;AAEA,eAAM,IAAI1X,IAAC,GAAGw9B,OAAR,EAAe5lB,IAAE,GAAGgsB,KAA1B,EAA+B5jC,IAAC,GAAG4X,IAAnC,EAAuC5X,IAAC,IAAI,CAA5C,EAAgD;AAE/C,gBAAMkE,EAAC,GAAGxE,KAAK,CAACiI,IAAN,CAAY3H,IAAZ,CAAV;;AACA,gBAAMmE,EAAC,GAAGzE,KAAK,CAACiI,IAAN,CAAY3H,IAAC,GAAG,CAAhB,CAAV;;AACA,gBAAMoE,EAAC,GAAG1E,KAAK,CAACiI,IAAN,CAAY3H,IAAC,GAAG,CAAhB,CAAV;;AAEAyjC,YAAAA,YAAY,GAAGI,+BAA+B,CAAE,IAAF,EAAQ/S,QAAR,EAAkBwS,SAAlB,EAA6BtB,MAA7B,EAAqCthB,QAArC,EAA+CgjB,aAA/C,EAA8DtG,oBAA9D,EAAoF3oB,EAApF,EAAwF+d,GAAxF,EAA6FtuB,EAA7F,EAAgGC,EAAhG,EAAmGC,EAAnG,CAA9C;;AAEA,gBAAKq/B,YAAL,EAAoB;AAEnBA,cAAAA,YAAY,CAACK,SAAb,GAAyBvjC,IAAI,CAACuC,KAAL,CAAY9C,IAAC,GAAG,CAAhB,CAAzB,CAFmB,CAE2B;;AAC9CujC,cAAAA,UAAU,CAAC/jC,IAAX,CAAiBikC,YAAjB;AAEA;AAED;AAED;AAED,OA1DD,MA0DO,IAAK/iB,QAAQ,KAAKrhB,SAAlB,EAA8B;AAEpC;AAEA,YAAKyS,KAAK,CAACC,OAAN,CAAe+e,QAAf,CAAL,EAAiC;AAEhC,eAAM,IAAI9wB,IAAC,GAAG,CAAR,EAAW4X,IAAE,GAAGylB,MAAM,CAACn9B,MAA7B,EAAqCF,IAAC,GAAG4X,IAAzC,EAA6C5X,IAAC,EAA9C,EAAoD;AAEnD,gBAAM+/B,OAAK,GAAG1C,MAAM,CAAEr9B,IAAF,CAApB;AACA,gBAAM2jC,cAAa,GAAG7S,QAAQ,CAAEiP,OAAK,CAACtC,aAAR,CAA9B;;AAEA,gBAAMD,OAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU0+B,OAAK,CAACvC,KAAhB,EAAuBD,SAAS,CAACC,KAAjC,CAAd;;AACA,gBAAMoG,KAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAUsf,QAAQ,CAAChJ,KAAnB,EAA0BnX,IAAI,CAACa,GAAL,CAAY2+B,OAAK,CAACvC,KAAN,GAAcuC,OAAK,CAACroB,KAAhC,EAA2C6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAAvE,CAA1B,CAAZ;;AAEA,iBAAM,IAAIgL,GAAC,GAAG8a,OAAR,EAAekB,IAAE,GAAGkF,KAA1B,EAA+BlhB,GAAC,GAAGgc,IAAnC,EAAuChc,GAAC,IAAI,CAA5C,EAAgD;AAE/C,kBAAMxe,GAAC,GAAGwe,GAAV;;AACA,kBAAMve,GAAC,GAAGue,GAAC,GAAG,CAAd;;AACA,kBAAMte,GAAC,GAAGse,GAAC,GAAG,CAAd;;AAEA+gB,cAAAA,YAAY,GAAGI,+BAA+B,CAAE,IAAF,EAAQF,cAAR,EAAuBL,SAAvB,EAAkCtB,MAAlC,EAA0CthB,QAA1C,EAAoDgjB,aAApD,EAAmEtG,oBAAnE,EAAyF3oB,EAAzF,EAA6F+d,GAA7F,EAAkGtuB,GAAlG,EAAqGC,GAArG,EAAwGC,GAAxG,CAA9C;;AAEA,kBAAKq/B,YAAL,EAAoB;AAEnBA,gBAAAA,YAAY,CAACK,SAAb,GAAyBvjC,IAAI,CAACuC,KAAL,CAAY4f,GAAC,GAAG,CAAhB,CAAzB,CAFmB,CAE2B;;AAC9C+gB,gBAAAA,YAAY,CAACM,IAAb,CAAkBtG,aAAlB,GAAkCsC,OAAK,CAACtC,aAAxC;AACA8F,gBAAAA,UAAU,CAAC/jC,IAAX,CAAiBikC,YAAjB;AAEA;AAED;AAED;AAED,SA9BD,MA8BO;AAEN,cAAMjG,OAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;;AACA,cAAMoG,KAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAUsf,QAAQ,CAAChJ,KAAnB,EAA4B6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAAxD,CAAZ;;AAEA,eAAM,IAAI1X,IAAC,GAAGw9B,OAAR,EAAe5lB,IAAE,GAAGgsB,KAA1B,EAA+B5jC,IAAC,GAAG4X,IAAnC,EAAuC5X,IAAC,IAAI,CAA5C,EAAgD;AAE/C,gBAAMkE,GAAC,GAAGlE,IAAV;;AACA,gBAAMmE,GAAC,GAAGnE,IAAC,GAAG,CAAd;;AACA,gBAAMoE,GAAC,GAAGpE,IAAC,GAAG,CAAd;;AAEAyjC,YAAAA,YAAY,GAAGI,+BAA+B,CAAE,IAAF,EAAQ/S,QAAR,EAAkBwS,SAAlB,EAA6BtB,MAA7B,EAAqCthB,QAArC,EAA+CgjB,aAA/C,EAA8DtG,oBAA9D,EAAoF3oB,EAApF,EAAwF+d,GAAxF,EAA6FtuB,GAA7F,EAAgGC,GAAhG,EAAmGC,GAAnG,CAA9C;;AAEA,gBAAKq/B,YAAL,EAAoB;AAEnBA,cAAAA,YAAY,CAACK,SAAb,GAAyBvjC,IAAI,CAACuC,KAAL,CAAY9C,IAAC,GAAG,CAAhB,CAAzB,CAFmB,CAE2B;;AAC9CujC,cAAAA,UAAU,CAAC/jC,IAAX,CAAiBikC,YAAjB;AAEA;AAED;AAED;AAED;AAED;;;;EAtOiB9W,Q;;AA0OnB,SAASqX,iBAAT,CAA4BjkB,MAA5B,EAAoC+Q,QAApC,EAA8CwS,SAA9C,EAAyD/e,GAAzD,EAA8D8b,EAA9D,EAAkEC,EAAlE,EAAsEC,EAAtE,EAA0EngB,KAA1E,EAAkF;AAEjF,MAAI6jB,SAAJ;;AAEA,MAAKnT,QAAQ,CAACoD,IAAT,KAAkBn/B,QAAvB,EAAkC;AAEjCkvC,IAAAA,SAAS,GAAG1f,GAAG,CAAC2f,iBAAJ,CAAuB3D,EAAvB,EAA2BD,EAA3B,EAA+BD,EAA/B,EAAmC,IAAnC,EAAyCjgB,KAAzC,CAAZ;AAEA,GAJD,MAIO;AAEN6jB,IAAAA,SAAS,GAAG1f,GAAG,CAAC2f,iBAAJ,CAAuB7D,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCzP,QAAQ,CAACoD,IAAT,KAAkBl/B,UAArD,EAAiEorB,KAAjE,CAAZ;AAEA;;AAED,MAAK6jB,SAAS,KAAK,IAAnB,EAA0B,OAAO,IAAP;;AAE1BlB,EAAAA,uBAAuB,CAAC10B,IAAxB,CAA8B+R,KAA9B;;AACA2iB,EAAAA,uBAAuB,CAAC3lB,YAAxB,CAAsC2C,MAAM,CAACvC,WAA7C;;AAEA,MAAM4Q,QAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiC0f,uBAAjC,CAAjB;AAEA,MAAK3U,QAAQ,GAAGkV,SAAS,CAACvY,IAArB,IAA6BqD,QAAQ,GAAGkV,SAAS,CAACtY,GAAvD,EAA6D,OAAO,IAAP;AAE7D,SAAO;AACNoD,IAAAA,QAAQ,EAAEA,QADJ;AAENhO,IAAAA,KAAK,EAAE2iB,uBAAuB,CAACjsB,KAAxB,EAFD;AAGNiJ,IAAAA,MAAM,EAAEA;AAHF,GAAP;AAMA;;AAED,SAAS8jB,+BAAT,CAA0C9jB,MAA1C,EAAkD+Q,QAAlD,EAA4DwS,SAA5D,EAAuE/e,GAAvE,EAA4E7D,QAA5E,EAAsFgjB,aAAtF,EAAqGtG,oBAArG,EAA2H3oB,EAA3H,EAA+H+d,GAA/H,EAAoItuB,CAApI,EAAuIC,CAAvI,EAA0IC,CAA1I,EAA8I;AAE7I89B,EAAAA,KAAK,CAACvhB,mBAAN,CAA2BD,QAA3B,EAAqCxc,CAArC;;AACAi+B,EAAAA,KAAK,CAACxhB,mBAAN,CAA2BD,QAA3B,EAAqCvc,CAArC;;AACAi+B,EAAAA,KAAK,CAACzhB,mBAAN,CAA2BD,QAA3B,EAAqCtc,CAArC;;AAEA,MAAM+/B,eAAe,GAAGpkB,MAAM,CAACmjB,qBAA/B;;AAEA,MAAKQ,aAAa,IAAIS,eAAtB,EAAwC;AAEvC3B,IAAAA,OAAO,CAACx9B,GAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;;AACAy9B,IAAAA,OAAO,CAACz9B,GAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;;AACA09B,IAAAA,OAAO,CAAC19B,GAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;;AAEA,SAAM,IAAIhF,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG8rB,aAAa,CAACxjC,MAApC,EAA4CF,CAAC,GAAG4X,EAAhD,EAAoD5X,CAAC,EAArD,EAA2D;AAE1D,UAAMokC,SAAS,GAAGD,eAAe,CAAEnkC,CAAF,CAAjC;AACA,UAAMw+B,cAAc,GAAGkF,aAAa,CAAE1jC,CAAF,CAApC;AAEA,UAAKokC,SAAS,KAAK,CAAnB,EAAuB;;AAEvB/B,MAAAA,MAAM,CAAC1hB,mBAAP,CAA4B6d,cAA5B,EAA4Ct6B,CAA5C;;AACAo+B,MAAAA,MAAM,CAAC3hB,mBAAP,CAA4B6d,cAA5B,EAA4Cr6B,CAA5C;;AACAo+B,MAAAA,MAAM,CAAC5hB,mBAAP,CAA4B6d,cAA5B,EAA4Cp6B,CAA5C;;AAEA,UAAKg5B,oBAAL,EAA4B;AAE3BoF,QAAAA,OAAO,CAACxP,eAAR,CAAyBqP,MAAzB,EAAiC+B,SAAjC;;AACA3B,QAAAA,OAAO,CAACzP,eAAR,CAAyBsP,MAAzB,EAAiC8B,SAAjC;;AACA1B,QAAAA,OAAO,CAAC1P,eAAR,CAAyBuP,MAAzB,EAAiC6B,SAAjC;AAEA,OAND,MAMO;AAEN5B,QAAAA,OAAO,CAACxP,eAAR,CAAyBqP,MAAM,CAAChkB,GAAP,CAAY6jB,KAAZ,CAAzB,EAA8CkC,SAA9C;;AACA3B,QAAAA,OAAO,CAACzP,eAAR,CAAyBsP,MAAM,CAACjkB,GAAP,CAAY8jB,KAAZ,CAAzB,EAA8CiC,SAA9C;;AACA1B,QAAAA,OAAO,CAAC1P,eAAR,CAAyBuP,MAAM,CAAClkB,GAAP,CAAY+jB,KAAZ,CAAzB,EAA8CgC,SAA9C;AAEA;AAED;;AAEDlC,IAAAA,KAAK,CAACpiB,GAAN,CAAW0iB,OAAX;;AACAL,IAAAA,KAAK,CAACriB,GAAN,CAAW2iB,OAAX;;AACAL,IAAAA,KAAK,CAACtiB,GAAN,CAAW4iB,OAAX;AAEA;;AAED,MAAK3iB,MAAM,CAAC2Q,aAAZ,EAA4B;AAE3B3Q,IAAAA,MAAM,CAACskB,aAAP,CAAsBngC,CAAtB,EAAyBg+B,KAAzB;AACAniB,IAAAA,MAAM,CAACskB,aAAP,CAAsBlgC,CAAtB,EAAyBg+B,KAAzB;AACApiB,IAAAA,MAAM,CAACskB,aAAP,CAAsBjgC,CAAtB,EAAyBg+B,KAAzB;AAEA;;AAED,MAAMqB,YAAY,GAAGO,iBAAiB,CAAEjkB,MAAF,EAAU+Q,QAAV,EAAoBwS,SAApB,EAA+B/e,GAA/B,EAAoC2d,KAApC,EAA2CC,KAA3C,EAAkDC,KAAlD,EAAyDU,kBAAzD,CAAtC;;AAEA,MAAKW,YAAL,EAAoB;AAEnB,QAAKhvB,EAAL,EAAU;AAETkuB,MAAAA,MAAM,CAAChiB,mBAAP,CAA4BlM,EAA5B,EAAgCvQ,CAAhC;;AACA0+B,MAAAA,MAAM,CAACjiB,mBAAP,CAA4BlM,EAA5B,EAAgCtQ,CAAhC;;AACA0+B,MAAAA,MAAM,CAACliB,mBAAP,CAA4BlM,EAA5B,EAAgCrQ,CAAhC;;AAEAq/B,MAAAA,YAAY,CAAChvB,EAAb,GAAkBud,QAAQ,CAACU,KAAT,CAAgBoQ,kBAAhB,EAAoCZ,KAApC,EAA2CC,KAA3C,EAAkDC,KAAlD,EAAyDO,MAAzD,EAAiEC,MAAjE,EAAyEC,MAAzE,EAAiF,IAAI38B,OAAJ,EAAjF,CAAlB;AAEA;;AAED,QAAKssB,GAAL,EAAW;AAEVmQ,MAAAA,MAAM,CAAChiB,mBAAP,CAA4B6R,GAA5B,EAAiCtuB,CAAjC;;AACA0+B,MAAAA,MAAM,CAACjiB,mBAAP,CAA4B6R,GAA5B,EAAiCruB,CAAjC;;AACA0+B,MAAAA,MAAM,CAACliB,mBAAP,CAA4B6R,GAA5B,EAAiCpuB,CAAjC;;AAEAq/B,MAAAA,YAAY,CAACjR,GAAb,GAAmBR,QAAQ,CAACU,KAAT,CAAgBoQ,kBAAhB,EAAoCZ,KAApC,EAA2CC,KAA3C,EAAkDC,KAAlD,EAAyDO,MAAzD,EAAiEC,MAAjE,EAAyEC,MAAzE,EAAiF,IAAI38B,OAAJ,EAAjF,CAAnB;AAEA;;AAED,QAAM69B,IAAI,GAAG;AACZ7/B,MAAAA,CAAC,EAAEA,CADS;AAEZC,MAAAA,CAAC,EAAEA,CAFS;AAGZC,MAAAA,CAAC,EAAEA,CAHS;AAIZka,MAAAA,MAAM,EAAE,IAAIlC,OAAJ,EAJI;AAKZqhB,MAAAA,aAAa,EAAE;AALH,KAAb;AAQAzL,IAAAA,QAAQ,CAACI,SAAT,CAAoB8P,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC2B,IAAI,CAACzlB,MAA9C;AAEAmlB,IAAAA,YAAY,CAACM,IAAb,GAAoBA,IAApB;AAEA;;AAED,SAAON,YAAP;AAEA;;IAEKa,W;;;;;AAEL,yBAA0G;AAAA;;AAAA,QAA7F7zB,KAA6F,uEAArF,CAAqF;AAAA,QAAlFC,MAAkF,uEAAzE,CAAyE;AAAA,QAAtE0F,KAAsE,uEAA9D,CAA8D;AAAA,QAA3DmuB,aAA2D,uEAA3C,CAA2C;AAAA,QAAxCC,cAAwC,uEAAvB,CAAuB;AAAA,QAApBC,aAAoB,uEAAJ,CAAI;;AAAA;;AAEzG;AAEA,YAAKvlC,IAAL,GAAY,aAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/f,MAAAA,KAAK,EAAEA,KADU;AAEjBC,MAAAA,MAAM,EAAEA,MAFS;AAGjB0F,MAAAA,KAAK,EAAEA,KAHU;AAIjBmuB,MAAAA,aAAa,EAAEA,aAJE;AAKjBC,MAAAA,cAAc,EAAEA,cALC;AAMjBC,MAAAA,aAAa,EAAEA;AANE,KAAlB;;AASA,QAAMC,KAAK,kCAAX,CAfyG,CAiBzG;;;AAEAH,IAAAA,aAAa,GAAGhkC,IAAI,CAACuC,KAAL,CAAYyhC,aAAZ,CAAhB;AACAC,IAAAA,cAAc,GAAGjkC,IAAI,CAACuC,KAAL,CAAY0hC,cAAZ,CAAjB;AACAC,IAAAA,aAAa,GAAGlkC,IAAI,CAACuC,KAAL,CAAY2hC,aAAZ,CAAhB,CArByG,CAuBzG;;AAEA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CA5ByG,CA8BzG;;AAEA,QAAI8F,gBAAgB,GAAG,CAAvB;AACA,QAAIC,UAAU,GAAG,CAAjB,CAjCyG,CAmCzG;;AAEAC,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAE,CAAnB,EAAsB,CAAE,CAAxB,EAA2B1uB,KAA3B,EAAkC1F,MAAlC,EAA0CD,KAA1C,EAAiDg0B,aAAjD,EAAgED,cAAhE,EAAgF,CAAhF,CAAV,CArCyG,CAqCV;;AAC/FM,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB1uB,KAAzB,EAAgC1F,MAAhC,EAAwC,CAAED,KAA1C,EAAiDg0B,aAAjD,EAAgED,cAAhE,EAAgF,CAAhF,CAAV,CAtCyG,CAsCV;;AAC/FM,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,EAAuBr0B,KAAvB,EAA8B2F,KAA9B,EAAqC1F,MAArC,EAA6C6zB,aAA7C,EAA4DE,aAA5D,EAA2E,CAA3E,CAAV,CAvCyG,CAuCf;;AAC1FK,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyBr0B,KAAzB,EAAgC2F,KAAhC,EAAuC,CAAE1F,MAAzC,EAAiD6zB,aAAjD,EAAgEE,aAAhE,EAA+E,CAA/E,CAAV,CAxCyG,CAwCX;;AAC9FK,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyBr0B,KAAzB,EAAgCC,MAAhC,EAAwC0F,KAAxC,EAA+CmuB,aAA/C,EAA8DC,cAA9D,EAA8E,CAA9E,CAAV,CAzCyG,CAyCZ;;AAC7FM,IAAAA,UAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAE,CAAnB,EAAsB,CAAE,CAAxB,EAA2Br0B,KAA3B,EAAkCC,MAAlC,EAA0C,CAAE0F,KAA5C,EAAmDmuB,aAAnD,EAAkEC,cAAlE,EAAkF,CAAlF,CAAV,CA1CyG,CA0CR;AAEjG;;AAEA,YAAK1C,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AAEA,aAASgG,UAAT,CAAqB/lB,CAArB,EAAwBzY,CAAxB,EAA2BC,CAA3B,EAA8Bw+B,IAA9B,EAAoCC,IAApC,EAA0Cv0B,KAA1C,EAAiDC,MAAjD,EAAyD0F,KAAzD,EAAgE6uB,KAAhE,EAAuEC,KAAvE,EAA8EzH,aAA9E,EAA8F;AAE7F,UAAM0H,YAAY,GAAG10B,KAAK,GAAGw0B,KAA7B;AACA,UAAMG,aAAa,GAAG10B,MAAM,GAAGw0B,KAA/B;AAEA,UAAMG,SAAS,GAAG50B,KAAK,GAAG,CAA1B;AACA,UAAM60B,UAAU,GAAG50B,MAAM,GAAG,CAA5B;AACA,UAAM60B,SAAS,GAAGnvB,KAAK,GAAG,CAA1B;AAEA,UAAMovB,MAAM,GAAGP,KAAK,GAAG,CAAvB;AACA,UAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAvB;AAEA,UAAIQ,aAAa,GAAG,CAApB;AACA,UAAIC,UAAU,GAAG,CAAjB;AAEA,UAAMtlB,MAAM,GAAG,IAAIjE,OAAJ,EAAf,CAf6F,CAiB7F;;AAEA,WAAM,IAAIY,EAAE,GAAG,CAAf,EAAkBA,EAAE,GAAGyoB,MAAvB,EAA+BzoB,EAAE,EAAjC,EAAuC;AAEtC,YAAMhb,CAAC,GAAGgb,EAAE,GAAGooB,aAAL,GAAqBE,UAA/B;;AAEA,aAAM,IAAIvoB,EAAE,GAAG,CAAf,EAAkBA,EAAE,GAAGyoB,MAAvB,EAA+BzoB,EAAE,EAAjC,EAAuC;AAEtC,cAAMrb,CAAC,GAAGqb,EAAE,GAAGooB,YAAL,GAAoBE,SAA9B,CAFsC,CAItC;;AAEAhlB,UAAAA,MAAM,CAAEtB,CAAF,CAAN,GAAcrd,CAAC,GAAGqjC,IAAlB;AACA1kB,UAAAA,MAAM,CAAE/Z,CAAF,CAAN,GAActE,CAAC,GAAGgjC,IAAlB;AACA3kB,UAAAA,MAAM,CAAE9Z,CAAF,CAAN,GAAcg/B,SAAd,CARsC,CAUtC;;AAEAZ,UAAAA,QAAQ,CAACnlC,IAAT,CAAe6gB,MAAM,CAAC3e,CAAtB,EAAyB2e,MAAM,CAACre,CAAhC,EAAmCqe,MAAM,CAACzL,CAA1C,EAZsC,CActC;;AAEAyL,UAAAA,MAAM,CAAEtB,CAAF,CAAN,GAAc,CAAd;AACAsB,UAAAA,MAAM,CAAE/Z,CAAF,CAAN,GAAc,CAAd;AACA+Z,UAAAA,MAAM,CAAE9Z,CAAF,CAAN,GAAc6P,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,CAAE,CAAhC,CAlBsC,CAoBtC;;AAEAyoB,UAAAA,OAAO,CAACr/B,IAAR,CAAc6gB,MAAM,CAAC3e,CAArB,EAAwB2e,MAAM,CAACre,CAA/B,EAAkCqe,MAAM,CAACzL,CAAzC,EAtBsC,CAwBtC;;AAEAkqB,UAAAA,GAAG,CAACt/B,IAAJ,CAAUud,EAAE,GAAGkoB,KAAf;AACAnG,UAAAA,GAAG,CAACt/B,IAAJ,CAAU,IAAMwd,EAAE,GAAGkoB,KAArB,EA3BsC,CA6BtC;;AAEAQ,UAAAA,aAAa,IAAI,CAAjB;AAEA;AAED,OA1D4F,CA4D7F;AAEA;AACA;AACA;;;AAEA,WAAM,IAAI1oB,GAAE,GAAG,CAAf,EAAkBA,GAAE,GAAGkoB,KAAvB,EAA8BloB,GAAE,EAAhC,EAAsC;AAErC,aAAM,IAAID,GAAE,GAAG,CAAf,EAAkBA,GAAE,GAAGkoB,KAAvB,EAA8BloB,GAAE,EAAhC,EAAsC;AAErC,cAAM7Y,CAAC,GAAG0gC,gBAAgB,GAAG7nB,GAAnB,GAAwByoB,MAAM,GAAGxoB,GAA3C;AACA,cAAM7Y,CAAC,GAAGygC,gBAAgB,GAAG7nB,GAAnB,GAAwByoB,MAAM,IAAKxoB,GAAE,GAAG,CAAV,CAAxC;AACA,cAAM5Y,CAAC,GAAGwgC,gBAAgB,IAAK7nB,GAAE,GAAG,CAAV,CAAhB,GAAgCyoB,MAAM,IAAKxoB,GAAE,GAAG,CAAV,CAAhD;AACA,cAAMxS,CAAC,GAAGo6B,gBAAgB,IAAK7nB,GAAE,GAAG,CAAV,CAAhB,GAAgCyoB,MAAM,GAAGxoB,GAAnD,CALqC,CAOrC;;AAEA2hB,UAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,UAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB,EAVqC,CAYrC;;AAEAm7B,UAAAA,UAAU,IAAI,CAAd;AAEA;AAED,OAtF4F,CAwF7F;;;AAEAjB,MAAAA,KAAK,CAAChD,QAAN,CAAgBmD,UAAhB,EAA4Bc,UAA5B,EAAwClI,aAAxC,EA1F6F,CA4F7F;;AAEAoH,MAAAA,UAAU,IAAIc,UAAd,CA9F6F,CAgG7F;;AAEAf,MAAAA,gBAAgB,IAAIc,aAApB;AAEA;;AAvJwG;AAyJzG;;;;WAED,kBAAiBr0B,IAAjB,EAAwB;AAEvB,aAAO,IAAIizB,WAAJ,CAAiBjzB,IAAI,CAACZ,KAAtB,EAA6BY,IAAI,CAACX,MAAlC,EAA0CW,IAAI,CAAC+E,KAA/C,EAAsD/E,IAAI,CAACkzB,aAA3D,EAA0ElzB,IAAI,CAACmzB,cAA/E,EAA+FnzB,IAAI,CAACozB,aAApG,CAAP;AAEA;;;;EAjKwBxH,c;AAqK1B;AACA;AACA;;;AAEA,SAAS2I,aAAT,CAAwBt1B,GAAxB,EAA8B;AAE7B,MAAM4K,GAAG,GAAG,EAAZ;;AAEA,OAAM,IAAM6D,CAAZ,IAAiBzO,GAAjB,EAAuB;AAEtB4K,IAAAA,GAAG,CAAE6D,CAAF,CAAH,GAAW,EAAX;;AAEA,SAAM,IAAMhR,CAAZ,IAAiBuC,GAAG,CAAEyO,CAAF,CAApB,EAA4B;AAE3B,UAAM8mB,QAAQ,GAAGv1B,GAAG,CAAEyO,CAAF,CAAH,CAAUhR,CAAV,CAAjB;;AAEA,UAAK83B,QAAQ,KAAMA,QAAQ,CAAC13B,OAAT,IAClB03B,QAAQ,CAAC59B,SADS,IACI49B,QAAQ,CAAC/e,SADb,IAElB+e,QAAQ,CAACz/B,SAFS,IAEIy/B,QAAQ,CAACxpB,SAFb,IAE0BwpB,QAAQ,CAAChxB,SAFnC,IAGlBgxB,QAAQ,CAAC7yB,SAHS,IAGI6yB,QAAQ,CAAC/tB,YAHnB,CAAb,EAGiD;AAEhDoD,QAAAA,GAAG,CAAE6D,CAAF,CAAH,CAAUhR,CAAV,IAAgB83B,QAAQ,CAAC/uB,KAAT,EAAhB;AAEA,OAPD,MAOO,IAAKhF,KAAK,CAACC,OAAN,CAAe8zB,QAAf,CAAL,EAAiC;AAEvC3qB,QAAAA,GAAG,CAAE6D,CAAF,CAAH,CAAUhR,CAAV,IAAgB83B,QAAQ,CAAC9lC,KAAT,EAAhB;AAEA,OAJM,MAIA;AAENmb,QAAAA,GAAG,CAAE6D,CAAF,CAAH,CAAUhR,CAAV,IAAgB83B,QAAhB;AAEA;AAED;AAED;;AAED,SAAO3qB,GAAP;AAEA;;AAED,SAAS4qB,aAAT,CAAwBC,QAAxB,EAAmC;AAElC,MAAMC,MAAM,GAAG,EAAf;;AAEA,OAAM,IAAIjnB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGgnB,QAAQ,CAAC7lC,MAA9B,EAAsC6e,CAAC,EAAvC,EAA6C;AAE5C,QAAM9T,IAAG,GAAG26B,aAAa,CAAEG,QAAQ,CAAEhnB,CAAF,CAAV,CAAzB;;AAEA,SAAM,IAAMhR,CAAZ,IAAiB9C,IAAjB,EAAuB;AAEtB+6B,MAAAA,MAAM,CAAEj4B,CAAF,CAAN,GAAc9C,IAAG,CAAE8C,CAAF,CAAjB;AAEA;AAED;;AAED,SAAOi4B,MAAP;AAEA,C,CAED;;;AAEA,IAAMC,aAAa,GAAG;AAAEnvB,EAAAA,KAAK,EAAE8uB,aAAT;AAAwBM,EAAAA,KAAK,EAAEJ;AAA/B,CAAtB;AAEA,IAAIK,cAAc,GAAG,+FAArB;AAEA,IAAIC,gBAAgB,GAAG,gEAAvB;;IAEMC,c;;;;;AAEL,0BAAa7V,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAK8V,gBAAL,GAAwB,IAAxB;AAEA,YAAKpnC,IAAL,GAAY,gBAAZ;AAEA,YAAKqnC,OAAL,GAAe,EAAf;AACA,YAAKR,QAAL,GAAgB,EAAhB;AAEA,YAAKS,YAAL,GAAoBL,cAApB;AACA,YAAKM,cAAL,GAAsBL,gBAAtB;AAEA,YAAKnM,SAAL,GAAiB,CAAjB;AAEA,YAAKI,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AAEA,YAAKG,GAAL,GAAW,KAAX,CAnByB,CAmBP;;AAClB,YAAKiM,MAAL,GAAc,KAAd,CApByB,CAoBJ;;AACrB,YAAKC,QAAL,GAAgB,KAAhB,CArByB,CAqBF;;AAEvB,YAAKC,UAAL,GAAkB;AACjBC,MAAAA,WAAW,EAAE,KADI;AACG;AACpBC,MAAAA,SAAS,EAAE,KAFM;AAEC;AAClBC,MAAAA,WAAW,EAAE,KAHI;AAGG;AACpBC,MAAAA,gBAAgB,EAAE,KAJD,CAIO;;AAJP,KAAlB,CAvByB,CA8BzB;AACA;;AACA,YAAKC,sBAAL,GAA8B;AAC7B,eAAS,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CADoB;AAE7B,YAAM,CAAE,CAAF,EAAK,CAAL,CAFuB;AAG7B,aAAO,CAAE,CAAF,EAAK,CAAL;AAHsB,KAA9B;AAMA,YAAKC,mBAAL,GAA2B7nC,SAA3B;AACA,YAAK8nC,kBAAL,GAA0B,KAA1B;AAEA,YAAKC,WAAL,GAAmB,IAAnB;;AAEA,QAAK5W,UAAU,KAAKnxB,SAApB,EAAgC;AAE/B,UAAKmxB,UAAU,CAAC/P,UAAX,KAA0BphB,SAA/B,EAA2C;AAE1C4F,QAAAA,OAAO,CAACkD,KAAR,CAAe,yFAAf;AAEA;;AAED,cAAK2yB,SAAL,CAAgBtK,UAAhB;AAEA;;AArDwB;AAuDzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,+EAAYA,MAAZ;;AAEA,WAAKw4B,cAAL,GAAsBx4B,MAAM,CAACw4B,cAA7B;AACA,WAAKD,YAAL,GAAoBv4B,MAAM,CAACu4B,YAA3B;AAEA,WAAKT,QAAL,GAAgBH,aAAa,CAAE33B,MAAM,CAAC83B,QAAT,CAA7B;AAEA,WAAKQ,OAAL,GAAezgC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAACs4B,OAA1B,CAAf;AAEA,WAAKlM,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AAEA,WAAKG,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AACA,WAAKiM,MAAL,GAAcz4B,MAAM,CAACy4B,MAArB;AACA,WAAKC,QAAL,GAAgB14B,MAAM,CAAC04B,QAAvB;AAEA,WAAKC,UAAL,GAAkB9gC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAAC24B,UAA1B,CAAlB;AAEA,WAAKQ,WAAL,GAAmBn5B,MAAM,CAACm5B,WAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ31B,IAAR,EAAe;AAEd,UAAMJ,IAAI,8EAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC+1B,WAAL,GAAmB,KAAKA,WAAxB;AACA/1B,MAAAA,IAAI,CAAC00B,QAAL,GAAgB,EAAhB;;AAEA,WAAM,IAAMr5B,IAAZ,IAAoB,KAAKq5B,QAAzB,EAAoC;AAEnC,YAAMsB,OAAO,GAAG,KAAKtB,QAAL,CAAer5B,IAAf,CAAhB;AACA,YAAMvL,MAAK,GAAGkmC,OAAO,CAAClmC,KAAtB;;AAEA,YAAKA,MAAK,IAAIA,MAAK,CAAC6R,SAApB,EAAgC;AAE/B3B,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,GADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACmT,MAAN,CAAc7C,IAAd,EAAqBzQ;AAFL,WAAxB;AAKA,SAPD,MAOO,IAAKG,MAAK,IAAIA,MAAK,CAACgN,OAApB,EAA8B;AAEpCkD,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,GADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACmO,MAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA,IAAKnO,MAAK,IAAIA,MAAK,CAACiF,SAApB,EAAgC;AAEtCiL,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,IADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACwuB,OAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA,IAAKxuB,MAAK,IAAIA,MAAK,CAACkb,SAApB,EAAgC;AAEtChL,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,IADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACwuB,OAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA,IAAKxuB,MAAK,IAAIA,MAAK,CAAC0T,SAApB,EAAgC;AAEtCxD,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,IADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACwuB,OAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA,IAAKxuB,MAAK,IAAIA,MAAK,CAAC8G,SAApB,EAAgC;AAEtCoJ,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,IADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACwuB,OAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA,IAAKxuB,MAAK,IAAIA,MAAK,CAAC2lB,SAApB,EAAgC;AAEtCzV,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBxN,YAAAA,IAAI,EAAE,IADiB;AAEvBiC,YAAAA,KAAK,EAAEA,MAAK,CAACwuB,OAAN;AAFgB,WAAxB;AAKA,SAPM,MAOA;AAENte,UAAAA,IAAI,CAAC00B,QAAL,CAAer5B,IAAf,IAAwB;AACvBvL,YAAAA,KAAK,EAAEA;AADgB,WAAxB,CAFM,CAMN;AAEA;AAED;;AAED,UAAK2E,MAAM,CAAC67B,IAAP,CAAa,KAAK4E,OAAlB,EAA4BrmC,MAA5B,GAAqC,CAA1C,EAA8CmR,IAAI,CAACk1B,OAAL,GAAe,KAAKA,OAApB;AAE9Cl1B,MAAAA,IAAI,CAACm1B,YAAL,GAAoB,KAAKA,YAAzB;AACAn1B,MAAAA,IAAI,CAACo1B,cAAL,GAAsB,KAAKA,cAA3B;AAEA,UAAMG,UAAU,GAAG,EAAnB;;AAEA,WAAM,IAAMxV,GAAZ,IAAmB,KAAKwV,UAAxB,EAAqC;AAEpC,YAAK,KAAKA,UAAL,CAAiBxV,GAAjB,MAA2B,IAAhC,EAAuCwV,UAAU,CAAExV,GAAF,CAAV,GAAoB,IAApB;AAEvC;;AAED,UAAKtrB,MAAM,CAAC67B,IAAP,CAAaiF,UAAb,EAA0B1mC,MAA1B,GAAmC,CAAxC,EAA4CmR,IAAI,CAACu1B,UAAL,GAAkBA,UAAlB;AAE5C,aAAOv1B,IAAP;AAEA;;;;EA/K2B0iB,Q;;IAmLvBuT,M;;;;;AAEL,oBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAK/Y,QAAL,GAAgB,IAAhB;AAEA,YAAKrvB,IAAL,GAAY,QAAZ;AAEA,YAAKme,kBAAL,GAA0B,IAAIwJ,OAAJ,EAA1B;AAEA,YAAKvJ,gBAAL,GAAwB,IAAIuJ,OAAJ,EAAxB;AACA,YAAKtJ,uBAAL,GAA+B,IAAIsJ,OAAJ,EAA/B;AAXa;AAab;;;;WAED,cAAM5Y,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,uEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKhU,kBAAL,CAAwBhP,IAAxB,CAA8BJ,MAAM,CAACoP,kBAArC;AAEA,WAAKC,gBAAL,CAAsBjP,IAAtB,CAA4BJ,MAAM,CAACqP,gBAAnC;AACA,WAAKC,uBAAL,CAA6BlP,IAA7B,CAAmCJ,MAAM,CAACsP,uBAA1C;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmB1d,MAAnB,EAA4B;AAE3B,WAAK0gB,iBAAL,CAAwB,IAAxB,EAA8B,KAA9B;AAEA,UAAM5Z,CAAC,GAAG,KAAK6W,WAAL,CAAiB5W,QAA3B;AAEA,aAAO/G,MAAM,CAACmF,GAAP,CAAY,CAAE2B,CAAC,CAAE,CAAF,CAAf,EAAsB,CAAEA,CAAC,CAAE,CAAF,CAAzB,EAAgC,CAAEA,CAAC,CAAE,EAAF,CAAnC,EAA4ChB,SAA5C,EAAP;AAEA;;;WAED,2BAAmBupB,KAAnB,EAA2B;AAE1B,oFAAyBA,KAAzB;;AAEA,WAAK7R,kBAAL,CAAwBhP,IAAxB,CAA8B,KAAKmP,WAAnC,EAAiDpS,MAAjD;AAEA;;;WAED,2BAAmBgkB,aAAnB,EAAkCC,cAAlC,EAAmD;AAElD,oFAAyBD,aAAzB,EAAwCC,cAAxC;;AAEA,WAAKhS,kBAAL,CAAwBhP,IAAxB,CAA8B,KAAKmP,WAAnC,EAAiDpS,MAAjD;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKhG,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;EA5DmBse,Q;;IAgEf4a,iB;;;;;AAEL,+BAA4D;AAAA;;AAAA,QAA/CC,GAA+C,uEAAzC,EAAyC;AAAA,QAArCC,MAAqC,uEAA5B,CAA4B;AAAA,QAAzB1c,IAAyB,uEAAlB,GAAkB;AAAA,QAAbC,GAAa,uEAAP,IAAO;;AAAA;;AAE3D;AAEA,YAAK0c,mBAAL,GAA2B,IAA3B;AAEA,YAAKxoC,IAAL,GAAY,mBAAZ;AAEA,YAAKsoC,GAAL,GAAWA,GAAX;AACA,YAAKG,IAAL,GAAY,CAAZ;AAEA,YAAK5c,IAAL,GAAYA,IAAZ;AACA,YAAKC,GAAL,GAAWA,GAAX;AACA,YAAK4c,KAAL,GAAa,EAAb;AAEA,YAAKH,MAAL,GAAcA,MAAd;AACA,YAAKI,IAAL,GAAY,IAAZ;AAEA,YAAKC,SAAL,GAAiB,EAAjB,CAlB2D,CAkBtC;;AACrB,YAAKC,UAAL,GAAkB,CAAlB,CAnB2D,CAmBtC;;AAErB,YAAKC,sBAAL;;AArB2D;AAuB3D;;;;WAED,cAAM/5B,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,kFAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKmW,GAAL,GAAWv5B,MAAM,CAACu5B,GAAlB;AACA,WAAKG,IAAL,GAAY15B,MAAM,CAAC05B,IAAnB;AAEA,WAAK5c,IAAL,GAAY9c,MAAM,CAAC8c,IAAnB;AACA,WAAKC,GAAL,GAAW/c,MAAM,CAAC+c,GAAlB;AACA,WAAK4c,KAAL,GAAa35B,MAAM,CAAC25B,KAApB;AAEA,WAAKH,MAAL,GAAcx5B,MAAM,CAACw5B,MAArB;AACA,WAAKI,IAAL,GAAY55B,MAAM,CAAC45B,IAAP,KAAgB,IAAhB,GAAuB,IAAvB,GAA8B/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAAC45B,IAA1B,CAA1C;AAEA,WAAKC,SAAL,GAAiB75B,MAAM,CAAC65B,SAAxB;AACA,WAAKC,UAAL,GAAkB95B,MAAM,CAAC85B,UAAzB;AAEA,aAAO,IAAP;AAEA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,wBAAgBE,WAAhB,EAA8B;AAE7B;AACA,UAAMC,YAAY,GAAG,MAAM,KAAKC,aAAL,EAAN,GAA6BF,WAAlD;AAEA,WAAKT,GAAL,GAAW/mC,OAAO,GAAG,CAAV,GAAcF,IAAI,CAAC6nC,IAAL,CAAWF,YAAX,CAAzB;AACA,WAAKF,sBAAL;AAEA;AAED;AACD;AACA;;;;WACC,0BAAiB;AAEhB,UAAME,YAAY,GAAG3nC,IAAI,CAAC8nC,GAAL,CAAU/nC,OAAO,GAAG,GAAV,GAAgB,KAAKknC,GAA/B,CAArB;AAEA,aAAO,MAAM,KAAKW,aAAL,EAAN,GAA6BD,YAApC;AAEA;;;WAED,2BAAkB;AAEjB,aAAOznC,OAAO,GAAG,CAAV,GAAcF,IAAI,CAAC6nC,IAAL,CACpB7nC,IAAI,CAAC8nC,GAAL,CAAU/nC,OAAO,GAAG,GAAV,GAAgB,KAAKknC,GAA/B,IAAuC,KAAKG,IADxB,CAArB;AAGA;;;WAED,wBAAe;AAEd;AACA,aAAO,KAAKG,SAAL,GAAiBvnC,IAAI,CAACa,GAAL,CAAU,KAAKqmC,MAAf,EAAuB,CAAvB,CAAxB;AAEA;;;WAED,yBAAgB;AAEf;AACA,aAAO,KAAKK,SAAL,GAAiBvnC,IAAI,CAACc,GAAL,CAAU,KAAKomC,MAAf,EAAuB,CAAvB,CAAxB;AAEA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,uBAAea,SAAf,EAA0BC,UAA1B,EAAsC7mC,CAAtC,EAAyCM,CAAzC,EAA4CyO,KAA5C,EAAmDC,MAAnD,EAA4D;AAE3D,WAAK+2B,MAAL,GAAca,SAAS,GAAGC,UAA1B;;AAEA,UAAK,KAAKV,IAAL,KAAc,IAAnB,EAA0B;AAEzB,aAAKA,IAAL,GAAY;AACXW,UAAAA,OAAO,EAAE,IADE;AAEXF,UAAAA,SAAS,EAAE,CAFA;AAGXC,UAAAA,UAAU,EAAE,CAHD;AAIXE,UAAAA,OAAO,EAAE,CAJE;AAKXC,UAAAA,OAAO,EAAE,CALE;AAMXj4B,UAAAA,KAAK,EAAE,CANI;AAOXC,UAAAA,MAAM,EAAE;AAPG,SAAZ;AAUA;;AAED,WAAKm3B,IAAL,CAAUW,OAAV,GAAoB,IAApB;AACA,WAAKX,IAAL,CAAUS,SAAV,GAAsBA,SAAtB;AACA,WAAKT,IAAL,CAAUU,UAAV,GAAuBA,UAAvB;AACA,WAAKV,IAAL,CAAUY,OAAV,GAAoB/mC,CAApB;AACA,WAAKmmC,IAAL,CAAUa,OAAV,GAAoB1mC,CAApB;AACA,WAAK6lC,IAAL,CAAUp3B,KAAV,GAAkBA,KAAlB;AACA,WAAKo3B,IAAL,CAAUn3B,MAAV,GAAmBA,MAAnB;AAEA,WAAKs3B,sBAAL;AAEA;;;WAED,2BAAkB;AAEjB,UAAK,KAAKH,IAAL,KAAc,IAAnB,EAA0B;AAEzB,aAAKA,IAAL,CAAUW,OAAV,GAAoB,KAApB;AAEA;;AAED,WAAKR,sBAAL;AAEA;;;WAED,kCAAyB;AAExB,UAAMjd,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAIF,GAAG,GAAGE,IAAI,GAAGxqB,IAAI,CAAC8nC,GAAL,CAAU/nC,OAAO,GAAG,GAAV,GAAgB,KAAKknC,GAA/B,CAAP,GAA8C,KAAKG,IAA7D;AACA,UAAIj3B,MAAM,GAAG,IAAIma,GAAjB;AACA,UAAIpa,KAAK,GAAG,KAAKg3B,MAAL,GAAc/2B,MAA1B;AACA,UAAIia,IAAI,GAAG,CAAE,GAAF,GAAQla,KAAnB;AACA,UAAMo3B,IAAI,GAAG,KAAKA,IAAlB;;AAEA,UAAK,KAAKA,IAAL,KAAc,IAAd,IAAsB,KAAKA,IAAL,CAAUW,OAArC,EAA+C;AAE9C,YAAMF,SAAS,GAAGT,IAAI,CAACS,SAAvB;AAAA,YACCC,UAAU,GAAGV,IAAI,CAACU,UADnB;AAGA5d,QAAAA,IAAI,IAAIkd,IAAI,CAACY,OAAL,GAAeh4B,KAAf,GAAuB63B,SAA/B;AACAzd,QAAAA,GAAG,IAAIgd,IAAI,CAACa,OAAL,GAAeh4B,MAAf,GAAwB63B,UAA/B;AACA93B,QAAAA,KAAK,IAAIo3B,IAAI,CAACp3B,KAAL,GAAa63B,SAAtB;AACA53B,QAAAA,MAAM,IAAIm3B,IAAI,CAACn3B,MAAL,GAAc63B,UAAxB;AAEA;;AAED,UAAMI,IAAI,GAAG,KAAKZ,UAAlB;AACA,UAAKY,IAAI,KAAK,CAAd,EAAkBhe,IAAI,IAAII,IAAI,GAAG4d,IAAP,GAAc,KAAKC,YAAL,EAAtB;AAElB,WAAKtrB,gBAAL,CAAsBurB,eAAtB,CAAuCle,IAAvC,EAA6CA,IAAI,GAAGla,KAApD,EAA2Doa,GAA3D,EAAgEA,GAAG,GAAGna,MAAtE,EAA8Eqa,IAA9E,EAAoF,KAAKC,GAAzF;AAEA,WAAKzN,uBAAL,CAA6BlP,IAA7B,CAAmC,KAAKiP,gBAAxC,EAA2DlS,MAA3D;AAEA;;;WAED,gBAAQqG,IAAR,EAAe;AAEd,UAAMJ,IAAI,iFAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC0O,MAAL,CAAYynB,GAAZ,GAAkB,KAAKA,GAAvB;AACAn2B,MAAAA,IAAI,CAAC0O,MAAL,CAAY4nB,IAAZ,GAAmB,KAAKA,IAAxB;AAEAt2B,MAAAA,IAAI,CAAC0O,MAAL,CAAYgL,IAAZ,GAAmB,KAAKA,IAAxB;AACA1Z,MAAAA,IAAI,CAAC0O,MAAL,CAAYiL,GAAZ,GAAkB,KAAKA,GAAvB;AACA3Z,MAAAA,IAAI,CAAC0O,MAAL,CAAY6nB,KAAZ,GAAoB,KAAKA,KAAzB;AAEAv2B,MAAAA,IAAI,CAAC0O,MAAL,CAAY0nB,MAAZ,GAAqB,KAAKA,MAA1B;AAEA,UAAK,KAAKI,IAAL,KAAc,IAAnB,EAA0Bx2B,IAAI,CAAC0O,MAAL,CAAY8nB,IAAZ,GAAmB/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB,KAAK8wB,IAAxB,CAAnB;AAE1Bx2B,MAAAA,IAAI,CAAC0O,MAAL,CAAY+nB,SAAZ,GAAwB,KAAKA,SAA7B;AACAz2B,MAAAA,IAAI,CAAC0O,MAAL,CAAYgoB,UAAZ,GAAyB,KAAKA,UAA9B;AAEA,aAAO12B,IAAP;AAEA;;;;EAjO8Bi2B,M;;AAqOhC,IAAME,GAAG,GAAG,EAAZ;AAAA,IAAgBC,MAAM,GAAG,CAAzB;;IAEMqB,U;;;;;AAEL,sBAAa/d,IAAb,EAAmBC,GAAnB,EAAwB+d,YAAxB,EAAuC;AAAA;;AAAA;;AAEtC;AAEA,YAAK7pC,IAAL,GAAY,YAAZ;;AAEA,QAAK6pC,YAAY,CAACC,uBAAb,KAAyC,IAA9C,EAAqD;AAEpD/jC,MAAAA,OAAO,CAACkD,KAAR,CAAe,wGAAf;AACA;AAEA;;AAED,YAAK4gC,YAAL,GAAoBA,YAApB;AAEA,QAAME,QAAQ,GAAG,IAAI1B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAie,IAAAA,QAAQ,CAACpd,MAAT,GAAkB,QAAKA,MAAvB;AACAod,IAAAA,QAAQ,CAACzgB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB,CAAzB;AACAikC,IAAAA,QAAQ,CAACxa,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;;AACA,YAAK0D,GAAL,CAAUmpB,QAAV;;AAEA,QAAMC,QAAQ,GAAG,IAAI3B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAke,IAAAA,QAAQ,CAACrd,MAAT,GAAkB,QAAKA,MAAvB;AACAqd,IAAAA,QAAQ,CAAC1gB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB,CAAzB;AACAkkC,IAAAA,QAAQ,CAACza,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAjB;;AACA,YAAK0D,GAAL,CAAUopB,QAAV;;AAEA,QAAMC,QAAQ,GAAG,IAAI5B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAme,IAAAA,QAAQ,CAACtd,MAAT,GAAkB,QAAKA,MAAvB;AACAsd,IAAAA,QAAQ,CAAC3gB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACAmkC,IAAAA,QAAQ,CAAC1a,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;;AACA,YAAK0D,GAAL,CAAUqpB,QAAV;;AAEA,QAAMC,QAAQ,GAAG,IAAI7B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAoe,IAAAA,QAAQ,CAACvd,MAAT,GAAkB,QAAKA,MAAvB;AACAud,IAAAA,QAAQ,CAAC5gB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAE,CAAzB;AACAokC,IAAAA,QAAQ,CAAC3a,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAb,EAAgB,CAAE,CAAlB,EAAqB,CAArB,CAAjB;;AACA,YAAK0D,GAAL,CAAUspB,QAAV;;AAEA,QAAMC,QAAQ,GAAG,IAAI9B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAqe,IAAAA,QAAQ,CAACxd,MAAT,GAAkB,QAAKA,MAAvB;AACAwd,IAAAA,QAAQ,CAAC7gB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB,CAAzB;AACAqkC,IAAAA,QAAQ,CAAC5a,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;;AACA,YAAK0D,GAAL,CAAUupB,QAAV;;AAEA,QAAMC,QAAQ,GAAG,IAAI/B,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAjB;AACAse,IAAAA,QAAQ,CAACzd,MAAT,GAAkB,QAAKA,MAAvB;AACAyd,IAAAA,QAAQ,CAAC9gB,EAAT,CAAYxjB,GAAZ,CAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB,CAAzB;AACAskC,IAAAA,QAAQ,CAAC7a,MAAT,CAAiB,IAAIrS,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAE,CAArB,CAAjB;;AACA,YAAK0D,GAAL,CAAUwpB,QAAV;;AAjDsC;AAmDtC;;;;WAED,gBAAQC,QAAR,EAAkBC,KAAlB,EAA0B;AAEzB,UAAK,KAAK3c,MAAL,KAAgB,IAArB,EAA4B,KAAKsC,iBAAL;AAE5B,UAAM4Z,YAAY,GAAG,KAAKA,YAA1B;;AAEA,0CAAuE,KAAK/nB,QAA5E;AAAA,UAAQioB,QAAR;AAAA,UAAkBC,QAAlB;AAAA,UAA4BC,QAA5B;AAAA,UAAsCC,QAAtC;AAAA,UAAgDC,QAAhD;AAAA,UAA0DC,QAA1D;;AAEA,UAAMG,mBAAmB,GAAGF,QAAQ,CAACG,eAAT,EAA5B;AAEA,UAAMC,kBAAkB,GAAGJ,QAAQ,CAACK,WAApC;AACA,UAAMC,gBAAgB,GAAGN,QAAQ,CAACO,EAAT,CAAYtB,OAArC;AAEAe,MAAAA,QAAQ,CAACK,WAAT,GAAuBxyC,aAAvB;AACAmyC,MAAAA,QAAQ,CAACO,EAAT,CAAYtB,OAAZ,GAAsB,KAAtB;AAEA,UAAMl1B,eAAe,GAAGy1B,YAAY,CAACvyB,OAAb,CAAqBlD,eAA7C;AAEAy1B,MAAAA,YAAY,CAACvyB,OAAb,CAAqBlD,eAArB,GAAuC,KAAvC;AAEAi2B,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBP,QAAxB;AAEAM,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBN,QAAxB;AAEAK,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBL,QAAxB;AAEAI,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBJ,QAAxB;AAEAG,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBH,QAAxB;AAEAN,MAAAA,YAAY,CAACvyB,OAAb,CAAqBlD,eAArB,GAAuCA,eAAvC;AAEAi2B,MAAAA,QAAQ,CAACQ,eAAT,CAA0BhB,YAA1B,EAAwC,CAAxC;AACAQ,MAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBF,QAAxB;AAEAC,MAAAA,QAAQ,CAACQ,eAAT,CAA0BN,mBAA1B;AAEAF,MAAAA,QAAQ,CAACK,WAAT,GAAuBD,kBAAvB;AACAJ,MAAAA,QAAQ,CAACO,EAAT,CAAYtB,OAAZ,GAAsBqB,gBAAtB;AAEAd,MAAAA,YAAY,CAACvyB,OAAb,CAAqB3C,gBAArB,GAAwC,IAAxC;AAEA;;;;EAtGuB8Y,Q;;IA0GnBsd,W;;;;;AAEL,uBAAat4B,MAAb,EAAqBY,OAArB,EAA8BE,KAA9B,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkEC,MAAlE,EAA0E3T,IAA1E,EAAgF4T,UAAhF,EAA4FC,QAA5F,EAAuG;AAAA;;AAAA;;AAEtGpB,IAAAA,MAAM,GAAGA,MAAM,KAAKtS,SAAX,GAAuBsS,MAAvB,GAAgC,EAAzC;AACAY,IAAAA,OAAO,GAAGA,OAAO,KAAKlT,SAAZ,GAAwBkT,OAAxB,GAAkC5a,qBAA5C;AAEA,kCAAOga,MAAP,EAAeY,OAAf,EAAwBE,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoE3T,IAApE,EAA0E4T,UAA1E,EAAsFC,QAAtF;AAEA,YAAKm3B,aAAL,GAAqB,IAArB;AAEA,YAAK12B,KAAL,GAAa,KAAb;AATsG;AAWtG;;;;SAED,eAAa;AAEZ,aAAO,KAAKpD,KAAZ;AAEA,K;SAED,aAAYjP,KAAZ,EAAoB;AAEnB,WAAKiP,KAAL,GAAajP,KAAb;AAEA;;;;EAzBwBkR,O;;IA6BpB83B,qB;;;;;AAEL,iCAAal7B,IAAb,EAAkC;AAAA;;AAAA,QAAfiH,OAAe,uEAAL,EAAK;;AAAA;;AAEjC,kCAAOjH,IAAP,EAAaA,IAAb,EAAmBiH,OAAnB;AAEA,YAAK8yB,uBAAL,GAA+B,IAA/B;AAEA,QAAM54B,KAAK,GAAG;AAAEK,MAAAA,KAAK,EAAExB,IAAT;AAAeyB,MAAAA,MAAM,EAAEzB,IAAvB;AAA6BmH,MAAAA,KAAK,EAAE;AAApC,KAAd;AACA,QAAMzE,MAAM,GAAG,CAAEvB,KAAF,EAASA,KAAT,EAAgBA,KAAhB,EAAuBA,KAAvB,EAA8BA,KAA9B,EAAqCA,KAArC,CAAf;AAEA,YAAKoG,OAAL,GAAe,IAAIyzB,WAAJ,CAAiBt4B,MAAjB,EAAyBuE,OAAO,CAAC3D,OAAjC,EAA0C2D,OAAO,CAACzD,KAAlD,EAAyDyD,OAAO,CAACxD,KAAjE,EAAwEwD,OAAO,CAACvD,SAAhF,EAA2FuD,OAAO,CAACtD,SAAnG,EAA8GsD,OAAO,CAACrD,MAAtH,EAA8HqD,OAAO,CAAChX,IAAtI,EAA4IgX,OAAO,CAACpD,UAApJ,EAAgKoD,OAAO,CAACnD,QAAxK,CAAf,CATiC,CAWjC;AACA;AACA;AAEA;AACA;AACA;;AAEA,YAAKyD,OAAL,CAAa5C,qBAAb,GAAqC,IAArC;AAEA,YAAK4C,OAAL,CAAalD,eAAb,GAA+B4C,OAAO,CAAC5C,eAAR,KAA4BjU,SAA5B,GAAwC6W,OAAO,CAAC5C,eAAhD,GAAkE,KAAjG;AACA,YAAKkD,OAAL,CAAa5D,SAAb,GAAyBsD,OAAO,CAACtD,SAAR,KAAsBvT,SAAtB,GAAkC6W,OAAO,CAACtD,SAA1C,GAAsDpa,YAA/E;AAtBiC;AAwBjC;;;;WAED,oCAA4B+wC,QAA5B,EAAsC/yB,OAAtC,EAAgD;AAE/C,WAAKA,OAAL,CAAatX,IAAb,GAAoBsX,OAAO,CAACtX,IAA5B;AACA,WAAKsX,OAAL,CAAazD,QAAb,GAAwByD,OAAO,CAACzD,QAAhC;AAEA,WAAKyD,OAAL,CAAalD,eAAb,GAA+BkD,OAAO,CAAClD,eAAvC;AACA,WAAKkD,OAAL,CAAa5D,SAAb,GAAyB4D,OAAO,CAAC5D,SAAjC;AACA,WAAK4D,OAAL,CAAa7D,SAAb,GAAyB6D,OAAO,CAAC7D,SAAjC;AAEA,UAAMy3B,MAAM,GAAG;AAEdrE,QAAAA,QAAQ,EAAE;AACTsE,UAAAA,SAAS,EAAE;AAAElpC,YAAAA,KAAK,EAAE;AAAT;AADF,SAFI;AAMdqlC,QAAAA,YAAY;AAAE;AAAF,4YANE;AA0BdC,QAAAA,cAAc;AAAE;AAAF;AA1BA,OAAf;AA8CA,UAAMjmB,QAAQ,GAAG,IAAI8jB,WAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAjB;AAEA,UAAMxT,QAAQ,GAAG,IAAIuV,cAAJ,CAAoB;AAEpC35B,QAAAA,IAAI,EAAE,qBAF8B;AAIpCq5B,QAAAA,QAAQ,EAAEH,aAAa,CAAEwE,MAAM,CAACrE,QAAT,CAJa;AAKpCS,QAAAA,YAAY,EAAE4D,MAAM,CAAC5D,YALe;AAMpCC,QAAAA,cAAc,EAAE2D,MAAM,CAAC3D,cANa;AAOpCvS,QAAAA,IAAI,EAAEn/B,QAP8B;AAQpCk/B,QAAAA,QAAQ,EAAE9+B;AAR0B,OAApB,CAAjB;AAYA27B,MAAAA,QAAQ,CAACiV,QAAT,CAAkBsE,SAAlB,CAA4BlpC,KAA5B,GAAoCqV,OAApC;AAEA,UAAM8zB,IAAI,GAAG,IAAItH,IAAJ,CAAUxiB,QAAV,EAAoBsQ,QAApB,CAAb;AAEA,UAAMyZ,gBAAgB,GAAG/zB,OAAO,CAAC5D,SAAjC,CAzE+C,CA2E/C;;AACA,UAAK4D,OAAO,CAAC5D,SAAR,KAAsBja,wBAA3B,EAAsD6d,OAAO,CAAC5D,SAAR,GAAoBpa,YAApB;AAEtD,UAAM2kB,MAAM,GAAG,IAAI2rB,UAAJ,CAAgB,CAAhB,EAAmB,EAAnB,EAAuB,IAAvB,CAAf;AACA3rB,MAAAA,MAAM,CAAC7E,MAAP,CAAeixB,QAAf,EAAyBe,IAAzB;AAEA9zB,MAAAA,OAAO,CAAC5D,SAAR,GAAoB23B,gBAApB;AAEAD,MAAAA,IAAI,CAAC9pB,QAAL,CAAc3J,OAAd;AACAyzB,MAAAA,IAAI,CAACxZ,QAAL,CAAcja,OAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO0yB,QAAP,EAAiBn8B,KAAjB,EAAwBgJ,KAAxB,EAA+Bo0B,OAA/B,EAAyC;AAExC,UAAMf,mBAAmB,GAAGF,QAAQ,CAACG,eAAT,EAA5B;;AAEA,WAAM,IAAI1pC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9BupC,QAAAA,QAAQ,CAACQ,eAAT,CAA0B,IAA1B,EAAgC/pC,CAAhC;AAEAupC,QAAAA,QAAQ,CAACkB,KAAT,CAAgBr9B,KAAhB,EAAuBgJ,KAAvB,EAA8Bo0B,OAA9B;AAEA;;AAEDjB,MAAAA,QAAQ,CAACQ,eAAT,CAA0BN,mBAA1B;AAEA;;;;EApIkCxzB,iB;;AAwIpC,IAAMy0B,QAAQ,GAAG,aAAc,IAAItuB,OAAJ,EAA/B;;AACA,IAAMuuB,QAAQ,GAAG,aAAc,IAAIvuB,OAAJ,EAA/B;;AACA,IAAMwuB,aAAa,GAAG,aAAc,IAAI5iC,OAAJ,EAApC;;IAEM6iC,K;AAEL,mBAA6D;AAAA,QAAhDvsB,MAAgD,uEAAvC,IAAIlC,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAuC;AAAA,QAAfgF,QAAe,uEAAJ,CAAI;;AAAA;;AAE5D,SAAK0pB,OAAL,GAAe,IAAf,CAF4D,CAI5D;;AAEA,SAAKxsB,MAAL,GAAcA,MAAd;AACA,SAAK8C,QAAL,GAAgBA,QAAhB;AAEA;;;;WAED,aAAK9C,MAAL,EAAa8C,QAAb,EAAwB;AAEvB,WAAK9C,MAAL,CAAYjQ,IAAZ,CAAkBiQ,MAAlB;AACA,WAAK8C,QAAL,GAAgBA,QAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAe1f,CAAf,EAAkBM,CAAlB,EAAqB4S,CAArB,EAAwBrO,CAAxB,EAA4B;AAE3B,WAAK+X,MAAL,CAAYtZ,GAAZ,CAAiBtD,CAAjB,EAAoBM,CAApB,EAAuB4S,CAAvB;AACA,WAAKwM,QAAL,GAAgB7a,CAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,uCAA+B+X,MAA/B,EAAuC8B,KAAvC,EAA+C;AAE9C,WAAK9B,MAAL,CAAYjQ,IAAZ,CAAkBiQ,MAAlB;AACA,WAAK8C,QAAL,GAAgB,CAAEhB,KAAK,CAAClH,GAAN,CAAW,KAAKoF,MAAhB,CAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuBpa,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAiC;AAEhC,UAAMka,MAAM,GAAGosB,QAAQ,CAACjkC,UAAT,CAAqBrC,CAArB,EAAwBD,CAAxB,EAA4BuiB,KAA5B,CAAmCikB,QAAQ,CAAClkC,UAAT,CAAqBvC,CAArB,EAAwBC,CAAxB,CAAnC,EAAiEwB,SAAjE,EAAf,CAFgC,CAIhC;;;AAEA,WAAKolC,6BAAL,CAAoCzsB,MAApC,EAA4Cpa,CAA5C;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMid,KAAN,EAAc;AAEb,WAAK7C,MAAL,CAAYjQ,IAAZ,CAAkB8S,KAAK,CAAC7C,MAAxB;AACA,WAAK8C,QAAL,GAAgBD,KAAK,CAACC,QAAtB;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX;AAEA,UAAM4pB,mBAAmB,GAAG,MAAM,KAAK1sB,MAAL,CAAYpe,MAAZ,EAAlC;AACA,WAAKoe,MAAL,CAAY5X,cAAZ,CAA4BskC,mBAA5B;AACA,WAAK5pB,QAAL,IAAiB4pB,mBAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,WAAK5pB,QAAL,IAAiB,CAAE,CAAnB;AACA,WAAK9C,MAAL,CAAY4f,MAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,yBAAiB9d,KAAjB,EAAyB;AAExB,aAAO,KAAK9B,MAAL,CAAYpF,GAAZ,CAAiBkH,KAAjB,IAA2B,KAAKgB,QAAvC;AAEA;;;WAED,0BAAkBH,MAAlB,EAA2B;AAE1B,aAAO,KAAKuC,eAAL,CAAsBvC,MAAM,CAACpZ,MAA7B,IAAwCoZ,MAAM,CAACxC,MAAtD;AAEA;;;WAED,sBAAc2B,KAAd,EAAqBvgB,MAArB,EAA8B;AAE7B,aAAOA,MAAM,CAACwO,IAAP,CAAa,KAAKiQ,MAAlB,EAA2B5X,cAA3B,CAA2C,CAAE,KAAK8c,eAAL,CAAsBpD,KAAtB,CAA7C,EAA6EN,GAA7E,CAAkFM,KAAlF,CAAP;AAEA;;;WAED,uBAAe6qB,IAAf,EAAqBprC,MAArB,EAA8B;AAE7B,UAAMykB,SAAS,GAAG2mB,IAAI,CAACt7B,KAAL,CAAY+6B,QAAZ,CAAlB;AAEA,UAAM1sB,WAAW,GAAG,KAAKM,MAAL,CAAYpF,GAAZ,CAAiBoL,SAAjB,CAApB;;AAEA,UAAKtG,WAAW,KAAK,CAArB,EAAyB;AAExB;AACA,YAAK,KAAKwF,eAAL,CAAsBynB,IAAI,CAACzN,KAA3B,MAAuC,CAA5C,EAAgD;AAE/C,iBAAO39B,MAAM,CAACwO,IAAP,CAAa48B,IAAI,CAACzN,KAAlB,CAAP;AAEA,SAPuB,CASxB;;;AACA,eAAO,IAAP;AAEA;;AAED,UAAMt7B,CAAC,GAAG,EAAI+oC,IAAI,CAACzN,KAAL,CAAWtkB,GAAX,CAAgB,KAAKoF,MAArB,IAAgC,KAAK8C,QAAzC,IAAsDpD,WAAhE;;AAEA,UAAK9b,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAlB,EAAsB;AAErB,eAAO,IAAP;AAEA;;AAED,aAAOrC,MAAM,CAACwO,IAAP,CAAaiW,SAAb,EAAyB5d,cAAzB,CAAyCxE,CAAzC,EAA6C4d,GAA7C,CAAkDmrB,IAAI,CAACzN,KAAvD,CAAP;AAEA;;;WAED,wBAAgByN,IAAhB,EAAuB;AAEtB;AAEA,UAAMC,SAAS,GAAG,KAAK1nB,eAAL,CAAsBynB,IAAI,CAACzN,KAA3B,CAAlB;AACA,UAAM2N,OAAO,GAAG,KAAK3nB,eAAL,CAAsBynB,IAAI,CAACrH,GAA3B,CAAhB;AAEA,aAASsH,SAAS,GAAG,CAAZ,IAAiBC,OAAO,GAAG,CAA7B,IAAsCA,OAAO,GAAG,CAAV,IAAeD,SAAS,GAAG,CAAxE;AAEA;;;WAED,uBAAehrB,GAAf,EAAqB;AAEpB,aAAOA,GAAG,CAACkrB,eAAJ,CAAqB,IAArB,CAAP;AAEA;;;WAED,0BAAkBnqB,MAAlB,EAA2B;AAE1B,aAAOA,MAAM,CAACmqB,eAAP,CAAwB,IAAxB,CAAP;AAEA;;;WAED,uBAAevrC,MAAf,EAAwB;AAEvB,aAAOA,MAAM,CAACwO,IAAP,CAAa,KAAKiQ,MAAlB,EAA2B5X,cAA3B,CAA2C,CAAE,KAAK0a,QAAlD,CAAP;AAEA;;;WAED,sBAAcrV,MAAd,EAAsBs/B,oBAAtB,EAA6C;AAE5C,UAAM/d,YAAY,GAAG+d,oBAAoB,IAAIT,aAAa,CAAClN,eAAd,CAA+B3xB,MAA/B,CAA7C;;AAEA,UAAMu/B,cAAc,GAAG,KAAKC,aAAL,CAAoBb,QAApB,EAA+BttB,YAA/B,CAA6CrR,MAA7C,CAAvB;AAEA,UAAMuS,MAAM,GAAG,KAAKA,MAAL,CAAY5J,YAAZ,CAA0B4Y,YAA1B,EAAyC3nB,SAAzC,EAAf;AAEA,WAAKyb,QAAL,GAAgB,CAAEkqB,cAAc,CAACpyB,GAAf,CAAoBoF,MAApB,CAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW7W,MAAX,EAAoB;AAEnB,WAAK2Z,QAAL,IAAiB3Z,MAAM,CAACyR,GAAP,CAAY,KAAKoF,MAAjB,CAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ6C,KAAR,EAAgB;AAEf,aAAOA,KAAK,CAAC7C,MAAN,CAAagE,MAAb,CAAqB,KAAKhE,MAA1B,KAAwC6C,KAAK,CAACC,QAAN,KAAmB,KAAKA,QAAvE;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKhc,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;AAIF,IAAMm9B,SAAS,GAAG,aAAc,IAAItoB,MAAJ,EAAhC;;AACA,IAAMuoB,SAAS,GAAG,aAAc,IAAIrvB,OAAJ,EAAhC;;IAEMsvB,O;AAEL,qBAA0H;AAAA,QAA7G/oB,EAA6G,uEAAxG,IAAIkoB,KAAJ,EAAwG;AAAA,QAA3FjoB,EAA2F,uEAAtF,IAAIioB,KAAJ,EAAsF;AAAA,QAAzEhoB,EAAyE,uEAApE,IAAIgoB,KAAJ,EAAoE;AAAA,QAAvDhX,EAAuD,uEAAlD,IAAIgX,KAAJ,EAAkD;AAAA,QAArCc,EAAqC,uEAAhC,IAAId,KAAJ,EAAgC;AAAA,QAAnBe,EAAmB,uEAAd,IAAIf,KAAJ,EAAc;;AAAA;;AAEzH,SAAKgB,MAAL,GAAc,CAAElpB,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcgR,EAAd,EAAkB8X,EAAlB,EAAsBC,EAAtB,CAAd;AAEA;;;;WAED,aAAKjpB,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBgR,EAAjB,EAAqB8X,EAArB,EAAyBC,EAAzB,EAA8B;AAE7B,UAAMC,MAAM,GAAG,KAAKA,MAApB;AAEAA,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBsU,EAAlB;AACAkpB,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBuU,EAAlB;AACAipB,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBwU,EAAlB;AACAgpB,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBwlB,EAAlB;AACAgY,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBs9B,EAAlB;AACAE,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYx9B,IAAZ,CAAkBu9B,EAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAME,OAAN,EAAgB;AAEf,UAAMD,MAAM,GAAG,KAAKA,MAApB;;AAEA,WAAM,IAAI7rC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B6rC,QAAAA,MAAM,CAAE7rC,CAAF,CAAN,CAAYqO,IAAZ,CAAkBy9B,OAAO,CAACD,MAAR,CAAgB7rC,CAAhB,CAAlB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iCAAyBwB,CAAzB,EAA6B;AAE5B,UAAMqqC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAM/iC,EAAE,GAAGtH,CAAC,CAACoF,QAAb;AACA,UAAMmlC,GAAG,GAAGjjC,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBkjC,GAAG,GAAGljC,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCmjC,GAAG,GAAGnjC,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDojC,GAAG,GAAGpjC,EAAE,CAAE,CAAF,CAA3D;AACA,UAAMqjC,GAAG,GAAGrjC,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBsjC,GAAG,GAAGtjC,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCujC,GAAG,GAAGvjC,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDwjC,GAAG,GAAGxjC,EAAE,CAAE,CAAF,CAA3D;AACA,UAAMyjC,GAAG,GAAGzjC,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB0jC,GAAG,GAAG1jC,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC2jC,IAAI,GAAG3jC,EAAE,CAAE,EAAF,CAA7C;AAAA,UAAqD4jC,IAAI,GAAG5jC,EAAE,CAAE,EAAF,CAA9D;AACA,UAAM6jC,IAAI,GAAG7jC,EAAE,CAAE,EAAF,CAAf;AAAA,UAAuB8jC,IAAI,GAAG9jC,EAAE,CAAE,EAAF,CAAhC;AAAA,UAAwC+jC,IAAI,GAAG/jC,EAAE,CAAE,EAAF,CAAjD;AAAA,UAAyDgkC,IAAI,GAAGhkC,EAAE,CAAE,EAAF,CAAlE;AAEA+iC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGH,GAAjC,EAAsCO,GAAG,GAAGH,GAA5C,EAAiDO,IAAI,GAAGH,GAAxD,EAA6DO,IAAI,GAAGH,IAApE,EAA2EhnC,SAA3E;AACAkmC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGH,GAAjC,EAAsCO,GAAG,GAAGH,GAA5C,EAAiDO,IAAI,GAAGH,GAAxD,EAA6DO,IAAI,GAAGH,IAApE,EAA2EhnC,SAA3E;AACAkmC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGF,GAAjC,EAAsCM,GAAG,GAAGF,GAA5C,EAAiDM,IAAI,GAAGF,GAAxD,EAA6DM,IAAI,GAAGF,IAApE,EAA2EjnC,SAA3E;AACAkmC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGF,GAAjC,EAAsCM,GAAG,GAAGF,GAA5C,EAAiDM,IAAI,GAAGF,GAAxD,EAA6DM,IAAI,GAAGF,IAApE,EAA2EjnC,SAA3E;AACAkmC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGD,GAAjC,EAAsCK,GAAG,GAAGD,GAA5C,EAAiDK,IAAI,GAAGD,IAAxD,EAA8DK,IAAI,GAAGD,IAArE,EAA4ElnC,SAA5E;AACAkmC,MAAAA,MAAM,CAAE,CAAF,CAAN,CAAYkB,aAAZ,CAA2Bb,GAAG,GAAGD,GAAjC,EAAsCK,GAAG,GAAGD,GAA5C,EAAiDK,IAAI,GAAGD,IAAxD,EAA8DK,IAAI,GAAGD,IAArE,EAA4ElnC,SAA5E;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkBoa,MAAlB,EAA2B;AAE1B,UAAMS,QAAQ,GAAGT,MAAM,CAACS,QAAxB;AAEA,UAAKA,QAAQ,CAAC8c,cAAT,KAA4B,IAAjC,EAAwC9c,QAAQ,CAACod,qBAAT;;AAExC4N,MAAAA,SAAS,CAACn9B,IAAV,CAAgBmS,QAAQ,CAAC8c,cAAzB,EAA0ClgB,YAA1C,CAAwD2C,MAAM,CAACvC,WAA/D;;AAEA,aAAO,KAAK+F,gBAAL,CAAuBioB,SAAvB,CAAP;AAEA;;;WAED,0BAAkBwB,MAAlB,EAA2B;AAE1BxB,MAAAA,SAAS,CAAC3jC,MAAV,CAAiB7C,GAAjB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;;AACAwmC,MAAAA,SAAS,CAAC/sB,MAAV,GAAmB,kBAAnB;;AACA+sB,MAAAA,SAAS,CAACpuB,YAAV,CAAwB4vB,MAAM,CAACxvB,WAA/B;;AAEA,aAAO,KAAK+F,gBAAL,CAAuBioB,SAAvB,CAAP;AAEA;;;WAED,0BAAkBvqB,MAAlB,EAA2B;AAE1B,UAAM4qB,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMhkC,MAAM,GAAGoZ,MAAM,CAACpZ,MAAtB;AACA,UAAMolC,SAAS,GAAG,CAAEhsB,MAAM,CAACxC,MAA3B;;AAEA,WAAM,IAAIze,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAMouB,QAAQ,GAAGyd,MAAM,CAAE7rC,CAAF,CAAN,CAAYwjB,eAAZ,CAA6B3b,MAA7B,CAAjB;;AAEA,YAAKumB,QAAQ,GAAG6e,SAAhB,EAA4B;AAE3B,iBAAO,KAAP;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,uBAAe/sB,GAAf,EAAqB;AAEpB,UAAM2rB,MAAM,GAAG,KAAKA,MAApB;;AAEA,WAAM,IAAI7rC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAMmhB,KAAK,GAAG0qB,MAAM,CAAE7rC,CAAF,CAApB,CAF8B,CAI9B;;AAEAyrC,QAAAA,SAAS,CAAC/pC,CAAV,GAAcyf,KAAK,CAAC7C,MAAN,CAAa5c,CAAb,GAAiB,CAAjB,GAAqBwe,GAAG,CAAC7e,GAAJ,CAAQK,CAA7B,GAAiCwe,GAAG,CAAC9e,GAAJ,CAAQM,CAAvD;AACA+pC,QAAAA,SAAS,CAACzpC,CAAV,GAAcmf,KAAK,CAAC7C,MAAN,CAAatc,CAAb,GAAiB,CAAjB,GAAqBke,GAAG,CAAC7e,GAAJ,CAAQW,CAA7B,GAAiCke,GAAG,CAAC9e,GAAJ,CAAQY,CAAvD;AACAypC,QAAAA,SAAS,CAAC72B,CAAV,GAAcuM,KAAK,CAAC7C,MAAN,CAAa1J,CAAb,GAAiB,CAAjB,GAAqBsL,GAAG,CAAC7e,GAAJ,CAAQuT,CAA7B,GAAiCsL,GAAG,CAAC9e,GAAJ,CAAQwT,CAAvD;;AAEA,YAAKuM,KAAK,CAACqC,eAAN,CAAuBioB,SAAvB,IAAqC,CAA1C,EAA8C;AAE7C,iBAAO,KAAP;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,uBAAerrB,KAAf,EAAuB;AAEtB,UAAMyrB,MAAM,GAAG,KAAKA,MAApB;;AAEA,WAAM,IAAI7rC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAK6rC,MAAM,CAAE7rC,CAAF,CAAN,CAAYwjB,eAAZ,CAA6BpD,KAA7B,IAAuC,CAA5C,EAAgD;AAE/C,iBAAO,KAAP;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKhb,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;AAIF,SAAS6+B,cAAT,GAA0B;AAEzB,MAAIv8B,OAAO,GAAG,IAAd;AACA,MAAIw8B,WAAW,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIC,SAAS,GAAG,IAAhB;;AAEA,WAASC,gBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAyC;AAExCJ,IAAAA,aAAa,CAAEG,IAAF,EAAQC,KAAR,CAAb;AAEAH,IAAAA,SAAS,GAAG18B,OAAO,CAAC88B,qBAAR,CAA+BH,gBAA/B,CAAZ;AAEA;;AAED,SAAO;AAEN9P,IAAAA,KAAK,EAAE,iBAAY;AAElB,UAAK2P,WAAW,KAAK,IAArB,EAA4B;AAC5B,UAAKC,aAAa,KAAK,IAAvB,EAA8B;AAE9BC,MAAAA,SAAS,GAAG18B,OAAO,CAAC88B,qBAAR,CAA+BH,gBAA/B,CAAZ;AAEAH,MAAAA,WAAW,GAAG,IAAd;AAEA,KAXK;AAaNO,IAAAA,IAAI,EAAE,gBAAY;AAEjB/8B,MAAAA,OAAO,CAACg9B,oBAAR,CAA8BN,SAA9B;AAEAF,MAAAA,WAAW,GAAG,KAAd;AAEA,KAnBK;AAqBNS,IAAAA,gBAAgB,EAAE,0BAAW7yB,QAAX,EAAsB;AAEvCqyB,MAAAA,aAAa,GAAGryB,QAAhB;AAEA,KAzBK;AA2BN8yB,IAAAA,UAAU,EAAE,oBAAW1sC,KAAX,EAAmB;AAE9BwP,MAAAA,OAAO,GAAGxP,KAAV;AAEA;AA/BK,GAAP;AAmCA;;AAED,SAAS2sC,eAAT,CAA0BC,EAA1B,EAA8BC,YAA9B,EAA6C;AAE5C,MAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AAEA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;;AAEA,WAASC,YAAT,CAAuB1mC,SAAvB,EAAkC2mC,UAAlC,EAA+C;AAE9C,QAAMvuC,KAAK,GAAG4H,SAAS,CAAC5H,KAAxB;AACA,QAAMu7B,KAAK,GAAG3zB,SAAS,CAAC2zB,KAAxB;AAEA,QAAM7uB,MAAM,GAAGuhC,EAAE,CAACK,YAAH,EAAf;AAEAL,IAAAA,EAAE,CAACO,UAAH,CAAeD,UAAf,EAA2B7hC,MAA3B;AACAuhC,IAAAA,EAAE,CAACQ,UAAH,CAAeF,UAAf,EAA2BvuC,KAA3B,EAAkCu7B,KAAlC;AAEA3zB,IAAAA,SAAS,CAACo0B,gBAAV;AAEA,QAAI58B,IAAJ;;AAEA,QAAKY,KAAK,YAAYuF,YAAtB,EAAqC;AAEpCnG,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJD,MAIO,IAAKY,KAAK,YAAYwF,WAAtB,EAAoC;AAE1C,UAAKoC,SAAS,CAAC60B,wBAAf,EAA0C;AAEzC,YAAK0R,QAAL,EAAgB;AAEf/uC,UAAAA,IAAI,GAAG,IAAP;AAEA,SAJD,MAIO;AAEN,gBAAM,IAAIwG,KAAJ,CAAW,yEAAX,CAAN;AAEA;AAED,OAZD,MAYO;AAENxG,QAAAA,IAAI,GAAG,IAAP;AAEA;AAED,KApBM,MAoBA,IAAKY,KAAK,YAAY0F,UAAtB,EAAmC;AAEzCtG,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA,IAAKY,KAAK,YAAYuM,WAAtB,EAAoC;AAE1CnN,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA,IAAKY,KAAK,YAAYsM,UAAtB,EAAmC;AAEzClN,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA,IAAKY,KAAK,YAAY2F,SAAtB,EAAkC;AAExCvG,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA,IAAKY,KAAK,YAAYyF,UAAtB,EAAmC;AAEzCrG,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA,IAAKY,KAAK,YAAYqM,iBAAtB,EAA0C;AAEhDjN,MAAAA,IAAI,GAAG,IAAP;AAEA,KAJM,MAIA;AAEN,YAAM,IAAIwG,KAAJ,CAAW,4DAA4D5F,KAAvE,CAAN;AAEA;;AAED,WAAO;AACN0M,MAAAA,MAAM,EAAEA,MADF;AAENtN,MAAAA,IAAI,EAAEA,IAFA;AAGNsvC,MAAAA,eAAe,EAAE1uC,KAAK,CAAC2uC,iBAHjB;AAINj9B,MAAAA,OAAO,EAAE9J,SAAS,CAAC8J;AAJb,KAAP;AAOA;;AAED,WAASk9B,YAAT,CAAuBliC,MAAvB,EAA+B9E,SAA/B,EAA0C2mC,UAA1C,EAAuD;AAEtD,QAAMvuC,KAAK,GAAG4H,SAAS,CAAC5H,KAAxB;AACA,QAAMw7B,WAAW,GAAG5zB,SAAS,CAAC4zB,WAA9B;AAEAyS,IAAAA,EAAE,CAACO,UAAH,CAAeD,UAAf,EAA2B7hC,MAA3B;;AAEA,QAAK8uB,WAAW,CAAC5jB,KAAZ,KAAsB,CAAE,CAA7B,EAAiC;AAEhC;AAEAq2B,MAAAA,EAAE,CAACY,aAAH,CAAkBN,UAAlB,EAA8B,CAA9B,EAAiCvuC,KAAjC;AAEA,KAND,MAMO;AAEN,UAAKmuC,QAAL,EAAgB;AAEfF,QAAAA,EAAE,CAACY,aAAH,CAAkBN,UAAlB,EAA8B/S,WAAW,CAAC7zB,MAAZ,GAAqB3H,KAAK,CAAC2uC,iBAAzD,EACC3uC,KADD,EACQw7B,WAAW,CAAC7zB,MADpB,EAC4B6zB,WAAW,CAAC5jB,KADxC;AAGA,OALD,MAKO;AAENq2B,QAAAA,EAAE,CAACY,aAAH,CAAkBN,UAAlB,EAA8B/S,WAAW,CAAC7zB,MAAZ,GAAqB3H,KAAK,CAAC2uC,iBAAzD,EACC3uC,KAAK,CAAC8uC,QAAN,CAAgBtT,WAAW,CAAC7zB,MAA5B,EAAoC6zB,WAAW,CAAC7zB,MAAZ,GAAqB6zB,WAAW,CAAC5jB,KAArE,CADD;AAGA;;AAED4jB,MAAAA,WAAW,CAAC5jB,KAAZ,GAAoB,CAAE,CAAtB,CAdM,CAcmB;AAEzB;AAED,GAlH2C,CAoH5C;;;AAEA,WAASm3B,GAAT,CAAcnnC,SAAd,EAA0B;AAEzB,QAAKA,SAAS,CAAC25B,4BAAf,EAA8C35B,SAAS,GAAGA,SAAS,CAAC2J,IAAtB;AAE9C,WAAO68B,OAAO,CAACW,GAAR,CAAannC,SAAb,CAAP;AAEA;;AAED,WAASinB,MAAT,CAAiBjnB,SAAjB,EAA6B;AAE5B,QAAKA,SAAS,CAAC25B,4BAAf,EAA8C35B,SAAS,GAAGA,SAAS,CAAC2J,IAAtB;AAE9C,QAAMA,IAAI,GAAG68B,OAAO,CAACW,GAAR,CAAannC,SAAb,CAAb;;AAEA,QAAK2J,IAAL,EAAY;AAEX08B,MAAAA,EAAE,CAACe,YAAH,CAAiBz9B,IAAI,CAAC7E,MAAtB;AAEA0hC,MAAAA,OAAO,CAACa,MAAR,CAAgBrnC,SAAhB;AAEA;AAED;;AAED,WAAS4Q,MAAT,CAAiB5Q,SAAjB,EAA4B2mC,UAA5B,EAAyC;AAExC,QAAK3mC,SAAS,CAAC42B,mBAAf,EAAqC;AAEpC,UAAM0Q,MAAM,GAAGd,OAAO,CAACW,GAAR,CAAannC,SAAb,CAAf;;AAEA,UAAK,CAAEsnC,MAAF,IAAYA,MAAM,CAACx9B,OAAP,GAAiB9J,SAAS,CAAC8J,OAA5C,EAAsD;AAErD08B,QAAAA,OAAO,CAAClpC,GAAR,CAAa0C,SAAb,EAAwB;AACvB8E,UAAAA,MAAM,EAAE9E,SAAS,CAAC8E,MADK;AAEvBtN,UAAAA,IAAI,EAAEwI,SAAS,CAACxI,IAFO;AAGvBsvC,UAAAA,eAAe,EAAE9mC,SAAS,CAACunC,WAHJ;AAIvBz9B,UAAAA,OAAO,EAAE9J,SAAS,CAAC8J;AAJI,SAAxB;AAOA;;AAED;AAEA;;AAED,QAAK9J,SAAS,CAAC25B,4BAAf,EAA8C35B,SAAS,GAAGA,SAAS,CAAC2J,IAAtB;AAE9C,QAAMA,IAAI,GAAG68B,OAAO,CAACW,GAAR,CAAannC,SAAb,CAAb;;AAEA,QAAK2J,IAAI,KAAKhS,SAAd,EAA0B;AAEzB6uC,MAAAA,OAAO,CAAClpC,GAAR,CAAa0C,SAAb,EAAwB0mC,YAAY,CAAE1mC,SAAF,EAAa2mC,UAAb,CAApC;AAEA,KAJD,MAIO,IAAKh9B,IAAI,CAACG,OAAL,GAAe9J,SAAS,CAAC8J,OAA9B,EAAwC;AAE9Ck9B,MAAAA,YAAY,CAAEr9B,IAAI,CAAC7E,MAAP,EAAe9E,SAAf,EAA0B2mC,UAA1B,CAAZ;AAEAh9B,MAAAA,IAAI,CAACG,OAAL,GAAe9J,SAAS,CAAC8J,OAAzB;AAEA;AAED;;AAED,SAAO;AAENq9B,IAAAA,GAAG,EAAEA,GAFC;AAGNlgB,IAAAA,MAAM,EAAEA,MAHF;AAINrW,IAAAA,MAAM,EAAEA;AAJF,GAAP;AAQA;;IAEK42B,a;;;;;AAEL,2BAA4E;AAAA;;AAAA,QAA/Dz+B,KAA+D,uEAAvD,CAAuD;AAAA,QAApDC,MAAoD,uEAA3C,CAA2C;AAAA,QAAxC6zB,aAAwC,uEAAxB,CAAwB;AAAA,QAArBC,cAAqB,uEAAJ,CAAI;;AAAA;;AAE3E;AACA,YAAKtlC,IAAL,GAAY,eAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/f,MAAAA,KAAK,EAAEA,KADU;AAEjBC,MAAAA,MAAM,EAAEA,MAFS;AAGjB6zB,MAAAA,aAAa,EAAEA,aAHE;AAIjBC,MAAAA,cAAc,EAAEA;AAJC,KAAlB;AAOA,QAAM2K,UAAU,GAAG1+B,KAAK,GAAG,CAA3B;AACA,QAAM2+B,WAAW,GAAG1+B,MAAM,GAAG,CAA7B;AAEA,QAAMu0B,KAAK,GAAG1kC,IAAI,CAACuC,KAAL,CAAYyhC,aAAZ,CAAd;AACA,QAAMW,KAAK,GAAG3kC,IAAI,CAACuC,KAAL,CAAY0hC,cAAZ,CAAd;AAEA,QAAMgB,MAAM,GAAGP,KAAK,GAAG,CAAvB;AACA,QAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAvB;AAEA,QAAMmK,aAAa,GAAG5+B,KAAK,GAAGw0B,KAA9B;AACA,QAAMqK,cAAc,GAAG5+B,MAAM,GAAGw0B,KAAhC,CAtB2E,CAwB3E;;AAEA,QAAMvG,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ;;AAEA,SAAM,IAAI9hB,EAAE,GAAG,CAAf,EAAkBA,EAAE,GAAGyoB,MAAvB,EAA+BzoB,EAAE,EAAjC,EAAuC;AAEtC,UAAMhb,CAAC,GAAGgb,EAAE,GAAGsyB,cAAL,GAAsBF,WAAhC;;AAEA,WAAM,IAAIryB,EAAE,GAAG,CAAf,EAAkBA,EAAE,GAAGyoB,MAAvB,EAA+BzoB,EAAE,EAAjC,EAAuC;AAEtC,YAAMrb,CAAC,GAAGqb,EAAE,GAAGsyB,aAAL,GAAqBF,UAA/B;AAEAxK,QAAAA,QAAQ,CAACnlC,IAAT,CAAekC,CAAf,EAAkB,CAAEM,CAApB,EAAuB,CAAvB;AAEA68B,QAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAEAs/B,QAAAA,GAAG,CAACt/B,IAAJ,CAAUud,EAAE,GAAGkoB,KAAf;AACAnG,QAAAA,GAAG,CAACt/B,IAAJ,CAAU,IAAMwd,EAAE,GAAGkoB,KAArB;AAEA;AAED;;AAED,SAAM,IAAIloB,IAAE,GAAG,CAAf,EAAkBA,IAAE,GAAGkoB,KAAvB,EAA8BloB,IAAE,EAAhC,EAAsC;AAErC,WAAM,IAAID,IAAE,GAAG,CAAf,EAAkBA,IAAE,GAAGkoB,KAAvB,EAA8BloB,IAAE,EAAhC,EAAsC;AAErC,YAAM7Y,CAAC,GAAG6Y,IAAE,GAAGyoB,MAAM,GAAGxoB,IAAxB;AACA,YAAM7Y,CAAC,GAAG4Y,IAAE,GAAGyoB,MAAM,IAAKxoB,IAAE,GAAG,CAAV,CAArB;AACA,YAAM5Y,CAAC,GAAK2Y,IAAE,GAAG,CAAP,GAAayoB,MAAM,IAAKxoB,IAAE,GAAG,CAAV,CAA7B;AACA,YAAMxS,CAAC,GAAKuS,IAAE,GAAG,CAAP,GAAayoB,MAAM,GAAGxoB,IAAhC;AAEA2hB,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,QAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEA;AAED;;AAED,YAAKs3B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AArE2E;AAuE3E;;;;WAED,kBAAiBztB,IAAjB,EAAwB;AAEvB,aAAO,IAAI69B,aAAJ,CAAmB79B,IAAI,CAACZ,KAAxB,EAA+BY,IAAI,CAACX,MAApC,EAA4CW,IAAI,CAACkzB,aAAjD,EAAgElzB,IAAI,CAACmzB,cAArE,CAAP;AAEA;;;;EA/E0BvH,c;;AAmF5B,IAAIsS,iBAAiB,GAAG,gFAAxB;AAEA,IAAIC,sBAAsB,GAAG,4DAA7B;AAEA,IAAIC,kBAAkB,GAAG,4EAAzB;AAEA,IAAIC,uBAAuB,GAAG,0DAA9B;AAEA,IAAIC,cAAc,GAAG,kaAArB;AAEA,IAAIC,mBAAmB,GAAG,uFAA1B;AAEA,IAAIC,YAAY,GAAG,sCAAnB;AAEA,IAAIC,kBAAkB,GAAG,8GAAzB;AAEA,IAAIC,KAAK,GAAG,qxMAAZ;AAEA,IAAIC,oBAAoB,GAAG,mxFAA3B;AAEA,IAAIC,qBAAqB,GAAG,+7BAA5B;AAEA,IAAIC,wBAAwB,GAAG,4nBAA/B;AAEA,IAAIC,6BAA6B,GAAG,2HAApC;AAEA,IAAIC,2BAA2B,GAAG,oEAAlC;AAEA,IAAIC,sBAAsB,GAAG,0EAA7B;AAEA,IAAIC,cAAc,GAAG,8HAArB;AAEA,IAAIC,mBAAmB,GAAG,oHAA1B;AAEA,IAAIC,iBAAiB,GAAG,uJAAxB;AAEA,IAAIC,YAAY,GAAG,gRAAnB;AAEA,IAAIC,MAAM,GAAG,g0EAAb;AAEA,IAAIC,2BAA2B,GAAG,s2GAAlC;AAEA,IAAIC,oBAAoB,GAAG,0jBAA3B;AAEA,IAAIC,2BAA2B,GAAG,iJAAlC;AAEA,IAAIC,sBAAsB,GAAG,kKAA7B;AAEA,IAAIC,oBAAoB,GAAG,sIAA3B;AAEA,IAAIC,yBAAyB,GAAG,kEAAhC;AAEA,IAAIC,kBAAkB,GAAG,qDAAzB;AAEA,IAAIC,uBAAuB,GAAG,4QAA9B;AAEA,IAAIC,eAAe,GAAG,qxCAAtB;AAEA,IAAIC,2BAA2B,GAAG,4MAAlC;AAEA,IAAIC,oBAAoB,GAAG,wTAA3B;AAEA,IAAIC,kBAAkB,GAAG,8RAAzB;AAEA,IAAIC,aAAa,GAAG,2oBAApB;AAEA,IAAIC,UAAU,GAAG,uDAAjB;AAEA,IAAIC,eAAe,GAAG,oDAAtB;AAEA,IAAIC,YAAY,GAAG,0RAAnB;AAEA,IAAIC,iBAAiB,GAAG,0MAAxB;AAEA,IAAIC,yBAAyB,GAAG,sYAAhC;AAEA,IAAIC,iBAAiB,GAAG,+MAAxB;AAEA,IAAIC,sBAAsB,GAAG,gGAA7B;AAEA,IAAIC,qBAAqB,GAAG,mvFAA5B;AAEA,IAAIC,iBAAiB,GAAG,gwJAAxB;AAEA,IAAIC,6BAA6B,GAAG,y4BAApC;AAEA,IAAIC,oBAAoB,GAAG,mEAA3B;AAEA,IAAIC,yBAAyB,GAAG,00BAAhC;AAEA,IAAIC,qBAAqB,GAAG,qMAA5B;AAEA,IAAIC,0BAA0B,GAAG,kqCAAjC;AAEA,IAAIC,wBAAwB,GAAG,0wFAA/B;AAEA,IAAIC,6BAA6B,GAAG,k0PAApC;AAEA,IAAIC,qBAAqB,GAAG,81IAA5B;AAEA,IAAIC,oBAAoB,GAAG,+rBAA3B;AAEA,IAAIC,mBAAmB,GAAG,0QAA1B;AAEA,IAAIC,oBAAoB,GAAG,kLAA3B;AAEA,IAAIC,yBAAyB,GAAG,wKAAhC;AAEA,IAAIC,uBAAuB,GAAG,qLAA9B;AAEA,IAAIC,kBAAkB,GAAG,8XAAzB;AAEA,IAAIC,YAAY,GAAG,6ZAAnB;AAEA,IAAIC,iBAAiB,GAAG,kDAAxB;AAEA,IAAIC,qBAAqB,GAAG,gSAA5B;AAEA,IAAIC,0BAA0B,GAAG,sMAAjC;AAEA,IAAIC,qBAAqB,GAAG,sKAA5B;AAEA,IAAIC,0BAA0B,GAAG,oEAAjC;AAEA,IAAIC,iBAAiB,GAAG,4eAAxB;AAEA,IAAIC,kBAAkB,GAAG,8jBAAzB;AAEA,IAAIC,uBAAuB,GAAG,i1BAA9B;AAEA,IAAIC,kBAAkB,GAAG,s2BAAzB;AAEA,IAAIC,qBAAqB,GAAG,m2BAA5B;AAEA,IAAIC,oBAAoB,GAAG,kqBAA3B;AAEA,IAAIC,oBAAoB,GAAG,gJAA3B;AAEA,IAAIC,kBAAkB,GAAG,gJAAzB;AAEA,IAAIC,aAAa,GAAG,kOAApB;AAEA,IAAIC,uBAAuB,GAAG,4+BAA9B;AAEA,IAAIC,+BAA+B,GAAG,wEAAtC;AAEA,IAAIC,8BAA8B,GAAG,kXAArC;AAEA,IAAIC,uBAAuB,GAAG,kRAA9B;AAEA,IAAIC,yBAAyB,GAAG,mKAAhC;AAEA,IAAIC,eAAe,GAAG,kLAAtB;AAEA,IAAIC,OAAO,GAAG,2jDAAd;AAEA,IAAIC,4BAA4B,GAAG,2EAAnC;AAEA,IAAIC,cAAc,GAAG,mNAArB;AAEA,IAAIC,kBAAkB,GAAG,+EAAzB;AAEA,IAAIC,uBAAuB,GAAG,0UAA9B;AAEA,IAAIC,qBAAqB,GAAG,sKAA5B;AAEA,IAAIC,0BAA0B,GAAG,oEAAjC;AAEA,IAAIC,uBAAuB,GAAG,06RAA9B;AAEA,IAAIC,qBAAqB,GAAG,kxCAA5B;AAEA,IAAIC,gBAAgB,GAAG,izCAAvB;AAEA,IAAIC,wBAAwB,GAAG,i5CAA/B;AAEA,IAAIC,eAAe,GAAG,iOAAtB;AAEA,IAAIC,oBAAoB,GAAG,oyBAA3B;AAEA,IAAIC,eAAe,GAAG,8XAAtB;AAEA,IAAIC,iBAAiB,GAAG,odAAxB;AAEA,IAAIC,oBAAoB,GAAG,yLAA3B;AAEA,IAAIC,yBAAyB,GAAG,kEAAhC;AAEA,IAAIC,oBAAoB,GAAG,4FAA3B;AAEA,IAAIC,yBAAyB,GAAG,myCAAhC;AAEA,IAAIC,qBAAqB,GAAG,i5BAA5B;AAEA,IAAIC,0BAA0B,GAAG,smGAAjC;AAEA,IAAIC,gBAAgB,GAAG,wFAAvB;AAEA,IAAIC,cAAc,GAAG,uIAArB;AAEA,IAAIC,SAAS,GAAG,oEAAhB;AAEA,IAAIC,iBAAiB,GAAG,mFAAxB;AAEA,IAAIC,eAAe,GAAG,wIAAtB;AAEA,IAAIC,UAAU,GAAG,6GAAjB;AAEA,IAAIC,eAAe,GAAG,iTAAtB;AAEA,IAAMC,QAAQ,GAAG,6JAAjB;AAEA,IAAMC,UAAU,GAAG,+aAAnB;AAEA,IAAMC,QAAQ,GAAG,gOAAjB;AAEA,IAAMC,UAAU,GAAG,yVAAnB;AAEA,IAAMC,QAAQ,GAAG,uuBAAjB;AAEA,IAAMC,UAAU,GAAG,63BAAnB;AAEA,IAAMC,QAAQ,GAAG,itBAAjB;AAEA,IAAMC,UAAU,GAAG,guBAAnB;AAEA,IAAMC,QAAQ,GAAG,8LAAjB;AAEA,IAAMC,UAAU,GAAG,wTAAnB;AAEA,IAAMC,QAAQ,GAAG,8jBAAjB;AAEA,IAAMC,UAAU,GAAG,uwBAAnB;AAEA,IAAMC,QAAQ,GAAG,m7BAAjB;AAEA,IAAMC,UAAU,GAAG,4pDAAnB;AAEA,IAAMC,QAAQ,GAAG,4pCAAjB;AAEA,IAAMC,UAAU,GAAG,q0EAAnB;AAEA,IAAMC,QAAQ,GAAG,i7BAAjB;AAEA,IAAMC,UAAU,GAAG,w+CAAnB;AAEA,IAAMC,QAAQ,GAAG,2+BAAjB;AAEA,IAAMC,UAAU,GAAG,yqBAAnB;AAEA,IAAMC,QAAQ,GAAG,+nCAAjB;AAEA,IAAMC,UAAU,GAAG,2kEAAnB;AAEA,IAAMC,QAAQ,GAAG,gtCAAjB;AAEA,IAAMC,UAAU,GAAG,82HAAnB;AAEA,IAAMC,QAAQ,GAAG,mkCAAjB;AAEA,IAAMC,UAAU,GAAG,kyDAAnB;AAEA,IAAMC,QAAQ,GAAG,otBAAjB;AAEA,IAAMC,UAAU,GAAG,4vBAAnB;AAEA,IAAMC,QAAQ,GAAG,whBAAjB;AAEA,IAAMC,UAAU,GAAG,kaAAnB;AAEA,IAAMC,QAAQ,GAAG,qnCAAjB;AAEA,IAAMC,UAAU,GAAG,kuBAAnB;AAEA,IAAMC,WAAW,GAAG;AACnBzI,EAAAA,iBAAiB,EAAEA,iBADA;AAEnBC,EAAAA,sBAAsB,EAAEA,sBAFL;AAGnBC,EAAAA,kBAAkB,EAAEA,kBAHD;AAInBC,EAAAA,uBAAuB,EAAEA,uBAJN;AAKnBC,EAAAA,cAAc,EAAEA,cALG;AAMnBC,EAAAA,mBAAmB,EAAEA,mBANF;AAOnBC,EAAAA,YAAY,EAAEA,YAPK;AAQnBC,EAAAA,kBAAkB,EAAEA,kBARD;AASnBC,EAAAA,KAAK,EAAEA,KATY;AAUnBC,EAAAA,oBAAoB,EAAEA,oBAVH;AAWnBC,EAAAA,qBAAqB,EAAEA,qBAXJ;AAYnBC,EAAAA,wBAAwB,EAAEA,wBAZP;AAanBC,EAAAA,6BAA6B,EAAEA,6BAbZ;AAcnBC,EAAAA,2BAA2B,EAAEA,2BAdV;AAenBC,EAAAA,sBAAsB,EAAEA,sBAfL;AAgBnBC,EAAAA,cAAc,EAAEA,cAhBG;AAiBnBC,EAAAA,mBAAmB,EAAEA,mBAjBF;AAkBnBC,EAAAA,iBAAiB,EAAEA,iBAlBA;AAmBnBC,EAAAA,YAAY,EAAEA,YAnBK;AAoBnBC,EAAAA,MAAM,EAAEA,MApBW;AAqBnBC,EAAAA,2BAA2B,EAAEA,2BArBV;AAsBnBC,EAAAA,oBAAoB,EAAEA,oBAtBH;AAuBnBC,EAAAA,2BAA2B,EAAEA,2BAvBV;AAwBnBC,EAAAA,sBAAsB,EAAEA,sBAxBL;AAyBnBC,EAAAA,oBAAoB,EAAEA,oBAzBH;AA0BnBC,EAAAA,yBAAyB,EAAEA,yBA1BR;AA2BnBC,EAAAA,kBAAkB,EAAEA,kBA3BD;AA4BnBC,EAAAA,uBAAuB,EAAEA,uBA5BN;AA6BnBC,EAAAA,eAAe,EAAEA,eA7BE;AA8BnBC,EAAAA,2BAA2B,EAAEA,2BA9BV;AA+BnBC,EAAAA,oBAAoB,EAAEA,oBA/BH;AAgCnBC,EAAAA,kBAAkB,EAAEA,kBAhCD;AAiCnBW,EAAAA,6BAA6B,EAAEA,6BAjCZ;AAkCnBV,EAAAA,aAAa,EAAEA,aAlCI;AAmCnBC,EAAAA,UAAU,EAAEA,UAnCO;AAoCnBC,EAAAA,eAAe,EAAEA,eApCE;AAqCnBC,EAAAA,YAAY,EAAEA,YArCK;AAsCnBC,EAAAA,iBAAiB,EAAEA,iBAtCA;AAuCnBC,EAAAA,yBAAyB,EAAEA,yBAvCR;AAwCnBC,EAAAA,iBAAiB,EAAEA,iBAxCA;AAyCnBC,EAAAA,sBAAsB,EAAEA,sBAzCL;AA0CnBC,EAAAA,qBAAqB,EAAEA,qBA1CJ;AA2CnBC,EAAAA,iBAAiB,EAAEA,iBA3CA;AA4CnBE,EAAAA,oBAAoB,EAAEA,oBA5CH;AA6CnBC,EAAAA,yBAAyB,EAAEA,yBA7CR;AA8CnBC,EAAAA,qBAAqB,EAAEA,qBA9CJ;AA+CnBC,EAAAA,0BAA0B,EAAEA,0BA/CT;AAgDnBC,EAAAA,wBAAwB,EAAEA,wBAhDP;AAiDnBC,EAAAA,6BAA6B,EAAEA,6BAjDZ;AAkDnBC,EAAAA,qBAAqB,EAAEA,qBAlDJ;AAmDnBC,EAAAA,oBAAoB,EAAEA,oBAnDH;AAoDnBC,EAAAA,mBAAmB,EAAEA,mBApDF;AAqDnBC,EAAAA,oBAAoB,EAAEA,oBArDH;AAsDnBC,EAAAA,yBAAyB,EAAEA,yBAtDR;AAuDnBC,EAAAA,uBAAuB,EAAEA,uBAvDN;AAwDnBC,EAAAA,kBAAkB,EAAEA,kBAxDD;AAyDnBC,EAAAA,YAAY,EAAEA,YAzDK;AA0DnBC,EAAAA,iBAAiB,EAAEA,iBA1DA;AA2DnBC,EAAAA,qBAAqB,EAAEA,qBA3DJ;AA4DnBC,EAAAA,0BAA0B,EAAEA,0BA5DT;AA6DnBC,EAAAA,qBAAqB,EAAEA,qBA7DJ;AA8DnBC,EAAAA,0BAA0B,EAAEA,0BA9DT;AA+DnBC,EAAAA,iBAAiB,EAAEA,iBA/DA;AAgEnBC,EAAAA,kBAAkB,EAAEA,kBAhED;AAiEnBC,EAAAA,uBAAuB,EAAEA,uBAjEN;AAkEnBC,EAAAA,kBAAkB,EAAEA,kBAlED;AAmEnBC,EAAAA,qBAAqB,EAAEA,qBAnEJ;AAoEnBC,EAAAA,oBAAoB,EAAEA,oBApEH;AAqEnBC,EAAAA,oBAAoB,EAAEA,oBArEH;AAsEnBC,EAAAA,kBAAkB,EAAEA,kBAtED;AAuEnBC,EAAAA,aAAa,EAAEA,aAvEI;AAwEnBC,EAAAA,uBAAuB,EAAEA,uBAxEN;AAyEnBC,EAAAA,+BAA+B,EAAEA,+BAzEd;AA0EnBC,EAAAA,8BAA8B,EAAEA,8BA1Eb;AA2EnBC,EAAAA,uBAAuB,EAAEA,uBA3EN;AA4EnBC,EAAAA,yBAAyB,EAAEA,yBA5ER;AA6EnBC,EAAAA,eAAe,EAAEA,eA7EE;AA8EnBC,EAAAA,OAAO,EAAEA,OA9EU;AA+EnBC,EAAAA,4BAA4B,EAAEA,4BA/EX;AAgFnBC,EAAAA,cAAc,EAAEA,cAhFG;AAiFnBC,EAAAA,kBAAkB,EAAEA,kBAjFD;AAkFnBC,EAAAA,uBAAuB,EAAEA,uBAlFN;AAmFnBC,EAAAA,qBAAqB,EAAEA,qBAnFJ;AAoFnBC,EAAAA,0BAA0B,EAAEA,0BApFT;AAqFnBC,EAAAA,uBAAuB,EAAEA,uBArFN;AAsFnBC,EAAAA,qBAAqB,EAAEA,qBAtFJ;AAuFnBC,EAAAA,gBAAgB,EAAEA,gBAvFC;AAwFnBC,EAAAA,wBAAwB,EAAEA,wBAxFP;AAyFnBC,EAAAA,eAAe,EAAEA,eAzFE;AA0FnBC,EAAAA,oBAAoB,EAAEA,oBA1FH;AA2FnBC,EAAAA,eAAe,EAAEA,eA3FE;AA4FnBC,EAAAA,iBAAiB,EAAEA,iBA5FA;AA6FnBC,EAAAA,oBAAoB,EAAEA,oBA7FH;AA8FnBC,EAAAA,yBAAyB,EAAEA,yBA9FR;AA+FnBC,EAAAA,oBAAoB,EAAEA,oBA/FH;AAgGnBC,EAAAA,yBAAyB,EAAEA,yBAhGR;AAiGnBC,EAAAA,qBAAqB,EAAEA,qBAjGJ;AAkGnBC,EAAAA,0BAA0B,EAAEA,0BAlGT;AAmGnBC,EAAAA,gBAAgB,EAAEA,gBAnGC;AAoGnBC,EAAAA,cAAc,EAAEA,cApGG;AAqGnBC,EAAAA,SAAS,EAAEA,SArGQ;AAsGnBC,EAAAA,iBAAiB,EAAEA,iBAtGA;AAuGnBC,EAAAA,eAAe,EAAEA,eAvGE;AAwGnBC,EAAAA,UAAU,EAAEA,UAxGO;AAyGnBC,EAAAA,eAAe,EAAEA,eAzGE;AA2GnBkC,EAAAA,eAAe,EAAEjC,QA3GE;AA4GnBkC,EAAAA,eAAe,EAAEjC,UA5GE;AA6GnBkC,EAAAA,SAAS,EAAEjC,QA7GQ;AA8GnBkC,EAAAA,SAAS,EAAEjC,UA9GQ;AA+GnBkC,EAAAA,UAAU,EAAEjC,QA/GO;AAgHnBkC,EAAAA,UAAU,EAAEjC,UAhHO;AAiHnBkC,EAAAA,iBAAiB,EAAEjC,QAjHA;AAkHnBkC,EAAAA,iBAAiB,EAAEjC,UAlHA;AAmHnBkC,EAAAA,aAAa,EAAEjC,QAnHI;AAoHnBkC,EAAAA,aAAa,EAAEjC,UApHI;AAqHnBkC,EAAAA,eAAe,EAAEjC,QArHE;AAsHnBkC,EAAAA,eAAe,EAAEjC,UAtHE;AAuHnBkC,EAAAA,cAAc,EAAEjC,QAvHG;AAwHnBkC,EAAAA,cAAc,EAAEjC,UAxHG;AAyHnBkC,EAAAA,gBAAgB,EAAEjC,QAzHC;AA0HnBkC,EAAAA,gBAAgB,EAAEjC,UA1HC;AA2HnBkC,EAAAA,eAAe,EAAEjC,QA3HE;AA4HnBkC,EAAAA,eAAe,EAAEjC,UA5HE;AA6HnBkC,EAAAA,eAAe,EAAEjC,QA7HE;AA8HnBkC,EAAAA,eAAe,EAAEjC,UA9HE;AA+HnBkC,EAAAA,cAAc,EAAEjC,QA/HG;AAgInBkC,EAAAA,cAAc,EAAEjC,UAhIG;AAiInBkC,EAAAA,iBAAiB,EAAEjC,QAjIA;AAkInBkC,EAAAA,iBAAiB,EAAEjC,UAlIA;AAmInBkC,EAAAA,aAAa,EAAEjC,QAnII;AAoInBkC,EAAAA,aAAa,EAAEjC,UApII;AAqInBkC,EAAAA,WAAW,EAAEjC,QArIM;AAsInBkC,EAAAA,WAAW,EAAEjC,UAtIM;AAuInBkC,EAAAA,WAAW,EAAEjC,QAvIM;AAwInBkC,EAAAA,WAAW,EAAEjC,UAxIM;AAyInBkC,EAAAA,WAAW,EAAEjC,QAzIM;AA0InBkC,EAAAA,WAAW,EAAEjC;AA1IM,CAApB;AA6IA;AACA;AACA;;AAEA,IAAMkC,WAAW,GAAG;AAEnBvJ,EAAAA,MAAM,EAAE;AAEPwJ,IAAAA,OAAO,EAAE;AAAE/4C,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,KAFF;AAGPkmB,IAAAA,OAAO,EAAE;AAAEjzB,MAAAA,KAAK,EAAE;AAAT,KAHF;AAKP42B,IAAAA,GAAG,EAAE;AAAE52B,MAAAA,KAAK,EAAE;AAAT,KALE;AAMPg5C,IAAAA,WAAW,EAAE;AAAEh5C,MAAAA,KAAK,EAAE,aAAc,IAAI6G,OAAJ;AAAvB,KANN;AAOPoyC,IAAAA,YAAY,EAAE;AAAEj5C,MAAAA,KAAK,EAAE,aAAc,IAAI6G,OAAJ;AAAvB,KAPP;AASPiwB,IAAAA,QAAQ,EAAE;AAAE92B,MAAAA,KAAK,EAAE;AAAT,KATH;AAUPi5B,IAAAA,SAAS,EAAE;AAAEj5B,MAAAA,KAAK,EAAE;AAAT;AAVJ,GAFW;AAgBnBk5C,EAAAA,WAAW,EAAE;AAEZphB,IAAAA,WAAW,EAAE;AAAE93B,MAAAA,KAAK,EAAE;AAAT;AAFD,GAhBM;AAsBnBm5C,EAAAA,MAAM,EAAE;AAEPlhB,IAAAA,MAAM,EAAE;AAAEj4B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGPo5C,IAAAA,UAAU,EAAE;AAAEp5C,MAAAA,KAAK,EAAE,CAAE;AAAX,KAHL;AAIPo4B,IAAAA,YAAY,EAAE;AAAEp4B,MAAAA,KAAK,EAAE;AAAT,KAJP;AAIuB;AAC9Bq5C,IAAAA,GAAG,EAAE;AAAEr5C,MAAAA,KAAK,EAAE;AAAT,KALE;AAKc;AACrBq4B,IAAAA,eAAe,EAAE;AAAEr4B,MAAAA,KAAK,EAAE;AAAT,KANV,CAM0B;;AAN1B,GAtBW;AAgCnBs5C,EAAAA,KAAK,EAAE;AAENriB,IAAAA,KAAK,EAAE;AAAEj3B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGNk3B,IAAAA,cAAc,EAAE;AAAEl3B,MAAAA,KAAK,EAAE;AAAT;AAHV,GAhCY;AAuCnBu5C,EAAAA,QAAQ,EAAE;AAETxiB,IAAAA,QAAQ,EAAE;AAAE/2B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGTg3B,IAAAA,iBAAiB,EAAE;AAAEh3B,MAAAA,KAAK,EAAE;AAAT;AAHV,GAvCS;AA8CnBw5C,EAAAA,WAAW,EAAE;AAEZ3hB,IAAAA,WAAW,EAAE;AAAE73B,MAAAA,KAAK,EAAE;AAAT;AAFD,GA9CM;AAoDnBy5C,EAAAA,OAAO,EAAE;AAERtiB,IAAAA,OAAO,EAAE;AAAEn3B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGRo3B,IAAAA,SAAS,EAAE;AAAEp3B,MAAAA,KAAK,EAAE;AAAT;AAHH,GApDU;AA2DnB05C,EAAAA,SAAS,EAAE;AAEVriB,IAAAA,SAAS,EAAE;AAAEr3B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGVu3B,IAAAA,WAAW,EAAE;AAAEv3B,MAAAA,KAAK,EAAE,aAAc,IAAI+E,OAAJ,CAAa,CAAb,EAAgB,CAAhB;AAAvB;AAHH,GA3DQ;AAkEnB40C,EAAAA,eAAe,EAAE;AAEhBniB,IAAAA,eAAe,EAAE;AAAEx3B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGhBy3B,IAAAA,iBAAiB,EAAE;AAAEz3B,MAAAA,KAAK,EAAE;AAAT,KAHH;AAIhB03B,IAAAA,gBAAgB,EAAE;AAAE13B,MAAAA,KAAK,EAAE;AAAT;AAJF,GAlEE;AA0EnB45C,EAAAA,YAAY,EAAE;AAEbjiB,IAAAA,YAAY,EAAE;AAAE33B,MAAAA,KAAK,EAAE;AAAT;AAFD,GA1EK;AAgFnB65C,EAAAA,YAAY,EAAE;AAEbjiB,IAAAA,YAAY,EAAE;AAAE53B,MAAAA,KAAK,EAAE;AAAT;AAFD,GAhFK;AAsFnB85C,EAAAA,WAAW,EAAE;AAEZxhB,IAAAA,WAAW,EAAE;AAAEt4B,MAAAA,KAAK,EAAE;AAAT;AAFD,GAtFM;AA4FnBs5B,EAAAA,GAAG,EAAE;AAEJygB,IAAAA,UAAU,EAAE;AAAE/5C,MAAAA,KAAK,EAAE;AAAT,KAFR;AAGJg6C,IAAAA,OAAO,EAAE;AAAEh6C,MAAAA,KAAK,EAAE;AAAT,KAHL;AAIJi6C,IAAAA,MAAM,EAAE;AAAEj6C,MAAAA,KAAK,EAAE;AAAT,KAJJ;AAKJk6C,IAAAA,QAAQ,EAAE;AAAEl6C,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB;AALN,GA5Fc;AAqGnBw4B,EAAAA,MAAM,EAAE;AAEP4U,IAAAA,iBAAiB,EAAE;AAAEn6C,MAAAA,KAAK,EAAE;AAAT,KAFZ;AAIPo6C,IAAAA,UAAU,EAAE;AAAEp6C,MAAAA,KAAK,EAAE;AAAT,KAJL;AAMPq6C,IAAAA,iBAAiB,EAAE;AAAEr6C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AAC3Cn3B,QAAAA,SAAS,EAAE,EADgC;AAE3ClX,QAAAA,KAAK,EAAE;AAFoC;AAAzB,KANZ;AAWPsuC,IAAAA,uBAAuB,EAAE;AAAEv6C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AACjDE,QAAAA,UAAU,EAAE,EADqC;AAEjDC,QAAAA,gBAAgB,EAAE,EAF+B;AAGjDC,QAAAA,YAAY,EAAE,EAHmC;AAIjDC,QAAAA,aAAa,EAAE;AAJkC;AAAzB,KAXlB;AAkBPC,IAAAA,oBAAoB,EAAE;AAAE56C,MAAAA,KAAK,EAAE;AAAT,KAlBf;AAmBP66C,IAAAA,uBAAuB,EAAE;AAAE76C,MAAAA,KAAK,EAAE;AAAT,KAnBlB;AAqBP86C,IAAAA,UAAU,EAAE;AAAE96C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AACpCruC,QAAAA,KAAK,EAAE,EAD6B;AAEpCsT,QAAAA,QAAQ,EAAE,EAF0B;AAGpC4D,QAAAA,SAAS,EAAE,EAHyB;AAIpC8J,QAAAA,QAAQ,EAAE,EAJ0B;AAKpC8tB,QAAAA,OAAO,EAAE,EAL2B;AAMpCC,QAAAA,WAAW,EAAE,EANuB;AAOpCC,QAAAA,KAAK,EAAE;AAP6B;AAAzB,KArBL;AA+BPC,IAAAA,gBAAgB,EAAE;AAAEl7C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AAC1CE,QAAAA,UAAU,EAAE,EAD8B;AAE1CC,QAAAA,gBAAgB,EAAE,EAFwB;AAG1CC,QAAAA,YAAY,EAAE,EAH4B;AAI1CC,QAAAA,aAAa,EAAE;AAJ2B;AAAzB,KA/BX;AAsCPQ,IAAAA,aAAa,EAAE;AAAEn7C,MAAAA,KAAK,EAAE;AAAT,KAtCR;AAuCPo7C,IAAAA,gBAAgB,EAAE;AAAEp7C,MAAAA,KAAK,EAAE;AAAT,KAvCX;AAyCPq7C,IAAAA,WAAW,EAAE;AAAEr7C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AACrCruC,QAAAA,KAAK,EAAE,EAD8B;AAErCsT,QAAAA,QAAQ,EAAE,EAF2B;AAGrC07B,QAAAA,KAAK,EAAE,EAH8B;AAIrChuB,QAAAA,QAAQ,EAAE;AAJ2B;AAAzB,KAzCN;AAgDPquB,IAAAA,iBAAiB,EAAE;AAAEt7C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AAC3CE,QAAAA,UAAU,EAAE,EAD+B;AAE3CC,QAAAA,gBAAgB,EAAE,EAFyB;AAG3CC,QAAAA,YAAY,EAAE,EAH6B;AAI3CC,QAAAA,aAAa,EAAE,EAJ4B;AAK3CY,QAAAA,gBAAgB,EAAE,EALyB;AAM3CC,QAAAA,eAAe,EAAE;AAN0B;AAAzB,KAhDZ;AAyDPC,IAAAA,cAAc,EAAE;AAAEz7C,MAAAA,KAAK,EAAE;AAAT,KAzDT;AA0DP07C,IAAAA,iBAAiB,EAAE;AAAE17C,MAAAA,KAAK,EAAE;AAAT,KA1DZ;AA4DP27C,IAAAA,gBAAgB,EAAE;AAAE37C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AAC1Cn3B,QAAAA,SAAS,EAAE,EAD+B;AAE1Cy4B,QAAAA,QAAQ,EAAE,EAFgC;AAG1CC,QAAAA,WAAW,EAAE;AAH6B;AAAzB,KA5DX;AAkEP;AACAC,IAAAA,cAAc,EAAE;AAAE97C,MAAAA,KAAK,EAAE,EAAT;AAAas6C,MAAAA,UAAU,EAAE;AACxCruC,QAAAA,KAAK,EAAE,EADiC;AAExCsT,QAAAA,QAAQ,EAAE,EAF8B;AAGxCjQ,QAAAA,KAAK,EAAE,EAHiC;AAIxCC,QAAAA,MAAM,EAAE;AAJgC;AAAzB,KAnET;AA0EPwsC,IAAAA,KAAK,EAAE;AAAE/7C,MAAAA,KAAK,EAAE;AAAT,KA1EA;AA2EPg8C,IAAAA,KAAK,EAAE;AAAEh8C,MAAAA,KAAK,EAAE;AAAT;AA3EA,GArGW;AAoLnBse,EAAAA,MAAM,EAAE;AAEPy6B,IAAAA,OAAO,EAAE;AAAE/4C,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,KAFF;AAGPkmB,IAAAA,OAAO,EAAE;AAAEjzB,MAAAA,KAAK,EAAE;AAAT,KAHF;AAIP8N,IAAAA,IAAI,EAAE;AAAE9N,MAAAA,KAAK,EAAE;AAAT,KAJC;AAKP2oB,IAAAA,KAAK,EAAE;AAAE3oB,MAAAA,KAAK,EAAE;AAAT,KALA;AAMP42B,IAAAA,GAAG,EAAE;AAAE52B,MAAAA,KAAK,EAAE;AAAT,KANE;AAOP82B,IAAAA,QAAQ,EAAE;AAAE92B,MAAAA,KAAK,EAAE;AAAT,KAPH;AAQPi5B,IAAAA,SAAS,EAAE;AAAEj5B,MAAAA,KAAK,EAAE;AAAT,KARJ;AASPg5C,IAAAA,WAAW,EAAE;AAAEh5C,MAAAA,KAAK,EAAE,aAAc,IAAI6G,OAAJ;AAAvB;AATN,GApLW;AAiMnBglC,EAAAA,MAAM,EAAE;AAEPkN,IAAAA,OAAO,EAAE;AAAE/4C,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,KAFF;AAGPkmB,IAAAA,OAAO,EAAE;AAAEjzB,MAAAA,KAAK,EAAE;AAAT,KAHF;AAIP0G,IAAAA,MAAM,EAAE;AAAE1G,MAAAA,KAAK,EAAE,aAAc,IAAI+E,OAAJ,CAAa,GAAb,EAAkB,GAAlB;AAAvB,KAJD;AAKPyF,IAAAA,QAAQ,EAAE;AAAExK,MAAAA,KAAK,EAAE;AAAT,KALH;AAMP42B,IAAAA,GAAG,EAAE;AAAE52B,MAAAA,KAAK,EAAE;AAAT,KANE;AAOP82B,IAAAA,QAAQ,EAAE;AAAE92B,MAAAA,KAAK,EAAE;AAAT,KAPH;AAQPi5B,IAAAA,SAAS,EAAE;AAAEj5B,MAAAA,KAAK,EAAE;AAAT,KARJ;AASPg5C,IAAAA,WAAW,EAAE;AAAEh5C,MAAAA,KAAK,EAAE,aAAc,IAAI6G,OAAJ;AAAvB;AATN;AAjMW,CAApB;AAgNA,IAAMo1C,SAAS,GAAG;AAEjBC,EAAAA,KAAK,EAAE;AAENtX,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACI,WAF0B,EAGtCJ,WAAW,CAACK,MAH0B,EAItCL,WAAW,CAACQ,KAJ0B,EAKtCR,WAAW,CAACS,QAL0B,EAMtCT,WAAW,CAACxf,GAN0B,CAAF,CAF/B;AAWN+L,IAAAA,YAAY,EAAEwR,WAAW,CAACa,cAXpB;AAYNpS,IAAAA,cAAc,EAAEuR,WAAW,CAACc;AAZtB,GAFU;AAkBjBwE,EAAAA,OAAO,EAAE;AAERvX,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACI,WAF0B,EAGtCJ,WAAW,CAACK,MAH0B,EAItCL,WAAW,CAACQ,KAJ0B,EAKtCR,WAAW,CAACS,QAL0B,EAMtCT,WAAW,CAACU,WAN0B,EAOtCV,WAAW,CAACxf,GAP0B,EAQtCwf,WAAW,CAACvT,MAR0B,EAStC;AACC5P,MAAAA,QAAQ,EAAE;AAAE31B,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB;AADX,KATsC,CAAF,CAF7B;AAgBRs4B,IAAAA,YAAY,EAAEwR,WAAW,CAACe,gBAhBlB;AAiBRtS,IAAAA,cAAc,EAAEuR,WAAW,CAACgB;AAjBpB,GAlBQ;AAuCjBuE,EAAAA,KAAK,EAAE;AAENxX,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACI,WAF0B,EAGtCJ,WAAW,CAACK,MAH0B,EAItCL,WAAW,CAACQ,KAJ0B,EAKtCR,WAAW,CAACS,QAL0B,EAMtCT,WAAW,CAACU,WAN0B,EAOtCV,WAAW,CAACW,OAP0B,EAQtCX,WAAW,CAACY,SAR0B,EAStCZ,WAAW,CAACa,eAT0B,EAUtCb,WAAW,CAACxf,GAV0B,EAWtCwf,WAAW,CAACvT,MAX0B,EAYtC;AACC5P,MAAAA,QAAQ,EAAE;AAAE31B,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,OADX;AAEC8oB,MAAAA,QAAQ,EAAE;AAAE71B,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,OAFX;AAGCipB,MAAAA,SAAS,EAAE;AAAEh2B,QAAAA,KAAK,EAAE;AAAT;AAHZ,KAZsC,CAAF,CAF/B;AAqBNqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACqB,cArBpB;AAsBN5S,IAAAA,cAAc,EAAEuR,WAAW,CAACsB;AAtBtB,GAvCU;AAiEjBkE,EAAAA,QAAQ,EAAE;AAETzX,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACK,MAF0B,EAGtCL,WAAW,CAACQ,KAH0B,EAItCR,WAAW,CAACS,QAJ0B,EAKtCT,WAAW,CAACU,WAL0B,EAMtCV,WAAW,CAACW,OAN0B,EAOtCX,WAAW,CAACY,SAP0B,EAQtCZ,WAAW,CAACa,eAR0B,EAStCb,WAAW,CAACc,YAT0B,EAUtCd,WAAW,CAACe,YAV0B,EAWtCf,WAAW,CAACxf,GAX0B,EAYtCwf,WAAW,CAACvT,MAZ0B,EAatC;AACC5P,MAAAA,QAAQ,EAAE;AAAE31B,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,OADX;AAECuoB,MAAAA,SAAS,EAAE;AAAEt1B,QAAAA,KAAK,EAAE;AAAT,OAFZ;AAGCu1B,MAAAA,SAAS,EAAE;AAAEv1B,QAAAA,KAAK,EAAE;AAAT,OAHZ;AAICm4B,MAAAA,eAAe,EAAE;AAAEn4B,QAAAA,KAAK,EAAE;AAAT,OAJlB,CAI+B;;AAJ/B,KAbsC,CAAF,CAF5B;AAuBTqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACuB,iBAvBjB;AAwBT9S,IAAAA,cAAc,EAAEuR,WAAW,CAACwB;AAxBnB,GAjEO;AA6FjBiE,EAAAA,IAAI,EAAE;AAEL1X,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACQ,KAF0B,EAGtCR,WAAW,CAACS,QAH0B,EAItCT,WAAW,CAACU,WAJ0B,EAKtCV,WAAW,CAACW,OAL0B,EAMtCX,WAAW,CAACY,SAN0B,EAOtCZ,WAAW,CAACa,eAP0B,EAQtCb,WAAW,CAACgB,WAR0B,EAStChB,WAAW,CAACxf,GAT0B,EAUtCwf,WAAW,CAACvT,MAV0B,EAWtC;AACC5P,MAAAA,QAAQ,EAAE;AAAE31B,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB;AADX,KAXsC,CAAF,CAFhC;AAkBLs4B,IAAAA,YAAY,EAAEwR,WAAW,CAACyB,aAlBrB;AAmBLhT,IAAAA,cAAc,EAAEuR,WAAW,CAAC0B;AAnBvB,GA7FW;AAoHjB1hB,EAAAA,MAAM,EAAE;AAEP+N,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACW,OAF0B,EAGtCX,WAAW,CAACY,SAH0B,EAItCZ,WAAW,CAACa,eAJ0B,EAKtCb,WAAW,CAACxf,GAL0B,EAMtC;AACCzC,MAAAA,MAAM,EAAE;AAAE72B,QAAAA,KAAK,EAAE;AAAT;AADT,KANsC,CAAF,CAF9B;AAaPqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACiB,eAbnB;AAcPxS,IAAAA,cAAc,EAAEuR,WAAW,CAACkB;AAdrB,GApHS;AAsIjBz5B,EAAAA,MAAM,EAAE;AAEPsmB,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACx6B,MAD0B,EAEtCw6B,WAAW,CAACxf,GAF0B,CAAF,CAF9B;AAOP+L,IAAAA,YAAY,EAAEwR,WAAW,CAAC2B,WAPnB;AAQPlT,IAAAA,cAAc,EAAEuR,WAAW,CAAC4B;AARrB,GAtIS;AAkJjB8D,EAAAA,MAAM,EAAE;AAEP3X,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACxf,GAF0B,EAGtC;AACC3Q,MAAAA,KAAK,EAAE;AAAE3oB,QAAAA,KAAK,EAAE;AAAT,OADR;AAEC+4B,MAAAA,QAAQ,EAAE;AAAE/4B,QAAAA,KAAK,EAAE;AAAT,OAFX;AAGCw8C,MAAAA,SAAS,EAAE;AAAEx8C,QAAAA,KAAK,EAAE;AAAT;AAHZ,KAHsC,CAAF,CAF9B;AAYPqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACW,eAZnB;AAaPlS,IAAAA,cAAc,EAAEuR,WAAW,CAACY;AAbrB,GAlJS;AAmKjBxiC,EAAAA,KAAK,EAAE;AAEN2vB,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACa,eAF0B,CAAF,CAF/B;AAONtU,IAAAA,YAAY,EAAEwR,WAAW,CAACK,UAPpB;AAQN5R,IAAAA,cAAc,EAAEuR,WAAW,CAACM;AARtB,GAnKU;AA+KjBh6B,EAAAA,MAAM,EAAE;AAEPynB,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACW,OAF0B,EAGtCX,WAAW,CAACY,SAH0B,EAItCZ,WAAW,CAACa,eAJ0B,EAKtC;AACC1mB,MAAAA,OAAO,EAAE;AAAEjzB,QAAAA,KAAK,EAAE;AAAT;AADV,KALsC,CAAF,CAF9B;AAYPqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACmB,eAZnB;AAaP1S,IAAAA,cAAc,EAAEuR,WAAW,CAACoB;AAbrB,GA/KS;AAgMjBpM,EAAAA,MAAM,EAAE;AAEPjH,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACjN,MAD0B,EAEtCiN,WAAW,CAACxf,GAF0B,CAAF,CAF9B;AAOP+L,IAAAA,YAAY,EAAEwR,WAAW,CAAC+B,WAPnB;AAQPtT,IAAAA,cAAc,EAAEuR,WAAW,CAACgC;AARrB,GAhMS;AA4MjB7pB,EAAAA,UAAU,EAAE;AAEX4V,IAAAA,QAAQ,EAAE;AACToU,MAAAA,WAAW,EAAE;AAAEh5C,QAAAA,KAAK,EAAE,aAAc,IAAI6G,OAAJ;AAAvB,OADJ;AAET41C,MAAAA,GAAG,EAAE;AAAEz8C,QAAAA,KAAK,EAAE;AAAT;AAFI,KAFC;AAOXqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACC,eAPf;AAQXxR,IAAAA,cAAc,EAAEuR,WAAW,CAACE;AARjB,GA5MK;AAwNjB2F,EAAAA,IAAI,EAAE;AAEL9X,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACK,MAD0B,EAEtC;AACClmB,MAAAA,OAAO,EAAE;AAAEjzB,QAAAA,KAAK,EAAE;AAAT;AADV,KAFsC,CAAF,CAFhC;AASLqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACG,SATrB;AAUL1R,IAAAA,cAAc,EAAEuR,WAAW,CAACI;AAVvB,GAxNW;AAsOjB0F,EAAAA,QAAQ,EAAE;AAET/X,IAAAA,QAAQ,EAAE;AACTsE,MAAAA,SAAS,EAAE;AAAElpC,QAAAA,KAAK,EAAE;AAAT;AADF,KAFD;AAMTqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACS,aANjB;AAOThS,IAAAA,cAAc,EAAEuR,WAAW,CAACU;AAPnB,GAtOO;AAiPjBqF,EAAAA,YAAY,EAAE;AAEbhY,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvJ,MAD0B,EAEtCuJ,WAAW,CAACa,eAF0B,EAGtC;AACCkD,MAAAA,iBAAiB,EAAE;AAAE78C,QAAAA,KAAK,EAAE,aAAc,IAAIib,OAAJ;AAAvB,OADpB;AAEC6hC,MAAAA,YAAY,EAAE;AAAE98C,QAAAA,KAAK,EAAE;AAAT,OAFf;AAGC+8C,MAAAA,WAAW,EAAE;AAAE/8C,QAAAA,KAAK,EAAE;AAAT;AAHd,KAHsC,CAAF,CAFxB;AAYbqlC,IAAAA,YAAY,EAAEwR,WAAW,CAACO,iBAZb;AAab9R,IAAAA,cAAc,EAAEuR,WAAW,CAACQ;AAbf,GAjPG;AAkQjB2F,EAAAA,MAAM,EAAE;AAEPpY,IAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCmU,WAAW,CAACvT,MAD0B,EAEtCuT,WAAW,CAACxf,GAF0B,EAGtC;AACCrtB,MAAAA,KAAK,EAAE;AAAEjM,QAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,OAAX;AAAvB,OADR;AAECkmB,MAAAA,OAAO,EAAE;AAAEjzB,QAAAA,KAAK,EAAE;AAAT;AAFV,KAHsC,CAAF,CAF9B;AAWPqlC,IAAAA,YAAY,EAAEwR,WAAW,CAAC6B,WAXnB;AAYPpT,IAAAA,cAAc,EAAEuR,WAAW,CAAC8B;AAZrB;AAlQS,CAAlB;AAoRAsD,SAAS,CAACgB,QAAV,GAAqB;AAEpBrY,EAAAA,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCsX,SAAS,CAACI,QAAV,CAAmBzX,QADmB,EAEtC;AACC3O,IAAAA,SAAS,EAAE;AAAEj2B,MAAAA,KAAK,EAAE;AAAT,KADZ;AAECm2B,IAAAA,YAAY,EAAE;AAAEn2B,MAAAA,KAAK,EAAE;AAAT,KAFf;AAGCk2B,IAAAA,kBAAkB,EAAE;AAAEl2B,MAAAA,KAAK,EAAE;AAAT,KAHrB;AAICo2B,IAAAA,qBAAqB,EAAE;AAAEp2B,MAAAA,KAAK,EAAE;AAAT,KAJxB;AAKCs2B,IAAAA,oBAAoB,EAAE;AAAEt2B,MAAAA,KAAK,EAAE,aAAc,IAAI+E,OAAJ,CAAa,CAAb,EAAgB,CAAhB;AAAvB,KALvB;AAMCsxB,IAAAA,kBAAkB,EAAE;AAAEr2B,MAAAA,KAAK,EAAE;AAAT,KANrB;AAOCu2B,IAAAA,WAAW,EAAE;AAAEv2B,MAAAA,KAAK,EAAE;AAAT,KAPd;AAQC02B,IAAAA,cAAc,EAAE;AAAE12B,MAAAA,KAAK,EAAE;AAAT,KARjB;AASCw2B,IAAAA,cAAc,EAAE;AAAEx2B,MAAAA,KAAK,EAAE;AAAT,KATjB;AAUCk9C,IAAAA,2BAA2B,EAAE;AAAEl9C,MAAAA,KAAK,EAAE;AAAT,KAV9B;AAWCm9C,IAAAA,2BAA2B,EAAE;AAAEn9C,MAAAA,KAAK,EAAE;AAAT,KAX9B;AAYC22B,IAAAA,uBAAuB,EAAE;AAAE32B,MAAAA,KAAK,EAAE;AAAT,KAZ1B;AAaCw1B,IAAAA,KAAK,EAAE;AAAEx1B,MAAAA,KAAK,EAAE;AAAT,KAbR;AAcCy1B,IAAAA,UAAU,EAAE;AAAEz1B,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,KAdb;AAeCqwC,IAAAA,aAAa,EAAE;AAAEp9C,MAAAA,KAAK,EAAE;AAAT,KAfhB;AAgBC01B,IAAAA,cAAc,EAAE;AAAE11B,MAAAA,KAAK,EAAE;AAAT,KAhBjB;AAiBCq9C,IAAAA,iBAAiB,EAAE;AAAEr9C,MAAAA,KAAK,EAAE;AAAT,KAjBpB;AAkBCu4B,IAAAA,YAAY,EAAE;AAAEv4B,MAAAA,KAAK,EAAE;AAAT,KAlBf;AAmBCw4B,IAAAA,eAAe,EAAE;AAAEx4B,MAAAA,KAAK,EAAE;AAAT,KAnBlB;AAoBCs9C,IAAAA,uBAAuB,EAAE;AAAEt9C,MAAAA,KAAK,EAAE,aAAc,IAAI+E,OAAJ;AAAvB,KApB1B;AAqBCw4C,IAAAA,sBAAsB,EAAE;AAAEv9C,MAAAA,KAAK,EAAE;AAAT,KArBzB;AAsBCy4B,IAAAA,SAAS,EAAE;AAAEz4B,MAAAA,KAAK,EAAE;AAAT,KAtBZ;AAuBC04B,IAAAA,YAAY,EAAE;AAAE14B,MAAAA,KAAK,EAAE;AAAT,KAvBf;AAwBC24B,IAAAA,mBAAmB,EAAE;AAAE34B,MAAAA,KAAK,EAAE;AAAT,KAxBtB;AAyBC44B,IAAAA,gBAAgB,EAAE;AAAE54B,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,QAAX;AAAvB,KAzBnB;AA0BC+oB,IAAAA,iBAAiB,EAAE;AAAE91B,MAAAA,KAAK,EAAE;AAAT,KA1BpB;AA2BC+3B,IAAAA,oBAAoB,EAAE;AAAE/3B,MAAAA,KAAK,EAAE;AAAT,KA3BvB;AA4BC+1B,IAAAA,aAAa,EAAE;AAAE/1B,MAAAA,KAAK,EAAE,aAAc,IAAI+M,KAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB;AAAvB,KA5BhB;AA6BCirB,IAAAA,gBAAgB,EAAE;AAAEh4B,MAAAA,KAAK,EAAE;AAAT;AA7BnB,GAFsC,CAAF,CAFjB;AAqCpBqlC,EAAAA,YAAY,EAAEwR,WAAW,CAACuB,iBArCN;AAsCpB9S,EAAAA,cAAc,EAAEuR,WAAW,CAACwB;AAtCR,CAArB;;AA0CA,SAASmF,eAAT,CAA0BpV,QAA1B,EAAoCqV,QAApC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8Dx3C,KAA9D,EAAqE4uB,kBAArE,EAA0F;AAEzF,MAAM6oB,UAAU,GAAG,IAAI7wC,KAAJ,CAAW,QAAX,CAAnB;AACA,MAAI8wC,UAAU,GAAG13C,KAAK,KAAK,IAAV,GAAiB,CAAjB,GAAqB,CAAtC;AAEA,MAAI23C,SAAJ;AACA,MAAIC,OAAJ;AAEA,MAAIC,iBAAiB,GAAG,IAAxB;AACA,MAAIC,wBAAwB,GAAG,CAA/B;AACA,MAAIC,kBAAkB,GAAG,IAAzB;;AAEA,WAASrV,MAAT,CAAiBsV,UAAjB,EAA6B9V,KAA7B,EAAqC;AAEpC,QAAI+V,UAAU,GAAG,KAAjB;AACA,QAAIpvB,UAAU,GAAGqZ,KAAK,CAACtZ,OAAN,KAAkB,IAAlB,GAAyBsZ,KAAK,CAACrZ,UAA/B,GAA4C,IAA7D;;AAEA,QAAKA,UAAU,IAAIA,UAAU,CAACnd,SAA9B,EAA0C;AAEzCmd,MAAAA,UAAU,GAAGyuB,QAAQ,CAAC/P,GAAT,CAAc1e,UAAd,CAAb;AAEA,KATmC,CAWpC;AACA;;;AAEA,QAAM2Z,EAAE,GAAGP,QAAQ,CAACO,EAApB;AACA,QAAM0V,OAAO,GAAG1V,EAAE,CAAC2V,UAAH,IAAiB3V,EAAE,CAAC2V,UAAH,EAAjC;;AAEA,QAAKD,OAAO,IAAIA,OAAO,CAACE,oBAAR,KAAiC,UAAjD,EAA8D;AAE7DvvB,MAAAA,UAAU,GAAG,IAAb;AAEA;;AAED,QAAKA,UAAU,KAAK,IAApB,EAA2B;AAE1BwvB,MAAAA,QAAQ,CAAEZ,UAAF,EAAcC,UAAd,CAAR;AAEA,KAJD,MAIO,IAAK7uB,UAAU,IAAIA,UAAU,CAAChiB,OAA9B,EAAwC;AAE9CwxC,MAAAA,QAAQ,CAAExvB,UAAF,EAAc,CAAd,CAAR;AACAovB,MAAAA,UAAU,GAAG,IAAb;AAEA;;AAED,QAAKhW,QAAQ,CAACqW,SAAT,IAAsBL,UAA3B,EAAwC;AAEvChW,MAAAA,QAAQ,CAACkB,KAAT,CAAgBlB,QAAQ,CAACsW,cAAzB,EAAyCtW,QAAQ,CAACuW,cAAlD,EAAkEvW,QAAQ,CAACwW,gBAA3E;AAEA;;AAED,QAAK5vB,UAAU,KAAMA,UAAU,CAAC+Z,aAAX,IAA4B/Z,UAAU,CAAC5d,OAAX,KAAuBxa,uBAAzD,CAAf,EAAoG;AAEnG,UAAKmnD,OAAO,KAAK7/C,SAAjB,EAA6B;AAE5B6/C,QAAAA,OAAO,GAAG,IAAIlc,IAAJ,CACT,IAAIsB,WAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADS,EAET,IAAI+B,cAAJ,CAAoB;AACnB35B,UAAAA,IAAI,EAAE,wBADa;AAEnBq5B,UAAAA,QAAQ,EAAEH,aAAa,CAAEwX,SAAS,CAACS,IAAV,CAAe9X,QAAjB,CAFJ;AAGnBS,UAAAA,YAAY,EAAE4W,SAAS,CAACS,IAAV,CAAerX,YAHV;AAInBC,UAAAA,cAAc,EAAE2W,SAAS,CAACS,IAAV,CAAepX,cAJZ;AAKnBvS,UAAAA,IAAI,EAAEn/B,QALa;AAMnB8/B,UAAAA,SAAS,EAAE,KANQ;AAOnBC,UAAAA,UAAU,EAAE,KAPO;AAQnB2F,UAAAA,GAAG,EAAE;AARc,SAApB,CAFS,CAAV;AAcAykB,QAAAA,OAAO,CAAC1+B,QAAR,CAAiBw/B,eAAjB,CAAkC,QAAlC;AACAd,QAAAA,OAAO,CAAC1+B,QAAR,CAAiBw/B,eAAjB,CAAkC,IAAlC;;AAEAd,QAAAA,OAAO,CAACe,cAAR,GAAyB,UAAW1W,QAAX,EAAqBC,KAArB,EAA4BrsB,MAA5B,EAAqC;AAE7D,eAAKK,WAAL,CAAiB0iC,YAAjB,CAA+B/iC,MAAM,CAACK,WAAtC;AAEA,SAJD,CAnB4B,CAyB5B;;;AACA1X,QAAAA,MAAM,CAACmN,cAAP,CAAuBisC,OAAO,CAACpuB,QAA/B,EAAyC,QAAzC,EAAmD;AAElD+d,UAAAA,GAAG,EAAE,eAAY;AAEhB,mBAAO,KAAK9I,QAAL,CAAc3M,MAAd,CAAqBj4B,KAA5B;AAEA;AANiD,SAAnD;AAUA29C,QAAAA,OAAO,CAACxmC,MAAR,CAAgB4mC,OAAhB;AAEA;;AAEDA,MAAAA,OAAO,CAACpuB,QAAR,CAAiBiV,QAAjB,CAA0B3M,MAA1B,CAAiCj4B,KAAjC,GAAyCgvB,UAAzC;AACA+uB,MAAAA,OAAO,CAACpuB,QAAR,CAAiBiV,QAAjB,CAA0BwU,UAA1B,CAAqCp5C,KAArC,GAA+CgvB,UAAU,CAAC+Z,aAAX,IAA4B/Z,UAAU,CAACvc,qBAAX,KAAqC,KAAnE,GAA6E,CAAE,CAA/E,GAAmF,CAAhI;;AAEA,UAAKurC,iBAAiB,KAAKhvB,UAAtB,IACJivB,wBAAwB,KAAKjvB,UAAU,CAAC3e,OADpC,IAEJ6tC,kBAAkB,KAAK9V,QAAQ,CAACK,WAFjC,EAE+C;AAE9CsV,QAAAA,OAAO,CAACpuB,QAAR,CAAiB5c,WAAjB,GAA+B,IAA/B;AAEAirC,QAAAA,iBAAiB,GAAGhvB,UAApB;AACAivB,QAAAA,wBAAwB,GAAGjvB,UAAU,CAAC3e,OAAtC;AACA6tC,QAAAA,kBAAkB,GAAG9V,QAAQ,CAACK,WAA9B;AAEA;;AAEDsV,MAAAA,OAAO,CAACrzB,MAAR,CAAes0B,SAAf,GAzDmG,CA2DnG;;AACAb,MAAAA,UAAU,CAACc,OAAX,CAAoBlB,OAApB,EAA6BA,OAAO,CAAC1+B,QAArC,EAA+C0+B,OAAO,CAACpuB,QAAvD,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,IAAvE;AAEA,KA9DD,MA8DO,IAAKX,UAAU,IAAIA,UAAU,CAACnd,SAA9B,EAA0C;AAEhD,UAAKisC,SAAS,KAAK5/C,SAAnB,EAA+B;AAE9B4/C,QAAAA,SAAS,GAAG,IAAIjc,IAAJ,CACX,IAAIkM,aAAJ,CAAmB,CAAnB,EAAsB,CAAtB,CADW,EAEX,IAAI7I,cAAJ,CAAoB;AACnB35B,UAAAA,IAAI,EAAE,oBADa;AAEnBq5B,UAAAA,QAAQ,EAAEH,aAAa,CAAEwX,SAAS,CAACjtB,UAAV,CAAqB4V,QAAvB,CAFJ;AAGnBS,UAAAA,YAAY,EAAE4W,SAAS,CAACjtB,UAAV,CAAqBqW,YAHhB;AAInBC,UAAAA,cAAc,EAAE2W,SAAS,CAACjtB,UAAV,CAAqBsW,cAJlB;AAKnBvS,UAAAA,IAAI,EAAEp/B,SALa;AAMnB+/B,UAAAA,SAAS,EAAE,KANQ;AAOnBC,UAAAA,UAAU,EAAE,KAPO;AAQnB2F,UAAAA,GAAG,EAAE;AARc,SAApB,CAFW,CAAZ;AAcAwkB,QAAAA,SAAS,CAACz+B,QAAV,CAAmBw/B,eAAnB,CAAoC,QAApC,EAhB8B,CAkB9B;;AACAl6C,QAAAA,MAAM,CAACmN,cAAP,CAAuBgsC,SAAS,CAACnuB,QAAjC,EAA2C,KAA3C,EAAkD;AAEjD+d,UAAAA,GAAG,EAAE,eAAY;AAEhB,mBAAO,KAAK9I,QAAL,CAAc6X,GAAd,CAAkBz8C,KAAzB;AAEA;AANgD,SAAlD;AAUA29C,QAAAA,OAAO,CAACxmC,MAAR,CAAgB2mC,SAAhB;AAEA;;AAEDA,MAAAA,SAAS,CAACnuB,QAAV,CAAmBiV,QAAnB,CAA4B6X,GAA5B,CAAgCz8C,KAAhC,GAAwCgvB,UAAxC;;AAEA,UAAKA,UAAU,CAAC9c,gBAAX,KAAgC,IAArC,EAA4C;AAE3C8c,QAAAA,UAAU,CAACpC,YAAX;AAEA;;AAEDkxB,MAAAA,SAAS,CAACnuB,QAAV,CAAmBiV,QAAnB,CAA4BoU,WAA5B,CAAwCh5C,KAAxC,CAA8CkN,IAA9C,CAAoD8hB,UAAU,CAACpkB,MAA/D;;AAEA,UAAKozC,iBAAiB,KAAKhvB,UAAtB,IACJivB,wBAAwB,KAAKjvB,UAAU,CAAC3e,OADpC,IAEJ6tC,kBAAkB,KAAK9V,QAAQ,CAACK,WAFjC,EAE+C;AAE9CqV,QAAAA,SAAS,CAACnuB,QAAV,CAAmB5c,WAAnB,GAAiC,IAAjC;AAEAirC,QAAAA,iBAAiB,GAAGhvB,UAApB;AACAivB,QAAAA,wBAAwB,GAAGjvB,UAAU,CAAC3e,OAAtC;AACA6tC,QAAAA,kBAAkB,GAAG9V,QAAQ,CAACK,WAA9B;AAEA;;AAEDqV,MAAAA,SAAS,CAACpzB,MAAV,CAAiBs0B,SAAjB,GAzDgD,CA2DhD;;AACAb,MAAAA,UAAU,CAACc,OAAX,CAAoBnB,SAApB,EAA+BA,SAAS,CAACz+B,QAAzC,EAAmDy+B,SAAS,CAACnuB,QAA7D,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,IAA7E;AAEA;AAED;;AAED,WAAS6uB,QAAT,CAAmBvyC,KAAnB,EAA0B9F,KAA1B,EAAkC;AAEjCu3C,IAAAA,KAAK,CAAC3Q,OAAN,CAAc9gC,KAAd,CAAoBuyC,QAApB,CAA8BvyC,KAAK,CAAC9B,CAApC,EAAuC8B,KAAK,CAAC1C,CAA7C,EAAgD0C,KAAK,CAACjJ,CAAtD,EAAyDmD,KAAzD,EAAgE4uB,kBAAhE;AAEA;;AAED,SAAO;AAENmqB,IAAAA,aAAa,EAAE,yBAAY;AAE1B,aAAOtB,UAAP;AAEA,KANK;AAONuB,IAAAA,aAAa,EAAE,uBAAWlzC,KAAX,EAA8B;AAAA,UAAZ9F,KAAY,uEAAJ,CAAI;AAE5Cy3C,MAAAA,UAAU,CAAC/5C,GAAX,CAAgBoI,KAAhB;AACA4xC,MAAAA,UAAU,GAAG13C,KAAb;AACAq4C,MAAAA,QAAQ,CAAEZ,UAAF,EAAcC,UAAd,CAAR;AAEA,KAbK;AAcNuB,IAAAA,aAAa,EAAE,yBAAY;AAE1B,aAAOvB,UAAP;AAEA,KAlBK;AAmBNwB,IAAAA,aAAa,EAAE,uBAAWl5C,KAAX,EAAmB;AAEjC03C,MAAAA,UAAU,GAAG13C,KAAb;AACAq4C,MAAAA,QAAQ,CAAEZ,UAAF,EAAcC,UAAd,CAAR;AAEA,KAxBK;AAyBNhV,IAAAA,MAAM,EAAEA;AAzBF,GAAP;AA6BA;;AAED,SAASyW,kBAAT,CAA6B1S,EAA7B,EAAiCnH,UAAjC,EAA6CnmB,UAA7C,EAAyDutB,YAAzD,EAAwE;AAEvE,MAAM0S,mBAAmB,GAAG3S,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAA5B;AAEA,MAAMC,SAAS,GAAG5S,YAAY,CAACC,QAAb,GAAwB,IAAxB,GAA+BrH,UAAU,CAACiI,GAAX,CAAgB,yBAAhB,CAAjD;AACA,MAAMgS,YAAY,GAAG7S,YAAY,CAACC,QAAb,IAAyB2S,SAAS,KAAK,IAA5D;AAEA,MAAME,aAAa,GAAG,EAAtB;AAEA,MAAMC,YAAY,GAAGC,kBAAkB,CAAE,IAAF,CAAvC;AACA,MAAIC,YAAY,GAAGF,YAAnB;AACA,MAAIG,WAAW,GAAG,KAAlB;;AAEA,WAASC,KAAT,CAAgBphC,MAAhB,EAAwB+Q,QAAxB,EAAkCswB,OAAlC,EAA2C5gC,QAA3C,EAAqD9gB,KAArD,EAA6D;AAE5D,QAAI2hD,aAAa,GAAG,KAApB;;AAEA,QAAKR,YAAL,EAAoB;AAEnB,UAAMhC,KAAK,GAAGyC,eAAe,CAAE9gC,QAAF,EAAY4gC,OAAZ,EAAqBtwB,QAArB,CAA7B;;AAEA,UAAKmwB,YAAY,KAAKpC,KAAtB,EAA8B;AAE7BoC,QAAAA,YAAY,GAAGpC,KAAf;AACA0C,QAAAA,qBAAqB,CAAEN,YAAY,CAAClhC,MAAf,CAArB;AAEA;;AAEDshC,MAAAA,aAAa,GAAGntC,WAAW,CAAE6L,MAAF,EAAUS,QAAV,EAAoB4gC,OAApB,EAA6B1hD,KAA7B,CAA3B;AAEA,UAAK2hD,aAAL,EAAqBG,SAAS,CAAEzhC,MAAF,EAAUS,QAAV,EAAoB4gC,OAApB,EAA6B1hD,KAA7B,CAAT;AAErB,KAfD,MAeO;AAEN,UAAM26B,SAAS,GAAKvJ,QAAQ,CAACuJ,SAAT,KAAuB,IAA3C;;AAEA,UAAK4mB,YAAY,CAACzgC,QAAb,KAA0BA,QAAQ,CAACoO,EAAnC,IACJqyB,YAAY,CAACG,OAAb,KAAyBA,OAAO,CAACxyB,EAD7B,IAEJqyB,YAAY,CAAC5mB,SAAb,KAA2BA,SAF5B,EAEwC;AAEvC4mB,QAAAA,YAAY,CAACzgC,QAAb,GAAwBA,QAAQ,CAACoO,EAAjC;AACAqyB,QAAAA,YAAY,CAACG,OAAb,GAAuBA,OAAO,CAACxyB,EAA/B;AACAqyB,QAAAA,YAAY,CAAC5mB,SAAb,GAAyBA,SAAzB;AAEAgnB,QAAAA,aAAa,GAAG,IAAhB;AAEA;AAED;;AAED,QAAK3hD,KAAK,KAAK,IAAf,EAAsB;AAErB+gB,MAAAA,UAAU,CAACnI,MAAX,CAAmB5Y,KAAnB,EAA0B,KAA1B;AAEA;;AAED,QAAK2hD,aAAa,IAAIH,WAAtB,EAAoC;AAEnCA,MAAAA,WAAW,GAAG,KAAd;AAEAO,MAAAA,qBAAqB,CAAE1hC,MAAF,EAAU+Q,QAAV,EAAoBswB,OAApB,EAA6B5gC,QAA7B,CAArB;;AAEA,UAAK9gB,KAAK,KAAK,IAAf,EAAsB;AAErBquC,QAAAA,EAAE,CAACO,UAAH,CAAe,KAAf,EAAsB7tB,UAAU,CAACouB,GAAX,CAAgBnvC,KAAhB,EAAwB8M,MAA9C;AAEA;AAED;AAED;;AAED,WAASk1C,uBAAT,GAAmC;AAElC,QAAK1T,YAAY,CAACC,QAAlB,EAA6B,OAAOF,EAAE,CAAC4T,iBAAH,EAAP;AAE7B,WAAOf,SAAS,CAACgB,oBAAV,EAAP;AAEA;;AAED,WAASL,qBAAT,CAAgCM,GAAhC,EAAsC;AAErC,QAAK7T,YAAY,CAACC,QAAlB,EAA6B,OAAOF,EAAE,CAAC+T,eAAH,CAAoBD,GAApB,CAAP;AAE7B,WAAOjB,SAAS,CAACmB,kBAAV,CAA8BF,GAA9B,CAAP;AAEA;;AAED,WAASG,uBAAT,CAAkCH,GAAlC,EAAwC;AAEvC,QAAK7T,YAAY,CAACC,QAAlB,EAA6B,OAAOF,EAAE,CAACkU,iBAAH,CAAsBJ,GAAtB,CAAP;AAE7B,WAAOjB,SAAS,CAACsB,oBAAV,CAAgCL,GAAhC,CAAP;AAEA;;AAED,WAASP,eAAT,CAA0B9gC,QAA1B,EAAoC4gC,OAApC,EAA6CtwB,QAA7C,EAAwD;AAEvD,QAAMuJ,SAAS,GAAKvJ,QAAQ,CAACuJ,SAAT,KAAuB,IAA3C;AAEA,QAAI8nB,UAAU,GAAGrB,aAAa,CAAEtgC,QAAQ,CAACoO,EAAX,CAA9B;;AAEA,QAAKuzB,UAAU,KAAK9iD,SAApB,EAAgC;AAE/B8iD,MAAAA,UAAU,GAAG,EAAb;AACArB,MAAAA,aAAa,CAAEtgC,QAAQ,CAACoO,EAAX,CAAb,GAA+BuzB,UAA/B;AAEA;;AAED,QAAIC,QAAQ,GAAGD,UAAU,CAAEf,OAAO,CAACxyB,EAAV,CAAzB;;AAEA,QAAKwzB,QAAQ,KAAK/iD,SAAlB,EAA8B;AAE7B+iD,MAAAA,QAAQ,GAAG,EAAX;AACAD,MAAAA,UAAU,CAAEf,OAAO,CAACxyB,EAAV,CAAV,GAA2BwzB,QAA3B;AAEA;;AAED,QAAIvD,KAAK,GAAGuD,QAAQ,CAAE/nB,SAAF,CAApB;;AAEA,QAAKwkB,KAAK,KAAKx/C,SAAf,EAA2B;AAE1Bw/C,MAAAA,KAAK,GAAGmC,kBAAkB,CAAEU,uBAAuB,EAAzB,CAA1B;AACAU,MAAAA,QAAQ,CAAE/nB,SAAF,CAAR,GAAwBwkB,KAAxB;AAEA;;AAED,WAAOA,KAAP;AAEA;;AAED,WAASmC,kBAAT,CAA6Ba,GAA7B,EAAmC;AAElC,QAAMQ,aAAa,GAAG,EAAtB;AACA,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,iBAAiB,GAAG,EAA1B;;AAEA,SAAM,IAAIviD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0gD,mBAArB,EAA0C1gD,CAAC,EAA3C,EAAiD;AAEhDqiD,MAAAA,aAAa,CAAEriD,CAAF,CAAb,GAAqB,CAArB;AACAsiD,MAAAA,iBAAiB,CAAEtiD,CAAF,CAAjB,GAAyB,CAAzB;AACAuiD,MAAAA,iBAAiB,CAAEviD,CAAF,CAAjB,GAAyB,CAAzB;AAEA;;AAED,WAAO;AAEN;AACAwgB,MAAAA,QAAQ,EAAE,IAHJ;AAIN4gC,MAAAA,OAAO,EAAE,IAJH;AAKN/mB,MAAAA,SAAS,EAAE,KALL;AAONgoB,MAAAA,aAAa,EAAEA,aAPT;AAQNC,MAAAA,iBAAiB,EAAEA,iBARb;AASNC,MAAAA,iBAAiB,EAAEA,iBATb;AAUNxiC,MAAAA,MAAM,EAAE8hC,GAVF;AAWNphC,MAAAA,UAAU,EAAE,EAXN;AAYN/gB,MAAAA,KAAK,EAAE;AAZD,KAAP;AAgBA;;AAED,WAASwU,WAAT,CAAsB6L,MAAtB,EAA8BS,QAA9B,EAAwC4gC,OAAxC,EAAiD1hD,KAAjD,EAAyD;AAExD,QAAM8iD,gBAAgB,GAAGvB,YAAY,CAACxgC,UAAtC;AACA,QAAMgiC,kBAAkB,GAAGjiC,QAAQ,CAACC,UAApC;AAEA,QAAIiiC,aAAa,GAAG,CAApB;AAEA,QAAMC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAR,EAA1B;;AAEA,SAAM,IAAMl2C,IAAZ,IAAoBi2C,iBAApB,EAAwC;AAEvC,UAAME,gBAAgB,GAAGF,iBAAiB,CAAEj2C,IAAF,CAA1C;;AAEA,UAAKm2C,gBAAgB,CAACC,QAAjB,IAA6B,CAAlC,EAAsC;AAErC,YAAMC,eAAe,GAAGP,gBAAgB,CAAE91C,IAAF,CAAxC;AACA,YAAIs2C,iBAAiB,GAAGP,kBAAkB,CAAE/1C,IAAF,CAA1C;;AAEA,YAAKs2C,iBAAiB,KAAK3jD,SAA3B,EAAuC;AAEtC,cAAKqN,IAAI,KAAK,gBAAT,IAA6BqT,MAAM,CAAC8P,cAAzC,EAA0DmzB,iBAAiB,GAAGjjC,MAAM,CAAC8P,cAA3B;AAC1D,cAAKnjB,IAAI,KAAK,eAAT,IAA4BqT,MAAM,CAAC+P,aAAxC,EAAwDkzB,iBAAiB,GAAGjjC,MAAM,CAAC+P,aAA3B;AAExD;;AAED,YAAKizB,eAAe,KAAK1jD,SAAzB,EAAqC,OAAO,IAAP;AAErC,YAAK0jD,eAAe,CAACr7C,SAAhB,KAA8Bs7C,iBAAnC,EAAuD,OAAO,IAAP;AAEvD,YAAKA,iBAAiB,IAAID,eAAe,CAAC1xC,IAAhB,KAAyB2xC,iBAAiB,CAAC3xC,IAArE,EAA4E,OAAO,IAAP;AAE5EqxC,QAAAA,aAAa;AAEb;AAED;;AAED,QAAKzB,YAAY,CAACyB,aAAb,KAA+BA,aAApC,EAAoD,OAAO,IAAP;AAEpD,QAAKzB,YAAY,CAACvhD,KAAb,KAAuBA,KAA5B,EAAoC,OAAO,IAAP;AAEpC,WAAO,KAAP;AAEA;;AAED,WAAS8hD,SAAT,CAAoBzhC,MAApB,EAA4BS,QAA5B,EAAsC4gC,OAAtC,EAA+C1hD,KAA/C,EAAuD;AAEtD,QAAMwxB,KAAK,GAAG,EAAd;AACA,QAAMzQ,UAAU,GAAGD,QAAQ,CAACC,UAA5B;AACA,QAAIiiC,aAAa,GAAG,CAApB;AAEA,QAAMC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAR,EAA1B;;AAEA,SAAM,IAAMl2C,IAAZ,IAAoBi2C,iBAApB,EAAwC;AAEvC,UAAME,gBAAgB,GAAGF,iBAAiB,CAAEj2C,IAAF,CAA1C;;AAEA,UAAKm2C,gBAAgB,CAACC,QAAjB,IAA6B,CAAlC,EAAsC;AAErC,YAAIp7C,SAAS,GAAG+Y,UAAU,CAAE/T,IAAF,CAA1B;;AAEA,YAAKhF,SAAS,KAAKrI,SAAnB,EAA+B;AAE9B,cAAKqN,IAAI,KAAK,gBAAT,IAA6BqT,MAAM,CAAC8P,cAAzC,EAA0DnoB,SAAS,GAAGqY,MAAM,CAAC8P,cAAnB;AAC1D,cAAKnjB,IAAI,KAAK,eAAT,IAA4BqT,MAAM,CAAC+P,aAAxC,EAAwDpoB,SAAS,GAAGqY,MAAM,CAAC+P,aAAnB;AAExD;;AAED,YAAMze,IAAI,GAAG,EAAb;AACAA,QAAAA,IAAI,CAAC3J,SAAL,GAAiBA,SAAjB;;AAEA,YAAKA,SAAS,IAAIA,SAAS,CAAC2J,IAA5B,EAAmC;AAElCA,UAAAA,IAAI,CAACA,IAAL,GAAY3J,SAAS,CAAC2J,IAAtB;AAEA;;AAED6f,QAAAA,KAAK,CAAExkB,IAAF,CAAL,GAAgB2E,IAAhB;AAEAqxC,QAAAA,aAAa;AAEb;AAED;;AAEDzB,IAAAA,YAAY,CAACxgC,UAAb,GAA0ByQ,KAA1B;AACA+vB,IAAAA,YAAY,CAACyB,aAAb,GAA6BA,aAA7B;AAEAzB,IAAAA,YAAY,CAACvhD,KAAb,GAAqBA,KAArB;AAEA;;AAED,WAASujD,cAAT,GAA0B;AAEzB,QAAMZ,aAAa,GAAGpB,YAAY,CAACoB,aAAnC;;AAEA,SAAM,IAAIriD,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGyqC,aAAa,CAACniD,MAApC,EAA4CF,CAAC,GAAG4X,EAAhD,EAAoD5X,CAAC,EAArD,EAA2D;AAE1DqiD,MAAAA,aAAa,CAAEriD,CAAF,CAAb,GAAqB,CAArB;AAEA;AAED;;AAED,WAASkjD,eAAT,CAA0Bx7C,SAA1B,EAAsC;AAErCy7C,IAAAA,yBAAyB,CAAEz7C,SAAF,EAAa,CAAb,CAAzB;AAEA;;AAED,WAASy7C,yBAAT,CAAoCz7C,SAApC,EAA+C07C,gBAA/C,EAAkE;AAEjE,QAAMf,aAAa,GAAGpB,YAAY,CAACoB,aAAnC;AACA,QAAMC,iBAAiB,GAAGrB,YAAY,CAACqB,iBAAvC;AACA,QAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAvC;AAEAF,IAAAA,aAAa,CAAE36C,SAAF,CAAb,GAA6B,CAA7B;;AAEA,QAAK46C,iBAAiB,CAAE56C,SAAF,CAAjB,KAAmC,CAAxC,EAA4C;AAE3CqmC,MAAAA,EAAE,CAACsV,uBAAH,CAA4B37C,SAA5B;AACA46C,MAAAA,iBAAiB,CAAE56C,SAAF,CAAjB,GAAiC,CAAjC;AAEA;;AAED,QAAK66C,iBAAiB,CAAE76C,SAAF,CAAjB,KAAmC07C,gBAAxC,EAA2D;AAE1D,UAAMxC,UAAS,GAAG5S,YAAY,CAACC,QAAb,GAAwBF,EAAxB,GAA6BnH,UAAU,CAACiI,GAAX,CAAgB,wBAAhB,CAA/C;;AAEA+R,MAAAA,UAAS,CAAE5S,YAAY,CAACC,QAAb,GAAwB,qBAAxB,GAAgD,0BAAlD,CAAT,CAAyFvmC,SAAzF,EAAoG07C,gBAApG;;AACAb,MAAAA,iBAAiB,CAAE76C,SAAF,CAAjB,GAAiC07C,gBAAjC;AAEA;AAED;;AAED,WAASE,uBAAT,GAAmC;AAElC,QAAMjB,aAAa,GAAGpB,YAAY,CAACoB,aAAnC;AACA,QAAMC,iBAAiB,GAAGrB,YAAY,CAACqB,iBAAvC;;AAEA,SAAM,IAAItiD,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG0qC,iBAAiB,CAACpiD,MAAxC,EAAgDF,CAAC,GAAG4X,EAApD,EAAwD5X,CAAC,EAAzD,EAA+D;AAE9D,UAAKsiD,iBAAiB,CAAEtiD,CAAF,CAAjB,KAA2BqiD,aAAa,CAAEriD,CAAF,CAA7C,EAAqD;AAEpD+tC,QAAAA,EAAE,CAACwV,wBAAH,CAA6BvjD,CAA7B;AACAsiD,QAAAA,iBAAiB,CAAEtiD,CAAF,CAAjB,GAAyB,CAAzB;AAEA;AAED;AAED;;AAED,WAASwjD,mBAAT,CAA8B9jD,KAA9B,EAAqCuP,IAArC,EAA2C/P,IAA3C,EAAiD8Q,UAAjD,EAA6DsxB,MAA7D,EAAqE75B,MAArE,EAA8E;AAE7E,QAAKumC,YAAY,CAACC,QAAb,KAA0B,IAA1B,KAAoC/uC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA9D,CAAL,EAA4E;AAE3E6uC,MAAAA,EAAE,CAAC0V,oBAAH,CAAyB/jD,KAAzB,EAAgCuP,IAAhC,EAAsC/P,IAAtC,EAA4CoiC,MAA5C,EAAoD75B,MAApD;AAEA,KAJD,MAIO;AAENsmC,MAAAA,EAAE,CAACyV,mBAAH,CAAwB9jD,KAAxB,EAA+BuP,IAA/B,EAAqC/P,IAArC,EAA2C8Q,UAA3C,EAAuDsxB,MAAvD,EAA+D75B,MAA/D;AAEA;AAED;;AAED,WAASg6C,qBAAT,CAAgC1hC,MAAhC,EAAwC+Q,QAAxC,EAAkDswB,OAAlD,EAA2D5gC,QAA3D,EAAsE;AAErE,QAAKwtB,YAAY,CAACC,QAAb,KAA0B,KAA1B,KAAqCluB,MAAM,CAAC6P,eAAP,IAA0BpP,QAAQ,CAACkjC,yBAAxE,CAAL,EAA2G;AAE1G,UAAK9c,UAAU,CAACiI,GAAX,CAAgB,wBAAhB,MAA+C,IAApD,EAA2D;AAE3D;;AAEDoU,IAAAA,cAAc;AAEd,QAAMR,kBAAkB,GAAGjiC,QAAQ,CAACC,UAApC;AAEA,QAAMkiC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAR,EAA1B;AAEA,QAAMe,8BAA8B,GAAG7yB,QAAQ,CAACmW,sBAAhD;;AAEA,SAAM,IAAMv6B,IAAZ,IAAoBi2C,iBAApB,EAAwC;AAEvC,UAAME,gBAAgB,GAAGF,iBAAiB,CAAEj2C,IAAF,CAA1C;;AAEA,UAAKm2C,gBAAgB,CAACC,QAAjB,IAA6B,CAAlC,EAAsC;AAErC,YAAIE,iBAAiB,GAAGP,kBAAkB,CAAE/1C,IAAF,CAA1C;;AAEA,YAAKs2C,iBAAiB,KAAK3jD,SAA3B,EAAuC;AAEtC,cAAKqN,IAAI,KAAK,gBAAT,IAA6BqT,MAAM,CAAC8P,cAAzC,EAA0DmzB,iBAAiB,GAAGjjC,MAAM,CAAC8P,cAA3B;AAC1D,cAAKnjB,IAAI,KAAK,eAAT,IAA4BqT,MAAM,CAAC+P,aAAxC,EAAwDkzB,iBAAiB,GAAGjjC,MAAM,CAAC+P,aAA3B;AAExD;;AAED,YAAKkzB,iBAAiB,KAAK3jD,SAA3B,EAAuC;AAEtC,cAAM2Q,UAAU,GAAGgzC,iBAAiB,CAAChzC,UAArC;AACA,cAAMf,IAAI,GAAG+zC,iBAAiB,CAAC9nB,QAA/B;AAEA,cAAMxzB,SAAS,GAAG+Y,UAAU,CAACouB,GAAX,CAAgBmU,iBAAhB,CAAlB,CALsC,CAOtC;;AAEA,cAAKt7C,SAAS,KAAKrI,SAAnB,EAA+B;AAE/B,cAAMmN,MAAM,GAAG9E,SAAS,CAAC8E,MAAzB;AACA,cAAMtN,IAAI,GAAGwI,SAAS,CAACxI,IAAvB;AACA,cAAMsvC,eAAe,GAAG9mC,SAAS,CAAC8mC,eAAlC;;AAEA,cAAKwU,iBAAiB,CAAC3hB,4BAAvB,EAAsD;AAErD,gBAAMhwB,IAAI,GAAG2xC,iBAAiB,CAAC3xC,IAA/B;AACA,gBAAMiwB,MAAM,GAAGjwB,IAAI,CAACiwB,MAApB;AACA,gBAAM75B,MAAM,GAAGu7C,iBAAiB,CAACv7C,MAAjC;;AAEA,gBAAK4J,IAAI,CAACuyC,4BAAV,EAAyC;AAExC,mBAAM,IAAI5jD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,CAAC,EAArD,EAA2D;AAE1DmjD,gBAAAA,yBAAyB,CAAEN,gBAAgB,CAACC,QAAjB,GAA4B9iD,CAA9B,EAAiCqR,IAAI,CAAC+xC,gBAAtC,CAAzB;AAEA;;AAED,kBAAKrjC,MAAM,CAAC6P,eAAP,KAA2B,IAA3B,IAAmCpP,QAAQ,CAACsjC,iBAAT,KAA+BzkD,SAAvE,EAAmF;AAElFmhB,gBAAAA,QAAQ,CAACsjC,iBAAT,GAA6BzyC,IAAI,CAAC+xC,gBAAL,GAAwB/xC,IAAI,CAACqG,KAA1D;AAEA;AAED,aAdD,MAcO;AAEN,mBAAM,IAAI1X,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,IAAC,EAArD,EAA2D;AAE1DkjD,gBAAAA,eAAe,CAAEL,gBAAgB,CAACC,QAAjB,GAA4B9iD,IAA9B,CAAf;AAEA;AAED;;AAED+tC,YAAAA,EAAE,CAACO,UAAH,CAAe,KAAf,EAAsB9hC,MAAtB;;AAEA,iBAAM,IAAIxM,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,IAAC,EAArD,EAA2D;AAE1DwjD,cAAAA,mBAAmB,CAClBX,gBAAgB,CAACC,QAAjB,GAA4B9iD,IADV,EAElBiP,IAAI,GAAG4zC,gBAAgB,CAACgB,YAFN,EAGlB3kD,IAHkB,EAIlB8Q,UAJkB,EAKlBsxB,MAAM,GAAGkN,eALS,EAMlB,CAAE/mC,MAAM,GAAKwH,IAAI,GAAG4zC,gBAAgB,CAACgB,YAA1B,GAA2C7jD,IAAtD,IAA4DwuC,eAN1C,CAAnB;AASA;AAED,WA7CD,MA6CO;AAEN,gBAAKwU,iBAAiB,CAACe,0BAAvB,EAAoD;AAEnD,mBAAM,IAAI/jD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,IAAC,EAArD,EAA2D;AAE1DmjD,gBAAAA,yBAAyB,CAAEN,gBAAgB,CAACC,QAAjB,GAA4B9iD,IAA9B,EAAiCgjD,iBAAiB,CAACI,gBAAnD,CAAzB;AAEA;;AAED,kBAAKrjC,MAAM,CAAC6P,eAAP,KAA2B,IAA3B,IAAmCpP,QAAQ,CAACsjC,iBAAT,KAA+BzkD,SAAvE,EAAmF;AAElFmhB,gBAAAA,QAAQ,CAACsjC,iBAAT,GAA6Bd,iBAAiB,CAACI,gBAAlB,GAAqCJ,iBAAiB,CAACtrC,KAApF;AAEA;AAED,aAdD,MAcO;AAEN,mBAAM,IAAI1X,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,IAAC,EAArD,EAA2D;AAE1DkjD,gBAAAA,eAAe,CAAEL,gBAAgB,CAACC,QAAjB,GAA4B9iD,IAA9B,CAAf;AAEA;AAED;;AAED+tC,YAAAA,EAAE,CAACO,UAAH,CAAe,KAAf,EAAsB9hC,MAAtB;;AAEA,iBAAM,IAAIxM,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6iD,gBAAgB,CAACgB,YAAtC,EAAoD7jD,IAAC,EAArD,EAA2D;AAE1DwjD,cAAAA,mBAAmB,CAClBX,gBAAgB,CAACC,QAAjB,GAA4B9iD,IADV,EAElBiP,IAAI,GAAG4zC,gBAAgB,CAACgB,YAFN,EAGlB3kD,IAHkB,EAIlB8Q,UAJkB,EAKlBf,IAAI,GAAGu/B,eALW,EAMhBv/B,IAAI,GAAG4zC,gBAAgB,CAACgB,YAA1B,GAA2C7jD,IAA3C,GAA+CwuC,eAN7B,CAAnB;AASA;AAED;AAED,SAvGD,MAuGO,IAAKmV,8BAA8B,KAAKtkD,SAAxC,EAAoD;AAE1D,cAAM8B,OAAK,GAAGwiD,8BAA8B,CAAEj3C,IAAF,CAA5C;;AAEA,cAAKvL,OAAK,KAAK9B,SAAf,EAA2B;AAE1B,oBAAS8B,OAAK,CAACjB,MAAf;AAEC,mBAAK,CAAL;AACC6tC,gBAAAA,EAAE,CAACiW,eAAH,CAAoBnB,gBAAgB,CAACC,QAArC,EAA+C3hD,OAA/C;AACA;;AAED,mBAAK,CAAL;AACC4sC,gBAAAA,EAAE,CAACkW,eAAH,CAAoBpB,gBAAgB,CAACC,QAArC,EAA+C3hD,OAA/C;AACA;;AAED,mBAAK,CAAL;AACC4sC,gBAAAA,EAAE,CAACmW,eAAH,CAAoBrB,gBAAgB,CAACC,QAArC,EAA+C3hD,OAA/C;AACA;;AAED;AACC4sC,gBAAAA,EAAE,CAACoW,eAAH,CAAoBtB,gBAAgB,CAACC,QAArC,EAA+C3hD,OAA/C;AAfF;AAmBA;AAED;AAED;AAED;;AAEDmiD,IAAAA,uBAAuB;AAEvB;;AAED,WAASzsC,OAAT,GAAmB;AAElButC,IAAAA,KAAK;;AAEL,SAAM,IAAMC,UAAZ,IAA0BvD,aAA1B,EAA0C;AAEzC,UAAMqB,UAAU,GAAGrB,aAAa,CAAEuD,UAAF,CAAhC;;AAEA,WAAM,IAAMC,SAAZ,IAAyBnC,UAAzB,EAAsC;AAErC,YAAMC,QAAQ,GAAGD,UAAU,CAAEmC,SAAF,CAA3B;;AAEA,aAAM,IAAMjqB,SAAZ,IAAyB+nB,QAAzB,EAAoC;AAEnCJ,UAAAA,uBAAuB,CAAEI,QAAQ,CAAE/nB,SAAF,CAAR,CAAsBta,MAAxB,CAAvB;AAEA,iBAAOqiC,QAAQ,CAAE/nB,SAAF,CAAf;AAEA;;AAED,eAAO8nB,UAAU,CAAEmC,SAAF,CAAjB;AAEA;;AAED,aAAOxD,aAAa,CAAEuD,UAAF,CAApB;AAEA;AAED;;AAED,WAASE,uBAAT,CAAkC/jC,QAAlC,EAA6C;AAE5C,QAAKsgC,aAAa,CAAEtgC,QAAQ,CAACoO,EAAX,CAAb,KAAiCvvB,SAAtC,EAAkD;AAElD,QAAM8iD,UAAU,GAAGrB,aAAa,CAAEtgC,QAAQ,CAACoO,EAAX,CAAhC;;AAEA,SAAM,IAAM01B,SAAZ,IAAyBnC,UAAzB,EAAsC;AAErC,UAAMC,QAAQ,GAAGD,UAAU,CAAEmC,SAAF,CAA3B;;AAEA,WAAM,IAAMjqB,SAAZ,IAAyB+nB,QAAzB,EAAoC;AAEnCJ,QAAAA,uBAAuB,CAAEI,QAAQ,CAAE/nB,SAAF,CAAR,CAAsBta,MAAxB,CAAvB;AAEA,eAAOqiC,QAAQ,CAAE/nB,SAAF,CAAf;AAEA;;AAED,aAAO8nB,UAAU,CAAEmC,SAAF,CAAjB;AAEA;;AAED,WAAOxD,aAAa,CAAEtgC,QAAQ,CAACoO,EAAX,CAApB;AAEA;;AAED,WAAS41B,sBAAT,CAAiCpD,OAAjC,EAA2C;AAE1C,SAAM,IAAMiD,UAAZ,IAA0BvD,aAA1B,EAA0C;AAEzC,UAAMqB,UAAU,GAAGrB,aAAa,CAAEuD,UAAF,CAAhC;AAEA,UAAKlC,UAAU,CAAEf,OAAO,CAACxyB,EAAV,CAAV,KAA6BvvB,SAAlC,EAA8C;AAE9C,UAAM+iD,QAAQ,GAAGD,UAAU,CAAEf,OAAO,CAACxyB,EAAV,CAA3B;;AAEA,WAAM,IAAMyL,SAAZ,IAAyB+nB,QAAzB,EAAoC;AAEnCJ,QAAAA,uBAAuB,CAAEI,QAAQ,CAAE/nB,SAAF,CAAR,CAAsBta,MAAxB,CAAvB;AAEA,eAAOqiC,QAAQ,CAAE/nB,SAAF,CAAf;AAEA;;AAED,aAAO8nB,UAAU,CAAEf,OAAO,CAACxyB,EAAV,CAAjB;AAEA;AAED;;AAED,WAASw1B,KAAT,GAAiB;AAEhBK,IAAAA,iBAAiB;AACjBvD,IAAAA,WAAW,GAAG,IAAd;AAEA,QAAKD,YAAY,KAAKF,YAAtB,EAAqC;AAErCE,IAAAA,YAAY,GAAGF,YAAf;AACAQ,IAAAA,qBAAqB,CAAEN,YAAY,CAAClhC,MAAf,CAArB;AAEA,GAhlBsE,CAklBvE;;;AAEA,WAAS0kC,iBAAT,GAA6B;AAE5B1D,IAAAA,YAAY,CAACvgC,QAAb,GAAwB,IAAxB;AACAugC,IAAAA,YAAY,CAACK,OAAb,GAAuB,IAAvB;AACAL,IAAAA,YAAY,CAAC1mB,SAAb,GAAyB,KAAzB;AAEA;;AAED,SAAO;AAEN8mB,IAAAA,KAAK,EAAEA,KAFD;AAGNiD,IAAAA,KAAK,EAAEA,KAHD;AAINK,IAAAA,iBAAiB,EAAEA,iBAJb;AAKN5tC,IAAAA,OAAO,EAAEA,OALH;AAMN0tC,IAAAA,uBAAuB,EAAEA,uBANnB;AAONC,IAAAA,sBAAsB,EAAEA,sBAPlB;AASNvB,IAAAA,cAAc,EAAEA,cATV;AAUNC,IAAAA,eAAe,EAAEA,eAVX;AAWNI,IAAAA,uBAAuB,EAAEA;AAXnB,GAAP;AAeA;;AAED,SAASoB,mBAAT,CAA8B3W,EAA9B,EAAkCnH,UAAlC,EAA8C+d,IAA9C,EAAoD3W,YAApD,EAAmE;AAElE,MAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AAEA,MAAI2W,IAAJ;;AAEA,WAASC,OAAT,CAAkB1jD,KAAlB,EAA0B;AAEzByjD,IAAAA,IAAI,GAAGzjD,KAAP;AAEA;;AAED,WAAS6oC,MAAT,CAAiBxM,KAAjB,EAAwB9lB,KAAxB,EAAgC;AAE/Bq2B,IAAAA,EAAE,CAAC+W,UAAH,CAAeF,IAAf,EAAqBpnB,KAArB,EAA4B9lB,KAA5B;AAEAitC,IAAAA,IAAI,CAACrsC,MAAL,CAAaZ,KAAb,EAAoBktC,IAApB,EAA0B,CAA1B;AAEA;;AAED,WAASG,eAAT,CAA0BvnB,KAA1B,EAAiC9lB,KAAjC,EAAwCstC,SAAxC,EAAoD;AAEnD,QAAKA,SAAS,KAAK,CAAnB,EAAuB;AAEvB,QAAIpE,SAAJ,EAAeqE,UAAf;;AAEA,QAAKhX,QAAL,EAAgB;AAEf2S,MAAAA,SAAS,GAAG7S,EAAZ;AACAkX,MAAAA,UAAU,GAAG,qBAAb;AAEA,KALD,MAKO;AAENrE,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,wBAAhB,CAAZ;AACAoW,MAAAA,UAAU,GAAG,0BAAb;;AAEA,UAAKrE,SAAS,KAAK,IAAnB,EAA0B;AAEzB37C,QAAAA,OAAO,CAACkD,KAAR,CAAe,gIAAf;AACA;AAEA;AAED;;AAEDy4C,IAAAA,SAAS,CAAEqE,UAAF,CAAT,CAAyBL,IAAzB,EAA+BpnB,KAA/B,EAAsC9lB,KAAtC,EAA6CstC,SAA7C;AAEAL,IAAAA,IAAI,CAACrsC,MAAL,CAAaZ,KAAb,EAAoBktC,IAApB,EAA0BI,SAA1B;AAEA,GAjDiE,CAmDlE;;;AAEA,OAAKH,OAAL,GAAeA,OAAf;AACA,OAAK7a,MAAL,GAAcA,MAAd;AACA,OAAK+a,eAAL,GAAuBA,eAAvB;AAEA;;AAED,SAASG,iBAAT,CAA4BnX,EAA5B,EAAgCnH,UAAhC,EAA4CpW,UAA5C,EAAyD;AAExD,MAAI20B,aAAJ;;AAEA,WAASC,gBAAT,GAA4B;AAE3B,QAAKD,aAAa,KAAK9lD,SAAvB,EAAmC,OAAO8lD,aAAP;;AAEnC,QAAKve,UAAU,CAACye,GAAX,CAAgB,gCAAhB,MAAuD,IAA5D,EAAmE;AAElE,UAAMzE,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,gCAAhB,CAAlB;AAEAsW,MAAAA,aAAa,GAAGpX,EAAE,CAAC4S,YAAH,CAAiBC,SAAS,CAAC0E,8BAA3B,CAAhB;AAEA,KAND,MAMO;AAENH,MAAAA,aAAa,GAAG,CAAhB;AAEA;;AAED,WAAOA,aAAP;AAEA;;AAED,WAASI,eAAT,CAA0B3vB,SAA1B,EAAsC;AAErC,QAAKA,SAAS,KAAK,OAAnB,EAA6B;AAE5B,UAAKmY,EAAE,CAACyX,wBAAH,CAA6B,KAA7B,EAAoC,KAApC,EAA4C5vB,SAA5C,GAAwD,CAAxD,IACJmY,EAAE,CAACyX,wBAAH,CAA6B,KAA7B,EAAoC,KAApC,EAA4C5vB,SAA5C,GAAwD,CADzD,EAC6D;AAE5D,eAAO,OAAP;AAEA;;AAEDA,MAAAA,SAAS,GAAG,SAAZ;AAEA;;AAED,QAAKA,SAAS,KAAK,SAAnB,EAA+B;AAE9B,UAAKmY,EAAE,CAACyX,wBAAH,CAA6B,KAA7B,EAAoC,KAApC,EAA4C5vB,SAA5C,GAAwD,CAAxD,IACJmY,EAAE,CAACyX,wBAAH,CAA6B,KAA7B,EAAoC,KAApC,EAA4C5vB,SAA5C,GAAwD,CADzD,EAC6D;AAE5D,eAAO,SAAP;AAEA;AAED;;AAED,WAAO,MAAP;AAEA;;AAED,MAAMqY,QAAQ,GAAK,OAAOwX,sBAAP,KAAkC,WAAlC,IAAiD1X,EAAE,YAAY0X,sBAAjE,IACd,OAAOC,6BAAP,KAAyC,WAAzC,IAAwD3X,EAAE,YAAY2X,6BADzE;AAGA,MAAI9vB,SAAS,GAAGpF,UAAU,CAACoF,SAAX,KAAyBv2B,SAAzB,GAAqCmxB,UAAU,CAACoF,SAAhD,GAA4D,OAA5E;AACA,MAAM+vB,YAAY,GAAGJ,eAAe,CAAE3vB,SAAF,CAApC;;AAEA,MAAK+vB,YAAY,KAAK/vB,SAAtB,EAAkC;AAEjC3wB,IAAAA,OAAO,CAACC,IAAR,CAAc,sBAAd,EAAsC0wB,SAAtC,EAAiD,sBAAjD,EAAyE+vB,YAAzE,EAAuF,UAAvF;AACA/vB,IAAAA,SAAS,GAAG+vB,YAAZ;AAEA;;AAED,MAAM5e,WAAW,GAAGkH,QAAQ,IAAIrH,UAAU,CAACye,GAAX,CAAgB,oBAAhB,CAAhC;AAEA,MAAMO,sBAAsB,GAAGp1B,UAAU,CAACo1B,sBAAX,KAAsC,IAArE;AAEA,MAAMC,WAAW,GAAG9X,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAApB;AACA,MAAMmF,iBAAiB,GAAG/X,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAA1B;AACA,MAAMoF,cAAc,GAAGhY,EAAE,CAAC4S,YAAH,CAAiB,IAAjB,CAAvB;AACA,MAAMqF,cAAc,GAAGjY,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAAvB;AAEA,MAAMsF,aAAa,GAAGlY,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAAtB;AACA,MAAMuF,iBAAiB,GAAGnY,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAA1B;AACA,MAAMwF,WAAW,GAAGpY,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAApB;AACA,MAAMyF,mBAAmB,GAAGrY,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAA5B;AAEA,MAAM0F,cAAc,GAAGP,iBAAiB,GAAG,CAA3C;AACA,MAAMQ,qBAAqB,GAAGrY,QAAQ,IAAIrH,UAAU,CAACye,GAAX,CAAgB,mBAAhB,CAA1C;AACA,MAAMkB,mBAAmB,GAAGF,cAAc,IAAIC,qBAA9C;AAEA,MAAME,UAAU,GAAGvY,QAAQ,GAAGF,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAAH,GAA8B,CAAzD;AAEA,SAAO;AAEN1S,IAAAA,QAAQ,EAAEA,QAFJ;AAINlH,IAAAA,WAAW,EAAEA,WAJP;AAMNqe,IAAAA,gBAAgB,EAAEA,gBANZ;AAONG,IAAAA,eAAe,EAAEA,eAPX;AASN3vB,IAAAA,SAAS,EAAEA,SATL;AAUNgwB,IAAAA,sBAAsB,EAAEA,sBAVlB;AAYNC,IAAAA,WAAW,EAAEA,WAZP;AAaNC,IAAAA,iBAAiB,EAAEA,iBAbb;AAcNC,IAAAA,cAAc,EAAEA,cAdV;AAeNC,IAAAA,cAAc,EAAEA,cAfV;AAiBNC,IAAAA,aAAa,EAAEA,aAjBT;AAkBNC,IAAAA,iBAAiB,EAAEA,iBAlBb;AAmBNC,IAAAA,WAAW,EAAEA,WAnBP;AAoBNC,IAAAA,mBAAmB,EAAEA,mBApBf;AAsBNC,IAAAA,cAAc,EAAEA,cAtBV;AAuBNC,IAAAA,qBAAqB,EAAEA,qBAvBjB;AAwBNC,IAAAA,mBAAmB,EAAEA,mBAxBf;AA0BNC,IAAAA,UAAU,EAAEA;AA1BN,GAAP;AA8BA;;AAED,SAASC,aAAT,CAAwBhL,UAAxB,EAAqC;AAEpC,MAAM/W,KAAK,GAAG,IAAd;AAEA,MAAIgiB,WAAW,GAAG,IAAlB;AAAA,MACCC,eAAe,GAAG,CADnB;AAAA,MAECC,oBAAoB,GAAG,KAFxB;AAAA,MAGCC,gBAAgB,GAAG,KAHpB;AAKA,MAAM1lC,KAAK,GAAG,IAAI0pB,KAAJ,EAAd;AAAA,MACCic,gBAAgB,GAAG,IAAI9+C,OAAJ,EADpB;AAAA,MAGCq/B,OAAO,GAAG;AAAElmC,IAAAA,KAAK,EAAE,IAAT;AAAe+S,IAAAA,WAAW,EAAE;AAA5B,GAHX;AAKA,OAAKmzB,OAAL,GAAeA,OAAf;AACA,OAAK0f,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL,GAAuB,CAAvB;;AAEA,OAAKC,IAAL,GAAY,UAAWpb,MAAX,EAAmBqb,mBAAnB,EAAwC/pC,MAAxC,EAAiD;AAE5D,QAAMqrB,OAAO,GACZqD,MAAM,CAAC3rC,MAAP,KAAkB,CAAlB,IACAgnD,mBADA,IAEA;AACA;AACAP,IAAAA,eAAe,KAAK,CAJpB,IAKAC,oBAND;AAQAA,IAAAA,oBAAoB,GAAGM,mBAAvB;AAEAR,IAAAA,WAAW,GAAGS,aAAa,CAAEtb,MAAF,EAAU1uB,MAAV,EAAkB,CAAlB,CAA3B;AACAwpC,IAAAA,eAAe,GAAG9a,MAAM,CAAC3rC,MAAzB;AAEA,WAAOsoC,OAAP;AAEA,GAjBD;;AAmBA,OAAK4e,YAAL,GAAoB,YAAY;AAE/BP,IAAAA,gBAAgB,GAAG,IAAnB;AACAM,IAAAA,aAAa,CAAE,IAAF,CAAb;AAEA,GALD;;AAOA,OAAKE,UAAL,GAAkB,YAAY;AAE7BR,IAAAA,gBAAgB,GAAG,KAAnB;AACAS,IAAAA,gBAAgB;AAEhB,GALD;;AAOA,OAAKC,QAAL,GAAgB,UAAWz2B,QAAX,EAAqB3T,MAArB,EAA6BqqC,QAA7B,EAAwC;AAEvD,QAAM3b,MAAM,GAAG/a,QAAQ,CAACyE,cAAxB;AAAA,QACCC,gBAAgB,GAAG1E,QAAQ,CAAC0E,gBAD7B;AAAA,QAECC,WAAW,GAAG3E,QAAQ,CAAC2E,WAFxB;AAIA,QAAMgyB,kBAAkB,GAAGhM,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,CAA3B;;AAEA,QAAK,CAAE81B,oBAAF,IAA0B/a,MAAM,KAAK,IAArC,IAA6CA,MAAM,CAAC3rC,MAAP,KAAkB,CAA/D,IAAoE2mD,gBAAgB,IAAI,CAAEpxB,WAA/F,EAA6G;AAE5G;AAEA,UAAKoxB,gBAAL,EAAwB;AAEvB;AAEAM,QAAAA,aAAa,CAAE,IAAF,CAAb;AAEA,OAND,MAMO;AAENG,QAAAA,gBAAgB;AAEhB;AAED,KAhBD,MAgBO;AAEN,UAAMI,OAAO,GAAGb,gBAAgB,GAAG,CAAH,GAAOF,eAAvC;AAAA,UACCgB,OAAO,GAAGD,OAAO,GAAG,CADrB;AAGA,UAAIE,QAAQ,GAAGH,kBAAkB,CAACI,aAAnB,IAAoC,IAAnD;AAEAxgB,MAAAA,OAAO,CAAClmC,KAAR,GAAgBymD,QAAhB,CAPM,CAOoB;;AAE1BA,MAAAA,QAAQ,GAAGT,aAAa,CAAEtb,MAAF,EAAU1uB,MAAV,EAAkBwqC,OAAlB,EAA2BH,QAA3B,CAAxB;;AAEA,WAAM,IAAIxnD,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK2nD,OAAvB,EAAgC,EAAG3nD,CAAnC,EAAuC;AAEtC4nD,QAAAA,QAAQ,CAAE5nD,CAAF,CAAR,GAAgB0mD,WAAW,CAAE1mD,CAAF,CAA3B;AAEA;;AAEDynD,MAAAA,kBAAkB,CAACI,aAAnB,GAAmCD,QAAnC;AACA,WAAKZ,eAAL,GAAuBxxB,gBAAgB,GAAG,KAAKuxB,SAAR,GAAoB,CAA3D;AACA,WAAKA,SAAL,IAAkBW,OAAlB;AAEA;AAGD,GAhDD;;AAkDA,WAASJ,gBAAT,GAA4B;AAE3B,QAAKjgB,OAAO,CAAClmC,KAAR,KAAkBulD,WAAvB,EAAqC;AAEpCrf,MAAAA,OAAO,CAAClmC,KAAR,GAAgBulD,WAAhB;AACArf,MAAAA,OAAO,CAACnzB,WAAR,GAAsByyC,eAAe,GAAG,CAAxC;AAEA;;AAEDjiB,IAAAA,KAAK,CAACqiB,SAAN,GAAkBJ,eAAlB;AACAjiB,IAAAA,KAAK,CAACsiB,eAAN,GAAwB,CAAxB;AAEA;;AAED,WAASG,aAAT,CAAwBtb,MAAxB,EAAgC1uB,MAAhC,EAAwChC,SAAxC,EAAmD2sC,aAAnD,EAAmE;AAElE,QAAMC,OAAO,GAAGlc,MAAM,KAAK,IAAX,GAAkBA,MAAM,CAAC3rC,MAAzB,GAAkC,CAAlD;AACA,QAAI0nD,QAAQ,GAAG,IAAf;;AAEA,QAAKG,OAAO,KAAK,CAAjB,EAAqB;AAEpBH,MAAAA,QAAQ,GAAGvgB,OAAO,CAAClmC,KAAnB;;AAEA,UAAK2mD,aAAa,KAAK,IAAlB,IAA0BF,QAAQ,KAAK,IAA5C,EAAmD;AAElD,YAAMI,QAAQ,GAAG7sC,SAAS,GAAG4sC,OAAO,GAAG,CAAvC;AAAA,YACCE,UAAU,GAAG9qC,MAAM,CAACE,kBADrB;AAGAypC,QAAAA,gBAAgB,CAACppB,eAAjB,CAAkCuqB,UAAlC;;AAEA,YAAKL,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAAC1nD,MAAT,GAAkB8nD,QAA5C,EAAuD;AAEtDJ,UAAAA,QAAQ,GAAG,IAAIviD,YAAJ,CAAkB2iD,QAAlB,CAAX;AAEA;;AAED,aAAM,IAAIhoD,CAAC,GAAG,CAAR,EAAWkoD,EAAE,GAAG/sC,SAAtB,EAAiCnb,CAAC,KAAK+nD,OAAvC,EAAgD,EAAG/nD,CAAH,EAAMkoD,EAAE,IAAI,CAA5D,EAAgE;AAE/D/mC,UAAAA,KAAK,CAAC9S,IAAN,CAAYw9B,MAAM,CAAE7rC,CAAF,CAAlB,EAA0Bod,YAA1B,CAAwC6qC,UAAxC,EAAoDnB,gBAApD;AAEA3lC,UAAAA,KAAK,CAAC7C,MAAN,CAAaqR,OAAb,CAAsBi4B,QAAtB,EAAgCM,EAAhC;AACAN,UAAAA,QAAQ,CAAEM,EAAE,GAAG,CAAP,CAAR,GAAqB/mC,KAAK,CAACC,QAA3B;AAEA;AAED;;AAEDimB,MAAAA,OAAO,CAAClmC,KAAR,GAAgBymD,QAAhB;AACAvgB,MAAAA,OAAO,CAACnzB,WAAR,GAAsB,IAAtB;AAEA;;AAEDwwB,IAAAA,KAAK,CAACqiB,SAAN,GAAkBgB,OAAlB;AACArjB,IAAAA,KAAK,CAACsiB,eAAN,GAAwB,CAAxB;AAEA,WAAOY,QAAP;AAEA;AAED;;AAED,SAASO,aAAT,CAAwB5e,QAAxB,EAAmC;AAElC,MAAIqV,QAAQ,GAAG,IAAIzQ,OAAJ,EAAf;;AAEA,WAASia,iBAAT,CAA4B5xC,OAA5B,EAAqCjE,OAArC,EAA+C;AAE9C,QAAKA,OAAO,KAAK1a,gCAAjB,EAAoD;AAEnD2e,MAAAA,OAAO,CAACjE,OAAR,GAAkB5a,qBAAlB;AAEA,KAJD,MAIO,IAAK4a,OAAO,KAAKza,gCAAjB,EAAoD;AAE1D0e,MAAAA,OAAO,CAACjE,OAAR,GAAkB3a,qBAAlB;AAEA;;AAED,WAAO4e,OAAP;AAEA;;AAED,WAASq4B,GAAT,CAAcr4B,OAAd,EAAwB;AAEvB,QAAKA,OAAO,IAAIA,OAAO,CAACxD,SAAnB,IAAgCwD,OAAO,CAAC5C,qBAAR,KAAkC,KAAvE,EAA+E;AAE9E,UAAMrB,OAAO,GAAGiE,OAAO,CAACjE,OAAxB;;AAEA,UAAKA,OAAO,KAAK1a,gCAAZ,IAAgD0a,OAAO,KAAKza,gCAAjE,EAAoG;AAEnG,YAAK8mD,QAAQ,CAACyG,GAAT,CAAc7uC,OAAd,CAAL,EAA+B;AAE9B,cAAM6xC,OAAO,GAAGzJ,QAAQ,CAAC/P,GAAT,CAAcr4B,OAAd,EAAwBA,OAAxC;AACA,iBAAO4xC,iBAAiB,CAAEC,OAAF,EAAW7xC,OAAO,CAACjE,OAAnB,CAAxB;AAEA,SALD,MAKO;AAEN,cAAMnC,KAAK,GAAGoG,OAAO,CAACpG,KAAtB;;AAEA,cAAKA,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAe,CAA7B,EAAiC;AAEhC,gBAAMq4B,YAAY,GAAG,IAAIoB,qBAAJ,CAA2B/5B,KAAK,CAACM,MAAN,GAAe,CAA1C,CAArB;AACAq4B,YAAAA,YAAY,CAACuf,0BAAb,CAAyC/e,QAAzC,EAAmD/yB,OAAnD;AACAooC,YAAAA,QAAQ,CAAC55C,GAAT,CAAcwR,OAAd,EAAuBuyB,YAAvB;AAEAvyB,YAAAA,OAAO,CAAC+xC,gBAAR,CAA0B,SAA1B,EAAqCC,gBAArC;AAEA,mBAAOJ,iBAAiB,CAAErf,YAAY,CAACvyB,OAAf,EAAwBA,OAAO,CAACjE,OAAhC,CAAxB;AAEA,WAVD,MAUO;AAEN;AAEA,mBAAO,IAAP;AAEA;AAED;AAED;AAED;;AAED,WAAOiE,OAAP;AAEA;;AAED,WAASgyC,gBAAT,CAA2B5oD,KAA3B,EAAmC;AAElC,QAAM4W,OAAO,GAAG5W,KAAK,CAACC,MAAtB;AAEA2W,IAAAA,OAAO,CAACiyC,mBAAR,CAA6B,SAA7B,EAAwCD,gBAAxC;AAEA,QAAMH,OAAO,GAAGzJ,QAAQ,CAAC/P,GAAT,CAAcr4B,OAAd,CAAhB;;AAEA,QAAK6xC,OAAO,KAAKhpD,SAAjB,EAA6B;AAE5Bu/C,MAAAA,QAAQ,CAAC7P,MAAT,CAAiBv4B,OAAjB;AACA6xC,MAAAA,OAAO,CAACxxC,OAAR;AAEA;AAED;;AAED,WAASA,OAAT,GAAmB;AAElB+nC,IAAAA,QAAQ,GAAG,IAAIzQ,OAAJ,EAAX;AAEA;;AAED,SAAO;AACNU,IAAAA,GAAG,EAAEA,GADC;AAENh4B,IAAAA,OAAO,EAAEA;AAFH,GAAP;AAKA;;IAEK6xC,kB;;;;;AAEL,gCAAoF;AAAA;;AAAA,QAAvE/9B,IAAuE,uEAAhE,CAAE,CAA8D;AAAA,QAA3DC,KAA2D,uEAAnD,CAAmD;AAAA,QAAhDC,GAAgD,uEAA1C,CAA0C;AAAA,QAAvCC,MAAuC,uEAA9B,CAAE,CAA4B;AAAA,QAAzBC,IAAyB,uEAAlB,GAAkB;AAAA,QAAbC,GAAa,uEAAP,IAAO;;AAAA;;AAEnF;AAEA,YAAK29B,oBAAL,GAA4B,IAA5B;AAEA,YAAKzpD,IAAL,GAAY,oBAAZ;AAEA,YAAKyoC,IAAL,GAAY,CAAZ;AACA,YAAKE,IAAL,GAAY,IAAZ;AAEA,YAAKld,IAAL,GAAYA,IAAZ;AACA,YAAKC,KAAL,GAAaA,KAAb;AACA,YAAKC,GAAL,GAAWA,GAAX;AACA,YAAKC,MAAL,GAAcA,MAAd;AAEA,YAAKC,IAAL,GAAYA,IAAZ;AACA,YAAKC,GAAL,GAAWA,GAAX;;AAEA,YAAKgd,sBAAL;;AAnBmF;AAqBnF;;;;WAED,cAAM/5B,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,mFAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAK1G,IAAL,GAAY1c,MAAM,CAAC0c,IAAnB;AACA,WAAKC,KAAL,GAAa3c,MAAM,CAAC2c,KAApB;AACA,WAAKC,GAAL,GAAW5c,MAAM,CAAC4c,GAAlB;AACA,WAAKC,MAAL,GAAc7c,MAAM,CAAC6c,MAArB;AACA,WAAKC,IAAL,GAAY9c,MAAM,CAAC8c,IAAnB;AACA,WAAKC,GAAL,GAAW/c,MAAM,CAAC+c,GAAlB;AAEA,WAAK2c,IAAL,GAAY15B,MAAM,CAAC05B,IAAnB;AACA,WAAKE,IAAL,GAAY55B,MAAM,CAAC45B,IAAP,KAAgB,IAAhB,GAAuB,IAAvB,GAA8B/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB9I,MAAM,CAAC45B,IAA1B,CAA1C;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAeS,SAAf,EAA0BC,UAA1B,EAAsC7mC,CAAtC,EAAyCM,CAAzC,EAA4CyO,KAA5C,EAAmDC,MAAnD,EAA4D;AAE3D,UAAK,KAAKm3B,IAAL,KAAc,IAAnB,EAA0B;AAEzB,aAAKA,IAAL,GAAY;AACXW,UAAAA,OAAO,EAAE,IADE;AAEXF,UAAAA,SAAS,EAAE,CAFA;AAGXC,UAAAA,UAAU,EAAE,CAHD;AAIXE,UAAAA,OAAO,EAAE,CAJE;AAKXC,UAAAA,OAAO,EAAE,CALE;AAMXj4B,UAAAA,KAAK,EAAE,CANI;AAOXC,UAAAA,MAAM,EAAE;AAPG,SAAZ;AAUA;;AAED,WAAKm3B,IAAL,CAAUW,OAAV,GAAoB,IAApB;AACA,WAAKX,IAAL,CAAUS,SAAV,GAAsBA,SAAtB;AACA,WAAKT,IAAL,CAAUU,UAAV,GAAuBA,UAAvB;AACA,WAAKV,IAAL,CAAUY,OAAV,GAAoB/mC,CAApB;AACA,WAAKmmC,IAAL,CAAUa,OAAV,GAAoB1mC,CAApB;AACA,WAAK6lC,IAAL,CAAUp3B,KAAV,GAAkBA,KAAlB;AACA,WAAKo3B,IAAL,CAAUn3B,MAAV,GAAmBA,MAAnB;AAEA,WAAKs3B,sBAAL;AAEA;;;WAED,2BAAkB;AAEjB,UAAK,KAAKH,IAAL,KAAc,IAAnB,EAA0B;AAEzB,aAAKA,IAAL,CAAUW,OAAV,GAAoB,KAApB;AAEA;;AAED,WAAKR,sBAAL;AAEA;;;WAED,kCAAyB;AAExB,UAAM5gC,EAAE,GAAG,CAAE,KAAKwjB,KAAL,GAAa,KAAKD,IAApB,KAA+B,IAAI,KAAKgd,IAAxC,CAAX;AACA,UAAMtgC,EAAE,GAAG,CAAE,KAAKwjB,GAAL,GAAW,KAAKC,MAAlB,KAA+B,IAAI,KAAK6c,IAAxC,CAAX;AACA,UAAM/7B,EAAE,GAAG,CAAE,KAAKgf,KAAL,GAAa,KAAKD,IAApB,IAA6B,CAAxC;AACA,UAAM9e,EAAE,GAAG,CAAE,KAAKgf,GAAL,GAAW,KAAKC,MAAlB,IAA6B,CAAxC;AAEA,UAAIH,IAAI,GAAG/e,EAAE,GAAGxE,EAAhB;AACA,UAAIwjB,KAAK,GAAGhf,EAAE,GAAGxE,EAAjB;AACA,UAAIyjB,GAAG,GAAGhf,EAAE,GAAGxE,EAAf;AACA,UAAIyjB,MAAM,GAAGjf,EAAE,GAAGxE,EAAlB;;AAEA,UAAK,KAAKwgC,IAAL,KAAc,IAAd,IAAsB,KAAKA,IAAL,CAAUW,OAArC,EAA+C;AAE9C,YAAMogB,MAAM,GAAG,CAAE,KAAKh+B,KAAL,GAAa,KAAKD,IAApB,IAA6B,KAAKkd,IAAL,CAAUS,SAAvC,GAAmD,KAAKX,IAAvE;AACA,YAAMkhB,MAAM,GAAG,CAAE,KAAKh+B,GAAL,GAAW,KAAKC,MAAlB,IAA6B,KAAK+c,IAAL,CAAUU,UAAvC,GAAoD,KAAKZ,IAAxE;AAEAhd,QAAAA,IAAI,IAAIi+B,MAAM,GAAG,KAAK/gB,IAAL,CAAUY,OAA3B;AACA7d,QAAAA,KAAK,GAAGD,IAAI,GAAGi+B,MAAM,GAAG,KAAK/gB,IAAL,CAAUp3B,KAAlC;AACAoa,QAAAA,GAAG,IAAIg+B,MAAM,GAAG,KAAKhhB,IAAL,CAAUa,OAA1B;AACA5d,QAAAA,MAAM,GAAGD,GAAG,GAAGg+B,MAAM,GAAG,KAAKhhB,IAAL,CAAUn3B,MAAlC;AAEA;;AAED,WAAK4M,gBAAL,CAAsBwrC,gBAAtB,CAAwCn+B,IAAxC,EAA8CC,KAA9C,EAAqDC,GAArD,EAA0DC,MAA1D,EAAkE,KAAKC,IAAvE,EAA6E,KAAKC,GAAlF;AAEA,WAAKzN,uBAAL,CAA6BlP,IAA7B,CAAmC,KAAKiP,gBAAxC,EAA2DlS,MAA3D;AAEA;;;WAED,gBAAQqG,IAAR,EAAe;AAEd,UAAMJ,IAAI,kFAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC0O,MAAL,CAAY4nB,IAAZ,GAAmB,KAAKA,IAAxB;AACAt2B,MAAAA,IAAI,CAAC0O,MAAL,CAAY4K,IAAZ,GAAmB,KAAKA,IAAxB;AACAtZ,MAAAA,IAAI,CAAC0O,MAAL,CAAY6K,KAAZ,GAAoB,KAAKA,KAAzB;AACAvZ,MAAAA,IAAI,CAAC0O,MAAL,CAAY8K,GAAZ,GAAkB,KAAKA,GAAvB;AACAxZ,MAAAA,IAAI,CAAC0O,MAAL,CAAY+K,MAAZ,GAAqB,KAAKA,MAA1B;AACAzZ,MAAAA,IAAI,CAAC0O,MAAL,CAAYgL,IAAZ,GAAmB,KAAKA,IAAxB;AACA1Z,MAAAA,IAAI,CAAC0O,MAAL,CAAYiL,GAAZ,GAAkB,KAAKA,GAAvB;AAEA,UAAK,KAAK6c,IAAL,KAAc,IAAnB,EAA0Bx2B,IAAI,CAAC0O,MAAL,CAAY8nB,IAAZ,GAAmB/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB,KAAK8wB,IAAxB,CAAnB;AAE1B,aAAOx2B,IAAP;AAEA;;;;EAjI+Bi2B,M;;AAqIjC,IAAMyhB,OAAO,GAAG,CAAhB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,eAAe,GAAG,CAAE,KAAF,EAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAAxB,C,CAEA;AACA;;AACA,IAAMC,WAAW,GAAG,EAApB;;AAEA,IAAMC,WAAW,GAAG,aAAc,IAAIR,kBAAJ,EAAlC;;AACA,IAAMS,WAAW,GAAG,aAAc,IAAIj7C,KAAJ,EAAlC;;AACA,IAAIk7C,UAAU,GAAG,IAAjB,C,CAEA;;AACA,IAAMC,GAAG,GAAG,CAAE,IAAI9oD,IAAI,CAACyG,IAAL,CAAW,CAAX,CAAN,IAAyB,CAArC;AACA,IAAMsiD,OAAO,GAAG,IAAID,GAApB,C,CAEA;AACA;;AACA,IAAME,eAAe,GAAG,CACvB,aAAc,IAAIntC,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADS,EAEvB,aAAc,IAAIA,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAFS,EAGvB,aAAc,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAE,CAArB,CAHS,EAIvB,aAAc,IAAIA,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAAE,CAAvB,CAJS,EAKvB,aAAc,IAAIA,OAAJ,CAAa,CAAb,EAAgBitC,GAAhB,EAAqBC,OAArB,CALS,EAMvB,aAAc,IAAIltC,OAAJ,CAAa,CAAb,EAAgBitC,GAAhB,EAAqB,CAAEC,OAAvB,CANS,EAOvB,aAAc,IAAIltC,OAAJ,CAAaktC,OAAb,EAAsB,CAAtB,EAAyBD,GAAzB,CAPS,EAQvB,aAAc,IAAIjtC,OAAJ,CAAa,CAAEktC,OAAf,EAAwB,CAAxB,EAA2BD,GAA3B,CARS,EASvB,aAAc,IAAIjtC,OAAJ,CAAaitC,GAAb,EAAkBC,OAAlB,EAA2B,CAA3B,CATS,EAUvB,aAAc,IAAIltC,OAAJ,CAAa,CAAEitC,GAAf,EAAoBC,OAApB,EAA6B,CAA7B,CAVS,CAAxB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEME,c;AAEL,0BAAajgB,QAAb,EAAwB;AAAA;;AAEvB,SAAKkgB,SAAL,GAAiBlgB,QAAjB;AACA,SAAKmgB,qBAAL,GAA6B,IAA7B;AAEA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;AAEA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,iBAAL,GAAyB,IAAzB;;AAEA,SAAKC,gBAAL,CAAuB,KAAKH,aAA5B;AAEA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;;WACC,mBAAWxgB,KAAX,EAAqD;AAAA,UAAnC4gB,KAAmC,uEAA3B,CAA2B;AAAA,UAAxBr/B,IAAwB,uEAAjB,GAAiB;AAAA,UAAZC,GAAY,uEAAN,GAAM;AAEpDo+B,MAAAA,UAAU,GAAG,KAAKK,SAAL,CAAe/f,eAAf,EAAb;;AAEA,WAAK2gB,QAAL,CAAe,GAAf;;AAEA,UAAMC,kBAAkB,GAAG,KAAKC,gBAAL,EAA3B;;AACAD,MAAAA,kBAAkB,CAAC7zC,WAAnB,GAAiC,IAAjC;;AAEA,WAAK+zC,cAAL,CAAqBhhB,KAArB,EAA4Bze,IAA5B,EAAkCC,GAAlC,EAAuCs/B,kBAAvC;;AAEA,UAAKF,KAAK,GAAG,CAAb,EAAiB;AAEhB,aAAKK,KAAL,CAAYH,kBAAZ,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCF,KAAtC;AAEA;;AAED,WAAKM,WAAL,CAAkBJ,kBAAlB;;AACA,WAAKK,QAAL,CAAeL,kBAAf;;AAEA,aAAOA,kBAAP;AAEA;AAED;AACD;AACA;AACA;AACA;;;;WACC,6BAAqBM,eAArB,EAA4D;AAAA,UAAtB7hB,YAAsB,uEAAP,IAAO;AAE3D,aAAO,KAAK8hB,YAAL,CAAmBD,eAAnB,EAAoC7hB,YAApC,CAAP;AAEA;AAED;AACD;AACA;AACA;AACA;;;;WACC,qBAAasf,OAAb,EAA4C;AAAA,UAAtBtf,YAAsB,uEAAP,IAAO;AAE3C,aAAO,KAAK8hB,YAAL,CAAmBxC,OAAnB,EAA4Btf,YAA5B,CAAP;AAEA;AAED;AACD;AACA;AACA;;;;WACC,gCAAuB;AAEtB,UAAK,KAAKkhB,gBAAL,KAA0B,IAA/B,EAAsC;AAErC,aAAKA,gBAAL,GAAwBa,mBAAmB,EAA3C;;AACA,aAAKX,gBAAL,CAAuB,KAAKF,gBAA5B;AAEA;AAED;AAED;AACD;AACA;AACA;;;;WACC,wCAA+B;AAE9B,UAAK,KAAKC,iBAAL,KAA2B,IAAhC,EAAuC;AAEtC,aAAKA,iBAAL,GAAyBa,oBAAoB,EAA7C;;AACA,aAAKZ,gBAAL,CAAuB,KAAKD,iBAA5B;AAEA;AAED;AAED;AACD;AACA;AACA;AACA;;;;WACC,mBAAU;AAET,WAAKc,QAAL;;AAEA,UAAK,KAAKf,gBAAL,KAA0B,IAA/B,EAAsC,KAAKA,gBAAL,CAAsBpzC,OAAtB;AACtC,UAAK,KAAKqzC,iBAAL,KAA2B,IAAhC,EAAuC,KAAKA,iBAAL,CAAuBrzC,OAAvB;AAEvC,K,CAED;;;;WAEA,kBAAUo0C,QAAV,EAAqB;AAEpB,WAAKtB,OAAL,GAAeppD,IAAI,CAACuC,KAAL,CAAYvC,IAAI,CAAC2qD,IAAL,CAAWD,QAAX,CAAZ,CAAf;AACA,WAAKrB,SAAL,GAAiBrpD,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAa,KAAKgmD,OAAlB,CAAjB;AAEA;;;WAED,oBAAW;AAEV,UAAK,KAAKK,aAAL,KAAuB,IAA5B,EAAmC,KAAKA,aAAL,CAAmBnzC,OAAnB;AAEnC,UAAK,KAAK6yC,qBAAL,KAA+B,IAApC,EAA2C,KAAKA,qBAAL,CAA2B7yC,OAA3B;;AAE3C,WAAM,IAAI7W,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK6pD,UAAL,CAAgB3pD,MAArC,EAA6CF,CAAC,EAA9C,EAAoD;AAEnD,aAAK6pD,UAAL,CAAiB7pD,CAAjB,EAAqB6W,OAArB;AAEA;AAED;;;WAED,kBAAUs0C,YAAV,EAAyB;AAExB,WAAK1B,SAAL,CAAe1f,eAAf,CAAgCqf,UAAhC;;AACA+B,MAAAA,YAAY,CAAC70C,WAAb,GAA2B,KAA3B;;AACA80C,MAAAA,YAAY,CAAED,YAAF,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBA,YAAY,CAAC16C,KAAnC,EAA0C06C,YAAY,CAACz6C,MAAvD,CAAZ;AAEA;;;WAED,sBAAc8F,OAAd,EAAuBuyB,YAAvB,EAAsC;AAErC,UAAKvyB,OAAO,CAACjE,OAAR,KAAoB5a,qBAApB,IAA6C6e,OAAO,CAACjE,OAAR,KAAoB3a,qBAAtE,EAA8F;AAE7F,aAAKyyD,QAAL,CAAe7zC,OAAO,CAACpG,KAAR,CAAclQ,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAoCsW,OAAO,CAACpG,KAAR,CAAe,CAAf,EAAmBK,KAAnB,IAA4B+F,OAAO,CAACpG,KAAR,CAAe,CAAf,EAAmBA,KAAnB,CAAyBK,KAAxG;AAEA,OAJD,MAIO;AAAE;AAER,aAAK45C,QAAL,CAAe7zC,OAAO,CAACpG,KAAR,CAAcK,KAAd,GAAsB,CAArC;AAEA;;AAED24C,MAAAA,UAAU,GAAG,KAAKK,SAAL,CAAe/f,eAAf,EAAb;;AAEA,UAAM4gB,kBAAkB,GAAGvhB,YAAY,IAAI,KAAKwhB,gBAAL,EAA3C;;AACA,WAAKc,gBAAL,CAAuB70C,OAAvB,EAAgC8zC,kBAAhC;;AACA,WAAKI,WAAL,CAAkBJ,kBAAlB;;AACA,WAAKK,QAAL,CAAeL,kBAAf;;AAEA,aAAOA,kBAAP;AAEA;;;WAED,4BAAmB;AAElB,UAAM75C,KAAK,GAAG,IAAIlQ,IAAI,CAACc,GAAL,CAAU,KAAKuoD,SAAf,EAA0B,KAAK,CAA/B,CAAlB;AACA,UAAMl5C,MAAM,GAAG,IAAI,KAAKk5C,SAAxB;AAEA,UAAM0B,MAAM,GAAG;AACd34C,QAAAA,SAAS,EAAEna,YADG;AAEdoa,QAAAA,SAAS,EAAEpa,YAFG;AAGd8a,QAAAA,eAAe,EAAE,KAHH;AAIdpU,QAAAA,IAAI,EAAE9F,aAJQ;AAKdyZ,QAAAA,MAAM,EAAEnZ,UALM;AAMdqZ,QAAAA,QAAQ,EAAEnW,cANI;AAOd6Z,QAAAA,WAAW,EAAE;AAPC,OAAf;;AAUA,UAAM6zC,kBAAkB,GAAGiB,mBAAmB,CAAE96C,KAAF,EAASC,MAAT,EAAiB46C,MAAjB,CAA9C;;AAEA,UAAK,KAAK5B,qBAAL,KAA+B,IAA/B,IAAuC,KAAKA,qBAAL,CAA2Bj5C,KAA3B,KAAqCA,KAAjF,EAAyF;AAExF,YAAK,KAAKi5C,qBAAL,KAA+B,IAApC,EAA2C;AAE1C,eAAKsB,QAAL;AAEA;;AAED,aAAKtB,qBAAL,GAA6B6B,mBAAmB,CAAE96C,KAAF,EAASC,MAAT,EAAiB46C,MAAjB,CAAhD;AAEA,YAAQ3B,OAAR,GAAoB,IAApB,CAAQA,OAAR;;AAVwF,6BAWL6B,aAAa,CAAE7B,OAAF,CAXR;;AAW1E,aAAKG,SAXqE,kBAWpF2B,QAXoF;AAW/C,aAAK5B,UAX0C,kBAW1D6B,SAX0D;AAWtB,aAAK3B,OAXiB,kBAW9B4B,MAX8B;AAaxF,aAAK3B,aAAL,GAAqB4B,cAAc,CAAEjC,OAAF,EAAWl5C,KAAX,EAAkBC,MAAlB,CAAnC;AAEA;;AAED,aAAO45C,kBAAP;AAEA;;;WAED,0BAAkBx5B,QAAlB,EAA6B;AAE5B,UAAM+6B,OAAO,GAAG,IAAI7oB,IAAJ,CAAU,KAAK6mB,UAAL,CAAiB,CAAjB,CAAV,EAAgC/4B,QAAhC,CAAhB;;AACA,WAAK24B,SAAL,CAAeqC,OAAf,CAAwBD,OAAxB,EAAiC3C,WAAjC;AAEA;;;WAED,wBAAgB1f,KAAhB,EAAuBze,IAAvB,EAA6BC,GAA7B,EAAkCs/B,kBAAlC,EAAuD;AAEtD,UAAM9iB,GAAG,GAAG,EAAZ;AACA,UAAMC,MAAM,GAAG,CAAf;AACA,UAAMskB,UAAU,GAAG,IAAIxkB,iBAAJ,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC1c,IAApC,EAA0CC,GAA1C,CAAnB;AACA,UAAMghC,MAAM,GAAG,CAAE,CAAF,EAAK,CAAE,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACA,UAAMC,WAAW,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAE,CAAb,EAAgB,CAAE,CAAlB,EAAqB,CAAE,CAAvB,CAApB;AACA,UAAM1iB,QAAQ,GAAG,KAAKkgB,SAAtB;AAEA,UAAMyC,iBAAiB,GAAG3iB,QAAQ,CAACqW,SAAnC;AACA,UAAMhW,WAAW,GAAGL,QAAQ,CAACK,WAA7B;AACAL,MAAAA,QAAQ,CAAC8W,aAAT,CAAwB8I,WAAxB;AAEA5f,MAAAA,QAAQ,CAACK,WAAT,GAAuBxyC,aAAvB;AACAmyC,MAAAA,QAAQ,CAACqW,SAAT,GAAqB,KAArB;AAEA,UAAMuM,kBAAkB,GAAG,IAAIvxB,iBAAJ,CAAuB;AACjDluB,QAAAA,IAAI,EAAE,kBAD2C;AAEjDwnB,QAAAA,IAAI,EAAEn/B,QAF2C;AAGjD+/B,QAAAA,UAAU,EAAE,KAHqC;AAIjDD,QAAAA,SAAS,EAAE;AAJsC,OAAvB,CAA3B;AAOA,UAAMu3B,aAAa,GAAG,IAAIppB,IAAJ,CAAU,IAAIsB,WAAJ,EAAV,EAA6B6nB,kBAA7B,CAAtB;AAEA,UAAIE,aAAa,GAAG,KAApB;AACA,UAAMl8B,UAAU,GAAGqZ,KAAK,CAACrZ,UAAzB;;AAEA,UAAKA,UAAL,EAAkB;AAEjB,YAAKA,UAAU,CAAChiB,OAAhB,EAA0B;AAEzBg+C,UAAAA,kBAAkB,CAAC/+C,KAAnB,CAAyBiB,IAAzB,CAA+B8hB,UAA/B;AACAqZ,UAAAA,KAAK,CAACrZ,UAAN,GAAmB,IAAnB;AACAk8B,UAAAA,aAAa,GAAG,IAAhB;AAEA;AAED,OAVD,MAUO;AAENF,QAAAA,kBAAkB,CAAC/+C,KAAnB,CAAyBiB,IAAzB,CAA+B86C,WAA/B;AACAkD,QAAAA,aAAa,GAAG,IAAhB;AAEA;;AAED,WAAM,IAAIrsD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAMssD,GAAG,GAAGtsD,CAAC,GAAG,CAAhB;;AAEA,YAAKssD,GAAG,KAAK,CAAb,EAAiB;AAEhBP,UAAAA,UAAU,CAACvjC,EAAX,CAAcxjB,GAAd,CAAmB,CAAnB,EAAsBgnD,MAAM,CAAEhsD,CAAF,CAA5B,EAAmC,CAAnC;AACA+rD,UAAAA,UAAU,CAACt9B,MAAX,CAAmBw9B,WAAW,CAAEjsD,CAAF,CAA9B,EAAqC,CAArC,EAAwC,CAAxC;AAEA,SALD,MAKO,IAAKssD,GAAG,KAAK,CAAb,EAAiB;AAEvBP,UAAAA,UAAU,CAACvjC,EAAX,CAAcxjB,GAAd,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBgnD,MAAM,CAAEhsD,CAAF,CAA/B;AACA+rD,UAAAA,UAAU,CAACt9B,MAAX,CAAmB,CAAnB,EAAsBw9B,WAAW,CAAEjsD,CAAF,CAAjC,EAAwC,CAAxC;AAEA,SALM,MAKA;AAEN+rD,UAAAA,UAAU,CAACvjC,EAAX,CAAcxjB,GAAd,CAAmB,CAAnB,EAAsBgnD,MAAM,CAAEhsD,CAAF,CAA5B,EAAmC,CAAnC;AACA+rD,UAAAA,UAAU,CAACt9B,MAAX,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBw9B,WAAW,CAAEjsD,CAAF,CAApC;AAEA;;AAED,YAAMiP,IAAI,GAAG,KAAK26C,SAAlB;;AAEAwB,QAAAA,YAAY,CAAEd,kBAAF,EAAsBgC,GAAG,GAAGr9C,IAA5B,EAAkCjP,CAAC,GAAG,CAAJ,GAAQiP,IAAR,GAAe,CAAjD,EAAoDA,IAApD,EAA0DA,IAA1D,CAAZ;;AAEAs6B,QAAAA,QAAQ,CAACQ,eAAT,CAA0BugB,kBAA1B;;AAEA,YAAK+B,aAAL,EAAqB;AAEpB9iB,UAAAA,QAAQ,CAACS,MAAT,CAAiBoiB,aAAjB,EAAgCL,UAAhC;AAEA;;AAEDxiB,QAAAA,QAAQ,CAACS,MAAT,CAAiBR,KAAjB,EAAwBuiB,UAAxB;AAEA;;AAEDK,MAAAA,aAAa,CAAC5rC,QAAd,CAAuB3J,OAAvB;AACAu1C,MAAAA,aAAa,CAACt7B,QAAd,CAAuBja,OAAvB;AAEA0yB,MAAAA,QAAQ,CAACK,WAAT,GAAuBA,WAAvB;AACAL,MAAAA,QAAQ,CAACqW,SAAT,GAAqBsM,iBAArB;AACA1iB,MAAAA,KAAK,CAACrZ,UAAN,GAAmBA,UAAnB;AAEA;;;WAED,0BAAkB3Z,OAAlB,EAA2B8zC,kBAA3B,EAAgD;AAE/C,UAAM/gB,QAAQ,GAAG,KAAKkgB,SAAtB;AAEA,UAAMvf,aAAa,GAAK1zB,OAAO,CAACjE,OAAR,KAAoB5a,qBAApB,IAA6C6e,OAAO,CAACjE,OAAR,KAAoB3a,qBAAzF;;AAEA,UAAKsyC,aAAL,EAAqB;AAEpB,YAAK,KAAK+f,gBAAL,KAA0B,IAA/B,EAAsC;AAErC,eAAKA,gBAAL,GAAwBa,mBAAmB,EAA3C;AAEA;;AAED,aAAKb,gBAAL,CAAsBlkB,QAAtB,CAA+BwU,UAA/B,CAA0Cp5C,KAA1C,GAAoDqV,OAAO,CAAC5C,qBAAR,KAAkC,KAApC,GAA8C,CAAE,CAAhD,GAAoD,CAAtG;AAEA,OAVD,MAUO;AAEN,YAAK,KAAKs2C,iBAAL,KAA2B,IAAhC,EAAuC;AAEtC,eAAKA,iBAAL,GAAyBa,oBAAoB,EAA7C;AAEA;AAED;;AAED,UAAMj6B,QAAQ,GAAGoZ,aAAa,GAAG,KAAK+f,gBAAR,GAA2B,KAAKC,iBAA9D;AACA,UAAM5f,IAAI,GAAG,IAAItH,IAAJ,CAAU,KAAK6mB,UAAL,CAAiB,CAAjB,CAAV,EAAgC/4B,QAAhC,CAAb;AAEA,UAAMiV,QAAQ,GAAGjV,QAAQ,CAACiV,QAA1B;AAEAA,MAAAA,QAAQ,CAAE,QAAF,CAAR,CAAqB5kC,KAArB,GAA6BqV,OAA7B;AAEA,UAAMvH,IAAI,GAAG,KAAK26C,SAAlB;;AAEAwB,MAAAA,YAAY,CAAEd,kBAAF,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,IAAIr7C,IAAhC,EAAsC,IAAIA,IAA1C,CAAZ;;AAEAs6B,MAAAA,QAAQ,CAACQ,eAAT,CAA0BugB,kBAA1B;AACA/gB,MAAAA,QAAQ,CAACS,MAAT,CAAiBM,IAAjB,EAAuB4e,WAAvB;AAEA;;;WAED,qBAAaoB,kBAAb,EAAkC;AAEjC,UAAM/gB,QAAQ,GAAG,KAAKkgB,SAAtB;AACA,UAAM7J,SAAS,GAAGrW,QAAQ,CAACqW,SAA3B;AACArW,MAAAA,QAAQ,CAACqW,SAAT,GAAqB,KAArB;;AAEA,WAAM,IAAI5/C,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK6pD,UAAL,CAAgB3pD,MAArC,EAA6CF,CAAC,EAA9C,EAAoD;AAEnD,YAAMoqD,KAAK,GAAG7pD,IAAI,CAACyG,IAAL,CAAW,KAAK+iD,OAAL,CAAc/pD,CAAd,IAAoB,KAAK+pD,OAAL,CAAc/pD,CAAd,CAApB,GAAwC,KAAK+pD,OAAL,CAAc/pD,CAAC,GAAG,CAAlB,IAAwB,KAAK+pD,OAAL,CAAc/pD,CAAC,GAAG,CAAlB,CAA3E,CAAd;AAEA,YAAMusD,QAAQ,GAAGhD,eAAe,CAAE,CAAEvpD,CAAC,GAAG,CAAN,IAAYupD,eAAe,CAACrpD,MAA9B,CAAhC;;AAEA,aAAKuqD,KAAL,CAAYH,kBAAZ,EAAgCtqD,CAAC,GAAG,CAApC,EAAuCA,CAAvC,EAA0CoqD,KAA1C,EAAiDmC,QAAjD;AAEA;;AAEDhjB,MAAAA,QAAQ,CAACqW,SAAT,GAAqBA,SAArB;AAEA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,eAAO0K,kBAAP,EAA2BkC,KAA3B,EAAkCC,MAAlC,EAA0CrC,KAA1C,EAAiDmC,QAAjD,EAA4D;AAE3D,UAAMG,oBAAoB,GAAG,KAAKhD,qBAAlC;;AAEA,WAAKiD,SAAL,CACCrC,kBADD,EAECoC,oBAFD,EAGCF,KAHD,EAICC,MAJD,EAKCrC,KALD,EAMC,aAND,EAOCmC,QAPD;;AASA,WAAKI,SAAL,CACCD,oBADD,EAECpC,kBAFD,EAGCmC,MAHD,EAICA,MAJD,EAKCrC,KALD,EAMC,cAND,EAOCmC,QAPD;AASA;;;WAED,mBAAWK,QAAX,EAAqBC,SAArB,EAAgCL,KAAhC,EAAuCC,MAAvC,EAA+CK,YAA/C,EAA6DxoC,SAA7D,EAAwEioC,QAAxE,EAAmF;AAElF,UAAMhjB,QAAQ,GAAG,KAAKkgB,SAAtB;AACA,UAAMsD,YAAY,GAAG,KAAK/C,aAA1B;;AAEA,UAAK1lC,SAAS,KAAK,aAAd,IAA+BA,SAAS,KAAK,cAAlD,EAAmE;AAElErf,QAAAA,OAAO,CAACkD,KAAR,CACC,4DADD;AAGA,OAViF,CAYlF;;;AACA,UAAM6kD,mBAAmB,GAAG,CAA5B;AAEA,UAAMC,QAAQ,GAAG,IAAIjqB,IAAJ,CAAU,KAAK6mB,UAAL,CAAiB4C,MAAjB,CAAV,EAAqCM,YAArC,CAAjB;AACA,UAAMG,YAAY,GAAGH,YAAY,CAAChnB,QAAlC;AAEA,UAAMonB,MAAM,GAAG,KAAKrD,SAAL,CAAgB0C,KAAhB,IAA0B,CAAzC;AACA,UAAMY,eAAe,GAAGttB,QAAQ,CAAEgtB,YAAF,CAAR,GAA2BvsD,IAAI,CAACC,EAAL,IAAY,IAAI2sD,MAAhB,CAA3B,GAAsD,IAAI5sD,IAAI,CAACC,EAAT,IAAgB,IAAIyoD,WAAJ,GAAkB,CAAlC,CAA9E;AACA,UAAMoE,WAAW,GAAGP,YAAY,GAAGM,eAAnC;AACA,UAAMx2C,OAAO,GAAGkpB,QAAQ,CAAEgtB,YAAF,CAAR,GAA2B,IAAIvsD,IAAI,CAACuC,KAAL,CAAYkqD,mBAAmB,GAAGK,WAAlC,CAA/B,GAAiFpE,WAAjG;;AAEA,UAAKryC,OAAO,GAAGqyC,WAAf,EAA6B;AAE5BhkD,QAAAA,OAAO,CAACC,IAAR,yBACC4nD,YADD,2DAECl2C,OAFD,iDAE+CqyC,WAF/C;AAIA;;AAED,UAAMqE,OAAO,GAAG,EAAhB;AACA,UAAIC,GAAG,GAAG,CAAV;;AAEA,WAAM,IAAIvtD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGipD,WAArB,EAAkC,EAAGjpD,CAArC,EAAyC;AAExC,YAAM0B,GAAC,GAAG1B,CAAC,GAAGqtD,WAAd;;AACA,YAAMG,MAAM,GAAGjtD,IAAI,CAAC+B,GAAL,CAAU,CAAEZ,GAAF,GAAMA,GAAN,GAAU,CAApB,CAAf;AACA4rD,QAAAA,OAAO,CAAC9tD,IAAR,CAAcguD,MAAd;;AAEA,YAAKxtD,CAAC,KAAK,CAAX,EAAe;AAEdutD,UAAAA,GAAG,IAAIC,MAAP;AAEA,SAJD,MAIO,IAAKxtD,CAAC,GAAG4W,OAAT,EAAmB;AAEzB22C,UAAAA,GAAG,IAAI,IAAIC,MAAX;AAEA;AAED;;AAED,WAAM,IAAIxtD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGstD,OAAO,CAACptD,MAA7B,EAAqCF,IAAC,EAAtC,EAA4C;AAE3CstD,QAAAA,OAAO,CAAEttD,IAAF,CAAP,GAAestD,OAAO,CAAEttD,IAAF,CAAP,GAAeutD,GAA9B;AAEA;;AAEDL,MAAAA,YAAY,CAAE,QAAF,CAAZ,CAAyB/rD,KAAzB,GAAiCyrD,QAAQ,CAACp2C,OAA1C;AACA02C,MAAAA,YAAY,CAAE,SAAF,CAAZ,CAA0B/rD,KAA1B,GAAkCyV,OAAlC;AACAs2C,MAAAA,YAAY,CAAE,SAAF,CAAZ,CAA0B/rD,KAA1B,GAAkCmsD,OAAlC;AACAJ,MAAAA,YAAY,CAAE,aAAF,CAAZ,CAA8B/rD,KAA9B,GAAsCmjB,SAAS,KAAK,aAApD;;AAEA,UAAKioC,QAAL,EAAgB;AAEfW,QAAAA,YAAY,CAAE,UAAF,CAAZ,CAA2B/rD,KAA3B,GAAmCorD,QAAnC;AAEA;;AAED,UAAQ5C,OAAR,GAAoB,IAApB,CAAQA,OAAR;AACAuD,MAAAA,YAAY,CAAE,QAAF,CAAZ,CAAyB/rD,KAAzB,GAAiCisD,eAAjC;AACAF,MAAAA,YAAY,CAAE,QAAF,CAAZ,CAAyB/rD,KAAzB,GAAiCwoD,OAAO,GAAG6C,KAA3C;AAEA,UAAMiB,UAAU,GAAG,KAAK3D,SAAL,CAAgB2C,MAAhB,CAAnB;AACA,UAAM/qD,CAAC,GAAG,IAAI+rD,UAAJ,IAAmBhB,MAAM,GAAG9C,OAAO,GAAGZ,OAAnB,GAA6B0D,MAAM,GAAG9C,OAAT,GAAmBZ,OAAhD,GAA0D,CAA7E,CAAV;AACA,UAAM/mD,CAAC,GAAG,KAAM,KAAK4nD,SAAL,GAAiB6D,UAAvB,CAAV;;AAEArC,MAAAA,YAAY,CAAEyB,SAAF,EAAanrD,CAAb,EAAgBM,CAAhB,EAAmB,IAAIyrD,UAAvB,EAAmC,IAAIA,UAAvC,CAAZ;;AACAlkB,MAAAA,QAAQ,CAACQ,eAAT,CAA0B8iB,SAA1B;AACAtjB,MAAAA,QAAQ,CAACS,MAAT,CAAiBijB,QAAjB,EAA2B/D,WAA3B;AAEA;;;;;;AAMF,SAASsC,aAAT,CAAwBkC,MAAxB,EAAiC;AAEhC,MAAMhC,SAAS,GAAG,EAAlB;AACA,MAAMD,QAAQ,GAAG,EAAjB;AACA,MAAME,MAAM,GAAG,EAAf;AAEA,MAAIgC,GAAG,GAAGD,MAAV;AAEA,MAAME,SAAS,GAAGF,MAAM,GAAG3E,OAAT,GAAmB,CAAnB,GAAuBC,eAAe,CAAC9oD,MAAzD;;AAEA,OAAM,IAAIF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG4tD,SAArB,EAAgC5tD,CAAC,EAAjC,EAAuC;AAEtC,QAAM6tD,OAAO,GAAGttD,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAagqD,GAAb,CAAhB;AACAlC,IAAAA,QAAQ,CAACjsD,IAAT,CAAequD,OAAf;AACA,QAAIzD,KAAK,GAAG,MAAMyD,OAAlB;;AAEA,QAAK7tD,CAAC,GAAG0tD,MAAM,GAAG3E,OAAlB,EAA4B;AAE3BqB,MAAAA,KAAK,GAAGpB,eAAe,CAAEhpD,CAAC,GAAG0tD,MAAJ,GAAa3E,OAAb,GAAuB,CAAzB,CAAvB;AAEA,KAJD,MAIO,IAAK/oD,CAAC,KAAK,CAAX,EAAe;AAErBoqD,MAAAA,KAAK,GAAG,CAAR;AAEA;;AAEDuB,IAAAA,MAAM,CAACnsD,IAAP,CAAa4qD,KAAb;AAEA,QAAM0D,SAAS,GAAG,OAAQD,OAAO,GAAG,CAAlB,CAAlB;AACA,QAAMzsD,GAAG,GAAG,CAAE0sD,SAAd;AACA,QAAMzsD,GAAG,GAAG,IAAIysD,SAAhB;AACA,QAAMv7B,GAAG,GAAG,CAAEnxB,GAAF,EAAOA,GAAP,EAAYC,GAAZ,EAAiBD,GAAjB,EAAsBC,GAAtB,EAA2BA,GAA3B,EAAgCD,GAAhC,EAAqCA,GAArC,EAA0CC,GAA1C,EAA+CA,GAA/C,EAAoDD,GAApD,EAAyDC,GAAzD,CAAZ;AAEA,QAAM0sD,SAAS,GAAG,CAAlB;AACA,QAAMppB,QAAQ,GAAG,CAAjB;AACA,QAAMqpB,YAAY,GAAG,CAArB;AACA,QAAMC,MAAM,GAAG,CAAf;AACA,QAAMC,aAAa,GAAG,CAAtB;AAEA,QAAMxtC,QAAQ,GAAG,IAAIrb,YAAJ,CAAkB2oD,YAAY,GAAGrpB,QAAf,GAA0BopB,SAA5C,CAAjB;AACA,QAAMt5C,EAAE,GAAG,IAAIpP,YAAJ,CAAkB4oD,MAAM,GAAGtpB,QAAT,GAAoBopB,SAAtC,CAAX;AACA,QAAMjqB,SAAS,GAAG,IAAIz+B,YAAJ,CAAkB6oD,aAAa,GAAGvpB,QAAhB,GAA2BopB,SAA7C,CAAlB;;AAEA,SAAM,IAAIhqB,IAAI,GAAG,CAAjB,EAAoBA,IAAI,GAAGgqB,SAA3B,EAAsChqB,IAAI,EAA1C,EAAgD;AAE/C,UAAMriC,CAAC,GAAKqiC,IAAI,GAAG,CAAT,GAAe,CAAf,GAAmB,CAAnB,GAAuB,CAAjC;AACA,UAAM/hC,CAAC,GAAG+hC,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAE,CAA3B;AACA,UAAMoqB,WAAW,GAAG,CACnBzsD,CADmB,EAChBM,CADgB,EACb,CADa,EAEnBN,CAAC,GAAG,IAAI,CAFW,EAERM,CAFQ,EAEL,CAFK,EAGnBN,CAAC,GAAG,IAAI,CAHW,EAGRM,CAAC,GAAG,CAHI,EAGD,CAHC,EAInBN,CAJmB,EAIhBM,CAJgB,EAIb,CAJa,EAKnBN,CAAC,GAAG,IAAI,CALW,EAKRM,CAAC,GAAG,CALI,EAKD,CALC,EAMnBN,CANmB,EAMhBM,CAAC,GAAG,CANY,EAMT,CANS,CAApB;AAQA0e,MAAAA,QAAQ,CAAC1b,GAAT,CAAcmpD,WAAd,EAA2BH,YAAY,GAAGrpB,QAAf,GAA0BZ,IAArD;AACAtvB,MAAAA,EAAE,CAACzP,GAAH,CAAQutB,GAAR,EAAa07B,MAAM,GAAGtpB,QAAT,GAAoBZ,IAAjC;AACA,UAAMqqB,IAAI,GAAG,CAAErqB,IAAF,EAAQA,IAAR,EAAcA,IAAd,EAAoBA,IAApB,EAA0BA,IAA1B,EAAgCA,IAAhC,CAAb;AACAD,MAAAA,SAAS,CAAC9+B,GAAV,CAAeopD,IAAf,EAAqBF,aAAa,GAAGvpB,QAAhB,GAA2BZ,IAAhD;AAEA;;AAED,QAAM8H,MAAM,GAAG,IAAI5O,cAAJ,EAAf;AACA4O,IAAAA,MAAM,CAACzN,YAAP,CAAqB,UAArB,EAAiC,IAAInD,eAAJ,CAAqBva,QAArB,EAA+BstC,YAA/B,CAAjC;AACAniB,IAAAA,MAAM,CAACzN,YAAP,CAAqB,IAArB,EAA2B,IAAInD,eAAJ,CAAqBxmB,EAArB,EAAyBw5C,MAAzB,CAA3B;AACApiB,IAAAA,MAAM,CAACzN,YAAP,CAAqB,WAArB,EAAkC,IAAInD,eAAJ,CAAqB6I,SAArB,EAAgCoqB,aAAhC,CAAlC;AACAxC,IAAAA,SAAS,CAAClsD,IAAV,CAAgBqsC,MAAhB;;AAEA,QAAK8hB,GAAG,GAAG5E,OAAX,EAAqB;AAEpB4E,MAAAA,GAAG;AAEH;AAED;;AAED,SAAO;AAAEjC,IAAAA,SAAS,EAATA,SAAF;AAAaD,IAAAA,QAAQ,EAARA,QAAb;AAAuBE,IAAAA,MAAM,EAANA;AAAvB,GAAP;AAEA;;AAED,SAASJ,mBAAT,CAA8B96C,KAA9B,EAAqCC,MAArC,EAA6C46C,MAA7C,EAAsD;AAErD,MAAMhB,kBAAkB,GAAG,IAAIr0C,iBAAJ,CAAuBxF,KAAvB,EAA8BC,MAA9B,EAAsC46C,MAAtC,CAA3B;AACAhB,EAAAA,kBAAkB,CAAC9zC,OAAnB,CAA2BjE,OAA3B,GAAqCxa,uBAArC;AACAuyD,EAAAA,kBAAkB,CAAC9zC,OAAnB,CAA2B9J,IAA3B,GAAkC,cAAlC;AACA49C,EAAAA,kBAAkB,CAACh0C,WAAnB,GAAiC,IAAjC;AACA,SAAOg0C,kBAAP;AAEA;;AAED,SAASc,YAAT,CAAuBvrD,MAAvB,EAA+B6B,CAA/B,EAAkCM,CAAlC,EAAqCyO,KAArC,EAA4CC,MAA5C,EAAqD;AAEpD7Q,EAAAA,MAAM,CAAC0W,QAAP,CAAgBvR,GAAhB,CAAqBtD,CAArB,EAAwBM,CAAxB,EAA2ByO,KAA3B,EAAkCC,MAAlC;AACA7Q,EAAAA,MAAM,CAACwW,OAAP,CAAerR,GAAf,CAAoBtD,CAApB,EAAuBM,CAAvB,EAA0ByO,KAA1B,EAAiCC,MAAjC;AAEA;;AAED,SAASk7C,cAAT,CAAyB8B,MAAzB,EAAiCj9C,KAAjC,EAAwCC,MAAxC,EAAiD;AAEhD,MAAM48C,OAAO,GAAG,IAAIjoD,YAAJ,CAAkB4jD,WAAlB,CAAhB;AACA,MAAMsD,QAAQ,GAAG,IAAInwC,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AACA,MAAMiyC,cAAc,GAAG,IAAIhoB,cAAJ,CAAoB;AAE1C35B,IAAAA,IAAI,EAAE,uBAFoC;AAI1C65B,IAAAA,OAAO,EAAE;AACR,WAAK0iB,WADG;AAER,4BAAsB,MAAMx4C,KAFpB;AAGR,6BAAuB,MAAMC,MAHrB;AAIR,kCAAqBg9C,MAArB;AAJQ,KAJiC;AAW1C3nB,IAAAA,QAAQ,EAAE;AACT,gBAAU;AAAE5kC,QAAAA,KAAK,EAAE;AAAT,OADD;AAET,iBAAW;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAFF;AAGT,iBAAW;AAAEA,QAAAA,KAAK,EAAEmsD;AAAT,OAHF;AAIT,qBAAe;AAAEnsD,QAAAA,KAAK,EAAE;AAAT,OAJN;AAKT,gBAAU;AAAEA,QAAAA,KAAK,EAAE;AAAT,OALD;AAMT,gBAAU;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAND;AAOT,kBAAY;AAAEA,QAAAA,KAAK,EAAEorD;AAAT;AAPH,KAXgC;AAqB1C/lB,IAAAA,YAAY,EAAE8nB,sBAAsB,EArBM;AAuB1C7nB,IAAAA,cAAc;AAAE;AAAF,siDAvB4B;AAqF1CxS,IAAAA,QAAQ,EAAE9+B,UArFgC;AAsF1C0/B,IAAAA,SAAS,EAAE,KAtF+B;AAuF1CC,IAAAA,UAAU,EAAE;AAvF8B,GAApB,CAAvB;AA2FA,SAAOu5B,cAAP;AAEA;;AAED,SAAStD,oBAAT,GAAgC;AAE/B,SAAO,IAAI1kB,cAAJ,CAAoB;AAE1B35B,IAAAA,IAAI,EAAE,yBAFoB;AAI1Bq5B,IAAAA,QAAQ,EAAE;AACT,gBAAU;AAAE5kC,QAAAA,KAAK,EAAE;AAAT;AADD,KAJgB;AAQ1BqlC,IAAAA,YAAY,EAAE8nB,sBAAsB,EARV;AAU1B7nB,IAAAA,cAAc;AAAE;AAAF,4YAVY;AA+B1BxS,IAAAA,QAAQ,EAAE9+B,UA/BgB;AAgC1B0/B,IAAAA,SAAS,EAAE,KAhCe;AAiC1BC,IAAAA,UAAU,EAAE;AAjCc,GAApB,CAAP;AAqCA;;AAED,SAASg2B,mBAAT,GAA+B;AAE9B,SAAO,IAAIzkB,cAAJ,CAAoB;AAE1B35B,IAAAA,IAAI,EAAE,iBAFoB;AAI1Bq5B,IAAAA,QAAQ,EAAE;AACT,gBAAU;AAAE5kC,QAAAA,KAAK,EAAE;AAAT,OADD;AAET,oBAAc;AAAEA,QAAAA,KAAK,EAAE,CAAE;AAAX;AAFL,KAJgB;AAS1BqlC,IAAAA,YAAY,EAAE8nB,sBAAsB,EATV;AAW1B7nB,IAAAA,cAAc;AAAE;AAAF,6UAXY;AA6B1BxS,IAAAA,QAAQ,EAAE9+B,UA7BgB;AA8B1B0/B,IAAAA,SAAS,EAAE,KA9Be;AA+B1BC,IAAAA,UAAU,EAAE;AA/Bc,GAApB,CAAP;AAmCA;;AAED,SAASw5B,sBAAT,GAAkC;AAEjC;AAAO;AAAP;AAAA;AAyDA;;AAED,SAASC,eAAT,CAA0BhlB,QAA1B,EAAqC;AAEpC,MAAIilB,UAAU,GAAG,IAAIrgB,OAAJ,EAAjB;AAEA,MAAIsgB,cAAc,GAAG,IAArB;;AAEA,WAAS5f,GAAT,CAAcr4B,OAAd,EAAwB;AAEvB,QAAKA,OAAO,IAAIA,OAAO,CAACxD,SAAxB,EAAoC;AAEnC,UAAMT,OAAO,GAAGiE,OAAO,CAACjE,OAAxB;AAEA,UAAMm8C,aAAa,GAAKn8C,OAAO,KAAK1a,gCAAZ,IAAgD0a,OAAO,KAAKza,gCAApF;AACA,UAAM62D,SAAS,GAAKp8C,OAAO,KAAK5a,qBAAZ,IAAqC4a,OAAO,KAAK3a,qBAArE,CALmC,CAOnC;;AAEA,UAAK82D,aAAa,IAAIC,SAAtB,EAAkC;AAEjC,YAAKn4C,OAAO,CAAC5C,qBAAR,IAAiC4C,OAAO,CAAC3C,gBAAR,KAA6B,IAAnE,EAA0E;AAEzE2C,UAAAA,OAAO,CAAC3C,gBAAR,GAA2B,KAA3B;AAEA,cAAIk1B,YAAY,GAAGylB,UAAU,CAAC3f,GAAX,CAAgBr4B,OAAhB,CAAnB;AAEA,cAAKi4C,cAAc,KAAK,IAAxB,EAA+BA,cAAc,GAAG,IAAIjF,cAAJ,CAAoBjgB,QAApB,CAAjB;AAE/BR,UAAAA,YAAY,GAAG2lB,aAAa,GAAGD,cAAc,CAACG,mBAAf,CAAoCp4C,OAApC,EAA6CuyB,YAA7C,CAAH,GAAiE0lB,cAAc,CAACI,WAAf,CAA4Br4C,OAA5B,EAAqCuyB,YAArC,CAA7F;AACAylB,UAAAA,UAAU,CAACxpD,GAAX,CAAgBwR,OAAhB,EAAyBuyB,YAAzB;AAEA,iBAAOA,YAAY,CAACvyB,OAApB;AAEA,SAbD,MAaO;AAEN,cAAKg4C,UAAU,CAACnJ,GAAX,CAAgB7uC,OAAhB,CAAL,EAAiC;AAEhC,mBAAOg4C,UAAU,CAAC3f,GAAX,CAAgBr4B,OAAhB,EAA0BA,OAAjC;AAEA,WAJD,MAIO;AAEN,gBAAMpG,KAAK,GAAGoG,OAAO,CAACpG,KAAtB;;AAEA,gBAAOs+C,aAAa,IAAIt+C,KAAjB,IAA0BA,KAAK,CAACM,MAAN,GAAe,CAA3C,IAAoDi+C,SAAS,IAAIv+C,KAAb,IAAsB0+C,qBAAqB,CAAE1+C,KAAF,CAApG,EAAkH;AAEjH,kBAAKq+C,cAAc,KAAK,IAAxB,EAA+BA,cAAc,GAAG,IAAIjF,cAAJ,CAAoBjgB,QAApB,CAAjB;;AAE/B,kBAAMR,aAAY,GAAG2lB,aAAa,GAAGD,cAAc,CAACG,mBAAf,CAAoCp4C,OAApC,CAAH,GAAmDi4C,cAAc,CAACI,WAAf,CAA4Br4C,OAA5B,CAArF;;AACAg4C,cAAAA,UAAU,CAACxpD,GAAX,CAAgBwR,OAAhB,EAAyBuyB,aAAzB;AAEAvyB,cAAAA,OAAO,CAAC+xC,gBAAR,CAA0B,SAA1B,EAAqCC,gBAArC;AAEA,qBAAOzf,aAAY,CAACvyB,OAApB;AAEA,aAXD,MAWO;AAEN;AAEA,qBAAO,IAAP;AAEA;AAED;AAED;AAED;AAED;;AAED,WAAOA,OAAP;AAEA;;AAED,WAASs4C,qBAAT,CAAgC1+C,KAAhC,EAAwC;AAEvC,QAAIsH,KAAK,GAAG,CAAZ;AACA,QAAMxX,MAAM,GAAG,CAAf;;AAEA,SAAM,IAAIF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGE,MAArB,EAA6BF,CAAC,EAA9B,EAAoC;AAEnC,UAAKoQ,KAAK,CAAEpQ,CAAF,CAAL,KAAeX,SAApB,EAAgCqY,KAAK;AAErC;;AAED,WAAOA,KAAK,KAAKxX,MAAjB;AAGA;;AAED,WAASsoD,gBAAT,CAA2B5oD,KAA3B,EAAmC;AAElC,QAAM4W,OAAO,GAAG5W,KAAK,CAACC,MAAtB;AAEA2W,IAAAA,OAAO,CAACiyC,mBAAR,CAA6B,SAA7B,EAAwCD,gBAAxC;AAEA,QAAMuG,SAAS,GAAGP,UAAU,CAAC3f,GAAX,CAAgBr4B,OAAhB,CAAlB;;AAEA,QAAKu4C,SAAS,KAAK1vD,SAAnB,EAA+B;AAE9BmvD,MAAAA,UAAU,CAACzf,MAAX,CAAmBv4B,OAAnB;AACAu4C,MAAAA,SAAS,CAACl4C,OAAV;AAEA;AAED;;AAED,WAASA,OAAT,GAAmB;AAElB23C,IAAAA,UAAU,GAAG,IAAIrgB,OAAJ,EAAb;;AAEA,QAAKsgB,cAAc,KAAK,IAAxB,EAA+B;AAE9BA,MAAAA,cAAc,CAAC53C,OAAf;AACA43C,MAAAA,cAAc,GAAG,IAAjB;AAEA;AAED;;AAED,SAAO;AACN5f,IAAAA,GAAG,EAAEA,GADC;AAENh4B,IAAAA,OAAO,EAAEA;AAFH,GAAP;AAKA;;AAED,SAASm4C,eAAT,CAA0BjhB,EAA1B,EAA+B;AAE9B,MAAMnH,UAAU,GAAG,EAAnB;;AAEA,WAASqoB,YAAT,CAAuBviD,IAAvB,EAA8B;AAE7B,QAAKk6B,UAAU,CAAEl6B,IAAF,CAAV,KAAuBrN,SAA5B,EAAwC;AAEvC,aAAOunC,UAAU,CAAEl6B,IAAF,CAAjB;AAEA;;AAED,QAAIk0C,SAAJ;;AAEA,YAASl0C,IAAT;AAEC,WAAK,qBAAL;AACCk0C,QAAAA,SAAS,GAAG7S,EAAE,CAACkhB,YAAH,CAAiB,qBAAjB,KAA4ClhB,EAAE,CAACkhB,YAAH,CAAiB,yBAAjB,CAA5C,IAA4FlhB,EAAE,CAACkhB,YAAH,CAAiB,4BAAjB,CAAxG;AACA;;AAED,WAAK,gCAAL;AACCrO,QAAAA,SAAS,GAAG7S,EAAE,CAACkhB,YAAH,CAAiB,gCAAjB,KAAuDlhB,EAAE,CAACkhB,YAAH,CAAiB,oCAAjB,CAAvD,IAAkHlhB,EAAE,CAACkhB,YAAH,CAAiB,uCAAjB,CAA9H;AACA;;AAED,WAAK,+BAAL;AACCrO,QAAAA,SAAS,GAAG7S,EAAE,CAACkhB,YAAH,CAAiB,+BAAjB,KAAsDlhB,EAAE,CAACkhB,YAAH,CAAiB,mCAAjB,CAAtD,IAAgHlhB,EAAE,CAACkhB,YAAH,CAAiB,sCAAjB,CAA5H;AACA;;AAED,WAAK,gCAAL;AACCrO,QAAAA,SAAS,GAAG7S,EAAE,CAACkhB,YAAH,CAAiB,gCAAjB,KAAuDlhB,EAAE,CAACkhB,YAAH,CAAiB,uCAAjB,CAAnE;AACA;;AAED;AACCrO,QAAAA,SAAS,GAAG7S,EAAE,CAACkhB,YAAH,CAAiBviD,IAAjB,CAAZ;AAnBF;;AAuBAk6B,IAAAA,UAAU,CAAEl6B,IAAF,CAAV,GAAqBk0C,SAArB;AAEA,WAAOA,SAAP;AAEA;;AAED,SAAO;AAENyE,IAAAA,GAAG,EAAE,aAAW34C,IAAX,EAAkB;AAEtB,aAAOuiD,YAAY,CAAEviD,IAAF,CAAZ,KAAyB,IAAhC;AAEA,KANK;AAQNu6C,IAAAA,IAAI,EAAE,cAAWjZ,YAAX,EAA0B;AAE/B,UAAKA,YAAY,CAACC,QAAlB,EAA6B;AAE5BghB,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AAEA,OAJD,MAIO;AAENA,QAAAA,YAAY,CAAE,qBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,mBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,+BAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,0BAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,yBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AAEA;;AAEDA,MAAAA,YAAY,CAAE,0BAAF,CAAZ;AACAA,MAAAA,YAAY,CAAE,6BAAF,CAAZ;AACAA,MAAAA,YAAY,CAAE,sCAAF,CAAZ;AAEA,KA/BK;AAiCNpgB,IAAAA,GAAG,EAAE,aAAWniC,IAAX,EAAkB;AAEtB,UAAMk0C,SAAS,GAAGqO,YAAY,CAAEviD,IAAF,CAA9B;;AAEA,UAAKk0C,SAAS,KAAK,IAAnB,EAA0B;AAEzB37C,QAAAA,OAAO,CAACC,IAAR,CAAc,0BAA0BwH,IAA1B,GAAiC,2BAA/C;AAEA;;AAED,aAAOk0C,SAAP;AAEA;AA7CK,GAAP;AAiDA;;AAED,SAASsO,eAAT,CAA0BnhB,EAA1B,EAA8BttB,UAA9B,EAA0CkkC,IAA1C,EAAgD7D,aAAhD,EAAgE;AAE/D,MAAMxxB,UAAU,GAAG,EAAnB;AACA,MAAM6/B,mBAAmB,GAAG,IAAIhhB,OAAJ,EAA5B;;AAEA,WAASihB,iBAAT,CAA4BxvD,KAA5B,EAAoC;AAEnC,QAAM4gB,QAAQ,GAAG5gB,KAAK,CAACC,MAAvB;;AAEA,QAAK2gB,QAAQ,CAAC9gB,KAAT,KAAmB,IAAxB,EAA+B;AAE9B+gB,MAAAA,UAAU,CAACkO,MAAX,CAAmBnO,QAAQ,CAAC9gB,KAA5B;AAEA;;AAED,SAAM,IAAMgN,IAAZ,IAAoB8T,QAAQ,CAACC,UAA7B,EAA0C;AAEzCA,MAAAA,UAAU,CAACkO,MAAX,CAAmBnO,QAAQ,CAACC,UAAT,CAAqB/T,IAArB,CAAnB;AAEA;;AAED8T,IAAAA,QAAQ,CAACioC,mBAAT,CAA8B,SAA9B,EAAyC2G,iBAAzC;AAEA,WAAO9/B,UAAU,CAAE9O,QAAQ,CAACoO,EAAX,CAAjB;AAEA,QAAMlnB,SAAS,GAAGynD,mBAAmB,CAACtgB,GAApB,CAAyBruB,QAAzB,CAAlB;;AAEA,QAAK9Y,SAAL,EAAiB;AAEhB+Y,MAAAA,UAAU,CAACkO,MAAX,CAAmBjnB,SAAnB;AACAynD,MAAAA,mBAAmB,CAACpgB,MAApB,CAA4BvuB,QAA5B;AAEA;;AAEDsgC,IAAAA,aAAa,CAACyD,uBAAd,CAAuC/jC,QAAvC;;AAEA,QAAKA,QAAQ,CAACkjC,yBAAT,KAAuC,IAA5C,EAAmD;AAElD,aAAOljC,QAAQ,CAACsjC,iBAAhB;AAEA,KAnCkC,CAqCnC;;;AAEAa,IAAAA,IAAI,CAAC0K,MAAL,CAAY//B,UAAZ;AAEA;;AAED,WAASuf,GAAT,CAAc9uB,MAAd,EAAsBS,QAAtB,EAAiC;AAEhC,QAAK8O,UAAU,CAAE9O,QAAQ,CAACoO,EAAX,CAAV,KAA8B,IAAnC,EAA0C,OAAOpO,QAAP;AAE1CA,IAAAA,QAAQ,CAAC+nC,gBAAT,CAA2B,SAA3B,EAAsC6G,iBAAtC;AAEA9/B,IAAAA,UAAU,CAAE9O,QAAQ,CAACoO,EAAX,CAAV,GAA4B,IAA5B;AAEA+1B,IAAAA,IAAI,CAAC0K,MAAL,CAAY//B,UAAZ;AAEA,WAAO9O,QAAP;AAEA;;AAED,WAASlI,MAAT,CAAiBkI,QAAjB,EAA4B;AAE3B,QAAMiiC,kBAAkB,GAAGjiC,QAAQ,CAACC,UAApC,CAF2B,CAI3B;;AAEA,SAAM,IAAM/T,IAAZ,IAAoB+1C,kBAApB,EAAyC;AAExChiC,MAAAA,UAAU,CAACnI,MAAX,CAAmBmqC,kBAAkB,CAAE/1C,IAAF,CAArC,EAA+C,KAA/C;AAEA,KAV0B,CAY3B;;;AAEA,QAAMywB,eAAe,GAAG3c,QAAQ,CAAC2c,eAAjC;;AAEA,SAAM,IAAMzwB,MAAZ,IAAoBywB,eAApB,EAAsC;AAErC,UAAMr9B,KAAK,GAAGq9B,eAAe,CAAEzwB,MAAF,CAA7B;;AAEA,WAAM,IAAI1M,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhDygB,QAAAA,UAAU,CAACnI,MAAX,CAAmBxY,KAAK,CAAEE,CAAF,CAAxB,EAA+B,KAA/B;AAEA;AAED;AAED;;AAED,WAASsvD,wBAAT,CAAmC9uC,QAAnC,EAA8C;AAE7C,QAAMme,OAAO,GAAG,EAAhB;AAEA,QAAM4wB,aAAa,GAAG/uC,QAAQ,CAAC9gB,KAA/B;AACA,QAAM8vD,gBAAgB,GAAGhvC,QAAQ,CAACC,UAAT,CAAoBC,QAA7C;AACA,QAAIlP,OAAO,GAAG,CAAd;;AAEA,QAAK+9C,aAAa,KAAK,IAAvB,EAA8B;AAE7B,UAAMzvD,KAAK,GAAGyvD,aAAa,CAACzvD,KAA5B;AACA0R,MAAAA,OAAO,GAAG+9C,aAAa,CAAC/9C,OAAxB;;AAEA,WAAM,IAAIxR,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,IAAI,CAA/C,EAAmD;AAElD,YAAMkE,CAAC,GAAGpE,KAAK,CAAEE,CAAC,GAAG,CAAN,CAAf;AACA,YAAMmE,CAAC,GAAGrE,KAAK,CAAEE,CAAC,GAAG,CAAN,CAAf;AACA,YAAMoE,CAAC,GAAGtE,KAAK,CAAEE,CAAC,GAAG,CAAN,CAAf;AAEA2+B,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBA,CAApB,EAAuBC,CAAvB,EAA0BA,CAA1B,EAA6BF,CAA7B;AAEA;AAED,KAfD,MAeO;AAEN,UAAMpE,MAAK,GAAG0vD,gBAAgB,CAAC1vD,KAA/B;AACA0R,MAAAA,OAAO,GAAGg+C,gBAAgB,CAACh+C,OAA3B;;AAEA,WAAM,IAAIxR,IAAC,GAAG,CAAR,EAAWC,GAAC,GAAKH,MAAK,CAACI,MAAN,GAAe,CAAjB,GAAuB,CAA5C,EAA+CF,IAAC,GAAGC,GAAnD,EAAsDD,IAAC,IAAI,CAA3D,EAA+D;AAE9D,YAAMkE,GAAC,GAAGlE,IAAC,GAAG,CAAd;;AACA,YAAMmE,GAAC,GAAGnE,IAAC,GAAG,CAAd;;AACA,YAAMoE,GAAC,GAAGpE,IAAC,GAAG,CAAd;;AAEA2+B,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,GAAd,EAAiBC,GAAjB,EAAoBA,GAApB,EAAuBC,GAAvB,EAA0BA,GAA1B,EAA6BF,GAA7B;AAEA;AAED;;AAED,QAAMwD,SAAS,GAAG,KAAMuE,gBAAgB,CAAE0yB,OAAF,CAAhB,GAA8BtC,qBAA9B,GAAsDF,qBAA5D,EAAqFwC,OAArF,EAA8F,CAA9F,CAAlB;AACAj3B,IAAAA,SAAS,CAAC8J,OAAV,GAAoBA,OAApB,CAzC6C,CA2C7C;AAEA;;AAEA,QAAMi+C,iBAAiB,GAAGN,mBAAmB,CAACtgB,GAApB,CAAyBruB,QAAzB,CAA1B;AAEA,QAAKivC,iBAAL,EAAyBhvC,UAAU,CAACkO,MAAX,CAAmB8gC,iBAAnB,EAjDoB,CAmD7C;;AAEAN,IAAAA,mBAAmB,CAACnqD,GAApB,CAAyBwb,QAAzB,EAAmC9Y,SAAnC;AAEA;;AAED,WAASgoD,qBAAT,CAAgClvC,QAAhC,EAA2C;AAE1C,QAAMmvC,gBAAgB,GAAGR,mBAAmB,CAACtgB,GAApB,CAAyBruB,QAAzB,CAAzB;;AAEA,QAAKmvC,gBAAL,EAAwB;AAEvB,UAAMJ,aAAa,GAAG/uC,QAAQ,CAAC9gB,KAA/B;;AAEA,UAAK6vD,aAAa,KAAK,IAAvB,EAA8B;AAE7B;AAEA,YAAKI,gBAAgB,CAACn+C,OAAjB,GAA2B+9C,aAAa,CAAC/9C,OAA9C,EAAwD;AAEvD89C,UAAAA,wBAAwB,CAAE9uC,QAAF,CAAxB;AAEA;AAED;AAED,KAhBD,MAgBO;AAEN8uC,MAAAA,wBAAwB,CAAE9uC,QAAF,CAAxB;AAEA;;AAED,WAAO2uC,mBAAmB,CAACtgB,GAApB,CAAyBruB,QAAzB,CAAP;AAEA;;AAED,SAAO;AAENquB,IAAAA,GAAG,EAAEA,GAFC;AAGNv2B,IAAAA,MAAM,EAAEA,MAHF;AAKNo3C,IAAAA,qBAAqB,EAAEA;AALjB,GAAP;AASA;;AAED,SAASE,0BAAT,CAAqC7hB,EAArC,EAAyCnH,UAAzC,EAAqD+d,IAArD,EAA2D3W,YAA3D,EAA0E;AAEzE,MAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AAEA,MAAI2W,IAAJ;;AAEA,WAASC,OAAT,CAAkB1jD,KAAlB,EAA0B;AAEzByjD,IAAAA,IAAI,GAAGzjD,KAAP;AAEA;;AAED,MAAIjC,IAAJ,EAAUsvC,eAAV;;AAEA,WAAS1M,QAAT,CAAmB3gC,KAAnB,EAA2B;AAE1BjC,IAAAA,IAAI,GAAGiC,KAAK,CAACjC,IAAb;AACAsvC,IAAAA,eAAe,GAAGrtC,KAAK,CAACqtC,eAAxB;AAEA;;AAED,WAASxE,MAAT,CAAiBxM,KAAjB,EAAwB9lB,KAAxB,EAAgC;AAE/Bq2B,IAAAA,EAAE,CAAC8hB,YAAH,CAAiBjL,IAAjB,EAAuBltC,KAAvB,EAA8BxY,IAA9B,EAAoCs+B,KAAK,GAAGgR,eAA5C;AAEAmW,IAAAA,IAAI,CAACrsC,MAAL,CAAaZ,KAAb,EAAoBktC,IAApB,EAA0B,CAA1B;AAEA;;AAED,WAASG,eAAT,CAA0BvnB,KAA1B,EAAiC9lB,KAAjC,EAAwCstC,SAAxC,EAAoD;AAEnD,QAAKA,SAAS,KAAK,CAAnB,EAAuB;AAEvB,QAAIpE,SAAJ,EAAeqE,UAAf;;AAEA,QAAKhX,QAAL,EAAgB;AAEf2S,MAAAA,SAAS,GAAG7S,EAAZ;AACAkX,MAAAA,UAAU,GAAG,uBAAb;AAEA,KALD,MAKO;AAENrE,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,wBAAhB,CAAZ;AACAoW,MAAAA,UAAU,GAAG,4BAAb;;AAEA,UAAKrE,SAAS,KAAK,IAAnB,EAA0B;AAEzB37C,QAAAA,OAAO,CAACkD,KAAR,CAAe,uIAAf;AACA;AAEA;AAED;;AAEDy4C,IAAAA,SAAS,CAAEqE,UAAF,CAAT,CAAyBL,IAAzB,EAA+BltC,KAA/B,EAAsCxY,IAAtC,EAA4Cs+B,KAAK,GAAGgR,eAApD,EAAqEwW,SAArE;AAEAL,IAAAA,IAAI,CAACrsC,MAAL,CAAaZ,KAAb,EAAoBktC,IAApB,EAA0BI,SAA1B;AAEA,GA1DwE,CA4DzE;;;AAEA,OAAKH,OAAL,GAAeA,OAAf;AACA,OAAK/iB,QAAL,GAAgBA,QAAhB;AACA,OAAKkI,MAAL,GAAcA,MAAd;AACA,OAAK+a,eAAL,GAAuBA,eAAvB;AAEA;;AAED,SAAS+K,SAAT,CAAoB/hB,EAApB,EAAyB;AAExB,MAAMshB,MAAM,GAAG;AACd//B,IAAAA,UAAU,EAAE,CADE;AAEdnb,IAAAA,QAAQ,EAAE;AAFI,GAAf;AAKA,MAAM61B,MAAM,GAAG;AACdwD,IAAAA,KAAK,EAAE,CADO;AAEduiB,IAAAA,KAAK,EAAE,CAFO;AAGdC,IAAAA,SAAS,EAAE,CAHG;AAIdvwC,IAAAA,MAAM,EAAE,CAJM;AAKdwwC,IAAAA,KAAK,EAAE;AALO,GAAf;;AAQA,WAAS33C,MAAT,CAAiBZ,KAAjB,EAAwBktC,IAAxB,EAA8BsL,aAA9B,EAA8C;AAE7ClmB,IAAAA,MAAM,CAAC+lB,KAAP;;AAEA,YAASnL,IAAT;AAEC,WAAK,CAAL;AACC5a,QAAAA,MAAM,CAACgmB,SAAP,IAAoBE,aAAa,IAAKx4C,KAAK,GAAG,CAAb,CAAjC;AACA;;AAED,WAAK,CAAL;AACCsyB,QAAAA,MAAM,CAACimB,KAAP,IAAgBC,aAAa,IAAKx4C,KAAK,GAAG,CAAb,CAA7B;AACA;;AAED,WAAK,CAAL;AACCsyB,QAAAA,MAAM,CAACimB,KAAP,IAAgBC,aAAa,IAAKx4C,KAAK,GAAG,CAAb,CAA7B;AACA;;AAED,WAAK,CAAL;AACCsyB,QAAAA,MAAM,CAACimB,KAAP,IAAgBC,aAAa,GAAGx4C,KAAhC;AACA;;AAED,WAAK,CAAL;AACCsyB,QAAAA,MAAM,CAACvqB,MAAP,IAAiBywC,aAAa,GAAGx4C,KAAjC;AACA;;AAED;AACCzS,QAAAA,OAAO,CAACkD,KAAR,CAAe,qCAAf,EAAsDy8C,IAAtD;AACA;AAxBF;AA4BA;;AAED,WAASR,KAAT,GAAiB;AAEhBpa,IAAAA,MAAM,CAACwD,KAAP;AACAxD,IAAAA,MAAM,CAAC+lB,KAAP,GAAe,CAAf;AACA/lB,IAAAA,MAAM,CAACgmB,SAAP,GAAmB,CAAnB;AACAhmB,IAAAA,MAAM,CAACvqB,MAAP,GAAgB,CAAhB;AACAuqB,IAAAA,MAAM,CAACimB,KAAP,GAAe,CAAf;AAEA;;AAED,SAAO;AACNZ,IAAAA,MAAM,EAAEA,MADF;AAENrlB,IAAAA,MAAM,EAAEA,MAFF;AAGNmmB,IAAAA,QAAQ,EAAE,IAHJ;AAINC,IAAAA,SAAS,EAAE,IAJL;AAKNhM,IAAAA,KAAK,EAAEA,KALD;AAMN9rC,IAAAA,MAAM,EAAEA;AANF,GAAP;AASA;;AAED,SAAS+3C,aAAT,CAAwBnsD,CAAxB,EAA2BC,CAA3B,EAA+B;AAE9B,SAAOD,CAAC,CAAE,CAAF,CAAD,GAASC,CAAC,CAAE,CAAF,CAAjB;AAEA;;AAED,SAASmsD,gBAAT,CAA2BpsD,CAA3B,EAA8BC,CAA9B,EAAkC;AAEjC,SAAO5D,IAAI,CAACiC,GAAL,CAAU2B,CAAC,CAAE,CAAF,CAAX,IAAqB5D,IAAI,CAACiC,GAAL,CAAU0B,CAAC,CAAE,CAAF,CAAX,CAA5B;AAEA;;AAED,SAAS+B,WAAT,CAAsBsqD,KAAtB,EAA6B7oD,SAA7B,EAAyC;AAExC,MAAIsW,WAAW,GAAG,CAAlB;AACA,MAAMle,KAAK,GAAG4H,SAAS,CAAC25B,4BAAV,GAAyC35B,SAAS,CAAC2J,IAAV,CAAevR,KAAxD,GAAgE4H,SAAS,CAAC5H,KAAxF;AAEA,MAAKA,KAAK,YAAY2F,SAAtB,EAAkCuY,WAAW,GAAG,GAAd,CAAlC,KACK,IAAKle,KAAK,YAAYyF,UAAtB,EAAmCyY,WAAW,GAAG,GAAd,CAAnC,KACA,IAAKle,KAAK,YAAYwF,WAAtB,EAAoC0Y,WAAW,GAAG,KAAd,CAApC,KACA,IAAKle,KAAK,YAAY0F,UAAtB,EAAmCwY,WAAW,GAAG,KAAd,CAAnC,KACA,IAAKle,KAAK,YAAYsM,UAAtB,EAAmC4R,WAAW,GAAG,UAAd,CAAnC,KACA/Y,OAAO,CAACkD,KAAR,CAAe,kEAAf,EAAmFrI,KAAnF;AAELywD,EAAAA,KAAK,CAACxpD,YAAN,CAAoBiX,WAApB;AAEA;;AAED,SAASwyC,iBAAT,CAA4BziB,EAA5B,EAAgCC,YAAhC,EAA8C75B,QAA9C,EAAyD;AAExD,MAAMs8C,cAAc,GAAG,EAAvB;AACA,MAAMtsB,eAAe,GAAG,IAAI9+B,YAAJ,CAAkB,CAAlB,CAAxB;AACA,MAAMqrD,aAAa,GAAG,IAAIviB,OAAJ,EAAtB;AACA,MAAMoiB,KAAK,GAAG,IAAI57C,OAAJ,EAAd;AAEA,MAAMg8C,cAAc,GAAG,EAAvB;;AAEA,OAAM,IAAI3wD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B2wD,IAAAA,cAAc,CAAE3wD,CAAF,CAAd,GAAsB,CAAEA,CAAF,EAAK,CAAL,CAAtB;AAEA;;AAED,WAASsY,MAAT,CAAiByH,MAAjB,EAAyBS,QAAzB,EAAmCsQ,QAAnC,EAA6CswB,OAA7C,EAAuD;AAEtD,QAAMwP,gBAAgB,GAAG7wC,MAAM,CAACmjB,qBAAhC;;AAEA,QAAK8K,YAAY,CAACC,QAAb,KAA0B,IAA/B,EAAsC;AAErC;AACA;AAEA,UAAMzP,cAAc,GAAGhe,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,IAAqCF,QAAQ,CAAC2c,eAAT,CAAyB7e,MAA9D,IAAwEkC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAxH;AACA,UAAMyjD,iBAAiB,GAAKryB,cAAc,KAAKn/B,SAArB,GAAmCm/B,cAAc,CAACt+B,MAAlD,GAA2D,CAArF;AAEA,UAAI4wD,KAAK,GAAGJ,aAAa,CAAC7hB,GAAd,CAAmBruB,QAAnB,CAAZ;;AAEA,UAAKswC,KAAK,KAAKzxD,SAAV,IAAuByxD,KAAK,CAACp5C,KAAN,KAAgBm5C,iBAA5C,EAAgE;AAAA,YAqGtDE,cArGsD,GAqG/D,SAASA,cAAT,GAA0B;AAEzBv6C,UAAAA,OAAO,CAACK,OAAR;AAEA65C,UAAAA,aAAa,CAAC3hB,MAAd,CAAsBvuB,QAAtB;AAEAA,UAAAA,QAAQ,CAACioC,mBAAT,CAA8B,SAA9B,EAAyCsI,cAAzC;AAEA,SA7G8D;;AAE/D,YAAKD,KAAK,KAAKzxD,SAAf,EAA2ByxD,KAAK,CAACt6C,OAAN,CAAcK,OAAd;AAE3B,YAAMm6C,gBAAgB,GAAGxwC,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,KAAsCrhB,SAA/D;AACA,YAAM4xD,eAAe,GAAGzwC,QAAQ,CAAC2c,eAAT,CAAyB7e,MAAzB,KAAoCjf,SAA5D;AACA,YAAM6xD,cAAc,GAAG1wC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAzB,KAAmC/N,SAA1D;AAEA,YAAM8xD,YAAY,GAAG3wC,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,IAAqC,EAA1D;AACA,YAAM0wC,YAAY,GAAG5wC,QAAQ,CAAC2c,eAAT,CAAyB7e,MAAzB,IAAmC,EAAxD;AACA,YAAM+yC,WAAW,GAAG7wC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAzB,IAAkC,EAAtD;AAEA,YAAIkkD,eAAe,GAAG,CAAtB;AAEA,YAAKN,gBAAgB,KAAK,IAA1B,EAAiCM,eAAe,GAAG,CAAlB;AACjC,YAAKL,eAAe,KAAK,IAAzB,EAAgCK,eAAe,GAAG,CAAlB;AAChC,YAAKJ,cAAc,KAAK,IAAxB,EAA+BI,eAAe,GAAG,CAAlB;AAE/B,YAAI7gD,KAAK,GAAG+P,QAAQ,CAACC,UAAT,CAAoBC,QAApB,CAA6BhJ,KAA7B,GAAqC45C,eAAjD;AACA,YAAI5gD,MAAM,GAAG,CAAb;;AAEA,YAAKD,KAAK,GAAGu9B,YAAY,CAAC+X,cAA1B,EAA2C;AAE1Cr1C,UAAAA,MAAM,GAAGnQ,IAAI,CAACqD,IAAL,CAAW6M,KAAK,GAAGu9B,YAAY,CAAC+X,cAAhC,CAAT;AACAt1C,UAAAA,KAAK,GAAGu9B,YAAY,CAAC+X,cAArB;AAEA;;AAED,YAAMv5C,MAAM,GAAG,IAAInH,YAAJ,CAAkBoL,KAAK,GAAGC,MAAR,GAAiB,CAAjB,GAAqBmgD,iBAAvC,CAAf;AAEA,YAAMr6C,OAAO,GAAG,IAAIQ,gBAAJ,CAAsBxK,MAAtB,EAA8BiE,KAA9B,EAAqCC,MAArC,EAA6CmgD,iBAA7C,CAAhB;AACAr6C,QAAAA,OAAO,CAACtX,IAAR,GAAe/F,SAAf;AACAqd,QAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB,CAhC+D,CAkC/D;;AAEA,YAAMq9C,gBAAgB,GAAGD,eAAe,GAAG,CAA3C;;AAEA,aAAM,IAAItxD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6wD,iBAArB,EAAwC7wD,IAAC,EAAzC,EAA+C;AAE9C,cAAMwxD,WAAW,GAAGL,YAAY,CAAEnxD,IAAF,CAAhC;AACA,cAAMyxD,WAAW,GAAGL,YAAY,CAAEpxD,IAAF,CAAhC;AACA,cAAM0xD,UAAU,GAAGL,WAAW,CAAErxD,IAAF,CAA9B;AAEA,cAAMyH,MAAM,GAAGgJ,KAAK,GAAGC,MAAR,GAAiB,CAAjB,GAAqB1Q,IAApC;;AAEA,eAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG8uC,WAAW,CAAC95C,KAAjC,EAAwCgL,CAAC,EAAzC,EAA+C;AAE9C,gBAAM4e,MAAM,GAAG5e,CAAC,GAAG6uC,gBAAnB;;AAEA,gBAAKP,gBAAgB,KAAK,IAA1B,EAAiC;AAEhCT,cAAAA,KAAK,CAAC5vC,mBAAN,CAA2B6wC,WAA3B,EAAwC9uC,CAAxC;AAEA,kBAAK8uC,WAAW,CAACxhD,UAAZ,KAA2B,IAAhC,EAAuC/J,WAAW,CAAEsqD,KAAF,EAASiB,WAAT,CAAX;AAEvChlD,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAAC7uD,CAAtC;AACA8K,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAACvuD,CAAtC;AACAwK,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAAC37C,CAAtC;AACApI,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgC,CAAhC;AAEA;;AAED,gBAAK2vB,eAAe,KAAK,IAAzB,EAAgC;AAE/BV,cAAAA,KAAK,CAAC5vC,mBAAN,CAA2B8wC,WAA3B,EAAwC/uC,CAAxC;AAEA,kBAAK+uC,WAAW,CAACzhD,UAAZ,KAA2B,IAAhC,EAAuC/J,WAAW,CAAEsqD,KAAF,EAASkB,WAAT,CAAX;AAEvCjlD,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAAC7uD,CAAtC;AACA8K,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAACvuD,CAAtC;AACAwK,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAAC37C,CAAtC;AACApI,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgC,CAAhC;AAEA;;AAED,gBAAK4vB,cAAc,KAAK,IAAxB,EAA+B;AAE9BX,cAAAA,KAAK,CAAC5vC,mBAAN,CAA2B+wC,UAA3B,EAAuChvC,CAAvC;AAEA,kBAAKgvC,UAAU,CAAC1hD,UAAX,KAA0B,IAA/B,EAAsC/J,WAAW,CAAEsqD,KAAF,EAASmB,UAAT,CAAX;AAEtCllD,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAAC7uD,CAAtC;AACA8K,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,CAApB,CAAN,GAAgCivB,KAAK,CAACvuD,CAAtC;AACAwK,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,EAApB,CAAN,GAAiCivB,KAAK,CAAC37C,CAAvC;AACApI,cAAAA,MAAM,CAAE/E,MAAM,GAAG65B,MAAT,GAAkB,EAApB,CAAN,GAAmCowB,UAAU,CAACx2B,QAAX,KAAwB,CAA1B,GAAgCq1B,KAAK,CAAChqD,CAAtC,GAA0C,CAA3E;AAEA;AAED;AAED;;AAEDuqD,QAAAA,KAAK,GAAG;AACPp5C,UAAAA,KAAK,EAAEm5C,iBADA;AAEPr6C,UAAAA,OAAO,EAAEA,OAFF;AAGPvH,UAAAA,IAAI,EAAE,IAAI/I,OAAJ,CAAauK,KAAb,EAAoBC,MAApB;AAHC,SAAR;AAMAggD,QAAAA,aAAa,CAAC1rD,GAAd,CAAmBwb,QAAnB,EAA6BswC,KAA7B;AAYAtwC,QAAAA,QAAQ,CAAC+nC,gBAAT,CAA2B,SAA3B,EAAsCwI,cAAtC;AAEA,OA3HoC,CA6HrC;;;AAEA,UAAIY,kBAAkB,GAAG,CAAzB;;AAEA,WAAM,IAAI3xD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG4wD,gBAAgB,CAAC1wD,MAAtC,EAA8CF,IAAC,EAA/C,EAAqD;AAEpD2xD,QAAAA,kBAAkB,IAAIf,gBAAgB,CAAE5wD,IAAF,CAAtC;AAEA;;AAED,UAAM4xD,kBAAkB,GAAGpxC,QAAQ,CAAC4c,oBAAT,GAAgC,CAAhC,GAAoC,IAAIu0B,kBAAnE;AAEAvQ,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,0BAApC,EAAgE6jB,kBAAhE;AACAxQ,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,uBAApC,EAA6D6iB,gBAA7D;AAEAxP,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,qBAApC,EAA2D+iB,KAAK,CAACt6C,OAAjE,EAA0ErC,QAA1E;AACAitC,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,yBAApC,EAA+D+iB,KAAK,CAAC7hD,IAArE;AAGA,KAhJD,MAgJO;AAEN;AACA;AAEA,UAAM/O,MAAM,GAAG0wD,gBAAgB,KAAKvxD,SAArB,GAAiC,CAAjC,GAAqCuxD,gBAAgB,CAAC1wD,MAArE;AAEA,UAAI6xD,UAAU,GAAGtB,cAAc,CAAEjwC,QAAQ,CAACoO,EAAX,CAA/B;;AAEA,UAAKmjC,UAAU,KAAK1yD,SAAf,IAA4B0yD,UAAU,CAAC7xD,MAAX,KAAsBA,MAAvD,EAAgE;AAE/D;AAEA6xD,QAAAA,UAAU,GAAG,EAAb;;AAEA,aAAM,IAAI/xD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGE,MAArB,EAA6BF,IAAC,EAA9B,EAAoC;AAEnC+xD,UAAAA,UAAU,CAAE/xD,IAAF,CAAV,GAAkB,CAAEA,IAAF,EAAK,CAAL,CAAlB;AAEA;;AAEDywD,QAAAA,cAAc,CAAEjwC,QAAQ,CAACoO,EAAX,CAAd,GAAgCmjC,UAAhC;AAEA,OAvBK,CAyBN;;;AAEA,WAAM,IAAI/xD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGE,MAArB,EAA6BF,IAAC,EAA9B,EAAoC;AAEnC,YAAMokC,SAAS,GAAG2tB,UAAU,CAAE/xD,IAAF,CAA5B;AAEAokC,QAAAA,SAAS,CAAE,CAAF,CAAT,GAAiBpkC,IAAjB;AACAokC,QAAAA,SAAS,CAAE,CAAF,CAAT,GAAiBwsB,gBAAgB,CAAE5wD,IAAF,CAAjC;AAEA;;AAED+xD,MAAAA,UAAU,CAACC,IAAX,CAAiB1B,gBAAjB;;AAEA,WAAM,IAAItwD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9B,YAAKA,IAAC,GAAGE,MAAJ,IAAc6xD,UAAU,CAAE/xD,IAAF,CAAV,CAAiB,CAAjB,CAAnB,EAA0C;AAEzC2wD,UAAAA,cAAc,CAAE3wD,IAAF,CAAd,CAAqB,CAArB,IAA2B+xD,UAAU,CAAE/xD,IAAF,CAAV,CAAiB,CAAjB,CAA3B;AACA2wD,UAAAA,cAAc,CAAE3wD,IAAF,CAAd,CAAqB,CAArB,IAA2B+xD,UAAU,CAAE/xD,IAAF,CAAV,CAAiB,CAAjB,CAA3B;AAEA,SALD,MAKO;AAEN2wD,UAAAA,cAAc,CAAE3wD,IAAF,CAAd,CAAqB,CAArB,IAA2BmZ,MAAM,CAAC84C,gBAAlC;AACAtB,UAAAA,cAAc,CAAE3wD,IAAF,CAAd,CAAqB,CAArB,IAA2B,CAA3B;AAEA;AAED;;AAED2wD,MAAAA,cAAc,CAACqB,IAAf,CAAqB3B,aAArB;AAEA,UAAMc,aAAY,GAAG3wC,QAAQ,CAAC2c,eAAT,CAAyBzc,QAA9C;AACA,UAAM0wC,aAAY,GAAG5wC,QAAQ,CAAC2c,eAAT,CAAyB7e,MAA9C;AAEA,UAAIqzC,mBAAkB,GAAG,CAAzB;;AAEA,WAAM,IAAI3xD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9B,YAAMokC,UAAS,GAAGusB,cAAc,CAAE3wD,IAAF,CAAhC;AACA,YAAMN,KAAK,GAAG0kC,UAAS,CAAE,CAAF,CAAvB;AACA,YAAMjjC,OAAK,GAAGijC,UAAS,CAAE,CAAF,CAAvB;;AAEA,YAAK1kC,KAAK,KAAKyZ,MAAM,CAAC84C,gBAAjB,IAAqC9wD,OAA1C,EAAkD;AAEjD,cAAKgwD,aAAY,IAAI3wC,QAAQ,CAAC0e,YAAT,CAAuB,gBAAgBl/B,IAAvC,MAA+CmxD,aAAY,CAAEzxD,KAAF,CAAhF,EAA4F;AAE3F8gB,YAAAA,QAAQ,CAAC4d,YAAT,CAAuB,gBAAgBp+B,IAAvC,EAA0CmxD,aAAY,CAAEzxD,KAAF,CAAtD;AAEA;;AAED,cAAK0xD,aAAY,IAAI5wC,QAAQ,CAAC0e,YAAT,CAAuB,gBAAgBl/B,IAAvC,MAA+CoxD,aAAY,CAAE1xD,KAAF,CAAhF,EAA4F;AAE3F8gB,YAAAA,QAAQ,CAAC4d,YAAT,CAAuB,gBAAgBp+B,IAAvC,EAA0CoxD,aAAY,CAAE1xD,KAAF,CAAtD;AAEA;;AAEDykC,UAAAA,eAAe,CAAEnkC,IAAF,CAAf,GAAuBmB,OAAvB;AACAwwD,UAAAA,mBAAkB,IAAIxwD,OAAtB;AAEA,SAjBD,MAiBO;AAEN,cAAKgwD,aAAY,IAAI3wC,QAAQ,CAACwe,YAAT,CAAuB,gBAAgBh/B,IAAvC,MAA+C,IAApE,EAA2E;AAE1EwgB,YAAAA,QAAQ,CAACw/B,eAAT,CAA0B,gBAAgBhgD,IAA1C;AAEA;;AAED,cAAKoxD,aAAY,IAAI5wC,QAAQ,CAACwe,YAAT,CAAuB,gBAAgBh/B,IAAvC,MAA+C,IAApE,EAA2E;AAE1EwgB,YAAAA,QAAQ,CAACw/B,eAAT,CAA0B,gBAAgBhgD,IAA1C;AAEA;;AAEDmkC,UAAAA,eAAe,CAAEnkC,IAAF,CAAf,GAAuB,CAAvB;AAEA;AAED,OAtGK,CAwGN;AACA;AACA;;;AACA,UAAM4xD,mBAAkB,GAAGpxC,QAAQ,CAAC4c,oBAAT,GAAgC,CAAhC,GAAoC,IAAIu0B,mBAAnE;;AAEAvQ,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,0BAApC,EAAgE6jB,mBAAhE;AACAxQ,MAAAA,OAAO,CAACyQ,WAAR,GAAsBC,QAAtB,CAAgC/jB,EAAhC,EAAoC,uBAApC,EAA6D5J,eAA7D;AAEA;AAED;;AAED,SAAO;AAEN7rB,IAAAA,MAAM,EAAEA;AAFF,GAAP;AAMA;;AAED,SAAS45C,YAAT,CAAuBnkB,EAAvB,EAA2Bze,UAA3B,EAAuC7O,UAAvC,EAAmDkkC,IAAnD,EAA0D;AAEzD,MAAIwN,SAAS,GAAG,IAAIhkB,OAAJ,EAAhB;;AAEA,WAAS71B,MAAT,CAAiByH,MAAjB,EAA0B;AAEzB,QAAMytB,KAAK,GAAGmX,IAAI,CAAC3a,MAAL,CAAYwD,KAA1B;AAEA,QAAMhtB,QAAQ,GAAGT,MAAM,CAACS,QAAxB;AACA,QAAM4xC,cAAc,GAAG9iC,UAAU,CAACuf,GAAX,CAAgB9uB,MAAhB,EAAwBS,QAAxB,CAAvB,CALyB,CAOzB;;AAEA,QAAK2xC,SAAS,CAACtjB,GAAV,CAAeujB,cAAf,MAAoC5kB,KAAzC,EAAiD;AAEhDle,MAAAA,UAAU,CAAChX,MAAX,CAAmB85C,cAAnB;AAEAD,MAAAA,SAAS,CAACntD,GAAV,CAAeotD,cAAf,EAA+B5kB,KAA/B;AAEA;;AAED,QAAKztB,MAAM,CAAC6P,eAAZ,EAA8B;AAE7B,UAAK7P,MAAM,CAACsyC,gBAAP,CAAyB,SAAzB,EAAoCC,sBAApC,MAAiE,KAAtE,EAA8E;AAE7EvyC,QAAAA,MAAM,CAACwoC,gBAAP,CAAyB,SAAzB,EAAoC+J,sBAApC;AAEA;;AAED7xC,MAAAA,UAAU,CAACnI,MAAX,CAAmByH,MAAM,CAAC8P,cAA1B,EAA0C,KAA1C;;AAEA,UAAK9P,MAAM,CAAC+P,aAAP,KAAyB,IAA9B,EAAqC;AAEpCrP,QAAAA,UAAU,CAACnI,MAAX,CAAmByH,MAAM,CAAC+P,aAA1B,EAAyC,KAAzC;AAEA;AAED;;AAED,WAAOsiC,cAAP;AAEA;;AAED,WAASv7C,OAAT,GAAmB;AAElBs7C,IAAAA,SAAS,GAAG,IAAIhkB,OAAJ,EAAZ;AAEA;;AAED,WAASmkB,sBAAT,CAAiC1yD,KAAjC,EAAyC;AAExC,QAAM2yD,aAAa,GAAG3yD,KAAK,CAACC,MAA5B;AAEA0yD,IAAAA,aAAa,CAAC9J,mBAAd,CAAmC,SAAnC,EAA8C6J,sBAA9C;AAEA7xC,IAAAA,UAAU,CAACkO,MAAX,CAAmB4jC,aAAa,CAAC1iC,cAAjC;AAEA,QAAK0iC,aAAa,CAACziC,aAAd,KAAgC,IAArC,EAA4CrP,UAAU,CAACkO,MAAX,CAAmB4jC,aAAa,CAACziC,aAAjC;AAE5C;;AAED,SAAO;AAENxX,IAAAA,MAAM,EAAEA,MAFF;AAGNzB,IAAAA,OAAO,EAAEA;AAHH,GAAP;AAOA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAM27C,YAAY,GAAG,aAAc,IAAIngD,OAAJ,EAAnC;AACA,IAAMogD,iBAAiB,GAAG,aAAc,IAAIz7C,gBAAJ,EAAxC;AACA,IAAM07C,cAAc,GAAG,aAAc,IAAIr7C,aAAJ,EAArC;AACA,IAAMs7C,gBAAgB,GAAG,aAAc,IAAI1oB,WAAJ,EAAvC,C,CAEA;AAEA;;AAEA,IAAM2oB,aAAa,GAAG,EAAtB;AACA,IAAMC,aAAa,GAAG,EAAtB,C,CAEA;;AAEA,IAAMC,SAAS,GAAG,IAAIztD,YAAJ,CAAkB,EAAlB,CAAlB;AACA,IAAM0tD,SAAS,GAAG,IAAI1tD,YAAJ,CAAkB,CAAlB,CAAlB;AACA,IAAM2tD,SAAS,GAAG,IAAI3tD,YAAJ,CAAkB,CAAlB,CAAlB,C,CAEA;;AAEA,SAAS4tD,OAAT,CAAkBnzD,KAAlB,EAAyBozD,OAAzB,EAAkCC,SAAlC,EAA8C;AAE7C,MAAMC,SAAS,GAAGtzD,KAAK,CAAE,CAAF,CAAvB;AAEA,MAAKszD,SAAS,IAAI,CAAb,IAAkBA,SAAS,GAAG,CAAnC,EAAuC,OAAOtzD,KAAP,CAJM,CAK7C;AACA;;AAEA,MAAMyB,CAAC,GAAG2xD,OAAO,GAAGC,SAApB;AACA,MAAI7nD,CAAC,GAAGsnD,aAAa,CAAErxD,CAAF,CAArB;;AAEA,MAAK+J,CAAC,KAAKjM,SAAX,EAAuB;AAEtBiM,IAAAA,CAAC,GAAG,IAAIjG,YAAJ,CAAkB9D,CAAlB,CAAJ;AACAqxD,IAAAA,aAAa,CAAErxD,CAAF,CAAb,GAAqB+J,CAArB;AAEA;;AAED,MAAK4nD,OAAO,KAAK,CAAjB,EAAqB;AAEpBE,IAAAA,SAAS,CAACzjC,OAAV,CAAmBrkB,CAAnB,EAAsB,CAAtB;;AAEA,SAAM,IAAItL,CAAC,GAAG,CAAR,EAAWyH,MAAM,GAAG,CAA1B,EAA6BzH,CAAC,KAAKkzD,OAAnC,EAA4C,EAAGlzD,CAA/C,EAAmD;AAElDyH,MAAAA,MAAM,IAAI0rD,SAAV;AACArzD,MAAAA,KAAK,CAAEE,CAAF,CAAL,CAAW2vB,OAAX,CAAoBrkB,CAApB,EAAuB7D,MAAvB;AAEA;AAED;;AAED,SAAO6D,CAAP;AAEA;;AAED,SAAS+nD,WAAT,CAAsBnvD,CAAtB,EAAyBC,CAAzB,EAA6B;AAE5B,MAAKD,CAAC,CAAChE,MAAF,KAAaiE,CAAC,CAACjE,MAApB,EAA6B,OAAO,KAAP;;AAE7B,OAAM,IAAIF,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGiE,CAAC,CAAChE,MAAvB,EAA+BF,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA6C;AAE5C,QAAKkE,CAAC,CAAElE,CAAF,CAAD,KAAWmE,CAAC,CAAEnE,CAAF,CAAjB,EAAyB,OAAO,KAAP;AAEzB;;AAED,SAAO,IAAP;AAEA;;AAED,SAASszD,SAAT,CAAoBpvD,CAApB,EAAuBC,CAAvB,EAA2B;AAE1B,OAAM,IAAInE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGkE,CAAC,CAACjE,MAAvB,EAA+BF,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA6C;AAE5CkE,IAAAA,CAAC,CAAElE,CAAF,CAAD,GAASmE,CAAC,CAAEnE,CAAF,CAAV;AAEA;AAED,C,CAED;;;AAEA,SAASuzD,aAAT,CAAwBp/C,QAAxB,EAAkC5S,CAAlC,EAAsC;AAErC,MAAI+J,CAAC,GAAGunD,aAAa,CAAEtxD,CAAF,CAArB;;AAEA,MAAK+J,CAAC,KAAKjM,SAAX,EAAuB;AAEtBiM,IAAAA,CAAC,GAAG,IAAIc,UAAJ,CAAgB7K,CAAhB,CAAJ;AACAsxD,IAAAA,aAAa,CAAEtxD,CAAF,CAAb,GAAqB+J,CAArB;AAEA;;AAED,OAAM,IAAItL,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhCsL,IAAAA,CAAC,CAAEtL,CAAF,CAAD,GAASmU,QAAQ,CAACq/C,mBAAT,EAAT;AAEA;;AAED,SAAOloD,CAAP;AAEA,C,CAED;AAEA;AACA;AAEA;;;AAEA,SAASmoD,WAAT,CAAsB1lB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKA,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAApB,EAAwB;AAExBynC,EAAAA,EAAE,CAAC2lB,SAAH,CAAc,KAAKC,IAAnB,EAAyBrtD,CAAzB;AAEA4qB,EAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAb;AAEA,C,CAED;;;AAEA,SAASstD,WAAT,CAAsB7lB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;;AAEA,MAAK5qB,CAAC,CAAC5E,CAAF,KAAQrC,SAAb,EAAyB;AAExB,QAAK6xB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAAC5E,CAAjB,IAAsBwvB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACtE,CAA5C,EAAgD;AAE/C+rC,MAAAA,EAAE,CAAC8lB,SAAH,CAAc,KAAKF,IAAnB,EAAyBrtD,CAAC,CAAC5E,CAA3B,EAA8B4E,CAAC,CAACtE,CAAhC;AAEAkvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAAC5E,CAAf;AACAwvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACtE,CAAf;AAEA;AAED,GAXD,MAWO;AAEN,QAAKqxD,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAAC+lB,UAAH,CAAe,KAAKH,IAApB,EAA0BrtD,CAA1B;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;AAED;;AAED,SAASytD,WAAT,CAAsBhmB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;;AAEA,MAAK5qB,CAAC,CAAC5E,CAAF,KAAQrC,SAAb,EAAyB;AAExB,QAAK6xB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAAC5E,CAAjB,IAAsBwvB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACtE,CAAvC,IAA4CkvB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACsO,CAAlE,EAAsE;AAErEm5B,MAAAA,EAAE,CAACimB,SAAH,CAAc,KAAKL,IAAnB,EAAyBrtD,CAAC,CAAC5E,CAA3B,EAA8B4E,CAAC,CAACtE,CAAhC,EAAmCsE,CAAC,CAACsO,CAArC;AAEAsc,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAAC5E,CAAf;AACAwvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACtE,CAAf;AACAkvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACsO,CAAf;AAEA;AAED,GAZD,MAYO,IAAKtO,CAAC,CAACgF,CAAF,KAAQjM,SAAb,EAAyB;AAE/B,QAAK6xB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACgF,CAAjB,IAAsB4lB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACoE,CAAvC,IAA4CwmB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACnC,CAAlE,EAAsE;AAErE4pC,MAAAA,EAAE,CAACimB,SAAH,CAAc,KAAKL,IAAnB,EAAyBrtD,CAAC,CAACgF,CAA3B,EAA8BhF,CAAC,CAACoE,CAAhC,EAAmCpE,CAAC,CAACnC,CAArC;AAEA+sB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACgF,CAAf;AACA4lB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACoE,CAAf;AACAwmB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACnC,CAAf;AAEA;AAED,GAZM,MAYA;AAEN,QAAKkvD,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAACkmB,UAAH,CAAe,KAAKN,IAApB,EAA0BrtD,CAA1B;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;AAED;;AAED,SAAS4tD,WAAT,CAAsBnmB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;;AAEA,MAAK5qB,CAAC,CAAC5E,CAAF,KAAQrC,SAAb,EAAyB;AAExB,QAAK6xB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAAC5E,CAAjB,IAAsBwvB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACtE,CAAvC,IAA4CkvB,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACsO,CAA7D,IAAkEsc,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAAC,CAACC,CAAxF,EAA4F;AAE3FwnC,MAAAA,EAAE,CAAComB,SAAH,CAAc,KAAKR,IAAnB,EAAyBrtD,CAAC,CAAC5E,CAA3B,EAA8B4E,CAAC,CAACtE,CAAhC,EAAmCsE,CAAC,CAACsO,CAArC,EAAwCtO,CAAC,CAACC,CAA1C;AAEA2qB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAAC5E,CAAf;AACAwvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACtE,CAAf;AACAkvB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACsO,CAAf;AACAsc,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAC,CAACC,CAAf;AAEA;AAED,GAbD,MAaO;AAEN,QAAK8sD,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAACqmB,UAAH,CAAe,KAAKT,IAApB,EAA0BrtD,CAA1B;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;AAED,C,CAED;;;AAEA,SAAS+tD,UAAT,CAAqBtmB,EAArB,EAAyBznC,CAAzB,EAA6B;AAE5B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAMtqB,QAAQ,GAAGN,CAAC,CAACM,QAAnB;;AAEA,MAAKA,QAAQ,KAAKvH,SAAlB,EAA8B;AAE7B,QAAKg0D,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAACumB,gBAAH,CAAqB,KAAKX,IAA1B,EAAgC,KAAhC,EAAuCrtD,CAAvC;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA,GARD,MAQO;AAEN,QAAK+sD,WAAW,CAAEniC,KAAF,EAAStqB,QAAT,CAAhB,EAAsC;AAEtCosD,IAAAA,SAAS,CAAChuD,GAAV,CAAe4B,QAAf;AAEAmnC,IAAAA,EAAE,CAACumB,gBAAH,CAAqB,KAAKX,IAA1B,EAAgC,KAAhC,EAAuCX,SAAvC;AAEAM,IAAAA,SAAS,CAAEpiC,KAAF,EAAStqB,QAAT,CAAT;AAEA;AAED;;AAED,SAAS2tD,UAAT,CAAqBxmB,EAArB,EAAyBznC,CAAzB,EAA6B;AAE5B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAMtqB,QAAQ,GAAGN,CAAC,CAACM,QAAnB;;AAEA,MAAKA,QAAQ,KAAKvH,SAAlB,EAA8B;AAE7B,QAAKg0D,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAACymB,gBAAH,CAAqB,KAAKb,IAA1B,EAAgC,KAAhC,EAAuCrtD,CAAvC;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA,GARD,MAQO;AAEN,QAAK+sD,WAAW,CAAEniC,KAAF,EAAStqB,QAAT,CAAhB,EAAsC;AAEtCmsD,IAAAA,SAAS,CAAC/tD,GAAV,CAAe4B,QAAf;AAEAmnC,IAAAA,EAAE,CAACymB,gBAAH,CAAqB,KAAKb,IAA1B,EAAgC,KAAhC,EAAuCZ,SAAvC;AAEAO,IAAAA,SAAS,CAAEpiC,KAAF,EAAStqB,QAAT,CAAT;AAEA;AAED;;AAED,SAAS6tD,UAAT,CAAqB1mB,EAArB,EAAyBznC,CAAzB,EAA6B;AAE5B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAMtqB,QAAQ,GAAGN,CAAC,CAACM,QAAnB;;AAEA,MAAKA,QAAQ,KAAKvH,SAAlB,EAA8B;AAE7B,QAAKg0D,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,IAAAA,EAAE,CAAC2mB,gBAAH,CAAqB,KAAKf,IAA1B,EAAgC,KAAhC,EAAuCrtD,CAAvC;AAEAgtD,IAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA,GARD,MAQO;AAEN,QAAK+sD,WAAW,CAAEniC,KAAF,EAAStqB,QAAT,CAAhB,EAAsC;AAEtCksD,IAAAA,SAAS,CAAC9tD,GAAV,CAAe4B,QAAf;AAEAmnC,IAAAA,EAAE,CAAC2mB,gBAAH,CAAqB,KAAKf,IAA1B,EAAgC,KAAhC,EAAuCb,SAAvC;AAEAQ,IAAAA,SAAS,CAAEpiC,KAAF,EAAStqB,QAAT,CAAT;AAEA;AAED,C,CAED;;;AAEA,SAAS+tD,WAAT,CAAsB5mB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKA,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAApB,EAAwB;AAExBynC,EAAAA,EAAE,CAAC6mB,SAAH,CAAc,KAAKjB,IAAnB,EAAyBrtD,CAAzB;AAEA4qB,EAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAb;AAEA,C,CAED;;;AAEA,SAASuuD,WAAT,CAAsB9mB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAAC+mB,UAAH,CAAe,KAAKnB,IAApB,EAA0BrtD,CAA1B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;;AAED,SAASyuD,WAAT,CAAsBhnB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAACinB,UAAH,CAAe,KAAKrB,IAApB,EAA0BrtD,CAA1B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;;AAED,SAAS2uD,WAAT,CAAsBlnB,EAAtB,EAA0BznC,CAA1B,EAA8B;AAE7B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAACmnB,UAAH,CAAe,KAAKvB,IAApB,EAA0BrtD,CAA1B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA,C,CAED;;;AAEA,SAAS6uD,YAAT,CAAuBpnB,EAAvB,EAA2BznC,CAA3B,EAA+B;AAE9B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKA,KAAK,CAAE,CAAF,CAAL,KAAe5qB,CAApB,EAAwB;AAExBynC,EAAAA,EAAE,CAACqnB,UAAH,CAAe,KAAKzB,IAApB,EAA0BrtD,CAA1B;AAEA4qB,EAAAA,KAAK,CAAE,CAAF,CAAL,GAAa5qB,CAAb;AAEA,C,CAED;;;AAEA,SAAS+uD,YAAT,CAAuBtnB,EAAvB,EAA2BznC,CAA3B,EAA+B;AAE9B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAACunB,WAAH,CAAgB,KAAK3B,IAArB,EAA2BrtD,CAA3B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;;AAED,SAASivD,YAAT,CAAuBxnB,EAAvB,EAA2BznC,CAA3B,EAA+B;AAE9B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAACynB,WAAH,CAAgB,KAAK7B,IAArB,EAA2BrtD,CAA3B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA;;AAED,SAASmvD,YAAT,CAAuB1nB,EAAvB,EAA2BznC,CAA3B,EAA+B;AAE9B,MAAM4qB,KAAK,GAAG,KAAKA,KAAnB;AAEA,MAAKmiC,WAAW,CAAEniC,KAAF,EAAS5qB,CAAT,CAAhB,EAA+B;AAE/BynC,EAAAA,EAAE,CAAC2nB,WAAH,CAAgB,KAAK/B,IAArB,EAA2BrtD,CAA3B;AAEAgtD,EAAAA,SAAS,CAAEpiC,KAAF,EAAS5qB,CAAT,CAAT;AAEA,C,CAGD;;;AAEA,SAASqvD,UAAT,CAAqB5nB,EAArB,EAAyBznC,CAAzB,EAA4B6N,QAA5B,EAAuC;AAEtC,MAAM+c,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAM0kC,IAAI,GAAGzhD,QAAQ,CAACq/C,mBAAT,EAAb;;AAEA,MAAKtiC,KAAK,CAAE,CAAF,CAAL,KAAe0kC,IAApB,EAA2B;AAE1B7nB,IAAAA,EAAE,CAAC6mB,SAAH,CAAc,KAAKjB,IAAnB,EAAyBiC,IAAzB;AACA1kC,IAAAA,KAAK,CAAE,CAAF,CAAL,GAAa0kC,IAAb;AAEA;;AAEDzhD,EAAAA,QAAQ,CAAC0hD,YAAT,CAAuBvvD,CAAC,IAAIksD,YAA5B,EAA0CoD,IAA1C;AAEA;;AAED,SAASE,YAAT,CAAuB/nB,EAAvB,EAA2BznC,CAA3B,EAA8B6N,QAA9B,EAAyC;AAExC,MAAM+c,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAM0kC,IAAI,GAAGzhD,QAAQ,CAACq/C,mBAAT,EAAb;;AAEA,MAAKtiC,KAAK,CAAE,CAAF,CAAL,KAAe0kC,IAApB,EAA2B;AAE1B7nB,IAAAA,EAAE,CAAC6mB,SAAH,CAAc,KAAKjB,IAAnB,EAAyBiC,IAAzB;AACA1kC,IAAAA,KAAK,CAAE,CAAF,CAAL,GAAa0kC,IAAb;AAEA;;AAEDzhD,EAAAA,QAAQ,CAAC4hD,YAAT,CAAuBzvD,CAAC,IAAIosD,cAA5B,EAA4CkD,IAA5C;AAEA;;AAED,SAASI,UAAT,CAAqBjoB,EAArB,EAAyBznC,CAAzB,EAA4B6N,QAA5B,EAAuC;AAEtC,MAAM+c,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAM0kC,IAAI,GAAGzhD,QAAQ,CAACq/C,mBAAT,EAAb;;AAEA,MAAKtiC,KAAK,CAAE,CAAF,CAAL,KAAe0kC,IAApB,EAA2B;AAE1B7nB,IAAAA,EAAE,CAAC6mB,SAAH,CAAc,KAAKjB,IAAnB,EAAyBiC,IAAzB;AACA1kC,IAAAA,KAAK,CAAE,CAAF,CAAL,GAAa0kC,IAAb;AAEA;;AAEDzhD,EAAAA,QAAQ,CAAC8hD,cAAT,CAAyB3vD,CAAC,IAAIqsD,gBAA9B,EAAgDiD,IAAhD;AAEA;;AAED,SAASM,iBAAT,CAA4BnoB,EAA5B,EAAgCznC,CAAhC,EAAmC6N,QAAnC,EAA8C;AAE7C,MAAM+c,KAAK,GAAG,KAAKA,KAAnB;AACA,MAAM0kC,IAAI,GAAGzhD,QAAQ,CAACq/C,mBAAT,EAAb;;AAEA,MAAKtiC,KAAK,CAAE,CAAF,CAAL,KAAe0kC,IAApB,EAA2B;AAE1B7nB,IAAAA,EAAE,CAAC6mB,SAAH,CAAc,KAAKjB,IAAnB,EAAyBiC,IAAzB;AACA1kC,IAAAA,KAAK,CAAE,CAAF,CAAL,GAAa0kC,IAAb;AAEA;;AAEDzhD,EAAAA,QAAQ,CAACgiD,iBAAT,CAA4B7vD,CAAC,IAAImsD,iBAAjC,EAAoDmD,IAApD;AAEA,C,CAED;;;AAEA,SAASQ,iBAAT,CAA4Bl3D,IAA5B,EAAmC;AAElC,UAASA,IAAT;AAEC,SAAK,MAAL;AAAa,aAAOu0D,WAAP;AAAoB;;AACjC,SAAK,MAAL;AAAa,aAAOG,WAAP;AAAoB;;AACjC,SAAK,MAAL;AAAa,aAAOG,WAAP;AAAoB;;AACjC,SAAK,MAAL;AAAa,aAAOG,WAAP;AAAoB;;AAEjC,SAAK,MAAL;AAAa,aAAOG,UAAP;AAAmB;;AAChC,SAAK,MAAL;AAAa,aAAOE,UAAP;AAAmB;;AAChC,SAAK,MAAL;AAAa,aAAOE,UAAP;AAAmB;;AAEhC,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOE,WAAP;AAAoB;;AAC9C,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOE,WAAP;AAAoB;;AAC9C,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOE,WAAP;AAAoB;;AAC9C,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOE,WAAP;AAAoB;;AAE9C,SAAK,MAAL;AAAa,aAAOE,YAAP;AAAqB;;AAClC,SAAK,MAAL;AAAa,aAAOE,YAAP;AAAqB;;AAClC,SAAK,MAAL;AAAa,aAAOE,YAAP;AAAqB;;AAClC,SAAK,MAAL;AAAa,aAAOE,YAAP;AAAqB;;AAElC,SAAK,MAAL,CArBD,CAqBc;;AACb,SAAK,MAAL,CAtBD,CAsBc;;AACb,SAAK,MAAL,CAvBD,CAuBc;;AACb,SAAK,MAAL,CAxBD,CAwBc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOE,UAAP;;AAED,SAAK,MAAL,CA5BD,CA4Bc;;AACb,SAAK,MAAL,CA7BD,CA6Bc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOG,YAAP;;AAED,SAAK,MAAL,CAjCD,CAiCc;;AACb,SAAK,MAAL,CAlCD,CAkCc;;AACb,SAAK,MAAL,CAnCD,CAmCc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOE,UAAP;;AAED,SAAK,MAAL,CAvCD,CAuCc;;AACb,SAAK,MAAL,CAxCD,CAwCc;;AACb,SAAK,MAAL,CAzCD,CAyCc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOE,iBAAP;AA3CF;AA+CA,C,CAGD;;;AAEA,SAASG,gBAAT,CAA2BtoB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElCynC,EAAAA,EAAE,CAACuoB,UAAH,CAAe,KAAK3C,IAApB,EAA0BrtD,CAA1B;AAEA,C,CAED;;;AAEA,SAASiwD,gBAAT,CAA2BxoB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,CAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAAC+lB,UAAH,CAAe,KAAKH,IAApB,EAA0BtiD,IAA1B;AAEA;;AAED,SAASmlD,gBAAT,CAA2BzoB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,CAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAACkmB,UAAH,CAAe,KAAKN,IAApB,EAA0BtiD,IAA1B;AAEA;;AAED,SAASolD,gBAAT,CAA2B1oB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,CAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAACqmB,UAAH,CAAe,KAAKT,IAApB,EAA0BtiD,IAA1B;AAEA,C,CAED;;;AAEA,SAASqlD,eAAT,CAA0B3oB,EAA1B,EAA8BznC,CAA9B,EAAkC;AAEjC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,CAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAACumB,gBAAH,CAAqB,KAAKX,IAA1B,EAAgC,KAAhC,EAAuCtiD,IAAvC;AAEA;;AAED,SAASslD,eAAT,CAA0B5oB,EAA1B,EAA8BznC,CAA9B,EAAkC;AAEjC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,CAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAACymB,gBAAH,CAAqB,KAAKb,IAA1B,EAAgC,KAAhC,EAAuCtiD,IAAvC;AAEA;;AAED,SAASulD,eAAT,CAA0B7oB,EAA1B,EAA8BznC,CAA9B,EAAkC;AAEjC,MAAM+K,IAAI,GAAG4hD,OAAO,CAAE3sD,CAAF,EAAK,KAAK2I,IAAV,EAAgB,EAAhB,CAApB;AAEA8+B,EAAAA,EAAE,CAAC2mB,gBAAH,CAAqB,KAAKf,IAA1B,EAAgC,KAAhC,EAAuCtiD,IAAvC;AAEA,C,CAED;;;AAEA,SAASwlD,gBAAT,CAA2B9oB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElCynC,EAAAA,EAAE,CAAC+oB,UAAH,CAAe,KAAKnD,IAApB,EAA0BrtD,CAA1B;AAEA,C,CAED;;;AAEA,SAASywD,gBAAT,CAA2BhpB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElCynC,EAAAA,EAAE,CAAC+mB,UAAH,CAAe,KAAKnB,IAApB,EAA0BrtD,CAA1B;AAEA;;AAED,SAAS0wD,gBAAT,CAA2BjpB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElCynC,EAAAA,EAAE,CAACinB,UAAH,CAAe,KAAKrB,IAApB,EAA0BrtD,CAA1B;AAEA;;AAED,SAAS2wD,gBAAT,CAA2BlpB,EAA3B,EAA+BznC,CAA/B,EAAmC;AAElCynC,EAAAA,EAAE,CAACmnB,UAAH,CAAe,KAAKvB,IAApB,EAA0BrtD,CAA1B;AAEA,C,CAED;;;AAEA,SAAS4wD,iBAAT,CAA4BnpB,EAA5B,EAAgCznC,CAAhC,EAAoC;AAEnCynC,EAAAA,EAAE,CAACopB,WAAH,CAAgB,KAAKxD,IAArB,EAA2BrtD,CAA3B;AAEA,C,CAED;;;AAEA,SAAS8wD,iBAAT,CAA4BrpB,EAA5B,EAAgCznC,CAAhC,EAAoC;AAEnCynC,EAAAA,EAAE,CAACunB,WAAH,CAAgB,KAAK3B,IAArB,EAA2BrtD,CAA3B;AAEA;;AAED,SAAS+wD,iBAAT,CAA4BtpB,EAA5B,EAAgCznC,CAAhC,EAAoC;AAEnCynC,EAAAA,EAAE,CAACynB,WAAH,CAAgB,KAAK7B,IAArB,EAA2BrtD,CAA3B;AAEA;;AAED,SAASgxD,iBAAT,CAA4BvpB,EAA5B,EAAgCznC,CAAhC,EAAoC;AAEnCynC,EAAAA,EAAE,CAAC2nB,WAAH,CAAgB,KAAK/B,IAArB,EAA2BrtD,CAA3B;AAEA,C,CAGD;;;AAEA,SAASixD,eAAT,CAA0BxpB,EAA1B,EAA8BznC,CAA9B,EAAiC6N,QAAjC,EAA4C;AAE3C,MAAM5S,CAAC,GAAG+E,CAAC,CAACpG,MAAZ;AAEA,MAAMs3D,KAAK,GAAGjE,aAAa,CAAEp/C,QAAF,EAAY5S,CAAZ,CAA3B;AAEAwsC,EAAAA,EAAE,CAAC+oB,UAAH,CAAe,KAAKnD,IAApB,EAA0B6D,KAA1B;;AAEA,OAAM,IAAIx3D,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhCmU,IAAAA,QAAQ,CAAC0hD,YAAT,CAAuBvvD,CAAC,CAAEtG,CAAF,CAAD,IAAUwyD,YAAjC,EAA+CgF,KAAK,CAAEx3D,CAAF,CAApD;AAEA;AAED;;AAED,SAASy3D,gBAAT,CAA2B1pB,EAA3B,EAA+BznC,CAA/B,EAAkC6N,QAAlC,EAA6C;AAE5C,MAAM5S,CAAC,GAAG+E,CAAC,CAACpG,MAAZ;AAEA,MAAMs3D,KAAK,GAAGjE,aAAa,CAAEp/C,QAAF,EAAY5S,CAAZ,CAA3B;AAEAwsC,EAAAA,EAAE,CAAC+oB,UAAH,CAAe,KAAKnD,IAApB,EAA0B6D,KAA1B;;AAEA,OAAM,IAAIx3D,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhCmU,IAAAA,QAAQ,CAAC4hD,YAAT,CAAuBzvD,CAAC,CAAEtG,CAAF,CAAD,IAAU0yD,cAAjC,EAAiD8E,KAAK,CAAEx3D,CAAF,CAAtD;AAEA;AAED;;AAED,SAAS03D,eAAT,CAA0B3pB,EAA1B,EAA8BznC,CAA9B,EAAiC6N,QAAjC,EAA4C;AAE3C,MAAM5S,CAAC,GAAG+E,CAAC,CAACpG,MAAZ;AAEA,MAAMs3D,KAAK,GAAGjE,aAAa,CAAEp/C,QAAF,EAAY5S,CAAZ,CAA3B;AAEAwsC,EAAAA,EAAE,CAAC+oB,UAAH,CAAe,KAAKnD,IAApB,EAA0B6D,KAA1B;;AAEA,OAAM,IAAIx3D,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhCmU,IAAAA,QAAQ,CAAC8hD,cAAT,CAAyB3vD,CAAC,CAAEtG,CAAF,CAAD,IAAU2yD,gBAAnC,EAAqD6E,KAAK,CAAEx3D,CAAF,CAA1D;AAEA;AAED;;AAED,SAAS23D,qBAAT,CAAgC5pB,EAAhC,EAAoCznC,CAApC,EAAuC6N,QAAvC,EAAkD;AAEjD,MAAM5S,CAAC,GAAG+E,CAAC,CAACpG,MAAZ;AAEA,MAAMs3D,KAAK,GAAGjE,aAAa,CAAEp/C,QAAF,EAAY5S,CAAZ,CAA3B;AAEAwsC,EAAAA,EAAE,CAAC+oB,UAAH,CAAe,KAAKnD,IAApB,EAA0B6D,KAA1B;;AAEA,OAAM,IAAIx3D,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B,EAAiC;AAEhCmU,IAAAA,QAAQ,CAACgiD,iBAAT,CAA4B7vD,CAAC,CAAEtG,CAAF,CAAD,IAAUyyD,iBAAtC,EAAyD+E,KAAK,CAAEx3D,CAAF,CAA9D;AAEA;AAED,C,CAGD;;;AAEA,SAAS43D,kBAAT,CAA6B14D,IAA7B,EAAoC;AAEnC,UAASA,IAAT;AAEC,SAAK,MAAL;AAAa,aAAOm3D,gBAAP;AAAyB;;AACtC,SAAK,MAAL;AAAa,aAAOE,gBAAP;AAAyB;;AACtC,SAAK,MAAL;AAAa,aAAOC,gBAAP;AAAyB;;AACtC,SAAK,MAAL;AAAa,aAAOC,gBAAP;AAAyB;;AAEtC,SAAK,MAAL;AAAa,aAAOC,eAAP;AAAwB;;AACrC,SAAK,MAAL;AAAa,aAAOC,eAAP;AAAwB;;AACrC,SAAK,MAAL;AAAa,aAAOC,eAAP;AAAwB;;AAErC,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOC,gBAAP;AAAyB;;AACnD,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOE,gBAAP;AAAyB;;AACnD,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOC,gBAAP;AAAyB;;AACnD,SAAK,MAAL;AAAa,SAAK,MAAL;AAAa,aAAOC,gBAAP;AAAyB;;AAEnD,SAAK,MAAL;AAAa,aAAOC,iBAAP;AAA0B;;AACvC,SAAK,MAAL;AAAa,aAAOE,iBAAP;AAA0B;;AACvC,SAAK,MAAL;AAAa,aAAOC,iBAAP;AAA0B;;AACvC,SAAK,MAAL;AAAa,aAAOC,iBAAP;AAA0B;;AAEvC,SAAK,MAAL,CArBD,CAqBc;;AACb,SAAK,MAAL,CAtBD,CAsBc;;AACb,SAAK,MAAL,CAvBD,CAuBc;;AACb,SAAK,MAAL,CAxBD,CAwBc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOC,eAAP;;AAED,SAAK,MAAL,CA5BD,CA4Bc;;AACb,SAAK,MAAL,CA7BD,CA6Bc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOE,gBAAP;;AAED,SAAK,MAAL,CAjCD,CAiCc;;AACb,SAAK,MAAL,CAlCD,CAkCc;;AACb,SAAK,MAAL,CAnCD,CAmCc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOC,eAAP;;AAED,SAAK,MAAL,CAvCD,CAuCc;;AACb,SAAK,MAAL,CAxCD,CAwCc;;AACb,SAAK,MAAL,CAzCD,CAyCc;;AACb,SAAK,MAAL;AAAa;AACZ,aAAOC,qBAAP;AA3CF;AA+CA,C,CAED;;;IAEME,a,GAEL,uBAAajpC,EAAb,EAAiBkpC,UAAjB,EAA6BnE,IAA7B,EAAoC;AAAA;;AAEnC,OAAK/kC,EAAL,GAAUA,EAAV;AACA,OAAK+kC,IAAL,GAAYA,IAAZ;AACA,OAAKziC,KAAL,GAAa,EAAb;AACA,OAAK4gC,QAAL,GAAgBsE,iBAAiB,CAAE0B,UAAU,CAAC54D,IAAb,CAAjC,CALmC,CAOnC;AAEA,C;;IAII64D,gB,GAEL,0BAAanpC,EAAb,EAAiBkpC,UAAjB,EAA6BnE,IAA7B,EAAoC;AAAA;;AAEnC,OAAK/kC,EAAL,GAAUA,EAAV;AACA,OAAK+kC,IAAL,GAAYA,IAAZ;AACA,OAAKziC,KAAL,GAAa,EAAb;AACA,OAAKjiB,IAAL,GAAY6oD,UAAU,CAAC7oD,IAAvB;AACA,OAAK6iD,QAAL,GAAgB8F,kBAAkB,CAAEE,UAAU,CAAC54D,IAAb,CAAlC,CANmC,CAQnC;AAEA,C;;IAII84D,iB;AAEL,6BAAappC,EAAb,EAAkB;AAAA;;AAEjB,SAAKA,EAAL,GAAUA,EAAV;AAEA,SAAKqpC,GAAL,GAAW,EAAX;AACA,SAAKlgC,GAAL,GAAW,EAAX;AAEA;;;;WAED,kBAAUgW,EAAV,EAAc5sC,KAAd,EAAqBgT,QAArB,EAAgC;AAE/B,UAAM8jD,GAAG,GAAG,KAAKA,GAAjB;;AAEA,WAAM,IAAIj4D,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG02D,GAAG,CAAC/3D,MAAzB,EAAiCF,CAAC,KAAKuB,CAAvC,EAA0C,EAAGvB,CAA7C,EAAiD;AAEhD,YAAM+e,CAAC,GAAGk5C,GAAG,CAAEj4D,CAAF,CAAb;AACA+e,QAAAA,CAAC,CAAC+yC,QAAF,CAAY/jB,EAAZ,EAAgB5sC,KAAK,CAAE4d,CAAC,CAAC6P,EAAJ,CAArB,EAA+Bza,QAA/B;AAEA;AAED;;;;KAIF;AAEA;;;AAEA,IAAM+jD,UAAU,GAAG,qBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAqBC,SAArB,EAAgCC,aAAhC,EAAgD;AAE/CD,EAAAA,SAAS,CAACH,GAAV,CAAcz4D,IAAd,CAAoB64D,aAApB;AACAD,EAAAA,SAAS,CAACrgC,GAAV,CAAesgC,aAAa,CAACzpC,EAA7B,IAAoCypC,aAApC;AAEA;;AAED,SAASC,YAAT,CAAuBR,UAAvB,EAAmCnE,IAAnC,EAAyCyE,SAAzC,EAAqD;AAEpD,MAAMG,IAAI,GAAGT,UAAU,CAACprD,IAAxB;AAAA,MACC8rD,UAAU,GAAGD,IAAI,CAACr4D,MADnB,CAFoD,CAKpD;;AACAg4D,EAAAA,UAAU,CAACO,SAAX,GAAuB,CAAvB;;AAEA,SAAQ,IAAR,EAAe;AAEd,QAAMC,KAAK,GAAGR,UAAU,CAACrpD,IAAX,CAAiB0pD,IAAjB,CAAd;AAAA,QACCI,QAAQ,GAAGT,UAAU,CAACO,SADvB;AAGA,QAAI7pC,EAAE,GAAG8pC,KAAK,CAAE,CAAF,CAAd;AACA,QAAME,SAAS,GAAGF,KAAK,CAAE,CAAF,CAAL,KAAe,GAAjC;AAAA,QACCG,SAAS,GAAGH,KAAK,CAAE,CAAF,CADlB;AAGA,QAAKE,SAAL,EAAiBhqC,EAAE,GAAGA,EAAE,GAAG,CAAV,CATH,CASgB;;AAE9B,QAAKiqC,SAAS,KAAKx5D,SAAd,IAA2Bw5D,SAAS,KAAK,GAAd,IAAqBF,QAAQ,GAAG,CAAX,KAAiBH,UAAtE,EAAmF;AAElF;AAEAL,MAAAA,UAAU,CAAEC,SAAF,EAAaS,SAAS,KAAKx5D,SAAd,GACtB,IAAIw4D,aAAJ,CAAmBjpC,EAAnB,EAAuBkpC,UAAvB,EAAmCnE,IAAnC,CADsB,GAEtB,IAAIoE,gBAAJ,CAAsBnpC,EAAtB,EAA0BkpC,UAA1B,EAAsCnE,IAAtC,CAFS,CAAV;AAIA;AAEA,KAVD,MAUO;AAEN;AAEA,UAAM57B,GAAG,GAAGqgC,SAAS,CAACrgC,GAAtB;AACA,UAAI+gC,IAAI,GAAG/gC,GAAG,CAAEnJ,EAAF,CAAd;;AAEA,UAAKkqC,IAAI,KAAKz5D,SAAd,EAA0B;AAEzBy5D,QAAAA,IAAI,GAAG,IAAId,iBAAJ,CAAuBppC,EAAvB,CAAP;AACAupC,QAAAA,UAAU,CAAEC,SAAF,EAAaU,IAAb,CAAV;AAEA;;AAEDV,MAAAA,SAAS,GAAGU,IAAZ;AAEA;AAED;AAED,C,CAED;;;IAEMC,a;AAEL,yBAAahrB,EAAb,EAAiBqT,OAAjB,EAA2B;AAAA;;AAE1B,SAAK6W,GAAL,GAAW,EAAX;AACA,SAAKlgC,GAAL,GAAW,EAAX;AAEA,QAAMx2B,CAAC,GAAGwsC,EAAE,CAACirB,mBAAH,CAAwB5X,OAAxB,EAAiC,KAAjC,CAAV;;AAEA,SAAM,IAAIphD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGuB,CAArB,EAAwB,EAAGvB,CAA3B,EAA+B;AAE9B,UAAM2kD,IAAI,GAAG5W,EAAE,CAACkrB,gBAAH,CAAqB7X,OAArB,EAA8BphD,CAA9B,CAAb;AAAA,UACC2zD,IAAI,GAAG5lB,EAAE,CAACmrB,kBAAH,CAAuB9X,OAAvB,EAAgCuD,IAAI,CAACj4C,IAArC,CADR;AAGA4rD,MAAAA,YAAY,CAAE3T,IAAF,EAAQgP,IAAR,EAAc,IAAd,CAAZ;AAEA;AAED;;;;WAED,kBAAU5lB,EAAV,EAAcrhC,IAAd,EAAoBvL,KAApB,EAA2BgT,QAA3B,EAAsC;AAErC,UAAM4K,CAAC,GAAG,KAAKgZ,GAAL,CAAUrrB,IAAV,CAAV;AAEA,UAAKqS,CAAC,KAAK1f,SAAX,EAAuB0f,CAAC,CAAC+yC,QAAF,CAAY/jB,EAAZ,EAAgB5sC,KAAhB,EAAuBgT,QAAvB;AAEvB;;;WAED,qBAAa45B,EAAb,EAAiBhuB,MAAjB,EAAyBrT,IAAzB,EAAgC;AAE/B,UAAMpG,CAAC,GAAGyZ,MAAM,CAAErT,IAAF,CAAhB;AAEA,UAAKpG,CAAC,KAAKjH,SAAX,EAAuB,KAAKyyD,QAAL,CAAe/jB,EAAf,EAAmBrhC,IAAnB,EAAyBpG,CAAzB;AAEvB;;;WAED,gBAAeynC,EAAf,EAAmBkqB,GAAnB,EAAwB9mC,MAAxB,EAAgChd,QAAhC,EAA2C;AAE1C,WAAM,IAAInU,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG02D,GAAG,CAAC/3D,MAAzB,EAAiCF,CAAC,KAAKuB,CAAvC,EAA0C,EAAGvB,CAA7C,EAAiD;AAEhD,YAAM+e,CAAC,GAAGk5C,GAAG,CAAEj4D,CAAF,CAAb;AAAA,YACCsG,CAAC,GAAG6qB,MAAM,CAAEpS,CAAC,CAAC6P,EAAJ,CADX;;AAGA,YAAKtoB,CAAC,CAAC4N,WAAF,KAAkB,KAAvB,EAA+B;AAE9B;AACA6K,UAAAA,CAAC,CAAC+yC,QAAF,CAAY/jB,EAAZ,EAAgBznC,CAAC,CAACnF,KAAlB,EAAyBgT,QAAzB;AAEA;AAED;AAED;;;WAED,sBAAqB8jD,GAArB,EAA0B9mC,MAA1B,EAAmC;AAElC,UAAM7lB,CAAC,GAAG,EAAV;;AAEA,WAAM,IAAItL,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG02D,GAAG,CAAC/3D,MAAzB,EAAiCF,CAAC,KAAKuB,CAAvC,EAA0C,EAAGvB,CAA7C,EAAiD;AAEhD,YAAM+e,CAAC,GAAGk5C,GAAG,CAAEj4D,CAAF,CAAb;AACA,YAAK+e,CAAC,CAAC6P,EAAF,IAAQuC,MAAb,EAAsB7lB,CAAC,CAAC9L,IAAF,CAAQuf,CAAR;AAEtB;;AAED,aAAOzT,CAAP;AAEA;;;;;;AAIF,SAAS6tD,WAAT,CAAsBprB,EAAtB,EAA0B7uC,IAA1B,EAAgCyP,MAAhC,EAAyC;AAExC,MAAMy7B,MAAM,GAAG2D,EAAE,CAACqrB,YAAH,CAAiBl6D,IAAjB,CAAf;AAEA6uC,EAAAA,EAAE,CAACsrB,YAAH,CAAiBjvB,MAAjB,EAAyBz7B,MAAzB;AACAo/B,EAAAA,EAAE,CAACurB,aAAH,CAAkBlvB,MAAlB;AAEA,SAAOA,MAAP;AAEA;;AAED,IAAImvB,cAAc,GAAG,CAArB;;AAEA,SAASC,YAAT,CAAuB7qD,MAAvB,EAA+B8qD,SAA/B,EAA2C;AAE1C,MAAMxJ,KAAK,GAAGthD,MAAM,CAAC+qD,KAAP,CAAc,IAAd,CAAd;AACA,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMxnD,IAAI,GAAG5R,IAAI,CAACc,GAAL,CAAUo4D,SAAS,GAAG,CAAtB,EAAyB,CAAzB,CAAb;AACA,MAAMG,EAAE,GAAGr5D,IAAI,CAACa,GAAL,CAAUq4D,SAAS,GAAG,CAAtB,EAAyBxJ,KAAK,CAAC/vD,MAA/B,CAAX;;AAEA,OAAM,IAAIF,CAAC,GAAGmS,IAAd,EAAoBnS,CAAC,GAAG45D,EAAxB,EAA4B55D,CAAC,EAA7B,EAAmC;AAElC,QAAMirC,IAAI,GAAGjrC,CAAC,GAAG,CAAjB;AACA25D,IAAAA,MAAM,CAACn6D,IAAP,WAAgByrC,IAAI,KAAKwuB,SAAT,GAAqB,GAArB,GAA2B,GAA3C,cAAkDxuB,IAAlD,eAA2DglB,KAAK,CAAEjwD,CAAF,CAAhE;AAEA;;AAED,SAAO25D,MAAM,CAACE,IAAP,CAAa,IAAb,CAAP;AAEA;;AAED,SAASC,qBAAT,CAAgC/mD,QAAhC,EAA2C;AAE1C,UAASA,QAAT;AAEC,SAAKnW,cAAL;AACC,aAAO,CAAE,QAAF,EAAY,WAAZ,CAAP;;AACD,SAAKC,YAAL;AACC,aAAO,CAAE,MAAF,EAAU,WAAV,CAAP;;AACD;AACCoI,MAAAA,OAAO,CAACC,IAAR,CAAc,2CAAd,EAA2D6N,QAA3D;AACA,aAAO,CAAE,QAAF,EAAY,WAAZ,CAAP;AARF;AAYA;;AAED,SAASgnD,eAAT,CAA0BhsB,EAA1B,EAA8B3D,MAA9B,EAAsClrC,IAAtC,EAA6C;AAE5C,MAAM86D,MAAM,GAAGjsB,EAAE,CAACksB,kBAAH,CAAuB7vB,MAAvB,EAA+B,KAA/B,CAAf;AACA,MAAM8vB,MAAM,GAAGnsB,EAAE,CAACosB,gBAAH,CAAqB/vB,MAArB,EAA8BgwB,IAA9B,EAAf;AAEA,MAAKJ,MAAM,IAAIE,MAAM,KAAK,EAA1B,EAA+B,OAAO,EAAP;AAE/B,MAAMG,YAAY,GAAG,iBAAiBxrD,IAAjB,CAAuBqrD,MAAvB,CAArB;;AACA,MAAKG,YAAL,EAAoB;AAEnB;AACA;AAEA,QAAMZ,SAAS,GAAG1qD,QAAQ,CAAEsrD,YAAY,CAAE,CAAF,CAAd,CAA1B;AACA,WAAOn7D,IAAI,CAACo7D,WAAL,KAAqB,MAArB,GAA8BJ,MAA9B,GAAuC,MAAvC,GAAgDV,YAAY,CAAEzrB,EAAE,CAACwsB,eAAH,CAAoBnwB,MAApB,CAAF,EAAgCqvB,SAAhC,CAAnE;AAEA,GARD,MAQO;AAEN,WAAOS,MAAP;AAEA;AAED;;AAED,SAASM,wBAAT,CAAmCC,YAAnC,EAAiD1nD,QAAjD,EAA4D;AAE3D,MAAMjE,UAAU,GAAGgrD,qBAAqB,CAAE/mD,QAAF,CAAxC;AACA,SAAO,UAAU0nD,YAAV,GAAyB,kCAAzB,GAA8D3rD,UAAU,CAAE,CAAF,CAAxE,GAAgFA,UAAU,CAAE,CAAF,CAA1F,GAAkG,KAAzG;AAEA;;AAED,SAAS4rD,sBAAT,CAAiCD,YAAjC,EAA+C7wB,WAA/C,EAA6D;AAE5D,MAAI+wB,eAAJ;;AAEA,UAAS/wB,WAAT;AAEC,SAAKvyC,iBAAL;AACCsjE,MAAAA,eAAe,GAAG,QAAlB;AACA;;AAED,SAAKrjE,mBAAL;AACCqjE,MAAAA,eAAe,GAAG,UAAlB;AACA;;AAED,SAAKpjE,iBAAL;AACCojE,MAAAA,eAAe,GAAG,iBAAlB;AACA;;AAED,SAAKnjE,qBAAL;AACCmjE,MAAAA,eAAe,GAAG,YAAlB;AACA;;AAED,SAAKljE,iBAAL;AACCkjE,MAAAA,eAAe,GAAG,QAAlB;AACA;;AAED;AACC11D,MAAAA,OAAO,CAACC,IAAR,CAAc,8CAAd,EAA8D0kC,WAA9D;AACA+wB,MAAAA,eAAe,GAAG,QAAlB;AAxBF;;AA4BA,SAAO,UAAUF,YAAV,GAAyB,0BAAzB,GAAsDE,eAAtD,GAAwE,yBAA/E;AAEA;;AAED,SAASC,kBAAT,CAA6BpqC,UAA7B,EAA0C;AAEzC,MAAMqqC,MAAM,GAAG,CACZrqC,UAAU,CAACsqC,oBAAX,IAAmC,CAAC,CAAEtqC,UAAU,CAACuqC,kBAAjD,IAAuEvqC,UAAU,CAAC8H,OAAlF,IAA6F9H,UAAU,CAACwqC,qBAAxG,IAAiIxqC,UAAU,CAACgH,kBAA5I,IAAkKhH,UAAU,CAAC+F,WAA7K,IAA4L/F,UAAU,CAACyqC,QAAX,KAAwB,UAAtN,GAAqO,iDAArO,GAAyR,EAD3Q,EAEd,CAAEzqC,UAAU,CAAC0qC,kBAAX,IAAiC1qC,UAAU,CAACo1B,sBAA9C,KAA0Ep1B,UAAU,CAAC2qC,0BAArF,GAAkH,uCAAlH,GAA4J,EAF9I,EAGZ3qC,UAAU,CAAC4qC,oBAAX,IAAmC5qC,UAAU,CAAC6qC,4BAAhD,GAAiF,0CAAjF,GAA8H,EAHhH,EAId,CAAE7qC,UAAU,CAAC8qC,yBAAX,IAAwC9qC,UAAU,CAAC4I,MAAnD,IAA6D5I,UAAU,CAACkJ,YAA1E,KAA4FlJ,UAAU,CAAC+qC,iCAAvG,GAA2I,+CAA3I,GAA6L,EAJ/K,CAAf;AAOA,SAAOV,MAAM,CAACW,MAAP,CAAeC,eAAf,EAAiC5B,IAAjC,CAAuC,IAAvC,CAAP;AAEA;;AAED,SAAS6B,eAAT,CAA0Bn1B,OAA1B,EAAoC;AAEnC,MAAMs0B,MAAM,GAAG,EAAf;;AAEA,OAAM,IAAMnuD,IAAZ,IAAoB65B,OAApB,EAA8B;AAE7B,QAAMplC,OAAK,GAAGolC,OAAO,CAAE75B,IAAF,CAArB;AAEA,QAAKvL,OAAK,KAAK,KAAf,EAAuB;AAEvB05D,IAAAA,MAAM,CAACr7D,IAAP,CAAa,aAAakN,IAAb,GAAoB,GAApB,GAA0BvL,OAAvC;AAEA;;AAED,SAAO05D,MAAM,CAAChB,IAAP,CAAa,IAAb,CAAP;AAEA;;AAED,SAAS8B,uBAAT,CAAkC5tB,EAAlC,EAAsCqT,OAAtC,EAAgD;AAE/C,MAAM3gC,UAAU,GAAG,EAAnB;AAEA,MAAMlf,CAAC,GAAGwsC,EAAE,CAACirB,mBAAH,CAAwB5X,OAAxB,EAAiC,KAAjC,CAAV;;AAEA,OAAM,IAAIphD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGuB,CAArB,EAAwBvB,CAAC,EAAzB,EAA+B;AAE9B,QAAM2kD,IAAI,GAAG5W,EAAE,CAAC6tB,eAAH,CAAoBxa,OAApB,EAA6BphD,CAA7B,CAAb;AACA,QAAM0M,IAAI,GAAGi4C,IAAI,CAACj4C,IAAlB;AAEA,QAAIm3C,YAAY,GAAG,CAAnB;AACA,QAAKc,IAAI,CAACzlD,IAAL,KAAc,KAAnB,EAA2B2kD,YAAY,GAAG,CAAf;AAC3B,QAAKc,IAAI,CAACzlD,IAAL,KAAc,KAAnB,EAA2B2kD,YAAY,GAAG,CAAf;AAC3B,QAAKc,IAAI,CAACzlD,IAAL,KAAc,KAAnB,EAA2B2kD,YAAY,GAAG,CAAf,CARG,CAU9B;;AAEApjC,IAAAA,UAAU,CAAE/T,IAAF,CAAV,GAAqB;AACpBxN,MAAAA,IAAI,EAAEylD,IAAI,CAACzlD,IADS;AAEpB4jD,MAAAA,QAAQ,EAAE/U,EAAE,CAAC8tB,iBAAH,CAAsBza,OAAtB,EAA+B10C,IAA/B,CAFU;AAGpBm3C,MAAAA,YAAY,EAAEA;AAHM,KAArB;AAMA;;AAED,SAAOpjC,UAAP;AAEA;;AAED,SAASg7C,eAAT,CAA0B9sD,MAA1B,EAAmC;AAElC,SAAOA,MAAM,KAAK,EAAlB;AAEA;;AAED,SAASmtD,gBAAT,CAA2BntD,MAA3B,EAAmC6hB,UAAnC,EAAgD;AAE/C,SAAO7hB,MAAM,CACXotD,OADK,CACI,iBADJ,EACuBvrC,UAAU,CAACwrC,YADlC,EAELD,OAFK,CAEI,kBAFJ,EAEwBvrC,UAAU,CAACyrC,aAFnC,EAGLF,OAHK,CAGI,uBAHJ,EAG6BvrC,UAAU,CAAC0rC,iBAHxC,EAILH,OAJK,CAII,mBAJJ,EAIyBvrC,UAAU,CAAC2rC,cAJpC,EAKLJ,OALK,CAKI,kBALJ,EAKwBvrC,UAAU,CAAC4rC,aALnC,EAMLL,OANK,CAMI,wBANJ,EAM8BvrC,UAAU,CAAC6rC,kBANzC,EAOLN,OAPK,CAOI,yBAPJ,EAO+BvrC,UAAU,CAAC8rC,mBAP1C,EAQLP,OARK,CAQI,0BARJ,EAQgCvrC,UAAU,CAAC+rC,oBAR3C,CAAP;AAUA;;AAED,SAASC,wBAAT,CAAmC7tD,MAAnC,EAA2C6hB,UAA3C,EAAwD;AAEvD,SAAO7hB,MAAM,CACXotD,OADK,CACI,sBADJ,EAC4BvrC,UAAU,CAACisC,iBADvC,EAELV,OAFK,CAEI,wBAFJ,EAEgCvrC,UAAU,CAACisC,iBAAX,GAA+BjsC,UAAU,CAACksC,mBAF1E,CAAP;AAIA,C,CAED;;;AAEA,IAAMC,cAAc,GAAG,kCAAvB;;AAEA,SAASC,eAAT,CAA0BjuD,MAA1B,EAAmC;AAElC,SAAOA,MAAM,CAACotD,OAAP,CAAgBY,cAAhB,EAAgCE,eAAhC,CAAP;AAEA;;AAED,SAASA,eAAT,CAA0BnE,KAA1B,EAAiCoE,OAAjC,EAA2C;AAE1C,MAAMnuD,MAAM,GAAGqpC,WAAW,CAAE8kB,OAAF,CAA1B;;AAEA,MAAKnuD,MAAM,KAAKtP,SAAhB,EAA4B;AAE3B,UAAM,IAAIqG,KAAJ,CAAW,+BAA+Bo3D,OAA/B,GAAyC,GAApD,CAAN;AAEA;;AAED,SAAOF,eAAe,CAAEjuD,MAAF,CAAtB;AAEA,C,CAED;;;AAEA,IAAMouD,2BAA2B,GAAG,8FAApC;AACA,IAAMC,iBAAiB,GAAG,8IAA1B;;AAEA,SAASC,WAAT,CAAsBtuD,MAAtB,EAA+B;AAE9B,SAAOA,MAAM,CACXotD,OADK,CACIiB,iBADJ,EACuBE,YADvB,EAELnB,OAFK,CAEIgB,2BAFJ,EAEiCI,sBAFjC,CAAP;AAIA;;AAED,SAASA,sBAAT,CAAiCzE,KAAjC,EAAwCl7B,KAAxC,EAA+CoG,GAA/C,EAAoDw5B,OAApD,EAA8D;AAE7Dn4D,EAAAA,OAAO,CAACC,IAAR,CAAc,qHAAd;AACA,SAAOg4D,YAAY,CAAExE,KAAF,EAASl7B,KAAT,EAAgBoG,GAAhB,EAAqBw5B,OAArB,CAAnB;AAEA;;AAED,SAASF,YAAT,CAAuBxE,KAAvB,EAA8Bl7B,KAA9B,EAAqCoG,GAArC,EAA0Cw5B,OAA1C,EAAoD;AAEnD,MAAIzuD,MAAM,GAAG,EAAb;;AAEA,OAAM,IAAI3O,CAAC,GAAG+O,QAAQ,CAAEyuB,KAAF,CAAtB,EAAiCx9B,CAAC,GAAG+O,QAAQ,CAAE60B,GAAF,CAA7C,EAAsD5jC,CAAC,EAAvD,EAA6D;AAE5D2O,IAAAA,MAAM,IAAIyuD,OAAO,CACfrB,OADQ,CACC,cADD,EACiB,OAAO/7D,CAAP,GAAW,IAD5B,EAER+7D,OAFQ,CAEC,sBAFD,EAEyB/7D,CAFzB,CAAV;AAIA;;AAED,SAAO2O,MAAP;AAEA,C,CAED;;;AAEA,SAAS0uD,iBAAT,CAA4B7sC,UAA5B,EAAyC;AAExC,MAAI8sC,eAAe,GAAG,eAAe9sC,UAAU,CAACoF,SAA1B,GAAsC,qBAAtC,GAA8DpF,UAAU,CAACoF,SAAzE,GAAqF,OAA3G;;AAEA,MAAKpF,UAAU,CAACoF,SAAX,KAAyB,OAA9B,EAAwC;AAEvC0nC,IAAAA,eAAe,IAAI,0BAAnB;AAEA,GAJD,MAIO,IAAK9sC,UAAU,CAACoF,SAAX,KAAyB,SAA9B,EAA0C;AAEhD0nC,IAAAA,eAAe,IAAI,4BAAnB;AAEA,GAJM,MAIA,IAAK9sC,UAAU,CAACoF,SAAX,KAAyB,MAA9B,EAAuC;AAE7C0nC,IAAAA,eAAe,IAAI,yBAAnB;AAEA;;AAED,SAAOA,eAAP;AAEA;;AAED,SAASC,2BAAT,CAAsC/sC,UAAtC,EAAmD;AAElD,MAAIgtC,mBAAmB,GAAG,sBAA1B;;AAEA,MAAKhtC,UAAU,CAACitC,aAAX,KAA6B9oE,YAAlC,EAAiD;AAEhD6oE,IAAAA,mBAAmB,GAAG,oBAAtB;AAEA,GAJD,MAIO,IAAKhtC,UAAU,CAACitC,aAAX,KAA6B7oE,gBAAlC,EAAqD;AAE3D4oE,IAAAA,mBAAmB,GAAG,yBAAtB;AAEA,GAJM,MAIA,IAAKhtC,UAAU,CAACitC,aAAX,KAA6B5oE,YAAlC,EAAiD;AAEvD2oE,IAAAA,mBAAmB,GAAG,oBAAtB;AAEA;;AAED,SAAOA,mBAAP;AAEA;;AAED,SAASE,wBAAT,CAAmCltC,UAAnC,EAAgD;AAE/C,MAAImtC,gBAAgB,GAAG,kBAAvB;;AAEA,MAAKntC,UAAU,CAAC4I,MAAhB,EAAyB;AAExB,YAAS5I,UAAU,CAACotC,UAApB;AAEC,WAAKjmE,qBAAL;AACA,WAAKC,qBAAL;AACC+lE,QAAAA,gBAAgB,GAAG,kBAAnB;AACA;;AAED,WAAK5lE,uBAAL;AACC4lE,QAAAA,gBAAgB,GAAG,qBAAnB;AACA;AATF;AAaA;;AAED,SAAOA,gBAAP;AAEA;;AAED,SAASE,wBAAT,CAAmCrtC,UAAnC,EAAgD;AAE/C,MAAIstC,gBAAgB,GAAG,wBAAvB;;AAEA,MAAKttC,UAAU,CAAC4I,MAAhB,EAAyB;AAExB,YAAS5I,UAAU,CAACotC,UAApB;AAEC,WAAKhmE,qBAAL;AAECkmE,QAAAA,gBAAgB,GAAG,wBAAnB;AACA;AALF;AASA;;AAED,SAAOA,gBAAP;AAEA;;AAED,SAASC,4BAAT,CAAuCvtC,UAAvC,EAAoD;AAEnD,MAAIwtC,oBAAoB,GAAG,sBAA3B;;AAEA,MAAKxtC,UAAU,CAAC4I,MAAhB,EAAyB;AAExB,YAAS5I,UAAU,CAAC6I,OAApB;AAEC,WAAKpiC,iBAAL;AACC+mE,QAAAA,oBAAoB,GAAG,0BAAvB;AACA;;AAED,WAAK9mE,YAAL;AACC8mE,QAAAA,oBAAoB,GAAG,qBAAvB;AACA;;AAED,WAAK7mE,YAAL;AACC6mE,QAAAA,oBAAoB,GAAG,qBAAvB;AACA;AAZF;AAgBA;;AAED,SAAOA,oBAAP;AAEA;;AAED,SAASC,kBAAT,CAA6BztC,UAA7B,EAA0C;AAEzC,MAAM0tC,WAAW,GAAG1tC,UAAU,CAACuqC,kBAA/B;AAEA,MAAKmD,WAAW,KAAK,IAArB,EAA4B,OAAO,IAAP;AAE5B,MAAMC,MAAM,GAAG59D,IAAI,CAAC2qD,IAAL,CAAWgT,WAAX,IAA2B,CAA1C;AAEA,MAAME,WAAW,GAAG,MAAMF,WAA1B;AAEA,MAAMG,UAAU,GAAG,OAAQ,IAAI99D,IAAI,CAACc,GAAL,CAAUd,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAaw6D,MAAb,CAAV,EAAiC,IAAI,EAArC,CAAZ,CAAnB;AAEA,SAAO;AAAEE,IAAAA,UAAU,EAAVA,UAAF;AAAcD,IAAAA,WAAW,EAAXA,WAAd;AAA2BD,IAAAA,MAAM,EAANA;AAA3B,GAAP;AAEA;;AAED,SAASG,YAAT,CAAuB/0B,QAAvB,EAAiCg1B,QAAjC,EAA2C/tC,UAA3C,EAAuDswB,aAAvD,EAAuE;AAEtE;AACA;AAEA,MAAM/S,EAAE,GAAGxE,QAAQ,CAAC34B,UAAT,EAAX;AAEA,MAAM21B,OAAO,GAAG/V,UAAU,CAAC+V,OAA3B;AAEA,MAAIC,YAAY,GAAGhW,UAAU,CAACgW,YAA9B;AACA,MAAIC,cAAc,GAAGjW,UAAU,CAACiW,cAAhC;AAEA,MAAM+2B,mBAAmB,GAAGD,2BAA2B,CAAE/sC,UAAF,CAAvD;AACA,MAAMmtC,gBAAgB,GAAGD,wBAAwB,CAAEltC,UAAF,CAAjD;AACA,MAAMstC,gBAAgB,GAAGD,wBAAwB,CAAErtC,UAAF,CAAjD;AACA,MAAMwtC,oBAAoB,GAAGD,4BAA4B,CAAEvtC,UAAF,CAAzD;AACA,MAAMguC,gBAAgB,GAAGP,kBAAkB,CAAEztC,UAAF,CAA3C;AAEA,MAAMiuC,gBAAgB,GAAGjuC,UAAU,CAACyd,QAAX,GAAsB,EAAtB,GAA2B2sB,kBAAkB,CAAEpqC,UAAF,CAAtE;AAEA,MAAMkuC,aAAa,GAAGhD,eAAe,CAAEn1B,OAAF,CAArC;AAEA,MAAM6a,OAAO,GAAGrT,EAAE,CAAC4wB,aAAH,EAAhB;AAEA,MAAIC,YAAJ,EAAkBC,cAAlB;AACA,MAAIC,aAAa,GAAGtuC,UAAU,CAAC4W,WAAX,GAAyB,cAAc5W,UAAU,CAAC4W,WAAzB,GAAuC,IAAhE,GAAuE,EAA3F;;AAEA,MAAK5W,UAAU,CAACuuC,mBAAhB,EAAsC;AAErCH,IAAAA,YAAY,GAAG,CAEdF,aAFc,EAIblD,MAJa,CAILC,eAJK,EAIa5B,IAJb,CAImB,IAJnB,CAAf;;AAMA,QAAK+E,YAAY,CAAC1+D,MAAb,GAAsB,CAA3B,EAA+B;AAE9B0+D,MAAAA,YAAY,IAAI,IAAhB;AAEA;;AAEDC,IAAAA,cAAc,GAAG,CAEhBJ,gBAFgB,EAGhBC,aAHgB,EAKflD,MALe,CAKPC,eALO,EAKW5B,IALX,CAKiB,IALjB,CAAjB;;AAOA,QAAKgF,cAAc,CAAC3+D,MAAf,GAAwB,CAA7B,EAAiC;AAEhC2+D,MAAAA,cAAc,IAAI,IAAlB;AAEA;AAED,GA3BD,MA2BO;AAEND,IAAAA,YAAY,GAAG,CAEdvB,iBAAiB,CAAE7sC,UAAF,CAFH,EAId,yBAAyBA,UAAU,CAACwuC,UAJtB,EAMdN,aANc,EAQdluC,UAAU,CAACyuC,UAAX,GAAwB,wBAAxB,GAAmD,EARrC,EASdzuC,UAAU,CAAC0uC,eAAX,GAA6B,8BAA7B,GAA8D,EAThD,EAWd1uC,UAAU,CAAC2uC,sBAAX,GAAoC,yBAApC,GAAgE,EAXlD,EAaZ3uC,UAAU,CAAC4uC,MAAX,IAAqB5uC,UAAU,CAACiK,GAAlC,GAA0C,iBAA1C,GAA8D,EAbhD,EAcZjK,UAAU,CAAC4uC,MAAX,IAAqB5uC,UAAU,CAAC6uC,OAAlC,GAA8C,kBAA9C,GAAmE,EAdrD,EAgBd7uC,UAAU,CAACuH,GAAX,GAAiB,iBAAjB,GAAqC,EAhBvB,EAiBdvH,UAAU,CAAC4I,MAAX,GAAoB,oBAApB,GAA2C,EAjB7B,EAkBd5I,UAAU,CAAC4I,MAAX,GAAoB,aAAa0kC,gBAAjC,GAAoD,EAlBtC,EAmBdttC,UAAU,CAAC0H,QAAX,GAAsB,sBAAtB,GAA+C,EAnBjC,EAoBd1H,UAAU,CAAC4H,KAAX,GAAmB,mBAAnB,GAAyC,EApB3B,EAqBd5H,UAAU,CAACwI,WAAX,GAAyB,yBAAzB,GAAqD,EArBvC,EAsBdxI,UAAU,CAAC8H,OAAX,GAAqB,qBAArB,GAA6C,EAtB/B,EAuBd9H,UAAU,CAACgI,SAAX,GAAuB,uBAAvB,GAAiD,EAvBnC,EAwBZhI,UAAU,CAACgI,SAAX,IAAwBhI,UAAU,CAAC8uC,oBAArC,GAA8D,+BAA9D,GAAgG,EAxBlF,EAyBZ9uC,UAAU,CAACgI,SAAX,IAAwBhI,UAAU,CAACwqC,qBAArC,GAA+D,gCAA/D,GAAkG,EAzBpF,EA2BdxqC,UAAU,CAAC8G,YAAX,GAA0B,0BAA1B,GAAuD,EA3BzC,EA4Bd9G,UAAU,CAAC+G,qBAAX,GAAmC,oCAAnC,GAA0E,EA5B5D,EA6Bd/G,UAAU,CAACgH,kBAAX,GAAgC,iCAAhC,GAAoE,EA7BtD,EA+BdhH,UAAU,CAACqH,cAAX,GAA4B,4BAA5B,GAA2D,EA/B7C,EAgCdrH,UAAU,CAACsH,uBAAX,GAAqC,sCAArC,GAA8E,EAhChE,EAkCdtH,UAAU,CAACmI,eAAX,IAA8BnI,UAAU,CAAC2uC,sBAAzC,GAAkE,6BAAlE,GAAkG,EAlCpF,EAoCd3uC,UAAU,CAACyI,WAAX,GAAyB,yBAAzB,GAAqD,EApCvC,EAqCdzI,UAAU,CAAC0I,oBAAX,GAAkC,kCAAlC,GAAuE,EArCzD,EAsCd1I,UAAU,CAAC2I,gBAAX,GAA8B,8BAA9B,GAA+D,EAtCjD,EAwCd3I,UAAU,CAACsI,YAAX,GAA0B,0BAA1B,GAAuD,EAxCzC,EAyCdtI,UAAU,CAACuI,YAAX,GAA0B,0BAA1B,GAAuD,EAzCzC,EA0CdvI,UAAU,CAACyH,QAAX,GAAsB,sBAAtB,GAA+C,EA1CjC,EA4CdzH,UAAU,CAACkJ,YAAX,GAA0B,0BAA1B,GAAuD,EA5CzC,EA6CdlJ,UAAU,CAACmJ,eAAX,GAA6B,6BAA7B,GAA6D,EA7C/C,EA8CdnJ,UAAU,CAACqJ,YAAX,GAA0B,0BAA1B,GAAuD,EA9CzC,EAgDdrJ,UAAU,CAAC+tB,aAAX,GAA2B,2BAA3B,GAAyD,EAhD3C,EAiDd/tB,UAAU,CAACguB,iBAAX,GAA+B,+BAA/B,GAAiE,EAjDnD,EAmDdhuB,UAAU,CAAC+uC,cAAX,GAA4B,qBAA5B,GAAoD,EAnDtC,EAoDd/uC,UAAU,CAAC2D,YAAX,GAA0B,mBAA1B,GAAgD,EApDlC,EAqDd3D,UAAU,CAACgvC,YAAX,GAA0B,yBAA1B,GAAsD,EArDxC,EAsDdhvC,UAAU,CAACivC,SAAX,GAAuB,gBAAvB,GAA0C,EAtD5B,EAuDdjvC,UAAU,CAACkvC,aAAX,GAA2B,yBAA3B,GAAuD,EAvDzC,EAyDdlvC,UAAU,CAAC+F,WAAX,GAAyB,qBAAzB,GAAiD,EAzDnC,EA2Dd/F,UAAU,CAACmvC,QAAX,GAAsB,sBAAtB,GAA+C,EA3DjC,EA6DdnvC,UAAU,CAAC2gC,YAAX,GAA0B,0BAA1B,GAAuD,EA7DzC,EA8Dd3gC,UAAU,CAAC4gC,YAAX,IAA2B5gC,UAAU,CAAC+F,WAAX,KAA2B,KAAtD,GAA8D,0BAA9D,GAA2F,EA9D7E,EA+DZ/F,UAAU,CAAC6gC,WAAX,IAA0B7gC,UAAU,CAACyd,QAAvC,GAAoD,yBAApD,GAAgF,EA/DlE,EAgEZzd,UAAU,CAACqgC,iBAAX,GAA+B,CAA/B,IAAoCrgC,UAAU,CAACyd,QAAjD,GAA8D,8BAA9D,GAA+F,EAhEjF,EAiEZzd,UAAU,CAACqgC,iBAAX,GAA+B,CAA/B,IAAoCrgC,UAAU,CAACyd,QAAjD,GAA8D,yCAAyCzd,UAAU,CAACovC,kBAAlH,GAAuI,EAjEzH,EAkEZpvC,UAAU,CAACqgC,iBAAX,GAA+B,CAA/B,IAAoCrgC,UAAU,CAACyd,QAAjD,GAA8D,gCAAgCzd,UAAU,CAACqgC,iBAAzG,GAA6H,EAlE/G,EAmEdrgC,UAAU,CAACqvC,WAAX,GAAyB,sBAAzB,GAAkD,EAnEpC,EAoEdrvC,UAAU,CAACsvC,SAAX,GAAuB,oBAAvB,GAA8C,EApEhC,EAsEdtvC,UAAU,CAACuvC,gBAAX,GAA8B,uBAA9B,GAAwD,EAtE1C,EAuEdvvC,UAAU,CAACuvC,gBAAX,GAA8B,aAAavC,mBAA3C,GAAiE,EAvEnD,EAyEdhtC,UAAU,CAACwJ,eAAX,GAA6B,6BAA7B,GAA6D,EAzE/C,EA2EdxJ,UAAU,CAACo1B,sBAAX,GAAoC,yBAApC,GAAgE,EA3ElD,EA4EZp1B,UAAU,CAACo1B,sBAAX,IAAqCp1B,UAAU,CAAC2qC,0BAAlD,GAAiF,6BAAjF,GAAiH,EA5EnG,EA8Ed,2BA9Ec,EA+Ed,+BA/Ec,EAgFd,gCAhFc,EAiFd,0BAjFc,EAkFd,4BAlFc,EAmFd,8BAnFc,EAoFd,8BApFc,EAsFd,uBAtFc,EAwFd,iCAxFc,EA0Fd,QA1Fc,EA4Fd,6BA5Fc,EA8Fd,gCA9Fc,EAgGd,QAhGc,EAkGd,0BAlGc,EAmGd,wBAnGc,EAoGd,oBApGc,EAsGd,oBAtGc,EAwGd,0BAxGc,EA0Gd,QA1Gc,EA4Gd,gCA5Gc,EA8Gd,wBA9Gc,EAgHd,4BAhHc,EAkHd,wBAlHc,EAoHd,QApHc,EAsHd,0EAtHc,EAwHd,+BAxHc,EAyHd,+BAzHc,EA0Hd,+BA1Hc,EA2Hd,+BA3Hc,EA6Hd,0BA7Hc,EA+Hd,gCA/Hc,EAgId,gCAhIc,EAiId,gCAjIc,EAkId,gCAlIc,EAoId,QApIc,EAsId,gCAtIc,EAuId,gCAvIc,EAwId,gCAxIc,EAyId,gCAzIc,EA2Id,SA3Ic,EA6Id,QA7Ic,EA+Id,qBA/Ic,EAiJd,4BAjJc,EAkJd,6BAlJc,EAoJd,QApJc,EAsJd,IAtJc,EAwJbK,MAxJa,CAwJLC,eAxJK,EAwJa5B,IAxJb,CAwJmB,IAxJnB,CAAf;AA0JAgF,IAAAA,cAAc,GAAG,CAEhBJ,gBAFgB,EAIhBpB,iBAAiB,CAAE7sC,UAAF,CAJD,EAMhB,yBAAyBA,UAAU,CAACwuC,UANpB,EAQhBN,aARgB,EAUdluC,UAAU,CAAC4uC,MAAX,IAAqB5uC,UAAU,CAACiK,GAAlC,GAA0C,iBAA1C,GAA8D,EAV9C,EAWdjK,UAAU,CAAC4uC,MAAX,IAAqB5uC,UAAU,CAAC6uC,OAAlC,GAA8C,kBAA9C,GAAmE,EAXnD,EAahB7uC,UAAU,CAACuH,GAAX,GAAiB,iBAAjB,GAAqC,EAbrB,EAchBvH,UAAU,CAACwH,MAAX,GAAoB,oBAApB,GAA2C,EAd3B,EAehBxH,UAAU,CAAC4I,MAAX,GAAoB,oBAApB,GAA2C,EAf3B,EAgBhB5I,UAAU,CAAC4I,MAAX,GAAoB,aAAaukC,gBAAjC,GAAoD,EAhBpC,EAiBhBntC,UAAU,CAAC4I,MAAX,GAAoB,aAAa0kC,gBAAjC,GAAoD,EAjBpC,EAkBhBttC,UAAU,CAAC4I,MAAX,GAAoB,aAAa4kC,oBAAjC,GAAwD,EAlBxC,EAmBhBQ,gBAAgB,GAAG,gCAAgCA,gBAAgB,CAACH,UAApD,GAAiE,EAnBjE,EAoBhBG,gBAAgB,GAAG,iCAAiCA,gBAAgB,CAACJ,WAArD,GAAmE,EApBnE,EAqBhBI,gBAAgB,GAAG,4BAA4BA,gBAAgB,CAACL,MAA7C,GAAsD,IAAzD,GAAgE,EArBhE,EAsBhB3tC,UAAU,CAAC0H,QAAX,GAAsB,sBAAtB,GAA+C,EAtB/B,EAuBhB1H,UAAU,CAAC4H,KAAX,GAAmB,mBAAnB,GAAyC,EAvBzB,EAwBhB5H,UAAU,CAACwI,WAAX,GAAyB,yBAAzB,GAAqD,EAxBrC,EAyBhBxI,UAAU,CAAC8H,OAAX,GAAqB,qBAArB,GAA6C,EAzB7B,EA0BhB9H,UAAU,CAACgI,SAAX,GAAuB,uBAAvB,GAAiD,EA1BjC,EA2BdhI,UAAU,CAACgI,SAAX,IAAwBhI,UAAU,CAAC8uC,oBAArC,GAA8D,+BAA9D,GAAgG,EA3BhF,EA4Bd9uC,UAAU,CAACgI,SAAX,IAAwBhI,UAAU,CAACwqC,qBAArC,GAA+D,gCAA/D,GAAkG,EA5BlF,EA8BhBxqC,UAAU,CAAC4G,SAAX,GAAuB,uBAAvB,GAAiD,EA9BjC,EA+BhB5G,UAAU,CAAC8G,YAAX,GAA0B,0BAA1B,GAAuD,EA/BvC,EAgChB9G,UAAU,CAAC+G,qBAAX,GAAmC,oCAAnC,GAA0E,EAhC1D,EAiChB/G,UAAU,CAACgH,kBAAX,GAAgC,iCAAhC,GAAoE,EAjCpD,EAmChBhH,UAAU,CAACkH,WAAX,GAAyB,yBAAzB,GAAqD,EAnCrC,EAoChBlH,UAAU,CAACqH,cAAX,GAA4B,4BAA5B,GAA2D,EApC3C,EAqChBrH,UAAU,CAACsH,uBAAX,GAAqC,sCAArC,GAA8E,EArC9D,EAuChBtH,UAAU,CAACyI,WAAX,GAAyB,yBAAzB,GAAqD,EAvCrC,EAwChBzI,UAAU,CAAC0I,oBAAX,GAAkC,kCAAlC,GAAuE,EAxCvD,EAyChB1I,UAAU,CAAC2I,gBAAX,GAA8B,8BAA9B,GAA+D,EAzC/C,EA0ChB3I,UAAU,CAACsI,YAAX,GAA0B,0BAA1B,GAAuD,EA1CvC,EA2ChBtI,UAAU,CAACuI,YAAX,GAA0B,0BAA1B,GAAuD,EA3CvC,EA6ChBvI,UAAU,CAACyH,QAAX,GAAsB,sBAAtB,GAA+C,EA7C/B,EA8ChBzH,UAAU,CAAC4J,SAAX,GAAuB,uBAAvB,GAAiD,EA9CjC,EAgDhB5J,UAAU,CAACmG,KAAX,GAAmB,mBAAnB,GAAyC,EAhDzB,EAiDhBnG,UAAU,CAAC+tB,aAAX,GAA2B,2BAA3B,GAAyD,EAjDzC,EAkDhB/tB,UAAU,CAACguB,iBAAX,GAA+B,+BAA/B,GAAiE,EAlDjD,EAoDhBhuB,UAAU,CAACkJ,YAAX,GAA0B,0BAA1B,GAAuD,EApDvC,EAqDhBlJ,UAAU,CAACmJ,eAAX,GAA6B,6BAA7B,GAA6D,EArD7C,EAsDhBnJ,UAAU,CAACqJ,YAAX,GAA0B,0BAA1B,GAAuD,EAtDvC,EAwDhBrJ,UAAU,CAACwvC,kBAAX,GAAgC,8BAAhC,GAAiE,EAxDjD,EA0DhBxvC,UAAU,CAAC+uC,cAAX,GAA4B,qBAA5B,GAAoD,EA1DpC,EA2DhB/uC,UAAU,CAAC2D,YAAX,IAA2B3D,UAAU,CAAC0uC,eAAtC,GAAwD,mBAAxD,GAA8E,EA3D9D,EA4DhB1uC,UAAU,CAACgvC,YAAX,GAA0B,yBAA1B,GAAsD,EA5DtC,EA6DhBhvC,UAAU,CAACivC,SAAX,GAAuB,gBAAvB,GAA0C,EA7D1B,EA8DhBjvC,UAAU,CAACkvC,aAAX,GAA2B,yBAA3B,GAAuD,EA9DvC,EAgEhBlvC,UAAU,CAACiJ,WAAX,GAAyB,yBAAzB,GAAqD,EAhErC,EAkEhBjJ,UAAU,CAAC+F,WAAX,GAAyB,qBAAzB,GAAiD,EAlEjC,EAoEhB/F,UAAU,CAACqvC,WAAX,GAAyB,sBAAzB,GAAkD,EApElC,EAqEhBrvC,UAAU,CAACsvC,SAAX,GAAuB,oBAAvB,GAA8C,EArE9B,EAuEhBtvC,UAAU,CAACuvC,gBAAX,GAA8B,uBAA9B,GAAwD,EAvExC,EAwEhBvvC,UAAU,CAACuvC,gBAAX,GAA8B,aAAavC,mBAA3C,GAAiE,EAxEjD,EA0EhBhtC,UAAU,CAAC0F,kBAAX,GAAgC,6BAAhC,GAAgE,EA1EhD,EA4EhB1F,UAAU,CAACyvC,uBAAX,GAAqC,mCAArC,GAA2E,EA5E3D,EA8EhBzvC,UAAU,CAACo1B,sBAAX,GAAoC,yBAApC,GAAgE,EA9EhD,EA+Edp1B,UAAU,CAACo1B,sBAAX,IAAqCp1B,UAAU,CAAC2qC,0BAAlD,GAAiF,6BAAjF,GAAiH,EA/EjG,EAiFhB,0BAjFgB,EAkFhB,8BAlFgB,EAmFhB,8BAnFgB,EAqFd3qC,UAAU,CAACoZ,WAAX,KAA2BxyC,aAA7B,GAA+C,sBAA/C,GAAwE,EArFxD,EAsFdo5B,UAAU,CAACoZ,WAAX,KAA2BxyC,aAA7B,GAA+C4gD,WAAW,CAAE,2BAAF,CAA1D,GAA4F,EAtF5E,EAsFgF;AAC9FxnB,IAAAA,UAAU,CAACoZ,WAAX,KAA2BxyC,aAA7B,GAA+CsjE,sBAAsB,CAAE,aAAF,EAAiBlqC,UAAU,CAACoZ,WAA5B,CAArE,GAAiH,EAvFjG,EAyFhBpZ,UAAU,CAACwF,SAAX,GAAuB,mBAAvB,GAA6C,EAzF7B,EA0FhBxF,UAAU,CAAC0vC,MAAX,GAAoB,gBAApB,GAAuC,EA1FvB,EA4FhBloB,WAAW,CAAE,yBAAF,CA5FK,EA4F0B;AAC1CwiB,IAAAA,wBAAwB,CAAE,qBAAF,EAAyBhqC,UAAU,CAAC2vC,cAApC,CA7FR,EA+FhB3vC,UAAU,CAAC4vC,eAAX,GAA6B,2BAA2B5vC,UAAU,CAAC6vC,YAAnE,GAAkF,EA/FlE,EAiGhB,IAjGgB,EAmGf7E,MAnGe,CAmGPC,eAnGO,EAmGW5B,IAnGX,CAmGiB,IAnGjB,CAAjB;AAqGA;;AAEDrzB,EAAAA,YAAY,GAAGo2B,eAAe,CAAEp2B,YAAF,CAA9B;AACAA,EAAAA,YAAY,GAAGs1B,gBAAgB,CAAEt1B,YAAF,EAAgBhW,UAAhB,CAA/B;AACAgW,EAAAA,YAAY,GAAGg2B,wBAAwB,CAAEh2B,YAAF,EAAgBhW,UAAhB,CAAvC;AAEAiW,EAAAA,cAAc,GAAGm2B,eAAe,CAAEn2B,cAAF,CAAhC;AACAA,EAAAA,cAAc,GAAGq1B,gBAAgB,CAAEr1B,cAAF,EAAkBjW,UAAlB,CAAjC;AACAiW,EAAAA,cAAc,GAAG+1B,wBAAwB,CAAE/1B,cAAF,EAAkBjW,UAAlB,CAAzC;AAEAgW,EAAAA,YAAY,GAAGy2B,WAAW,CAAEz2B,YAAF,CAA1B;AACAC,EAAAA,cAAc,GAAGw2B,WAAW,CAAEx2B,cAAF,CAA5B;;AAEA,MAAKjW,UAAU,CAACyd,QAAX,IAAuBzd,UAAU,CAACuuC,mBAAX,KAAmC,IAA/D,EAAsE;AAErE;AAEAD,IAAAA,aAAa,GAAG,mBAAhB;AAEAF,IAAAA,YAAY,GAAG,CACd,mCADc,EAEd,sBAFc,EAGd,qBAHc,EAId,2BAJc,EAKb/E,IALa,CAKP,IALO,IAKE,IALF,GAKS+E,YALxB;AAOAC,IAAAA,cAAc,GAAG,CAChB,oBADgB,EAEdruC,UAAU,CAAC4W,WAAX,KAA2BroC,KAA7B,GAAuC,EAAvC,GAA4C,mDAF5B,EAGdyxB,UAAU,CAAC4W,WAAX,KAA2BroC,KAA7B,GAAuC,EAAvC,GAA4C,mCAH5B,EAIhB,sCAJgB,EAKhB,2BALgB,EAMhB,6BANgB,EAOhB,mCAPgB,EAQhB,oCARgB,EAShB,4CATgB,EAUhB,sCAVgB,EAWhB,sCAXgB,EAYhB,8CAZgB,EAahB,wCAbgB,EAcf86D,IAde,CAcT,IAdS,IAcA,IAdA,GAcOgF,cAdxB;AAgBA;;AAED,MAAMyB,UAAU,GAAGxB,aAAa,GAAGF,YAAhB,GAA+Bp4B,YAAlD;AACA,MAAM+5B,YAAY,GAAGzB,aAAa,GAAGD,cAAhB,GAAiCp4B,cAAtD,CApWsE,CAsWtE;AACA;;AAEA,MAAM+5B,cAAc,GAAGrH,WAAW,CAAEprB,EAAF,EAAM,KAAN,EAAauyB,UAAb,CAAlC;AACA,MAAMG,gBAAgB,GAAGtH,WAAW,CAAEprB,EAAF,EAAM,KAAN,EAAawyB,YAAb,CAApC;AAEAxyB,EAAAA,EAAE,CAAC2yB,YAAH,CAAiBtf,OAAjB,EAA0Bof,cAA1B;AACAzyB,EAAAA,EAAE,CAAC2yB,YAAH,CAAiBtf,OAAjB,EAA0Bqf,gBAA1B,EA7WsE,CA+WtE;;AAEA,MAAKjwC,UAAU,CAAC0W,mBAAX,KAAmC7nC,SAAxC,EAAoD;AAEnD0uC,IAAAA,EAAE,CAAC4yB,kBAAH,CAAuBvf,OAAvB,EAAgC,CAAhC,EAAmC5wB,UAAU,CAAC0W,mBAA9C;AAEA,GAJD,MAIO,IAAK1W,UAAU,CAAC2gC,YAAX,KAA4B,IAAjC,EAAwC;AAE9C;AACApjB,IAAAA,EAAE,CAAC4yB,kBAAH,CAAuBvf,OAAvB,EAAgC,CAAhC,EAAmC,UAAnC;AAEA;;AAEDrT,EAAAA,EAAE,CAAC6yB,WAAH,CAAgBxf,OAAhB,EA5XsE,CA8XtE;;AACA,MAAK7X,QAAQ,CAACs3B,KAAT,CAAeC,iBAApB,EAAwC;AAEvC,QAAMC,UAAU,GAAGhzB,EAAE,CAACizB,iBAAH,CAAsB5f,OAAtB,EAAgCgZ,IAAhC,EAAnB;AACA,QAAM6G,SAAS,GAAGlzB,EAAE,CAACosB,gBAAH,CAAqBqG,cAArB,EAAsCpG,IAAtC,EAAlB;AACA,QAAM8G,WAAW,GAAGnzB,EAAE,CAACosB,gBAAH,CAAqBsG,gBAArB,EAAwCrG,IAAxC,EAApB;AAEA,QAAI+G,QAAQ,GAAG,IAAf;AACA,QAAIC,eAAe,GAAG,IAAtB;;AAEA,QAAKrzB,EAAE,CAACirB,mBAAH,CAAwB5X,OAAxB,EAAiC,KAAjC,MAA6C,KAAlD,EAA0D;AAEzD+f,MAAAA,QAAQ,GAAG,KAAX;AAEA,UAAME,YAAY,GAAGtH,eAAe,CAAEhsB,EAAF,EAAMyyB,cAAN,EAAsB,QAAtB,CAApC;AACA,UAAMc,cAAc,GAAGvH,eAAe,CAAEhsB,EAAF,EAAM0yB,gBAAN,EAAwB,UAAxB,CAAtC;AAEAx7D,MAAAA,OAAO,CAACkD,KAAR,CACC,sCAAsC4lC,EAAE,CAACwzB,QAAH,EAAtC,GAAsD,KAAtD,GACA,kBADA,GACqBxzB,EAAE,CAACirB,mBAAH,CAAwB5X,OAAxB,EAAiC,KAAjC,CADrB,GACgE,MADhE,GAEA,oBAFA,GAEuB2f,UAFvB,GAEoC,IAFpC,GAGAM,YAHA,GAGe,IAHf,GAIAC,cALD;AAQA,KAfD,MAeO,IAAKP,UAAU,KAAK,EAApB,EAAyB;AAE/B97D,MAAAA,OAAO,CAACC,IAAR,CAAc,uCAAd,EAAuD67D,UAAvD;AAEA,KAJM,MAIA,IAAKE,SAAS,KAAK,EAAd,IAAoBC,WAAW,KAAK,EAAzC,EAA8C;AAEpDE,MAAAA,eAAe,GAAG,KAAlB;AAEA;;AAED,QAAKA,eAAL,EAAuB;AAEtB,WAAKI,WAAL,GAAmB;AAElBL,QAAAA,QAAQ,EAAEA,QAFQ;AAIlBJ,QAAAA,UAAU,EAAEA,UAJM;AAMlBv6B,QAAAA,YAAY,EAAE;AAEb3iC,UAAAA,GAAG,EAAEo9D,SAFQ;AAGbQ,UAAAA,MAAM,EAAE7C;AAHK,SANI;AAalBn4B,QAAAA,cAAc,EAAE;AAEf5iC,UAAAA,GAAG,EAAEq9D,WAFU;AAGfO,UAAAA,MAAM,EAAE5C;AAHO;AAbE,OAAnB;AAsBA;AAED,GA3bqE,CA6btE;AAEA;AACA;AACA;;;AAEA9wB,EAAAA,EAAE,CAAC2zB,YAAH,CAAiBlB,cAAjB;AACAzyB,EAAAA,EAAE,CAAC2zB,YAAH,CAAiBjB,gBAAjB,EApcsE,CAsctE;;AAEA,MAAIkB,cAAJ;;AAEA,OAAK9P,WAAL,GAAmB,YAAY;AAE9B,QAAK8P,cAAc,KAAKtiE,SAAxB,EAAoC;AAEnCsiE,MAAAA,cAAc,GAAG,IAAI5I,aAAJ,CAAmBhrB,EAAnB,EAAuBqT,OAAvB,CAAjB;AAEA;;AAED,WAAOugB,cAAP;AAEA,GAVD,CA1csE,CAsdtE;;;AAEA,MAAInf,gBAAJ;;AAEA,OAAKI,aAAL,GAAqB,YAAY;AAEhC,QAAKJ,gBAAgB,KAAKnjD,SAA1B,EAAsC;AAErCmjD,MAAAA,gBAAgB,GAAGmZ,uBAAuB,CAAE5tB,EAAF,EAAMqT,OAAN,CAA1C;AAEA;;AAED,WAAOoB,gBAAP;AAEA,GAVD,CA1dsE,CAsetE;;;AAEA,OAAKof,OAAL,GAAe,YAAY;AAE1B9gB,IAAAA,aAAa,CAAC0D,sBAAd,CAAsC,IAAtC;AAEAzW,IAAAA,EAAE,CAAC8zB,aAAH,CAAkBzgB,OAAlB;AACA,SAAKA,OAAL,GAAe/hD,SAAf;AAEA,GAPD,CAxesE,CAiftE;;;AAEA,OAAKqN,IAAL,GAAY8jB,UAAU,CAACwuC,UAAvB;AACA,OAAKpwC,EAAL,GAAU2qC,cAAc,EAAxB;AACA,OAAKgF,QAAL,GAAgBA,QAAhB;AACA,OAAKuD,SAAL,GAAiB,CAAjB;AACA,OAAK1gB,OAAL,GAAeA,OAAf;AACA,OAAK5a,YAAL,GAAoBg6B,cAApB;AACA,OAAK/5B,cAAL,GAAsBg6B,gBAAtB;AAEA,SAAO,IAAP;AAEA;;AAED,IAAIsB,GAAG,GAAG,CAAV;;IAEMC,gB;AAEL,8BAAc;AAAA;;AAEb,SAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AACA,SAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB;AAEA;;;;WAED,gBAAQpxC,QAAR,EAAmB;AAElB,UAAM0V,YAAY,GAAG1V,QAAQ,CAAC0V,YAA9B;AACA,UAAMC,cAAc,GAAG3V,QAAQ,CAAC2V,cAAhC;;AAEA,UAAM27B,iBAAiB,GAAG,KAAKC,eAAL,CAAsB77B,YAAtB,CAA1B;;AACA,UAAM87B,mBAAmB,GAAG,KAAKD,eAAL,CAAsB57B,cAAtB,CAA5B;;AAEA,UAAM87B,eAAe,GAAG,KAAKC,0BAAL,CAAiC1xC,QAAjC,CAAxB;;AAEA,UAAKyxC,eAAe,CAACld,GAAhB,CAAqB+c,iBAArB,MAA6C,KAAlD,EAA0D;AAEzDG,QAAAA,eAAe,CAACziD,GAAhB,CAAqBsiD,iBAArB;AACAA,QAAAA,iBAAiB,CAACN,SAAlB;AAEA;;AAED,UAAKS,eAAe,CAACld,GAAhB,CAAqBid,mBAArB,MAA+C,KAApD,EAA4D;AAE3DC,QAAAA,eAAe,CAACziD,GAAhB,CAAqBwiD,mBAArB;AACAA,QAAAA,mBAAmB,CAACR,SAApB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAQhxC,QAAR,EAAmB;AAElB,UAAMyxC,eAAe,GAAG,KAAKJ,aAAL,CAAmBtzB,GAAnB,CAAwB/d,QAAxB,CAAxB;;AAFkB,iDAISyxC,eAJT;AAAA;;AAAA;AAIlB,4DAA6C;AAAA,cAAjCE,WAAiC;AAE5CA,UAAAA,WAAW,CAACX,SAAZ;AAEA,cAAKW,WAAW,CAACX,SAAZ,KAA0B,CAA/B,EAAmC,KAAKG,WAAL,CAAiBlzB,MAAjB,CAAyB0zB,WAAW,CAACC,IAArC;AAEnC;AAViB;AAAA;AAAA;AAAA;AAAA;;AAYlB,WAAKP,aAAL,CAAmBpzB,MAAnB,CAA2Bje,QAA3B;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmBA,QAAnB,EAA8B;AAE7B,aAAO,KAAKuxC,eAAL,CAAsBvxC,QAAQ,CAAC0V,YAA/B,EAA8C5X,EAArD;AAEA;;;WAED,6BAAqBkC,QAArB,EAAgC;AAE/B,aAAO,KAAKuxC,eAAL,CAAsBvxC,QAAQ,CAAC2V,cAA/B,EAAgD7X,EAAvD;AAEA;;;WAED,mBAAU;AAET,WAAKqzC,WAAL,CAAiBx3B,KAAjB;AACA,WAAK03B,aAAL,CAAmB13B,KAAnB;AAEA;;;WAED,oCAA4B3Z,QAA5B,EAAuC;AAEtC,UAAMI,KAAK,GAAG,KAAKixC,aAAnB;;AAEA,UAAKjxC,KAAK,CAACm0B,GAAN,CAAWv0B,QAAX,MAA0B,KAA/B,EAAuC;AAEtCI,QAAAA,KAAK,CAAClsB,GAAN,CAAW8rB,QAAX,EAAqB,IAAI6xC,GAAJ,EAArB;AAEA;;AAED,aAAOzxC,KAAK,CAAC2d,GAAN,CAAW/d,QAAX,CAAP;AAEA;;;WAED,yBAAiB4xC,IAAjB,EAAwB;AAEvB,UAAMxxC,KAAK,GAAG,KAAK+wC,WAAnB;;AAEA,UAAK/wC,KAAK,CAACm0B,GAAN,CAAWqd,IAAX,MAAsB,KAA3B,EAAmC;AAElC,YAAME,KAAK,GAAG,IAAIC,gBAAJ,CAAsBH,IAAtB,CAAd;AACAxxC,QAAAA,KAAK,CAAClsB,GAAN,CAAW09D,IAAX,EAAiBE,KAAjB;AAEA;;AAED,aAAO1xC,KAAK,CAAC2d,GAAN,CAAW6zB,IAAX,CAAP;AAEA;;;;;;IAIIG,gB,GAEL,0BAAaH,IAAb,EAAoB;AAAA;;AAEnB,OAAK9zC,EAAL,GAAUmzC,GAAG,EAAb;AAEA,OAAKW,IAAL,GAAYA,IAAZ;AACA,OAAKZ,SAAL,GAAiB,CAAjB;AAEA,C;;AAIF,SAASgB,aAAT,CAAwBv5B,QAAxB,EAAkCqV,QAAlC,EAA4CmkB,UAA5C,EAAwDn8B,UAAxD,EAAoEoH,YAApE,EAAkF8S,aAAlF,EAAiGna,QAAjG,EAA4G;AAE3G,MAAMq8B,cAAc,GAAG,IAAIt3C,MAAJ,EAAvB;;AACA,MAAMu3C,cAAc,GAAG,IAAIjB,gBAAJ,EAAvB;;AACA,MAAM7R,QAAQ,GAAG,EAAjB;AAEA,MAAMliB,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AACA,MAAM2X,sBAAsB,GAAG5X,YAAY,CAAC4X,sBAA5C;AACA,MAAMS,cAAc,GAAGrY,YAAY,CAACqY,cAApC;AACA,MAAIzwB,SAAS,GAAGoY,YAAY,CAACpY,SAA7B;AAEA,MAAMstC,SAAS,GAAG;AACjBC,IAAAA,iBAAiB,EAAE,OADF;AAEjBC,IAAAA,oBAAoB,EAAE,cAFL;AAGjBC,IAAAA,kBAAkB,EAAE,QAHH;AAIjBzoC,IAAAA,iBAAiB,EAAE,OAJF;AAKjB0oC,IAAAA,mBAAmB,EAAE,SALJ;AAMjBC,IAAAA,iBAAiB,EAAE,OANF;AAOjBC,IAAAA,gBAAgB,EAAE,MAPD;AAQjBC,IAAAA,oBAAoB,EAAE,UARL;AASjBC,IAAAA,oBAAoB,EAAE,UATL;AAUjBC,IAAAA,kBAAkB,EAAE,QAVH;AAWjBC,IAAAA,iBAAiB,EAAE,OAXF;AAYjBC,IAAAA,kBAAkB,EAAE,QAZH;AAajBC,IAAAA,cAAc,EAAE,QAbC;AAcjBC,IAAAA,cAAc,EAAE,QAdC;AAejBC,IAAAA,cAAc,EAAE;AAfC,GAAlB;;AAkBA,WAASC,aAAT,CAAwBnzC,QAAxB,EAAkC4V,MAAlC,EAA0Cw9B,OAA1C,EAAmD16B,KAAnD,EAA0DzpB,MAA1D,EAAmE;AAElE,QAAM0a,GAAG,GAAG+O,KAAK,CAAC/O,GAAlB;AACA,QAAMja,QAAQ,GAAGT,MAAM,CAACS,QAAxB;AACA,QAAM4P,WAAW,GAAGU,QAAQ,CAACqzC,sBAAT,GAAkC36B,KAAK,CAACpZ,WAAxC,GAAsD,IAA1E;AAEA,QAAMgJ,MAAM,GAAG,CAAEtI,QAAQ,CAACqzC,sBAAT,GAAkCpB,UAAlC,GAA+CnkB,QAAjD,EAA4D/P,GAA5D,CAAiE/d,QAAQ,CAACsI,MAAT,IAAmBhJ,WAApF,CAAf;AACA,QAAM2qC,kBAAkB,GAAK,CAAC,CAAE3hC,MAAL,IAAmBA,MAAM,CAAC7mB,OAAP,KAAmBxa,uBAAtC,GAAkEqhC,MAAM,CAAChpB,KAAP,CAAaM,MAA/E,GAAwF,IAAnH;AAEA,QAAMuqD,QAAQ,GAAGiI,SAAS,CAAEpyC,QAAQ,CAAC5xB,IAAX,CAA1B,CATkE,CAWlE;AACA;;AAEA,QAAK4xB,QAAQ,CAAC8E,SAAT,KAAuB,IAA5B,EAAmC;AAElCA,MAAAA,SAAS,GAAGoY,YAAY,CAACuX,eAAb,CAA8Bz0B,QAAQ,CAAC8E,SAAvC,CAAZ;;AAEA,UAAKA,SAAS,KAAK9E,QAAQ,CAAC8E,SAA5B,EAAwC;AAEvC3wB,QAAAA,OAAO,CAACC,IAAR,CAAc,mCAAd,EAAmD4rB,QAAQ,CAAC8E,SAA5D,EAAuE,sBAAvE,EAA+FA,SAA/F,EAA0G,UAA1G;AAEA;AAED,KAxBiE,CA0BlE;;;AAEA,QAAM4I,cAAc,GAAGhe,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,IAAqCF,QAAQ,CAAC2c,eAAT,CAAyB7e,MAA9D,IAAwEkC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAxH;AACA,QAAMyjD,iBAAiB,GAAKryB,cAAc,KAAKn/B,SAArB,GAAmCm/B,cAAc,CAACt+B,MAAlD,GAA2D,CAArF;AAEA,QAAI0/D,kBAAkB,GAAG,CAAzB;AAEA,QAAKp/C,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,KAAsCrhB,SAA3C,EAAuDugE,kBAAkB,GAAG,CAArB;AACvD,QAAKp/C,QAAQ,CAAC2c,eAAT,CAAyB7e,MAAzB,KAAoCjf,SAAzC,EAAqDugE,kBAAkB,GAAG,CAArB;AACrD,QAAKp/C,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAzB,KAAmC/N,SAAxC,EAAoDugE,kBAAkB,GAAG,CAArB,CAnCc,CAqClE;;AAEA,QAAIp5B,YAAJ,EAAkBC,cAAlB;AACA,QAAI29B,oBAAJ,EAA0BC,sBAA1B;;AAEA,QAAKpJ,QAAL,EAAgB;AAEf,UAAM7wB,MAAM,GAAGgT,SAAS,CAAE6d,QAAF,CAAxB;AAEAz0B,MAAAA,YAAY,GAAG4D,MAAM,CAAC5D,YAAtB;AACAC,MAAAA,cAAc,GAAG2D,MAAM,CAAC3D,cAAxB;AAEA,KAPD,MAOO;AAEND,MAAAA,YAAY,GAAG1V,QAAQ,CAAC0V,YAAxB;AACAC,MAAAA,cAAc,GAAG3V,QAAQ,CAAC2V,cAA1B;;AAEAw8B,MAAAA,cAAc,CAAC3qD,MAAf,CAAuBwY,QAAvB;;AAEAszC,MAAAA,oBAAoB,GAAGnB,cAAc,CAACqB,iBAAf,CAAkCxzC,QAAlC,CAAvB;AACAuzC,MAAAA,sBAAsB,GAAGpB,cAAc,CAACsB,mBAAf,CAAoCzzC,QAApC,CAAzB;AAEA;;AAED,QAAM2Y,mBAAmB,GAAGF,QAAQ,CAACG,eAAT,EAA5B;AAEA,QAAM86B,YAAY,GAAG1zC,QAAQ,CAACsJ,SAAT,GAAqB,CAA1C;AACA,QAAMqqC,YAAY,GAAG3zC,QAAQ,CAACsG,SAAT,GAAqB,CAA1C;AACA,QAAMstC,cAAc,GAAG5zC,QAAQ,CAAC4G,WAAT,GAAuB,CAA9C;AAEA,QAAMlH,UAAU,GAAG;AAElByd,MAAAA,QAAQ,EAAEA,QAFQ;AAIlBgtB,MAAAA,QAAQ,EAAEA,QAJQ;AAKlB+D,MAAAA,UAAU,EAAEluC,QAAQ,CAAC5xB,IALH;AAOlBsnC,MAAAA,YAAY,EAAEA,YAPI;AAQlBC,MAAAA,cAAc,EAAEA,cARE;AASlBF,MAAAA,OAAO,EAAEzV,QAAQ,CAACyV,OATA;AAWlB69B,MAAAA,oBAAoB,EAAEA,oBAXJ;AAYlBC,MAAAA,sBAAsB,EAAEA,sBAZN;AAclBtF,MAAAA,mBAAmB,EAAEjuC,QAAQ,CAACiuC,mBAAT,KAAiC,IAdpC;AAelB33B,MAAAA,WAAW,EAAEtW,QAAQ,CAACsW,WAfJ;AAiBlBxR,MAAAA,SAAS,EAAEA,SAjBO;AAmBlBqpC,MAAAA,UAAU,EAAEl/C,MAAM,CAAC6P,eAAP,KAA2B,IAnBrB;AAoBlBsvC,MAAAA,eAAe,EAAEn/C,MAAM,CAAC6P,eAAP,KAA2B,IAA3B,IAAmC7P,MAAM,CAAC+P,aAAP,KAAyB,IApB3D;AAsBlBqvC,MAAAA,sBAAsB,EAAE9Y,cAtBN;AAuBlB8Z,MAAAA,cAAc,EAAI12B,mBAAmB,KAAK,IAA1B,GAAmCF,QAAQ,CAAC42B,cAA5C,GAA+D12B,mBAAmB,CAACk7B,gBAApB,KAAyC,IAAzC,GAAgDl7B,mBAAmB,CAACjzB,OAApB,CAA4BzD,QAA5E,GAAuFnW,cAvBpJ;AAwBlBm7B,MAAAA,GAAG,EAAE,CAAC,CAAEjH,QAAQ,CAACiH,GAxBC;AAyBlBC,MAAAA,MAAM,EAAE,CAAC,CAAElH,QAAQ,CAACkH,MAzBF;AA0BlBoB,MAAAA,MAAM,EAAE,CAAC,CAAEA,MA1BO;AA2BlBwkC,MAAAA,UAAU,EAAExkC,MAAM,IAAIA,MAAM,CAAC7mB,OA3BX;AA4BlBwoD,MAAAA,kBAAkB,EAAEA,kBA5BF;AA6BlB7iC,MAAAA,QAAQ,EAAE,CAAC,CAAEpH,QAAQ,CAACoH,QA7BJ;AA8BlBE,MAAAA,KAAK,EAAE,CAAC,CAAEtH,QAAQ,CAACsH,KA9BD;AA+BlBY,MAAAA,WAAW,EAAE,CAAC,CAAElI,QAAQ,CAACkI,WA/BP;AAgClBV,MAAAA,OAAO,EAAE,CAAC,CAAExH,QAAQ,CAACwH,OAhCH;AAiClBE,MAAAA,SAAS,EAAE,CAAC,CAAE1H,QAAQ,CAAC0H,SAjCL;AAkClB8mC,MAAAA,oBAAoB,EAAExuC,QAAQ,CAAC2H,aAAT,KAA2Bx7B,oBAlC/B;AAmClB+9D,MAAAA,qBAAqB,EAAElqC,QAAQ,CAAC2H,aAAT,KAA2Bz7B,qBAnChC;AAqClBgjE,MAAAA,kBAAkB,EAAE,CAAC,CAAElvC,QAAQ,CAACiH,GAAZ,IAAqBjH,QAAQ,CAACiH,GAAT,CAAa6sC,cAAb,KAAgC,IAArD,IAAiE9zC,QAAQ,CAACiH,GAAT,CAAahlB,QAAb,KAA0BlW,YArC7F;AAuClBu6B,MAAAA,SAAS,EAAEqtC,YAvCO;AAwClBntC,MAAAA,YAAY,EAAEmtC,YAAY,IAAI,CAAC,CAAE3zC,QAAQ,CAACwG,YAxCxB;AAyClBC,MAAAA,qBAAqB,EAAEktC,YAAY,IAAI,CAAC,CAAE3zC,QAAQ,CAACyG,qBAzCjC;AA0ClBC,MAAAA,kBAAkB,EAAEitC,YAAY,IAAI,CAAC,CAAE3zC,QAAQ,CAAC0G,kBA1C9B;AA4ClBE,MAAAA,WAAW,EAAEgtC,cA5CK;AA6ClB7sC,MAAAA,cAAc,EAAE6sC,cAAc,IAAI,CAAC,CAAE5zC,QAAQ,CAAC+G,cA7C5B;AA8ClBC,MAAAA,uBAAuB,EAAE4sC,cAAc,IAAI,CAAC,CAAE5zC,QAAQ,CAACgH,uBA9CrC;AAgDlBa,MAAAA,eAAe,EAAE,CAAC,CAAE7H,QAAQ,CAAC6H,eAhDX;AAiDlBG,MAAAA,YAAY,EAAE,CAAC,CAAEhI,QAAQ,CAACgI,YAjDR;AAkDlBC,MAAAA,YAAY,EAAE,CAAC,CAAEjI,QAAQ,CAACiI,YAlDR;AAmDlBE,MAAAA,WAAW,EAAE,CAAC,CAAEnI,QAAQ,CAACmI,WAnDP;AAoDlBC,MAAAA,oBAAoB,EAAE,CAAC,CAAEpI,QAAQ,CAACoI,oBApDhB;AAqDlBC,MAAAA,gBAAgB,EAAE,CAAC,CAAErI,QAAQ,CAACqI,gBArDZ;AAuDlB+mC,MAAAA,MAAM,EAAEpvC,QAAQ,CAACuD,WAAT,KAAyB,KAAzB,IAAkCvD,QAAQ,CAACmD,QAAT,KAAsB7+B,cAvD9C;AAyDlB6iC,MAAAA,QAAQ,EAAE,CAAC,CAAEnH,QAAQ,CAACmH,QAzDJ;AA0DlBmC,MAAAA,SAAS,EAAEoqC,YA1DO;AA4DlB/qC,MAAAA,WAAW,EAAE,CAAC,CAAE3I,QAAQ,CAAC2I,WA5DP;AA8DlB9C,MAAAA,KAAK,EAAE7F,QAAQ,CAAC6F,KAAT,GAAiB,CA9DN;AA+DlB4nB,MAAAA,aAAa,EAAE,CAAC,CAAEztB,QAAQ,CAACytB,aA/DT;AAgElBC,MAAAA,iBAAiB,EAAE,CAAC,CAAE1tB,QAAQ,CAAC0tB,iBAhEb;AAkElB9kB,MAAAA,YAAY,EAAE5I,QAAQ,CAAC4I,YAAT,GAAwB,CAlEpB;AAmElBC,MAAAA,eAAe,EAAE,CAAC,CAAE7I,QAAQ,CAAC6I,eAnEX;AAoElBE,MAAAA,YAAY,EAAE,CAAC,CAAE/I,QAAQ,CAAC+I,YApER;AAsElBR,MAAAA,OAAO,EAAEvI,QAAQ,CAACuI,OAtEA;AAwElBkmC,MAAAA,cAAc,EAAI,CAAC,CAAEzuC,QAAQ,CAAC0H,SAAZ,IAAyB,CAAC,CAAEhY,QAAQ,CAACC,UAAT,CAAoBkd,OAxEhD;AAyElBxJ,MAAAA,YAAY,EAAErD,QAAQ,CAACqD,YAzEL;AA0ElBqrC,MAAAA,YAAY,EAAE1uC,QAAQ,CAACqD,YAAT,KAA0B,IAA1B,IAAkC,CAAC,CAAE3T,QAAQ,CAACC,UAAT,CAAoBrT,KAAzD,IAAkEoT,QAAQ,CAACC,UAAT,CAAoBrT,KAApB,CAA0B8tB,QAA1B,KAAuC,CA1ErG;AA2ElBukC,MAAAA,SAAS,EAAE,CAAC,CAAE3uC,QAAQ,CAACiH,GAAZ,IAAmB,CAAC,CAAEjH,QAAQ,CAACwH,OAA/B,IAA0C,CAAC,CAAExH,QAAQ,CAAC0H,SAAtD,IAAmE,CAAC,CAAE1H,QAAQ,CAACmI,WAA/E,IAA8F,CAAC,CAAEnI,QAAQ,CAACmH,QAA1G,IAAsH,CAAC,CAAEnH,QAAQ,CAACkI,WAAlI,IAAiJ,CAAC,CAAElI,QAAQ,CAACgI,YAA7J,IAA6K,CAAC,CAAEhI,QAAQ,CAACiI,YAAzL,IAAyM,CAAC,CAAEjI,QAAQ,CAACwG,YAArN,IAAqO,CAAC,CAAExG,QAAQ,CAACyG,qBAAjP,IAA0Q,CAAC,CAAEzG,QAAQ,CAAC0G,kBAAtR,IAA4S,CAAC,CAAE1G,QAAQ,CAAC+G,cAAxT,IAA0U,CAAC,CAAE/G,QAAQ,CAACgH,uBAAtV,IAAiX,CAAC,CAAEhH,QAAQ,CAAC6H,eAA7X,IAAgZ,CAAC,CAAE7H,QAAQ,CAAC6I,eAA5Z,IAA+a,CAAC,CAAE7I,QAAQ,CAAC+I,YAA3b,IAA2c,CAAC,CAAE/I,QAAQ,CAACoI,oBAAvd,IAA+e,CAAC,CAAEpI,QAAQ,CAACqI,gBAA3f,IAA+gB,CAAC,CAAErI,QAAQ,CAACytB,aAA3hB,IAA4iB,CAAC,CAAEztB,QAAQ,CAAC0tB,iBA3EjjB;AA4ElBkhB,MAAAA,aAAa,EAAE,EAAI,CAAC,CAAE5uC,QAAQ,CAACiH,GAAZ,IAAmB,CAAC,CAAEjH,QAAQ,CAACwH,OAA/B,IAA0C,CAAC,CAAExH,QAAQ,CAAC0H,SAAtD,IAAmE,CAAC,CAAE1H,QAAQ,CAACmI,WAA/E,IAA8F,CAAC,CAAEnI,QAAQ,CAACmH,QAA1G,IAAsH,CAAC,CAAEnH,QAAQ,CAACkI,WAAlI,IAAiJ,CAAC,CAAElI,QAAQ,CAACgI,YAA7J,IAA6K,CAAC,CAAEhI,QAAQ,CAACiI,YAAzL,IAAyM,CAAC,CAAEjI,QAAQ,CAAC0G,kBAArN,IAA2O,CAAC,CAAE1G,QAAQ,CAAC+G,cAAvP,IAAyQ,CAAC,CAAE/G,QAAQ,CAACgH,uBAArR,IAAgThH,QAAQ,CAAC4I,YAAT,GAAwB,CAAxU,IAA6U,CAAC,CAAE5I,QAAQ,CAAC6I,eAAzV,IAA4W,CAAC,CAAE7I,QAAQ,CAAC+I,YAAxX,IAAwY,CAAC,CAAE/I,QAAQ,CAACoI,oBAApZ,IAA4a,CAAC,CAAEpI,QAAQ,CAACqI,gBAAxb,IAA4crI,QAAQ,CAAC6F,KAAT,GAAiB,CAA7d,IAAke,CAAC,CAAE7F,QAAQ,CAACytB,aAA9e,IAA+f,CAAC,CAAEztB,QAAQ,CAAC0tB,iBAA/gB,KAAsiB,CAAC,CAAE1tB,QAAQ,CAAC6H,eA5E/iB;AA8ElB8B,MAAAA,GAAG,EAAE,CAAC,CAAEA,GA9EU;AA+ElB2kC,MAAAA,MAAM,EAAEtuC,QAAQ,CAAC2J,GAAT,KAAiB,IA/EP;AAgFlB4kC,MAAAA,OAAO,EAAI5kC,GAAG,IAAIA,GAAG,CAACoqC,SAhFJ;AAkFlBtuC,MAAAA,WAAW,EAAE,CAAC,CAAEzF,QAAQ,CAACyF,WAlFP;AAoFlByD,MAAAA,eAAe,EAAElJ,QAAQ,CAACkJ,eApFR;AAqFlB4rB,MAAAA,sBAAsB,EAAEA,sBArFN;AAuFlB+Z,MAAAA,QAAQ,EAAE5/C,MAAM,CAAC2Q,aAAP,KAAyB,IAvFjB;AAyFlBygC,MAAAA,YAAY,EAAE3wC,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,KAAsCrhB,SAzFlC;AA0FlB+xD,MAAAA,YAAY,EAAE5wC,QAAQ,CAAC2c,eAAT,CAAyB7e,MAAzB,KAAoCjf,SA1FhC;AA2FlBgyD,MAAAA,WAAW,EAAE7wC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAzB,KAAmC/N,SA3F9B;AA4FlBwxD,MAAAA,iBAAiB,EAAEA,iBA5FD;AA6FlB+O,MAAAA,kBAAkB,EAAEA,kBA7FF;AA+FlB5D,MAAAA,YAAY,EAAEt1B,MAAM,CAACo+B,WAAP,CAAmB5kE,MA/Ff;AAgGlBi8D,MAAAA,cAAc,EAAEz1B,MAAM,CAACtmB,KAAP,CAAalgB,MAhGX;AAiGlB+7D,MAAAA,aAAa,EAAEv1B,MAAM,CAACq+B,IAAP,CAAY7kE,MAjGT;AAkGlBg8D,MAAAA,iBAAiB,EAAEx1B,MAAM,CAACs+B,QAAP,CAAgB9kE,MAlGjB;AAmGlBk8D,MAAAA,aAAa,EAAE11B,MAAM,CAACu+B,IAAP,CAAY/kE,MAnGT;AAqGlBm8D,MAAAA,kBAAkB,EAAE31B,MAAM,CAACqV,oBAAP,CAA4B77C,MArG9B;AAsGlBq8D,MAAAA,oBAAoB,EAAE71B,MAAM,CAACkW,cAAP,CAAsB18C,MAtG1B;AAuGlBo8D,MAAAA,mBAAmB,EAAE51B,MAAM,CAAC4V,aAAP,CAAqBp8C,MAvGxB;AAyGlBu8D,MAAAA,iBAAiB,EAAE91B,QAAQ,CAACogB,SAzGV;AA0GlB2V,MAAAA,mBAAmB,EAAE/1B,QAAQ,CAACqgB,eA1GZ;AA4GlBhxB,MAAAA,SAAS,EAAElF,QAAQ,CAACkF,SA5GF;AA8GlB+pC,MAAAA,gBAAgB,EAAEx2B,QAAQ,CAAC27B,SAAT,CAAmB18B,OAAnB,IAA8B07B,OAAO,CAAChkE,MAAR,GAAiB,CA9G/C;AA+GlBu9D,MAAAA,aAAa,EAAEl0B,QAAQ,CAAC27B,SAAT,CAAmBhmE,IA/GhB;AAiHlB0qC,MAAAA,WAAW,EAAE9Y,QAAQ,CAACqF,UAAT,GAAsBoT,QAAQ,CAACK,WAA/B,GAA6CxyC,aAjHxC;AAkHlB6oE,MAAAA,uBAAuB,EAAE12B,QAAQ,CAAC02B,uBAlHhB;AAoHlB/pC,MAAAA,kBAAkB,EAAEpF,QAAQ,CAACoF,kBApHX;AAsHlB2pC,MAAAA,WAAW,EAAE/uC,QAAQ,CAACoD,IAAT,KAAkBl/B,UAtHb;AAuHlB8qE,MAAAA,SAAS,EAAEhvC,QAAQ,CAACoD,IAAT,KAAkBn/B,QAvHX;AAyHlBqrE,MAAAA,eAAe,EAAE,CAAC,CAAEtvC,QAAQ,CAACuvC,YAzHX;AA0HlBA,MAAAA,YAAY,EAAEvvC,QAAQ,CAACuvC,YAAT,IAAyB,CA1HrB;AA4HlBn5B,MAAAA,mBAAmB,EAAEpW,QAAQ,CAACoW,mBA5HZ;AA8HlB4zB,MAAAA,oBAAoB,EAAEhqC,QAAQ,CAAC8V,UAAT,IAAuB9V,QAAQ,CAAC8V,UAAT,CAAoBC,WA9H/C;AA+HlBq0B,MAAAA,kBAAkB,EAAEpqC,QAAQ,CAAC8V,UAAT,IAAuB9V,QAAQ,CAAC8V,UAAT,CAAoBE,SA/H7C;AAgIlBs0B,MAAAA,oBAAoB,EAAEtqC,QAAQ,CAAC8V,UAAT,IAAuB9V,QAAQ,CAAC8V,UAAT,CAAoBG,WAhI/C;AAiIlBu0B,MAAAA,yBAAyB,EAAExqC,QAAQ,CAAC8V,UAAT,IAAuB9V,QAAQ,CAAC8V,UAAT,CAAoBI,gBAjIpD;AAmIlBm0B,MAAAA,0BAA0B,EAAEltB,QAAQ,IAAIrH,UAAU,CAACye,GAAX,CAAgB,gBAAhB,CAnItB;AAoIlBgW,MAAAA,4BAA4B,EAAEptB,QAAQ,IAAIrH,UAAU,CAACye,GAAX,CAAgB,oBAAhB,CApIxB;AAqIlBkW,MAAAA,iCAAiC,EAAEttB,QAAQ,IAAIrH,UAAU,CAACye,GAAX,CAAgB,wBAAhB,CArI7B;AAuIlB8f,MAAAA,qBAAqB,EAAEr0C,QAAQ,CAACq0C,qBAAT;AAvIL,KAAnB;AA2IA,WAAO30C,UAAP;AAEA;;AAED,WAAS40C,kBAAT,CAA6B50C,UAA7B,EAA0C;AAEzC,QAAM1wB,KAAK,GAAG,EAAd;;AAEA,QAAK0wB,UAAU,CAACyqC,QAAhB,EAA2B;AAE1Bn7D,MAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACyqC,QAAvB;AAEA,KAJD,MAIO;AAENn7D,MAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC4zC,oBAAvB;AACAtkE,MAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC6zC,sBAAvB;AAEA;;AAED,QAAK7zC,UAAU,CAAC+V,OAAX,KAAuBlnC,SAA5B,EAAwC;AAEvC,WAAM,IAAMqN,IAAZ,IAAoB8jB,UAAU,CAAC+V,OAA/B,EAAyC;AAExCzmC,QAAAA,KAAK,CAACN,IAAN,CAAYkN,IAAZ;AACA5M,QAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC+V,OAAX,CAAoB75B,IAApB,CAAZ;AAEA;AAED;;AAED,QAAK8jB,UAAU,CAACuuC,mBAAX,KAAmC,KAAxC,EAAgD;AAE/CsG,MAAAA,4BAA4B,CAAEvlE,KAAF,EAAS0wB,UAAT,CAA5B;AACA80C,MAAAA,0BAA0B,CAAExlE,KAAF,EAAS0wB,UAAT,CAA1B;AACA1wB,MAAAA,KAAK,CAACN,IAAN,CAAY+pC,QAAQ,CAAC42B,cAArB;AAEA;;AAEDrgE,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC20C,qBAAvB;AAEA,WAAOrlE,KAAK,CAAC+5D,IAAN,EAAP;AAEA;;AAED,WAASwL,4BAAT,CAAuCvlE,KAAvC,EAA8C0wB,UAA9C,EAA2D;AAE1D1wB,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACoF,SAAvB;AACA91B,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC2vC,cAAvB;AACArgE,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACotC,UAAvB;AACA99D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACuqC,kBAAvB;AACAj7D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC6I,OAAvB;AACAv5B,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACivC,SAAvB;AACA3/D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC6uC,OAAvB;AACAv/D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACwJ,eAAvB;AACAl6B,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACqgC,iBAAvB;AACA/wD,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC+0C,mBAAvB;AACAzlE,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACwrC,YAAvB;AACAl8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC2rC,cAAvB;AACAr8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACyrC,aAAvB;AACAn8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC4rC,aAAvB;AACAt8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC0rC,iBAAvB;AACAp8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC6rC,kBAAvB;AACAv8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC+rC,oBAAvB;AACAz8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC8rC,mBAAvB;AACAx8D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACitC,aAAvB;AACA39D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACoZ,WAAvB;AACA9pC,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACisC,iBAAvB;AACA38D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAACksC,mBAAvB;AACA58D,IAAAA,KAAK,CAACN,IAAN,CAAYgxB,UAAU,CAAC6vC,YAAvB;AAEA;;AAED,WAASiF,0BAAT,CAAqCxlE,KAArC,EAA4C0wB,UAA5C,EAAyD;AAExDwyC,IAAAA,cAAc,CAACwC,UAAf;;AAEA,QAAKh1C,UAAU,CAACyd,QAAhB,EACC+0B,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC2uC,sBAAhB,EACC6D,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACyuC,UAAhB,EACC+D,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC0uC,eAAhB,EACC8D,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACuH,GAAhB,EACCirC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACwH,MAAhB,EACCgrC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC4I,MAAhB,EACC4pC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC0H,QAAhB,EACC8qC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC4H,KAAhB,EACC4qC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACwI,WAAhB,EACCgqC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC8H,OAAhB,EACC0qC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACgI,SAAhB,EACCwqC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC8uC,oBAAhB,EACC0D,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACwqC,qBAAhB,EACCgI,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC4G,SAAhB,EACC4rC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC8G,YAAhB,EACC0rC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC+G,qBAAhB,EACCyrC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACgH,kBAAhB,EACCwrC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACkH,WAAhB,EACCsrC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACqH,cAAhB,EACCmrC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACsH,uBAAhB,EACCkrC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACmI,eAAhB,EACCqqC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACyI,WAAhB,EACC+pC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACsI,YAAhB,EACCkqC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACuI,YAAhB,EACCiqC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACiJ,WAAhB,EACCupC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACyH,QAAhB,EACC+qC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC4J,SAAhB,EACC4oC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC2D,YAAhB,EACC6uC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACgvC,YAAhB,EACCwD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACivC,SAAhB,EACCuD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC+uC,cAAhB,EACCyD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACkvC,aAAhB,EACCsD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACiK,GAAhB,EACCuoC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AAED3lE,IAAAA,KAAK,CAACN,IAAN,CAAYwjE,cAAc,CAACr3C,IAA3B;;AACAq3C,IAAAA,cAAc,CAACwC,UAAf;;AAEA,QAAKh1C,UAAU,CAAC4uC,MAAhB,EACC4D,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC+F,WAAhB,EACCysC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACo1B,sBAAhB,EACCod,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACmvC,QAAhB,EACCqD,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC2gC,YAAhB,EACC6R,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC4gC,YAAhB,EACC4R,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC6gC,WAAhB,EACC2R,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAAC0F,kBAAhB,EACC8sC,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACuvC,gBAAhB,EACCiD,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACyvC,uBAAhB,EACC+C,cAAc,CAACyC,MAAf,CAAuB,CAAvB;AACD,QAAKj1C,UAAU,CAACqvC,WAAhB,EACCmD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACsvC,SAAhB,EACCkD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC4vC,eAAhB,EACC4C,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACwF,SAAhB,EACCgtC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC0I,oBAAhB,EACC8pC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC2I,gBAAhB,EACC6pC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACkJ,YAAhB,EACCspC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACmJ,eAAhB,EACCqpC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACqJ,YAAhB,EACCmpC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACmG,KAAhB,EACCqsC,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC+tB,aAAhB,EACCykB,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACguB,iBAAhB,EACCwkB,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAACwvC,kBAAhB,EACCgD,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AACD,QAAKj1C,UAAU,CAAC0vC,MAAhB,EACC8C,cAAc,CAACyC,MAAf,CAAuB,EAAvB;AAED3lE,IAAAA,KAAK,CAACN,IAAN,CAAYwjE,cAAc,CAACr3C,IAA3B;AAEA;;AAED,WAASkmC,WAAT,CAAsB/gC,QAAtB,EAAiC;AAEhC,QAAMmqC,QAAQ,GAAGiI,SAAS,CAAEpyC,QAAQ,CAAC5xB,IAAX,CAA1B;AACA,QAAI6mC,QAAJ;;AAEA,QAAKk1B,QAAL,EAAgB;AAEf,UAAM7wB,MAAM,GAAGgT,SAAS,CAAE6d,QAAF,CAAxB;AACAl1B,MAAAA,QAAQ,GAAGE,aAAa,CAACnvB,KAAd,CAAqBszB,MAAM,CAACrE,QAA5B,CAAX;AAEA,KALD,MAKO;AAENA,MAAAA,QAAQ,GAAGjV,QAAQ,CAACiV,QAApB;AAEA;;AAED,WAAOA,QAAP;AAEA;;AAED,WAAS2/B,cAAT,CAAyBl1C,UAAzB,EAAqC+tC,QAArC,EAAgD;AAE/C,QAAInd,OAAJ,CAF+C,CAI/C;;AACA,SAAM,IAAIrzC,CAAC,GAAG,CAAR,EAAW43D,EAAE,GAAGxV,QAAQ,CAACjwD,MAA/B,EAAuC6N,CAAC,GAAG43D,EAA3C,EAA+C53D,CAAC,EAAhD,EAAsD;AAErD,UAAM63D,kBAAkB,GAAGzV,QAAQ,CAAEpiD,CAAF,CAAnC;;AAEA,UAAK63D,kBAAkB,CAACrH,QAAnB,KAAgCA,QAArC,EAAgD;AAE/Cnd,QAAAA,OAAO,GAAGwkB,kBAAV;AACA,UAAGxkB,OAAO,CAAC0gB,SAAX;AAEA;AAEA;AAED;;AAED,QAAK1gB,OAAO,KAAK/hD,SAAjB,EAA6B;AAE5B+hD,MAAAA,OAAO,GAAG,IAAIkd,YAAJ,CAAkB/0B,QAAlB,EAA4Bg1B,QAA5B,EAAsC/tC,UAAtC,EAAkDswB,aAAlD,CAAV;AACAqP,MAAAA,QAAQ,CAAC3wD,IAAT,CAAe4hD,OAAf;AAEA;;AAED,WAAOA,OAAP;AAEA;;AAED,WAASykB,cAAT,CAAyBzkB,OAAzB,EAAmC;AAElC,QAAK,EAAGA,OAAO,CAAC0gB,SAAX,KAAyB,CAA9B,EAAkC;AAEjC;AACA,UAAM9hE,CAAC,GAAGmwD,QAAQ,CAAC5wD,OAAT,CAAkB6hD,OAAlB,CAAV;AACA+O,MAAAA,QAAQ,CAAEnwD,CAAF,CAAR,GAAgBmwD,QAAQ,CAAEA,QAAQ,CAACjwD,MAAT,GAAkB,CAApB,CAAxB;AACAiwD,MAAAA,QAAQ,CAAC2V,GAAT,GALiC,CAOjC;;AACA1kB,MAAAA,OAAO,CAACwgB,OAAR;AAEA;AAED;;AAED,WAASmE,kBAAT,CAA6Bj1C,QAA7B,EAAwC;AAEvCmyC,IAAAA,cAAc,CAACt0C,MAAf,CAAuBmC,QAAvB;AAEA;;AAED,WAASja,OAAT,GAAmB;AAElBosD,IAAAA,cAAc,CAACpsD,OAAf;AAEA;;AAED,SAAO;AACNotD,IAAAA,aAAa,EAAEA,aADT;AAENmB,IAAAA,kBAAkB,EAAEA,kBAFd;AAGNvT,IAAAA,WAAW,EAAEA,WAHP;AAIN6T,IAAAA,cAAc,EAAEA,cAJV;AAKNG,IAAAA,cAAc,EAAEA,cALV;AAMNE,IAAAA,kBAAkB,EAAEA,kBANd;AAON;AACA5V,IAAAA,QAAQ,EAAEA,QARJ;AASNt5C,IAAAA,OAAO,EAAEA;AATH,GAAP;AAYA;;AAED,SAASmvD,eAAT,GAA2B;AAE1B,MAAIvqB,UAAU,GAAG,IAAItN,OAAJ,EAAjB;;AAEA,WAASU,GAAT,CAAc9uB,MAAd,EAAuB;AAEtB,QAAIgY,GAAG,GAAG0jB,UAAU,CAAC5M,GAAX,CAAgB9uB,MAAhB,CAAV;;AAEA,QAAKgY,GAAG,KAAK14B,SAAb,EAAyB;AAExB04B,MAAAA,GAAG,GAAG,EAAN;AACA0jB,MAAAA,UAAU,CAACz2C,GAAX,CAAgB+a,MAAhB,EAAwBgY,GAAxB;AAEA;;AAED,WAAOA,GAAP;AAEA;;AAED,WAASpJ,MAAT,CAAiB5O,MAAjB,EAA0B;AAEzB07B,IAAAA,UAAU,CAAC1M,MAAX,CAAmBhvB,MAAnB;AAEA;;AAED,WAASzH,MAAT,CAAiByH,MAAjB,EAAyBqR,GAAzB,EAA8BjwB,KAA9B,EAAsC;AAErCs6C,IAAAA,UAAU,CAAC5M,GAAX,CAAgB9uB,MAAhB,EAA0BqR,GAA1B,IAAkCjwB,KAAlC;AAEA;;AAED,WAAS0V,OAAT,GAAmB;AAElB4kC,IAAAA,UAAU,GAAG,IAAItN,OAAJ,EAAb;AAEA;;AAED,SAAO;AACNU,IAAAA,GAAG,EAAEA,GADC;AAENlgB,IAAAA,MAAM,EAAEA,MAFF;AAGNrW,IAAAA,MAAM,EAAEA,MAHF;AAINzB,IAAAA,OAAO,EAAEA;AAJH,GAAP;AAOA;;AAED,SAASovD,iBAAT,CAA4B/hE,CAA5B,EAA+BC,CAA/B,EAAmC;AAElC,MAAKD,CAAC,CAACgiE,UAAF,KAAiB/hE,CAAC,CAAC+hE,UAAxB,EAAqC;AAEpC,WAAOhiE,CAAC,CAACgiE,UAAF,GAAe/hE,CAAC,CAAC+hE,UAAxB;AAEA,GAJD,MAIO,IAAKhiE,CAAC,CAAC2pB,WAAF,KAAkB1pB,CAAC,CAAC0pB,WAAzB,EAAuC;AAE7C,WAAO3pB,CAAC,CAAC2pB,WAAF,GAAgB1pB,CAAC,CAAC0pB,WAAzB;AAEA,GAJM,MAIA,IAAK3pB,CAAC,CAAC4sB,QAAF,CAAWlC,EAAX,KAAkBzqB,CAAC,CAAC2sB,QAAF,CAAWlC,EAAlC,EAAuC;AAE7C,WAAO1qB,CAAC,CAAC4sB,QAAF,CAAWlC,EAAX,GAAgBzqB,CAAC,CAAC2sB,QAAF,CAAWlC,EAAlC;AAEA,GAJM,MAIA,IAAK1qB,CAAC,CAAC0Q,CAAF,KAAQzQ,CAAC,CAACyQ,CAAf,EAAmB;AAEzB,WAAO1Q,CAAC,CAAC0Q,CAAF,GAAMzQ,CAAC,CAACyQ,CAAf;AAEA,GAJM,MAIA;AAEN,WAAO1Q,CAAC,CAAC0qB,EAAF,GAAOzqB,CAAC,CAACyqB,EAAhB;AAEA;AAED;;AAED,SAASu3C,wBAAT,CAAmCjiE,CAAnC,EAAsCC,CAAtC,EAA0C;AAEzC,MAAKD,CAAC,CAACgiE,UAAF,KAAiB/hE,CAAC,CAAC+hE,UAAxB,EAAqC;AAEpC,WAAOhiE,CAAC,CAACgiE,UAAF,GAAe/hE,CAAC,CAAC+hE,UAAxB;AAEA,GAJD,MAIO,IAAKhiE,CAAC,CAAC2pB,WAAF,KAAkB1pB,CAAC,CAAC0pB,WAAzB,EAAuC;AAE7C,WAAO3pB,CAAC,CAAC2pB,WAAF,GAAgB1pB,CAAC,CAAC0pB,WAAzB;AAEA,GAJM,MAIA,IAAK3pB,CAAC,CAAC0Q,CAAF,KAAQzQ,CAAC,CAACyQ,CAAf,EAAmB;AAEzB,WAAOzQ,CAAC,CAACyQ,CAAF,GAAM1Q,CAAC,CAAC0Q,CAAf;AAEA,GAJM,MAIA;AAEN,WAAO1Q,CAAC,CAAC0qB,EAAF,GAAOzqB,CAAC,CAACyqB,EAAhB;AAEA;AAED;;AAGD,SAASw3C,eAAT,GAA2B;AAE1B,MAAMC,WAAW,GAAG,EAApB;AACA,MAAIC,gBAAgB,GAAG,CAAvB;AAEA,MAAMpG,MAAM,GAAG,EAAf;AACA,MAAMqG,YAAY,GAAG,EAArB;AACA,MAAMlyC,WAAW,GAAG,EAApB;;AAEA,WAAS4yB,IAAT,GAAgB;AAEfqf,IAAAA,gBAAgB,GAAG,CAAnB;AAEApG,IAAAA,MAAM,CAAChgE,MAAP,GAAgB,CAAhB;AACAqmE,IAAAA,YAAY,CAACrmE,MAAb,GAAsB,CAAtB;AACAm0B,IAAAA,WAAW,CAACn0B,MAAZ,GAAqB,CAArB;AAEA;;AAED,WAASsmE,iBAAT,CAA4BzmD,MAA5B,EAAoCS,QAApC,EAA8CsQ,QAA9C,EAAwDo1C,UAAxD,EAAoEtxD,CAApE,EAAuEmrB,KAAvE,EAA+E;AAE9E,QAAI0mC,UAAU,GAAGJ,WAAW,CAAEC,gBAAF,CAA5B;;AAEA,QAAKG,UAAU,KAAKpnE,SAApB,EAAgC;AAE/BonE,MAAAA,UAAU,GAAG;AACZ73C,QAAAA,EAAE,EAAE7O,MAAM,CAAC6O,EADC;AAEZ7O,QAAAA,MAAM,EAAEA,MAFI;AAGZS,QAAAA,QAAQ,EAAEA,QAHE;AAIZsQ,QAAAA,QAAQ,EAAEA,QAJE;AAKZo1C,QAAAA,UAAU,EAAEA,UALA;AAMZr4C,QAAAA,WAAW,EAAE9N,MAAM,CAAC8N,WANR;AAOZjZ,QAAAA,CAAC,EAAEA,CAPS;AAQZmrB,QAAAA,KAAK,EAAEA;AARK,OAAb;AAWAsmC,MAAAA,WAAW,CAAEC,gBAAF,CAAX,GAAkCG,UAAlC;AAEA,KAfD,MAeO;AAENA,MAAAA,UAAU,CAAC73C,EAAX,GAAgB7O,MAAM,CAAC6O,EAAvB;AACA63C,MAAAA,UAAU,CAAC1mD,MAAX,GAAoBA,MAApB;AACA0mD,MAAAA,UAAU,CAACjmD,QAAX,GAAsBA,QAAtB;AACAimD,MAAAA,UAAU,CAAC31C,QAAX,GAAsBA,QAAtB;AACA21C,MAAAA,UAAU,CAACP,UAAX,GAAwBA,UAAxB;AACAO,MAAAA,UAAU,CAAC54C,WAAX,GAAyB9N,MAAM,CAAC8N,WAAhC;AACA44C,MAAAA,UAAU,CAAC7xD,CAAX,GAAeA,CAAf;AACA6xD,MAAAA,UAAU,CAAC1mC,KAAX,GAAmBA,KAAnB;AAEA;;AAEDumC,IAAAA,gBAAgB;AAEhB,WAAOG,UAAP;AAEA;;AAED,WAASjnE,IAAT,CAAeugB,MAAf,EAAuBS,QAAvB,EAAiCsQ,QAAjC,EAA2Co1C,UAA3C,EAAuDtxD,CAAvD,EAA0DmrB,KAA1D,EAAkE;AAEjE,QAAM0mC,UAAU,GAAGD,iBAAiB,CAAEzmD,MAAF,EAAUS,QAAV,EAAoBsQ,QAApB,EAA8Bo1C,UAA9B,EAA0CtxD,CAA1C,EAA6CmrB,KAA7C,CAApC;;AAEA,QAAKjP,QAAQ,CAAC4I,YAAT,GAAwB,GAA7B,EAAmC;AAElC6sC,MAAAA,YAAY,CAAC/mE,IAAb,CAAmBinE,UAAnB;AAEA,KAJD,MAIO,IAAK31C,QAAQ,CAACuD,WAAT,KAAyB,IAA9B,EAAqC;AAE3CA,MAAAA,WAAW,CAAC70B,IAAZ,CAAkBinE,UAAlB;AAEA,KAJM,MAIA;AAENvG,MAAAA,MAAM,CAAC1gE,IAAP,CAAainE,UAAb;AAEA;AAED;;AAED,WAASrmB,OAAT,CAAkBrgC,MAAlB,EAA0BS,QAA1B,EAAoCsQ,QAApC,EAA8Co1C,UAA9C,EAA0DtxD,CAA1D,EAA6DmrB,KAA7D,EAAqE;AAEpE,QAAM0mC,UAAU,GAAGD,iBAAiB,CAAEzmD,MAAF,EAAUS,QAAV,EAAoBsQ,QAApB,EAA8Bo1C,UAA9B,EAA0CtxD,CAA1C,EAA6CmrB,KAA7C,CAApC;;AAEA,QAAKjP,QAAQ,CAAC4I,YAAT,GAAwB,GAA7B,EAAmC;AAElC6sC,MAAAA,YAAY,CAACnmB,OAAb,CAAsBqmB,UAAtB;AAEA,KAJD,MAIO,IAAK31C,QAAQ,CAACuD,WAAT,KAAyB,IAA9B,EAAqC;AAE3CA,MAAAA,WAAW,CAAC+rB,OAAZ,CAAqBqmB,UAArB;AAEA,KAJM,MAIA;AAENvG,MAAAA,MAAM,CAAC9f,OAAP,CAAgBqmB,UAAhB;AAEA;AAED;;AAED,WAASzU,IAAT,CAAe0U,gBAAf,EAAiCC,qBAAjC,EAAyD;AAExD,QAAKzG,MAAM,CAAChgE,MAAP,GAAgB,CAArB,EAAyBggE,MAAM,CAAClO,IAAP,CAAa0U,gBAAgB,IAAIT,iBAAjC;AACzB,QAAKM,YAAY,CAACrmE,MAAb,GAAsB,CAA3B,EAA+BqmE,YAAY,CAACvU,IAAb,CAAmB2U,qBAAqB,IAAIR,wBAA5C;AAC/B,QAAK9xC,WAAW,CAACn0B,MAAZ,GAAqB,CAA1B,EAA8Bm0B,WAAW,CAAC29B,IAAZ,CAAkB2U,qBAAqB,IAAIR,wBAA3C;AAE9B;;AAED,WAASS,MAAT,GAAkB;AAEjB;AAEA,SAAM,IAAI5mE,CAAC,GAAGsmE,gBAAR,EAA0B1uD,EAAE,GAAGyuD,WAAW,CAACnmE,MAAjD,EAAyDF,CAAC,GAAG4X,EAA7D,EAAiE5X,CAAC,EAAlE,EAAwE;AAEvE,UAAMymE,UAAU,GAAGJ,WAAW,CAAErmE,CAAF,CAA9B;AAEA,UAAKymE,UAAU,CAAC73C,EAAX,KAAkB,IAAvB,EAA8B;AAE9B63C,MAAAA,UAAU,CAAC73C,EAAX,GAAgB,IAAhB;AACA63C,MAAAA,UAAU,CAAC1mD,MAAX,GAAoB,IAApB;AACA0mD,MAAAA,UAAU,CAACjmD,QAAX,GAAsB,IAAtB;AACAimD,MAAAA,UAAU,CAAC31C,QAAX,GAAsB,IAAtB;AACA21C,MAAAA,UAAU,CAAC1mC,KAAX,GAAmB,IAAnB;AAEA;AAED;;AAED,SAAO;AAENmgC,IAAAA,MAAM,EAAEA,MAFF;AAGNqG,IAAAA,YAAY,EAAEA,YAHR;AAINlyC,IAAAA,WAAW,EAAEA,WAJP;AAMN4yB,IAAAA,IAAI,EAAEA,IANA;AAONznD,IAAAA,IAAI,EAAEA,IAPA;AAQN4gD,IAAAA,OAAO,EAAEA,OARH;AASNwmB,IAAAA,MAAM,EAAEA,MATF;AAWN5U,IAAAA,IAAI,EAAEA;AAXA,GAAP;AAcA;;AAED,SAAS6U,gBAAT,GAA4B;AAE3B,MAAIC,KAAK,GAAG,IAAI34B,OAAJ,EAAZ;;AAEA,WAASU,GAAT,CAAcrF,KAAd,EAAqBu9B,eAArB,EAAuC;AAEtC,QAAIC,IAAJ;;AAEA,QAAKF,KAAK,CAACzhB,GAAN,CAAW7b,KAAX,MAAuB,KAA5B,EAAoC;AAEnCw9B,MAAAA,IAAI,GAAG,IAAIZ,eAAJ,EAAP;AACAU,MAAAA,KAAK,CAAC9hE,GAAN,CAAWwkC,KAAX,EAAkB,CAAEw9B,IAAF,CAAlB;AAEA,KALD,MAKO;AAEN,UAAKD,eAAe,IAAID,KAAK,CAACj4B,GAAN,CAAWrF,KAAX,EAAmBtpC,MAA3C,EAAoD;AAEnD8mE,QAAAA,IAAI,GAAG,IAAIZ,eAAJ,EAAP;AACAU,QAAAA,KAAK,CAACj4B,GAAN,CAAWrF,KAAX,EAAmBhqC,IAAnB,CAAyBwnE,IAAzB;AAEA,OALD,MAKO;AAENA,QAAAA,IAAI,GAAGF,KAAK,CAACj4B,GAAN,CAAWrF,KAAX,EAAoBu9B,eAApB,CAAP;AAEA;AAED;;AAED,WAAOC,IAAP;AAEA;;AAED,WAASnwD,OAAT,GAAmB;AAElBiwD,IAAAA,KAAK,GAAG,IAAI34B,OAAJ,EAAR;AAEA;;AAED,SAAO;AACNU,IAAAA,GAAG,EAAEA,GADC;AAENh4B,IAAAA,OAAO,EAAEA;AAFH,GAAP;AAKA;;AAED,SAASowD,aAAT,GAAyB;AAExB,MAAMvgC,MAAM,GAAG,EAAf;AAEA,SAAO;AAENmI,IAAAA,GAAG,EAAE,aAAWq4B,KAAX,EAAmB;AAEvB,UAAKxgC,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAN,KAAuBvvB,SAA5B,EAAwC;AAEvC,eAAOqnC,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAb;AAEA;;AAED,UAAImX,QAAJ;;AAEA,cAASmhC,KAAK,CAAChoE,IAAf;AAEC,aAAK,kBAAL;AACC6mC,UAAAA,QAAQ,GAAG;AACVzhB,YAAAA,SAAS,EAAE,IAAIlI,OAAJ,EADD;AAEVhP,YAAAA,KAAK,EAAE,IAAIc,KAAJ;AAFG,WAAX;AAIA;;AAED,aAAK,WAAL;AACC63B,UAAAA,QAAQ,GAAG;AACVrlB,YAAAA,QAAQ,EAAE,IAAItE,OAAJ,EADA;AAEVkI,YAAAA,SAAS,EAAE,IAAIlI,OAAJ,EAFD;AAGVhP,YAAAA,KAAK,EAAE,IAAIc,KAAJ,EAHG;AAIVkgB,YAAAA,QAAQ,EAAE,CAJA;AAKV8tB,YAAAA,OAAO,EAAE,CALC;AAMVC,YAAAA,WAAW,EAAE,CANH;AAOVC,YAAAA,KAAK,EAAE;AAPG,WAAX;AASA;;AAED,aAAK,YAAL;AACCrW,UAAAA,QAAQ,GAAG;AACVrlB,YAAAA,QAAQ,EAAE,IAAItE,OAAJ,EADA;AAEVhP,YAAAA,KAAK,EAAE,IAAIc,KAAJ,EAFG;AAGVkgB,YAAAA,QAAQ,EAAE,CAHA;AAIVguB,YAAAA,KAAK,EAAE;AAJG,WAAX;AAMA;;AAED,aAAK,iBAAL;AACCrW,UAAAA,QAAQ,GAAG;AACVzhB,YAAAA,SAAS,EAAE,IAAIlI,OAAJ,EADD;AAEV2gC,YAAAA,QAAQ,EAAE,IAAI7uC,KAAJ,EAFA;AAGV8uC,YAAAA,WAAW,EAAE,IAAI9uC,KAAJ;AAHH,WAAX;AAKA;;AAED,aAAK,eAAL;AACC63B,UAAAA,QAAQ,GAAG;AACV34B,YAAAA,KAAK,EAAE,IAAIc,KAAJ,EADG;AAEVwS,YAAAA,QAAQ,EAAE,IAAItE,OAAJ,EAFA;AAGV+qD,YAAAA,SAAS,EAAE,IAAI/qD,OAAJ,EAHD;AAIVgrD,YAAAA,UAAU,EAAE,IAAIhrD,OAAJ;AAJF,WAAX;AAMA;AA7CF;;AAiDAsqB,MAAAA,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAN,GAAqBmX,QAArB;AAEA,aAAOA,QAAP;AAEA;AAjEK,GAAP;AAqEA;;AAED,SAASshC,mBAAT,GAA+B;AAE9B,MAAM3gC,MAAM,GAAG,EAAf;AAEA,SAAO;AAENmI,IAAAA,GAAG,EAAE,aAAWq4B,KAAX,EAAmB;AAEvB,UAAKxgC,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAN,KAAuBvvB,SAA5B,EAAwC;AAEvC,eAAOqnC,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAb;AAEA;;AAED,UAAImX,QAAJ;;AAEA,cAASmhC,KAAK,CAAChoE,IAAf;AAEC,aAAK,kBAAL;AACC6mC,UAAAA,QAAQ,GAAG;AACV4V,YAAAA,UAAU,EAAE,CADF;AAEVC,YAAAA,gBAAgB,EAAE,CAFR;AAGVC,YAAAA,YAAY,EAAE,CAHJ;AAIVC,YAAAA,aAAa,EAAE,IAAI51C,OAAJ;AAJL,WAAX;AAMA;;AAED,aAAK,WAAL;AACC6/B,UAAAA,QAAQ,GAAG;AACV4V,YAAAA,UAAU,EAAE,CADF;AAEVC,YAAAA,gBAAgB,EAAE,CAFR;AAGVC,YAAAA,YAAY,EAAE,CAHJ;AAIVC,YAAAA,aAAa,EAAE,IAAI51C,OAAJ;AAJL,WAAX;AAMA;;AAED,aAAK,YAAL;AACC6/B,UAAAA,QAAQ,GAAG;AACV4V,YAAAA,UAAU,EAAE,CADF;AAEVC,YAAAA,gBAAgB,EAAE,CAFR;AAGVC,YAAAA,YAAY,EAAE,CAHJ;AAIVC,YAAAA,aAAa,EAAE,IAAI51C,OAAJ,EAJL;AAKVw2C,YAAAA,gBAAgB,EAAE,CALR;AAMVC,YAAAA,eAAe,EAAE;AANP,WAAX;AAQA;AAED;AA/BD;;AAmCAjW,MAAAA,MAAM,CAAEwgC,KAAK,CAACt4C,EAAR,CAAN,GAAqBmX,QAArB;AAEA,aAAOA,QAAP;AAEA;AAnDK,GAAP;AAuDA;;AAID,IAAIuhC,WAAW,GAAG,CAAlB;;AAEA,SAASC,wBAAT,CAAmCC,MAAnC,EAA2CC,MAA3C,EAAoD;AAEnD,SAAO,CAAEA,MAAM,CAAC/5C,UAAP,GAAoB,CAApB,GAAwB,CAA1B,KAAkC85C,MAAM,CAAC95C,UAAP,GAAoB,CAApB,GAAwB,CAA1D,CAAP;AAEA;;AAED,SAASg6C,WAAT,CAAsB9gC,UAAtB,EAAkCoH,YAAlC,EAAiD;AAEhD,MAAM9c,KAAK,GAAG,IAAI+1C,aAAJ,EAAd;AAEA,MAAMU,WAAW,GAAGN,mBAAmB,EAAvC;AAEA,MAAMxoB,KAAK,GAAG;AAEbrtC,IAAAA,OAAO,EAAE,CAFI;AAIbo2D,IAAAA,IAAI,EAAE;AACLC,MAAAA,iBAAiB,EAAE,CAAE,CADhB;AAELC,MAAAA,WAAW,EAAE,CAAE,CAFV;AAGLC,MAAAA,UAAU,EAAE,CAAE,CAHT;AAILC,MAAAA,cAAc,EAAE,CAAE,CAJb;AAKLC,MAAAA,UAAU,EAAE,CAAE,CALT;AAOLC,MAAAA,qBAAqB,EAAE,CAAE,CAPpB;AAQLC,MAAAA,eAAe,EAAE,CAAE,CARd;AASLC,MAAAA,cAAc,EAAE,CAAE;AATb,KAJO;AAgBbC,IAAAA,OAAO,EAAE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAhBI;AAiBbC,IAAAA,KAAK,EAAE,EAjBM;AAkBbxD,IAAAA,WAAW,EAAE,EAlBA;AAmBbyD,IAAAA,iBAAiB,EAAE,EAnBN;AAoBbxsB,IAAAA,oBAAoB,EAAE,EApBT;AAqBbC,IAAAA,uBAAuB,EAAE,EArBZ;AAsBb+oB,IAAAA,IAAI,EAAE,EAtBO;AAuBbyD,IAAAA,UAAU,EAAE,EAvBC;AAwBblsB,IAAAA,aAAa,EAAE,EAxBF;AAyBbC,IAAAA,gBAAgB,EAAE,EAzBL;AA0BbyoB,IAAAA,QAAQ,EAAE,EA1BG;AA2BbyD,IAAAA,YAAY,EAAE,IA3BD;AA4BbC,IAAAA,YAAY,EAAE,IA5BD;AA6BbtoD,IAAAA,KAAK,EAAE,EA7BM;AA8BbuoD,IAAAA,WAAW,EAAE,EA9BA;AA+Bb/rB,IAAAA,cAAc,EAAE,EA/BH;AAgCbC,IAAAA,iBAAiB,EAAE,EAhCN;AAiCbooB,IAAAA,IAAI,EAAE;AAjCO,GAAd;;AAqCA,OAAM,IAAIjlE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB;AAA+B6+C,IAAAA,KAAK,CAACypB,KAAN,CAAY9oE,IAAZ,CAAkB,IAAI4c,OAAJ,EAAlB;AAA/B;;AAEA,MAAMwsD,OAAO,GAAG,IAAIxsD,OAAJ,EAAhB;AACA,MAAMlR,OAAO,GAAG,IAAI2b,OAAJ,EAAhB;AACA,MAAMgiD,QAAQ,GAAG,IAAIhiD,OAAJ,EAAjB;;AAEA,WAASs6B,KAAT,CAAgBza,MAAhB,EAAwBu5B,uBAAxB,EAAkD;AAEjD,QAAI30D,CAAC,GAAG,CAAR;AAAA,QAAWZ,CAAC,GAAG,CAAf;AAAA,QAAkBvG,CAAC,GAAG,CAAtB;;AAEA,SAAM,IAAInE,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB;AAA+B6+C,MAAAA,KAAK,CAACypB,KAAN,CAAatoE,IAAb,EAAiBgF,GAAjB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AAA/B;;AAEA,QAAI6iE,iBAAiB,GAAG,CAAxB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;AACA,QAAIC,UAAU,GAAG,CAAjB;AAEA,QAAIC,qBAAqB,GAAG,CAA5B;AACA,QAAIC,eAAe,GAAG,CAAtB;AACA,QAAIC,cAAc,GAAG,CAArB;AAEA1hC,IAAAA,MAAM,CAACsrB,IAAP,CAAauV,wBAAb,EAhBiD,CAkBjD;;AACA,QAAMuB,WAAW,GAAK7I,uBAAuB,KAAK,IAA9B,GAAuC1/D,IAAI,CAACC,EAA5C,GAAiD,CAArE;;AAEA,SAAM,IAAIR,IAAC,GAAG,CAAR,EAAWC,CAAC,GAAGymC,MAAM,CAACxmC,MAA5B,EAAoCF,IAAC,GAAGC,CAAxC,EAA2CD,IAAC,EAA5C,EAAkD;AAEjD,UAAMknE,KAAK,GAAGxgC,MAAM,CAAE1mC,IAAF,CAApB;AAEA,UAAMoN,KAAK,GAAG85D,KAAK,CAAC95D,KAApB;AACA,UAAM27D,SAAS,GAAG7B,KAAK,CAAC6B,SAAxB;AACA,UAAM36C,QAAQ,GAAG84C,KAAK,CAAC94C,QAAvB;AAEA,UAAM82C,SAAS,GAAKgC,KAAK,CAAC/oB,MAAN,IAAgB+oB,KAAK,CAAC/oB,MAAN,CAAapmB,GAA/B,GAAuCmvC,KAAK,CAAC/oB,MAAN,CAAapmB,GAAb,CAAiBvhB,OAAxD,GAAkE,IAApF;;AAEA,UAAK0wD,KAAK,CAAC8B,cAAX,EAA4B;AAE3B19D,QAAAA,CAAC,IAAI8B,KAAK,CAAC9B,CAAN,GAAUy9D,SAAV,GAAsBD,WAA3B;AACAp+D,QAAAA,CAAC,IAAI0C,KAAK,CAAC1C,CAAN,GAAUq+D,SAAV,GAAsBD,WAA3B;AACA3kE,QAAAA,CAAC,IAAIiJ,KAAK,CAACjJ,CAAN,GAAU4kE,SAAV,GAAsBD,WAA3B;AAEA,OAND,MAMO,IAAK5B,KAAK,CAAC+B,YAAX,EAA0B;AAEhC,aAAM,IAAIvmD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9Bm8B,UAAAA,KAAK,CAACypB,KAAN,CAAa5lD,CAAb,EAAiBsQ,eAAjB,CAAkCk0C,KAAK,CAACgC,EAAN,CAASC,YAAT,CAAuBzmD,CAAvB,CAAlC,EAA8DqmD,SAA9D;AAEA;AAED,OARM,MAQA,IAAK7B,KAAK,CAACkC,kBAAX,EAAgC;AAEtC,YAAMrjC,QAAQ,GAAG7U,KAAK,CAAC2d,GAAN,CAAWq4B,KAAX,CAAjB;AAEAnhC,QAAAA,QAAQ,CAAC34B,KAAT,CAAeiB,IAAf,CAAqB64D,KAAK,CAAC95D,KAA3B,EAAmC1G,cAAnC,CAAmDwgE,KAAK,CAAC6B,SAAN,GAAkBD,WAArE;;AAEA,YAAK5B,KAAK,CAACx5C,UAAX,EAAwB;AAEvB,cAAMywB,MAAM,GAAG+oB,KAAK,CAAC/oB,MAArB;AAEA,cAAMkrB,cAAc,GAAG1B,WAAW,CAAC94B,GAAZ,CAAiBq4B,KAAjB,CAAvB;AAEAmC,UAAAA,cAAc,CAAC1tB,UAAf,GAA4BwC,MAAM,CAACmrB,IAAnC;AACAD,UAAAA,cAAc,CAACztB,gBAAf,GAAkCuC,MAAM,CAACorB,UAAzC;AACAF,UAAAA,cAAc,CAACxtB,YAAf,GAA8BsC,MAAM,CAAC1/B,MAArC;AACA4qD,UAAAA,cAAc,CAACvtB,aAAf,GAA+BqC,MAAM,CAACqrB,OAAtC;AAEA3qB,UAAAA,KAAK,CAAC0pB,iBAAN,CAAyBV,iBAAzB,IAA+CwB,cAA/C;AACAxqB,UAAAA,KAAK,CAAC9C,oBAAN,CAA4B8rB,iBAA5B,IAAkD3C,SAAlD;AACArmB,UAAAA,KAAK,CAAC7C,uBAAN,CAA+B6rB,iBAA/B,IAAqDX,KAAK,CAAC/oB,MAAN,CAAapyC,MAAlE;AAEAm8D,UAAAA,qBAAqB;AAErB;;AAEDrpB,QAAAA,KAAK,CAACimB,WAAN,CAAmB+C,iBAAnB,IAAyC9hC,QAAzC;AAEA8hC,QAAAA,iBAAiB;AAEjB,OA7BM,MA6BA,IAAKX,KAAK,CAACuC,WAAX,EAAyB;AAE/B,YAAM1jC,SAAQ,GAAG7U,KAAK,CAAC2d,GAAN,CAAWq4B,KAAX,CAAjB;;AAEAnhC,QAAAA,SAAQ,CAACrlB,QAAT,CAAkB4N,qBAAlB,CAAyC44C,KAAK,CAAC1pD,WAA/C;;AAEAuoB,QAAAA,SAAQ,CAAC34B,KAAT,CAAeiB,IAAf,CAAqBjB,KAArB,EAA6B1G,cAA7B,CAA6CqiE,SAAS,GAAGD,WAAzD;;AACA/iC,QAAAA,SAAQ,CAAC3X,QAAT,GAAoBA,QAApB;AAEA2X,QAAAA,SAAQ,CAACmW,OAAT,GAAmB37C,IAAI,CAAC+D,GAAL,CAAU4iE,KAAK,CAACjgE,KAAhB,CAAnB;AACA8+B,QAAAA,SAAQ,CAACoW,WAAT,GAAuB57C,IAAI,CAAC+D,GAAL,CAAU4iE,KAAK,CAACjgE,KAAN,IAAgB,IAAIigE,KAAK,CAACwC,QAA1B,CAAV,CAAvB;AACA3jC,QAAAA,SAAQ,CAACqW,KAAT,GAAiB8qB,KAAK,CAAC9qB,KAAvB;;AAEA,YAAK8qB,KAAK,CAACx5C,UAAX,EAAwB;AAEvB,cAAMywB,OAAM,GAAG+oB,KAAK,CAAC/oB,MAArB;;AAEA,cAAMkrB,eAAc,GAAG1B,WAAW,CAAC94B,GAAZ,CAAiBq4B,KAAjB,CAAvB;;AAEAmC,UAAAA,eAAc,CAAC1tB,UAAf,GAA4BwC,OAAM,CAACmrB,IAAnC;AACAD,UAAAA,eAAc,CAACztB,gBAAf,GAAkCuC,OAAM,CAACorB,UAAzC;AACAF,UAAAA,eAAc,CAACxtB,YAAf,GAA8BsC,OAAM,CAAC1/B,MAArC;AACA4qD,UAAAA,eAAc,CAACvtB,aAAf,GAA+BqC,OAAM,CAACqrB,OAAtC;AAEA3qB,UAAAA,KAAK,CAAC2pB,UAAN,CAAkBT,UAAlB,IAAiCsB,eAAjC;AACAxqB,UAAAA,KAAK,CAACvC,aAAN,CAAqByrB,UAArB,IAAoC7C,SAApC;AACArmB,UAAAA,KAAK,CAACtC,gBAAN,CAAwBwrB,UAAxB,IAAuCb,KAAK,CAAC/oB,MAAN,CAAapyC,MAApD;AAEAq8D,UAAAA,cAAc;AAEd;;AAEDvpB,QAAAA,KAAK,CAACkmB,IAAN,CAAYgD,UAAZ,IAA2BhiC,SAA3B;AAEAgiC,QAAAA,UAAU;AAEV,OApCM,MAoCA,IAAKb,KAAK,CAACyC,eAAX,EAA6B;AAEnC,YAAM5jC,UAAQ,GAAG7U,KAAK,CAAC2d,GAAN,CAAWq4B,KAAX,CAAjB,CAFmC,CAInC;AACA;AAEA;;;AACAnhC,QAAAA,UAAQ,CAAC34B,KAAT,CAAeiB,IAAf,CAAqBjB,KAArB,EAA6B1G,cAA7B,CAA6CqiE,SAA7C;;AAEAhjC,QAAAA,UAAQ,CAACohC,SAAT,CAAmBniE,GAAnB,CAAwBkiE,KAAK,CAACz2D,KAAN,GAAc,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD;;AACAs1B,QAAAA,UAAQ,CAACqhC,UAAT,CAAoBpiE,GAApB,CAAyB,GAAzB,EAA8BkiE,KAAK,CAACx2D,MAAN,GAAe,GAA7C,EAAkD,GAAlD;;AAEAmuC,QAAAA,KAAK,CAACmmB,QAAN,CAAgBgD,cAAhB,IAAmCjiC,UAAnC;AAEAiiC,QAAAA,cAAc;AAEd,OAjBM,MAiBA,IAAKd,KAAK,CAAC0C,YAAX,EAA0B;AAEhC,YAAM7jC,UAAQ,GAAG7U,KAAK,CAAC2d,GAAN,CAAWq4B,KAAX,CAAjB;;AAEAnhC,QAAAA,UAAQ,CAAC34B,KAAT,CAAeiB,IAAf,CAAqB64D,KAAK,CAAC95D,KAA3B,EAAmC1G,cAAnC,CAAmDwgE,KAAK,CAAC6B,SAAN,GAAkBD,WAArE;;AACA/iC,QAAAA,UAAQ,CAAC3X,QAAT,GAAoB84C,KAAK,CAAC94C,QAA1B;AACA2X,QAAAA,UAAQ,CAACqW,KAAT,GAAiB8qB,KAAK,CAAC9qB,KAAvB;;AAEA,YAAK8qB,KAAK,CAACx5C,UAAX,EAAwB;AAEvB,cAAMywB,QAAM,GAAG+oB,KAAK,CAAC/oB,MAArB;;AAEA,cAAMkrB,gBAAc,GAAG1B,WAAW,CAAC94B,GAAZ,CAAiBq4B,KAAjB,CAAvB;;AAEAmC,UAAAA,gBAAc,CAAC1tB,UAAf,GAA4BwC,QAAM,CAACmrB,IAAnC;AACAD,UAAAA,gBAAc,CAACztB,gBAAf,GAAkCuC,QAAM,CAACorB,UAAzC;AACAF,UAAAA,gBAAc,CAACxtB,YAAf,GAA8BsC,QAAM,CAAC1/B,MAArC;AACA4qD,UAAAA,gBAAc,CAACvtB,aAAf,GAA+BqC,QAAM,CAACqrB,OAAtC;AACAH,UAAAA,gBAAc,CAAC3sB,gBAAf,GAAkCyB,QAAM,CAAChhC,MAAP,CAAc4N,IAAhD;AACAs+C,UAAAA,gBAAc,CAAC1sB,eAAf,GAAiCwB,QAAM,CAAChhC,MAAP,CAAc6N,GAA/C;AAEA6zB,UAAAA,KAAK,CAAC8pB,WAAN,CAAmBb,WAAnB,IAAmCuB,gBAAnC;AACAxqB,UAAAA,KAAK,CAACjC,cAAN,CAAsBkrB,WAAtB,IAAsC5C,SAAtC;AACArmB,UAAAA,KAAK,CAAChC,iBAAN,CAAyBirB,WAAzB,IAAyCZ,KAAK,CAAC/oB,MAAN,CAAapyC,MAAtD;AAEAo8D,UAAAA,eAAe;AAEf;;AAEDtpB,QAAAA,KAAK,CAACz+B,KAAN,CAAa0nD,WAAb,IAA6B/hC,UAA7B;AAEA+hC,QAAAA,WAAW;AAEX,OAjCM,MAiCA,IAAKZ,KAAK,CAAC2C,iBAAX,EAA+B;AAErC,YAAM9jC,UAAQ,GAAG7U,KAAK,CAAC2d,GAAN,CAAWq4B,KAAX,CAAjB;;AAEAnhC,QAAAA,UAAQ,CAACgX,QAAT,CAAkB1uC,IAAlB,CAAwB64D,KAAK,CAAC95D,KAA9B,EAAsC1G,cAAtC,CAAsDqiE,SAAS,GAAGD,WAAlE;;AACA/iC,QAAAA,UAAQ,CAACiX,WAAT,CAAqB3uC,IAArB,CAA2B64D,KAAK,CAAClqB,WAAjC,EAA+Ct2C,cAA/C,CAA+DqiE,SAAS,GAAGD,WAA3E;;AAEAjqB,QAAAA,KAAK,CAAComB,IAAN,CAAYgD,UAAZ,IAA2BliC,UAA3B;AAEAkiC,QAAAA,UAAU;AAEV;AAED;;AAED,QAAKD,cAAc,GAAG,CAAtB,EAA0B;AAEzB,UAAKh6B,YAAY,CAACC,QAAlB,EAA6B;AAE5B;AAEA4Q,QAAAA,KAAK,CAAC4pB,YAAN,GAAqBxuB,WAAW,CAAC6vB,WAAjC;AACAjrB,QAAAA,KAAK,CAAC6pB,YAAN,GAAqBzuB,WAAW,CAAC8vB,WAAjC;AAEA,OAPD,MAOO;AAEN;AAEA,YAAKnjC,UAAU,CAACye,GAAX,CAAgB,0BAAhB,MAAiD,IAAtD,EAA6D;AAE5DxG,UAAAA,KAAK,CAAC4pB,YAAN,GAAqBxuB,WAAW,CAAC6vB,WAAjC;AACAjrB,UAAAA,KAAK,CAAC6pB,YAAN,GAAqBzuB,WAAW,CAAC8vB,WAAjC;AAEA,SALD,MAKO,IAAKnjC,UAAU,CAACye,GAAX,CAAgB,+BAAhB,MAAsD,IAA3D,EAAkE;AAExExG,UAAAA,KAAK,CAAC4pB,YAAN,GAAqBxuB,WAAW,CAAC+vB,UAAjC;AACAnrB,UAAAA,KAAK,CAAC6pB,YAAN,GAAqBzuB,WAAW,CAACgwB,UAAjC;AAEA,SALM,MAKA;AAENhlE,UAAAA,OAAO,CAACkD,KAAR,CAAe,6EAAf;AAEA;AAED;AAED;;AAED02C,IAAAA,KAAK,CAACwpB,OAAN,CAAe,CAAf,IAAqB/8D,CAArB;AACAuzC,IAAAA,KAAK,CAACwpB,OAAN,CAAe,CAAf,IAAqB39D,CAArB;AACAm0C,IAAAA,KAAK,CAACwpB,OAAN,CAAe,CAAf,IAAqBlkE,CAArB;AAEA,QAAMyjE,IAAI,GAAG/oB,KAAK,CAAC+oB,IAAnB;;AAEA,QAAKA,IAAI,CAACC,iBAAL,KAA2BA,iBAA3B,IACJD,IAAI,CAACE,WAAL,KAAqBA,WADjB,IAEJF,IAAI,CAACG,UAAL,KAAoBA,UAFhB,IAGJH,IAAI,CAACI,cAAL,KAAwBA,cAHpB,IAIJJ,IAAI,CAACK,UAAL,KAAoBA,UAJhB,IAKJL,IAAI,CAACM,qBAAL,KAA+BA,qBAL3B,IAMJN,IAAI,CAACO,eAAL,KAAyBA,eANrB,IAOJP,IAAI,CAACQ,cAAL,KAAwBA,cAPzB,EAO0C;AAEzCvpB,MAAAA,KAAK,CAACimB,WAAN,CAAkB5kE,MAAlB,GAA2B2nE,iBAA3B;AACAhpB,MAAAA,KAAK,CAACkmB,IAAN,CAAW7kE,MAAX,GAAoB6nE,UAApB;AACAlpB,MAAAA,KAAK,CAACmmB,QAAN,CAAe9kE,MAAf,GAAwB8nE,cAAxB;AACAnpB,MAAAA,KAAK,CAACz+B,KAAN,CAAYlgB,MAAZ,GAAqB4nE,WAArB;AACAjpB,MAAAA,KAAK,CAAComB,IAAN,CAAW/kE,MAAX,GAAoB+nE,UAApB;AAEAppB,MAAAA,KAAK,CAAC0pB,iBAAN,CAAwBroE,MAAxB,GAAiCgoE,qBAAjC;AACArpB,MAAAA,KAAK,CAAC9C,oBAAN,CAA2B77C,MAA3B,GAAoCgoE,qBAApC;AACArpB,MAAAA,KAAK,CAAC8pB,WAAN,CAAkBzoE,MAAlB,GAA2BioE,eAA3B;AACAtpB,MAAAA,KAAK,CAACjC,cAAN,CAAqB18C,MAArB,GAA8BioE,eAA9B;AACAtpB,MAAAA,KAAK,CAAC2pB,UAAN,CAAiBtoE,MAAjB,GAA0BkoE,cAA1B;AACAvpB,MAAAA,KAAK,CAACvC,aAAN,CAAoBp8C,MAApB,GAA6BkoE,cAA7B;AACAvpB,MAAAA,KAAK,CAAC7C,uBAAN,CAA8B97C,MAA9B,GAAuCgoE,qBAAvC;AACArpB,MAAAA,KAAK,CAAChC,iBAAN,CAAwB38C,MAAxB,GAAiCioE,eAAjC;AACAtpB,MAAAA,KAAK,CAACtC,gBAAN,CAAuBr8C,MAAvB,GAAgCkoE,cAAhC;AAEAR,MAAAA,IAAI,CAACC,iBAAL,GAAyBA,iBAAzB;AACAD,MAAAA,IAAI,CAACE,WAAL,GAAmBA,WAAnB;AACAF,MAAAA,IAAI,CAACG,UAAL,GAAkBA,UAAlB;AACAH,MAAAA,IAAI,CAACI,cAAL,GAAsBA,cAAtB;AACAJ,MAAAA,IAAI,CAACK,UAAL,GAAkBA,UAAlB;AAEAL,MAAAA,IAAI,CAACM,qBAAL,GAA6BA,qBAA7B;AACAN,MAAAA,IAAI,CAACO,eAAL,GAAuBA,eAAvB;AACAP,MAAAA,IAAI,CAACQ,cAAL,GAAsBA,cAAtB;AAEAvpB,MAAAA,KAAK,CAACrtC,OAAN,GAAgB81D,WAAW,EAA3B;AAEA;AAED;;AAED,WAAS4C,SAAT,CAAoBxjC,MAApB,EAA4BvpB,MAA5B,EAAqC;AAEpC,QAAI0qD,iBAAiB,GAAG,CAAxB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;AACA,QAAIC,UAAU,GAAG,CAAjB;AAEA,QAAMhgB,UAAU,GAAG9qC,MAAM,CAACE,kBAA1B;;AAEA,SAAM,IAAIrd,IAAC,GAAG,CAAR,EAAWC,CAAC,GAAGymC,MAAM,CAACxmC,MAA5B,EAAoCF,IAAC,GAAGC,CAAxC,EAA2CD,IAAC,EAA5C,EAAkD;AAEjD,UAAMknE,KAAK,GAAGxgC,MAAM,CAAE1mC,IAAF,CAApB;;AAEA,UAAKknE,KAAK,CAACkC,kBAAX,EAAgC;AAE/B,YAAMrjC,QAAQ,GAAG8Y,KAAK,CAACimB,WAAN,CAAmB+C,iBAAnB,CAAjB;AAEA9hC,QAAAA,QAAQ,CAACzhB,SAAT,CAAmBgK,qBAAnB,CAA0C44C,KAAK,CAAC1pD,WAAhD;AACAorD,QAAAA,OAAO,CAACt6C,qBAAR,CAA+B44C,KAAK,CAACrnE,MAAN,CAAa2d,WAA5C;AACAuoB,QAAAA,QAAQ,CAACzhB,SAAT,CAAmBjG,GAAnB,CAAwBuqD,OAAxB;AACA7iC,QAAAA,QAAQ,CAACzhB,SAAT,CAAmBsC,kBAAnB,CAAuCqhC,UAAvC;AAEA4f,QAAAA,iBAAiB;AAEjB,OAXD,MAWO,IAAKX,KAAK,CAACuC,WAAX,EAAyB;AAE/B,YAAM1jC,UAAQ,GAAG8Y,KAAK,CAACkmB,IAAN,CAAYgD,UAAZ,CAAjB;;AAEAhiC,QAAAA,UAAQ,CAACrlB,QAAT,CAAkB4N,qBAAlB,CAAyC44C,KAAK,CAAC1pD,WAA/C;;AACAuoB,QAAAA,UAAQ,CAACrlB,QAAT,CAAkBtD,YAAlB,CAAgC6qC,UAAhC;;AAEAliB,QAAAA,UAAQ,CAACzhB,SAAT,CAAmBgK,qBAAnB,CAA0C44C,KAAK,CAAC1pD,WAAhD;;AACAorD,QAAAA,OAAO,CAACt6C,qBAAR,CAA+B44C,KAAK,CAACrnE,MAAN,CAAa2d,WAA5C;;AACAuoB,QAAAA,UAAQ,CAACzhB,SAAT,CAAmBjG,GAAnB,CAAwBuqD,OAAxB;;AACA7iC,QAAAA,UAAQ,CAACzhB,SAAT,CAAmBsC,kBAAnB,CAAuCqhC,UAAvC;;AAEA8f,QAAAA,UAAU;AAEV,OAdM,MAcA,IAAKb,KAAK,CAACyC,eAAX,EAA6B;AAEnC,YAAM5jC,UAAQ,GAAG8Y,KAAK,CAACmmB,QAAN,CAAgBgD,cAAhB,CAAjB;;AAEAjiC,QAAAA,UAAQ,CAACrlB,QAAT,CAAkB4N,qBAAlB,CAAyC44C,KAAK,CAAC1pD,WAA/C;;AACAuoB,QAAAA,UAAQ,CAACrlB,QAAT,CAAkBtD,YAAlB,CAAgC6qC,UAAhC,EALmC,CAOnC;;;AACA4gB,QAAAA,QAAQ,CAACsB,QAAT;AACAj/D,QAAAA,OAAO,CAACmD,IAAR,CAAc64D,KAAK,CAAC1pD,WAApB;AACAtS,QAAAA,OAAO,CAAC8iB,WAAR,CAAqBi6B,UAArB;AACA4gB,QAAAA,QAAQ,CAACn6C,eAAT,CAA0BxjB,OAA1B;;AAEA66B,QAAAA,UAAQ,CAACohC,SAAT,CAAmBniE,GAAnB,CAAwBkiE,KAAK,CAACz2D,KAAN,GAAc,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD;;AACAs1B,QAAAA,UAAQ,CAACqhC,UAAT,CAAoBpiE,GAApB,CAAyB,GAAzB,EAA8BkiE,KAAK,CAACx2D,MAAN,GAAe,GAA7C,EAAkD,GAAlD;;AAEAq1B,QAAAA,UAAQ,CAACohC,SAAT,CAAmB/pD,YAAnB,CAAiCyrD,QAAjC;;AACA9iC,QAAAA,UAAQ,CAACqhC,UAAT,CAAoBhqD,YAApB,CAAkCyrD,QAAlC;;AAEAb,QAAAA,cAAc;AAEd,OArBM,MAqBA,IAAKd,KAAK,CAAC0C,YAAX,EAA0B;AAEhC,YAAM7jC,UAAQ,GAAG8Y,KAAK,CAACz+B,KAAN,CAAa0nD,WAAb,CAAjB;;AAEA/hC,QAAAA,UAAQ,CAACrlB,QAAT,CAAkB4N,qBAAlB,CAAyC44C,KAAK,CAAC1pD,WAA/C;;AACAuoB,QAAAA,UAAQ,CAACrlB,QAAT,CAAkBtD,YAAlB,CAAgC6qC,UAAhC;;AAEA6f,QAAAA,WAAW;AAEX,OATM,MASA,IAAKZ,KAAK,CAAC2C,iBAAX,EAA+B;AAErC,YAAM9jC,UAAQ,GAAG8Y,KAAK,CAAComB,IAAN,CAAYgD,UAAZ,CAAjB;;AAEAliC,QAAAA,UAAQ,CAACzhB,SAAT,CAAmBgK,qBAAnB,CAA0C44C,KAAK,CAAC1pD,WAAhD;;AACAuoB,QAAAA,UAAQ,CAACzhB,SAAT,CAAmBsC,kBAAnB,CAAuCqhC,UAAvC;;AAEAggB,QAAAA,UAAU;AAEV;AAED;AAED;;AAED,SAAO;AACN9mB,IAAAA,KAAK,EAAEA,KADD;AAEN+oB,IAAAA,SAAS,EAAEA,SAFL;AAGNrrB,IAAAA,KAAK,EAAEA;AAHD,GAAP;AAMA;;AAED,SAASurB,gBAAT,CAA2BxjC,UAA3B,EAAuCoH,YAAvC,EAAsD;AAErD,MAAMtH,MAAM,GAAG,IAAIghC,WAAJ,CAAiB9gC,UAAjB,EAA6BoH,YAA7B,CAAf;AAEA,MAAMq8B,WAAW,GAAG,EAApB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,WAASrjB,IAAT,GAAgB;AAEfojB,IAAAA,WAAW,CAACnqE,MAAZ,GAAqB,CAArB;AACAoqE,IAAAA,YAAY,CAACpqE,MAAb,GAAsB,CAAtB;AAEA;;AAED,WAASqqE,SAAT,CAAoBrD,KAApB,EAA4B;AAE3BmD,IAAAA,WAAW,CAAC7qE,IAAZ,CAAkB0nE,KAAlB;AAEA;;AAED,WAASsD,UAAT,CAAqBC,WAArB,EAAmC;AAElCH,IAAAA,YAAY,CAAC9qE,IAAb,CAAmBirE,WAAnB;AAEA;;AAED,WAASC,WAAT,CAAsBzK,uBAAtB,EAAgD;AAE/Cv5B,IAAAA,MAAM,CAACya,KAAP,CAAckpB,WAAd,EAA2BpK,uBAA3B;AAEA;;AAED,WAAS0K,eAAT,CAA0BxtD,MAA1B,EAAmC;AAElCupB,IAAAA,MAAM,CAACwjC,SAAP,CAAkBG,WAAlB,EAA+BltD,MAA/B;AAEA;;AAED,MAAM0hC,KAAK,GAAG;AACbwrB,IAAAA,WAAW,EAAEA,WADA;AAEbC,IAAAA,YAAY,EAAEA,YAFD;AAIb5jC,IAAAA,MAAM,EAAEA;AAJK,GAAd;AAOA,SAAO;AACNugB,IAAAA,IAAI,EAAEA,IADA;AAENpI,IAAAA,KAAK,EAAEA,KAFD;AAGN6rB,IAAAA,WAAW,EAAEA,WAHP;AAINC,IAAAA,eAAe,EAAEA,eAJX;AAMNJ,IAAAA,SAAS,EAAEA,SANL;AAONC,IAAAA,UAAU,EAAEA;AAPN,GAAP;AAUA;;AAED,SAASI,iBAAT,CAA4BhkC,UAA5B,EAAwCoH,YAAxC,EAAuD;AAEtD,MAAI68B,YAAY,GAAG,IAAI18B,OAAJ,EAAnB;;AAEA,WAASU,GAAT,CAAcrF,KAAd,EAA2C;AAAA,QAAtBu9B,eAAsB,uEAAJ,CAAI;AAE1C,QAAI+D,WAAJ;;AAEA,QAAKD,YAAY,CAACxlB,GAAb,CAAkB7b,KAAlB,MAA8B,KAAnC,EAA2C;AAE1CshC,MAAAA,WAAW,GAAG,IAAIV,gBAAJ,CAAsBxjC,UAAtB,EAAkCoH,YAAlC,CAAd;AACA68B,MAAAA,YAAY,CAAC7lE,GAAb,CAAkBwkC,KAAlB,EAAyB,CAAEshC,WAAF,CAAzB;AAEA,KALD,MAKO;AAEN,UAAK/D,eAAe,IAAI8D,YAAY,CAACh8B,GAAb,CAAkBrF,KAAlB,EAA0BtpC,MAAlD,EAA2D;AAE1D4qE,QAAAA,WAAW,GAAG,IAAIV,gBAAJ,CAAsBxjC,UAAtB,EAAkCoH,YAAlC,CAAd;AACA68B,QAAAA,YAAY,CAACh8B,GAAb,CAAkBrF,KAAlB,EAA0BhqC,IAA1B,CAAgCsrE,WAAhC;AAEA,OALD,MAKO;AAENA,QAAAA,WAAW,GAAGD,YAAY,CAACh8B,GAAb,CAAkBrF,KAAlB,EAA2Bu9B,eAA3B,CAAd;AAEA;AAED;;AAED,WAAO+D,WAAP;AAEA;;AAED,WAASj0D,OAAT,GAAmB;AAElBg0D,IAAAA,YAAY,GAAG,IAAI18B,OAAJ,EAAf;AAEA;;AAED,SAAO;AACNU,IAAAA,GAAG,EAAEA,GADC;AAENh4B,IAAAA,OAAO,EAAEA;AAFH,GAAP;AAKA;;IAEKssD,iB;;;;;AAEL,6BAAa3yC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKu6C,mBAAL,GAA2B,IAA3B;AAEA,YAAK7rE,IAAL,GAAY,mBAAZ;AAEA,YAAKmhE,YAAL,GAAoBvjE,iBAApB;AAEA,YAAKi7B,GAAL,GAAW,IAAX;AAEA,YAAKE,QAAL,GAAgB,IAAhB;AAEA,YAAKU,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKwB,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;;AAEA,YAAKQ,SAAL,CAAgBtK,UAAhB;;AArByB;AAuBzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,kFAAYA,MAAZ;;AAEA,WAAKoyD,YAAL,GAAoBpyD,MAAM,CAACoyD,YAA3B;AAEA,WAAKtoC,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKE,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKU,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKwB,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AAEA,aAAO,IAAP;AAEA;;;;EA9C8BvG,Q;;IAkD1BqvC,oB;;;;;AAEL,gCAAa5yC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKw6C,sBAAL,GAA8B,IAA9B;AAEA,YAAK9rE,IAAL,GAAY,sBAAZ;AAEA,YAAK8+C,iBAAL,GAAyB,IAAI5hC,OAAJ,EAAzB;AACA,YAAK6hC,YAAL,GAAoB,CAApB;AACA,YAAKC,WAAL,GAAmB,IAAnB;AAEA,YAAKnmB,GAAL,GAAW,IAAX;AAEA,YAAKE,QAAL,GAAgB,IAAhB;AAEA,YAAKU,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;;AAEA,YAAKiC,SAAL,CAAgBtK,UAAhB;;AApByB;AAsBzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,qFAAYA,MAAZ;;AAEA,WAAK+vC,iBAAL,CAAuB3vC,IAAvB,CAA6BJ,MAAM,CAAC+vC,iBAApC;AACA,WAAKC,YAAL,GAAoBhwC,MAAM,CAACgwC,YAA3B;AACA,WAAKC,WAAL,GAAmBjwC,MAAM,CAACiwC,WAA1B;AAEA,WAAKnmB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKE,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKU,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,aAAO,IAAP;AAEA;;;;EA5CiC9E,Q;;AAgDnC,IAAMk3C,MAAM,GAAG,0DAAf;AAEA,IAAMC,QAAQ,GAAG,imCAAjB;;AAEA,SAASC,cAAT,CAAyB1hB,SAAzB,EAAoC2hB,QAApC,EAA8CC,aAA9C,EAA8D;AAE7D,MAAIC,QAAQ,GAAG,IAAI5/B,OAAJ,EAAf;;AAEA,MAAM6/B,cAAc,GAAG,IAAIrlE,OAAJ,EAAvB;AAAA,MACCslE,aAAa,GAAG,IAAItlE,OAAJ,EADjB;AAAA,MAGCulE,SAAS,GAAG,IAAI92D,OAAJ,EAHb;AAAA,MAKC+2D,cAAc,GAAG,IAAIvI,iBAAJ,CAAuB;AAAE9C,IAAAA,YAAY,EAAEtjE;AAAhB,GAAvB,CALlB;AAAA,MAMC4uE,iBAAiB,GAAG,IAAIvI,oBAAJ,EANrB;AAAA,MAQCwI,cAAc,GAAG,EARlB;AAAA,MAUCC,eAAe,GAAGR,aAAa,CAACtlB,cAVjC;;AAYA,MAAMrwB,UAAU,GAAG;AAAE,OAAG3gC,QAAL;AAAe,OAAGD,SAAlB;AAA6B,OAAGE;AAAhC,GAAnB;AAEA,MAAM82E,sBAAsB,GAAG,IAAIzlC,cAAJ,CAAoB;AAClDE,IAAAA,OAAO,EAAE;AACRwlC,MAAAA,WAAW,EAAE;AADL,KADyC;AAIlDhmC,IAAAA,QAAQ,EAAE;AACTimC,MAAAA,WAAW,EAAE;AAAE7qE,QAAAA,KAAK,EAAE;AAAT,OADJ;AAET8qE,MAAAA,UAAU,EAAE;AAAE9qE,QAAAA,KAAK,EAAE,IAAI+E,OAAJ;AAAT,OAFH;AAGTuY,MAAAA,MAAM,EAAE;AAAEtd,QAAAA,KAAK,EAAE;AAAT;AAHC,KAJwC;AAUlDqlC,IAAAA,YAAY,EAAEykC,MAVoC;AAWlDxkC,IAAAA,cAAc,EAAEykC;AAXkC,GAApB,CAA/B;AAeA,MAAMgB,wBAAwB,GAAGJ,sBAAsB,CAACh1D,KAAvB,EAAjC;AACAo1D,EAAAA,wBAAwB,CAAC3lC,OAAzB,CAAiC4lC,eAAjC,GAAmD,CAAnD;AAEA,MAAMC,aAAa,GAAG,IAAInvC,cAAJ,EAAtB;AACAmvC,EAAAA,aAAa,CAAChuC,YAAd,CACC,UADD,EAEC,IAAInD,eAAJ,CACC,IAAI51B,YAAJ,CAAkB,CAAE,CAAE,CAAJ,EAAO,CAAE,CAAT,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAAE,CAAtB,EAAyB,GAAzB,EAA8B,CAAE,CAAhC,EAAmC,CAAnC,EAAsC,GAAtC,CAAlB,CADD,EAEC,CAFD,CAFD;AAQA,MAAMgnE,cAAc,GAAG,IAAIrpC,IAAJ,CAAUopC,aAAV,EAAyBN,sBAAzB,CAAvB;AAEA,MAAMpnC,KAAK,GAAG,IAAd;AAEA,OAAK8D,OAAL,GAAe,KAAf;AAEA,OAAK8jC,UAAL,GAAkB,IAAlB;AACA,OAAKp4D,WAAL,GAAmB,KAAnB;AAEA,OAAKhV,IAAL,GAAYvK,YAAZ;;AAEA,OAAKq1C,MAAL,GAAc,UAAWtD,MAAX,EAAmB8C,KAAnB,EAA0BrsB,MAA1B,EAAmC;AAEhD,QAAKunB,KAAK,CAAC8D,OAAN,KAAkB,KAAvB,EAA+B;AAC/B,QAAK9D,KAAK,CAAC4nC,UAAN,KAAqB,KAArB,IAA8B5nC,KAAK,CAACxwB,WAAN,KAAsB,KAAzD,EAAiE;AAEjE,QAAKwyB,MAAM,CAACxmC,MAAP,KAAkB,CAAvB,EAA2B;;AAE3B,QAAMupC,mBAAmB,GAAGggB,SAAS,CAAC/f,eAAV,EAA5B;;AACA,QAAM6iC,cAAc,GAAG9iB,SAAS,CAAC+iB,iBAAV,EAAvB;;AACA,QAAMC,iBAAiB,GAAGhjB,SAAS,CAACijB,oBAAV,EAA1B;;AAEA,QAAMC,MAAM,GAAGljB,SAAS,CAAC5K,KAAzB,CAXgD,CAahD;;AACA8tB,IAAAA,MAAM,CAACC,WAAP,CAAoBz3E,UAApB;;AACAw3E,IAAAA,MAAM,CAACz+B,OAAP,CAAe9gC,KAAf,CAAqBuyC,QAArB,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC;;AACAgtB,IAAAA,MAAM,CAACz+B,OAAP,CAAe93B,KAAf,CAAqBy2D,OAArB,CAA8B,IAA9B;;AACAF,IAAAA,MAAM,CAACG,cAAP,CAAuB,KAAvB,EAjBgD,CAmBhD;;;AAEA,SAAM,IAAI9sE,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG8uB,MAAM,CAACxmC,MAA7B,EAAqCF,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnD,UAAMknE,KAAK,GAAGxgC,MAAM,CAAE1mC,CAAF,CAApB;AACA,UAAMm+C,MAAM,GAAG+oB,KAAK,CAAC/oB,MAArB;;AAEA,UAAKA,MAAM,KAAK9+C,SAAhB,EAA4B;AAE3B4F,QAAAA,OAAO,CAACC,IAAR,CAAc,uBAAd,EAAuCgiE,KAAvC,EAA8C,gBAA9C;AACA;AAEA;;AAED,UAAK/oB,MAAM,CAACmuB,UAAP,KAAsB,KAAtB,IAA+BnuB,MAAM,CAACjqC,WAAP,KAAuB,KAA3D,EAAmE;;AAEnEq3D,MAAAA,cAAc,CAACl9D,IAAf,CAAqB8vC,MAAM,CAACqrB,OAA5B;;AAEA,UAAMuD,kBAAkB,GAAG5uB,MAAM,CAAC6uB,eAAP,EAA3B;;AAEAzB,MAAAA,cAAc,CAACr9C,QAAf,CAAyB6+C,kBAAzB;;AAEAvB,MAAAA,aAAa,CAACn9D,IAAd,CAAoB8vC,MAAM,CAACqrB,OAA3B;;AAEA,UAAK+B,cAAc,CAAC7pE,CAAf,GAAmBmqE,eAAnB,IAAsCN,cAAc,CAACvpE,CAAf,GAAmB6pE,eAA9D,EAAgF;AAE/E,YAAKN,cAAc,CAAC7pE,CAAf,GAAmBmqE,eAAxB,EAA0C;AAEzCL,UAAAA,aAAa,CAAC9pE,CAAd,GAAkBnB,IAAI,CAACuC,KAAL,CAAY+oE,eAAe,GAAGkB,kBAAkB,CAACrrE,CAAjD,CAAlB;AACA6pE,UAAAA,cAAc,CAAC7pE,CAAf,GAAmB8pE,aAAa,CAAC9pE,CAAd,GAAkBqrE,kBAAkB,CAACrrE,CAAxD;AACAy8C,UAAAA,MAAM,CAACqrB,OAAP,CAAe9nE,CAAf,GAAmB8pE,aAAa,CAAC9pE,CAAjC;AAEA;;AAED,YAAK6pE,cAAc,CAACvpE,CAAf,GAAmB6pE,eAAxB,EAA0C;AAEzCL,UAAAA,aAAa,CAACxpE,CAAd,GAAkBzB,IAAI,CAACuC,KAAL,CAAY+oE,eAAe,GAAGkB,kBAAkB,CAAC/qE,CAAjD,CAAlB;AACAupE,UAAAA,cAAc,CAACvpE,CAAf,GAAmBwpE,aAAa,CAACxpE,CAAd,GAAkB+qE,kBAAkB,CAAC/qE,CAAxD;AACAm8C,UAAAA,MAAM,CAACqrB,OAAP,CAAexnE,CAAf,GAAmBwpE,aAAa,CAACxpE,CAAjC;AAEA;AAED;;AAED,UAAKm8C,MAAM,CAACpmB,GAAP,KAAe,IAApB,EAA2B;AAE1B,YAAMk1C,IAAI,GAAK,KAAK/tE,IAAL,KAAcrK,YAAhB,GAAiC;AAAE+d,UAAAA,SAAS,EAAEza,aAAb;AAA4Bwa,UAAAA,SAAS,EAAExa;AAAvC,SAAjC,GAA0F,EAAvG;AAEAgmD,QAAAA,MAAM,CAACpmB,GAAP,GAAa,IAAI9hB,iBAAJ,CAAuBs1D,cAAc,CAAC7pE,CAAtC,EAAyC6pE,cAAc,CAACvpE,CAAxD,EAA2DirE,IAA3D,CAAb;AACA9uB,QAAAA,MAAM,CAACpmB,GAAP,CAAWvhB,OAAX,CAAmB9J,IAAnB,GAA0Bw6D,KAAK,CAACx6D,IAAN,GAAa,YAAvC;AAEAyxC,QAAAA,MAAM,CAAChhC,MAAP,CAAc6qB,sBAAd;AAEA;;AAEDyhB,MAAAA,SAAS,CAAC1f,eAAV,CAA2BoU,MAAM,CAACpmB,GAAlC;;AACA0xB,MAAAA,SAAS,CAAChf,KAAV;;AAEA,UAAMyiC,aAAa,GAAG/uB,MAAM,CAACgvB,gBAAP,EAAtB;;AAEA,WAAM,IAAIC,EAAE,GAAG,CAAf,EAAkBA,EAAE,GAAGF,aAAvB,EAAsCE,EAAE,EAAxC,EAA8C;AAE7C,YAAM72D,QAAQ,GAAG4nC,MAAM,CAACkvB,WAAP,CAAoBD,EAApB,CAAjB;;AAEA3B,QAAAA,SAAS,CAACzmE,GAAV,CACCwmE,aAAa,CAAC9pE,CAAd,GAAkB6U,QAAQ,CAAC7U,CAD5B,EAEC8pE,aAAa,CAACxpE,CAAd,GAAkBuU,QAAQ,CAACvU,CAF5B,EAGCwpE,aAAa,CAAC9pE,CAAd,GAAkB6U,QAAQ,CAAC3B,CAH5B,EAIC42D,aAAa,CAACxpE,CAAd,GAAkBuU,QAAQ,CAAChQ,CAJ5B;;AAOAomE,QAAAA,MAAM,CAACp2D,QAAP,CAAiBk1D,SAAjB;;AAEAttB,QAAAA,MAAM,CAACmvB,cAAP,CAAuBpG,KAAvB,EAA8BkG,EAA9B;AAEA9B,QAAAA,QAAQ,GAAGntB,MAAM,CAACovB,UAAP,EAAX;AAEAC,QAAAA,YAAY,CAAEhkC,KAAF,EAASrsB,MAAT,EAAiBghC,MAAM,CAAChhC,MAAxB,EAAgC+pD,KAAhC,EAAuC,KAAKhoE,IAA5C,CAAZ;AAEA,OA7EkD,CA+EnD;;;AAEA,UAAKi/C,MAAM,CAACsvB,kBAAP,KAA8B,IAA9B,IAAsC,KAAKvuE,IAAL,KAAcrK,YAAzD,EAAwE;AAEvE64E,QAAAA,OAAO,CAAEvvB,MAAF,EAAUhhC,MAAV,CAAP;AAEA;;AAEDghC,MAAAA,MAAM,CAACjqC,WAAP,GAAqB,KAArB;AAEA;;AAEDwwB,IAAAA,KAAK,CAACxwB,WAAN,GAAoB,KAApB;;AAEAu1C,IAAAA,SAAS,CAAC1f,eAAV,CAA2BN,mBAA3B,EAAgD8iC,cAAhD,EAAgEE,iBAAhE;AAEA,GApHD;;AAsHA,WAASiB,OAAT,CAAkBvvB,MAAlB,EAA0BhhC,MAA1B,EAAmC;AAElC,QAAMqD,QAAQ,GAAG4qD,QAAQ,CAAC9yD,MAAT,CAAiB+zD,cAAjB,CAAjB;;AAEA,QAAKP,sBAAsB,CAACvlC,OAAvB,CAA+BwlC,WAA/B,KAA+C5tB,MAAM,CAACwvB,WAA3D,EAAyE;AAExE7B,MAAAA,sBAAsB,CAACvlC,OAAvB,CAA+BwlC,WAA/B,GAA6C5tB,MAAM,CAACwvB,WAApD;AACAzB,MAAAA,wBAAwB,CAAC3lC,OAAzB,CAAiCwlC,WAAjC,GAA+C5tB,MAAM,CAACwvB,WAAtD;AAEA7B,MAAAA,sBAAsB,CAAC53D,WAAvB,GAAqC,IAArC;AACAg4D,MAAAA,wBAAwB,CAACh4D,WAAzB,GAAuC,IAAvC;AAEA;;AAED,QAAKiqC,MAAM,CAACyvB,OAAP,KAAmB,IAAxB,EAA+B;AAE9BzvB,MAAAA,MAAM,CAACyvB,OAAP,GAAiB,IAAI33D,iBAAJ,CAAuBs1D,cAAc,CAAC7pE,CAAtC,EAAyC6pE,cAAc,CAACvpE,CAAxD,CAAjB;AAEA,KAlBiC,CAoBlC;;;AAEA8pE,IAAAA,sBAAsB,CAAC/lC,QAAvB,CAAgCimC,WAAhC,CAA4C7qE,KAA5C,GAAoDg9C,MAAM,CAACpmB,GAAP,CAAWvhB,OAA/D;AACAs1D,IAAAA,sBAAsB,CAAC/lC,QAAvB,CAAgCkmC,UAAhC,CAA2C9qE,KAA3C,GAAmDg9C,MAAM,CAACqrB,OAA1D;AACAsC,IAAAA,sBAAsB,CAAC/lC,QAAvB,CAAgCtnB,MAAhC,CAAuCtd,KAAvC,GAA+Cg9C,MAAM,CAAC1/B,MAAtD;;AACAgrC,IAAAA,SAAS,CAAC1f,eAAV,CAA2BoU,MAAM,CAACyvB,OAAlC;;AACAnkB,IAAAA,SAAS,CAAChf,KAAV;;AACAgf,IAAAA,SAAS,CAACokB,kBAAV,CAA8B1wD,MAA9B,EAAsC,IAAtC,EAA4CqD,QAA5C,EAAsDsrD,sBAAtD,EAA8EO,cAA9E,EAA8F,IAA9F,EA3BkC,CA6BlC;;;AAEAH,IAAAA,wBAAwB,CAACnmC,QAAzB,CAAkCimC,WAAlC,CAA8C7qE,KAA9C,GAAsDg9C,MAAM,CAACyvB,OAAP,CAAep3D,OAArE;AACA01D,IAAAA,wBAAwB,CAACnmC,QAAzB,CAAkCkmC,UAAlC,CAA6C9qE,KAA7C,GAAqDg9C,MAAM,CAACqrB,OAA5D;AACA0C,IAAAA,wBAAwB,CAACnmC,QAAzB,CAAkCtnB,MAAlC,CAAyCtd,KAAzC,GAAiDg9C,MAAM,CAAC1/B,MAAxD;;AACAgrC,IAAAA,SAAS,CAAC1f,eAAV,CAA2BoU,MAAM,CAACpmB,GAAlC;;AACA0xB,IAAAA,SAAS,CAAChf,KAAV;;AACAgf,IAAAA,SAAS,CAACokB,kBAAV,CAA8B1wD,MAA9B,EAAsC,IAAtC,EAA4CqD,QAA5C,EAAsD0rD,wBAAtD,EAAgFG,cAAhF,EAAgG,IAAhG;AAEA;;AAED,WAASyB,gBAAT,CAA2B/tD,MAA3B,EAAmC+Q,QAAnC,EAA6Co2C,KAA7C,EAAoDxqB,gBAApD,EAAsEC,eAAtE,EAAuFz9C,IAAvF,EAA8F;AAE7F,QAAI6uE,MAAM,GAAG,IAAb;AAEA,QAAMC,cAAc,GAAK9G,KAAK,CAAC0C,YAAN,KAAuB,IAAzB,GAAkC7pD,MAAM,CAACkuD,sBAAzC,GAAkEluD,MAAM,CAACmuD,mBAAhG;;AAEA,QAAKF,cAAc,KAAK3uE,SAAxB,EAAoC;AAEnC0uE,MAAAA,MAAM,GAAGC,cAAT;AAEA,KAJD,MAIO;AAEND,MAAAA,MAAM,GAAK7G,KAAK,CAAC0C,YAAN,KAAuB,IAAzB,GAAkC+B,iBAAlC,GAAsDD,cAA/D;AAEA;;AAED,QAAOjiB,SAAS,CAAC7C,oBAAV,IAAkC91B,QAAQ,CAAC2E,WAAT,KAAyB,IAA3D,IAAmE3jB,KAAK,CAACC,OAAN,CAAe+e,QAAQ,CAACyE,cAAxB,CAAnE,IAA+GzE,QAAQ,CAACyE,cAAT,CAAwBr1B,MAAxB,KAAmC,CAApJ,IACF4wB,QAAQ,CAAC6H,eAAT,IAA4B7H,QAAQ,CAAC8H,iBAAT,KAA+B,CADzD,IAEF9H,QAAQ,CAACmH,QAAT,IAAqBnH,QAAQ,CAACsJ,SAAT,GAAqB,CAF7C,EAEmD;AAElD;AACA;AAEA,UAAM+zC,IAAI,GAAGJ,MAAM,CAAC/sE,IAApB;AAAA,UAA0BotE,IAAI,GAAGt9C,QAAQ,CAAC9vB,IAA1C;AAEA,UAAIqtE,mBAAmB,GAAGzC,cAAc,CAAEuC,IAAF,CAAxC;;AAEA,UAAKE,mBAAmB,KAAKhvE,SAA7B,EAAyC;AAExCgvE,QAAAA,mBAAmB,GAAG,EAAtB;AACAzC,QAAAA,cAAc,CAAEuC,IAAF,CAAd,GAAyBE,mBAAzB;AAEA;;AAED,UAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAF,CAAxC;;AAEA,UAAKE,cAAc,KAAKjvE,SAAxB,EAAoC;AAEnCivE,QAAAA,cAAc,GAAGP,MAAM,CAACj3D,KAAP,EAAjB;AACAu3D,QAAAA,mBAAmB,CAAED,IAAF,CAAnB,GAA8BE,cAA9B;AAEA;;AAEDP,MAAAA,MAAM,GAAGO,cAAT;AAEA;;AAEDP,IAAAA,MAAM,CAACtgD,OAAP,GAAiBqD,QAAQ,CAACrD,OAA1B;AACAsgD,IAAAA,MAAM,CAAC1zC,SAAP,GAAmBvJ,QAAQ,CAACuJ,SAA5B;;AAEA,QAAKn7B,IAAI,KAAKrK,YAAd,EAA6B;AAE5Bk5E,MAAAA,MAAM,CAAC75C,IAAP,GAAgBpD,QAAQ,CAAC4E,UAAT,KAAwB,IAA1B,GAAmC5E,QAAQ,CAAC4E,UAA5C,GAAyD5E,QAAQ,CAACoD,IAAhF;AAEA,KAJD,MAIO;AAEN65C,MAAAA,MAAM,CAAC75C,IAAP,GAAgBpD,QAAQ,CAAC4E,UAAT,KAAwB,IAA1B,GAAmC5E,QAAQ,CAAC4E,UAA5C,GAAyDA,UAAU,CAAE5E,QAAQ,CAACoD,IAAX,CAAjF;AAEA;;AAED65C,IAAAA,MAAM,CAAC91C,QAAP,GAAkBnH,QAAQ,CAACmH,QAA3B;AACA81C,IAAAA,MAAM,CAAC3zC,SAAP,GAAmBtJ,QAAQ,CAACsJ,SAA5B;AAEA2zC,IAAAA,MAAM,CAACt4C,WAAP,GAAqB3E,QAAQ,CAAC2E,WAA9B;AACAs4C,IAAAA,MAAM,CAACx4C,cAAP,GAAwBzE,QAAQ,CAACyE,cAAjC;AACAw4C,IAAAA,MAAM,CAACv4C,gBAAP,GAA0B1E,QAAQ,CAAC0E,gBAAnC;AAEAu4C,IAAAA,MAAM,CAACp1C,eAAP,GAAyB7H,QAAQ,CAAC6H,eAAlC;AACAo1C,IAAAA,MAAM,CAACn1C,iBAAP,GAA2B9H,QAAQ,CAAC8H,iBAApC;AACAm1C,IAAAA,MAAM,CAACl1C,gBAAP,GAA0B/H,QAAQ,CAAC+H,gBAAnC;AAEAk1C,IAAAA,MAAM,CAACzzC,kBAAP,GAA4BxJ,QAAQ,CAACwJ,kBAArC;AACAyzC,IAAAA,MAAM,CAAC9zC,SAAP,GAAmBnJ,QAAQ,CAACmJ,SAA5B;;AAEA,QAAKitC,KAAK,CAAC0C,YAAN,KAAuB,IAAvB,IAA+BmE,MAAM,CAAC/C,sBAAP,KAAkC,IAAtE,EAA6E;AAE5E+C,MAAAA,MAAM,CAAC/vB,iBAAP,CAAyB1vB,qBAAzB,CAAgD44C,KAAK,CAAC1pD,WAAtD;AACAuwD,MAAAA,MAAM,CAAC9vB,YAAP,GAAsBvB,gBAAtB;AACAqxB,MAAAA,MAAM,CAAC7vB,WAAP,GAAqBvB,eAArB;AAEA;;AAED,WAAOoxB,MAAP;AAEA;;AAED,WAASP,YAAT,CAAuBztD,MAAvB,EAA+B5C,MAA/B,EAAuCoxD,YAAvC,EAAqDrH,KAArD,EAA4DhoE,IAA5D,EAAmE;AAElE,QAAK6gB,MAAM,CAAC0N,OAAP,KAAmB,KAAxB,EAAgC;AAEhC,QAAMA,OAAO,GAAG1N,MAAM,CAAC8L,MAAP,CAAcxb,IAAd,CAAoB8M,MAAM,CAAC0O,MAA3B,CAAhB;;AAEA,QAAK4B,OAAO,KAAM1N,MAAM,CAACsQ,MAAP,IAAiBtQ,MAAM,CAACuQ,MAAxB,IAAkCvQ,MAAM,CAACwQ,QAA/C,CAAZ,EAAwE;AAEvE,UAAK,CAAExQ,MAAM,CAAC2N,UAAP,IAAuB3N,MAAM,CAAC4N,aAAP,IAAwBzuB,IAAI,KAAKrK,YAA1D,MAAgF,CAAEkrB,MAAM,CAAC6N,aAAT,IAA0B09C,QAAQ,CAACkD,gBAAT,CAA2BzuD,MAA3B,CAA1G,CAAL,EAAuJ;AAEtJA,QAAAA,MAAM,CAACsN,eAAP,CAAuBlkB,gBAAvB,CAAyColE,YAAY,CAAClxD,kBAAtD,EAA0E0C,MAAM,CAACvC,WAAjF;;AAEA,YAAMgD,QAAQ,GAAG4qD,QAAQ,CAAC9yD,MAAT,CAAiByH,MAAjB,CAAjB;;AACA,YAAM+Q,QAAQ,GAAG/Q,MAAM,CAAC+Q,QAAxB;;AAEA,YAAKhf,KAAK,CAACC,OAAN,CAAe+e,QAAf,CAAL,EAAiC;AAEhC,cAAMuM,MAAM,GAAG7c,QAAQ,CAAC6c,MAAxB;;AAEA,eAAM,IAAIoxC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGrxC,MAAM,CAACn9B,MAA7B,EAAqCuuE,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EAAoD;AAEnD,gBAAM1uC,KAAK,GAAG1C,MAAM,CAAEoxC,CAAF,CAApB;AACA,gBAAM9qC,aAAa,GAAG7S,QAAQ,CAAEiP,KAAK,CAACtC,aAAR,CAA9B;;AAEA,gBAAKkG,aAAa,IAAIA,aAAa,CAAClW,OAApC,EAA8C;AAE7C,kBAAMkhD,aAAa,GAAGb,gBAAgB,CAAE/tD,MAAF,EAAU4jB,aAAV,EAAyBujC,KAAzB,EAAgCqH,YAAY,CAACxjD,IAA7C,EAAmDwjD,YAAY,CAACvjD,GAAhE,EAAqE9rB,IAArE,CAAtC;;AAEAuqD,cAAAA,SAAS,CAACokB,kBAAV,CAA8BU,YAA9B,EAA4C,IAA5C,EAAkD/tD,QAAlD,EAA4DmuD,aAA5D,EAA2E5uD,MAA3E,EAAmFggB,KAAnF;AAEA;AAED;AAED,SAnBD,MAmBO,IAAKjP,QAAQ,CAACrD,OAAd,EAAwB;AAE9B,cAAMkhD,eAAa,GAAGb,gBAAgB,CAAE/tD,MAAF,EAAU+Q,QAAV,EAAoBo2C,KAApB,EAA2BqH,YAAY,CAACxjD,IAAxC,EAA8CwjD,YAAY,CAACvjD,GAA3D,EAAgE9rB,IAAhE,CAAtC;;AAEAuqD,UAAAA,SAAS,CAACokB,kBAAV,CAA8BU,YAA9B,EAA4C,IAA5C,EAAkD/tD,QAAlD,EAA4DmuD,eAA5D,EAA2E5uD,MAA3E,EAAmF,IAAnF;AAEA;AAED;AAED;;AAED,QAAMiB,QAAQ,GAAGjB,MAAM,CAACiB,QAAxB;;AAEA,SAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDwtE,MAAAA,YAAY,CAAExsD,QAAQ,CAAEhhB,CAAF,CAAV,EAAiBmd,MAAjB,EAAyBoxD,YAAzB,EAAuCrH,KAAvC,EAA8ChoE,IAA9C,CAAZ;AAEA;AAED;AAED;;AAED,SAAS0vE,UAAT,CAAqB7gC,EAArB,EAAyBnH,UAAzB,EAAqCoH,YAArC,EAAoD;AAAA;;AAEnD,MAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;;AAEA,WAAS4gC,WAAT,GAAuB;AAEtB,QAAIC,MAAM,GAAG,KAAb;AAEA,QAAM1hE,KAAK,GAAG,IAAIuH,OAAJ,EAAd;AACA,QAAIo6D,gBAAgB,GAAG,IAAvB;AACA,QAAMC,iBAAiB,GAAG,IAAIr6D,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAA1B;AAEA,WAAO;AAENs6D,MAAAA,OAAO,EAAE,iBAAWC,SAAX,EAAuB;AAE/B,YAAKH,gBAAgB,KAAKG,SAArB,IAAkC,CAAEJ,MAAzC,EAAkD;AAEjD/gC,UAAAA,EAAE,CAACmhC,SAAH,CAAcA,SAAd,EAAyBA,SAAzB,EAAoCA,SAApC,EAA+CA,SAA/C;AACAH,UAAAA,gBAAgB,GAAGG,SAAnB;AAEA;AAED,OAXK;AAaNC,MAAAA,SAAS,EAAE,mBAAWC,IAAX,EAAkB;AAE5BN,QAAAA,MAAM,GAAGM,IAAT;AAEA,OAjBK;AAmBNzvB,MAAAA,QAAQ,EAAE,kBAAWr0C,CAAX,EAAcZ,CAAd,EAAiBvG,CAAjB,EAAoBD,CAApB,EAAuBgyB,kBAAvB,EAA4C;AAErD,YAAKA,kBAAkB,KAAK,IAA5B,EAAmC;AAElC5qB,UAAAA,CAAC,IAAIpH,CAAL;AAAQwG,UAAAA,CAAC,IAAIxG,CAAL;AAAQC,UAAAA,CAAC,IAAID,CAAL;AAEhB;;AAEDkJ,QAAAA,KAAK,CAACpI,GAAN,CAAWsG,CAAX,EAAcZ,CAAd,EAAiBvG,CAAjB,EAAoBD,CAApB;;AAEA,YAAK8qE,iBAAiB,CAAC1sD,MAAlB,CAA0BlV,KAA1B,MAAsC,KAA3C,EAAmD;AAElD2gC,UAAAA,EAAE,CAACgR,UAAH,CAAezzC,CAAf,EAAkBZ,CAAlB,EAAqBvG,CAArB,EAAwBD,CAAxB;AACA8qE,UAAAA,iBAAiB,CAAC3gE,IAAlB,CAAwBjB,KAAxB;AAEA;AAED,OApCK;AAsCNg3C,MAAAA,KAAK,EAAE,iBAAY;AAElB0qB,QAAAA,MAAM,GAAG,KAAT;AAEAC,QAAAA,gBAAgB,GAAG,IAAnB;AACAC,QAAAA,iBAAiB,CAAChqE,GAAlB,CAAuB,CAAE,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EALkB,CAKqB;AAEvC;AA7CK,KAAP;AAiDA;;AAED,WAASqqE,WAAT,GAAuB;AAEtB,QAAIP,MAAM,GAAG,KAAb;AAEA,QAAIQ,gBAAgB,GAAG,IAAvB;AACA,QAAIC,gBAAgB,GAAG,IAAvB;AACA,QAAIC,iBAAiB,GAAG,IAAxB;AAEA,WAAO;AAEN3C,MAAAA,OAAO,EAAE,iBAAWh4C,SAAX,EAAuB;AAE/B,YAAKA,SAAL,EAAiB;AAEhB4wC,UAAAA,MAAM,CAAE,IAAF,CAAN;AAEA,SAJD,MAIO;AAENgK,UAAAA,OAAO,CAAE,IAAF,CAAP;AAEA;AAED,OAdK;AAgBNR,MAAAA,OAAO,EAAE,iBAAWS,SAAX,EAAuB;AAE/B,YAAKJ,gBAAgB,KAAKI,SAArB,IAAkC,CAAEZ,MAAzC,EAAkD;AAEjD/gC,UAAAA,EAAE,CAAC2hC,SAAH,CAAcA,SAAd;AACAJ,UAAAA,gBAAgB,GAAGI,SAAnB;AAEA;AAED,OAzBK;AA2BNC,MAAAA,OAAO,EAAE,iBAAW/6C,SAAX,EAAuB;AAE/B,YAAK26C,gBAAgB,KAAK36C,SAA1B,EAAsC;AAErC,cAAKA,SAAL,EAAiB;AAEhB,oBAASA,SAAT;AAEC,mBAAKn+B,UAAL;AAECs3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAKl+B,WAAL;AAECq3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAKj+B,SAAL;AAECo3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAKh+B,cAAL;AAECm3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAK/9B,UAAL;AAECk3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAK99B,iBAAL;AAECi3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAK79B,YAAL;AAECg3C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED,mBAAK59B,aAAL;AAEC+2C,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACA;;AAED;AAECmZ,gBAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AA5CF;AAgDA,WAlDD,MAkDO;AAENmZ,YAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AAEA;;AAED26C,UAAAA,gBAAgB,GAAG36C,SAAnB;AAEA;AAED,OA3FK;AA6FNu6C,MAAAA,SAAS,EAAE,mBAAWC,IAAX,EAAkB;AAE5BN,QAAAA,MAAM,GAAGM,IAAT;AAEA,OAjGK;AAmGNzvB,MAAAA,QAAQ,EAAE,kBAAWvpC,KAAX,EAAmB;AAE5B,YAAKo5D,iBAAiB,KAAKp5D,KAA3B,EAAmC;AAElC23B,UAAAA,EAAE,CAAC6hC,UAAH,CAAex5D,KAAf;AACAo5D,UAAAA,iBAAiB,GAAGp5D,KAApB;AAEA;AAED,OA5GK;AA8GNguC,MAAAA,KAAK,EAAE,iBAAY;AAElB0qB,QAAAA,MAAM,GAAG,KAAT;AAEAQ,QAAAA,gBAAgB,GAAG,IAAnB;AACAC,QAAAA,gBAAgB,GAAG,IAAnB;AACAC,QAAAA,iBAAiB,GAAG,IAApB;AAEA;AAtHK,KAAP;AA0HA;;AAED,WAASK,aAAT,GAAyB;AAExB,QAAIf,MAAM,GAAG,KAAb;AAEA,QAAIgB,kBAAkB,GAAG,IAAzB;AACA,QAAIC,kBAAkB,GAAG,IAAzB;AACA,QAAIC,iBAAiB,GAAG,IAAxB;AACA,QAAIC,sBAAsB,GAAG,IAA7B;AACA,QAAIC,kBAAkB,GAAG,IAAzB;AACA,QAAIC,mBAAmB,GAAG,IAA1B;AACA,QAAIC,mBAAmB,GAAG,IAA1B;AACA,QAAIC,mBAAmB,GAAG,IAA1B;AAEA,WAAO;AAENxD,MAAAA,OAAO,EAAE,iBAAWyD,WAAX,EAAyB;AAEjC,YAAK,CAAExB,MAAP,EAAgB;AAEf,cAAKwB,WAAL,EAAmB;AAElB7K,YAAAA,MAAM,CAAE,IAAF,CAAN;AAEA,WAJD,MAIO;AAENgK,YAAAA,OAAO,CAAE,IAAF,CAAP;AAEA;AAED;AAED,OAlBK;AAoBNR,MAAAA,OAAO,EAAE,iBAAWsB,WAAX,EAAyB;AAEjC,YAAKT,kBAAkB,KAAKS,WAAvB,IAAsC,CAAEzB,MAA7C,EAAsD;AAErD/gC,UAAAA,EAAE,CAACwiC,WAAH,CAAgBA,WAAhB;AACAT,UAAAA,kBAAkB,GAAGS,WAArB;AAEA;AAED,OA7BK;AA+BNZ,MAAAA,OAAO,EAAE,iBAAW36C,WAAX,EAAwBC,UAAxB,EAAoCs7C,WAApC,EAAkD;AAE1D,YAAKR,kBAAkB,KAAK/6C,WAAvB,IACAg7C,iBAAiB,KAAK/6C,UADtB,IAEAg7C,sBAAsB,KAAKM,WAFhC,EAE8C;AAE7CxiC,UAAAA,EAAE,CAAC/Y,WAAH,CAAgBA,WAAhB,EAA6BC,UAA7B,EAAyCs7C,WAAzC;AAEAR,UAAAA,kBAAkB,GAAG/6C,WAArB;AACAg7C,UAAAA,iBAAiB,GAAG/6C,UAApB;AACAg7C,UAAAA,sBAAsB,GAAGM,WAAzB;AAEA;AAED,OA7CK;AA+CNC,MAAAA,KAAK,EAAE,eAAWr7C,WAAX,EAAwBC,YAAxB,EAAsCC,YAAtC,EAAqD;AAE3D,YAAK66C,kBAAkB,KAAK/6C,WAAvB,IACAg7C,mBAAmB,KAAK/6C,YADxB,IAEAg7C,mBAAmB,KAAK/6C,YAF7B,EAE4C;AAE3C0Y,UAAAA,EAAE,CAAC0iC,SAAH,CAAct7C,WAAd,EAA2BC,YAA3B,EAAyCC,YAAzC;AAEA66C,UAAAA,kBAAkB,GAAG/6C,WAArB;AACAg7C,UAAAA,mBAAmB,GAAG/6C,YAAtB;AACAg7C,UAAAA,mBAAmB,GAAG/6C,YAAtB;AAEA;AAED,OA7DK;AA+DN85C,MAAAA,SAAS,EAAE,mBAAWC,IAAX,EAAkB;AAE5BN,QAAAA,MAAM,GAAGM,IAAT;AAEA,OAnEK;AAqENzvB,MAAAA,QAAQ,EAAE,kBAAWnV,OAAX,EAAqB;AAE9B,YAAK6lC,mBAAmB,KAAK7lC,OAA7B,EAAuC;AAEtCuD,UAAAA,EAAE,CAAC2iC,YAAH,CAAiBlmC,OAAjB;AACA6lC,UAAAA,mBAAmB,GAAG7lC,OAAtB;AAEA;AAED,OA9EK;AAgFN4Z,MAAAA,KAAK,EAAE,iBAAY;AAElB0qB,QAAAA,MAAM,GAAG,KAAT;AAEAgB,QAAAA,kBAAkB,GAAG,IAArB;AACAC,QAAAA,kBAAkB,GAAG,IAArB;AACAC,QAAAA,iBAAiB,GAAG,IAApB;AACAC,QAAAA,sBAAsB,GAAG,IAAzB;AACAC,QAAAA,kBAAkB,GAAG,IAArB;AACAC,QAAAA,mBAAmB,GAAG,IAAtB;AACAC,QAAAA,mBAAmB,GAAG,IAAtB;AACAC,QAAAA,mBAAmB,GAAG,IAAtB;AAEA;AA7FK,KAAP;AAiGA,GAjTkD,CAmTnD;;;AAEA,MAAMM,WAAW,GAAG,IAAI9B,WAAJ,EAApB;AACA,MAAMp4D,WAAW,GAAG,IAAI44D,WAAJ,EAApB;AACA,MAAM34D,aAAa,GAAG,IAAIm5D,aAAJ,EAAtB;AAEA,MAAIe,mBAAmB,GAAG,EAA1B;AAEA,MAAIC,wBAAwB,GAAG,EAA/B;AACA,MAAIC,kBAAkB,GAAG,IAAI3iC,OAAJ,EAAzB;AACA,MAAI4iC,kBAAkB,GAAG,EAAzB;AAEA,MAAIC,cAAc,GAAG,IAArB;AAEA,MAAIC,sBAAsB,GAAG,KAA7B;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,yBAAyB,GAAG,IAAhC;AACA,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,wBAAwB,GAAG,KAA/B;AAEA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,eAAe,GAAG,IAAtB;AAEA,MAAIC,gBAAgB,GAAG,IAAvB;AAEA,MAAIC,0BAA0B,GAAG,IAAjC;AACA,MAAIC,yBAAyB,GAAG,IAAhC;AAEA,MAAMjsB,WAAW,GAAG9X,EAAE,CAAC4S,YAAH,CAAiB,KAAjB,CAApB;AAEA,MAAIoxB,kBAAkB,GAAG,KAAzB;AACA,MAAIvgE,OAAO,GAAG,CAAd;AACA,MAAMwgE,SAAS,GAAGjkC,EAAE,CAAC4S,YAAH,CAAiB,IAAjB,CAAlB;;AAEA,MAAKqxB,SAAS,CAACzyE,OAAV,CAAmB,OAAnB,MAAiC,CAAE,CAAxC,EAA4C;AAE3CiS,IAAAA,OAAO,GAAG5C,UAAU,CAAE,cAAcC,IAAd,CAAoBmjE,SAApB,EAAiC,CAAjC,CAAF,CAApB;AACAD,IAAAA,kBAAkB,GAAKvgE,OAAO,IAAI,GAAlC;AAEA,GALD,MAKO,IAAKwgE,SAAS,CAACzyE,OAAV,CAAmB,WAAnB,MAAqC,CAAE,CAA5C,EAAgD;AAEtDiS,IAAAA,OAAO,GAAG5C,UAAU,CAAE,kBAAkBC,IAAlB,CAAwBmjE,SAAxB,EAAqC,CAArC,CAAF,CAApB;AACAD,IAAAA,kBAAkB,GAAKvgE,OAAO,IAAI,GAAlC;AAEA;;AAED,MAAIygE,kBAAkB,GAAG,IAAzB;AACA,MAAIC,oBAAoB,GAAG,EAA3B;AAEA,MAAMC,YAAY,GAAGpkC,EAAE,CAAC4S,YAAH,CAAiB,IAAjB,CAArB;AACA,MAAMyxB,aAAa,GAAGrkC,EAAE,CAAC4S,YAAH,CAAiB,IAAjB,CAAtB;AAEA,MAAM0xB,cAAc,GAAG,IAAI19D,OAAJ,GAAc3I,SAAd,CAAyBmmE,YAAzB,CAAvB;AACA,MAAMG,eAAe,GAAG,IAAI39D,OAAJ,GAAc3I,SAAd,CAAyBomE,aAAzB,CAAxB;;AAEA,WAASG,aAAT,CAAwBrzE,IAAxB,EAA8BW,MAA9B,EAAsC6X,KAAtC,EAA8C;AAE7C,QAAMrG,IAAI,GAAG,IAAI9L,UAAJ,CAAgB,CAAhB,CAAb,CAF6C,CAEX;;AAClC,QAAMiR,OAAO,GAAGu3B,EAAE,CAACwkC,aAAH,EAAhB;AAEAxkC,IAAAA,EAAE,CAACykC,WAAH,CAAgBtzE,IAAhB,EAAsBsX,OAAtB;AACAu3B,IAAAA,EAAE,CAAC0kC,aAAH,CAAkBvzE,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B;AACA6uC,IAAAA,EAAE,CAAC0kC,aAAH,CAAkBvzE,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B;;AAEA,SAAM,IAAIc,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0X,KAArB,EAA4B1X,CAAC,EAA7B,EAAmC;AAElC+tC,MAAAA,EAAE,CAAC2kC,UAAH,CAAe7yE,MAAM,GAAGG,CAAxB,EAA2B,CAA3B,EAA8B,IAA9B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDqR,IAAzD;AAEA;;AAED,WAAOmF,OAAP;AAEA;;AAED,MAAMm8D,aAAa,GAAG,EAAtB;AACAA,EAAAA,aAAa,CAAE,IAAF,CAAb,GAAwBJ,aAAa,CAAE,IAAF,EAAQ,IAAR,EAAc,CAAd,CAArC;AACAI,EAAAA,aAAa,CAAE,KAAF,CAAb,GAAyBJ,aAAa,CAAE,KAAF,EAAS,KAAT,EAAgB,CAAhB,CAAtC,CAnYmD,CAqYnD;;AAEA5B,EAAAA,WAAW,CAAChxB,QAAZ,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACAlpC,EAAAA,WAAW,CAACkpC,QAAZ,CAAsB,CAAtB;AACAjpC,EAAAA,aAAa,CAACipC,QAAd,CAAwB,CAAxB;AAEA8lB,EAAAA,MAAM,CAAE,IAAF,CAAN;AACAhvD,EAAAA,WAAW,CAACk5D,OAAZ,CAAqB/4E,cAArB;AAEAg8E,EAAAA,YAAY,CAAE,KAAF,CAAZ;AACAC,EAAAA,WAAW,CAAEt+E,YAAF,CAAX;AACAkxE,EAAAA,MAAM,CAAE,IAAF,CAAN;AAEAmH,EAAAA,WAAW,CAAEz3E,UAAF,CAAX,CAlZmD,CAoZnD;;AAEA,WAASswE,MAAT,CAAiB72C,EAAjB,EAAsB;AAErB,QAAKgiD,mBAAmB,CAAEhiD,EAAF,CAAnB,KAA8B,IAAnC,EAA0C;AAEzCmf,MAAAA,EAAE,CAAC03B,MAAH,CAAW72C,EAAX;AACAgiD,MAAAA,mBAAmB,CAAEhiD,EAAF,CAAnB,GAA4B,IAA5B;AAEA;AAED;;AAED,WAAS6gD,OAAT,CAAkB7gD,EAAlB,EAAuB;AAEtB,QAAKgiD,mBAAmB,CAAEhiD,EAAF,CAAnB,KAA8B,KAAnC,EAA2C;AAE1Cmf,MAAAA,EAAE,CAAC0hC,OAAH,CAAY7gD,EAAZ;AACAgiD,MAAAA,mBAAmB,CAAEhiD,EAAF,CAAnB,GAA4B,KAA5B;AAEA;AAED;;AAED,WAASkkD,eAAT,CAA0BjzE,MAA1B,EAAkCkzE,WAAlC,EAAgD;AAE/C,QAAKlC,wBAAwB,CAAEhxE,MAAF,CAAxB,KAAuCkzE,WAA5C,EAA0D;AAEzDhlC,MAAAA,EAAE,CAAC+kC,eAAH,CAAoBjzE,MAApB,EAA4BkzE,WAA5B;AAEAlC,MAAAA,wBAAwB,CAAEhxE,MAAF,CAAxB,GAAqCkzE,WAArC;;AAEA,UAAK9kC,QAAL,EAAgB;AAEf;AAEA,YAAKpuC,MAAM,KAAK,KAAhB,EAAwB;AAEvBgxE,UAAAA,wBAAwB,CAAE,KAAF,CAAxB,GAAoCkC,WAApC;AAEA;;AAED,YAAKlzE,MAAM,KAAK,KAAhB,EAAwB;AAEvBgxE,UAAAA,wBAAwB,CAAE,KAAF,CAAxB,GAAoCkC,WAApC;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;AAED,WAAO,KAAP;AAEA;;AAED,WAAShsC,WAAT,CAAsBgC,YAAtB,EAAoCgqC,WAApC,EAAkD;AAEjD,QAAIhsC,WAAW,GAAGgqC,kBAAlB;AAEA,QAAI78D,WAAW,GAAG,KAAlB;;AAEA,QAAK60B,YAAL,EAAoB;AAEnBhC,MAAAA,WAAW,GAAG+pC,kBAAkB,CAACjiC,GAAnB,CAAwBkkC,WAAxB,CAAd;;AAEA,UAAKhsC,WAAW,KAAK1nC,SAArB,EAAiC;AAEhC0nC,QAAAA,WAAW,GAAG,EAAd;AACA+pC,QAAAA,kBAAkB,CAAC9rE,GAAnB,CAAwB+tE,WAAxB,EAAqChsC,WAArC;AAEA;;AAED,UAAKgC,YAAY,CAACpxB,4BAAlB,EAAiD;AAEhD,YAAMxD,QAAQ,GAAG40B,YAAY,CAACvyB,OAA9B;;AAEA,YAAKuwB,WAAW,CAAC7mC,MAAZ,KAAuBiU,QAAQ,CAACjU,MAAhC,IAA0C6mC,WAAW,CAAE,CAAF,CAAX,KAAqB,KAApE,EAA4E;AAE3E,eAAM,IAAI/mC,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGzD,QAAQ,CAACjU,MAA/B,EAAuCF,CAAC,GAAG4X,EAA3C,EAA+C5X,CAAC,EAAhD,EAAsD;AAErD+mC,YAAAA,WAAW,CAAE/mC,CAAF,CAAX,GAAmB,QAAQA,CAA3B;AAEA;;AAED+mC,UAAAA,WAAW,CAAC7mC,MAAZ,GAAqBiU,QAAQ,CAACjU,MAA9B;AAEAgU,UAAAA,WAAW,GAAG,IAAd;AAEA;AAED,OAlBD,MAkBO;AAEN,YAAK6yB,WAAW,CAAE,CAAF,CAAX,KAAqB,KAA1B,EAAkC;AAEjCA,UAAAA,WAAW,CAAE,CAAF,CAAX,GAAmB,KAAnB;AAEA7yB,UAAAA,WAAW,GAAG,IAAd;AAEA;AAED;AAED,KAzCD,MAyCO;AAEN,UAAK6yB,WAAW,CAAE,CAAF,CAAX,KAAqB,IAA1B,EAAiC;AAEhCA,QAAAA,WAAW,CAAE,CAAF,CAAX,GAAmB,IAAnB;AAEA7yB,QAAAA,WAAW,GAAG,IAAd;AAEA;AAED;;AAED,QAAKA,WAAL,EAAmB;AAElB,UAAK85B,YAAY,CAACC,QAAlB,EAA6B;AAE5BF,QAAAA,EAAE,CAAChH,WAAH,CAAgBA,WAAhB;AAEA,OAJD,MAIO;AAENH,QAAAA,UAAU,CAACiI,GAAX,CAAgB,oBAAhB,EAAuCmkC,gBAAvC,CAAyDjsC,WAAzD;AAEA;AAED;AAGD;;AAED,WAASksC,UAAT,CAAqB7xB,OAArB,EAA+B;AAE9B,QAAK4vB,cAAc,KAAK5vB,OAAxB,EAAkC;AAEjCrT,MAAAA,EAAE,CAACklC,UAAH,CAAe7xB,OAAf;AAEA4vB,MAAAA,cAAc,GAAG5vB,OAAjB;AAEA,aAAO,IAAP;AAEA;;AAED,WAAO,KAAP;AAEA;;AAED,MAAM8xB,YAAY,uDACfz9E,WADe,EACA,KADA,kCAEfC,gBAFe,EAEK,KAFL,kCAGfC,uBAHe,EAGY,KAHZ,iBAAlB;;AAMA,MAAKs4C,QAAL,EAAgB;AAEfilC,IAAAA,YAAY,CAAEt9E,WAAF,CAAZ,GAA8B,KAA9B;AACAs9E,IAAAA,YAAY,CAAEr9E,WAAF,CAAZ,GAA8B,KAA9B;AAEA,GALD,MAKO;AAEN,QAAM+qD,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,kBAAhB,CAAlB;;AAEA,QAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzBsyB,MAAAA,YAAY,CAAEt9E,WAAF,CAAZ,GAA8BgrD,SAAS,CAACuyB,OAAxC;AACAD,MAAAA,YAAY,CAAEr9E,WAAF,CAAZ,GAA8B+qD,SAAS,CAACwyB,OAAxC;AAEA;AAED;;AAED,MAAMC,UAAU,mDACbv9E,UADa,EACC,CADD,gCAEbC,SAFa,EAEA,CAFA,gCAGbC,cAHa,EAGK,GAHL,gCAIbE,cAJa,EAIK,GAJL,gCAKbM,sBALa,EAKa,GALb,gCAMbF,cANa,EAMK,GANL,gCAObF,cAPa,EAOK,GAPL,gCAQbH,sBARa,EAQa,GARb,gCASbE,sBATa,EASa,GATb,gCAUbI,sBAVa,EAUa,GAVb,gCAWbF,sBAXa,EAWa,GAXb,eAAhB;;AAcA,WAASu2E,WAAT,CAAsB34C,QAAtB,EAAgCO,aAAhC,EAA+CF,QAA/C,EAAyDC,QAAzD,EAAmEI,kBAAnE,EAAuFF,aAAvF,EAAsGC,aAAtG,EAAqHwB,kBAArH,EAA0I;AAEzI,QAAKjC,QAAQ,KAAK9+B,UAAlB,EAA+B;AAE9B,UAAK87E,sBAAsB,KAAK,IAAhC,EAAuC;AAEtCxB,QAAAA,OAAO,CAAE,IAAF,CAAP;AACAwB,QAAAA,sBAAsB,GAAG,KAAzB;AAEA;;AAED;AAEA;;AAED,QAAKA,sBAAsB,KAAK,KAAhC,EAAwC;AAEvCxL,MAAAA,MAAM,CAAE,IAAF,CAAN;AACAwL,MAAAA,sBAAsB,GAAG,IAAzB;AAEA;;AAED,QAAKh9C,QAAQ,KAAKz+B,cAAlB,EAAmC;AAElC,UAAKy+B,QAAQ,KAAKi9C,eAAb,IAAgCh7C,kBAAkB,KAAKu7C,wBAA5D,EAAuF;AAEtF,YAAKN,oBAAoB,KAAK17E,WAAzB,IAAwC67E,yBAAyB,KAAK77E,WAA3E,EAAyF;AAExFs4C,UAAAA,EAAE,CAACvZ,aAAH,CAAkB,KAAlB;AAEA28C,UAAAA,oBAAoB,GAAG17E,WAAvB;AACA67E,UAAAA,yBAAyB,GAAG77E,WAA5B;AAEA;;AAED,YAAKygC,kBAAL,EAA0B;AAEzB,kBAASjC,QAAT;AAEC,iBAAK7+B,cAAL;AACC24C,cAAAA,EAAE,CAACulC,iBAAH,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,GAAjC;AACA;;AAED,iBAAKj+E,gBAAL;AACC04C,cAAAA,EAAE,CAACwlC,SAAH,CAAc,CAAd,EAAiB,CAAjB;AACA;;AAED,iBAAKj+E,mBAAL;AACCy4C,cAAAA,EAAE,CAACulC,iBAAH,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,CAAjC;AACA;;AAED,iBAAK/9E,gBAAL;AACCw4C,cAAAA,EAAE,CAACulC,iBAAH,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,GAAjC;AACA;;AAED;AACCruE,cAAAA,OAAO,CAACkD,KAAR,CAAe,sCAAf,EAAuD8rB,QAAvD;AACA;AApBF;AAwBA,SA1BD,MA0BO;AAEN,kBAASA,QAAT;AAEC,iBAAK7+B,cAAL;AACC24C,cAAAA,EAAE,CAACulC,iBAAH,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,CAAhC,EAAmC,GAAnC;AACA;;AAED,iBAAKj+E,gBAAL;AACC04C,cAAAA,EAAE,CAACwlC,SAAH,CAAc,GAAd,EAAmB,CAAnB;AACA;;AAED,iBAAKj+E,mBAAL;AACCy4C,cAAAA,EAAE,CAACulC,iBAAH,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,CAAjC;AACA;;AAED,iBAAK/9E,gBAAL;AACCw4C,cAAAA,EAAE,CAACwlC,SAAH,CAAc,CAAd,EAAiB,GAAjB;AACA;;AAED;AACCtuE,cAAAA,OAAO,CAACkD,KAAR,CAAe,sCAAf,EAAuD8rB,QAAvD;AACA;AApBF;AAwBA;;AAEDm9C,QAAAA,eAAe,GAAG,IAAlB;AACAC,QAAAA,eAAe,GAAG,IAAlB;AACAE,QAAAA,oBAAoB,GAAG,IAAvB;AACAC,QAAAA,oBAAoB,GAAG,IAAvB;AAEAN,QAAAA,eAAe,GAAGj9C,QAAlB;AACAw9C,QAAAA,wBAAwB,GAAGv7C,kBAA3B;AAEA;;AAED;AAEA,KArGwI,CAuGzI;;;AAEAvB,IAAAA,kBAAkB,GAAGA,kBAAkB,IAAIH,aAA3C;AACAC,IAAAA,aAAa,GAAGA,aAAa,IAAIH,QAAjC;AACAI,IAAAA,aAAa,GAAGA,aAAa,IAAIH,QAAjC;;AAEA,QAAKC,aAAa,KAAK28C,oBAAlB,IAA0Cx8C,kBAAkB,KAAK28C,yBAAtE,EAAkG;AAEjGvjC,MAAAA,EAAE,CAACylC,qBAAH,CAA0BN,YAAY,CAAE1+C,aAAF,CAAtC,EAAyD0+C,YAAY,CAAEv+C,kBAAF,CAArE;AAEAw8C,MAAAA,oBAAoB,GAAG38C,aAAvB;AACA88C,MAAAA,yBAAyB,GAAG38C,kBAA5B;AAEA;;AAED,QAAKL,QAAQ,KAAK88C,eAAb,IAAgC78C,QAAQ,KAAK88C,eAA7C,IAAgE58C,aAAa,KAAK88C,oBAAlF,IAA0G78C,aAAa,KAAK88C,oBAAjI,EAAwJ;AAEvJzjC,MAAAA,EAAE,CAACulC,iBAAH,CAAsBD,UAAU,CAAE/+C,QAAF,CAAhC,EAA8C++C,UAAU,CAAE9+C,QAAF,CAAxD,EAAsE8+C,UAAU,CAAE5+C,aAAF,CAAhF,EAAmG4+C,UAAU,CAAE3+C,aAAF,CAA7G;AAEA08C,MAAAA,eAAe,GAAG98C,QAAlB;AACA+8C,MAAAA,eAAe,GAAG98C,QAAlB;AACAg9C,MAAAA,oBAAoB,GAAG98C,aAAvB;AACA+8C,MAAAA,oBAAoB,GAAG98C,aAAvB;AAEA;;AAEDw8C,IAAAA,eAAe,GAAGj9C,QAAlB;AACAw9C,IAAAA,wBAAwB,GAAG,IAA3B;AAEA;;AAED,WAASgC,WAAT,CAAsB3iD,QAAtB,EAAgC4iD,WAAhC,EAA8C;AAE7C5iD,IAAAA,QAAQ,CAACoD,IAAT,KAAkBl/B,UAAlB,GACGy6E,OAAO,CAAE,IAAF,CADV,GAEGhK,MAAM,CAAE,IAAF,CAFT;AAIA,QAAI3F,SAAS,GAAKhvC,QAAQ,CAACoD,IAAT,KAAkBn/B,QAApC;AACA,QAAK2+E,WAAL,EAAmB5T,SAAS,GAAG,CAAEA,SAAd;AAEnB8S,IAAAA,YAAY,CAAE9S,SAAF,CAAZ;AAEEhvC,IAAAA,QAAQ,CAACmD,QAAT,KAAsB7+B,cAAtB,IAAwC07B,QAAQ,CAACuD,WAAT,KAAyB,KAAnE,GACGu4C,WAAW,CAAEz3E,UAAF,CADd,GAEGy3E,WAAW,CAAE97C,QAAQ,CAACmD,QAAX,EAAqBnD,QAAQ,CAAC0D,aAA9B,EAA6C1D,QAAQ,CAACwD,QAAtD,EAAgExD,QAAQ,CAACyD,QAAzE,EAAmFzD,QAAQ,CAAC6D,kBAA5F,EAAgH7D,QAAQ,CAAC2D,aAAzH,EAAwI3D,QAAQ,CAAC4D,aAAjJ,EAAgK5D,QAAQ,CAACoF,kBAAzK,CAFd;AAIAzf,IAAAA,WAAW,CAACk5D,OAAZ,CAAqB7+C,QAAQ,CAAC8D,SAA9B;AACAne,IAAAA,WAAW,CAACo2D,OAAZ,CAAqB/7C,QAAQ,CAAC+D,SAA9B;AACApe,IAAAA,WAAW,CAACw4D,OAAZ,CAAqBn+C,QAAQ,CAACgE,UAA9B;AACA67C,IAAAA,WAAW,CAAC1B,OAAZ,CAAqBn+C,QAAQ,CAAC6E,UAA9B;AAEA,QAAML,YAAY,GAAGxE,QAAQ,CAACwE,YAA9B;AACA5e,IAAAA,aAAa,CAACm2D,OAAd,CAAuBv3C,YAAvB;;AACA,QAAKA,YAAL,EAAoB;AAEnB5e,MAAAA,aAAa,CAACu4D,OAAd,CAAuBn+C,QAAQ,CAACiE,gBAAhC;AACAre,MAAAA,aAAa,CAACi5D,OAAd,CAAuB7+C,QAAQ,CAACkE,WAAhC,EAA6ClE,QAAQ,CAACmE,UAAtD,EAAkEnE,QAAQ,CAACoE,eAA3E;AACAxe,MAAAA,aAAa,CAAC85D,KAAd,CAAqB1/C,QAAQ,CAACqE,WAA9B,EAA2CrE,QAAQ,CAACsE,YAApD,EAAkEtE,QAAQ,CAACuE,YAA3E;AAEA;;AAEDs+C,IAAAA,gBAAgB,CAAE7iD,QAAQ,CAAC+E,aAAX,EAA0B/E,QAAQ,CAACgF,mBAAnC,EAAwDhF,QAAQ,CAACiF,kBAAjE,CAAhB;AAEAjF,IAAAA,QAAQ,CAACmF,eAAT,KAA6B,IAA7B,GACGwvC,MAAM,CAAE,KAAF,CADT,GAEGgK,OAAO,CAAE,KAAF,CAFV;AAIA,GA1vBkD,CA4vBnD;;;AAEA,WAASmD,YAAT,CAAuB9S,SAAvB,EAAmC;AAElC,QAAK4R,gBAAgB,KAAK5R,SAA1B,EAAsC;AAErC,UAAKA,SAAL,EAAiB;AAEhB/xB,QAAAA,EAAE,CAAC6lC,SAAH,CAAc,IAAd;AAEA,OAJD,MAIO;AAEN7lC,QAAAA,EAAE,CAAC6lC,SAAH,CAAc,IAAd;AAEA;;AAEDlC,MAAAA,gBAAgB,GAAG5R,SAAnB;AAEA;AAED;;AAED,WAAS+S,WAAT,CAAsBgB,QAAtB,EAAiC;AAEhC,QAAKA,QAAQ,KAAKv/E,YAAlB,EAAiC;AAEhCmxE,MAAAA,MAAM,CAAE,IAAF,CAAN;;AAEA,UAAKoO,QAAQ,KAAKlC,eAAlB,EAAoC;AAEnC,YAAKkC,QAAQ,KAAKt/E,YAAlB,EAAiC;AAEhCw5C,UAAAA,EAAE,CAAC8lC,QAAH,CAAa,IAAb;AAEA,SAJD,MAIO,IAAKA,QAAQ,KAAKr/E,aAAlB,EAAkC;AAExCu5C,UAAAA,EAAE,CAAC8lC,QAAH,CAAa,IAAb;AAEA,SAJM,MAIA;AAEN9lC,UAAAA,EAAE,CAAC8lC,QAAH,CAAa,IAAb;AAEA;AAED;AAED,KAtBD,MAsBO;AAENpE,MAAAA,OAAO,CAAE,IAAF,CAAP;AAEA;;AAEDkC,IAAAA,eAAe,GAAGkC,QAAlB;AAEA;;AAED,WAASC,YAAT,CAAuBrjE,KAAvB,EAA+B;AAE9B,QAAKA,KAAK,KAAKmhE,gBAAf,EAAkC;AAEjC,UAAKG,kBAAL,EAA0BhkC,EAAE,CAACgmC,SAAH,CAActjE,KAAd;AAE1BmhE,MAAAA,gBAAgB,GAAGnhE,KAAnB;AAEA;AAED;;AAED,WAASkjE,gBAAT,CAA2B99C,aAA3B,EAA0Cm+C,MAA1C,EAAkDxc,KAAlD,EAA0D;AAEzD,QAAK3hC,aAAL,EAAqB;AAEpB4vC,MAAAA,MAAM,CAAE,KAAF,CAAN;;AAEA,UAAKoM,0BAA0B,KAAKmC,MAA/B,IAAyClC,yBAAyB,KAAKta,KAA5E,EAAoF;AAEnFzpB,QAAAA,EAAE,CAAClY,aAAH,CAAkBm+C,MAAlB,EAA0Bxc,KAA1B;AAEAqa,QAAAA,0BAA0B,GAAGmC,MAA7B;AACAlC,QAAAA,yBAAyB,GAAGta,KAA5B;AAEA;AAED,KAbD,MAaO;AAENiY,MAAAA,OAAO,CAAE,KAAF,CAAP;AAEA;AAED;;AAED,WAAS3C,cAAT,CAAyBx2D,WAAzB,EAAuC;AAEtC,QAAKA,WAAL,EAAmB;AAElBmvD,MAAAA,MAAM,CAAE,IAAF,CAAN;AAEA,KAJD,MAIO;AAENgK,MAAAA,OAAO,CAAE,IAAF,CAAP;AAEA;AAED,GAn2BkD,CAq2BnD;;;AAEA,WAASwE,aAAT,CAAwBC,SAAxB,EAAoC;AAEnC,QAAKA,SAAS,KAAK70E,SAAnB,EAA+B60E,SAAS,GAAG,QAAQruB,WAAR,GAAsB,CAAlC;;AAE/B,QAAKosB,kBAAkB,KAAKiC,SAA5B,EAAwC;AAEvCnmC,MAAAA,EAAE,CAACkmC,aAAH,CAAkBC,SAAlB;AACAjC,MAAAA,kBAAkB,GAAGiC,SAArB;AAEA;AAED;;AAED,WAAS1B,WAAT,CAAsB2B,SAAtB,EAAiCC,YAAjC,EAAgD;AAE/C,QAAKnC,kBAAkB,KAAK,IAA5B,EAAmC;AAElCgC,MAAAA,aAAa;AAEb;;AAED,QAAII,YAAY,GAAGnC,oBAAoB,CAAED,kBAAF,CAAvC;;AAEA,QAAKoC,YAAY,KAAKh1E,SAAtB,EAAkC;AAEjCg1E,MAAAA,YAAY,GAAG;AAAEn1E,QAAAA,IAAI,EAAEG,SAAR;AAAmBmX,QAAAA,OAAO,EAAEnX;AAA5B,OAAf;AACA6yE,MAAAA,oBAAoB,CAAED,kBAAF,CAApB,GAA6CoC,YAA7C;AAEA;;AAED,QAAKA,YAAY,CAACn1E,IAAb,KAAsBi1E,SAAtB,IAAmCE,YAAY,CAAC79D,OAAb,KAAyB49D,YAAjE,EAAgF;AAE/ErmC,MAAAA,EAAE,CAACykC,WAAH,CAAgB2B,SAAhB,EAA2BC,YAAY,IAAIzB,aAAa,CAAEwB,SAAF,CAAxD;AAEAE,MAAAA,YAAY,CAACn1E,IAAb,GAAoBi1E,SAApB;AACAE,MAAAA,YAAY,CAAC79D,OAAb,GAAuB49D,YAAvB;AAEA;AAED;;AAED,WAASE,aAAT,GAAyB;AAExB,QAAMD,YAAY,GAAGnC,oBAAoB,CAAED,kBAAF,CAAzC;;AAEA,QAAKoC,YAAY,KAAKh1E,SAAjB,IAA8Bg1E,YAAY,CAACn1E,IAAb,KAAsBG,SAAzD,EAAqE;AAEpE0uC,MAAAA,EAAE,CAACykC,WAAH,CAAgB6B,YAAY,CAACn1E,IAA7B,EAAmC,IAAnC;AAEAm1E,MAAAA,YAAY,CAACn1E,IAAb,GAAoBG,SAApB;AACAg1E,MAAAA,YAAY,CAAC79D,OAAb,GAAuBnX,SAAvB;AAEA;AAED;;AAED,WAASk1E,oBAAT,GAAgC;AAE/B,QAAI;AAEHxmC,MAAAA,EAAE,CAACwmC,oBAAH,CAAwBC,KAAxB,CAA+BzmC,EAA/B,EAAmC7lC,SAAnC;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAASssE,aAAT,GAAyB;AAExB,QAAI;AAEH1mC,MAAAA,EAAE,CAAC0mC,aAAH,CAAiBD,KAAjB,CAAwBzmC,EAAxB,EAA4B7lC,SAA5B;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAASusE,aAAT,GAAyB;AAExB,QAAI;AAEH3mC,MAAAA,EAAE,CAAC2mC,aAAH,CAAiBF,KAAjB,CAAwBzmC,EAAxB,EAA4B7lC,SAA5B;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAASwsE,uBAAT,GAAmC;AAElC,QAAI;AAEH5mC,MAAAA,EAAE,CAAC4mC,uBAAH,CAA2BH,KAA3B,CAAkCzmC,EAAlC,EAAsC7lC,SAAtC;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAASysE,YAAT,GAAwB;AAEvB,QAAI;AAEH7mC,MAAAA,EAAE,CAAC6mC,YAAH,CAAgBJ,KAAhB,CAAuBzmC,EAAvB,EAA2B7lC,SAA3B;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAAS0sE,YAAT,GAAwB;AAEvB,QAAI;AAEH9mC,MAAAA,EAAE,CAAC8mC,YAAH,CAAgBL,KAAhB,CAAuBzmC,EAAvB,EAA2B7lC,SAA3B;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAASuqE,UAAT,GAAsB;AAErB,QAAI;AAEH3kC,MAAAA,EAAE,CAAC2kC,UAAH,CAAc8B,KAAd,CAAqBzmC,EAArB,EAAyB7lC,SAAzB;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED;;AAED,WAAS2sE,UAAT,GAAsB;AAErB,QAAI;AAEH/mC,MAAAA,EAAE,CAAC+mC,UAAH,CAAcN,KAAd,CAAqBzmC,EAArB,EAAyB7lC,SAAzB;AAEA,KAJD,CAIE,OAAQC,KAAR,EAAgB;AAEjBlD,MAAAA,OAAO,CAACkD,KAAR,CAAe,mBAAf,EAAoCA,KAApC;AAEA;AAED,GA7gCkD,CA+gCnD;;;AAEA,WAASkO,OAAT,CAAkBA,OAAlB,EAA4B;AAE3B,QAAKg8D,cAAc,CAAC/vD,MAAf,CAAuBjM,OAAvB,MAAqC,KAA1C,EAAkD;AAEjD03B,MAAAA,EAAE,CAAC13B,OAAH,CAAYA,OAAO,CAAC3U,CAApB,EAAuB2U,OAAO,CAACrU,CAA/B,EAAkCqU,OAAO,CAACzB,CAA1C,EAA6CyB,OAAO,CAAC9P,CAArD;AACA8rE,MAAAA,cAAc,CAAChkE,IAAf,CAAqBgI,OAArB;AAEA;AAED;;AAED,WAASE,QAAT,CAAmBA,QAAnB,EAA8B;AAE7B,QAAK+7D,eAAe,CAAChwD,MAAhB,CAAwB/L,QAAxB,MAAuC,KAA5C,EAAoD;AAEnDw3B,MAAAA,EAAE,CAACx3B,QAAH,CAAaA,QAAQ,CAAC7U,CAAtB,EAAyB6U,QAAQ,CAACvU,CAAlC,EAAqCuU,QAAQ,CAAC3B,CAA9C,EAAiD2B,QAAQ,CAAChQ,CAA1D;AACA+rE,MAAAA,eAAe,CAACjkE,IAAhB,CAAsBkI,QAAtB;AAEA;AAED,GAriCkD,CAuiCnD;;;AAEA,WAAS6tC,KAAT,GAAiB;AAEhB;AAEArW,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,IAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,IAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,IAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,KAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,IAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,IAAZ;AACA1hC,IAAAA,EAAE,CAAC0hC,OAAH,CAAY,KAAZ;AAEA1hC,IAAAA,EAAE,CAACvZ,aAAH,CAAkB,KAAlB;AACAuZ,IAAAA,EAAE,CAACwlC,SAAH,CAAc,CAAd,EAAiB,CAAjB;AACAxlC,IAAAA,EAAE,CAACulC,iBAAH,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AAEAvlC,IAAAA,EAAE,CAACmhC,SAAH,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC;AACAnhC,IAAAA,EAAE,CAACgR,UAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAEAhR,IAAAA,EAAE,CAAC2hC,SAAH,CAAc,IAAd;AACA3hC,IAAAA,EAAE,CAACnZ,SAAH,CAAc,GAAd;AACAmZ,IAAAA,EAAE,CAAC6hC,UAAH,CAAe,CAAf;AAEA7hC,IAAAA,EAAE,CAACwiC,WAAH,CAAgB,UAAhB;AACAxiC,IAAAA,EAAE,CAAC/Y,WAAH,CAAgB,GAAhB,EAAqB,CAArB,EAAwB,UAAxB;AACA+Y,IAAAA,EAAE,CAAC0iC,SAAH,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B;AACA1iC,IAAAA,EAAE,CAAC2iC,YAAH,CAAiB,CAAjB;AAEA3iC,IAAAA,EAAE,CAAC8lC,QAAH,CAAa,IAAb;AACA9lC,IAAAA,EAAE,CAAC6lC,SAAH,CAAc,IAAd;AAEA7lC,IAAAA,EAAE,CAAClY,aAAH,CAAkB,CAAlB,EAAqB,CAArB;AAEAkY,IAAAA,EAAE,CAACkmC,aAAH,CAAkB,KAAlB;AAEAlmC,IAAAA,EAAE,CAAC+kC,eAAH,CAAoB,KAApB,EAA2B,IAA3B;;AAEA,QAAK7kC,QAAQ,KAAK,IAAlB,EAAyB;AAExBF,MAAAA,EAAE,CAAC+kC,eAAH,CAAoB,KAApB,EAA2B,IAA3B;AACA/kC,MAAAA,EAAE,CAAC+kC,eAAH,CAAoB,KAApB,EAA2B,IAA3B;AAEA;;AAED/kC,IAAAA,EAAE,CAACklC,UAAH,CAAe,IAAf;AAEAllC,IAAAA,EAAE,CAACgmC,SAAH,CAAc,CAAd;AAEAhmC,IAAAA,EAAE,CAAC13B,OAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB03B,EAAE,CAACv9B,MAAH,CAAUC,KAA5B,EAAmCs9B,EAAE,CAACv9B,MAAH,CAAUE,MAA7C;AACAq9B,IAAAA,EAAE,CAACx3B,QAAH,CAAa,CAAb,EAAgB,CAAhB,EAAmBw3B,EAAE,CAACv9B,MAAH,CAAUC,KAA7B,EAAoCs9B,EAAE,CAACv9B,MAAH,CAAUE,MAA9C,EAjDgB,CAmDhB;;AAEAkgE,IAAAA,mBAAmB,GAAG,EAAtB;AAEAqB,IAAAA,kBAAkB,GAAG,IAArB;AACAC,IAAAA,oBAAoB,GAAG,EAAvB;AAEArB,IAAAA,wBAAwB,GAAG,EAA3B;AACAC,IAAAA,kBAAkB,GAAG,IAAI3iC,OAAJ,EAArB;AACA4iC,IAAAA,kBAAkB,GAAG,EAArB;AAEAC,IAAAA,cAAc,GAAG,IAAjB;AAEAC,IAAAA,sBAAsB,GAAG,KAAzB;AACAC,IAAAA,eAAe,GAAG,IAAlB;AACAC,IAAAA,oBAAoB,GAAG,IAAvB;AACAC,IAAAA,eAAe,GAAG,IAAlB;AACAC,IAAAA,eAAe,GAAG,IAAlB;AACAC,IAAAA,yBAAyB,GAAG,IAA5B;AACAC,IAAAA,oBAAoB,GAAG,IAAvB;AACAC,IAAAA,oBAAoB,GAAG,IAAvB;AACAC,IAAAA,wBAAwB,GAAG,KAA3B;AAEAC,IAAAA,gBAAgB,GAAG,IAAnB;AACAC,IAAAA,eAAe,GAAG,IAAlB;AAEAC,IAAAA,gBAAgB,GAAG,IAAnB;AAEAC,IAAAA,0BAA0B,GAAG,IAA7B;AACAC,IAAAA,yBAAyB,GAAG,IAA5B;AAEAO,IAAAA,cAAc,CAACrtE,GAAf,CAAoB,CAApB,EAAuB,CAAvB,EAA0B+oC,EAAE,CAACv9B,MAAH,CAAUC,KAApC,EAA2Cs9B,EAAE,CAACv9B,MAAH,CAAUE,MAArD;AACA4hE,IAAAA,eAAe,CAACttE,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B+oC,EAAE,CAACv9B,MAAH,CAAUC,KAArC,EAA4Cs9B,EAAE,CAACv9B,MAAH,CAAUE,MAAtD;AAEAigE,IAAAA,WAAW,CAACvsB,KAAZ;AACA3tC,IAAAA,WAAW,CAAC2tC,KAAZ;AACA1tC,IAAAA,aAAa,CAAC0tC,KAAd;AAEA;;AAED,SAAO;AAENlW,IAAAA,OAAO,EAAE;AACR9gC,MAAAA,KAAK,EAAEujE,WADC;AAERv6D,MAAAA,KAAK,EAAEK,WAFC;AAGR+zB,MAAAA,OAAO,EAAE9zB;AAHD,KAFH;AAQN+uD,IAAAA,MAAM,EAAEA,MARF;AASNgK,IAAAA,OAAO,EAAEA,OATH;AAWNqD,IAAAA,eAAe,EAAEA,eAXX;AAYN/rC,IAAAA,WAAW,EAAEA,WAZP;AAcNksC,IAAAA,UAAU,EAAEA,UAdN;AAgBNrG,IAAAA,WAAW,EAAEA,WAhBP;AAiBN6G,IAAAA,WAAW,EAAEA,WAjBP;AAmBNb,IAAAA,YAAY,EAAEA,YAnBR;AAoBNC,IAAAA,WAAW,EAAEA,WApBP;AAsBNiB,IAAAA,YAAY,EAAEA,YAtBR;AAuBNH,IAAAA,gBAAgB,EAAEA,gBAvBZ;AAyBN7G,IAAAA,cAAc,EAAEA,cAzBV;AA2BNmH,IAAAA,aAAa,EAAEA,aA3BT;AA4BNzB,IAAAA,WAAW,EAAEA,WA5BP;AA6BN8B,IAAAA,aAAa,EAAEA,aA7BT;AA8BNC,IAAAA,oBAAoB,EAAEA,oBA9BhB;AA+BN7B,IAAAA,UAAU,EAAEA,UA/BN;AAgCNoC,IAAAA,UAAU,EAAEA,UAhCN;AAkCNF,IAAAA,YAAY,EAAEA,YAlCR;AAmCNC,IAAAA,YAAY,EAAEA,YAnCR;AAoCNJ,IAAAA,aAAa,EAAEA,aApCT;AAqCNC,IAAAA,aAAa,EAAEA,aArCT;AAsCNC,IAAAA,uBAAuB,EAAEA,uBAtCnB;AAwCNt+D,IAAAA,OAAO,EAAEA,OAxCH;AAyCNE,IAAAA,QAAQ,EAAEA,QAzCJ;AA2CN6tC,IAAAA,KAAK,EAAEA;AA3CD,GAAP;AA+CA;;AAED,SAAS2wB,aAAT,CAAwBC,GAAxB,EAA6BpuC,UAA7B,EAAyCiY,KAAzC,EAAgDpD,UAAhD,EAA4DzN,YAA5D,EAA0EinC,KAA1E,EAAiFtwB,IAAjF,EAAwF;AAAA;;AAEvF,MAAM1W,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AACA,MAAM4X,WAAW,GAAG7X,YAAY,CAAC6X,WAAjC;AACA,MAAMG,cAAc,GAAGhY,YAAY,CAACgY,cAApC;AACA,MAAMD,cAAc,GAAG/X,YAAY,CAAC+X,cAApC;AACA,MAAMS,UAAU,GAAGxY,YAAY,CAACwY,UAAhC;AACA,MAAM0uB,kBAAkB,GAAGtuC,UAAU,CAACye,GAAX,CAAgB,sCAAhB,IAA2Dze,UAAU,CAACiI,GAAX,CAAgB,sCAAhB,CAA3D,GAAsH,IAAjJ;AACA,MAAMsmC,6BAA6B,GAAG,iBAAiB9kE,IAAjB,CAAuB+kE,SAAS,CAACC,SAAjC,CAAtC;;AAEA,MAAMC,cAAc,GAAG,IAAInnC,OAAJ,EAAvB;;AACA,MAAIj+B,OAAJ;;AAEA,MAAMqlE,QAAQ,GAAG,IAAIpnC,OAAJ,EAAjB,CAbuF,CAavD;AAEhC;AACA;AACA;;;AAEA,MAAIqnC,kBAAkB,GAAG,KAAzB;;AAEA,MAAI;AAEHA,IAAAA,kBAAkB,GAAG,OAAOC,eAAP,KAA2B,WAA3B,CACpB;AADoB,OAEf,IAAIA,eAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA4B7kE,UAA5B,CAAwC,IAAxC,CAAF,KAAuD,IAF3D;AAIA,GAND,CAME,OAAQ8kE,GAAR,EAAc,CAEf;AAEA;;AAED,WAASC,YAAT,CAAuBllE,KAAvB,EAA8BC,MAA9B,EAAuC;AAEtC;AAEA,WAAO8kE,kBAAkB,GACxB;AACA,QAAIC,eAAJ,CAAqBhlE,KAArB,EAA4BC,MAA5B,CAFwB,GAEejE,eAAe,CAAE,QAAF,CAFvD;AAIA;;AAED,WAASmpE,WAAT,CAAsBxlE,KAAtB,EAA6BylE,eAA7B,EAA8CC,cAA9C,EAA8DC,OAA9D,EAAwE;AAEvE,QAAIjsD,KAAK,GAAG,CAAZ,CAFuE,CAIvE;;AAEA,QAAK1Z,KAAK,CAACK,KAAN,GAAcslE,OAAd,IAAyB3lE,KAAK,CAACM,MAAN,GAAeqlE,OAA7C,EAAuD;AAEtDjsD,MAAAA,KAAK,GAAGisD,OAAO,GAAGx1E,IAAI,CAACc,GAAL,CAAU+O,KAAK,CAACK,KAAhB,EAAuBL,KAAK,CAACM,MAA7B,CAAlB;AAEA,KAVsE,CAYvE;;;AAEA,QAAKoZ,KAAK,GAAG,CAAR,IAAa+rD,eAAe,KAAK,IAAtC,EAA6C;AAE5C;AAEA,UAAO,OAAO5kE,gBAAP,KAA4B,WAA5B,IAA2Cb,KAAK,YAAYa,gBAA9D,IACF,OAAOV,iBAAP,KAA6B,WAA7B,IAA4CH,KAAK,YAAYG,iBAD3D,IAEF,OAAOW,WAAP,KAAuB,WAAvB,IAAsCd,KAAK,YAAYc,WAF1D,EAE0E;AAEzE,YAAMpO,KAAK,GAAG+yE,eAAe,GAAG9xE,eAAH,GAAqBxD,IAAI,CAACuC,KAAvD;AAEA,YAAM2N,KAAK,GAAG3N,KAAK,CAAEgnB,KAAK,GAAG1Z,KAAK,CAACK,KAAhB,CAAnB;AACA,YAAMC,MAAM,GAAG5N,KAAK,CAAEgnB,KAAK,GAAG1Z,KAAK,CAACM,MAAhB,CAApB;AAEA,YAAKR,OAAO,KAAK7Q,SAAjB,EAA6B6Q,OAAO,GAAGylE,YAAY,CAAEllE,KAAF,EAASC,MAAT,CAAtB,CAP4C,CASzE;;AAEA,YAAMF,MAAM,GAAGslE,cAAc,GAAGH,YAAY,CAAEllE,KAAF,EAASC,MAAT,CAAf,GAAmCR,OAAhE;AAEAM,QAAAA,MAAM,CAACC,KAAP,GAAeA,KAAf;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgBA,MAAhB;AAEA,YAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAmB,IAAnB,CAAhB;AACAD,QAAAA,OAAO,CAACI,SAAR,CAAmBX,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCK,KAAhC,EAAuCC,MAAvC;AAEAzL,QAAAA,OAAO,CAACC,IAAR,CAAc,yDAAyDkL,KAAK,CAACK,KAA/D,GAAuE,GAAvE,GAA6EL,KAAK,CAACM,MAAnF,GAA4F,QAA5F,GAAuGD,KAAvG,GAA+G,GAA/G,GAAqHC,MAArH,GAA8H,IAA5I;AAEA,eAAOF,MAAP;AAEA,OAzBD,MAyBO;AAEN,YAAK,UAAUJ,KAAf,EAAuB;AAEtBnL,UAAAA,OAAO,CAACC,IAAR,CAAc,2DAA2DkL,KAAK,CAACK,KAAjE,GAAyE,GAAzE,GAA+EL,KAAK,CAACM,MAArF,GAA8F,IAA5G;AAEA;;AAED,eAAON,KAAP;AAEA;AAED;;AAED,WAAOA,KAAP;AAEA;;AAED,WAAS4lE,cAAT,CAAyB5lE,KAAzB,EAAiC;AAEhC,WAAO3M,YAAY,CAAE2M,KAAK,CAACK,KAAR,CAAZ,IAA+BhN,YAAY,CAAE2M,KAAK,CAACM,MAAR,CAAlD;AAEA;;AAED,WAASulE,sBAAT,CAAiCz/D,OAAjC,EAA2C;AAE1C,QAAKy3B,QAAL,EAAgB,OAAO,KAAP;AAEhB,WAASz3B,OAAO,CAAC/D,KAAR,KAAkBxa,mBAAlB,IAAyCue,OAAO,CAAC9D,KAAR,KAAkBza,mBAA7D,IACJue,OAAO,CAAC5D,SAAR,KAAsBza,aAAtB,IAAuCqe,OAAO,CAAC5D,SAAR,KAAsBpa,YADhE;AAGA;;AAED,WAAS09E,2BAAT,CAAsC1/D,OAAtC,EAA+C2/D,YAA/C,EAA8D;AAE7D,WAAO3/D,OAAO,CAAClD,eAAR,IAA2B6iE,YAA3B,IACN3/D,OAAO,CAAC5D,SAAR,KAAsBza,aADhB,IACiCqe,OAAO,CAAC5D,SAAR,KAAsBpa,YAD9D;AAGA;;AAED,WAAS49E,cAAT,CAAyBv2E,MAAzB,EAAkC;AAEjCm1E,IAAAA,GAAG,CAACoB,cAAJ,CAAoBv2E,MAApB;AAEA;;AAED,WAASw2E,iBAAT,CAA4BC,kBAA5B,EAAgDC,QAAhD,EAA0DC,MAA1D,EAAkEzjE,QAAlE,EAAqG;AAAA,QAAzB6xD,cAAyB,uEAAR,KAAQ;AAEpG,QAAK32B,QAAQ,KAAK,KAAlB,EAA0B,OAAOsoC,QAAP;;AAE1B,QAAKD,kBAAkB,KAAK,IAA5B,EAAmC;AAElC,UAAKtB,GAAG,CAAEsB,kBAAF,CAAH,KAA8Bj3E,SAAnC,EAA+C,OAAO21E,GAAG,CAAEsB,kBAAF,CAAV;AAE/CrxE,MAAAA,OAAO,CAACC,IAAR,CAAc,8EAA8EoxE,kBAA9E,GAAmG,IAAjH;AAEA;;AAED,QAAInjE,cAAc,GAAGojE,QAArB;;AAEA,QAAKA,QAAQ,KAAK,IAAlB,EAAyB;AAExB,UAAKC,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AAEvB;;AAED,QAAKojE,QAAQ,KAAK,KAAlB,EAA0B;AAEzB,UAAKC,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AAEvB;;AAED,QAAKojE,QAAQ,KAAK,IAAlB,EAAyB;AAExB,UAAKC,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAG,KAAjB;AACvB,UAAKqjE,MAAM,KAAK,IAAhB,EAAuBrjE,cAAc,GAAKJ,QAAQ,KAAKlW,YAAb,IAA6B+nE,cAAc,KAAK,KAAlD,GAA4D,KAA5D,GAAoE,KAArF;AACvB,UAAK4R,MAAM,KAAK,KAAhB,EAAwBrjE,cAAc,GAAG,KAAjB;AACxB,UAAKqjE,MAAM,KAAK,KAAhB,EAAwBrjE,cAAc,GAAG,KAAjB;AAExB;;AAED,QAAKA,cAAc,KAAK,KAAnB,IAA4BA,cAAc,KAAK,KAA/C,IACJA,cAAc,KAAK,KADf,IACwBA,cAAc,KAAK,KAD3C,IAEJA,cAAc,KAAK,KAFf,IAEwBA,cAAc,KAAK,KAFhD,EAEwD;AAEvDyzB,MAAAA,UAAU,CAACiI,GAAX,CAAgB,wBAAhB;AAEA;;AAED,WAAO17B,cAAP;AAEA;;AAED,WAASsjE,YAAT,CAAuBjgE,OAAvB,EAAgCpG,KAAhC,EAAuC+lE,YAAvC,EAAsD;AAErD,QAAKD,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAA3B,KAAyD,IAAzD,IAAmE3/D,OAAO,CAACkgE,oBAAR,IAAgClgE,OAAO,CAAC5D,SAAR,KAAsBza,aAAtD,IAAuEqe,OAAO,CAAC5D,SAAR,KAAsBpa,YAArK,EAAsL;AAErL,aAAO+H,IAAI,CAAC2qD,IAAL,CAAW3qD,IAAI,CAACc,GAAL,CAAU+O,KAAK,CAACK,KAAhB,EAAuBL,KAAK,CAACM,MAA7B,CAAX,IAAqD,CAA5D;AAEA,KAJD,MAIO,IAAK8F,OAAO,CAACtD,OAAR,KAAoB7T,SAApB,IAAiCmX,OAAO,CAACtD,OAAR,CAAgBhT,MAAhB,GAAyB,CAA/D,EAAmE;AAEzE;AAEA,aAAOsW,OAAO,CAACtD,OAAR,CAAgBhT,MAAvB;AAEA,KANM,MAMA,IAAKsW,OAAO,CAACmgE,mBAAR,IAA+B7kE,KAAK,CAACC,OAAN,CAAeyE,OAAO,CAACpG,KAAvB,CAApC,EAAqE;AAE3E,aAAOA,KAAK,CAAC8C,OAAN,CAAchT,MAArB;AAEA,KAJM,MAIA;AAEN;AAEA,aAAO,CAAP;AAEA;AAED,GAhNsF,CAkNvF;;;AAEA,WAAS02E,cAAT,CAAyBnsE,CAAzB,EAA6B;AAE5B,QAAKA,CAAC,KAAKtS,aAAN,IAAuBsS,CAAC,KAAKrS,0BAA7B,IAA2DqS,CAAC,KAAKnS,yBAAtE,EAAkG;AAEjG,aAAO,IAAP;AAEA;;AAED,WAAO,IAAP;AAEA,GA9NsF,CAgOvF;;;AAEA,WAASkwD,gBAAT,CAA2B5oD,KAA3B,EAAmC;AAElC,QAAM4W,OAAO,GAAG5W,KAAK,CAACC,MAAtB;AAEA2W,IAAAA,OAAO,CAACiyC,mBAAR,CAA6B,SAA7B,EAAwCD,gBAAxC;AAEAquB,IAAAA,iBAAiB,CAAErgE,OAAF,CAAjB;;AAEA,QAAKA,OAAO,CAACouD,cAAb,EAA8B;AAE7B0Q,MAAAA,cAAc,CAACvmC,MAAf,CAAuBv4B,OAAvB;AAEA;AAED;;AAED,WAASsgE,qBAAT,CAAgCl3E,KAAhC,EAAwC;AAEvC,QAAMmpC,YAAY,GAAGnpC,KAAK,CAACC,MAA3B;AAEAkpC,IAAAA,YAAY,CAAC0f,mBAAb,CAAkC,SAAlC,EAA6CquB,qBAA7C;AAEAC,IAAAA,sBAAsB,CAAEhuC,YAAF,CAAtB;AAEA,GA1PsF,CA4PvF;;;AAEA,WAAS8tC,iBAAT,CAA4BrgE,OAA5B,EAAsC;AAErC,QAAMwgE,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;AAEA,QAAKwgE,iBAAiB,CAACC,WAAlB,KAAkC53E,SAAvC,EAAmD,OAJd,CAMrC;;AAEA,QAAM4O,MAAM,GAAGuI,OAAO,CAACvI,MAAvB;;AACA,QAAMipE,aAAa,GAAG3B,QAAQ,CAAC1mC,GAAT,CAAc5gC,MAAd,CAAtB;;AAEA,QAAKipE,aAAL,EAAqB;AAEpB,UAAM9C,YAAY,GAAG8C,aAAa,CAAEF,iBAAiB,CAACG,UAApB,CAAlC;AACA/C,MAAAA,YAAY,CAACtS,SAAb,GAHoB,CAKpB;;AAEA,UAAKsS,YAAY,CAACtS,SAAb,KAA2B,CAAhC,EAAoC;AAEnCsV,QAAAA,aAAa,CAAE5gE,OAAF,CAAb;AAEA,OAXmB,CAapB;;;AAEA,UAAK1Q,MAAM,CAAC67B,IAAP,CAAau1C,aAAb,EAA6Bh3E,MAA7B,KAAwC,CAA7C,EAAiD;AAEhDq1E,QAAAA,QAAQ,CAACxmC,MAAT,CAAiB9gC,MAAjB;AAEA;AAED;;AAEDwtC,IAAAA,UAAU,CAAC9sB,MAAX,CAAmBnY,OAAnB;AAEA;;AAED,WAAS4gE,aAAT,CAAwB5gE,OAAxB,EAAkC;AAEjC,QAAMwgE,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;;AACAw+D,IAAAA,GAAG,CAACoC,aAAJ,CAAmBJ,iBAAiB,CAACK,cAArC;;AAEA,QAAMppE,MAAM,GAAGuI,OAAO,CAACvI,MAAvB;;AACA,QAAMipE,aAAa,GAAG3B,QAAQ,CAAC1mC,GAAT,CAAc5gC,MAAd,CAAtB;;AACA,WAAOipE,aAAa,CAAEF,iBAAiB,CAACG,UAApB,CAApB;AAEAxyB,IAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ;AAEA;;AAED,WAAS4iE,sBAAT,CAAiChuC,YAAjC,EAAgD;AAE/C,QAAMvyB,OAAO,GAAGuyB,YAAY,CAACvyB,OAA7B;AAEA,QAAM8gE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACA,QAAMiuC,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;;AAEA,QAAKwgE,iBAAiB,CAACK,cAAlB,KAAqCh4E,SAA1C,EAAsD;AAErD21E,MAAAA,GAAG,CAACoC,aAAJ,CAAmBJ,iBAAiB,CAACK,cAArC;;AAEA1yB,MAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ;AAEA;;AAED,QAAK40B,YAAY,CAACpyB,YAAlB,EAAiC;AAEhCoyB,MAAAA,YAAY,CAACpyB,YAAb,CAA0BE,OAA1B;AAEA;;AAED,QAAKkyB,YAAY,CAACC,uBAAlB,EAA4C;AAE3C,WAAM,IAAIhpC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9Bg1E,QAAAA,GAAG,CAACuC,iBAAJ,CAAuBD,sBAAsB,CAACE,kBAAvB,CAA2Cx3E,CAA3C,CAAvB;;AACA,YAAKs3E,sBAAsB,CAACG,kBAA5B,EAAiDzC,GAAG,CAAC0C,kBAAJ,CAAwBJ,sBAAsB,CAACG,kBAAvB,CAA2Cz3E,CAA3C,CAAxB;AAEjD;AAED,KATD,MASO;AAENg1E,MAAAA,GAAG,CAACuC,iBAAJ,CAAuBD,sBAAsB,CAACE,kBAA9C;;AACA,UAAKF,sBAAsB,CAACG,kBAA5B,EAAiDzC,GAAG,CAAC0C,kBAAJ,CAAwBJ,sBAAsB,CAACG,kBAA/C;AACjD,UAAKH,sBAAsB,CAACK,8BAA5B,EAA6D3C,GAAG,CAACuC,iBAAJ,CAAuBD,sBAAsB,CAACK,8BAA9C;;AAE7D,UAAKL,sBAAsB,CAACM,wBAA5B,EAAuD;AAEtD,aAAM,IAAI53E,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGs3E,sBAAsB,CAACM,wBAAvB,CAAgD13E,MAArE,EAA6EF,IAAC,EAA9E,EAAoF;AAEnF,cAAKs3E,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAAL,EAA4Dg1E,GAAG,CAAC0C,kBAAJ,CAAwBJ,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAAxB;AAE5D;AAED;;AAED,UAAKs3E,sBAAsB,CAACO,wBAA5B,EAAuD7C,GAAG,CAAC0C,kBAAJ,CAAwBJ,sBAAsB,CAACO,wBAA/C;AAEvD;;AAED,QAAK9uC,YAAY,CAACpxB,4BAAlB,EAAiD;AAEhD,WAAM,IAAI3X,IAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGpB,OAAO,CAACtW,MAA9B,EAAsCF,IAAC,GAAG4X,EAA1C,EAA8C5X,IAAC,EAA/C,EAAqD;AAEpD,YAAM83E,oBAAoB,GAAGr8B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAO,CAAExW,IAAF,CAAvB,CAA7B;;AAEA,YAAK83E,oBAAoB,CAACT,cAA1B,EAA2C;AAE1CrC,UAAAA,GAAG,CAACoC,aAAJ,CAAmBU,oBAAoB,CAACT,cAAxC;;AAEA1yB,UAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ;AAEA;;AAEDsnC,QAAAA,UAAU,CAAC9sB,MAAX,CAAmBnY,OAAO,CAAExW,IAAF,CAA1B;AAEA;AAED;;AAEDy7C,IAAAA,UAAU,CAAC9sB,MAAX,CAAmBnY,OAAnB;AACAilC,IAAAA,UAAU,CAAC9sB,MAAX,CAAmBoa,YAAnB;AAEA,GA1XsF,CA4XvF;;;AAEA,MAAIgvC,YAAY,GAAG,CAAnB;;AAEA,WAASC,iBAAT,GAA6B;AAE5BD,IAAAA,YAAY,GAAG,CAAf;AAEA;;AAED,WAASvkB,mBAAT,GAA+B;AAE9B,QAAMykB,WAAW,GAAGF,YAApB;;AAEA,QAAKE,WAAW,IAAIpyB,WAApB,EAAkC;AAEjC5gD,MAAAA,OAAO,CAACC,IAAR,CAAc,wCAAwC+yE,WAAxC,GAAsD,8CAAtD,GAAuGpyB,WAArH;AAEA;;AAEDkyB,IAAAA,YAAY,IAAI,CAAhB;AAEA,WAAOE,WAAP;AAEA;;AAED,WAASC,kBAAT,CAA6B1hE,OAA7B,EAAuC;AAEtC,QAAM1W,KAAK,GAAG,EAAd;AAEAA,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC/D,KAApB;AACA3S,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC9D,KAApB;AACA5S,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC7D,SAApB;AACA7S,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC5D,SAApB;AACA9S,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC1D,UAApB;AACAhT,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAACrD,cAApB;AACArT,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC3D,MAApB;AACA/S,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAACtX,IAApB;AACAY,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAClD,eAApB;AACAxT,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAACjD,gBAApB;AACAzT,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAChD,KAApB;AACA1T,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAAC/C,eAApB;AACA3T,IAAAA,KAAK,CAACN,IAAN,CAAYgX,OAAO,CAACzD,QAApB;AAEA,WAAOjT,KAAK,CAAC+5D,IAAN,EAAP;AAEA,GA1asF,CA4avF;;;AAEA,WAAShE,YAAT,CAAuBr/C,OAAvB,EAAgC2hE,IAAhC,EAAuC;AAEtC,QAAMnB,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;AAEA,QAAKA,OAAO,CAACouD,cAAb,EAA8BwT,kBAAkB,CAAE5hE,OAAF,CAAlB;;AAE9B,QAAKA,OAAO,CAAC5C,qBAAR,KAAkC,KAAlC,IAA2C4C,OAAO,CAAChF,OAAR,GAAkB,CAA7D,IAAkEwlE,iBAAiB,CAACqB,SAAlB,KAAgC7hE,OAAO,CAAChF,OAA/G,EAAyH;AAExH,UAAMpB,KAAK,GAAGoG,OAAO,CAACpG,KAAtB;;AAEA,UAAKA,KAAK,KAAK,IAAf,EAAsB;AAErBnL,QAAAA,OAAO,CAACC,IAAR,CAAc,yEAAd;AAEA,OAJD,MAIO,IAAKkL,KAAK,CAACkoE,QAAN,KAAmB,KAAxB,EAAgC;AAEtCrzE,QAAAA,OAAO,CAACC,IAAR,CAAc,wEAAd;AAEA,OAJM,MAIA;AAENqzE,QAAAA,aAAa,CAAEvB,iBAAF,EAAqBxgE,OAArB,EAA8B2hE,IAA9B,CAAb;AACA;AAEA;AAED;;AAEDt5B,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmB,IAAnB,EAAyBwE,iBAAiB,CAACK,cAA3C;AAEA;;AAED,WAASlhB,iBAAT,CAA4B3/C,OAA5B,EAAqC2hE,IAArC,EAA4C;AAE3C,QAAMnB,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;;AAEA,QAAKA,OAAO,CAAChF,OAAR,GAAkB,CAAlB,IAAuBwlE,iBAAiB,CAACqB,SAAlB,KAAgC7hE,OAAO,CAAChF,OAApE,EAA8E;AAE7E+mE,MAAAA,aAAa,CAAEvB,iBAAF,EAAqBxgE,OAArB,EAA8B2hE,IAA9B,CAAb;AACA;AAEA;;AAEDt5B,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmB,KAAnB,EAA0BwE,iBAAiB,CAACK,cAA5C;AAEA;;AAED,WAASthB,YAAT,CAAuBv/C,OAAvB,EAAgC2hE,IAAhC,EAAuC;AAEtC,QAAMnB,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;;AAEA,QAAKA,OAAO,CAAChF,OAAR,GAAkB,CAAlB,IAAuBwlE,iBAAiB,CAACqB,SAAlB,KAAgC7hE,OAAO,CAAChF,OAApE,EAA8E;AAE7E+mE,MAAAA,aAAa,CAAEvB,iBAAF,EAAqBxgE,OAArB,EAA8B2hE,IAA9B,CAAb;AACA;AAEA;;AAEDt5B,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmB,KAAnB,EAA0BwE,iBAAiB,CAACK,cAA5C;AAEA;;AAED,WAASphB,cAAT,CAAyBz/C,OAAzB,EAAkC2hE,IAAlC,EAAyC;AAExC,QAAMnB,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;;AAEA,QAAKA,OAAO,CAAChF,OAAR,GAAkB,CAAlB,IAAuBwlE,iBAAiB,CAACqB,SAAlB,KAAgC7hE,OAAO,CAAChF,OAApE,EAA8E;AAE7EgnE,MAAAA,iBAAiB,CAAExB,iBAAF,EAAqBxgE,OAArB,EAA8B2hE,IAA9B,CAAjB;AACA;AAEA;;AAEDt5B,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmB,KAAnB,EAA0BwE,iBAAiB,CAACK,cAA5C;AAEA;;AAED,MAAMoB,YAAY,uDACfzgF,cADe,EACG,KADH,kCAEfC,mBAFe,EAEQ,KAFR,kCAGfC,sBAHe,EAGW,KAHX,iBAAlB;AAMA,MAAMwgF,UAAU,mDACbvgF,aADa,EACI,IADJ,gCAEbC,0BAFa,EAEiB,IAFjB,gCAGbE,yBAHa,EAGgB,IAHhB,gCAKbE,YALa,EAKG,IALH,gCAMbC,yBANa,EAMgB,IANhB,gCAObE,wBAPa,EAOe,IAPf,eAAhB;;AAUA,WAASggF,oBAAT,CAA+BC,WAA/B,EAA4CpiE,OAA5C,EAAqD2/D,YAArD,EAAoE;AAEnE,QAAKA,YAAL,EAAoB;AAEnBnB,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuCH,YAAY,CAAEjiE,OAAO,CAAC/D,KAAV,CAAnD;;AACAuiE,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuCH,YAAY,CAAEjiE,OAAO,CAAC9D,KAAV,CAAnD;;AAEA,UAAKkmE,WAAW,KAAK,KAAhB,IAAyBA,WAAW,KAAK,KAA9C,EAAsD;AAErD5D,QAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuCH,YAAY,CAAEjiE,OAAO,CAACU,KAAV,CAAnD;AAEA;;AAED89D,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuCF,UAAU,CAAEliE,OAAO,CAAC7D,SAAV,CAAjD;;AACAqiE,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuCF,UAAU,CAAEliE,OAAO,CAAC5D,SAAV,CAAjD;AAEA,KAdD,MAcO;AAENoiE,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuC,KAAvC;;AACA5D,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuC,KAAvC;;AAEA,UAAKA,WAAW,KAAK,KAAhB,IAAyBA,WAAW,KAAK,KAA9C,EAAsD;AAErD5D,QAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuC,KAAvC;AAEA;;AAED,UAAKpiE,OAAO,CAAC/D,KAAR,KAAkBxa,mBAAlB,IAAyCue,OAAO,CAAC9D,KAAR,KAAkBza,mBAAhE,EAAsF;AAErFgN,QAAAA,OAAO,CAACC,IAAR,CAAc,+HAAd;AAEA;;AAED8vE,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuChC,cAAc,CAAEpgE,OAAO,CAAC7D,SAAV,CAArD;;AACAqiE,MAAAA,GAAG,CAACvC,aAAJ,CAAmBmG,WAAnB,EAAgC,KAAhC,EAAuChC,cAAc,CAAEpgE,OAAO,CAAC5D,SAAV,CAArD;;AAEA,UAAK4D,OAAO,CAAC5D,SAAR,KAAsBza,aAAtB,IAAuCqe,OAAO,CAAC5D,SAAR,KAAsBpa,YAAlE,EAAiF;AAEhFyM,QAAAA,OAAO,CAACC,IAAR,CAAc,iIAAd;AAEA;AAED;;AAED,QAAK0hC,UAAU,CAACye,GAAX,CAAgB,gCAAhB,MAAuD,IAA5D,EAAmE;AAElE,UAAMzE,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,gCAAhB,CAAlB;AAEA,UAAKr4B,OAAO,CAACtX,IAAR,KAAiB/F,SAAjB,IAA8BytC,UAAU,CAACye,GAAX,CAAgB,0BAAhB,MAAiD,KAApF,EAA4F,OAJ1B,CAIkC;;AACpG,UAAKpX,QAAQ,KAAK,KAAb,IAAwBz3B,OAAO,CAACtX,IAAR,KAAiB9F,aAAjB,IAAkCwtC,UAAU,CAACye,GAAX,CAAgB,+BAAhB,MAAsD,KAArH,EAA+H,OAL7D,CAKqE;;AAEvI,UAAK7uC,OAAO,CAAC1D,UAAR,GAAqB,CAArB,IAA0B2oC,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,EAA0BqiE,mBAAzD,EAA+E;AAE9E7D,QAAAA,GAAG,CAAC8D,aAAJ,CAAmBF,WAAnB,EAAgCh4B,SAAS,CAACm4B,0BAA1C,EAAsEx4E,IAAI,CAACa,GAAL,CAAUoV,OAAO,CAAC1D,UAAlB,EAA8Bk7B,YAAY,CAACoX,gBAAb,EAA9B,CAAtE;;AACA3J,QAAAA,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,EAA0BqiE,mBAA1B,GAAgDriE,OAAO,CAAC1D,UAAxD;AAEA;AAED;AAED;;AAED,WAASkmE,WAAT,CAAsBhC,iBAAtB,EAAyCxgE,OAAzC,EAAmD;AAElD,QAAIyiE,WAAW,GAAG,KAAlB;;AAEA,QAAKjC,iBAAiB,CAACC,WAAlB,KAAkC53E,SAAvC,EAAmD;AAElD23E,MAAAA,iBAAiB,CAACC,WAAlB,GAAgC,IAAhC;AAEAzgE,MAAAA,OAAO,CAAC+xC,gBAAR,CAA0B,SAA1B,EAAqCC,gBAArC;AAEA,KAViD,CAYlD;;;AAEA,QAAMv6C,MAAM,GAAGuI,OAAO,CAACvI,MAAvB;;AACA,QAAIipE,aAAa,GAAG3B,QAAQ,CAAC1mC,GAAT,CAAc5gC,MAAd,CAApB;;AAEA,QAAKipE,aAAa,KAAK73E,SAAvB,EAAmC;AAElC63E,MAAAA,aAAa,GAAG,EAAhB;;AACA3B,MAAAA,QAAQ,CAACvwE,GAAT,CAAciJ,MAAd,EAAsBipE,aAAtB;AAEA,KAtBiD,CAwBlD;;;AAEA,QAAMgC,eAAe,GAAGhB,kBAAkB,CAAE1hE,OAAF,CAA1C;;AAEA,QAAK0iE,eAAe,KAAKlC,iBAAiB,CAACG,UAA3C,EAAwD;AAEvD;AAEA,UAAKD,aAAa,CAAEgC,eAAF,CAAb,KAAqC75E,SAA1C,EAAsD;AAErD;AAEA63E,QAAAA,aAAa,CAAEgC,eAAF,CAAb,GAAmC;AAClC1iE,UAAAA,OAAO,EAAEw+D,GAAG,CAACzC,aAAJ,EADyB;AAElCzQ,UAAAA,SAAS,EAAE;AAFuB,SAAnC;AAKAnd,QAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ,GATqD,CAWrD;AACA;;AAEA8kE,QAAAA,WAAW,GAAG,IAAd;AAEA;;AAED/B,MAAAA,aAAa,CAAEgC,eAAF,CAAb,CAAiCpX,SAAjC,GAtBuD,CAwBvD;AACA;;AAEA,UAAMsS,YAAY,GAAG8C,aAAa,CAAEF,iBAAiB,CAACG,UAApB,CAAlC;;AAEA,UAAK/C,YAAY,KAAK/0E,SAAtB,EAAkC;AAEjC63E,QAAAA,aAAa,CAAEF,iBAAiB,CAACG,UAApB,CAAb,CAA8CrV,SAA9C;;AAEA,YAAKsS,YAAY,CAACtS,SAAb,KAA2B,CAAhC,EAAoC;AAEnCsV,UAAAA,aAAa,CAAE5gE,OAAF,CAAb;AAEA;AAED,OAvCsD,CAyCvD;;;AAEAwgE,MAAAA,iBAAiB,CAACG,UAAlB,GAA+B+B,eAA/B;AACAlC,MAAAA,iBAAiB,CAACK,cAAlB,GAAmCH,aAAa,CAAEgC,eAAF,CAAb,CAAiC1iE,OAApE;AAEA;;AAED,WAAOyiE,WAAP;AAEA;;AAED,WAASV,aAAT,CAAwBvB,iBAAxB,EAA2CxgE,OAA3C,EAAoD2hE,IAApD,EAA2D;AAE1D,QAAIS,WAAW,GAAG,IAAlB;AAEA,QAAKpiE,OAAO,CAACS,kBAAb,EAAkC2hE,WAAW,GAAG,KAAd;AAClC,QAAKpiE,OAAO,CAACc,eAAb,EAA+BshE,WAAW,GAAG,KAAd;AAE/B,QAAMK,WAAW,GAAGD,WAAW,CAAEhC,iBAAF,EAAqBxgE,OAArB,CAA/B;AACA,QAAMvI,MAAM,GAAGuI,OAAO,CAACvI,MAAvB;AAEA4wC,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmBoG,WAAnB,EAAgC5B,iBAAiB,CAACK,cAAlD;;AAEA,QAAKppE,MAAM,CAACuD,OAAP,KAAmBvD,MAAM,CAACkrE,gBAA1B,IAA8CF,WAAW,KAAK,IAAnE,EAA0E;AAEzEjE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB5iE,OAAO,CAAChD,KAAhC;;AACAwhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB5iE,OAAO,CAACjD,gBAAhC;;AACAyhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuB5iE,OAAO,CAAC/C,eAA/B;;AACAuhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB,CAAxB;;AAEA,UAAMvD,eAAe,GAAGI,sBAAsB,CAAEz/D,OAAF,CAAtB,IAAqCw/D,cAAc,CAAEx/D,OAAO,CAACpG,KAAV,CAAd,KAAoC,KAAjG;AACA,UAAIA,KAAK,GAAGwlE,WAAW,CAAEp/D,OAAO,CAACpG,KAAV,EAAiBylE,eAAjB,EAAkC,KAAlC,EAAyC9vB,cAAzC,CAAvB;AACA31C,MAAAA,KAAK,GAAGipE,gBAAgB,CAAE7iE,OAAF,EAAWpG,KAAX,CAAxB;AAEA,UAAM+lE,YAAY,GAAGH,cAAc,CAAE5lE,KAAF,CAAd,IAA2B69B,QAAhD;AAAA,UACCsoC,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAAC3D,MAAvB,EAA+B2D,OAAO,CAACzD,QAAvC,CADZ;AAGA,UAAIyjE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAAb;AAAA,UACCo6E,gBAAgB,GAAGjD,iBAAiB,CAAE7/D,OAAO,CAACrD,cAAV,EAA0BojE,QAA1B,EAAoCC,MAApC,EAA4ChgE,OAAO,CAACzD,QAApD,EAA8DyD,OAAO,CAACouD,cAAtE,CADrC;AAGA+T,MAAAA,oBAAoB,CAAEC,WAAF,EAAepiE,OAAf,EAAwB2/D,YAAxB,CAApB;AAEA,UAAIoD,MAAJ;AACA,UAAMrmE,OAAO,GAAGsD,OAAO,CAACtD,OAAxB;AAEA,UAAMsmE,aAAa,GAAKvrC,QAAQ,IAAIz3B,OAAO,CAACouD,cAAR,KAA2B,IAA/D;AACA,UAAM6U,cAAc,GAAKxrE,MAAM,CAACkrE,gBAAP,KAA4B95E,SAA9B,IAA+C45E,WAAW,KAAK,IAAtF;AACA,UAAMS,MAAM,GAAGjD,YAAY,CAAEjgE,OAAF,EAAWpG,KAAX,EAAkB+lE,YAAlB,CAA3B;;AAEA,UAAK3/D,OAAO,CAACmjE,cAAb,EAA8B;AAE7B;AAEAL,QAAAA,gBAAgB,GAAG,IAAnB;;AAEA,YAAKrrC,QAAL,EAAgB;AAEf,cAAKz3B,OAAO,CAACtX,IAAR,KAAiB/F,SAAtB,EAAkC;AAEjCmgF,YAAAA,gBAAgB,GAAG,KAAnB;AAEA,WAJD,MAIO,IAAK9iE,OAAO,CAACtX,IAAR,KAAiBhG,eAAtB,EAAwC;AAE9CogF,YAAAA,gBAAgB,GAAG,KAAnB;AAEA,WAJM,MAIA,IAAK9iE,OAAO,CAACtX,IAAR,KAAiB3F,kBAAtB,EAA2C;AAEjD+/E,YAAAA,gBAAgB,GAAG,KAAnB;AAEA,WAJM,MAIA;AAENA,YAAAA,gBAAgB,GAAG,KAAnB,CAFM,CAEoB;AAE1B;AAED,SApBD,MAoBO;AAEN,cAAK9iE,OAAO,CAACtX,IAAR,KAAiB/F,SAAtB,EAAkC;AAEjC8L,YAAAA,OAAO,CAACkD,KAAR,CAAe,8DAAf;AAEA;AAED,SAlC4B,CAoC7B;;;AAEA,YAAKqO,OAAO,CAAC3D,MAAR,KAAmBhZ,WAAnB,IAAkCy/E,gBAAgB,KAAK,IAA5D,EAAmE;AAElE;AACA;AACA;AACA,cAAK9iE,OAAO,CAACtX,IAAR,KAAiBlG,iBAAjB,IAAsCwd,OAAO,CAACtX,IAAR,KAAiBhG,eAA5D,EAA8E;AAE7E+L,YAAAA,OAAO,CAACC,IAAR,CAAc,6FAAd;AAEAsR,YAAAA,OAAO,CAACtX,IAAR,GAAehG,eAAf;AACAs9E,YAAAA,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAAT;AAEA;AAED;;AAED,YAAKsX,OAAO,CAAC3D,MAAR,KAAmB/Y,kBAAnB,IAAyCw/E,gBAAgB,KAAK,IAAnE,EAA0E;AAEzE;AACA;AACAA,UAAAA,gBAAgB,GAAG,KAAnB,CAJyE,CAMzE;AACA;AACA;;AACA,cAAK9iE,OAAO,CAACtX,IAAR,KAAiB3F,kBAAtB,EAA2C;AAE1C0L,YAAAA,OAAO,CAACC,IAAR,CAAc,kFAAd;AAEAsR,YAAAA,OAAO,CAACtX,IAAR,GAAe3F,kBAAf;AACAi9E,YAAAA,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAAT;AAEA;AAED,SAxE4B,CA0E7B;;;AAEA,YAAKu6E,cAAL,EAAsB;AAErB,cAAKD,aAAL,EAAqB;AAEpB36B,YAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B,CAA1B,EAA6B0E,gBAA7B,EAA+ClpE,KAAK,CAACK,KAArD,EAA4DL,KAAK,CAACM,MAAlE;AAEA,WAJD,MAIO;AAENmuC,YAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB,CAAxB,EAA2B4G,gBAA3B,EAA6ClpE,KAAK,CAACK,KAAnD,EAA0DL,KAAK,CAACM,MAAhE,EAAwE,CAAxE,EAA2E6lE,QAA3E,EAAqFC,MAArF,EAA6F,IAA7F;AAEA;AAED;AAED,OA1FD,MA0FO,IAAKhgE,OAAO,CAACxE,aAAb,EAA6B;AAEnC;AACA;AACA;AAEA,YAAKkB,OAAO,CAAChT,MAAR,GAAiB,CAAjB,IAAsBi2E,YAA3B,EAA0C;AAEzC,cAAKqD,aAAa,IAAIC,cAAtB,EAAuC;AAEtC56B,YAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDpmE,OAAO,CAAE,CAAF,CAAP,CAAazC,KAAjE,EAAwEyC,OAAO,CAAE,CAAF,CAAP,CAAaxC,MAArF;AAEA;;AAED,eAAM,IAAI1Q,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG1E,OAAO,CAAChT,MAA9B,EAAsCF,CAAC,GAAG4X,EAA1C,EAA8C5X,CAAC,EAA/C,EAAqD;AAEpDu5E,YAAAA,MAAM,GAAGrmE,OAAO,CAAElT,CAAF,CAAhB;;AAEA,gBAAKw5E,aAAL,EAAqB;AAEpB36B,cAAAA,KAAK,CAAC41B,aAAN,CAAqB,IAArB,EAA2Bz0E,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCu5E,MAAM,CAAC9oE,KAA3C,EAAkD8oE,MAAM,CAAC7oE,MAAzD,EAAiE6lE,QAAjE,EAA2EC,MAA3E,EAAmF+C,MAAM,CAACloE,IAA1F;AAEA,aAJD,MAIO;AAENwtC,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB1yE,CAAxB,EAA2Bs5E,gBAA3B,EAA6CC,MAAM,CAAC9oE,KAApD,EAA2D8oE,MAAM,CAAC7oE,MAAlE,EAA0E,CAA1E,EAA6E6lE,QAA7E,EAAuFC,MAAvF,EAA+F+C,MAAM,CAACloE,IAAtG;AAEA;AAED;;AAEDmF,UAAAA,OAAO,CAAClD,eAAR,GAA0B,KAA1B;AAEA,SA1BD,MA0BO;AAEN,cAAKkmE,aAAL,EAAqB;AAEpB,gBAAKC,cAAL,EAAsB;AAErB56B,cAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDlpE,KAAK,CAACK,KAA1D,EAAiEL,KAAK,CAACM,MAAvE;AAEA;;AAEDmuC,YAAAA,KAAK,CAAC41B,aAAN,CAAqB,IAArB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCrkE,KAAK,CAACK,KAA1C,EAAiDL,KAAK,CAACM,MAAvD,EAA+D6lE,QAA/D,EAAyEC,MAAzE,EAAiFpmE,KAAK,CAACiB,IAAvF;AAEA,WAVD,MAUO;AAENwtC,YAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB,CAAxB,EAA2B4G,gBAA3B,EAA6ClpE,KAAK,CAACK,KAAnD,EAA0DL,KAAK,CAACM,MAAhE,EAAwE,CAAxE,EAA2E6lE,QAA3E,EAAqFC,MAArF,EAA6FpmE,KAAK,CAACiB,IAAnG;AAEA;AAED;AAED,OApDM,MAoDA,IAAKmF,OAAO,CAACmgE,mBAAb,EAAmC;AAEzC,YAAK6C,aAAa,IAAIC,cAAtB,EAAuC;AAEtC56B,UAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDpmE,OAAO,CAAE,CAAF,CAAP,CAAazC,KAAjE,EAAwEyC,OAAO,CAAE,CAAF,CAAP,CAAaxC,MAArF;AAEA;;AAED,aAAM,IAAI1Q,IAAC,GAAG,CAAR,EAAW4X,IAAE,GAAG1E,OAAO,CAAChT,MAA9B,EAAsCF,IAAC,GAAG4X,IAA1C,EAA8C5X,IAAC,EAA/C,EAAqD;AAEpDu5E,UAAAA,MAAM,GAAGrmE,OAAO,CAAElT,IAAF,CAAhB;;AAEA,cAAKwW,OAAO,CAAC3D,MAAR,KAAmBnZ,UAAxB,EAAqC;AAEpC,gBAAK68E,QAAQ,KAAK,IAAlB,EAAyB;AAExB,kBAAKiD,aAAL,EAAqB;AAEpB36B,gBAAAA,KAAK,CAAC81B,uBAAN,CAA+B,IAA/B,EAAqC30E,IAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8Cu5E,MAAM,CAAC9oE,KAArD,EAA4D8oE,MAAM,CAAC7oE,MAAnE,EAA2E6lE,QAA3E,EAAqFgD,MAAM,CAACloE,IAA5F;AAEA,eAJD,MAIO;AAENwtC,gBAAAA,KAAK,CAAC01B,oBAAN,CAA4B,IAA5B,EAAkCv0E,IAAlC,EAAqCs5E,gBAArC,EAAuDC,MAAM,CAAC9oE,KAA9D,EAAqE8oE,MAAM,CAAC7oE,MAA5E,EAAoF,CAApF,EAAuF6oE,MAAM,CAACloE,IAA9F;AAEA;AAED,aAZD,MAYO;AAENpM,cAAAA,OAAO,CAACC,IAAR,CAAc,gGAAd;AAEA;AAED,WApBD,MAoBO;AAEN,gBAAKs0E,aAAL,EAAqB;AAEpB36B,cAAAA,KAAK,CAAC41B,aAAN,CAAqB,IAArB,EAA2Bz0E,IAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCu5E,MAAM,CAAC9oE,KAA3C,EAAkD8oE,MAAM,CAAC7oE,MAAzD,EAAiE6lE,QAAjE,EAA2EC,MAA3E,EAAmF+C,MAAM,CAACloE,IAA1F;AAEA,aAJD,MAIO;AAENwtC,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB1yE,IAAxB,EAA2Bs5E,gBAA3B,EAA6CC,MAAM,CAAC9oE,KAApD,EAA2D8oE,MAAM,CAAC7oE,MAAlE,EAA0E,CAA1E,EAA6E6lE,QAA7E,EAAuFC,MAAvF,EAA+F+C,MAAM,CAACloE,IAAtG;AAEA;AAED;AAED;AAED,OAhDM,MAgDA,IAAKmF,OAAO,CAACS,kBAAb,EAAkC;AAExC,YAAKuiE,aAAL,EAAqB;AAEpB,cAAKC,cAAL,EAAsB;AAErB56B,YAAAA,KAAK,CAACg2B,YAAN,CAAoB,KAApB,EAA2B6E,MAA3B,EAAmCJ,gBAAnC,EAAqDlpE,KAAK,CAACK,KAA3D,EAAkEL,KAAK,CAACM,MAAxE,EAAgFN,KAAK,CAACgG,KAAtF;AAEA;;AAEDyoC,UAAAA,KAAK,CAAC61B,aAAN,CAAqB,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwCtkE,KAAK,CAACK,KAA9C,EAAqDL,KAAK,CAACM,MAA3D,EAAmEN,KAAK,CAACgG,KAAzE,EAAgFmgE,QAAhF,EAA0FC,MAA1F,EAAkGpmE,KAAK,CAACiB,IAAxG;AAEA,SAVD,MAUO;AAENwtC,UAAAA,KAAK,CAACi2B,UAAN,CAAkB,KAAlB,EAAyB,CAAzB,EAA4BwE,gBAA5B,EAA8ClpE,KAAK,CAACK,KAApD,EAA2DL,KAAK,CAACM,MAAjE,EAAyEN,KAAK,CAACgG,KAA/E,EAAsF,CAAtF,EAAyFmgE,QAAzF,EAAmGC,MAAnG,EAA2GpmE,KAAK,CAACiB,IAAjH;AAEA;AAED,OAlBM,MAkBA,IAAKmF,OAAO,CAACc,eAAb,EAA+B;AAErC,YAAKkiE,aAAL,EAAqB;AAEpB,cAAKC,cAAL,EAAsB;AAErB56B,YAAAA,KAAK,CAACg2B,YAAN,CAAoB,KAApB,EAA2B6E,MAA3B,EAAmCJ,gBAAnC,EAAqDlpE,KAAK,CAACK,KAA3D,EAAkEL,KAAK,CAACM,MAAxE,EAAgFN,KAAK,CAACgG,KAAtF;AAEA;;AAEDyoC,UAAAA,KAAK,CAAC61B,aAAN,CAAqB,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwCtkE,KAAK,CAACK,KAA9C,EAAqDL,KAAK,CAACM,MAA3D,EAAmEN,KAAK,CAACgG,KAAzE,EAAgFmgE,QAAhF,EAA0FC,MAA1F,EAAkGpmE,KAAK,CAACiB,IAAxG;AAEA,SAVD,MAUO;AAENwtC,UAAAA,KAAK,CAACi2B,UAAN,CAAkB,KAAlB,EAAyB,CAAzB,EAA4BwE,gBAA5B,EAA8ClpE,KAAK,CAACK,KAApD,EAA2DL,KAAK,CAACM,MAAjE,EAAyEN,KAAK,CAACgG,KAA/E,EAAsF,CAAtF,EAAyFmgE,QAAzF,EAAmGC,MAAnG,EAA2GpmE,KAAK,CAACiB,IAAjH;AAEA;AAED,OAlBM,MAkBA,IAAKmF,OAAO,CAACkgE,oBAAb,EAAoC;AAE1C,YAAK+C,cAAL,EAAsB;AAErB,cAAKD,aAAL,EAAqB;AAEpB36B,YAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDlpE,KAAK,CAACK,KAA1D,EAAiEL,KAAK,CAACM,MAAvE;AAEA,WAJD,MAIO;AAEN,gBAAID,KAAK,GAAGL,KAAK,CAACK,KAAlB;AAAA,gBAAyBC,MAAM,GAAGN,KAAK,CAACM,MAAxC;;AAEA,iBAAM,IAAI1Q,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG05E,MAArB,EAA6B15E,IAAC,EAA9B,EAAoC;AAEnC6+C,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB1yE,IAAxB,EAA2Bs5E,gBAA3B,EAA6C7oE,KAA7C,EAAoDC,MAApD,EAA4D,CAA5D,EAA+D6lE,QAA/D,EAAyEC,MAAzE,EAAiF,IAAjF;AAEA/lE,cAAAA,KAAK,KAAK,CAAV;AACAC,cAAAA,MAAM,KAAK,CAAX;AAEA;AAED;AAED;AAED,OAzBM,MAyBA;AAEN;AAEA;AACA;AACA;AAEA,YAAKwC,OAAO,CAAChT,MAAR,GAAiB,CAAjB,IAAsBi2E,YAA3B,EAA0C;AAEzC,cAAKqD,aAAa,IAAIC,cAAtB,EAAuC;AAEtC56B,YAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDpmE,OAAO,CAAE,CAAF,CAAP,CAAazC,KAAjE,EAAwEyC,OAAO,CAAE,CAAF,CAAP,CAAaxC,MAArF;AAEA;;AAED,eAAM,IAAI1Q,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAG1E,OAAO,CAAChT,MAA9B,EAAsCF,IAAC,GAAG4X,KAA1C,EAA8C5X,IAAC,EAA/C,EAAqD;AAEpDu5E,YAAAA,MAAM,GAAGrmE,OAAO,CAAElT,IAAF,CAAhB;;AAEA,gBAAKw5E,aAAL,EAAqB;AAEpB36B,cAAAA,KAAK,CAAC41B,aAAN,CAAqB,IAArB,EAA2Bz0E,IAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCu2E,QAApC,EAA8CC,MAA9C,EAAsD+C,MAAtD;AAEA,aAJD,MAIO;AAEN16B,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB1yE,IAAxB,EAA2Bs5E,gBAA3B,EAA6C/C,QAA7C,EAAuDC,MAAvD,EAA+D+C,MAA/D;AAEA;AAED;;AAED/iE,UAAAA,OAAO,CAAClD,eAAR,GAA0B,KAA1B;AAEA,SA1BD,MA0BO;AAEN,cAAKkmE,aAAL,EAAqB;AAEpB,gBAAKC,cAAL,EAAsB;AAErB56B,cAAAA,KAAK,CAAC+1B,YAAN,CAAoB,IAApB,EAA0B8E,MAA1B,EAAkCJ,gBAAlC,EAAoDlpE,KAAK,CAACK,KAA1D,EAAiEL,KAAK,CAACM,MAAvE;AAEA;;AAEDmuC,YAAAA,KAAK,CAAC41B,aAAN,CAAqB,IAArB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC8B,QAApC,EAA8CC,MAA9C,EAAsDpmE,KAAtD;AAEA,WAVD,MAUO;AAENyuC,YAAAA,KAAK,CAAC6zB,UAAN,CAAkB,IAAlB,EAAwB,CAAxB,EAA2B4G,gBAA3B,EAA6C/C,QAA7C,EAAuDC,MAAvD,EAA+DpmE,KAA/D;AAEA;AAED;AAED;;AAED,UAAK8lE,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAAhC,EAA4D;AAE3DC,QAAAA,cAAc,CAAEwC,WAAF,CAAd;AAEA;;AAED3qE,MAAAA,MAAM,CAACkrE,gBAAP,GAA0BlrE,MAAM,CAACuD,OAAjC;AAEA,UAAKgF,OAAO,CAAC7C,QAAb,EAAwB6C,OAAO,CAAC7C,QAAR,CAAkB6C,OAAlB;AAExB;;AAEDwgE,IAAAA,iBAAiB,CAACqB,SAAlB,GAA8B7hE,OAAO,CAAChF,OAAtC;AAEA;;AAED,WAASgnE,iBAAT,CAA4BxB,iBAA5B,EAA+CxgE,OAA/C,EAAwD2hE,IAAxD,EAA+D;AAE9D,QAAK3hE,OAAO,CAACpG,KAAR,CAAclQ,MAAd,KAAyB,CAA9B,EAAkC;AAElC,QAAM+4E,WAAW,GAAGD,WAAW,CAAEhC,iBAAF,EAAqBxgE,OAArB,CAA/B;AACA,QAAMvI,MAAM,GAAGuI,OAAO,CAACvI,MAAvB;AAEA4wC,IAAAA,KAAK,CAACo1B,aAAN,CAAqB,QAAQkE,IAA7B;AACAt5B,IAAAA,KAAK,CAAC2zB,WAAN,CAAmB,KAAnB,EAA0BwE,iBAAiB,CAACK,cAA5C;;AAEA,QAAKppE,MAAM,CAACuD,OAAP,KAAmBvD,MAAM,CAACkrE,gBAA1B,IAA8CF,WAAW,KAAK,IAAnE,EAA0E;AAEzEjE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB5iE,OAAO,CAAChD,KAAhC;;AACAwhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB5iE,OAAO,CAACjD,gBAAhC;;AACAyhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuB5iE,OAAO,CAAC/C,eAA/B;;AACAuhE,MAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB,CAAxB;;AAEA,UAAMQ,YAAY,GAAKpjE,OAAO,CAACmgE,mBAAR,IAA+BngE,OAAO,CAACpG,KAAR,CAAe,CAAf,EAAmBumE,mBAAzE;AACA,UAAM3kE,aAAa,GAAKwE,OAAO,CAACpG,KAAR,CAAe,CAAf,KAAsBoG,OAAO,CAACpG,KAAR,CAAe,CAAf,EAAmB4B,aAAjE;AAEA,UAAM6nE,SAAS,GAAG,EAAlB;;AAEA,WAAM,IAAI75E,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAK,CAAE45E,YAAF,IAAkB,CAAE5nE,aAAzB,EAAyC;AAExC6nE,UAAAA,SAAS,CAAE75E,CAAF,CAAT,GAAiB41E,WAAW,CAAEp/D,OAAO,CAACpG,KAAR,CAAepQ,CAAf,CAAF,EAAsB,KAAtB,EAA6B,IAA7B,EAAmCgmD,cAAnC,CAA5B;AAEA,SAJD,MAIO;AAEN6zB,UAAAA,SAAS,CAAE75E,CAAF,CAAT,GAAiBgS,aAAa,GAAGwE,OAAO,CAACpG,KAAR,CAAepQ,CAAf,EAAmBoQ,KAAtB,GAA8BoG,OAAO,CAACpG,KAAR,CAAepQ,CAAf,CAA5D;AAEA;;AAED65E,QAAAA,SAAS,CAAE75E,CAAF,CAAT,GAAiBq5E,gBAAgB,CAAE7iE,OAAF,EAAWqjE,SAAS,CAAE75E,CAAF,CAApB,CAAjC;AAEA;;AAED,UAAMoQ,KAAK,GAAGypE,SAAS,CAAE,CAAF,CAAvB;AAAA,UACC1D,YAAY,GAAGH,cAAc,CAAE5lE,KAAF,CAAd,IAA2B69B,QAD3C;AAAA,UAECsoC,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAAC3D,MAAvB,EAA+B2D,OAAO,CAACzD,QAAvC,CAFZ;AAAA,UAGCyjE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAHV;AAAA,UAICo6E,gBAAgB,GAAGjD,iBAAiB,CAAE7/D,OAAO,CAACrD,cAAV,EAA0BojE,QAA1B,EAAoCC,MAApC,EAA4ChgE,OAAO,CAACzD,QAApD,CAJrC;AAMA,UAAMymE,aAAa,GAAKvrC,QAAQ,IAAIz3B,OAAO,CAACouD,cAAR,KAA2B,IAA/D;AACA,UAAM6U,cAAc,GAAKxrE,MAAM,CAACkrE,gBAAP,KAA4B95E,SAA9B,IAA+C45E,WAAW,KAAK,IAAtF;AACA,UAAIS,MAAM,GAAGjD,YAAY,CAAEjgE,OAAF,EAAWpG,KAAX,EAAkB+lE,YAAlB,CAAzB;AAEAwC,MAAAA,oBAAoB,CAAE,KAAF,EAASniE,OAAT,EAAkB2/D,YAAlB,CAApB;AAEA,UAAIjjE,OAAJ;;AAEA,UAAK0mE,YAAL,EAAoB;AAEnB,YAAKJ,aAAa,IAAIC,cAAtB,EAAuC;AAEtC56B,UAAAA,KAAK,CAAC+1B,YAAN,CAAoB,KAApB,EAA2B8E,MAA3B,EAAmCJ,gBAAnC,EAAqDlpE,KAAK,CAACK,KAA3D,EAAkEL,KAAK,CAACM,MAAxE;AAEA;;AAED,aAAM,IAAI1Q,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9BkT,UAAAA,OAAO,GAAG2mE,SAAS,CAAE75E,IAAF,CAAT,CAAekT,OAAzB;;AAEA,eAAM,IAAIwP,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGxP,OAAO,CAAChT,MAA7B,EAAqCwiB,CAAC,EAAtC,EAA4C;AAE3C,gBAAM62D,MAAM,GAAGrmE,OAAO,CAAEwP,CAAF,CAAtB;;AAEA,gBAAKlM,OAAO,CAAC3D,MAAR,KAAmBnZ,UAAxB,EAAqC;AAEpC,kBAAK68E,QAAQ,KAAK,IAAlB,EAAyB;AAExB,oBAAKiD,aAAL,EAAqB;AAEpB36B,kBAAAA,KAAK,CAAC81B,uBAAN,CAA+B,QAAQ30E,IAAvC,EAA0C0iB,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD62D,MAAM,CAAC9oE,KAA1D,EAAiE8oE,MAAM,CAAC7oE,MAAxE,EAAgF6lE,QAAhF,EAA0FgD,MAAM,CAACloE,IAAjG;AAEA,iBAJD,MAIO;AAENwtC,kBAAAA,KAAK,CAAC01B,oBAAN,CAA4B,QAAQv0E,IAApC,EAAuC0iB,CAAvC,EAA0C42D,gBAA1C,EAA4DC,MAAM,CAAC9oE,KAAnE,EAA0E8oE,MAAM,CAAC7oE,MAAjF,EAAyF,CAAzF,EAA4F6oE,MAAM,CAACloE,IAAnG;AAEA;AAED,eAZD,MAYO;AAENpM,gBAAAA,OAAO,CAACC,IAAR,CAAc,iGAAd;AAEA;AAED,aApBD,MAoBO;AAEN,kBAAKs0E,aAAL,EAAqB;AAEpB36B,gBAAAA,KAAK,CAAC41B,aAAN,CAAqB,QAAQz0E,IAA7B,EAAgC0iB,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC62D,MAAM,CAAC9oE,KAAhD,EAAuD8oE,MAAM,CAAC7oE,MAA9D,EAAsE6lE,QAAtE,EAAgFC,MAAhF,EAAwF+C,MAAM,CAACloE,IAA/F;AAEA,eAJD,MAIO;AAENwtC,gBAAAA,KAAK,CAAC6zB,UAAN,CAAkB,QAAQ1yE,IAA1B,EAA6B0iB,CAA7B,EAAgC42D,gBAAhC,EAAkDC,MAAM,CAAC9oE,KAAzD,EAAgE8oE,MAAM,CAAC7oE,MAAvE,EAA+E,CAA/E,EAAkF6lE,QAAlF,EAA4FC,MAA5F,EAAoG+C,MAAM,CAACloE,IAA3G;AAEA;AAED;AAED;AAED;AAED,OAtDD,MAsDO;AAEN6B,QAAAA,OAAO,GAAGsD,OAAO,CAACtD,OAAlB;;AAEA,YAAKsmE,aAAa,IAAIC,cAAtB,EAAuC;AAEtC;AACA;AACA;AAEA,cAAKvmE,OAAO,CAAChT,MAAR,GAAiB,CAAtB,EAA0Bw5E,MAAM;AAEhC76B,UAAAA,KAAK,CAAC+1B,YAAN,CAAoB,KAApB,EAA2B8E,MAA3B,EAAmCJ,gBAAnC,EAAqDO,SAAS,CAAE,CAAF,CAAT,CAAeppE,KAApE,EAA2EopE,SAAS,CAAE,CAAF,CAAT,CAAenpE,MAA1F;AAEA;;AAED,aAAM,IAAI1Q,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9B,cAAKgS,aAAL,EAAqB;AAEpB,gBAAKwnE,aAAL,EAAqB;AAEpB36B,cAAAA,KAAK,CAAC41B,aAAN,CAAqB,QAAQz0E,IAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC65E,SAAS,CAAE75E,IAAF,CAAT,CAAeyQ,KAAxD,EAA+DopE,SAAS,CAAE75E,IAAF,CAAT,CAAe0Q,MAA9E,EAAsF6lE,QAAtF,EAAgGC,MAAhG,EAAwGqD,SAAS,CAAE75E,IAAF,CAAT,CAAeqR,IAAvH;AAEA,aAJD,MAIO;AAENwtC,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,QAAQ1yE,IAA1B,EAA6B,CAA7B,EAAgCs5E,gBAAhC,EAAkDO,SAAS,CAAE75E,IAAF,CAAT,CAAeyQ,KAAjE,EAAwEopE,SAAS,CAAE75E,IAAF,CAAT,CAAe0Q,MAAvF,EAA+F,CAA/F,EAAkG6lE,QAAlG,EAA4GC,MAA5G,EAAoHqD,SAAS,CAAE75E,IAAF,CAAT,CAAeqR,IAAnI;AAEA;;AAED,iBAAM,IAAIqR,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGxP,OAAO,CAAChT,MAA7B,EAAqCwiB,GAAC,EAAtC,EAA4C;AAE3C,kBAAM62D,OAAM,GAAGrmE,OAAO,CAAEwP,GAAF,CAAtB;AACA,kBAAMo3D,WAAW,GAAGP,OAAM,CAACnpE,KAAP,CAAcpQ,IAAd,EAAkBoQ,KAAtC;;AAEA,kBAAKopE,aAAL,EAAqB;AAEpB36B,gBAAAA,KAAK,CAAC41B,aAAN,CAAqB,QAAQz0E,IAA7B,EAAgC0iB,GAAC,GAAG,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6Co3D,WAAW,CAACrpE,KAAzD,EAAgEqpE,WAAW,CAACppE,MAA5E,EAAoF6lE,QAApF,EAA8FC,MAA9F,EAAsGsD,WAAW,CAACzoE,IAAlH;AAEA,eAJD,MAIO;AAENwtC,gBAAAA,KAAK,CAAC6zB,UAAN,CAAkB,QAAQ1yE,IAA1B,EAA6B0iB,GAAC,GAAG,CAAjC,EAAoC42D,gBAApC,EAAsDQ,WAAW,CAACrpE,KAAlE,EAAyEqpE,WAAW,CAACppE,MAArF,EAA6F,CAA7F,EAAgG6lE,QAAhG,EAA0GC,MAA1G,EAAkHsD,WAAW,CAACzoE,IAA9H;AAEA;AAED;AAED,WA7BD,MA6BO;AAEN,gBAAKmoE,aAAL,EAAqB;AAEpB36B,cAAAA,KAAK,CAAC41B,aAAN,CAAqB,QAAQz0E,IAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyCu2E,QAAzC,EAAmDC,MAAnD,EAA2DqD,SAAS,CAAE75E,IAAF,CAApE;AAEA,aAJD,MAIO;AAEN6+C,cAAAA,KAAK,CAAC6zB,UAAN,CAAkB,QAAQ1yE,IAA1B,EAA6B,CAA7B,EAAgCs5E,gBAAhC,EAAkD/C,QAAlD,EAA4DC,MAA5D,EAAoEqD,SAAS,CAAE75E,IAAF,CAA7E;AAEA;;AAED,iBAAM,IAAI0iB,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGxP,OAAO,CAAChT,MAA7B,EAAqCwiB,GAAC,EAAtC,EAA4C;AAE3C,kBAAM62D,QAAM,GAAGrmE,OAAO,CAAEwP,GAAF,CAAtB;;AAEA,kBAAK82D,aAAL,EAAqB;AAEpB36B,gBAAAA,KAAK,CAAC41B,aAAN,CAAqB,QAAQz0E,IAA7B,EAAgC0iB,GAAC,GAAG,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C6zD,QAA7C,EAAuDC,MAAvD,EAA+D+C,QAAM,CAACnpE,KAAP,CAAcpQ,IAAd,CAA/D;AAEA,eAJD,MAIO;AAEN6+C,gBAAAA,KAAK,CAAC6zB,UAAN,CAAkB,QAAQ1yE,IAA1B,EAA6B0iB,GAAC,GAAG,CAAjC,EAAoC42D,gBAApC,EAAsD/C,QAAtD,EAAgEC,MAAhE,EAAwE+C,QAAM,CAACnpE,KAAP,CAAcpQ,IAAd,CAAxE;AAEA;AAED;AAED;AAED;AAED;;AAED,UAAKk2E,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAAhC,EAA4D;AAE3D;AACAC,QAAAA,cAAc,CAAE,KAAF,CAAd;AAEA;;AAEDnoE,MAAAA,MAAM,CAACkrE,gBAAP,GAA0BlrE,MAAM,CAACuD,OAAjC;AAEA,UAAKgF,OAAO,CAAC7C,QAAb,EAAwB6C,OAAO,CAAC7C,QAAR,CAAkB6C,OAAlB;AAExB;;AAEDwgE,IAAAA,iBAAiB,CAACqB,SAAlB,GAA8B7hE,OAAO,CAAChF,OAAtC;AAEA,GAhtCsF,CAktCvF;AAEA;;;AACA,WAASuoE,uBAAT,CAAkChH,WAAlC,EAA+ChqC,YAA/C,EAA6DvyB,OAA7D,EAAsEwjE,UAAtE,EAAkFC,aAAlF,EAAkG;AAEjG,QAAM1D,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAAC3D,MAAvB,EAA+B2D,OAAO,CAACzD,QAAvC,CAAjB;AACA,QAAMyjE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAAf;AACA,QAAMo6E,gBAAgB,GAAGjD,iBAAiB,CAAE7/D,OAAO,CAACrD,cAAV,EAA0BojE,QAA1B,EAAoCC,MAApC,EAA4ChgE,OAAO,CAACzD,QAApD,CAA1C;AACA,QAAMukE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;;AAEA,QAAK,CAAEuuC,sBAAsB,CAAC4C,qBAA9B,EAAsD;AAErD,UAAKD,aAAa,KAAK,KAAlB,IAA2BA,aAAa,KAAK,KAAlD,EAA0D;AAEzDp7B,QAAAA,KAAK,CAACi2B,UAAN,CAAkBmF,aAAlB,EAAiC,CAAjC,EAAoCX,gBAApC,EAAsDvwC,YAAY,CAACt4B,KAAnE,EAA0Es4B,YAAY,CAACr4B,MAAvF,EAA+Fq4B,YAAY,CAAC3yB,KAA5G,EAAmH,CAAnH,EAAsHmgE,QAAtH,EAAgIC,MAAhI,EAAwI,IAAxI;AAEA,OAJD,MAIO;AAEN33B,QAAAA,KAAK,CAAC6zB,UAAN,CAAkBuH,aAAlB,EAAiC,CAAjC,EAAoCX,gBAApC,EAAsDvwC,YAAY,CAACt4B,KAAnE,EAA0Es4B,YAAY,CAACr4B,MAAvF,EAA+F,CAA/F,EAAkG6lE,QAAlG,EAA4GC,MAA5G,EAAoH,IAApH;AAEA;AAED;;AAED33B,IAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BC,WAA9B;;AAEA,QAAKoH,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEzCmsC,MAAAA,kBAAkB,CAACkF,kCAAnB,CAAuD,KAAvD,EAA8DJ,UAA9D,EAA0EC,aAA1E,EAAyFx+B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,EAA0B6gE,cAAnH,EAAmI,CAAnI,EAAsIgD,sBAAsB,CAAEtxC,YAAF,CAA5J;AAEA,KAJD,MAIO;AAENisC,MAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiCN,UAAjC,EAA6CC,aAA7C,EAA4Dx+B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,EAA0B6gE,cAAtF,EAAsG,CAAtG;AAEA;;AAEDx4B,IAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B;AAEA,GAxvCsF,CA2vCvF;;;AACA,WAASyH,wBAAT,CAAmCC,YAAnC,EAAiDzxC,YAAjD,EAA+D0xC,aAA/D,EAA+E;AAE9EzF,IAAAA,GAAG,CAAC0F,gBAAJ,CAAsB,KAAtB,EAA6BF,YAA7B;;AAEA,QAAKzxC,YAAY,CAACtyB,WAAb,IAA4B,CAAEsyB,YAAY,CAACryB,aAAhD,EAAgE;AAE/D,UAAI4iE,gBAAgB,GAAG,KAAvB;;AAEA,UAAKmB,aAAa,IAAIN,kBAAkB,CAAEpxC,YAAF,CAAxC,EAA2D;AAE1D,YAAMpyB,YAAY,GAAGoyB,YAAY,CAACpyB,YAAlC;;AAEA,YAAKA,YAAY,IAAIA,YAAY,CAACgjE,cAAlC,EAAmD;AAElD,cAAKhjE,YAAY,CAACzX,IAAb,KAAsB/F,SAA3B,EAAuC;AAEtCmgF,YAAAA,gBAAgB,GAAG,KAAnB;AAEA,WAJD,MAIO,IAAK3iE,YAAY,CAACzX,IAAb,KAAsBhG,eAA3B,EAA6C;AAEnDogF,YAAAA,gBAAgB,GAAG,KAAnB;AAEA;AAED;;AAED,YAAM1iE,OAAO,GAAGyjE,sBAAsB,CAAEtxC,YAAF,CAAtC;;AAEA,YAAKoxC,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEzCmsC,UAAAA,kBAAkB,CAACyF,iCAAnB,CAAsD,KAAtD,EAA6D/jE,OAA7D,EAAsE0iE,gBAAtE,EAAwFvwC,YAAY,CAACt4B,KAArG,EAA4Gs4B,YAAY,CAACr4B,MAAzH;AAEA,SAJD,MAIO;AAENskE,UAAAA,GAAG,CAAC4F,8BAAJ,CAAoC,KAApC,EAA2ChkE,OAA3C,EAAoD0iE,gBAApD,EAAsEvwC,YAAY,CAACt4B,KAAnF,EAA0Fs4B,YAAY,CAACr4B,MAAvG;AAEA;AAED,OA9BD,MA8BO;AAENskE,QAAAA,GAAG,CAAC6F,mBAAJ,CAAyB,KAAzB,EAAgCvB,gBAAhC,EAAkDvwC,YAAY,CAACt4B,KAA/D,EAAsEs4B,YAAY,CAACr4B,MAAnF;AAEA;;AAEDskE,MAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkDN,YAAlD;AAEA,KA1CD,MA0CO,IAAKzxC,YAAY,CAACtyB,WAAb,IAA4BsyB,YAAY,CAACryB,aAA9C,EAA8D;AAEpE,UAAME,QAAO,GAAGyjE,sBAAsB,CAAEtxC,YAAF,CAAtC;;AAEA,UAAK0xC,aAAa,IAAIN,kBAAkB,CAAEpxC,YAAF,CAAlB,KAAuC,KAA7D,EAAqE;AAEpEisC,QAAAA,GAAG,CAAC4F,8BAAJ,CAAoC,KAApC,EAA2ChkE,QAA3C,EAAoD,KAApD,EAA2DmyB,YAAY,CAACt4B,KAAxE,EAA+Es4B,YAAY,CAACr4B,MAA5F;AAEA,OAJD,MAIO,IAAKypE,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEhDmsC,QAAAA,kBAAkB,CAACyF,iCAAnB,CAAsD,KAAtD,EAA6D/jE,QAA7D,EAAsE,KAAtE,EAA6EmyB,YAAY,CAACt4B,KAA1F,EAAiGs4B,YAAY,CAACr4B,MAA9G;AAEA,OAJM,MAIA;AAENskE,QAAAA,GAAG,CAAC6F,mBAAJ,CAAyB,KAAzB,EAAgC,KAAhC,EAAuC9xC,YAAY,CAACt4B,KAApD,EAA2Ds4B,YAAY,CAACr4B,MAAxE;AAEA;;AAGDskE,MAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkDN,YAAlD;AAEA,KArBM,MAqBA;AAEN,UAAMrmE,QAAQ,GAAG40B,YAAY,CAACpxB,4BAAb,KAA8C,IAA9C,GAAqDoxB,YAAY,CAACvyB,OAAlE,GAA4E,CAAEuyB,YAAY,CAACvyB,OAAf,CAA7F;;AAEA,WAAM,IAAIxW,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmU,QAAQ,CAACjU,MAA9B,EAAsCF,CAAC,EAAvC,EAA6C;AAE5C,YAAMwW,OAAO,GAAGrC,QAAQ,CAAEnU,CAAF,CAAxB;AAEA,YAAMu2E,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAAC3D,MAAvB,EAA+B2D,OAAO,CAACzD,QAAvC,CAAjB;AACA,YAAMyjE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,OAAO,CAACtX,IAAvB,CAAf;;AACA,YAAMo6E,iBAAgB,GAAGjD,iBAAiB,CAAE7/D,OAAO,CAACrD,cAAV,EAA0BojE,QAA1B,EAAoCC,MAApC,EAA4ChgE,OAAO,CAACzD,QAApD,CAA1C;;AACA,YAAM6D,SAAO,GAAGyjE,sBAAsB,CAAEtxC,YAAF,CAAtC;;AAEA,YAAK0xC,aAAa,IAAIN,kBAAkB,CAAEpxC,YAAF,CAAlB,KAAuC,KAA7D,EAAqE;AAEpEisC,UAAAA,GAAG,CAAC4F,8BAAJ,CAAoC,KAApC,EAA2ChkE,SAA3C,EAAoD0iE,iBAApD,EAAsEvwC,YAAY,CAACt4B,KAAnF,EAA0Fs4B,YAAY,CAACr4B,MAAvG;AAEA,SAJD,MAIO,IAAKypE,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEhDmsC,UAAAA,kBAAkB,CAACyF,iCAAnB,CAAsD,KAAtD,EAA6D/jE,SAA7D,EAAsE0iE,iBAAtE,EAAwFvwC,YAAY,CAACt4B,KAArG,EAA4Gs4B,YAAY,CAACr4B,MAAzH;AAEA,SAJM,MAIA;AAENskE,UAAAA,GAAG,CAAC6F,mBAAJ,CAAyB,KAAzB,EAAgCvB,iBAAhC,EAAkDvwC,YAAY,CAACt4B,KAA/D,EAAsEs4B,YAAY,CAACr4B,MAAnF;AAEA;AAED;AAED;;AAEDskE,IAAAA,GAAG,CAAC0F,gBAAJ,CAAsB,KAAtB,EAA6B,IAA7B;AAEA,GAh2CsF,CAk2CvF;;;AACA,WAASK,iBAAT,CAA4BhI,WAA5B,EAAyChqC,YAAzC,EAAwD;AAEvD,QAAMiyC,MAAM,GAAKjyC,YAAY,IAAIA,YAAY,CAACC,uBAA9C;AACA,QAAKgyC,MAAL,EAAc,MAAM,IAAIt1E,KAAJ,CAAW,yDAAX,CAAN;AAEdm5C,IAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BC,WAA9B;;AAEA,QAAK,EAAIhqC,YAAY,CAACpyB,YAAb,IAA6BoyB,YAAY,CAACpyB,YAAb,CAA0BgjE,cAA3D,CAAL,EAAmF;AAElF,YAAM,IAAIj0E,KAAJ,CAAW,qEAAX,CAAN;AAEA,KAXsD,CAavD;;;AACA,QAAK,CAAE+1C,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACpyB,YAA7B,EAA4C0gE,cAA9C,IACHtuC,YAAY,CAACpyB,YAAb,CAA0BvG,KAA1B,CAAgCK,KAAhC,KAA0Cs4B,YAAY,CAACt4B,KADpD,IAEHs4B,YAAY,CAACpyB,YAAb,CAA0BvG,KAA1B,CAAgCM,MAAhC,KAA2Cq4B,YAAY,CAACr4B,MAF1D,EAEmE;AAElEq4B,MAAAA,YAAY,CAACpyB,YAAb,CAA0BvG,KAA1B,CAAgCK,KAAhC,GAAwCs4B,YAAY,CAACt4B,KAArD;AACAs4B,MAAAA,YAAY,CAACpyB,YAAb,CAA0BvG,KAA1B,CAAgCM,MAAhC,GAAyCq4B,YAAY,CAACr4B,MAAtD;AACAq4B,MAAAA,YAAY,CAACpyB,YAAb,CAA0BzC,WAA1B,GAAwC,IAAxC;AAEA;;AAED2hD,IAAAA,YAAY,CAAE9sB,YAAY,CAACpyB,YAAf,EAA6B,CAA7B,CAAZ;;AAEA,QAAMskE,iBAAiB,GAAGx/B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACpyB,YAA7B,EAA4C0gE,cAAtE;;AACA,QAAMzgE,OAAO,GAAGyjE,sBAAsB,CAAEtxC,YAAF,CAAtC;;AAEA,QAAKA,YAAY,CAACpyB,YAAb,CAA0B9D,MAA1B,KAAqChZ,WAA1C,EAAwD;AAEvD,UAAKsgF,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEzCmsC,QAAAA,kBAAkB,CAACkF,kCAAnB,CAAuD,KAAvD,EAA8D,KAA9D,EAAqE,IAArE,EAA2Ea,iBAA3E,EAA8F,CAA9F,EAAiGrkE,OAAjG;AAEA,OAJD,MAIO;AAENo+D,QAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8CW,iBAA9C,EAAiE,CAAjE;AAEA;AAED,KAZD,MAYO,IAAKlyC,YAAY,CAACpyB,YAAb,CAA0B9D,MAA1B,KAAqC/Y,kBAA1C,EAA+D;AAErE,UAAKqgF,kBAAkB,CAAEpxC,YAAF,CAAvB,EAA0C;AAEzCmsC,QAAAA,kBAAkB,CAACkF,kCAAnB,CAAuD,KAAvD,EAA8D,KAA9D,EAAqE,IAArE,EAA2Ea,iBAA3E,EAA8F,CAA9F,EAAiGrkE,OAAjG;AAEA,OAJD,MAIO;AAENo+D,QAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8CW,iBAA9C,EAAiE,CAAjE;AAEA;AAED,KAZM,MAYA;AAEN,YAAM,IAAIv1E,KAAJ,CAAW,6BAAX,CAAN;AAEA;AAED,GA95CsF,CAg6CvF;;;AACA,WAASw1E,sBAAT,CAAiCnyC,YAAjC,EAAgD;AAE/C,QAAMuuC,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACA,QAAMiyC,MAAM,GAAKjyC,YAAY,CAACC,uBAAb,KAAyC,IAA1D;;AAEA,QAAKD,YAAY,CAACpyB,YAAb,IAA6B,CAAE2gE,sBAAsB,CAAC6D,yBAA3D,EAAuF;AAEtF,UAAKH,MAAL,EAAc,MAAM,IAAIt1E,KAAJ,CAAW,0DAAX,CAAN;AAEdq1E,MAAAA,iBAAiB,CAAEzD,sBAAsB,CAACE,kBAAzB,EAA6CzuC,YAA7C,CAAjB;AAEA,KAND,MAMO;AAEN,UAAKiyC,MAAL,EAAc;AAEb1D,QAAAA,sBAAsB,CAACG,kBAAvB,GAA4C,EAA5C;;AAEA,aAAM,IAAIz3E,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B6+C,UAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACE,kBAAvB,CAA2Cx3E,CAA3C,CAA9B;AACAs3E,UAAAA,sBAAsB,CAACG,kBAAvB,CAA2Cz3E,CAA3C,IAAiDg1E,GAAG,CAACoG,kBAAJ,EAAjD;AACAb,UAAAA,wBAAwB,CAAEjD,sBAAsB,CAACG,kBAAvB,CAA2Cz3E,CAA3C,CAAF,EAAkD+oC,YAAlD,EAAgE,KAAhE,CAAxB;AAEA;AAED,OAZD,MAYO;AAEN8V,QAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACE,kBAArD;AACAF,QAAAA,sBAAsB,CAACG,kBAAvB,GAA4CzC,GAAG,CAACoG,kBAAJ,EAA5C;AACAb,QAAAA,wBAAwB,CAAEjD,sBAAsB,CAACG,kBAAzB,EAA6C1uC,YAA7C,EAA2D,KAA3D,CAAxB;AAEA;AAED;;AAED8V,IAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B;AAEA,GAt8CsF,CAw8CvF;;;AACA,WAASuI,cAAT,CAAyBtyC,YAAzB,EAAuCuyC,YAAvC,EAAqD3kE,YAArD,EAAoE;AAEnE,QAAM2gE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;;AAEA,QAAKuyC,YAAY,KAAKj8E,SAAtB,EAAkC;AAEjC06E,MAAAA,uBAAuB,CAAEzC,sBAAsB,CAACE,kBAAzB,EAA6CzuC,YAA7C,EAA2DA,YAAY,CAACvyB,OAAxE,EAAiF,KAAjF,EAAwF,IAAxF,CAAvB;AAEA;;AAED,QAAKG,YAAY,KAAKtX,SAAtB,EAAkC;AAEjC67E,MAAAA,sBAAsB,CAAEnyC,YAAF,CAAtB;AAEA;AAED,GAz9CsF,CA29CvF;;;AACA,WAASwyC,iBAAT,CAA4BxyC,YAA5B,EAA2C;AAE1C,QAAMvyB,OAAO,GAAGuyB,YAAY,CAACvyB,OAA7B;AAEA,QAAM8gE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACA,QAAMiuC,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,CAA1B;AAEAuyB,IAAAA,YAAY,CAACwf,gBAAb,CAA+B,SAA/B,EAA0CuuB,qBAA1C;;AAEA,QAAK/tC,YAAY,CAACpxB,4BAAb,KAA8C,IAAnD,EAA0D;AAEzD,UAAKq/D,iBAAiB,CAACK,cAAlB,KAAqCh4E,SAA1C,EAAsD;AAErD23E,QAAAA,iBAAiB,CAACK,cAAlB,GAAmCrC,GAAG,CAACzC,aAAJ,EAAnC;AAEA;;AAEDyE,MAAAA,iBAAiB,CAACqB,SAAlB,GAA8B7hE,OAAO,CAAChF,OAAtC;AACAmzC,MAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ;AAEA;;AAED,QAAM6mE,MAAM,GAAKjyC,YAAY,CAACC,uBAAb,KAAyC,IAA1D;AACA,QAAMwyC,uBAAuB,GAAKzyC,YAAY,CAACpxB,4BAAb,KAA8C,IAAhF;AACA,QAAMw+D,YAAY,GAAGH,cAAc,CAAEjtC,YAAF,CAAd,IAAkCkF,QAAvD,CAxB0C,CA0B1C;;AAEA,QAAK+sC,MAAL,EAAc;AAEb1D,MAAAA,sBAAsB,CAACE,kBAAvB,GAA4C,EAA5C;;AAEA,WAAM,IAAIx3E,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9Bs3E,QAAAA,sBAAsB,CAACE,kBAAvB,CAA2Cx3E,CAA3C,IAAiDg1E,GAAG,CAACyG,iBAAJ,EAAjD;AAEA;AAED,KAVD,MAUO;AAENnE,MAAAA,sBAAsB,CAACE,kBAAvB,GAA4CxC,GAAG,CAACyG,iBAAJ,EAA5C;;AAEA,UAAKD,uBAAL,EAA+B;AAE9B,YAAKxtC,YAAY,CAACjH,WAAlB,EAAgC;AAE/B,cAAM5yB,QAAQ,GAAG40B,YAAY,CAACvyB,OAA9B;;AAEA,eAAM,IAAIxW,IAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGzD,QAAQ,CAACjU,MAA/B,EAAuCF,IAAC,GAAG4X,EAA3C,EAA+C5X,IAAC,EAAhD,EAAsD;AAErD,gBAAM83E,oBAAoB,GAAGr8B,UAAU,CAAC5M,GAAX,CAAgB16B,QAAQ,CAAEnU,IAAF,CAAxB,CAA7B;;AAEA,gBAAK83E,oBAAoB,CAACT,cAArB,KAAwCh4E,SAA7C,EAAyD;AAExDy4E,cAAAA,oBAAoB,CAACT,cAArB,GAAsCrC,GAAG,CAACzC,aAAJ,EAAtC;AAEA5tB,cAAAA,IAAI,CAAC0K,MAAL,CAAYl7C,QAAZ;AAEA;AAED;AAED,SAlBD,MAkBO;AAENlP,UAAAA,OAAO,CAACC,IAAR,CAAc,+GAAd;AAEA;AAED;;AAED,UAAO+oC,QAAQ,IAAIlF,YAAY,CAACnyB,OAAb,GAAuB,CAArC,IAA4CujE,kBAAkB,CAAEpxC,YAAF,CAAlB,KAAuC,KAAxF,EAAgG;AAE/F,YAAM50B,SAAQ,GAAGqnE,uBAAuB,GAAGhlE,OAAH,GAAa,CAAEA,OAAF,CAArD;;AAEA8gE,QAAAA,sBAAsB,CAACK,8BAAvB,GAAwD3C,GAAG,CAACyG,iBAAJ,EAAxD;AACAnE,QAAAA,sBAAsB,CAACM,wBAAvB,GAAkD,EAAlD;AAEA/4B,QAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACK,8BAArD;;AAEA,aAAM,IAAI33E,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmU,SAAQ,CAACjU,MAA9B,EAAsCF,IAAC,EAAvC,EAA6C;AAE5C,cAAMwW,QAAO,GAAGrC,SAAQ,CAAEnU,IAAF,CAAxB;AACAs3E,UAAAA,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,IAAuDg1E,GAAG,CAACoG,kBAAJ,EAAvD;;AAEApG,UAAAA,GAAG,CAAC0F,gBAAJ,CAAsB,KAAtB,EAA6BpD,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAA7B;;AAEA,cAAMu2E,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeqJ,QAAO,CAAC3D,MAAvB,EAA+B2D,QAAO,CAACzD,QAAvC,CAAjB;AACA,cAAMyjE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeqJ,QAAO,CAACtX,IAAvB,CAAf;AACA,cAAMo6E,gBAAgB,GAAGjD,iBAAiB,CAAE7/D,QAAO,CAACrD,cAAV,EAA0BojE,QAA1B,EAAoCC,MAApC,EAA4ChgE,QAAO,CAACzD,QAApD,CAA1C;AACA,cAAM6D,OAAO,GAAGyjE,sBAAsB,CAAEtxC,YAAF,CAAtC;;AACAisC,UAAAA,GAAG,CAAC4F,8BAAJ,CAAoC,KAApC,EAA2ChkE,OAA3C,EAAoD0iE,gBAApD,EAAsEvwC,YAAY,CAACt4B,KAAnF,EAA0Fs4B,YAAY,CAACr4B,MAAvG;;AAEAskE,UAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,QAAQ96E,IAA5C,EAA+C,KAA/C,EAAsDs3E,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAAtD;AAEA;;AAEDg1E,QAAAA,GAAG,CAAC0F,gBAAJ,CAAsB,KAAtB,EAA6B,IAA7B;;AAEA,YAAK3xC,YAAY,CAACtyB,WAAlB,EAAgC;AAE/B6gE,UAAAA,sBAAsB,CAACO,wBAAvB,GAAkD7C,GAAG,CAACoG,kBAAJ,EAAlD;AACAb,UAAAA,wBAAwB,CAAEjD,sBAAsB,CAACO,wBAAzB,EAAmD9uC,YAAnD,EAAiE,IAAjE,CAAxB;AAEA;;AAED8V,QAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B;AAEA;AAED,KA7GyC,CA+G1C;;;AAEA,QAAKkI,MAAL,EAAc;AAEbn8B,MAAAA,KAAK,CAAC2zB,WAAN,CAAmB,KAAnB,EAA0BwE,iBAAiB,CAACK,cAA5C;AACAsB,MAAAA,oBAAoB,CAAE,KAAF,EAASniE,OAAT,EAAkB2/D,YAAlB,CAApB;;AAEA,WAAM,IAAIn2E,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9B+5E,QAAAA,uBAAuB,CAAEzC,sBAAsB,CAACE,kBAAvB,CAA2Cx3E,IAA3C,CAAF,EAAkD+oC,YAAlD,EAAgEvyB,OAAhE,EAAyE,KAAzE,EAAgF,QAAQxW,IAAxF,CAAvB;AAEA;;AAED,UAAKk2E,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAAhC,EAA4D;AAE3DC,QAAAA,cAAc,CAAE,KAAF,CAAd;AAEA;;AAEDv3B,MAAAA,KAAK,CAACy1B,aAAN;AAEA,KAnBD,MAmBO,IAAKkH,uBAAL,EAA+B;AAErC,UAAMrnE,UAAQ,GAAG40B,YAAY,CAACvyB,OAA9B;;AAEA,WAAM,IAAIxW,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGzD,UAAQ,CAACjU,MAA/B,EAAuCF,IAAC,GAAG4X,KAA3C,EAA+C5X,IAAC,EAAhD,EAAsD;AAErD,YAAMg6E,UAAU,GAAG7lE,UAAQ,CAAEnU,IAAF,CAA3B;;AACA,YAAM83E,qBAAoB,GAAGr8B,UAAU,CAAC5M,GAAX,CAAgBmrC,UAAhB,CAA7B;;AAEAn7B,QAAAA,KAAK,CAAC2zB,WAAN,CAAmB,IAAnB,EAAyBsF,qBAAoB,CAACT,cAA9C;AACAsB,QAAAA,oBAAoB,CAAE,IAAF,EAAQqB,UAAR,EAAoB7D,YAApB,CAApB;AACA4D,QAAAA,uBAAuB,CAAEzC,sBAAsB,CAACE,kBAAzB,EAA6CzuC,YAA7C,EAA2DixC,UAA3D,EAAuE,QAAQh6E,IAA/E,EAAkF,IAAlF,CAAvB;;AAEA,YAAKk2E,2BAA2B,CAAE8D,UAAF,EAAc7D,YAAd,CAAhC,EAA+D;AAE9DC,UAAAA,cAAc,CAAE,IAAF,CAAd;AAEA;AAED;;AAEDv3B,MAAAA,KAAK,CAACy1B,aAAN;AAEA,KAvBM,MAuBA;AAEN,UAAIoH,aAAa,GAAG,IAApB;;AAEA,UAAK3yC,YAAY,CAACvxB,qBAAb,IAAsCuxB,YAAY,CAAC3xB,wBAAxD,EAAmF;AAElF,YAAK62B,QAAL,EAAgB;AAEfytC,UAAAA,aAAa,GAAG3yC,YAAY,CAACvxB,qBAAb,GAAqC,KAArC,GAA6C,KAA7D;AAEA,SAJD,MAIO;AAENvS,UAAAA,OAAO,CAACkD,KAAR,CAAe,iGAAf;AAEA;AAED;;AAED02C,MAAAA,KAAK,CAAC2zB,WAAN,CAAmBkJ,aAAnB,EAAkC1E,iBAAiB,CAACK,cAApD;AACAsB,MAAAA,oBAAoB,CAAE+C,aAAF,EAAiBllE,OAAjB,EAA0B2/D,YAA1B,CAApB;AACA4D,MAAAA,uBAAuB,CAAEzC,sBAAsB,CAACE,kBAAzB,EAA6CzuC,YAA7C,EAA2DvyB,OAA3D,EAAoE,KAApE,EAA2EklE,aAA3E,CAAvB;;AAEA,UAAKxF,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAAhC,EAA4D;AAE3DC,QAAAA,cAAc,CAAEsF,aAAF,CAAd;AAEA;;AAED78B,MAAAA,KAAK,CAACy1B,aAAN;AAEA,KAzLyC,CA2L1C;;;AAEA,QAAKvrC,YAAY,CAACtyB,WAAlB,EAAgC;AAE/BykE,MAAAA,sBAAsB,CAAEnyC,YAAF,CAAtB;AAEA;AAED;;AAED,WAAS4yC,wBAAT,CAAmC5yC,YAAnC,EAAkD;AAEjD,QAAMotC,YAAY,GAAGH,cAAc,CAAEjtC,YAAF,CAAd,IAAkCkF,QAAvD;AAEA,QAAM95B,QAAQ,GAAG40B,YAAY,CAACpxB,4BAAb,KAA8C,IAA9C,GAAqDoxB,YAAY,CAACvyB,OAAlE,GAA4E,CAAEuyB,YAAY,CAACvyB,OAAf,CAA7F;;AAEA,SAAM,IAAIxW,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGzD,QAAQ,CAACjU,MAA/B,EAAuCF,CAAC,GAAG4X,EAA3C,EAA+C5X,CAAC,EAAhD,EAAsD;AAErD,UAAMwW,OAAO,GAAGrC,QAAQ,CAAEnU,CAAF,CAAxB;;AAEA,UAAKk2E,2BAA2B,CAAE1/D,OAAF,EAAW2/D,YAAX,CAAhC,EAA4D;AAE3D,YAAMt2E,MAAM,GAAGkpC,YAAY,CAACC,uBAAb,GAAuC,KAAvC,GAA+C,IAA9D;;AACA,YAAMorC,YAAY,GAAG34B,UAAU,CAAC5M,GAAX,CAAgBr4B,OAAhB,EAA0B6gE,cAA/C;;AAEAx4B,QAAAA,KAAK,CAAC2zB,WAAN,CAAmB3yE,MAAnB,EAA2Bu0E,YAA3B;AACAgC,QAAAA,cAAc,CAAEv2E,MAAF,CAAd;AACAg/C,QAAAA,KAAK,CAACy1B,aAAN;AAEA;AAED;AAED;;AAED,WAASsH,6BAAT,CAAwC7yC,YAAxC,EAAuD;AAEtD,QAAOkF,QAAQ,IAAIlF,YAAY,CAACnyB,OAAb,GAAuB,CAArC,IAA4CujE,kBAAkB,CAAEpxC,YAAF,CAAlB,KAAuC,KAAxF,EAAgG;AAE/F,UAAM50B,QAAQ,GAAG40B,YAAY,CAACpxB,4BAAb,GAA4CoxB,YAAY,CAACvyB,OAAzD,GAAmE,CAAEuyB,YAAY,CAACvyB,OAAf,CAApF;AACA,UAAM/F,KAAK,GAAGs4B,YAAY,CAACt4B,KAA3B;AACA,UAAMC,MAAM,GAAGq4B,YAAY,CAACr4B,MAA5B;AACA,UAAIib,IAAI,GAAG,KAAX;AACA,UAAMkwD,iBAAiB,GAAG,EAA1B;AACA,UAAMC,UAAU,GAAG/yC,YAAY,CAACryB,aAAb,GAA6B,KAA7B,GAAqC,KAAxD;AACA,UAAM4gE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACA,UAAMyyC,uBAAuB,GAAKzyC,YAAY,CAACpxB,4BAAb,KAA8C,IAAhF,CAT+F,CAW/F;;AACA,UAAK6jE,uBAAL,EAA+B;AAE9B,aAAM,IAAIx7E,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmU,QAAQ,CAACjU,MAA9B,EAAsCF,CAAC,EAAvC,EAA6C;AAE5C6+C,UAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACK,8BAArD;;AACA3C,UAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,QAAQ96E,CAA5C,EAA+C,KAA/C,EAAsD,IAAtD;;AAEA6+C,UAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACE,kBAArD;;AACAxC,UAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,QAAQt6E,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwD,CAAxD;AAEA;AAED;;AAED6+C,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACK,8BAArD;AACA94B,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACE,kBAArD;;AAEA,WAAM,IAAIx3E,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmU,QAAQ,CAACjU,MAA9B,EAAsCF,IAAC,EAAvC,EAA6C;AAE5C67E,QAAAA,iBAAiB,CAACr8E,IAAlB,CAAwB,QAAQQ,IAAhC;;AAEA,YAAK+oC,YAAY,CAACtyB,WAAlB,EAAgC;AAE/BolE,UAAAA,iBAAiB,CAACr8E,IAAlB,CAAwBs8E,UAAxB;AAEA;;AAED,YAAMC,iBAAiB,GAAKzE,sBAAsB,CAAC0E,mBAAvB,KAA+C38E,SAAjD,GAA+Di4E,sBAAsB,CAAC0E,mBAAtF,GAA4G,KAAtI;;AAEA,YAAKD,iBAAiB,KAAK,KAA3B,EAAmC;AAElC,cAAKhzC,YAAY,CAACtyB,WAAlB,EAAgCkV,IAAI,IAAI,GAAR;AAChC,cAAKod,YAAY,CAACryB,aAAlB,EAAkCiV,IAAI,IAAI,IAAR;AAElC;;AAED,YAAK6vD,uBAAL,EAA+B;AAE9BxG,UAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkDxD,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAAlD;AAEA;;AAED,YAAK+7E,iBAAiB,KAAK,IAA3B,EAAkC;AAEjC/G,UAAAA,GAAG,CAACiH,qBAAJ,CAA2B,KAA3B,EAAkC,CAAEH,UAAF,CAAlC;;AACA9G,UAAAA,GAAG,CAACiH,qBAAJ,CAA2B,KAA3B,EAAkC,CAAEH,UAAF,CAAlC;AAEA;;AAED,YAAKN,uBAAL,EAA+B;AAE9B,cAAMpH,YAAY,GAAG34B,UAAU,CAAC5M,GAAX,CAAgB16B,QAAQ,CAAEnU,IAAF,CAAxB,EAAgCq3E,cAArD;;AACArC,UAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8ClG,YAA9C,EAA4D,CAA5D;AAEA;;AAEDY,QAAAA,GAAG,CAACkH,eAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA2BzrE,KAA3B,EAAkCC,MAAlC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDD,KAAhD,EAAuDC,MAAvD,EAA+Dib,IAA/D,EAAqE,IAArE;;AAEA,YAAKwpD,6BAAL,EAAqC;AAEpCH,UAAAA,GAAG,CAACiH,qBAAJ,CAA2B,KAA3B,EAAkCJ,iBAAlC;AAEA;AAGD;;AAEDh9B,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B;AACAj0B,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B,EAhF+F,CAkF/F;;AACA,UAAK0I,uBAAL,EAA+B;AAE9B,aAAM,IAAIx7E,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmU,QAAQ,CAACjU,MAA9B,EAAsCF,IAAC,EAAvC,EAA6C;AAE5C6+C,UAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACK,8BAArD;;AACA3C,UAAAA,GAAG,CAAC8F,uBAAJ,CAA6B,KAA7B,EAAoC,QAAQ96E,IAA5C,EAA+C,KAA/C,EAAsDs3E,sBAAsB,CAACM,wBAAvB,CAAiD53E,IAAjD,CAAtD;;AAEA,cAAMo0E,aAAY,GAAG34B,UAAU,CAAC5M,GAAX,CAAgB16B,QAAQ,CAAEnU,IAAF,CAAxB,EAAgCq3E,cAArD;;AAEAx4B,UAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACE,kBAArD;;AACAxC,UAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,QAAQt6E,IAAzC,EAA4C,IAA5C,EAAkDo0E,aAAlD,EAAgE,CAAhE;AAEA;AAED;;AAEDv1B,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BwE,sBAAsB,CAACK,8BAArD;AAEA;AAED;;AAED,WAAS0C,sBAAT,CAAiCtxC,YAAjC,EAAgD;AAE/C,WAAOxoC,IAAI,CAACa,GAAL,CAAUolD,UAAV,EAAsBzd,YAAY,CAACnyB,OAAnC,CAAP;AAEA;;AAED,WAASujE,kBAAT,CAA6BpxC,YAA7B,EAA4C;AAE3C,QAAMuuC,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AAEA,WAAOkF,QAAQ,IAAIlF,YAAY,CAACnyB,OAAb,GAAuB,CAAnC,IAAwCgwB,UAAU,CAACye,GAAX,CAAgB,sCAAhB,MAA6D,IAArG,IAA6GiyB,sBAAsB,CAAC6E,oBAAvB,KAAgD,KAApK;AAEA;;AAED,WAAS/D,kBAAT,CAA6B5hE,OAA7B,EAAuC;AAEtC,QAAMg3B,KAAK,GAAGmX,IAAI,CAAC3a,MAAL,CAAYwD,KAA1B,CAFsC,CAItC;;AAEA,QAAK8nC,cAAc,CAACzmC,GAAf,CAAoBr4B,OAApB,MAAkCg3B,KAAvC,EAA+C;AAE9C8nC,MAAAA,cAAc,CAACtwE,GAAf,CAAoBwR,OAApB,EAA6Bg3B,KAA7B;;AACAh3B,MAAAA,OAAO,CAAC8B,MAAR;AAEA;AAED;;AAED,WAAS+gE,gBAAT,CAA2B7iE,OAA3B,EAAoCpG,KAApC,EAA4C;AAE3C,QAAM2C,QAAQ,GAAGyD,OAAO,CAACzD,QAAzB;AACA,QAAMF,MAAM,GAAG2D,OAAO,CAAC3D,MAAvB;AACA,QAAM3T,IAAI,GAAGsX,OAAO,CAACtX,IAArB;AAEA,QAAKsX,OAAO,CAACmgE,mBAAR,KAAgC,IAAhC,IAAwCngE,OAAO,CAACouD,cAAR,KAA2B,IAAnE,IAA2EpuD,OAAO,CAAC3D,MAAR,KAAmB7T,YAAnG,EAAkH,OAAOoR,KAAP;;AAElH,QAAK2C,QAAQ,KAAKnW,cAAlB,EAAmC;AAElC;AAEA,UAAKmW,QAAQ,KAAKlW,YAAlB,EAAiC;AAEhC,YAAKoxC,QAAQ,KAAK,KAAlB,EAA0B;AAEzB;AAEA,cAAKrH,UAAU,CAACye,GAAX,CAAgB,UAAhB,MAAiC,IAAjC,IAAyCxyC,MAAM,KAAKnZ,UAAzD,EAAsE;AAErE8c,YAAAA,OAAO,CAAC3D,MAAR,GAAiB7T,YAAjB,CAFqE,CAIrE;;AAEAwX,YAAAA,OAAO,CAAC5D,SAAR,GAAoBpa,YAApB;AACAge,YAAAA,OAAO,CAAClD,eAAR,GAA0B,KAA1B;AAEA,WATD,MASO;AAEN;AAEAlD,YAAAA,KAAK,GAAGD,UAAU,CAACisE,YAAX,CAAyBhsE,KAAzB,CAAR;AAEA;AAED,SArBD,MAqBO;AAEN;AAEA,cAAKyC,MAAM,KAAKnZ,UAAX,IAAyBwF,IAAI,KAAKrG,gBAAvC,EAA0D;AAEzDoM,YAAAA,OAAO,CAACC,IAAR,CAAc,yFAAd;AAEA;AAED;AAED,OAnCD,MAmCO;AAEND,QAAAA,OAAO,CAACkD,KAAR,CAAe,oDAAf,EAAqE4K,QAArE;AAEA;AAED;;AAED,WAAO3C,KAAP;AAEA,GA33DsF,CA63DvF;;;AAEA,OAAKojD,mBAAL,GAA2BA,mBAA3B;AACA,OAAKwkB,iBAAL,GAAyBA,iBAAzB;AAEA,OAAKniB,YAAL,GAAoBA,YAApB;AACA,OAAKM,iBAAL,GAAyBA,iBAAzB;AACA,OAAKJ,YAAL,GAAoBA,YAApB;AACA,OAAKE,cAAL,GAAsBA,cAAtB;AACA,OAAKolB,cAAL,GAAsBA,cAAtB;AACA,OAAKE,iBAAL,GAAyBA,iBAAzB;AACA,OAAKI,wBAAL,GAAgCA,wBAAhC;AACA,OAAKC,6BAAL,GAAqCA,6BAArC;AACA,OAAKV,sBAAL,GAA8BA,sBAA9B;AACA,OAAKnB,uBAAL,GAA+BA,uBAA/B;AACA,OAAKI,kBAAL,GAA0BA,kBAA1B;AAEA;;AAED,SAASkC,UAAT,CAAqBtuC,EAArB,EAAyBnH,UAAzB,EAAqCoH,YAArC,EAAoD;AAEnD,MAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;;AAEA,WAAS9gC,OAAT,CAAkBY,CAAlB,EAAuC;AAAA,QAAlBgF,QAAkB,uEAAP,IAAO;AAEtC,QAAI6tC,SAAJ;AAEA,QAAK7yC,CAAC,KAAKlV,gBAAX,EAA8B,OAAO,IAAP;AAC9B,QAAKkV,CAAC,KAAK1U,qBAAX,EAAmC,OAAO,KAAP;AACnC,QAAK0U,CAAC,KAAKzU,qBAAX,EAAmC,OAAO,KAAP;AAEnC,QAAKyU,CAAC,KAAKjV,QAAX,EAAsB,OAAO,IAAP;AACtB,QAAKiV,CAAC,KAAKhV,SAAX,EAAuB,OAAO,IAAP;AACvB,QAAKgV,CAAC,KAAK/U,iBAAX,EAA+B,OAAO,IAAP;AAC/B,QAAK+U,CAAC,KAAK9U,OAAX,EAAqB,OAAO,IAAP;AACrB,QAAK8U,CAAC,KAAK7U,eAAX,EAA6B,OAAO,IAAP;AAC7B,QAAK6U,CAAC,KAAK5U,SAAX,EAAuB,OAAO,IAAP;;AAEvB,QAAK4U,CAAC,KAAK3U,aAAX,EAA2B;AAE1B,UAAK60C,QAAL,EAAgB,OAAO,IAAP;AAEhB2S,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,wBAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,eAAOA,SAAS,CAAC07B,cAAjB;AAEA,OAJD,MAIO;AAEN,eAAO,IAAP;AAEA;AAED;;AAED,QAAKvuE,CAAC,KAAKvU,WAAX,EAAyB,OAAO,IAAP;AACzB,QAAKuU,CAAC,KAAKrU,UAAX,EAAwB,OAAO,IAAP;AACxB,QAAKqU,CAAC,KAAKpU,eAAX,EAA6B,OAAO,IAAP;AAC7B,QAAKoU,CAAC,KAAKnU,oBAAX,EAAkC,OAAO,IAAP;AAClC,QAAKmU,CAAC,KAAKlU,WAAX,EAAyB,OAAO,IAAP;AACzB,QAAKkU,CAAC,KAAKjU,kBAAX,EAAgC,OAAO,KAAP;AAChC,QAAKiU,CAAC,KAAKhU,SAAX,EAAuB,OAAO,IAAP;;AAEvB,QAAKgU,CAAC,KAAKtU,SAAX,EAAuB;AAEtBwL,MAAAA,OAAO,CAACC,IAAR,CAAc,oIAAd;AACA,aAAO,IAAP;AAEA,KA9CqC,CAgDtC;;;AAEA,QAAK6I,CAAC,KAAK/O,YAAX,EAA0B;AAEzB4hD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,UAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,eAAOA,SAAS,CAAC27B,cAAjB;AAEA,OAJD,MAIO;AAEN,eAAO,IAAP;AAEA;AAED,KAhEqC,CAkEtC;;;AAEA,QAAKxuE,CAAC,KAAK/T,gBAAX,EAA8B,OAAO,KAAP;AAC9B,QAAK+T,CAAC,KAAK9T,QAAX,EAAsB,OAAO,KAAP;AACtB,QAAK8T,CAAC,KAAK7T,eAAX,EAA6B,OAAO,KAAP;AAC7B,QAAK6T,CAAC,KAAK5T,iBAAX,EAA+B,OAAO,KAAP,CAvEO,CAyEtC;;AAEA,QAAK4T,CAAC,KAAK3T,oBAAN,IAA8B2T,CAAC,KAAK1T,qBAApC,IAA6D0T,CAAC,KAAKzT,qBAAnE,IAA4FyT,CAAC,KAAKxT,qBAAvG,EAA+H;AAE9H,UAAKwY,QAAQ,KAAKlW,YAAlB,EAAiC;AAEhC+jD,QAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,oCAAhB,CAAZ;;AAEA,YAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,cAAK7yC,CAAC,KAAK3T,oBAAX,EAAkC,OAAOwmD,SAAS,CAAC47B,6BAAjB;AAClC,cAAKzuE,CAAC,KAAK1T,qBAAX,EAAmC,OAAOumD,SAAS,CAAC67B,mCAAjB;AACnC,cAAK1uE,CAAC,KAAKzT,qBAAX,EAAmC,OAAOsmD,SAAS,CAAC87B,mCAAjB;AACnC,cAAK3uE,CAAC,KAAKxT,qBAAX,EAAmC,OAAOqmD,SAAS,CAAC+7B,mCAAjB;AAEnC,SAPD,MAOO;AAEN,iBAAO,IAAP;AAEA;AAED,OAjBD,MAiBO;AAEN/7B,QAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,+BAAhB,CAAZ;;AAEA,YAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,cAAK7yC,CAAC,KAAK3T,oBAAX,EAAkC,OAAOwmD,SAAS,CAACg8B,4BAAjB;AAClC,cAAK7uE,CAAC,KAAK1T,qBAAX,EAAmC,OAAOumD,SAAS,CAACi8B,6BAAjB;AACnC,cAAK9uE,CAAC,KAAKzT,qBAAX,EAAmC,OAAOsmD,SAAS,CAACk8B,6BAAjB;AACnC,cAAK/uE,CAAC,KAAKxT,qBAAX,EAAmC,OAAOqmD,SAAS,CAACm8B,6BAAjB;AAEnC,SAPD,MAOO;AAEN,iBAAO,IAAP;AAEA;AAED;AAED,KAjHqC,CAmHtC;;;AAEA,QAAKhvE,CAAC,KAAKvT,uBAAN,IAAiCuT,CAAC,KAAKtT,uBAAvC,IAAkEsT,CAAC,KAAKrT,wBAAxE,IAAoGqT,CAAC,KAAKpT,wBAA/G,EAA0I;AAEzIimD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,gCAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,YAAK7yC,CAAC,KAAKvT,uBAAX,EAAqC,OAAOomD,SAAS,CAACo8B,+BAAjB;AACrC,YAAKjvE,CAAC,KAAKtT,uBAAX,EAAqC,OAAOmmD,SAAS,CAACq8B,+BAAjB;AACrC,YAAKlvE,CAAC,KAAKrT,wBAAX,EAAsC,OAAOkmD,SAAS,CAACs8B,gCAAjB;AACtC,YAAKnvE,CAAC,KAAKpT,wBAAX,EAAsC,OAAOimD,SAAS,CAACu8B,gCAAjB;AAEtC,OAPD,MAOO;AAEN,eAAO,IAAP;AAEA;AAED,KAtIqC,CAwItC;;;AAEA,QAAKpvE,CAAC,KAAKnT,eAAX,EAA6B;AAE5BgmD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,+BAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,eAAOA,SAAS,CAACw8B,yBAAjB;AAEA,OAJD,MAIO;AAEN,eAAO,IAAP;AAEA;AAED,KAxJqC,CA0JtC;;;AAEA,QAAKrvE,CAAC,KAAKlT,eAAN,IAAyBkT,CAAC,KAAKjT,oBAApC,EAA2D;AAE1D8lD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,8BAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,YAAK7yC,CAAC,KAAKlT,eAAX,EAA6B,OAASkY,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACy8B,qBAA1C,GAAkEz8B,SAAS,CAAC08B,oBAAnF;AAC7B,YAAKvvE,CAAC,KAAKjT,oBAAX,EAAkC,OAASiY,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC28B,gCAA1C,GAA6E38B,SAAS,CAAC48B,yBAA9F;AAElC,OALD,MAKO;AAEN,eAAO,IAAP;AAEA;AAED,KA3KqC,CA6KtC;;;AAEA,QAAKzvE,CAAC,KAAKhT,oBAAN,IAA8BgT,CAAC,KAAK/S,oBAApC,IAA4D+S,CAAC,KAAK9S,oBAAlE,IACJ8S,CAAC,KAAK7S,oBADF,IAC0B6S,CAAC,KAAK5S,oBADhC,IACwD4S,CAAC,KAAK3S,oBAD9D,IAEJ2S,CAAC,KAAK1S,oBAFF,IAE0B0S,CAAC,KAAKzS,oBAFhC,IAEwDyS,CAAC,KAAKxS,qBAF9D,IAGJwS,CAAC,KAAKvS,qBAHF,IAG2BuS,CAAC,KAAKtS,qBAHjC,IAG0DsS,CAAC,KAAKrS,sBAHhE,IAIJqS,CAAC,KAAKpS,sBAJF,IAI4BoS,CAAC,KAAKnS,sBAJvC,EAIgE;AAE/DglD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,+BAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,YAAK7yC,CAAC,KAAKhT,oBAAX,EAAkC,OAASgY,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC68B,oCAA1C,GAAiF78B,SAAS,CAAC88B,4BAAlG;AAClC,YAAK3vE,CAAC,KAAK/S,oBAAX,EAAkC,OAAS+X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC+8B,oCAA1C,GAAiF/8B,SAAS,CAACg9B,4BAAlG;AAClC,YAAK7vE,CAAC,KAAK9S,oBAAX,EAAkC,OAAS8X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACi9B,oCAA1C,GAAiFj9B,SAAS,CAACk9B,4BAAlG;AAClC,YAAK/vE,CAAC,KAAK7S,oBAAX,EAAkC,OAAS6X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACm9B,oCAA1C,GAAiFn9B,SAAS,CAACo9B,4BAAlG;AAClC,YAAKjwE,CAAC,KAAK5S,oBAAX,EAAkC,OAAS4X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACq9B,oCAA1C,GAAiFr9B,SAAS,CAACs9B,4BAAlG;AAClC,YAAKnwE,CAAC,KAAK3S,oBAAX,EAAkC,OAAS2X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACu9B,oCAA1C,GAAiFv9B,SAAS,CAACw9B,4BAAlG;AAClC,YAAKrwE,CAAC,KAAK1S,oBAAX,EAAkC,OAAS0X,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACy9B,oCAA1C,GAAiFz9B,SAAS,CAAC09B,4BAAlG;AAClC,YAAKvwE,CAAC,KAAKzS,oBAAX,EAAkC,OAASyX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC29B,oCAA1C,GAAiF39B,SAAS,CAAC49B,4BAAlG;AAClC,YAAKzwE,CAAC,KAAKxS,qBAAX,EAAmC,OAASwX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC69B,qCAA1C,GAAkF79B,SAAS,CAAC89B,6BAAnG;AACnC,YAAK3wE,CAAC,KAAKvS,qBAAX,EAAmC,OAASuX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAAC+9B,qCAA1C,GAAkF/9B,SAAS,CAACg+B,6BAAnG;AACnC,YAAK7wE,CAAC,KAAKtS,qBAAX,EAAmC,OAASsX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACi+B,qCAA1C,GAAkFj+B,SAAS,CAACk+B,6BAAnG;AACnC,YAAK/wE,CAAC,KAAKrS,sBAAX,EAAoC,OAASqX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACm+B,sCAA1C,GAAmFn+B,SAAS,CAACo+B,8BAApG;AACpC,YAAKjxE,CAAC,KAAKpS,sBAAX,EAAoC,OAASoX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACq+B,sCAA1C,GAAmFr+B,SAAS,CAACs+B,8BAApG;AACpC,YAAKnxE,CAAC,KAAKnS,sBAAX,EAAoC,OAASmX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACu+B,sCAA1C,GAAmFv+B,SAAS,CAACw+B,8BAApG;AAEpC,OAjBD,MAiBO;AAEN,eAAO,IAAP;AAEA;AAED,KA9MqC,CAgNtC;;;AAEA,QAAKrxE,CAAC,KAAKlS,gBAAX,EAA8B;AAE7B+kD,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,8BAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,YAAK7yC,CAAC,KAAKlS,gBAAX,EAA8B,OAASkX,QAAQ,KAAKlW,YAAf,GAAgC+jD,SAAS,CAACy+B,oCAA1C,GAAiFz+B,SAAS,CAAC0+B,8BAAlG;AAE9B,OAJD,MAIO;AAEN,eAAO,IAAP;AAEA;AAED,KAhOqC,CAkOtC;;;AAEA,QAAKvxE,CAAC,KAAKxU,kBAAX,EAAgC;AAE/B,UAAK00C,QAAL,EAAgB,OAAO,KAAP;AAEhB2S,MAAAA,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,qBAAhB,CAAZ;;AAEA,UAAK+R,SAAS,KAAK,IAAnB,EAA0B;AAEzB,eAAOA,SAAS,CAAC2+B,uBAAjB;AAEA,OAJD,MAIO;AAEN,eAAO,IAAP;AAEA;AAED,KApPqC,CAsPtC;;;AAEA,WAASxxC,EAAE,CAAEhgC,CAAF,CAAF,KAAY1O,SAAd,GAA4B0uC,EAAE,CAAEhgC,CAAF,CAA9B,GAAsC,IAA7C;AAEA;;AAED,SAAO;AAAEZ,IAAAA,OAAO,EAAEA;AAAX,GAAP;AAEA;;IAEKqyE,W;;;;;AAEL,yBAA0B;AAAA;;AAAA,QAAb1/E,KAAa,uEAAL,EAAK;;AAAA;;AAEzB;AAEA,YAAK2/E,aAAL,GAAqB,IAArB;AAEA,YAAKC,OAAL,GAAe5/E,KAAf;AANyB;AAQzB;;;EAVwBynC,iB;;IAcpBo4C,K;;;;;AAEL,mBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKC,OAAL,GAAe,IAAf;AAEA,YAAK1gF,IAAL,GAAY,OAAZ;AANa;AAQb;;;EAVkBytB,Q;;AAcpB,IAAMkzD,UAAU,GAAG;AAAE3gF,EAAAA,IAAI,EAAE;AAAR,CAAnB;;IAEM4gF,e;AAEL,6BAAc;AAAA;;AAEb,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAa,IAAb;AAEA;;;;WAED,wBAAe;AAEd,UAAK,KAAKA,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,GAAa,IAAIN,KAAJ,EAAb;AACA,aAAKM,KAAL,CAAW5sE,gBAAX,GAA8B,KAA9B;AACA,aAAK4sE,KAAL,CAAWxyD,OAAX,GAAqB,KAArB;AAEA,aAAKwyD,KAAL,CAAWC,MAAX,GAAoB,EAApB;AACA,aAAKD,KAAL,CAAWE,UAAX,GAAwB;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAxB;AAEA;;AAED,aAAO,KAAKH,KAAZ;AAEA;;;WAED,6BAAoB;AAEnB,UAAK,KAAKF,UAAL,KAAoB,IAAzB,EAAgC;AAE/B,aAAKA,UAAL,GAAkB,IAAIJ,KAAJ,EAAlB;AACA,aAAKI,UAAL,CAAgB1sE,gBAAhB,GAAmC,KAAnC;AACA,aAAK0sE,UAAL,CAAgBtyD,OAAhB,GAA0B,KAA1B;AACA,aAAKsyD,UAAL,CAAgBM,iBAAhB,GAAoC,KAApC;AACA,aAAKN,UAAL,CAAgBO,cAAhB,GAAiC,IAAIlkE,OAAJ,EAAjC;AACA,aAAK2jE,UAAL,CAAgBQ,kBAAhB,GAAqC,KAArC;AACA,aAAKR,UAAL,CAAgBS,eAAhB,GAAkC,IAAIpkE,OAAJ,EAAlC;AAEA;;AAED,aAAO,KAAK2jE,UAAZ;AAEA;;;WAED,wBAAe;AAEd,UAAK,KAAKC,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,GAAa,IAAIL,KAAJ,EAAb;AACA,aAAKK,KAAL,CAAW3sE,gBAAX,GAA8B,KAA9B;AACA,aAAK2sE,KAAL,CAAWvyD,OAAX,GAAqB,KAArB;AACA,aAAKuyD,KAAL,CAAWK,iBAAX,GAA+B,KAA/B;AACA,aAAKL,KAAL,CAAWM,cAAX,GAA4B,IAAIlkE,OAAJ,EAA5B;AACA,aAAK4jE,KAAL,CAAWO,kBAAX,GAAgC,KAAhC;AACA,aAAKP,KAAL,CAAWQ,eAAX,GAA6B,IAAIpkE,OAAJ,EAA7B;AAEA;;AAED,aAAO,KAAK4jE,KAAZ;AAEA;;;WAED,uBAAepgF,KAAf,EAAuB;AAEtB,UAAK,KAAKmgF,UAAL,KAAoB,IAAzB,EAAgC;AAE/B,aAAKA,UAAL,CAAgBvrE,aAAhB,CAA+B5U,KAA/B;AAEA;;AAED,UAAK,KAAKogF,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,CAAWxrE,aAAX,CAA0B5U,KAA1B;AAEA;;AAED,UAAK,KAAKqgF,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,CAAWzrE,aAAX,CAA0B5U,KAA1B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,oBAAY6gF,WAAZ,EAA0B;AAEzB,WAAKjsE,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE,cAAR;AAAwBmS,QAAAA,IAAI,EAAEovE;AAA9B,OAApB;;AAEA,UAAK,KAAKV,UAAL,KAAoB,IAAzB,EAAgC;AAE/B,aAAKA,UAAL,CAAgBtyD,OAAhB,GAA0B,KAA1B;AAEA;;AAED,UAAK,KAAKuyD,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,CAAWvyD,OAAX,GAAqB,KAArB;AAEA;;AAED,UAAK,KAAKwyD,KAAL,KAAe,IAApB,EAA2B;AAE1B,aAAKA,KAAL,CAAWxyD,OAAX,GAAqB,KAArB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAQgzD,WAAR,EAAqBjzC,KAArB,EAA4BkzC,cAA5B,EAA6C;AAE5C,UAAIC,SAAS,GAAG,IAAhB;AACA,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,QAAQ,GAAG,IAAf;AAEA,UAAMC,SAAS,GAAG,KAAKf,UAAvB;AACA,UAAMgB,IAAI,GAAG,KAAKf,KAAlB;AACA,UAAMgB,IAAI,GAAG,KAAKf,KAAlB;;AAEA,UAAKQ,WAAW,IAAIjzC,KAAK,CAACgS,OAAN,CAAcyhC,eAAd,KAAkC,iBAAtD,EAA0E;AAEzE,YAAKD,IAAI,IAAIP,WAAW,CAACO,IAAzB,EAAgC;AAE/BH,UAAAA,QAAQ,GAAG,IAAX;;AAF+B,sDAILJ,WAAW,CAACO,IAAZ,CAAiB7vD,MAAjB,EAJK;AAAA;;AAAA;AAI/B,mEAAsD;AAAA,kBAA1C+vD,UAA0C;AAErD;AACA,kBAAMC,SAAS,GAAG3zC,KAAK,CAAC4zC,YAAN,CAAoBF,UAApB,EAAgCR,cAAhC,CAAlB;;AAEA,kBAAKM,IAAI,CAACd,MAAL,CAAagB,UAAU,CAACG,SAAxB,MAAwChiF,SAA7C,EAAyD;AAExD;AACA,oBAAMiiF,MAAK,GAAG,IAAI3B,KAAJ,EAAd;;AACA2B,gBAAAA,MAAK,CAACjuE,gBAAN,GAAyB,KAAzB;AACAiuE,gBAAAA,MAAK,CAAC7zD,OAAN,GAAgB,KAAhB;AACAuzD,gBAAAA,IAAI,CAACd,MAAL,CAAagB,UAAU,CAACG,SAAxB,IAAsCC,MAAtC,CANwD,CAOxD;;AACAN,gBAAAA,IAAI,CAAClhE,GAAL,CAAUwhE,MAAV;AAEA;;AAED,kBAAMA,KAAK,GAAGN,IAAI,CAACd,MAAL,CAAagB,UAAU,CAACG,SAAxB,CAAd;;AAEA,kBAAKF,SAAS,KAAK,IAAnB,EAA0B;AAEzBG,gBAAAA,KAAK,CAACv1E,MAAN,CAAaC,SAAb,CAAwBm1E,SAAS,CAACI,SAAV,CAAoBx1E,MAA5C;AACAu1E,gBAAAA,KAAK,CAACv1E,MAAN,CAAakiB,SAAb,CAAwBqzD,KAAK,CAAC5gE,QAA9B,EAAwC4gE,KAAK,CAAC31E,QAA9C,EAAwD21E,KAAK,CAACx3D,KAA9D;AACAw3D,gBAAAA,KAAK,CAACE,WAAN,GAAoBL,SAAS,CAAC1iE,MAA9B;AAEA;;AAED6iE,cAAAA,KAAK,CAAC7zD,OAAN,GAAgB0zD,SAAS,KAAK,IAA9B;AAEA,aAjC8B,CAmC/B;AAEA;;AArC+B;AAAA;AAAA;AAAA;AAAA;;AAsC/B,cAAMM,QAAQ,GAAGT,IAAI,CAACd,MAAL,CAAa,kBAAb,CAAjB;AACA,cAAMwB,QAAQ,GAAGV,IAAI,CAACd,MAAL,CAAa,WAAb,CAAjB;AACA,cAAM9xD,QAAQ,GAAGqzD,QAAQ,CAAC/gE,QAAT,CAAkB2C,UAAlB,CAA8Bq+D,QAAQ,CAAChhE,QAAvC,CAAjB;AAEA,cAAMihE,eAAe,GAAG,IAAxB;AACA,cAAMC,SAAS,GAAG,KAAlB;;AAEA,cAAKZ,IAAI,CAACb,UAAL,CAAgBC,QAAhB,IAA4BhyD,QAAQ,GAAGuzD,eAAe,GAAGC,SAA9D,EAA0E;AAEzEZ,YAAAA,IAAI,CAACb,UAAL,CAAgBC,QAAhB,GAA2B,KAA3B;AACA,iBAAK5rE,aAAL,CAAoB;AACnBtV,cAAAA,IAAI,EAAE,UADa;AAEnB2iF,cAAAA,UAAU,EAAEpB,WAAW,CAACoB,UAFL;AAGnBhiF,cAAAA,MAAM,EAAE;AAHW,aAApB;AAMA,WATD,MASO,IAAK,CAAEmhF,IAAI,CAACb,UAAL,CAAgBC,QAAlB,IAA8BhyD,QAAQ,IAAIuzD,eAAe,GAAGC,SAAjE,EAA6E;AAEnFZ,YAAAA,IAAI,CAACb,UAAL,CAAgBC,QAAhB,GAA2B,IAA3B;AACA,iBAAK5rE,aAAL,CAAoB;AACnBtV,cAAAA,IAAI,EAAE,YADa;AAEnB2iF,cAAAA,UAAU,EAAEpB,WAAW,CAACoB,UAFL;AAGnBhiF,cAAAA,MAAM,EAAE;AAHW,aAApB;AAMA;AAED,SAjED,MAiEO;AAEN,cAAKkhF,IAAI,KAAK,IAAT,IAAiBN,WAAW,CAACqB,SAAlC,EAA8C;AAE7ClB,YAAAA,QAAQ,GAAGpzC,KAAK,CAACu0C,OAAN,CAAetB,WAAW,CAACqB,SAA3B,EAAsCpB,cAAtC,CAAX;;AAEA,gBAAKE,QAAQ,KAAK,IAAlB,EAAyB;AAExBG,cAAAA,IAAI,CAACh1E,MAAL,CAAYC,SAAZ,CAAuB40E,QAAQ,CAACW,SAAT,CAAmBx1E,MAA1C;AACAg1E,cAAAA,IAAI,CAACh1E,MAAL,CAAYkiB,SAAZ,CAAuB8yD,IAAI,CAACrgE,QAA5B,EAAsCqgE,IAAI,CAACp1E,QAA3C,EAAqDo1E,IAAI,CAACj3D,KAA1D;;AAEA,kBAAK82D,QAAQ,CAACN,cAAd,EAA+B;AAE9BS,gBAAAA,IAAI,CAACV,iBAAL,GAAyB,IAAzB;AACAU,gBAAAA,IAAI,CAACT,cAAL,CAAoBjyE,IAApB,CAA0BuyE,QAAQ,CAACN,cAAnC;AAEA,eALD,MAKO;AAENS,gBAAAA,IAAI,CAACV,iBAAL,GAAyB,KAAzB;AAEA;;AAED,kBAAKO,QAAQ,CAACJ,eAAd,EAAgC;AAE/BO,gBAAAA,IAAI,CAACR,kBAAL,GAA0B,IAA1B;AACAQ,gBAAAA,IAAI,CAACP,eAAL,CAAqBnyE,IAArB,CAA2BuyE,QAAQ,CAACJ,eAApC;AAEA,eALD,MAKO;AAENO,gBAAAA,IAAI,CAACR,kBAAL,GAA0B,KAA1B;AAEA;AAED;AAED;AAED;;AAED,YAAKO,SAAS,KAAK,IAAnB,EAA0B;AAEzBH,UAAAA,SAAS,GAAGnzC,KAAK,CAACu0C,OAAN,CAAetB,WAAW,CAACuB,cAA3B,EAA2CtB,cAA3C,CAAZ,CAFyB,CAIzB;;AACA,cAAKC,SAAS,KAAK,IAAd,IAAsBC,QAAQ,KAAK,IAAxC,EAA+C;AAE9CD,YAAAA,SAAS,GAAGC,QAAZ;AAEA;;AAED,cAAKD,SAAS,KAAK,IAAnB,EAA0B;AAEzBG,YAAAA,SAAS,CAAC/0E,MAAV,CAAiBC,SAAjB,CAA4B20E,SAAS,CAACY,SAAV,CAAoBx1E,MAAhD;AACA+0E,YAAAA,SAAS,CAAC/0E,MAAV,CAAiBkiB,SAAjB,CAA4B6yD,SAAS,CAACpgE,QAAtC,EAAgDogE,SAAS,CAACn1E,QAA1D,EAAoEm1E,SAAS,CAACh3D,KAA9E;;AAEA,gBAAK62D,SAAS,CAACL,cAAf,EAAgC;AAE/BQ,cAAAA,SAAS,CAACT,iBAAV,GAA8B,IAA9B;AACAS,cAAAA,SAAS,CAACR,cAAV,CAAyBjyE,IAAzB,CAA+BsyE,SAAS,CAACL,cAAzC;AAEA,aALD,MAKO;AAENQ,cAAAA,SAAS,CAACT,iBAAV,GAA8B,KAA9B;AAEA;;AAED,gBAAKM,SAAS,CAACH,eAAf,EAAiC;AAEhCM,cAAAA,SAAS,CAACP,kBAAV,GAA+B,IAA/B;AACAO,cAAAA,SAAS,CAACN,eAAV,CAA0BnyE,IAA1B,CAAgCsyE,SAAS,CAACH,eAA1C;AAEA,aALD,MAKO;AAENM,cAAAA,SAAS,CAACP,kBAAV,GAA+B,KAA/B;AAEA;;AAED,iBAAK/rE,aAAL,CAAoBqrE,UAApB;AAEA;AAED;AAGD;;AAED,UAAKiB,SAAS,KAAK,IAAnB,EAA0B;AAEzBA,QAAAA,SAAS,CAACrzD,OAAV,GAAsBkzD,SAAS,KAAK,IAApC;AAEA;;AAED,UAAKI,IAAI,KAAK,IAAd,EAAqB;AAEpBA,QAAAA,IAAI,CAACtzD,OAAL,GAAiBmzD,QAAQ,KAAK,IAA9B;AAEA;;AAED,UAAKI,IAAI,KAAK,IAAd,EAAqB;AAEpBA,QAAAA,IAAI,CAACvzD,OAAL,GAAiBozD,QAAQ,KAAK,IAA9B;AAEA;;AAED,aAAO,IAAP;AAEA;;;;;;IAIIoB,Y;;;;;AAEL,wBAAaxxE,KAAb,EAAoBC,MAApB,EAA4BxR,IAA5B,EAAkCqT,OAAlC,EAA2CE,KAA3C,EAAkDC,KAAlD,EAAyDC,SAAzD,EAAoEC,SAApE,EAA+EE,UAA/E,EAA2FD,MAA3F,EAAoG;AAAA;;AAAA;;AAEnGA,IAAAA,MAAM,GAAGA,MAAM,KAAKxT,SAAX,GAAuBwT,MAAvB,GAAgChZ,WAAzC;;AAEA,QAAKgZ,MAAM,KAAKhZ,WAAX,IAA0BgZ,MAAM,KAAK/Y,kBAA1C,EAA+D;AAE9D,YAAM,IAAI4L,KAAJ,CAAW,kFAAX,CAAN;AAEA;;AAED,QAAKxG,IAAI,KAAKG,SAAT,IAAsBwT,MAAM,KAAKhZ,WAAtC,EAAoDqF,IAAI,GAAGhG,eAAP;AACpD,QAAKgG,IAAI,KAAKG,SAAT,IAAsBwT,MAAM,KAAK/Y,kBAAtC,EAA2DoF,IAAI,GAAG3F,kBAAP;AAE3D,kCAAO,IAAP,EAAagZ,OAAb,EAAsBE,KAAtB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DC,MAA1D,EAAkE3T,IAAlE,EAAwE4T,UAAxE;AAEA,YAAK6mE,cAAL,GAAsB,IAAtB;AAEA,YAAKvpE,KAAL,GAAa;AAAEK,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEA;AAAxB,KAAb;AAEA,YAAKiC,SAAL,GAAiBA,SAAS,KAAKtT,SAAd,GAA0BsT,SAA1B,GAAsCxa,aAAvD;AACA,YAAKya,SAAL,GAAiBA,SAAS,KAAKvT,SAAd,GAA0BuT,SAA1B,GAAsCza,aAAvD;AAEA,YAAKqb,KAAL,GAAa,KAAb;AACA,YAAKF,eAAL,GAAuB,KAAvB;AAvBmG;AAyBnG;;;EA3ByBjB,O;;IAgCrB6vE,Y;;;;;AAEL,wBAAa34C,QAAb,EAAuBwE,EAAvB,EAA4B;AAAA;;AAAA;;AAE3B;;AAEA,QAAMrJ,KAAK,kCAAX;;AAEA,QAAI8a,OAAO,GAAG,IAAd;AACA,QAAI2iC,sBAAsB,GAAG,GAA7B;AAEA,QAAIzB,cAAc,GAAG,IAArB;AACA,QAAI0B,kBAAkB,GAAG,aAAzB;AACA,QAAIC,oBAAoB,GAAG,IAA3B;AAEA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAMjiE,UAAU,GAAGstB,EAAE,CAAC40C,oBAAH,EAAnB;AACA,QAAIC,mBAAmB,GAAG,IAA1B;AACA,QAAIC,eAAe,GAAG,IAAtB;AAEA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,sBAAsB,GAAG,EAA/B,CAvB2B,CAyB3B;;AAEA,QAAMC,OAAO,GAAG,IAAIz7C,iBAAJ,EAAhB;AACAy7C,IAAAA,OAAO,CAACn3D,MAAR,CAAe45C,MAAf,CAAuB,CAAvB;AACAud,IAAAA,OAAO,CAACzsE,QAAR,GAAmB,IAAI5B,OAAJ,EAAnB;AAEA,QAAMsuE,OAAO,GAAG,IAAI17C,iBAAJ,EAAhB;AACA07C,IAAAA,OAAO,CAACp3D,MAAR,CAAe45C,MAAf,CAAuB,CAAvB;AACAwd,IAAAA,OAAO,CAAC1sE,QAAR,GAAmB,IAAI5B,OAAJ,EAAnB;AAEA,QAAM+qE,OAAO,GAAG,CAAEsD,OAAF,EAAWC,OAAX,CAAhB;AAEA,QAAMC,QAAQ,GAAG,IAAI1D,WAAJ,EAAjB;AACA0D,IAAAA,QAAQ,CAACr3D,MAAT,CAAgB45C,MAAhB,CAAwB,CAAxB;AACAyd,IAAAA,QAAQ,CAACr3D,MAAT,CAAgB45C,MAAhB,CAAwB,CAAxB;AAEA,QAAI0d,iBAAiB,GAAG,IAAxB;AACA,QAAIC,gBAAgB,GAAG,IAAvB,CA1C2B,CA4C3B;;AAEA,YAAKC,gBAAL,GAAwB,IAAxB;AACA,YAAK76C,OAAL,GAAe,KAAf;AAEA,YAAK86C,YAAL,GAAoB,KAApB;;AAEA,YAAKC,aAAL,GAAqB,UAAW7jF,KAAX,EAAmB;AAEvC,UAAI8jF,UAAU,GAAGV,WAAW,CAAEpjF,KAAF,CAA5B;;AAEA,UAAK8jF,UAAU,KAAKnkF,SAApB,EAAgC;AAE/BmkF,QAAAA,UAAU,GAAG,IAAI1D,eAAJ,EAAb;AACAgD,QAAAA,WAAW,CAAEpjF,KAAF,CAAX,GAAuB8jF,UAAvB;AAEA;;AAED,aAAOA,UAAU,CAACC,iBAAX,EAAP;AAEA,KAbD;;AAeA,YAAKC,iBAAL,GAAyB,UAAWhkF,KAAX,EAAmB;AAE3C,UAAI8jF,UAAU,GAAGV,WAAW,CAAEpjF,KAAF,CAA5B;;AAEA,UAAK8jF,UAAU,KAAKnkF,SAApB,EAAgC;AAE/BmkF,QAAAA,UAAU,GAAG,IAAI1D,eAAJ,EAAb;AACAgD,QAAAA,WAAW,CAAEpjF,KAAF,CAAX,GAAuB8jF,UAAvB;AAEA;;AAED,aAAOA,UAAU,CAACG,YAAX,EAAP;AAEA,KAbD;;AAeA,YAAKC,OAAL,GAAe,UAAWlkF,KAAX,EAAmB;AAEjC,UAAI8jF,UAAU,GAAGV,WAAW,CAAEpjF,KAAF,CAA5B;;AAEA,UAAK8jF,UAAU,KAAKnkF,SAApB,EAAgC;AAE/BmkF,QAAAA,UAAU,GAAG,IAAI1D,eAAJ,EAAb;AACAgD,QAAAA,WAAW,CAAEpjF,KAAF,CAAX,GAAuB8jF,UAAvB;AAEA;;AAED,aAAOA,UAAU,CAACK,YAAX,EAAP;AAEA,KAbD,CAjF2B,CAgG3B;;;AAEA,aAASC,cAAT,CAAyBlkF,KAAzB,EAAiC;AAEhC,UAAMmkF,eAAe,GAAGhB,sBAAsB,CAACxjF,OAAvB,CAAgCK,KAAK,CAAC6gF,WAAtC,CAAxB;;AAEA,UAAKsD,eAAe,KAAK,CAAE,CAA3B,EAA+B;AAE9B;AAEA;;AAED,UAAMP,UAAU,GAAGV,WAAW,CAAEiB,eAAF,CAA9B;;AAEA,UAAKP,UAAU,KAAKnkF,SAApB,EAAgC;AAE/BmkF,QAAAA,UAAU,CAAChvE,aAAX,CAA0B;AAAEtV,UAAAA,IAAI,EAAEU,KAAK,CAACV,IAAd;AAAoBmS,UAAAA,IAAI,EAAEzR,KAAK,CAAC6gF;AAAhC,SAA1B;AAEA;AAED;;AAED,aAASuD,YAAT,GAAwB;AAEvBxkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,QAA7B,EAAuCq7B,cAAvC;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,aAA7B,EAA4Cq7B,cAA5C;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,WAA7B,EAA0Cq7B,cAA1C;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,SAA7B,EAAwCq7B,cAAxC;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,cAA7B,EAA6Cq7B,cAA7C;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,YAA7B,EAA2Cq7B,cAA3C;AACAtkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,KAA7B,EAAoCu7B,YAApC;AACAxkC,MAAAA,OAAO,CAACiJ,mBAAR,CAA6B,oBAA7B,EAAmDw7B,oBAAnD;;AAEA,WAAM,IAAIjkF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG8iF,WAAW,CAAC5iF,MAAjC,EAAyCF,CAAC,EAA1C,EAAgD;AAE/C,YAAMygF,WAAW,GAAGsC,sBAAsB,CAAE/iF,CAAF,CAA1C;AAEA,YAAKygF,WAAW,KAAK,IAArB,EAA4B;AAE5BsC,QAAAA,sBAAsB,CAAE/iF,CAAF,CAAtB,GAA8B,IAA9B;AAEA8iF,QAAAA,WAAW,CAAE9iF,CAAF,CAAX,CAAiBkkF,UAAjB,CAA6BzD,WAA7B;AAEA;;AAED0C,MAAAA,iBAAiB,GAAG,IAApB;AACAC,MAAAA,gBAAgB,GAAG,IAAnB,CAxBuB,CA0BvB;;AAEA75C,MAAAA,QAAQ,CAACQ,eAAT,CAA0B64C,mBAA1B;AAEAH,MAAAA,WAAW,GAAG,IAAd;AACAD,MAAAA,WAAW,GAAG,IAAd;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACA/iC,MAAAA,OAAO,GAAG,IAAV;AACAqjC,MAAAA,eAAe,GAAG,IAAlB,CAlCuB,CAoCvB;;AAEA7xD,MAAAA,SAAS,CAAC0c,IAAV;AAEAhJ,MAAAA,KAAK,CAAC4+C,YAAN,GAAqB,KAArB;AAEA5+C,MAAAA,KAAK,CAAClwB,aAAN,CAAqB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAArB;AAEA;;AAED,YAAKilF,yBAAL,GAAiC,UAAWhjF,KAAX,EAAmB;AAEnDghF,MAAAA,sBAAsB,GAAGhhF,KAAzB;;AAEA,UAAKujC,KAAK,CAAC4+C,YAAN,KAAuB,IAA5B,EAAmC;AAElCr+E,QAAAA,OAAO,CAACC,IAAR,CAAc,uEAAd;AAEA;AAED,KAVD;;AAYA,YAAKk/E,qBAAL,GAA6B,UAAWjjF,KAAX,EAAmB;AAE/CihF,MAAAA,kBAAkB,GAAGjhF,KAArB;;AAEA,UAAKujC,KAAK,CAAC4+C,YAAN,KAAuB,IAA5B,EAAmC;AAElCr+E,QAAAA,OAAO,CAACC,IAAR,CAAc,0EAAd;AAEA;AAED,KAVD;;AAYA,YAAKm/E,iBAAL,GAAyB,YAAY;AAEpC,aAAOhC,oBAAoB,IAAI3B,cAA/B;AAEA,KAJD;;AAMA,YAAK4D,iBAAL,GAAyB,UAAWC,KAAX,EAAmB;AAE3ClC,MAAAA,oBAAoB,GAAGkC,KAAvB;AAEA,KAJD;;AAMA,YAAKC,YAAL,GAAoB,YAAY;AAE/B,aAAOhC,WAAW,KAAK,IAAhB,GAAuBA,WAAvB,GAAqCC,WAA5C;AAEA,KAJD;;AAMA,YAAKgC,UAAL,GAAkB,YAAY;AAE7B,aAAOlC,SAAP;AAEA,KAJD;;AAMA,YAAKmC,QAAL,GAAgB,YAAY;AAE3B,aAAOhC,OAAP;AAEA,KAJD;;AAMA,YAAKjjC,UAAL,GAAkB,YAAY;AAE7B,aAAOD,OAAP;AAEA,KAJD;;AAMA,YAAKmlC,UAAL;AAAA,0EAAkB,iBAAiBxjF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBq+C,gBAAAA,OAAO,GAAGr+C,KAAV;;AAFiB,sBAIZq+C,OAAO,KAAK,IAJA;AAAA;AAAA;AAAA;;AAMhBojC,gBAAAA,mBAAmB,GAAGr5C,QAAQ,CAACG,eAAT,EAAtB;AAEA8V,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,QAA1B,EAAoCu7B,cAApC;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,aAA1B,EAAyCu7B,cAAzC;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,WAA1B,EAAuCu7B,cAAvC;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,SAA1B,EAAqCu7B,cAArC;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,cAA1B,EAA0Cu7B,cAA1C;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,YAA1B,EAAwCu7B,cAAxC;AACAtkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,KAA1B,EAAiCy7B,YAAjC;AACAxkC,gBAAAA,OAAO,CAAC+I,gBAAR,CAA0B,oBAA1B,EAAgD07B,oBAAhD;;AAfgB,sBAiBXxjE,UAAU,CAACmkE,YAAX,KAA4B,IAjBjB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmBT72C,EAAE,CAAC82C,gBAAH,EAnBS;;AAAA;AAuBhB,oBAAOrlC,OAAO,CAACsrB,WAAR,CAAoBj/C,MAApB,KAA+BxsB,SAAjC,IAAkDkqC,QAAQ,CAACyE,YAAT,CAAsBC,QAAtB,KAAmC,KAA1F,EAAoG;AAE7F62C,kBAAAA,SAF6F,GAEjF;AACjBC,oBAAAA,SAAS,EAAIvlC,OAAO,CAACsrB,WAAR,CAAoBj/C,MAApB,KAA+BxsB,SAAjC,GAA+CohB,UAAU,CAACskE,SAA1D,GAAsE,IADhE;AAEjBz9E,oBAAAA,KAAK,EAAEmZ,UAAU,CAACnZ,KAFD;AAGjB8O,oBAAAA,KAAK,EAAEqK,UAAU,CAACrK,KAHD;AAIjBo0B,oBAAAA,OAAO,EAAE/pB,UAAU,CAAC+pB,OAJH;AAKjB23C,oBAAAA,sBAAsB,EAAEA;AALP,mBAFiF;AAUnGM,kBAAAA,WAAW,GAAG,IAAIuC,YAAJ,CAAkBxlC,OAAlB,EAA2BzR,EAA3B,EAA+B+2C,SAA/B,CAAd;AAEAtlC,kBAAAA,OAAO,CAACylC,iBAAR,CAA2B;AAAEC,oBAAAA,SAAS,EAAEzC;AAAb,mBAA3B;AAEAI,kBAAAA,eAAe,GAAG,IAAI5sE,iBAAJ,CACjBwsE,WAAW,CAAC0C,gBADK,EAEjB1C,WAAW,CAAC2C,iBAFK,EAGjB;AACCvyE,oBAAAA,MAAM,EAAEnZ,UADT;AAECwF,oBAAAA,IAAI,EAAErG,gBAFP;AAGCka,oBAAAA,QAAQ,EAAEw2B,QAAQ,CAAC42B;AAHpB,mBAHiB,CAAlB;AAUA,iBAxBD,MAwBO;AAEFklB,kBAAAA,WAFE,GAEY,IAFZ;AAGFC,kBAAAA,SAHE,GAGU,IAHV;AAIFC,kBAAAA,aAJE,GAIc,IAJd;;AAMN,sBAAK9kE,UAAU,CAACrK,KAAhB,EAAwB;AAEvBmvE,oBAAAA,aAAa,GAAG9kE,UAAU,CAAC+pB,OAAX,GAAqB,KAArB,GAA6B,KAA7C;AACA66C,oBAAAA,WAAW,GAAG5kE,UAAU,CAAC+pB,OAAX,GAAqB1wC,kBAArB,GAA0CD,WAAxD;AACAyrF,oBAAAA,SAAS,GAAG7kE,UAAU,CAAC+pB,OAAX,GAAqBjxC,kBAArB,GAA0CL,eAAtD;AAEA;;AAEKssF,kBAAAA,mBAdA,GAcsB;AAC3BC,oBAAAA,WAAW,EAAE,KADc;AAE3BJ,oBAAAA,WAAW,EAAEE,aAFc;AAG3Bzc,oBAAAA,WAAW,EAAEqZ;AAHc,mBAdtB;AAoBNI,kBAAAA,SAAS,GAAG,IAAImD,cAAJ,CAAoBlmC,OAApB,EAA6BzR,EAA7B,CAAZ;AAEAy0C,kBAAAA,WAAW,GAAGD,SAAS,CAACoD,qBAAV,CAAiCH,mBAAjC,CAAd;AAEAhmC,kBAAAA,OAAO,CAACylC,iBAAR,CAA2B;AAAEp5D,oBAAAA,MAAM,EAAE,CAAE22D,WAAF;AAAV,mBAA3B;AAEAK,kBAAAA,eAAe,GAAG,IAAI5sE,iBAAJ,CACjBusE,WAAW,CAACoD,YADK,EAEjBpD,WAAW,CAACqD,aAFK,EAGjB;AACChzE,oBAAAA,MAAM,EAAEnZ,UADT;AAECwF,oBAAAA,IAAI,EAAErG,gBAFP;AAGC8d,oBAAAA,YAAY,EAAE,IAAIsrE,YAAJ,CAAkBO,WAAW,CAACoD,YAA9B,EAA4CpD,WAAW,CAACqD,aAAxD,EAAuEP,SAAvE,EAAkFjmF,SAAlF,EAA6FA,SAA7F,EAAwGA,SAAxG,EAAmHA,SAAnH,EAA8HA,SAA9H,EAAyIA,SAAzI,EAAoJgmF,WAApJ,CAHf;AAIC3uE,oBAAAA,aAAa,EAAE+J,UAAU,CAAC+pB,OAJ3B;AAKCz3B,oBAAAA,QAAQ,EAAEw2B,QAAQ,CAAC42B,cALpB;AAMCvpD,oBAAAA,OAAO,EAAE6J,UAAU,CAACskE,SAAX,GAAuB,CAAvB,GAA2B;AANrC,mBAHiB,CAAlB;AAYMzN,kBAAAA,sBAtCA,GAsCyB/tC,QAAQ,CAACkS,UAAT,CAAoB5M,GAApB,CAAyBg0C,eAAzB,CAtCzB;AAuCNvL,kBAAAA,sBAAsB,CAAC0E,mBAAvB,GAA6CwG,WAAW,CAACzG,iBAAzD;AAEA;;AAED8G,gBAAAA,eAAe,CAACle,gBAAhB,GAAmC,IAAnC,CA1FgB,CA0FyB;AAEzC;;AACA,qBAAKmhB,YAAL,CAAmB,GAAnB;AAEAzD,gBAAAA,oBAAoB,GAAG,IAAvB;AA/FgB;AAAA,uBAgGO7iC,OAAO,CAACumC,qBAAR,CAA+B3D,kBAA/B,CAhGP;;AAAA;AAgGhB1B,gBAAAA,cAhGgB;AAkGhB1vD,gBAAAA,SAAS,CAAC6c,UAAV,CAAsB2R,OAAtB;AACAxuB,gBAAAA,SAAS,CAACwM,KAAV;AAEAkH,gBAAAA,KAAK,CAAC4+C,YAAN,GAAqB,IAArB;AAEA5+C,gBAAAA,KAAK,CAAClwB,aAAN,CAAqB;AAAEtV,kBAAAA,IAAI,EAAE;AAAR,iBAArB;;AAvGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA;;AA6GA,aAAS+kF,oBAAT,CAA+BrkF,KAA/B,EAAuC;AAEtC;AAEA,WAAM,IAAII,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGJ,KAAK,CAAComF,OAAN,CAAc9lF,MAAnC,EAA2CF,CAAC,EAA5C,EAAkD;AAEjD,YAAMygF,WAAW,GAAG7gF,KAAK,CAAComF,OAAN,CAAehmF,CAAf,CAApB;AACA,YAAMN,KAAK,GAAGqjF,sBAAsB,CAACxjF,OAAvB,CAAgCkhF,WAAhC,CAAd;;AAEA,YAAK/gF,KAAK,IAAI,CAAd,EAAkB;AAEjBqjF,UAAAA,sBAAsB,CAAErjF,KAAF,CAAtB,GAAkC,IAAlC;AACAojF,UAAAA,WAAW,CAAEpjF,KAAF,CAAX,CAAqB8U,aAArB,CAAoC;AAAEtV,YAAAA,IAAI,EAAE,cAAR;AAAwBmS,YAAAA,IAAI,EAAEovE;AAA9B,WAApC;AAEA;AAED,OAhBqC,CAkBtC;;;AAEA,WAAM,IAAIzgF,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGJ,KAAK,CAACqmF,KAAN,CAAY/lF,MAAjC,EAAyCF,IAAC,EAA1C,EAAgD;AAE/C,YAAMygF,YAAW,GAAG7gF,KAAK,CAACqmF,KAAN,CAAajmF,IAAb,CAApB;AAEA,YAAI+jF,eAAe,GAAGhB,sBAAsB,CAACxjF,OAAvB,CAAgCkhF,YAAhC,CAAtB;;AAEA,YAAKsD,eAAe,KAAK,CAAE,CAA3B,EAA+B;AAE9B;AAEA,eAAM,IAAI/jF,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG8iF,WAAW,CAAC5iF,MAAjC,EAAyCF,IAAC,EAA1C,EAAgD;AAE/C,gBAAKA,IAAC,IAAI+iF,sBAAsB,CAAC7iF,MAAjC,EAA0C;AAEzC6iF,cAAAA,sBAAsB,CAACvjF,IAAvB,CAA6BihF,YAA7B;AACAsD,cAAAA,eAAe,GAAG/jF,IAAlB;AACA;AAEA,aAND,MAMO,IAAK+iF,sBAAsB,CAAE/iF,IAAF,CAAtB,KAAgC,IAArC,EAA4C;AAElD+iF,cAAAA,sBAAsB,CAAE/iF,IAAF,CAAtB,GAA8BygF,YAA9B;AACAsD,cAAAA,eAAe,GAAG/jF,IAAlB;AACA;AAEA;AAED,WApB6B,CAsB9B;;;AAEA,cAAK+jF,eAAe,KAAK,CAAE,CAA3B,EAA+B;AAE/B;;AAED,YAAMP,UAAU,GAAGV,WAAW,CAAEiB,eAAF,CAA9B;;AAEA,YAAKP,UAAL,EAAkB;AAEjBA,UAAAA,UAAU,CAAChvE,aAAX,CAA0B;AAAEtV,YAAAA,IAAI,EAAE,WAAR;AAAqBmS,YAAAA,IAAI,EAAEovE;AAA3B,WAA1B;AAEA;AAED;AAED,KA7Y0B,CA+Y3B;;;AAEA,QAAMyF,UAAU,GAAG,IAAI9pE,OAAJ,EAAnB;AACA,QAAM+pE,UAAU,GAAG,IAAI/pE,OAAJ,EAAnB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,aAASgqE,sBAAT,CAAiCjpE,MAAjC,EAAyC6lE,OAAzC,EAAkDC,OAAlD,EAA4D;AAE3DiD,MAAAA,UAAU,CAAC53D,qBAAX,CAAkC00D,OAAO,CAACxlE,WAA1C;AACA2oE,MAAAA,UAAU,CAAC73D,qBAAX,CAAkC20D,OAAO,CAACzlE,WAA1C;AAEA,UAAM6oE,GAAG,GAAGH,UAAU,CAAC7iE,UAAX,CAAuB8iE,UAAvB,CAAZ;AAEA,UAAMG,KAAK,GAAGtD,OAAO,CAAC1lE,gBAAR,CAAyB1W,QAAvC;AACA,UAAM2/E,KAAK,GAAGtD,OAAO,CAAC3lE,gBAAR,CAAyB1W,QAAvC,CAR2D,CAU3D;AACA;AACA;;AACA,UAAMmkB,IAAI,GAAGu7D,KAAK,CAAE,EAAF,CAAL,IAAgBA,KAAK,CAAE,EAAF,CAAL,GAAc,CAA9B,CAAb;AACA,UAAMt7D,GAAG,GAAGs7D,KAAK,CAAE,EAAF,CAAL,IAAgBA,KAAK,CAAE,EAAF,CAAL,GAAc,CAA9B,CAAZ;AACA,UAAME,MAAM,GAAG,CAAEF,KAAK,CAAE,CAAF,CAAL,GAAa,CAAf,IAAqBA,KAAK,CAAE,CAAF,CAAzC;AACA,UAAMG,SAAS,GAAG,CAAEH,KAAK,CAAE,CAAF,CAAL,GAAa,CAAf,IAAqBA,KAAK,CAAE,CAAF,CAA5C;AAEA,UAAMI,OAAO,GAAG,CAAEJ,KAAK,CAAE,CAAF,CAAL,GAAa,CAAf,IAAqBA,KAAK,CAAE,CAAF,CAA1C;AACA,UAAMK,QAAQ,GAAG,CAAEJ,KAAK,CAAE,CAAF,CAAL,GAAa,CAAf,IAAqBA,KAAK,CAAE,CAAF,CAA3C;AACA,UAAM57D,IAAI,GAAGI,IAAI,GAAG27D,OAApB;AACA,UAAM97D,KAAK,GAAGG,IAAI,GAAG47D,QAArB,CArB2D,CAuB3D;AACA;;AACA,UAAMC,OAAO,GAAGP,GAAG,IAAK,CAAEK,OAAF,GAAYC,QAAjB,CAAnB;AACA,UAAME,OAAO,GAAGD,OAAO,GAAG,CAAEF,OAA5B,CA1B2D,CA4B3D;;AACA1D,MAAAA,OAAO,CAACxlE,WAAR,CAAoByQ,SAApB,CAA+B9Q,MAAM,CAACuD,QAAtC,EAAgDvD,MAAM,CAAC/E,UAAvD,EAAmE+E,MAAM,CAAC2M,KAA1E;AACA3M,MAAAA,MAAM,CAAC2pE,UAAP,CAAmBD,OAAnB;AACA1pE,MAAAA,MAAM,CAAC4pE,UAAP,CAAmBH,OAAnB;AACAzpE,MAAAA,MAAM,CAACK,WAAP,CAAmB4K,OAAnB,CAA4BjL,MAAM,CAACuD,QAAnC,EAA6CvD,MAAM,CAAC/E,UAApD,EAAgE+E,MAAM,CAAC2M,KAAvE;AACA3M,MAAAA,MAAM,CAACE,kBAAP,CAA0BhP,IAA1B,CAAgC8O,MAAM,CAACK,WAAvC,EAAqDpS,MAArD,GAjC2D,CAmC3D;AACA;AACA;;AACA,UAAM47E,KAAK,GAAGj8D,IAAI,GAAG67D,OAArB;AACA,UAAMK,IAAI,GAAGj8D,GAAG,GAAG47D,OAAnB;AACA,UAAMM,KAAK,GAAGv8D,IAAI,GAAGk8D,OAArB;AACA,UAAMM,MAAM,GAAGv8D,KAAK,IAAKy7D,GAAG,GAAGQ,OAAX,CAApB;AACA,UAAMO,IAAI,GAAGZ,MAAM,GAAGx7D,GAAT,GAAei8D,IAAf,GAAsBD,KAAnC;AACA,UAAMK,OAAO,GAAGZ,SAAS,GAAGz7D,GAAZ,GAAkBi8D,IAAlB,GAAyBD,KAAzC;AAEA7pE,MAAAA,MAAM,CAACG,gBAAP,CAAwBurB,eAAxB,CAAyCq+C,KAAzC,EAAgDC,MAAhD,EAAwDC,IAAxD,EAA8DC,OAA9D,EAAuEL,KAAvE,EAA8EC,IAA9E;AAEA;;AAED,aAASK,YAAT,CAAuBnqE,MAAvB,EAA+B0P,MAA/B,EAAwC;AAEvC,UAAKA,MAAM,KAAK,IAAhB,EAAuB;AAEtB1P,QAAAA,MAAM,CAACK,WAAP,CAAmBnP,IAAnB,CAAyB8O,MAAM,CAACpR,MAAhC;AAEA,OAJD,MAIO;AAENoR,QAAAA,MAAM,CAACK,WAAP,CAAmBrU,gBAAnB,CAAqC0jB,MAAM,CAACrP,WAA5C,EAAyDL,MAAM,CAACpR,MAAhE;AAEA;;AAEDoR,MAAAA,MAAM,CAACE,kBAAP,CAA0BhP,IAA1B,CAAgC8O,MAAM,CAACK,WAAvC,EAAqDpS,MAArD;AAEA;;AAED,YAAKk8E,YAAL,GAAoB,UAAWnqE,MAAX,EAAoB;AAEvC,UAAKqiC,OAAO,KAAK,IAAjB,EAAwB;AAExB0jC,MAAAA,QAAQ,CAACn4D,IAAT,GAAgBk4D,OAAO,CAACl4D,IAAR,GAAei4D,OAAO,CAACj4D,IAAR,GAAe5N,MAAM,CAAC4N,IAArD;AACAm4D,MAAAA,QAAQ,CAACl4D,GAAT,GAAei4D,OAAO,CAACj4D,GAAR,GAAcg4D,OAAO,CAACh4D,GAAR,GAAc7N,MAAM,CAAC6N,GAAlD;;AAEA,UAAKm4D,iBAAiB,KAAKD,QAAQ,CAACn4D,IAA/B,IAAuCq4D,gBAAgB,KAAKF,QAAQ,CAACl4D,GAA1E,EAAgF;AAE/E;AAEAw0B,QAAAA,OAAO,CAACylC,iBAAR,CAA2B;AAC1BsC,UAAAA,SAAS,EAAErE,QAAQ,CAACn4D,IADM;AAE1By8D,UAAAA,QAAQ,EAAEtE,QAAQ,CAACl4D;AAFO,SAA3B;AAKAm4D,QAAAA,iBAAiB,GAAGD,QAAQ,CAACn4D,IAA7B;AACAq4D,QAAAA,gBAAgB,GAAGF,QAAQ,CAACl4D,GAA5B;AAEA;;AAED,UAAM6B,MAAM,GAAG1P,MAAM,CAAC0P,MAAtB;AACA,UAAM6yD,OAAO,GAAGwD,QAAQ,CAACxD,OAAzB;AAEA4H,MAAAA,YAAY,CAAEpE,QAAF,EAAYr2D,MAAZ,CAAZ;;AAEA,WAAM,IAAI7sB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0/E,OAAO,CAACx/E,MAA7B,EAAqCF,CAAC,EAAtC,EAA4C;AAE3CsnF,QAAAA,YAAY,CAAE5H,OAAO,CAAE1/E,CAAF,CAAT,EAAgB6sB,MAAhB,CAAZ;AAEA;;AAEDq2D,MAAAA,QAAQ,CAAC1lE,WAAT,CAAqByQ,SAArB,CAAgCi1D,QAAQ,CAACxiE,QAAzC,EAAmDwiE,QAAQ,CAAC9qE,UAA5D,EAAwE8qE,QAAQ,CAACp5D,KAAjF,EAhCuC,CAkCvC;;AAEA3M,MAAAA,MAAM,CAACuD,QAAP,CAAgBrS,IAAhB,CAAsB60E,QAAQ,CAACxiE,QAA/B;AACAvD,MAAAA,MAAM,CAAC/E,UAAP,CAAkB/J,IAAlB,CAAwB60E,QAAQ,CAAC9qE,UAAjC;AACA+E,MAAAA,MAAM,CAAC2M,KAAP,CAAazb,IAAb,CAAmB60E,QAAQ,CAACp5D,KAA5B;AACA3M,MAAAA,MAAM,CAACpR,MAAP,CAAcsC,IAAd,CAAoB60E,QAAQ,CAACn3E,MAA7B;AACAoR,MAAAA,MAAM,CAACK,WAAP,CAAmBnP,IAAnB,CAAyB60E,QAAQ,CAAC1lE,WAAlC;AAEA,UAAMwD,QAAQ,GAAG7D,MAAM,CAAC6D,QAAxB;;AAEA,WAAM,IAAIhhB,IAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,IAAC,GAAGC,CAA1C,EAA6CD,IAAC,EAA9C,EAAoD;AAEnDghB,QAAAA,QAAQ,CAAEhhB,IAAF,CAAR,CAAcmvB,iBAAd,CAAiC,IAAjC;AAEA,OAhDsC,CAkDvC;;;AAEA,UAAKuwD,OAAO,CAACx/E,MAAR,KAAmB,CAAxB,EAA4B;AAE3BkmF,QAAAA,sBAAsB,CAAElD,QAAF,EAAYF,OAAZ,EAAqBC,OAArB,CAAtB;AAEA,OAJD,MAIO;AAEN;AAEAC,QAAAA,QAAQ,CAAC5lE,gBAAT,CAA0BjP,IAA1B,CAAgC20E,OAAO,CAAC1lE,gBAAxC;AAEA;AAED,KAhED;;AAkEA,YAAKmqE,SAAL,GAAiB,YAAY;AAE5B,aAAOvE,QAAP;AAEA,KAJD;;AAMA,YAAKwE,YAAL,GAAoB,YAAY;AAE/B,UAAKlF,WAAW,KAAK,IAArB,EAA4B;AAE3B,eAAOA,WAAW,CAACmF,cAAnB;AAEA;;AAED,UAAKlF,WAAW,KAAK,IAArB,EAA4B;AAE3B,eAAOA,WAAW,CAACkF,cAAnB;AAEA;;AAED,aAAOtoF,SAAP;AAEA,KAhBD;;AAkBA,YAAKymF,YAAL,GAAoB,UAAW8B,SAAX,EAAuB;AAE1C;AACA;AAEA,UAAKpF,WAAW,KAAK,IAArB,EAA4B;AAE3BA,QAAAA,WAAW,CAACmF,cAAZ,GAA6BC,SAA7B;AAEA;;AAED,UAAKnF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,CAACkF,cAAZ,KAA+BtoF,SAA5D,EAAwE;AAEvEojF,QAAAA,WAAW,CAACkF,cAAZ,GAA6BC,SAA7B;AAEA;AAED,KAjBD,CArjB2B,CAwkB3B;;;AAEA,QAAIC,wBAAwB,GAAG,IAA/B;;AAEA,aAASv6C,gBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAyC;AAExC80C,MAAAA,IAAI,GAAG90C,KAAK,CAACs6C,aAAN,CAAqBzF,oBAAoB,IAAI3B,cAA7C,CAAP;AACAgC,MAAAA,OAAO,GAAGl1C,KAAV;;AAEA,UAAK80C,IAAI,KAAK,IAAd,EAAqB;AAEpB,YAAMyF,KAAK,GAAGzF,IAAI,CAACyF,KAAnB;;AAEA,YAAKtF,WAAW,KAAK,IAArB,EAA4B;AAE3Bl5C,UAAAA,QAAQ,CAACy+C,0BAAT,CAAqCnF,eAArC,EAAsDJ,WAAW,CAAC1P,WAAlE;AACAxpC,UAAAA,QAAQ,CAACQ,eAAT,CAA0B84C,eAA1B;AAEA;;AAED,YAAIoF,mBAAmB,GAAG,KAA1B,CAXoB,CAapB;;AAEA,YAAKF,KAAK,CAAC7nF,MAAN,KAAiBgjF,QAAQ,CAACxD,OAAT,CAAiBx/E,MAAvC,EAAgD;AAE/CgjF,UAAAA,QAAQ,CAACxD,OAAT,CAAiBx/E,MAAjB,GAA0B,CAA1B;AACA+nF,UAAAA,mBAAmB,GAAG,IAAtB;AAEA;;AAED,aAAM,IAAIjoF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG+nF,KAAK,CAAC7nF,MAA3B,EAAmCF,CAAC,EAApC,EAA0C;AAEzC,cAAM6nC,IAAI,GAAGkgD,KAAK,CAAE/nF,CAAF,CAAlB;AAEA,cAAIuW,QAAQ,GAAG,IAAf;;AAEA,cAAKksE,WAAW,KAAK,IAArB,EAA4B;AAE3BlsE,YAAAA,QAAQ,GAAGksE,WAAW,CAACpV,WAAZ,CAAyBxlC,IAAzB,CAAX;AAEA,WAJD,MAIO;AAEN,gBAAMqgD,UAAU,GAAG3F,SAAS,CAAC4F,eAAV,CAA2B3F,WAA3B,EAAwC36C,IAAxC,CAAnB;AACAtxB,YAAAA,QAAQ,GAAG2xE,UAAU,CAAC3xE,QAAtB,CAHM,CAKN;;AACA,gBAAKvW,CAAC,KAAK,CAAX,EAAe;AAEdupC,cAAAA,QAAQ,CAAC6+C,uBAAT,CACCvF,eADD,EAECqF,UAAU,CAAC5M,YAFZ,EAGCkH,WAAW,CAACzG,iBAAZ,GAAgC18E,SAAhC,GAA4C6oF,UAAU,CAACG,mBAHxD;AAKA9+C,cAAAA,QAAQ,CAACQ,eAAT,CAA0B84C,eAA1B;AAEA;AAED;;AAED,cAAI1lE,MAAM,GAAGuiE,OAAO,CAAE1/E,CAAF,CAApB;;AAEA,cAAKmd,MAAM,KAAK9d,SAAhB,EAA4B;AAE3B8d,YAAAA,MAAM,GAAG,IAAIoqB,iBAAJ,EAAT;AACApqB,YAAAA,MAAM,CAAC0O,MAAP,CAAc45C,MAAd,CAAsBzlE,CAAtB;AACAmd,YAAAA,MAAM,CAAC5G,QAAP,GAAkB,IAAI5B,OAAJ,EAAlB;AACA+qE,YAAAA,OAAO,CAAE1/E,CAAF,CAAP,GAAemd,MAAf;AAEA;;AAEDA,UAAAA,MAAM,CAACpR,MAAP,CAAcC,SAAd,CAAyB67B,IAAI,CAAC05C,SAAL,CAAex1E,MAAxC;AACAoR,UAAAA,MAAM,CAACG,gBAAP,CAAwBtR,SAAxB,CAAmC67B,IAAI,CAACvqB,gBAAxC;AACAH,UAAAA,MAAM,CAAC5G,QAAP,CAAgBvR,GAAhB,CAAqBuR,QAAQ,CAAC7U,CAA9B,EAAiC6U,QAAQ,CAACvU,CAA1C,EAA6CuU,QAAQ,CAAC9F,KAAtD,EAA6D8F,QAAQ,CAAC7F,MAAtE;;AAEA,cAAK1Q,CAAC,KAAK,CAAX,EAAe;AAEdkjF,YAAAA,QAAQ,CAACn3E,MAAT,CAAgBsC,IAAhB,CAAsB8O,MAAM,CAACpR,MAA7B;AAEA;;AAED,cAAKk8E,mBAAmB,KAAK,IAA7B,EAAoC;AAEnC/E,YAAAA,QAAQ,CAACxD,OAAT,CAAiBlgF,IAAjB,CAAuB2d,MAAvB;AAEA;AAED;AAED,OArFuC,CAuFxC;;;AAEA,WAAM,IAAInd,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG8iF,WAAW,CAAC5iF,MAAjC,EAAyCF,IAAC,EAA1C,EAAgD;AAE/C,YAAMygF,WAAW,GAAGsC,sBAAsB,CAAE/iF,IAAF,CAA1C;AACA,YAAMwjF,UAAU,GAAGV,WAAW,CAAE9iF,IAAF,CAA9B;;AAEA,YAAKygF,WAAW,KAAK,IAAhB,IAAwB+C,UAAU,KAAKnkF,SAA5C,EAAwD;AAEvDmkF,UAAAA,UAAU,CAAClrE,MAAX,CAAmBmoE,WAAnB,EAAgCjzC,KAAhC,EAAuC60C,oBAAoB,IAAI3B,cAA/D;AAEA;AAED;;AAED,UAAKmH,wBAAL,EAAgCA,wBAAwB,CAAEt6C,IAAF,EAAQC,KAAR,CAAxB;AAEhCk1C,MAAAA,OAAO,GAAG,IAAV;AAEA;;AAED,QAAM1xD,SAAS,GAAG,IAAIkc,cAAJ,EAAlB;AAEAlc,IAAAA,SAAS,CAAC4c,gBAAV,CAA4BN,gBAA5B;;AAEA,YAAKM,gBAAL,GAAwB,UAAW7yB,QAAX,EAAsB;AAE7C8sE,MAAAA,wBAAwB,GAAG9sE,QAA3B;AAEA,KAJD;;AAMA,YAAKlE,OAAL,GAAe,YAAY,CAAE,CAA7B;;AAlsB2B;AAosB3B;;;EAtsByB5X,e;;AA0sB3B,SAASqpF,cAAT,CAAyB/+C,QAAzB,EAAmCkS,UAAnC,EAAgD;AAE/C,WAAS8sC,kBAAT,CAA6BxiD,QAA7B,EAAuCtL,GAAvC,EAA6C;AAE5CsL,IAAAA,QAAQ,CAACsV,QAAT,CAAkBl6C,KAAlB,CAAwBkN,IAAxB,CAA8BosB,GAAG,CAACrtB,KAAlC;;AAEA,QAAKqtB,GAAG,CAAC+tD,KAAT,EAAiB;AAEhBziD,MAAAA,QAAQ,CAACoV,OAAT,CAAiBh6C,KAAjB,GAAyBs5B,GAAG,CAAC1P,IAA7B;AACAgb,MAAAA,QAAQ,CAACqV,MAAT,CAAgBj6C,KAAhB,GAAwBs5B,GAAG,CAACzP,GAA5B;AAEA,KALD,MAKO,IAAKyP,GAAG,CAACoqC,SAAT,EAAqB;AAE3B9+B,MAAAA,QAAQ,CAACmV,UAAT,CAAoB/5C,KAApB,GAA4Bs5B,GAAG,CAACguD,OAAhC;AAEA;AAED;;AAED,WAASC,uBAAT,CAAkC3iD,QAAlC,EAA4CjV,QAA5C,EAAsD63D,UAAtD,EAAkEj4E,MAAlE,EAA0Ek4E,wBAA1E,EAAqG;AAEpG,QAAK93D,QAAQ,CAAC+J,mBAAd,EAAoC;AAEnCguD,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AAEA,KAJD,MAIO,IAAKA,QAAQ,CAACg4D,qBAAd,EAAsC;AAE5CD,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AAEA,KAJM,MAIA,IAAKA,QAAQ,CAACi4D,kBAAd,EAAmC;AAEzCF,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AACAk4D,MAAAA,mBAAmB,CAAEjjD,QAAF,EAAYjV,QAAZ,CAAnB;AAEA,KALM,MAKA,IAAKA,QAAQ,CAACm4D,mBAAd,EAAoC;AAE1CJ,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AACAo4D,MAAAA,oBAAoB,CAAEnjD,QAAF,EAAYjV,QAAZ,CAApB;AAEA,KALM,MAKA,IAAKA,QAAQ,CAACqzC,sBAAd,EAAuC;AAE7C0kB,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AACAq4D,MAAAA,uBAAuB,CAAEpjD,QAAF,EAAYjV,QAAZ,CAAvB;;AAEA,UAAKA,QAAQ,CAACs4D,sBAAd,EAAuC;AAEtCC,QAAAA,uBAAuB,CAAEtjD,QAAF,EAAYjV,QAAZ,EAAsB83D,wBAAtB,CAAvB;AAEA;AAED,KAXM,MAWA,IAAK93D,QAAQ,CAACw4D,oBAAd,EAAqC;AAE3CT,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AACAy4D,MAAAA,qBAAqB,CAAExjD,QAAF,EAAYjV,QAAZ,CAArB;AAEA,KALM,MAKA,IAAKA,QAAQ,CAACi6C,mBAAd,EAAoC;AAE1C8d,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AAEA,KAJM,MAIA,IAAKA,QAAQ,CAACk6C,sBAAd,EAAuC;AAE7C6d,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AACA04D,MAAAA,uBAAuB,CAAEzjD,QAAF,EAAYjV,QAAZ,CAAvB;AAEA,KALM,MAKA,IAAKA,QAAQ,CAAC24D,oBAAd,EAAqC;AAE3CZ,MAAAA,qBAAqB,CAAE9iD,QAAF,EAAYjV,QAAZ,CAArB;AAEA,KAJM,MAIA,IAAKA,QAAQ,CAAC44D,mBAAd,EAAoC;AAE1CC,MAAAA,mBAAmB,CAAE5jD,QAAF,EAAYjV,QAAZ,CAAnB;;AAEA,UAAKA,QAAQ,CAAC84D,oBAAd,EAAqC;AAEpCC,QAAAA,mBAAmB,CAAE9jD,QAAF,EAAYjV,QAAZ,CAAnB;AAEA;AAED,KAVM,MAUA,IAAKA,QAAQ,CAACg5D,gBAAd,EAAiC;AAEvCC,MAAAA,qBAAqB,CAAEhkD,QAAF,EAAYjV,QAAZ,EAAsB63D,UAAtB,EAAkCj4E,MAAlC,CAArB;AAEA,KAJM,MAIA,IAAKogB,QAAQ,CAACk5D,gBAAd,EAAiC;AAEvCC,MAAAA,sBAAsB,CAAElkD,QAAF,EAAYjV,QAAZ,CAAtB;AAEA,KAJM,MAIA,IAAKA,QAAQ,CAACo5D,gBAAd,EAAiC;AAEvCnkD,MAAAA,QAAQ,CAAC34B,KAAT,CAAejM,KAAf,CAAqBkN,IAArB,CAA2ByiB,QAAQ,CAAC1jB,KAApC;AACA24B,MAAAA,QAAQ,CAAC3R,OAAT,CAAiBjzB,KAAjB,GAAyB2vB,QAAQ,CAACsD,OAAlC;AAEA,KALM,MAKA,IAAKtD,QAAQ,CAACwV,gBAAd,EAAiC;AAEvCxV,MAAAA,QAAQ,CAACqW,kBAAT,GAA8B,KAA9B,CAFuC,CAEF;AAErC;AAED;;AAED,WAAS0hD,qBAAT,CAAgC9iD,QAAhC,EAA0CjV,QAA1C,EAAqD;AAEpDiV,IAAAA,QAAQ,CAAC3R,OAAT,CAAiBjzB,KAAjB,GAAyB2vB,QAAQ,CAACsD,OAAlC;;AAEA,QAAKtD,QAAQ,CAAC1jB,KAAd,EAAsB;AAErB24B,MAAAA,QAAQ,CAACmU,OAAT,CAAiB/4C,KAAjB,CAAuBkN,IAAvB,CAA6ByiB,QAAQ,CAAC1jB,KAAtC;AAEA;;AAED,QAAK0jB,QAAQ,CAACgG,QAAd,EAAyB;AAExBiP,MAAAA,QAAQ,CAACjP,QAAT,CAAkB31B,KAAlB,CAAwBkN,IAAxB,CAA8ByiB,QAAQ,CAACgG,QAAvC,EAAkDpwB,cAAlD,CAAkEoqB,QAAQ,CAACiG,iBAA3E;AAEA;;AAED,QAAKjG,QAAQ,CAACiH,GAAd,EAAoB;AAEnBgO,MAAAA,QAAQ,CAAChO,GAAT,CAAa52B,KAAb,GAAqB2vB,QAAQ,CAACiH,GAA9B;AAEA;;AAED,QAAKjH,QAAQ,CAACmH,QAAd,EAAyB;AAExB8N,MAAAA,QAAQ,CAAC9N,QAAT,CAAkB92B,KAAlB,GAA0B2vB,QAAQ,CAACmH,QAAnC;AAEA;;AAED,QAAKnH,QAAQ,CAACwH,OAAd,EAAwB;AAEvByN,MAAAA,QAAQ,CAACzN,OAAT,CAAiBn3B,KAAjB,GAAyB2vB,QAAQ,CAACwH,OAAlC;AACAyN,MAAAA,QAAQ,CAACxN,SAAT,CAAmBp3B,KAAnB,GAA2B2vB,QAAQ,CAACyH,SAApC;AACA,UAAKzH,QAAQ,CAACoD,IAAT,KAAkBn/B,QAAvB,EAAkCgxC,QAAQ,CAACxN,SAAT,CAAmBp3B,KAAnB,IAA4B,CAAE,CAA9B;AAElC;;AAED,QAAK2vB,QAAQ,CAAC6H,eAAd,EAAgC;AAE/BoN,MAAAA,QAAQ,CAACpN,eAAT,CAAyBx3B,KAAzB,GAAiC2vB,QAAQ,CAAC6H,eAA1C;AACAoN,MAAAA,QAAQ,CAACnN,iBAAT,CAA2Bz3B,KAA3B,GAAmC2vB,QAAQ,CAAC8H,iBAA5C;AACAmN,MAAAA,QAAQ,CAAClN,gBAAT,CAA0B13B,KAA1B,GAAkC2vB,QAAQ,CAAC+H,gBAA3C;AAEA;;AAED,QAAK/H,QAAQ,CAACkI,WAAd,EAA4B;AAE3B+M,MAAAA,QAAQ,CAAC/M,WAAT,CAAqB73B,KAArB,GAA6B2vB,QAAQ,CAACkI,WAAtC;AAEA;;AAED,QAAKlI,QAAQ,CAAC0H,SAAd,EAA0B;AAEzBuN,MAAAA,QAAQ,CAACvN,SAAT,CAAmBr3B,KAAnB,GAA2B2vB,QAAQ,CAAC0H,SAApC;AACAuN,MAAAA,QAAQ,CAACrN,WAAT,CAAqBv3B,KAArB,CAA2BkN,IAA3B,CAAiCyiB,QAAQ,CAAC4H,WAA1C;AACA,UAAK5H,QAAQ,CAACoD,IAAT,KAAkBn/B,QAAvB,EAAkCgxC,QAAQ,CAACrN,WAAT,CAAqBv3B,KAArB,CAA2B+8B,MAA3B;AAElC;;AAED,QAAKpN,QAAQ,CAACmI,WAAd,EAA4B;AAE3B8M,MAAAA,QAAQ,CAAC9M,WAAT,CAAqB93B,KAArB,GAA6B2vB,QAAQ,CAACmI,WAAtC;AAEA;;AAED,QAAKnI,QAAQ,CAACsJ,SAAT,GAAqB,CAA1B,EAA8B;AAE7B2L,MAAAA,QAAQ,CAAC3L,SAAT,CAAmBj5B,KAAnB,GAA2B2vB,QAAQ,CAACsJ,SAApC;AAEA;;AAED,QAAMhB,MAAM,GAAGqiB,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,EAA2BsI,MAA1C;;AAEA,QAAKA,MAAL,EAAc;AAEb2M,MAAAA,QAAQ,CAAC3M,MAAT,CAAgBj4B,KAAhB,GAAwBi4B,MAAxB;AAEA2M,MAAAA,QAAQ,CAACwU,UAAT,CAAoBp5C,KAApB,GAA8Bi4B,MAAM,CAAC8Q,aAAP,IAAwB9Q,MAAM,CAACxlB,qBAAP,KAAiC,KAA3D,GAAqE,CAAE,CAAvE,GAA2E,CAAvG;AAEAmyB,MAAAA,QAAQ,CAACxM,YAAT,CAAsBp4B,KAAtB,GAA8B2vB,QAAQ,CAACyI,YAAvC;AACAwM,MAAAA,QAAQ,CAACyU,GAAT,CAAar5C,KAAb,GAAqB2vB,QAAQ,CAAC0pB,GAA9B;AACAzU,MAAAA,QAAQ,CAACvM,eAAT,CAAyBr4B,KAAzB,GAAiC2vB,QAAQ,CAAC0I,eAA1C;AAEA;;AAED,QAAK1I,QAAQ,CAACoH,QAAd,EAAyB;AAExB6N,MAAAA,QAAQ,CAAC7N,QAAT,CAAkB/2B,KAAlB,GAA0B2vB,QAAQ,CAACoH,QAAnC,CAFwB,CAIxB;;AACA,UAAM4wC,WAAW,GAAKv/B,QAAQ,CAAC02B,uBAAT,KAAqC,IAAvC,GAAgD1/D,IAAI,CAACC,EAArD,GAA0D,CAA9E;AAEAulC,MAAAA,QAAQ,CAAC5N,iBAAT,CAA2Bh3B,KAA3B,GAAmC2vB,QAAQ,CAACqH,iBAAT,GAA6B2wC,WAAhE;AAEA;;AAED,QAAKh4C,QAAQ,CAACsH,KAAd,EAAsB;AAErB2N,MAAAA,QAAQ,CAAC3N,KAAT,CAAej3B,KAAf,GAAuB2vB,QAAQ,CAACsH,KAAhC;AACA2N,MAAAA,QAAQ,CAAC1N,cAAT,CAAwBl3B,KAAxB,GAAgC2vB,QAAQ,CAACuH,cAAzC;AAEA,KApGmD,CAsGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAI8xD,UAAJ;;AAEA,QAAKr5D,QAAQ,CAACiH,GAAd,EAAoB;AAEnBoyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACiH,GAAtB;AAEA,KAJD,MAIO,IAAKjH,QAAQ,CAACmI,WAAd,EAA4B;AAElCkxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACmI,WAAtB;AAEA,KAJM,MAIA,IAAKnI,QAAQ,CAAC6H,eAAd,EAAgC;AAEtCwxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC6H,eAAtB;AAEA,KAJM,MAIA,IAAK7H,QAAQ,CAAC0H,SAAd,EAA0B;AAEhC2xD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC0H,SAAtB;AAEA,KAJM,MAIA,IAAK1H,QAAQ,CAACwH,OAAd,EAAwB;AAE9B6xD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACwH,OAAtB;AAEA,KAJM,MAIA,IAAKxH,QAAQ,CAACgI,YAAd,EAA6B;AAEnCqxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACgI,YAAtB;AAEA,KAJM,MAIA,IAAKhI,QAAQ,CAACiI,YAAd,EAA6B;AAEnCoxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACiI,YAAtB;AAEA,KAJM,MAIA,IAAKjI,QAAQ,CAACmH,QAAd,EAAyB;AAE/BkyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACmH,QAAtB;AAEA,KAJM,MAIA,IAAKnH,QAAQ,CAACkI,WAAd,EAA4B;AAElCmxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACkI,WAAtB;AAEA,KAJM,MAIA,IAAKlI,QAAQ,CAACwG,YAAd,EAA6B;AAEnC6yD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACwG,YAAtB;AAEA,KAJM,MAIA,IAAKxG,QAAQ,CAAC0G,kBAAd,EAAmC;AAEzC2yD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC0G,kBAAtB;AAEA,KAJM,MAIA,IAAK1G,QAAQ,CAACyG,qBAAd,EAAsC;AAE5C4yD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACyG,qBAAtB;AAEA,KAJM,MAIA,IAAKzG,QAAQ,CAAC+G,cAAd,EAA+B;AAErCsyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC+G,cAAtB;AAEA,KAJM,MAIA,IAAK/G,QAAQ,CAACgH,uBAAd,EAAwC;AAE9CqyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACgH,uBAAtB;AAEA,KAJM,MAIA,IAAKhH,QAAQ,CAACoI,oBAAd,EAAqC;AAE3CixD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACoI,oBAAtB;AAEA,KAJM,MAIA,IAAKpI,QAAQ,CAACqI,gBAAd,EAAiC;AAEvCgxD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACqI,gBAAtB;AAEA,KAJM,MAIA,IAAKrI,QAAQ,CAAC6I,eAAd,EAAgC;AAEtCwwD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC6I,eAAtB;AAEA,KAJM,MAIA,IAAK7I,QAAQ,CAAC+I,YAAd,EAA6B;AAEnCswD,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC+I,YAAtB;AAEA,KAJM,MAIA,IAAK/I,QAAQ,CAACytB,aAAd,EAA8B;AAEpC4rC,MAAAA,UAAU,GAAGr5D,QAAQ,CAACytB,aAAtB;AAEA,KAJM,MAIA,IAAKztB,QAAQ,CAAC0tB,iBAAd,EAAkC;AAExC2rC,MAAAA,UAAU,GAAGr5D,QAAQ,CAAC0tB,iBAAtB;AAEA;;AAED,QAAK2rC,UAAU,KAAK9qF,SAApB,EAAgC;AAE/B;AACA,UAAK8qF,UAAU,CAACh0E,mBAAhB,EAAsC;AAErCg0E,QAAAA,UAAU,GAAGA,UAAU,CAAC3zE,OAAxB;AAEA;;AAED,UAAK2zE,UAAU,CAAC92E,gBAAX,KAAgC,IAArC,EAA4C;AAE3C82E,QAAAA,UAAU,CAACp8D,YAAX;AAEA;;AAEDgY,MAAAA,QAAQ,CAACoU,WAAT,CAAqBh5C,KAArB,CAA2BkN,IAA3B,CAAiC87E,UAAU,CAACp+E,MAA5C;AAEA,KA/NmD,CAiOpD;AACA;AACA;;;AAEA,QAAIq+E,WAAJ;;AAEA,QAAKt5D,QAAQ,CAACsH,KAAd,EAAsB;AAErBgyD,MAAAA,WAAW,GAAGt5D,QAAQ,CAACsH,KAAvB;AAEA,KAJD,MAIO,IAAKtH,QAAQ,CAACoH,QAAd,EAAyB;AAE/BkyD,MAAAA,WAAW,GAAGt5D,QAAQ,CAACoH,QAAvB;AAEA;;AAED,QAAKkyD,WAAW,KAAK/qF,SAArB,EAAiC;AAEhC;AACA,UAAK+qF,WAAW,CAACj0E,mBAAjB,EAAuC;AAEtCi0E,QAAAA,WAAW,GAAGA,WAAW,CAAC5zE,OAA1B;AAEA;;AAED,UAAK4zE,WAAW,CAAC/2E,gBAAZ,KAAiC,IAAtC,EAA6C;AAE5C+2E,QAAAA,WAAW,CAACr8D,YAAZ;AAEA;;AAEDgY,MAAAA,QAAQ,CAACqU,YAAT,CAAsBj5C,KAAtB,CAA4BkN,IAA5B,CAAkC+7E,WAAW,CAACr+E,MAA9C;AAEA;AAED;;AAED,WAAS49E,mBAAT,CAA8B5jD,QAA9B,EAAwCjV,QAAxC,EAAmD;AAElDiV,IAAAA,QAAQ,CAACmU,OAAT,CAAiB/4C,KAAjB,CAAuBkN,IAAvB,CAA6ByiB,QAAQ,CAAC1jB,KAAtC;AACA24B,IAAAA,QAAQ,CAAC3R,OAAT,CAAiBjzB,KAAjB,GAAyB2vB,QAAQ,CAACsD,OAAlC;AAEA;;AAED,WAASy1D,mBAAT,CAA8B9jD,QAA9B,EAAwCjV,QAAxC,EAAmD;AAElDiV,IAAAA,QAAQ,CAAC7L,QAAT,CAAkB/4B,KAAlB,GAA0B2vB,QAAQ,CAACoJ,QAAnC;AACA6L,IAAAA,QAAQ,CAAC4X,SAAT,CAAmBx8C,KAAnB,GAA2B2vB,QAAQ,CAACoJ,QAAT,GAAoBpJ,QAAQ,CAACqJ,OAAxD;AACA4L,IAAAA,QAAQ,CAACjc,KAAT,CAAe3oB,KAAf,GAAuB2vB,QAAQ,CAAChH,KAAhC;AAEA;;AAED,WAASigE,qBAAT,CAAgChkD,QAAhC,EAA0CjV,QAA1C,EAAoD63D,UAApD,EAAgEj4E,MAAhE,EAAyE;AAExEq1B,IAAAA,QAAQ,CAACmU,OAAT,CAAiB/4C,KAAjB,CAAuBkN,IAAvB,CAA6ByiB,QAAQ,CAAC1jB,KAAtC;AACA24B,IAAAA,QAAQ,CAAC3R,OAAT,CAAiBjzB,KAAjB,GAAyB2vB,QAAQ,CAACsD,OAAlC;AACA2R,IAAAA,QAAQ,CAAC92B,IAAT,CAAc9N,KAAd,GAAsB2vB,QAAQ,CAAC7hB,IAAT,GAAgB05E,UAAtC;AACA5iD,IAAAA,QAAQ,CAACjc,KAAT,CAAe3oB,KAAf,GAAuBuP,MAAM,GAAG,GAAhC;;AAEA,QAAKogB,QAAQ,CAACiH,GAAd,EAAoB;AAEnBgO,MAAAA,QAAQ,CAAChO,GAAT,CAAa52B,KAAb,GAAqB2vB,QAAQ,CAACiH,GAA9B;AAEA;;AAED,QAAKjH,QAAQ,CAACmH,QAAd,EAAyB;AAExB8N,MAAAA,QAAQ,CAAC9N,QAAT,CAAkB92B,KAAlB,GAA0B2vB,QAAQ,CAACmH,QAAnC;AAEA;;AAED,QAAKnH,QAAQ,CAACsJ,SAAT,GAAqB,CAA1B,EAA8B;AAE7B2L,MAAAA,QAAQ,CAAC3L,SAAT,CAAmBj5B,KAAnB,GAA2B2vB,QAAQ,CAACsJ,SAApC;AAEA,KAvBuE,CAyBxE;AACA;AACA;;;AAEA,QAAI+vD,UAAJ;;AAEA,QAAKr5D,QAAQ,CAACiH,GAAd,EAAoB;AAEnBoyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACiH,GAAtB;AAEA,KAJD,MAIO,IAAKjH,QAAQ,CAACmH,QAAd,EAAyB;AAE/BkyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACmH,QAAtB;AAEA;;AAED,QAAKkyD,UAAU,KAAK9qF,SAApB,EAAgC;AAE/B,UAAK8qF,UAAU,CAAC92E,gBAAX,KAAgC,IAArC,EAA4C;AAE3C82E,QAAAA,UAAU,CAACp8D,YAAX;AAEA;;AAEDgY,MAAAA,QAAQ,CAACoU,WAAT,CAAqBh5C,KAArB,CAA2BkN,IAA3B,CAAiC87E,UAAU,CAACp+E,MAA5C;AAEA;AAED;;AAED,WAASk+E,sBAAT,CAAiClkD,QAAjC,EAA2CjV,QAA3C,EAAsD;AAErDiV,IAAAA,QAAQ,CAACmU,OAAT,CAAiB/4C,KAAjB,CAAuBkN,IAAvB,CAA6ByiB,QAAQ,CAAC1jB,KAAtC;AACA24B,IAAAA,QAAQ,CAAC3R,OAAT,CAAiBjzB,KAAjB,GAAyB2vB,QAAQ,CAACsD,OAAlC;AACA2R,IAAAA,QAAQ,CAACp6B,QAAT,CAAkBxK,KAAlB,GAA0B2vB,QAAQ,CAACnlB,QAAnC;;AAEA,QAAKmlB,QAAQ,CAACiH,GAAd,EAAoB;AAEnBgO,MAAAA,QAAQ,CAAChO,GAAT,CAAa52B,KAAb,GAAqB2vB,QAAQ,CAACiH,GAA9B;AAEA;;AAED,QAAKjH,QAAQ,CAACmH,QAAd,EAAyB;AAExB8N,MAAAA,QAAQ,CAAC9N,QAAT,CAAkB92B,KAAlB,GAA0B2vB,QAAQ,CAACmH,QAAnC;AAEA;;AAED,QAAKnH,QAAQ,CAACsJ,SAAT,GAAqB,CAA1B,EAA8B;AAE7B2L,MAAAA,QAAQ,CAAC3L,SAAT,CAAmBj5B,KAAnB,GAA2B2vB,QAAQ,CAACsJ,SAApC;AAEA,KAtBoD,CAwBrD;AACA;AACA;;;AAEA,QAAI+vD,UAAJ;;AAEA,QAAKr5D,QAAQ,CAACiH,GAAd,EAAoB;AAEnBoyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACiH,GAAtB;AAEA,KAJD,MAIO,IAAKjH,QAAQ,CAACmH,QAAd,EAAyB;AAE/BkyD,MAAAA,UAAU,GAAGr5D,QAAQ,CAACmH,QAAtB;AAEA;;AAED,QAAKkyD,UAAU,KAAK9qF,SAApB,EAAgC;AAE/B,UAAK8qF,UAAU,CAAC92E,gBAAX,KAAgC,IAArC,EAA4C;AAE3C82E,QAAAA,UAAU,CAACp8D,YAAX;AAEA;;AAEDgY,MAAAA,QAAQ,CAACoU,WAAT,CAAqBh5C,KAArB,CAA2BkN,IAA3B,CAAiC87E,UAAU,CAACp+E,MAA5C;AAEA;AAED;;AAED,WAASm9E,oBAAT,CAA+BnjD,QAA/B,EAAyCjV,QAAzC,EAAoD;AAEnDiV,IAAAA,QAAQ,CAAC/O,QAAT,CAAkB71B,KAAlB,CAAwBkN,IAAxB,CAA8ByiB,QAAQ,CAACkG,QAAvC;AACA+O,IAAAA,QAAQ,CAAC5O,SAAT,CAAmBh2B,KAAnB,GAA2BZ,IAAI,CAACc,GAAL,CAAUyvB,QAAQ,CAACqG,SAAnB,EAA8B,IAA9B,CAA3B,CAHmD,CAGc;AAEjE;;AAED,WAAS6xD,mBAAT,CAA8BjjD,QAA9B,EAAwCjV,QAAxC,EAAmD;AAElD,QAAKA,QAAQ,CAAC2I,WAAd,EAA4B;AAE3BsM,MAAAA,QAAQ,CAACtM,WAAT,CAAqBt4B,KAArB,GAA6B2vB,QAAQ,CAAC2I,WAAtC;AAEA;AAED;;AAED,WAAS0vD,uBAAT,CAAkCpjD,QAAlC,EAA4CjV,QAA5C,EAAuD;AAEtDiV,IAAAA,QAAQ,CAACtP,SAAT,CAAmBt1B,KAAnB,GAA2B2vB,QAAQ,CAAC2F,SAApC;AACAsP,IAAAA,QAAQ,CAACrP,SAAT,CAAmBv1B,KAAnB,GAA2B2vB,QAAQ,CAAC4F,SAApC;;AAEA,QAAK5F,QAAQ,CAACgI,YAAd,EAA6B;AAE5BiN,MAAAA,QAAQ,CAACjN,YAAT,CAAsB33B,KAAtB,GAA8B2vB,QAAQ,CAACgI,YAAvC;AAEA;;AAED,QAAKhI,QAAQ,CAACiI,YAAd,EAA6B;AAE5BgN,MAAAA,QAAQ,CAAChN,YAAT,CAAsB53B,KAAtB,GAA8B2vB,QAAQ,CAACiI,YAAvC;AAEA;;AAED,QAAMK,MAAM,GAAGqiB,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,EAA2BsI,MAA1C;;AAEA,QAAKA,MAAL,EAAc;AAEb;AACA2M,MAAAA,QAAQ,CAACzM,eAAT,CAAyBn4B,KAAzB,GAAiC2vB,QAAQ,CAACwI,eAA1C;AAEA;AAED;;AAED,WAAS+vD,uBAAT,CAAkCtjD,QAAlC,EAA4CjV,QAA5C,EAAsD83D,wBAAtD,EAAiF;AAEhF7iD,IAAAA,QAAQ,CAACyU,GAAT,CAAar5C,KAAb,GAAqB2vB,QAAQ,CAAC0pB,GAA9B,CAFgF,CAE7C;;AAEnC,QAAK1pB,QAAQ,CAAC6F,KAAT,GAAiB,CAAtB,EAA0B;AAEzBoP,MAAAA,QAAQ,CAACnP,UAAT,CAAoBz1B,KAApB,CAA0BkN,IAA1B,CAAgCyiB,QAAQ,CAAC8F,UAAzC,EAAsDlwB,cAAtD,CAAsEoqB,QAAQ,CAAC6F,KAA/E;AAEAoP,MAAAA,QAAQ,CAAClP,cAAT,CAAwB11B,KAAxB,GAAgC2vB,QAAQ,CAAC+F,cAAzC;;AAEA,UAAK/F,QAAQ,CAACytB,aAAd,EAA8B;AAE7BxY,QAAAA,QAAQ,CAACwY,aAAT,CAAuBp9C,KAAvB,GAA+B2vB,QAAQ,CAACytB,aAAxC;AAEA;;AAED,UAAKztB,QAAQ,CAAC0tB,iBAAd,EAAkC;AAEjCzY,QAAAA,QAAQ,CAACyY,iBAAT,CAA2Br9C,KAA3B,GAAmC2vB,QAAQ,CAAC0tB,iBAA5C;AAEA;AAED;;AAED,QAAK1tB,QAAQ,CAACsG,SAAT,GAAqB,CAA1B,EAA8B;AAE7B2O,MAAAA,QAAQ,CAAC3O,SAAT,CAAmBj2B,KAAnB,GAA2B2vB,QAAQ,CAACsG,SAApC;AACA2O,MAAAA,QAAQ,CAAC1O,kBAAT,CAA4Bl2B,KAA5B,GAAoC2vB,QAAQ,CAACuG,kBAA7C;;AAEA,UAAKvG,QAAQ,CAACwG,YAAd,EAA6B;AAE5ByO,QAAAA,QAAQ,CAACzO,YAAT,CAAsBn2B,KAAtB,GAA8B2vB,QAAQ,CAACwG,YAAvC;AAEA;;AAED,UAAKxG,QAAQ,CAACyG,qBAAd,EAAsC;AAErCwO,QAAAA,QAAQ,CAACxO,qBAAT,CAA+Bp2B,KAA/B,GAAuC2vB,QAAQ,CAACyG,qBAAhD;AAEA;;AAED,UAAKzG,QAAQ,CAAC0G,kBAAd,EAAmC;AAElCuO,QAAAA,QAAQ,CAACtO,oBAAT,CAA8Bt2B,KAA9B,CAAoCkN,IAApC,CAA0CyiB,QAAQ,CAAC2G,oBAAnD;AACAsO,QAAAA,QAAQ,CAACvO,kBAAT,CAA4Br2B,KAA5B,GAAoC2vB,QAAQ,CAAC0G,kBAA7C;;AAEA,YAAK1G,QAAQ,CAACoD,IAAT,KAAkBn/B,QAAvB,EAAkC;AAEjCgxC,UAAAA,QAAQ,CAACtO,oBAAT,CAA8Bt2B,KAA9B,CAAoC+8B,MAApC;AAEA;AAED;AAED;;AAED,QAAKpN,QAAQ,CAAC4G,WAAT,GAAuB,CAA5B,EAAgC;AAE/BqO,MAAAA,QAAQ,CAACrO,WAAT,CAAqBv2B,KAArB,GAA6B2vB,QAAQ,CAAC4G,WAAtC;AACAqO,MAAAA,QAAQ,CAACpO,cAAT,CAAwBx2B,KAAxB,GAAgC2vB,QAAQ,CAAC6G,cAAzC;AACAoO,MAAAA,QAAQ,CAACsY,2BAAT,CAAqCl9C,KAArC,GAA6C2vB,QAAQ,CAAC8G,yBAAT,CAAoC,CAApC,CAA7C;AACAmO,MAAAA,QAAQ,CAACuY,2BAAT,CAAqCn9C,KAArC,GAA6C2vB,QAAQ,CAAC8G,yBAAT,CAAoC,CAApC,CAA7C;;AAEA,UAAK9G,QAAQ,CAAC+G,cAAd,EAA+B;AAE9BkO,QAAAA,QAAQ,CAAClO,cAAT,CAAwB12B,KAAxB,GAAgC2vB,QAAQ,CAAC+G,cAAzC;AAEA;;AAED,UAAK/G,QAAQ,CAACgH,uBAAd,EAAwC;AAEvCiO,QAAAA,QAAQ,CAACjO,uBAAT,CAAiC32B,KAAjC,GAAyC2vB,QAAQ,CAACgH,uBAAlD;AAEA;AAED;;AAED,QAAKhH,QAAQ,CAAC4I,YAAT,GAAwB,CAA7B,EAAiC;AAEhCqM,MAAAA,QAAQ,CAACrM,YAAT,CAAsBv4B,KAAtB,GAA8B2vB,QAAQ,CAAC4I,YAAvC;AACAqM,MAAAA,QAAQ,CAAC2Y,sBAAT,CAAgCv9C,KAAhC,GAAwCynF,wBAAwB,CAACpyE,OAAjE;AACAuvB,MAAAA,QAAQ,CAAC0Y,uBAAT,CAAiCt9C,KAAjC,CAAuC6D,GAAvC,CAA4C4jF,wBAAwB,CAACn4E,KAArE,EAA4Em4E,wBAAwB,CAACl4E,MAArG;;AAEA,UAAKogB,QAAQ,CAAC6I,eAAd,EAAgC;AAE/BoM,QAAAA,QAAQ,CAACpM,eAAT,CAAyBx4B,KAAzB,GAAiC2vB,QAAQ,CAAC6I,eAA1C;AAEA;;AAEDoM,MAAAA,QAAQ,CAACnM,SAAT,CAAmBz4B,KAAnB,GAA2B2vB,QAAQ,CAAC8I,SAApC;;AAEA,UAAK9I,QAAQ,CAAC+I,YAAd,EAA6B;AAE5BkM,QAAAA,QAAQ,CAAClM,YAAT,CAAsB14B,KAAtB,GAA8B2vB,QAAQ,CAAC+I,YAAvC;AAEA;;AAEDkM,MAAAA,QAAQ,CAACjM,mBAAT,CAA6B34B,KAA7B,GAAqC2vB,QAAQ,CAACgJ,mBAA9C;AACAiM,MAAAA,QAAQ,CAAChM,gBAAT,CAA0B54B,KAA1B,CAAgCkN,IAAhC,CAAsCyiB,QAAQ,CAACiJ,gBAA/C;AAEA;;AAEDgM,IAAAA,QAAQ,CAAC9O,iBAAT,CAA2B91B,KAA3B,GAAmC2vB,QAAQ,CAACmG,iBAA5C;AACA8O,IAAAA,QAAQ,CAAC7O,aAAT,CAAuB/1B,KAAvB,CAA6BkN,IAA7B,CAAmCyiB,QAAQ,CAACoG,aAA5C;;AAEA,QAAKpG,QAAQ,CAACoI,oBAAd,EAAqC;AAEpC6M,MAAAA,QAAQ,CAAC7M,oBAAT,CAA8B/3B,KAA9B,GAAsC2vB,QAAQ,CAACoI,oBAA/C;AAEA;;AAED,QAAKpI,QAAQ,CAACqI,gBAAd,EAAiC;AAEhC4M,MAAAA,QAAQ,CAAC5M,gBAAT,CAA0Bh4B,KAA1B,GAAkC2vB,QAAQ,CAACqI,gBAA3C;AAEA;AAED;;AAED,WAASowD,qBAAT,CAAgCxjD,QAAhC,EAA0CjV,QAA1C,EAAqD;AAEpD,QAAKA,QAAQ,CAACkH,MAAd,EAAuB;AAEtB+N,MAAAA,QAAQ,CAAC/N,MAAT,CAAgB72B,KAAhB,GAAwB2vB,QAAQ,CAACkH,MAAjC;AAEA;AAED;;AAED,WAASwxD,uBAAT,CAAkCzjD,QAAlC,EAA4CjV,QAA5C,EAAuD;AAEtDiV,IAAAA,QAAQ,CAACiY,iBAAT,CAA2B78C,KAA3B,CAAiCkN,IAAjC,CAAuCyiB,QAAQ,CAACktB,iBAAhD;AACAjY,IAAAA,QAAQ,CAACkY,YAAT,CAAsB98C,KAAtB,GAA8B2vB,QAAQ,CAACmtB,YAAvC;AACAlY,IAAAA,QAAQ,CAACmY,WAAT,CAAqB/8C,KAArB,GAA6B2vB,QAAQ,CAACotB,WAAtC;AAEA;;AAED,SAAO;AACNqqC,IAAAA,kBAAkB,EAAEA,kBADd;AAENG,IAAAA,uBAAuB,EAAEA;AAFnB,GAAP;AAKA;;AAED,SAAS2B,mBAAT,GAA+B;AAE9B,MAAM75E,MAAM,GAAG/D,eAAe,CAAE,QAAF,CAA9B;AACA+D,EAAAA,MAAM,CAAC/B,KAAP,CAAa67E,OAAb,GAAuB,OAAvB;AACA,SAAO95E,MAAP;AAEA;;AAED,SAAS+5E,aAAT,GAA0C;AAAA,MAAlB/5D,UAAkB,uEAAL,EAAK;AAEzC,OAAKg6D,eAAL,GAAuB,IAAvB;;AAEA,MAAMt6E,OAAO,GAAGsgB,UAAU,CAAChgB,MAAX,KAAsBnR,SAAtB,GAAkCmxB,UAAU,CAAChgB,MAA7C,GAAsD65E,mBAAmB,EAAzF;AAAA,MACCI,QAAQ,GAAGj6D,UAAU,CAAC7f,OAAX,KAAuBtR,SAAvB,GAAmCmxB,UAAU,CAAC7f,OAA9C,GAAwD,IADpE;AAAA,MAGC+5E,MAAM,GAAGl6D,UAAU,CAACpa,KAAX,KAAqB/W,SAArB,GAAiCmxB,UAAU,CAACpa,KAA5C,GAAoD,IAH9D;AAAA,MAICu0E,QAAQ,GAAGn6D,UAAU,CAACga,OAAX,KAAuBnrC,SAAvB,GAAmCmxB,UAAU,CAACga,OAA9C,GAAwD,IAJpE;AAAA,MAKCogD,UAAU,GAAGp6D,UAAU,CAACu0D,SAAX,KAAyB1lF,SAAzB,GAAqCmxB,UAAU,CAACu0D,SAAhD,GAA4D,KAL1E;AAAA,MAMC8F,mBAAmB,GAAGr6D,UAAU,CAAC0F,kBAAX,KAAkC72B,SAAlC,GAA8CmxB,UAAU,CAAC0F,kBAAzD,GAA8E,IANrG;AAAA,MAOC40D,sBAAsB,GAAGt6D,UAAU,CAACu6D,qBAAX,KAAqC1rF,SAArC,GAAiDmxB,UAAU,CAACu6D,qBAA5D,GAAoF,KAP9G;AAAA,MAQCC,gBAAgB,GAAGx6D,UAAU,CAACy6D,eAAX,KAA+B5rF,SAA/B,GAA2CmxB,UAAU,CAACy6D,eAAtD,GAAwE,SAR5F;AAAA,MASCC,6BAA6B,GAAG16D,UAAU,CAAC26D,4BAAX,KAA4C9rF,SAA5C,GAAwDmxB,UAAU,CAAC26D,4BAAnE,GAAkG,KATnI;;AAWA,MAAIC,MAAJ;;AAEA,MAAKX,QAAQ,KAAK,IAAlB,EAAyB;AAExBW,IAAAA,MAAM,GAAGX,QAAQ,CAAC9H,oBAAT,GAAgCr7E,KAAzC;AAEA,GAJD,MAIO;AAEN8jF,IAAAA,MAAM,GAAG56D,UAAU,CAAClpB,KAAX,KAAqBjI,SAArB,GAAiCmxB,UAAU,CAAClpB,KAA5C,GAAoD,KAA7D;AAEA;;AAED,MAAI+jF,iBAAiB,GAAG,IAAxB;AACA,MAAIC,kBAAkB,GAAG,IAAzB,CA5ByC,CA8BzC;AACA;;AAEA,MAAMC,eAAe,GAAG,EAAxB;AACA,MAAMC,gBAAgB,GAAG,EAAzB,CAlCyC,CAoCzC;;AAEA,OAAKC,UAAL,GAAkBv7E,OAAlB,CAtCyC,CAwCzC;;AACA,OAAK2wD,KAAL,GAAa;AAEZ;AACF;AACA;AACA;AACEC,IAAAA,iBAAiB,EAAE;AANP,GAAb,CAzCyC,CAkDzC;;AAEA,OAAKlhB,SAAL,GAAiB,IAAjB;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACA,OAAKC,gBAAL,GAAwB,IAAxB,CAvDyC,CAyDzC;;AAEA,OAAK2rC,WAAL,GAAmB,IAAnB,CA3DyC,CA6DzC;;AAEA,OAAKn2D,cAAL,GAAsB,EAAtB;AACA,OAAKqxB,oBAAL,GAA4B,KAA5B,CAhEyC,CAkEzC;;AAEA,OAAKuZ,cAAL,GAAsBvjE,cAAtB,CApEyC,CAsEzC;;AAEA,OAAKqjE,uBAAL,GAA+B,KAA/B,CAxEyC,CA0EzC;;AAEA,OAAKr2B,WAAL,GAAmBxyC,aAAnB;AACA,OAAKu0F,mBAAL,GAA2B,GAA3B,CA7EyC,CA+EzC;;AAEA7lF,EAAAA,MAAM,CAAConB,gBAAP,CAAyB,IAAzB,EAA+B;AAE9B;AAEA0+D,IAAAA,WAAW,EAAE;AACZ/8C,MAAAA,GAAG,EAAE,eAAY;AAEhB5pC,QAAAA,OAAO,CAACC,IAAR,CAAc,qDAAd;AACA,eAAO,CAAP;AAEA,OANW;AAOZF,MAAAA,GAAG,EAAE,eAAY;AAEhBC,QAAAA,OAAO,CAACC,IAAR,CAAc,qDAAd;AAEA;AAXW;AAJiB,GAA/B,EAjFyC,CAqGzC;;AAEA,MAAM2mF,KAAK,GAAG,IAAd;;AAEA,MAAIC,cAAc,GAAG,KAArB,CAzGyC,CA2GzC;;AAEA,MAAIC,sBAAsB,GAAG,CAA7B;AACA,MAAIC,yBAAyB,GAAG,CAAhC;AACA,MAAIC,oBAAoB,GAAG,IAA3B;;AACA,MAAIC,kBAAkB,GAAG,CAAE,CAA3B;;AAEA,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAMC,gBAAgB,GAAG,IAAIz3E,OAAJ,EAAzB;;AACA,MAAM03E,eAAe,GAAG,IAAI13E,OAAJ,EAAxB;;AACA,MAAI23E,mBAAmB,GAAG,IAA1B,CAtHyC,CAwHzC;;AAEA,MAAIC,MAAM,GAAGr8E,OAAO,CAACO,KAArB;AACA,MAAI+7E,OAAO,GAAGt8E,OAAO,CAACQ,MAAtB;AAEA,MAAI+7E,WAAW,GAAG,CAAlB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,gBAAgB,GAAG,IAAvB;;AAEA,MAAMlhB,SAAS,GAAG,IAAI92D,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB43E,MAAnB,EAA2BC,OAA3B,CAAlB;;AACA,MAAMI,QAAQ,GAAG,IAAIj4E,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB43E,MAAnB,EAA2BC,OAA3B,CAAjB;;AACA,MAAIK,YAAY,GAAG,KAAnB,CAnIyC,CAqIzC;;AAEA,MAAMvhB,QAAQ,GAAG,IAAI5/B,OAAJ,EAAjB,CAvIyC,CAyIzC;;;AAEA,MAAIohD,gBAAgB,GAAG,KAAvB;AACA,MAAIC,qBAAqB,GAAG,KAA5B,CA5IyC,CA8IzC;;AAEA,MAAIC,yBAAyB,GAAG,IAAhC,CAhJyC,CAkJzC;;AAEA,MAAMC,iBAAiB,GAAG,IAAIpmE,OAAJ,EAA1B;;AAEA,MAAM8jB,QAAQ,GAAG,IAAIzkC,OAAJ,EAAjB;;AACA,MAAMgnF,QAAQ,GAAG,IAAI9wE,OAAJ,EAAjB;;AAEA,MAAM+wE,WAAW,GAAG;AAAEh9D,IAAAA,UAAU,EAAE,IAAd;AAAoBsK,IAAAA,GAAG,EAAE,IAAzB;AAA+BrK,IAAAA,WAAW,EAAE,IAA5C;AAAkDg9D,IAAAA,gBAAgB,EAAE,IAApE;AAA0El9D,IAAAA,OAAO,EAAE;AAAnF,GAApB;;AAEA,WAASm9D,mBAAT,GAA+B;AAE9B,WAAOpB,oBAAoB,KAAK,IAAzB,GAAgCQ,WAAhC,GAA8C,CAArD;AAEA,GA/JwC,CAiKzC;;;AAEA,MAAIzX,GAAG,GAAGyV,QAAV;;AAEA,WAAS75E,UAAT,CAAqB08E,YAArB,EAAmCC,iBAAnC,EAAuD;AAEtD,SAAM,IAAIvtF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGstF,YAAY,CAACptF,MAAlC,EAA0CF,CAAC,EAA3C,EAAiD;AAEhD,UAAMwtF,WAAW,GAAGF,YAAY,CAAEttF,CAAF,CAAhC;;AACA,UAAM2Q,OAAO,GAAGT,OAAO,CAACU,UAAR,CAAoB48E,WAApB,EAAiCD,iBAAjC,CAAhB;;AACA,UAAK58E,OAAO,KAAK,IAAjB,EAAwB,OAAOA,OAAP;AAExB;;AAED,WAAO,IAAP;AAEA;;AAED,MAAI;AAEH,QAAM48E,iBAAiB,GAAG;AACzBjmF,MAAAA,KAAK,EAAE,IADkB;AAEzB8O,MAAAA,KAAK,EAAEs0E,MAFkB;AAGzBlgD,MAAAA,OAAO,EAAEmgD,QAHgB;AAIzB5F,MAAAA,SAAS,EAAE6F,UAJc;AAKzB10D,MAAAA,kBAAkB,EAAE20D,mBALK;AAMzBE,MAAAA,qBAAqB,EAAED,sBANE;AAOzBG,MAAAA,eAAe,EAAED,gBAPQ;AAQzBG,MAAAA,4BAA4B,EAAED;AARL,KAA1B,CAFG,CAaH;;AACA,QAAK,kBAAkBh7E,OAAvB,EAAiCA,OAAO,CAACkuB,YAAR,CAAsB,aAAtB,sBAAkDzqC,QAAlD,GAd9B,CAgBH;;AACAuc,IAAAA,OAAO,CAACq4C,gBAAR,CAA0B,kBAA1B,EAA8CklC,aAA9C,EAA6D,KAA7D;;AACAv9E,IAAAA,OAAO,CAACq4C,gBAAR,CAA0B,sBAA1B,EAAkDmlC,gBAAlD,EAAoE,KAApE;;AACAx9E,IAAAA,OAAO,CAACq4C,gBAAR,CAA0B,2BAA1B,EAAuDolC,sBAAvD,EAA+E,KAA/E;;AAEA,QAAK3Y,GAAG,KAAK,IAAb,EAAoB;AAEnB,UAAMsY,YAAY,GAAG,CAAE,QAAF,EAAY,OAAZ,EAAqB,oBAArB,CAArB;;AAEA,UAAKzB,KAAK,CAAC+B,gBAAN,KAA2B,IAAhC,EAAuC;AAEtCN,QAAAA,YAAY,CAACO,KAAb;AAEA;;AAED7Y,MAAAA,GAAG,GAAGpkE,UAAU,CAAE08E,YAAF,EAAgBC,iBAAhB,CAAhB;;AAEA,UAAKvY,GAAG,KAAK,IAAb,EAAoB;AAEnB,YAAKpkE,UAAU,CAAE08E,YAAF,CAAf,EAAkC;AAEjC,gBAAM,IAAI5nF,KAAJ,CAAW,6DAAX,CAAN;AAEA,SAJD,MAIO;AAEN,gBAAM,IAAIA,KAAJ,CAAW,+BAAX,CAAN;AAEA;AAED;AAED,KA/CE,CAiDH;;;AAEA,QAAKsvE,GAAG,CAACxvB,wBAAJ,KAAiCnmD,SAAtC,EAAkD;AAEjD21E,MAAAA,GAAG,CAACxvB,wBAAJ,GAA+B,YAAY;AAE1C,eAAO;AAAE,sBAAY,CAAd;AAAiB,sBAAY,CAA7B;AAAgC,uBAAa;AAA7C,SAAP;AAEA,OAJD;AAMA;AAED,GA7DD,CA6DE,OAAQr9C,KAAR,EAAgB;AAEjBlD,IAAAA,OAAO,CAACkD,KAAR,CAAe,0BAA0BA,KAAK,CAAC2lF,OAA/C;AACA,UAAM3lF,KAAN;AAEA;;AAED,MAAIy+B,UAAJ,EAAgBoH,YAAhB,EAA8B6Q,KAA9B,EAAqC8F,IAArC;AACA,MAAIlJ,UAAJ,EAAgBtnC,QAAhB,EAA0ByqC,QAA1B,EAAoCmkB,UAApC,EAAgDtiD,UAAhD,EAA4D6O,UAA5D,EAAwEwvB,OAAxE;AACA,MAAIivC,YAAJ,EAAkBx+D,SAAlB,EAA6By+D,WAA7B,EAA0CnjB,YAA1C,EAAwDlkC,QAAxD,EAAkEu+B,SAAlE;AAEA,MAAI/0C,UAAJ,EAAgB89D,YAAhB,EAA8BC,cAA9B,EAA8CC,qBAA9C;AAEA,MAAIlZ,KAAJ,EAAWn0B,aAAX;;AAEA,WAASstC,aAAT,GAAyB;AAExBxnD,IAAAA,UAAU,GAAG,IAAIooB,eAAJ,CAAqBgmB,GAArB,CAAb;AAEAhnC,IAAAA,YAAY,GAAG,IAAIkX,iBAAJ,CAAuB8vB,GAAvB,EAA4BpuC,UAA5B,EAAwCpW,UAAxC,CAAf;AAEAoW,IAAAA,UAAU,CAACqgB,IAAX,CAAiBjZ,YAAjB;AAEAinC,IAAAA,KAAK,GAAG,IAAIoH,UAAJ,CAAgBrH,GAAhB,EAAqBpuC,UAArB,EAAiCoH,YAAjC,CAAR;AAEA6Q,IAAAA,KAAK,GAAG,IAAI+vB,UAAJ,CAAgBoG,GAAhB,EAAqBpuC,UAArB,EAAiCoH,YAAjC,CAAR;AAEA2W,IAAAA,IAAI,GAAG,IAAImL,SAAJ,EAAP;AACArU,IAAAA,UAAU,GAAG,IAAIuqB,eAAJ,EAAb;AACA7xD,IAAAA,QAAQ,GAAG,IAAI4gE,aAAJ,CAAmBC,GAAnB,EAAwBpuC,UAAxB,EAAoCiY,KAApC,EAA2CpD,UAA3C,EAAuDzN,YAAvD,EAAqEinC,KAArE,EAA4EtwB,IAA5E,CAAX;AACA/F,IAAAA,QAAQ,GAAG,IAAIuJ,aAAJ,CAAmB0jC,KAAnB,CAAX;AACA9oB,IAAAA,UAAU,GAAG,IAAIxU,eAAJ,CAAqBs9B,KAArB,CAAb;AACAprE,IAAAA,UAAU,GAAG,IAAIqtB,eAAJ,CAAqBknC,GAArB,EAA0BhnC,YAA1B,CAAb;AACA8S,IAAAA,aAAa,GAAG,IAAIL,kBAAJ,CAAwBu0B,GAAxB,EAA6BpuC,UAA7B,EAAyCnmB,UAAzC,EAAqDutB,YAArD,CAAhB;AACA1e,IAAAA,UAAU,GAAG,IAAI4/B,eAAJ,CAAqB8lB,GAArB,EAA0Bv0D,UAA1B,EAAsCkkC,IAAtC,EAA4C7D,aAA5C,CAAb;AACAhC,IAAAA,OAAO,GAAG,IAAIoT,YAAJ,CAAkB8iB,GAAlB,EAAuB1lD,UAAvB,EAAmC7O,UAAnC,EAA+CkkC,IAA/C,CAAV;AACAspC,IAAAA,YAAY,GAAG,IAAIz9B,iBAAJ,CAAuBwkB,GAAvB,EAA4BhnC,YAA5B,EAA0C75B,QAA1C,CAAf;AACAwyB,IAAAA,QAAQ,GAAG,IAAI8f,aAAJ,CAAmBhL,UAAnB,CAAX;AACAsyC,IAAAA,YAAY,GAAG,IAAIjrB,aAAJ,CAAmB+oB,KAAnB,EAA0BjtC,QAA1B,EAAoCmkB,UAApC,EAAgDn8B,UAAhD,EAA4DoH,YAA5D,EAA0E8S,aAA1E,EAAyFna,QAAzF,CAAf;AACApX,IAAAA,SAAS,GAAG,IAAI+4D,cAAJ,CAAoBuD,KAApB,EAA2BpwC,UAA3B,CAAZ;AACAuyC,IAAAA,WAAW,GAAG,IAAInnB,gBAAJ,EAAd;AACAgE,IAAAA,YAAY,GAAG,IAAID,iBAAJ,CAAuBhkC,UAAvB,EAAmCoH,YAAnC,CAAf;AACA7d,IAAAA,UAAU,GAAG,IAAIwuB,eAAJ,CAAqBktC,KAArB,EAA4BjtC,QAA5B,EAAsCC,KAAtC,EAA6CC,OAA7C,EAAsDssC,MAAtD,EAA8DP,mBAA9D,CAAb;AACA3lB,IAAAA,SAAS,GAAG,IAAIiG,cAAJ,CAAoB0gB,KAApB,EAA2B/sC,OAA3B,EAAoC9Q,YAApC,CAAZ;AAEAkgD,IAAAA,cAAc,GAAG,IAAIxpC,mBAAJ,CAAyBswB,GAAzB,EAA8BpuC,UAA9B,EAA0C+d,IAA1C,EAAgD3W,YAAhD,CAAjB;AACAmgD,IAAAA,qBAAqB,GAAG,IAAIv+B,0BAAJ,CAAgColB,GAAhC,EAAqCpuC,UAArC,EAAiD+d,IAAjD,EAAuD3W,YAAvD,CAAxB;AAEA2W,IAAAA,IAAI,CAACwL,QAAL,GAAgB49B,YAAY,CAAC59B,QAA7B;AAEA07B,IAAAA,KAAK,CAAC79C,YAAN,GAAqBA,YAArB;AACA69C,IAAAA,KAAK,CAACjlD,UAAN,GAAmBA,UAAnB;AACAilD,IAAAA,KAAK,CAACpwC,UAAN,GAAmBA,UAAnB;AACAowC,IAAAA,KAAK,CAACmC,WAAN,GAAoBA,WAApB;AACAnC,IAAAA,KAAK,CAAC3mB,SAAN,GAAkBA,SAAlB;AACA2mB,IAAAA,KAAK,CAAChtC,KAAN,GAAcA,KAAd;AACAgtC,IAAAA,KAAK,CAAClnC,IAAN,GAAaA,IAAb;AAEA;;AAEDypC,EAAAA,aAAa,GA5S4B,CA8SzC;;AAEA,MAAMtkD,EAAE,GAAG,IAAIo4C,YAAJ,CAAkB2J,KAAlB,EAAyB7W,GAAzB,CAAX;AAEA,OAAKlrC,EAAL,GAAUA,EAAV,CAlTyC,CAoTzC;;AAEA,OAAKl5B,UAAL,GAAkB,YAAY;AAE7B,WAAOokE,GAAP;AAEA,GAJD;;AAMA,OAAK2N,oBAAL,GAA4B,YAAY;AAEvC,WAAO3N,GAAG,CAAC2N,oBAAJ,EAAP;AAEA,GAJD;;AAMA,OAAK0L,gBAAL,GAAwB,YAAY;AAEnC,QAAMztC,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,oBAAhB,CAAlB;AACA,QAAK+R,SAAL,EAAiBA,SAAS,CAAC0tC,WAAV;AAEjB,GALD;;AAOA,OAAKC,mBAAL,GAA2B,YAAY;AAEtC,QAAM3tC,SAAS,GAAGha,UAAU,CAACiI,GAAX,CAAgB,oBAAhB,CAAlB;AACA,QAAK+R,SAAL,EAAiBA,SAAS,CAAC4tC,cAAV;AAEjB,GALD;;AAOA,OAAKC,aAAL,GAAqB,YAAY;AAEhC,WAAOhC,WAAP;AAEA,GAJD;;AAMA,OAAKiC,aAAL,GAAqB,UAAWvtF,KAAX,EAAmB;AAEvC,QAAKA,KAAK,KAAK9B,SAAf,EAA2B;AAE3BotF,IAAAA,WAAW,GAAGtrF,KAAd;AAEA,SAAKwtF,OAAL,CAAcpC,MAAd,EAAsBC,OAAtB,EAA+B,KAA/B;AAEA,GARD;;AAUA,OAAKrqE,OAAL,GAAe,UAAWtiB,MAAX,EAAoB;AAElC,WAAOA,MAAM,CAACmF,GAAP,CAAYunF,MAAZ,EAAoBC,OAApB,CAAP;AAEA,GAJD;;AAMA,OAAKmC,OAAL,GAAe,UAAWl+E,KAAX,EAAkBC,MAAlB,EAA0Bk+E,WAA1B,EAAwC;AAEtD,QAAK9kD,EAAE,CAACw5C,YAAR,EAAuB;AAEtBr+E,MAAAA,OAAO,CAACC,IAAR,CAAc,wEAAd;AACA;AAEA;;AAEDqnF,IAAAA,MAAM,GAAG97E,KAAT;AACA+7E,IAAAA,OAAO,GAAG97E,MAAV;AAEAR,IAAAA,OAAO,CAACO,KAAR,GAAgBlQ,IAAI,CAACuC,KAAL,CAAY2N,KAAK,GAAGg8E,WAApB,CAAhB;AACAv8E,IAAAA,OAAO,CAACQ,MAAR,GAAiBnQ,IAAI,CAACuC,KAAL,CAAY4N,MAAM,GAAG+7E,WAArB,CAAjB;;AAEA,QAAKmC,WAAW,KAAK,KAArB,EAA6B;AAE5B1+E,MAAAA,OAAO,CAACzB,KAAR,CAAcgC,KAAd,GAAsBA,KAAK,GAAG,IAA9B;AACAP,MAAAA,OAAO,CAACzB,KAAR,CAAciC,MAAd,GAAuBA,MAAM,GAAG,IAAhC;AAEA;;AAED,SAAKm+E,WAAL,CAAkB,CAAlB,EAAqB,CAArB,EAAwBp+E,KAAxB,EAA+BC,MAA/B;AAEA,GAxBD;;AA0BA,OAAKo+E,oBAAL,GAA4B,UAAWjvF,MAAX,EAAoB;AAE/C,WAAOA,MAAM,CAACmF,GAAP,CAAYunF,MAAM,GAAGE,WAArB,EAAkCD,OAAO,GAAGC,WAA5C,EAA0D3pF,KAA1D,EAAP;AAEA,GAJD;;AAMA,OAAKisF,oBAAL,GAA4B,UAAWt+E,KAAX,EAAkBC,MAAlB,EAA0Bi4E,UAA1B,EAAuC;AAElE4D,IAAAA,MAAM,GAAG97E,KAAT;AACA+7E,IAAAA,OAAO,GAAG97E,MAAV;AAEA+7E,IAAAA,WAAW,GAAG9D,UAAd;AAEAz4E,IAAAA,OAAO,CAACO,KAAR,GAAgBlQ,IAAI,CAACuC,KAAL,CAAY2N,KAAK,GAAGk4E,UAApB,CAAhB;AACAz4E,IAAAA,OAAO,CAACQ,MAAR,GAAiBnQ,IAAI,CAACuC,KAAL,CAAY4N,MAAM,GAAGi4E,UAArB,CAAjB;AAEA,SAAKkG,WAAL,CAAkB,CAAlB,EAAqB,CAArB,EAAwBp+E,KAAxB,EAA+BC,MAA/B;AAEA,GAZD;;AAcA,OAAKs+E,kBAAL,GAA0B,UAAWnvF,MAAX,EAAoB;AAE7C,WAAOA,MAAM,CAACwO,IAAP,CAAa+9E,gBAAb,CAAP;AAEA,GAJD;;AAMA,OAAK/e,WAAL,GAAmB,UAAWxtE,MAAX,EAAoB;AAEtC,WAAOA,MAAM,CAACwO,IAAP,CAAao9D,SAAb,CAAP;AAEA,GAJD;;AAMA,OAAKojB,WAAL,GAAmB,UAAWntF,CAAX,EAAcM,CAAd,EAAiByO,KAAjB,EAAwBC,MAAxB,EAAiC;AAEnD,QAAKhP,CAAC,CAACmT,SAAP,EAAmB;AAElB42D,MAAAA,SAAS,CAACzmE,GAAV,CAAetD,CAAC,CAACA,CAAjB,EAAoBA,CAAC,CAACM,CAAtB,EAAyBN,CAAC,CAACkT,CAA3B,EAA8BlT,CAAC,CAAC6E,CAAhC;AAEA,KAJD,MAIO;AAENklE,MAAAA,SAAS,CAACzmE,GAAV,CAAetD,CAAf,EAAkBM,CAAlB,EAAqByO,KAArB,EAA4BC,MAA5B;AAEA;;AAEDmuC,IAAAA,KAAK,CAACtoC,QAAN,CAAgB61E,gBAAgB,CAAC/9E,IAAjB,CAAuBo9D,SAAvB,EAAmC/kE,cAAnC,CAAmD+lF,WAAnD,EAAiE3pF,KAAjE,EAAhB;AAEA,GAdD;;AAgBA,OAAKmsF,UAAL,GAAkB,UAAWpvF,MAAX,EAAoB;AAErC,WAAOA,MAAM,CAACwO,IAAP,CAAau+E,QAAb,CAAP;AAEA,GAJD;;AAMA,OAAKsC,UAAL,GAAkB,UAAWxtF,CAAX,EAAcM,CAAd,EAAiByO,KAAjB,EAAwBC,MAAxB,EAAiC;AAElD,QAAKhP,CAAC,CAACmT,SAAP,EAAmB;AAElB+3E,MAAAA,QAAQ,CAAC5nF,GAAT,CAActD,CAAC,CAACA,CAAhB,EAAmBA,CAAC,CAACM,CAArB,EAAwBN,CAAC,CAACkT,CAA1B,EAA6BlT,CAAC,CAAC6E,CAA/B;AAEA,KAJD,MAIO;AAENqmF,MAAAA,QAAQ,CAAC5nF,GAAT,CAActD,CAAd,EAAiBM,CAAjB,EAAoByO,KAApB,EAA2BC,MAA3B;AAEA;;AAEDmuC,IAAAA,KAAK,CAACxoC,OAAN,CAAeg2E,eAAe,CAACh+E,IAAhB,CAAsBu+E,QAAtB,EAAiClmF,cAAjC,CAAiD+lF,WAAjD,EAA+D3pF,KAA/D,EAAf;AAEA,GAdD;;AAgBA,OAAKqsF,cAAL,GAAsB,YAAY;AAEjC,WAAOtC,YAAP;AAEA,GAJD;;AAMA,OAAK/f,cAAL,GAAsB,UAAWsiB,OAAX,EAAqB;AAE1CvwC,IAAAA,KAAK,CAACiuB,cAAN,CAAsB+f,YAAY,GAAGuC,OAArC;AAEA,GAJD;;AAMA,OAAKC,aAAL,GAAqB,UAAWC,MAAX,EAAoB;AAExC5C,IAAAA,WAAW,GAAG4C,MAAd;AAEA,GAJD;;AAMA,OAAKC,kBAAL,GAA0B,UAAWD,MAAX,EAAoB;AAE7C3C,IAAAA,gBAAgB,GAAG2C,MAAnB;AAEA,GAJD,CAxdyC,CA8dzC;;;AAEA,OAAKjvC,aAAL,GAAqB,UAAWxgD,MAAX,EAAoB;AAExC,WAAOA,MAAM,CAACwO,IAAP,CAAa8hB,UAAU,CAACkwB,aAAX,EAAb,CAAP;AAEA,GAJD;;AAMA,OAAKC,aAAL,GAAqB,YAAY;AAEhCnwB,IAAAA,UAAU,CAACmwB,aAAX,CAAyBk0B,KAAzB,CAAgCrkD,UAAhC,EAA4CjoB,SAA5C;AAEA,GAJD;;AAMA,OAAKq4C,aAAL,GAAqB,YAAY;AAEhC,WAAOpwB,UAAU,CAACowB,aAAX,EAAP;AAEA,GAJD;;AAMA,OAAKC,aAAL,GAAqB,YAAY;AAEhCrwB,IAAAA,UAAU,CAACqwB,aAAX,CAAyBg0B,KAAzB,CAAgCrkD,UAAhC,EAA4CjoB,SAA5C;AAEA,GAJD;;AAMA,OAAKuiC,KAAL,GAAa,YAAwD;AAAA,QAA7Cr9B,KAA6C,uEAArC,IAAqC;AAAA,QAA/BgJ,KAA+B,uEAAvB,IAAuB;AAAA,QAAjBo0B,OAAiB,uEAAP,IAAO;AAEpE,QAAIglD,IAAI,GAAG,CAAX;AAEA,QAAKpiF,KAAL,EAAaoiF,IAAI,IAAI,KAAR;AACb,QAAKp5E,KAAL,EAAao5E,IAAI,IAAI,GAAR;AACb,QAAKhlD,OAAL,EAAeglD,IAAI,IAAI,IAAR;;AAEfxa,IAAAA,GAAG,CAACvqC,KAAJ,CAAW+kD,IAAX;AAEA,GAVD;;AAYA,OAAKzwC,UAAL,GAAkB,YAAY;AAE7B,SAAKtU,KAAL,CAAY,IAAZ,EAAkB,KAAlB,EAAyB,KAAzB;AAEA,GAJD;;AAMA,OAAKmlC,UAAL,GAAkB,YAAY;AAE7B,SAAKnlC,KAAL,CAAY,KAAZ,EAAmB,IAAnB,EAAyB,KAAzB;AAEA,GAJD;;AAMA,OAAKimC,YAAL,GAAoB,YAAY;AAE/B,SAAKjmC,KAAL,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,IAA1B;AAEA,GAJD,CAhhByC,CAshBzC;;;AAEA,OAAK5zB,OAAL,GAAe,YAAY;AAE1B3G,IAAAA,OAAO,CAACu4C,mBAAR,CAA6B,kBAA7B,EAAiDglC,aAAjD,EAAgE,KAAhE;;AACAv9E,IAAAA,OAAO,CAACu4C,mBAAR,CAA6B,sBAA7B,EAAqDilC,gBAArD,EAAuE,KAAvE;;AACAx9E,IAAAA,OAAO,CAACu4C,mBAAR,CAA6B,2BAA7B,EAA0DklC,sBAA1D,EAAkF,KAAlF;;AAEAK,IAAAA,WAAW,CAACn3E,OAAZ;AACAg0D,IAAAA,YAAY,CAACh0D,OAAb;AACA4kC,IAAAA,UAAU,CAAC5kC,OAAX;AACA+nC,IAAAA,QAAQ,CAAC/nC,OAAT;AACAksD,IAAAA,UAAU,CAAClsD,OAAX;AACAioC,IAAAA,OAAO,CAACjoC,OAAR;AACAiqC,IAAAA,aAAa,CAACjqC,OAAd;AACAk3E,IAAAA,YAAY,CAACl3E,OAAb;AAEAizB,IAAAA,EAAE,CAACjzB,OAAH;AAEAizB,IAAAA,EAAE,CAAC2e,mBAAH,CAAwB,cAAxB,EAAwCgnC,gBAAxC;AACA3lD,IAAAA,EAAE,CAAC2e,mBAAH,CAAwB,YAAxB,EAAsCinC,cAAtC;;AAEA,QAAK1C,yBAAL,EAAiC;AAEhCA,MAAAA,yBAAyB,CAACn2E,OAA1B;;AACAm2E,MAAAA,yBAAyB,GAAG,IAA5B;AAEA;;AAEDh8D,IAAAA,SAAS,CAAC0c,IAAV;AAEA,GA7BD,CAxhByC,CAujBzC;;;AAEA,WAAS+/C,aAAT,CAAwB7tF,KAAxB,EAAgC;AAE/BA,IAAAA,KAAK,CAAC+vF,cAAN;AAEA1qF,IAAAA,OAAO,CAACpB,GAAR,CAAa,oCAAb;AAEAioF,IAAAA,cAAc,GAAG,IAAjB;AAEA;;AAED,WAAS4B,gBAAT,GAAyC;AAExCzoF,IAAAA,OAAO,CAACpB,GAAR,CAAa,wCAAb;AAEAioF,IAAAA,cAAc,GAAG,KAAjB;AAEA,QAAM8D,aAAa,GAAGjrC,IAAI,CAACyL,SAA3B;AACA,QAAM2P,gBAAgB,GAAGmF,SAAS,CAAC18B,OAAnC;AACA,QAAMqnD,mBAAmB,GAAG3qB,SAAS,CAACoH,UAAtC;AACA,QAAMwjB,oBAAoB,GAAG5qB,SAAS,CAAChxD,WAAvC;AACA,QAAMupD,aAAa,GAAGyH,SAAS,CAAChmE,IAAhC;AAEAkvF,IAAAA,aAAa;AAEbzpC,IAAAA,IAAI,CAACyL,SAAL,GAAiBw/B,aAAjB;AACA1qB,IAAAA,SAAS,CAAC18B,OAAV,GAAoBu3B,gBAApB;AACAmF,IAAAA,SAAS,CAACoH,UAAV,GAAuBujB,mBAAvB;AACA3qB,IAAAA,SAAS,CAAChxD,WAAV,GAAwB47E,oBAAxB;AACA5qB,IAAAA,SAAS,CAAChmE,IAAV,GAAiBu+D,aAAjB;AAEA;;AAED,WAASkwB,sBAAT,CAAiC/tF,KAAjC,EAAyC;AAExCqF,IAAAA,OAAO,CAACkD,KAAR,CAAe,qEAAf,EAAsFvI,KAAK,CAACmwF,aAA5F;AAEA;;AAED,WAASC,iBAAT,CAA4BpwF,KAA5B,EAAoC;AAEnC,QAAMkxB,QAAQ,GAAGlxB,KAAK,CAACC,MAAvB;AAEAixB,IAAAA,QAAQ,CAAC23B,mBAAT,CAA8B,SAA9B,EAAyCunC,iBAAzC;AAEAC,IAAAA,kBAAkB,CAAEn/D,QAAF,CAAlB;AAEA,GAvmBwC,CAymBzC;;;AAEA,WAASm/D,kBAAT,CAA6Bn/D,QAA7B,EAAwC;AAEvCo/D,IAAAA,gCAAgC,CAAEp/D,QAAF,CAAhC;AAEA2qB,IAAAA,UAAU,CAAC9sB,MAAX,CAAmBmC,QAAnB;AAEA;;AAGD,WAASo/D,gCAAT,CAA2Cp/D,QAA3C,EAAsD;AAErD,QAAMq/B,QAAQ,GAAG1U,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,EAA2Bq/B,QAA5C;;AAEA,QAAKA,QAAQ,KAAK9wD,SAAlB,EAA8B;AAE7B8wD,MAAAA,QAAQ,CAACggC,OAAT,CAAkB,UAAW/uC,OAAX,EAAqB;AAEtC2sC,QAAAA,YAAY,CAACloB,cAAb,CAA6BzkB,OAA7B;AAEA,OAJD;;AAMA,UAAKtwB,QAAQ,CAACwV,gBAAd,EAAiC;AAEhCynD,QAAAA,YAAY,CAAChoB,kBAAb,CAAiCj1C,QAAjC;AAEA;AAED;AAED,GAxoBwC,CA0oBzC;;;AAEA,OAAK+8C,kBAAL,GAA0B,UAAW1wD,MAAX,EAAmBqsB,KAAnB,EAA0BhpB,QAA1B,EAAoCsQ,QAApC,EAA8C/Q,MAA9C,EAAsDggB,KAAtD,EAA8D;AAEvF,QAAKyJ,KAAK,KAAK,IAAf,EAAsBA,KAAK,GAAG2jD,WAAR,CAFiE,CAE5C;;AAE3C,QAAMzZ,WAAW,GAAK3zD,MAAM,CAACsQ,MAAP,IAAiBtQ,MAAM,CAACvC,WAAP,CAAmB6M,WAAnB,KAAmC,CAA1E;AAEA,QAAM+2B,OAAO,GAAGgvC,UAAU,CAAEjzE,MAAF,EAAUqsB,KAAV,EAAiBhpB,QAAjB,EAA2BsQ,QAA3B,EAAqC/Q,MAArC,CAA1B;AAEA8+B,IAAAA,KAAK,CAAC40B,WAAN,CAAmB3iD,QAAnB,EAA6B4iD,WAA7B,EARuF,CAUvF;;AAEA,QAAIh0E,KAAK,GAAG8gB,QAAQ,CAAC9gB,KAArB;AACA,QAAMghB,QAAQ,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,QAArC,CAbuF,CAevF;;AAEA,QAAKhhB,KAAK,KAAK,IAAf,EAAsB;AAErB,UAAKghB,QAAQ,KAAKrhB,SAAb,IAA0BqhB,QAAQ,CAAChJ,KAAT,KAAmB,CAAlD,EAAsD;AAEtD,KAJD,MAIO,IAAKhY,KAAK,CAACgY,KAAN,KAAgB,CAArB,EAAyB;AAE/B;AAEA,KAzBsF,CA2BvF;;;AAEA,QAAI24E,WAAW,GAAG,CAAlB;;AAEA,QAAKv/D,QAAQ,CAACuJ,SAAT,KAAuB,IAA5B,EAAmC;AAElC36B,MAAAA,KAAK,GAAG4vB,UAAU,CAACogC,qBAAX,CAAkClvC,QAAlC,CAAR;AACA6vE,MAAAA,WAAW,GAAG,CAAd;AAEA;;AAEDvvC,IAAAA,aAAa,CAACK,KAAd,CAAqBphC,MAArB,EAA6B+Q,QAA7B,EAAuCswB,OAAvC,EAAgD5gC,QAAhD,EAA0D9gB,KAA1D;AAEA,QAAIgI,SAAJ;AACA,QAAI6hC,QAAQ,GAAG2kD,cAAf;;AAEA,QAAKxuF,KAAK,KAAK,IAAf,EAAsB;AAErBgI,MAAAA,SAAS,GAAG+Y,UAAU,CAACouB,GAAX,CAAgBnvC,KAAhB,CAAZ;AAEA6pC,MAAAA,QAAQ,GAAG4kD,qBAAX;AACA5kD,MAAAA,QAAQ,CAACzH,QAAT,CAAmBp6B,SAAnB;AAEA,KAlDsF,CAoDvF;;;AAEA,QAAM4oF,SAAS,GAAK5wF,KAAK,KAAK,IAAZ,GAAqBA,KAAK,CAACgY,KAA3B,GAAmCgJ,QAAQ,CAAChJ,KAA9D;AAEA,QAAM64E,UAAU,GAAG/vE,QAAQ,CAAC+c,SAAT,CAAmBC,KAAnB,GAA2B6yD,WAA9C;AACA,QAAMG,UAAU,GAAGhwE,QAAQ,CAAC+c,SAAT,CAAmB7lB,KAAnB,GAA2B24E,WAA9C;AAEA,QAAMxrD,UAAU,GAAG9E,KAAK,KAAK,IAAV,GAAiBA,KAAK,CAACvC,KAAN,GAAc6yD,WAA/B,GAA6C,CAAhE;AACA,QAAM1qD,UAAU,GAAG5F,KAAK,KAAK,IAAV,GAAiBA,KAAK,CAACroB,KAAN,GAAc24E,WAA/B,GAA6CpxE,QAAhE;AAEA,QAAMwxE,SAAS,GAAGlwF,IAAI,CAACc,GAAL,CAAUkvF,UAAV,EAAsB1rD,UAAtB,CAAlB;AACA,QAAM6rD,OAAO,GAAGnwF,IAAI,CAACa,GAAL,CAAUkvF,SAAV,EAAqBC,UAAU,GAAGC,UAAlC,EAA8C3rD,UAAU,GAAGc,UAA3D,IAA0E,CAA1F;AAEA,QAAMgrD,SAAS,GAAGpwF,IAAI,CAACc,GAAL,CAAU,CAAV,EAAaqvF,OAAO,GAAGD,SAAV,GAAsB,CAAnC,CAAlB;AAEA,QAAKE,SAAS,KAAK,CAAnB,EAAuB,OAnEgE,CAqEvF;;AAEA,QAAK5wE,MAAM,CAACsQ,MAAZ,EAAqB;AAEpB,UAAKS,QAAQ,CAACuJ,SAAT,KAAuB,IAA5B,EAAmC;AAElCwkB,QAAAA,KAAK,CAACi1B,YAAN,CAAoBhjD,QAAQ,CAACwJ,kBAAT,GAA8B+yD,mBAAmB,EAArE;AACA9jD,QAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA,OALD,MAKO;AAENtb,QAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA;AAED,KAbD,MAaO,IAAK9kC,MAAM,CAACuQ,MAAZ,EAAqB;AAE3B,UAAIyjD,SAAS,GAAGjjD,QAAQ,CAACmJ,SAAzB;AAEA,UAAK85C,SAAS,KAAK10E,SAAnB,EAA+B00E,SAAS,GAAG,CAAZ,CAJJ,CAImB;;AAE9Cl1B,MAAAA,KAAK,CAACi1B,YAAN,CAAoBC,SAAS,GAAGsZ,mBAAmB,EAAnD;;AAEA,UAAKttE,MAAM,CAAC6wE,cAAZ,EAA6B;AAE5BrnD,QAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA,OAJD,MAIO,IAAK9kC,MAAM,CAAC8wE,UAAZ,EAAyB;AAE/BtnD,QAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA,OAJM,MAIA;AAENtb,QAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA;AAED,KAtBM,MAsBA,IAAK9kC,MAAM,CAACwQ,QAAZ,EAAuB;AAE7BgZ,MAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA,KAJM,MAIA,IAAK9kC,MAAM,CAAC+wE,QAAZ,EAAuB;AAE7BvnD,MAAAA,QAAQ,CAACsb,OAAT,CAAkB,CAAlB;AAEA;;AAED,QAAK9kC,MAAM,CAAC6P,eAAZ,EAA8B;AAE7B2Z,MAAAA,QAAQ,CAACwb,eAAT,CAA0B0rC,SAA1B,EAAqCE,SAArC,EAAgD5wE,MAAM,CAACrI,KAAvD;AAEA,KAJD,MAIO,IAAK8I,QAAQ,CAACkjC,yBAAd,EAA0C;AAEhD,UAAMwM,aAAa,GAAG3vD,IAAI,CAACa,GAAL,CAAUof,QAAQ,CAAC0vC,aAAnB,EAAkC1vC,QAAQ,CAACsjC,iBAA3C,CAAtB;AAEAva,MAAAA,QAAQ,CAACwb,eAAT,CAA0B0rC,SAA1B,EAAqCE,SAArC,EAAgDzgC,aAAhD;AAEA,KANM,MAMA;AAEN3mB,MAAAA,QAAQ,CAACS,MAAT,CAAiBymD,SAAjB,EAA4BE,SAA5B;AAEA;AAED,GApID,CA5oByC,CAkxBzC;;;AAEA,OAAK7kC,OAAL,GAAe,UAAWtiB,KAAX,EAAkBrsB,MAAlB,EAA2B;AAEzCmuE,IAAAA,kBAAkB,GAAGzgB,YAAY,CAACh8B,GAAb,CAAkBrF,KAAlB,CAArB;AACA8hD,IAAAA,kBAAkB,CAACrkC,IAAnB;AAEAukC,IAAAA,gBAAgB,CAAChsF,IAAjB,CAAuB8rF,kBAAvB;AAEA9hD,IAAAA,KAAK,CAACxa,eAAN,CAAuB,UAAWjP,MAAX,EAAoB;AAE1C,UAAKA,MAAM,CAACyO,OAAP,IAAkBzO,MAAM,CAAC8L,MAAP,CAAcxb,IAAd,CAAoB8M,MAAM,CAAC0O,MAA3B,CAAvB,EAA6D;AAE5Dy/D,QAAAA,kBAAkB,CAAC/gB,SAAnB,CAA8BxqD,MAA9B;;AAEA,YAAKA,MAAM,CAAC2N,UAAZ,EAAyB;AAExB49D,UAAAA,kBAAkB,CAAC9gB,UAAnB,CAA+BzqD,MAA/B;AAEA;AAED;AAED,KAdD;AAgBAurE,IAAAA,kBAAkB,CAAC5gB,WAAnB,CAAgCmhB,KAAK,CAAC5rB,uBAAtC;AAEAz2B,IAAAA,KAAK,CAACza,QAAN,CAAgB,UAAWhP,MAAX,EAAoB;AAEnC,UAAM+Q,QAAQ,GAAG/Q,MAAM,CAAC+Q,QAAxB;;AAEA,UAAKA,QAAL,EAAgB;AAEf,YAAKhf,KAAK,CAACC,OAAN,CAAe+e,QAAf,CAAL,EAAiC;AAEhC,eAAM,IAAI9wB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG8wB,QAAQ,CAAC5wB,MAA9B,EAAsCF,CAAC,EAAvC,EAA6C;AAE5C,gBAAM+wF,SAAS,GAAGjgE,QAAQ,CAAE9wB,CAAF,CAA1B;AAEAgxF,YAAAA,UAAU,CAAED,SAAF,EAAavnD,KAAb,EAAoBzpB,MAApB,CAAV;AAEA;AAED,SAVD,MAUO;AAENixE,UAAAA,UAAU,CAAElgE,QAAF,EAAY0Y,KAAZ,EAAmBzpB,MAAnB,CAAV;AAEA;AAED;AAED,KAxBD;AA0BAyrE,IAAAA,gBAAgB,CAAC1lB,GAAjB;AACAwlB,IAAAA,kBAAkB,GAAG,IAArB;AAEA,GAtDD,CApxByC,CA40BzC;;;AAEA,MAAIzD,wBAAwB,GAAG,IAA/B;;AAEA,WAASv6C,gBAAT,CAA2BC,IAA3B,EAAkC;AAEjC,QAAKs6C,wBAAL,EAAgCA,wBAAwB,CAAEt6C,IAAF,CAAxB;AAEhC;;AAED,WAASkiD,gBAAT,GAA4B;AAE3Bz+D,IAAAA,SAAS,CAAC0c,IAAV;AAEA;;AAED,WAASgiD,cAAT,GAA0B;AAEzB1+D,IAAAA,SAAS,CAACwM,KAAV;AAEA;;AAED,MAAMxM,SAAS,GAAG,IAAIkc,cAAJ,EAAlB;AACAlc,EAAAA,SAAS,CAAC4c,gBAAV,CAA4BN,gBAA5B;AAEA,MAAK,OAAO2jD,IAAP,KAAgB,WAArB,EAAmCjgE,SAAS,CAAC6c,UAAV,CAAsBojD,IAAtB;;AAEnC,OAAKrjD,gBAAL,GAAwB,UAAW7yB,QAAX,EAAsB;AAE7C8sE,IAAAA,wBAAwB,GAAG9sE,QAA3B;AACA+uB,IAAAA,EAAE,CAAC8D,gBAAH,CAAqB7yB,QAArB;AAEEA,IAAAA,QAAQ,KAAK,IAAf,GAAwBiW,SAAS,CAAC0c,IAAV,EAAxB,GAA2C1c,SAAS,CAACwM,KAAV,EAA3C;AAEA,GAPD;;AASAsM,EAAAA,EAAE,CAACye,gBAAH,CAAqB,cAArB,EAAqCknC,gBAArC;AACA3lD,EAAAA,EAAE,CAACye,gBAAH,CAAqB,YAArB,EAAmCmnC,cAAnC,EAj3ByC,CAm3BzC;;AAEA,OAAK1lD,MAAL,GAAc,UAAWR,KAAX,EAAkBrsB,MAAlB,EAA2B;AAExC,QAAKA,MAAM,KAAK9d,SAAX,IAAwB8d,MAAM,CAACoR,QAAP,KAAoB,IAAjD,EAAwD;AAEvDtpB,MAAAA,OAAO,CAACkD,KAAR,CAAe,wEAAf;AACA;AAEA;;AAED,QAAK2jF,cAAc,KAAK,IAAxB,EAA+B,OATS,CAWxC;;AAEA,QAAKtiD,KAAK,CAAC8iC,UAAN,KAAqB,IAA1B,EAAiC9iC,KAAK,CAACra,iBAAN,GAbO,CAexC;;AAEA,QAAKhS,MAAM,CAAC0P,MAAP,KAAkB,IAAvB,EAA8B1P,MAAM,CAACgS,iBAAP;;AAE9B,QAAK2a,EAAE,CAACtB,OAAH,KAAe,IAAf,IAAuBsB,EAAE,CAACw5C,YAAH,KAAoB,IAAhD,EAAuD;AAEtD,UAAKx5C,EAAE,CAACu5C,gBAAH,KAAwB,IAA7B,EAAoCv5C,EAAE,CAACw9C,YAAH,CAAiBnqE,MAAjB;AAEpCA,MAAAA,MAAM,GAAG2sB,EAAE,CAAC29C,SAAH,EAAT,CAJsD,CAI7B;AAEzB,KAzBuC,CA2BxC;;;AACA,QAAKj+C,KAAK,CAACtZ,OAAN,KAAkB,IAAvB,EAA8BsZ,KAAK,CAACyW,cAAN,CAAsB4rC,KAAtB,EAA6BriD,KAA7B,EAAoCrsB,MAApC,EAA4C8uE,oBAA5C;AAE9BX,IAAAA,kBAAkB,GAAGzgB,YAAY,CAACh8B,GAAb,CAAkBrF,KAAlB,EAAyBgiD,gBAAgB,CAACtrF,MAA1C,CAArB;AACAorF,IAAAA,kBAAkB,CAACrkC,IAAnB;AAEAukC,IAAAA,gBAAgB,CAAChsF,IAAjB,CAAuB8rF,kBAAvB;;AAEA2B,IAAAA,iBAAiB,CAAC9jF,gBAAlB,CAAoCgU,MAAM,CAACG,gBAA3C,EAA6DH,MAAM,CAACE,kBAApE;;AACAiuD,IAAAA,QAAQ,CAAC4lB,uBAAT,CAAkCjE,iBAAlC;;AAEAF,IAAAA,qBAAqB,GAAG,KAAKnmC,oBAA7B;AACAkmC,IAAAA,gBAAgB,GAAGnmD,QAAQ,CAACsgB,IAAT,CAAe,KAAK1xB,cAApB,EAAoCw3D,qBAApC,EAA2D5vE,MAA3D,CAAnB;AAEAkuE,IAAAA,iBAAiB,GAAG2C,WAAW,CAACn/C,GAAZ,CAAiBrF,KAAjB,EAAwB+hD,eAAe,CAACrrF,MAAxC,CAApB;AACAmrF,IAAAA,iBAAiB,CAACpkC,IAAlB;AAEAskC,IAAAA,eAAe,CAAC/rF,IAAhB,CAAsB6rF,iBAAtB;AAEA8F,IAAAA,aAAa,CAAE3nD,KAAF,EAASrsB,MAAT,EAAiB,CAAjB,EAAoB0uE,KAAK,CAACH,WAA1B,CAAb;AAEAL,IAAAA,iBAAiB,CAACzkB,MAAlB;;AAEA,QAAKilB,KAAK,CAACH,WAAN,KAAsB,IAA3B,EAAkC;AAEjCL,MAAAA,iBAAiB,CAACr5B,IAAlB,CAAwB06B,WAAxB,EAAqCC,gBAArC;AAEA,KAtDuC,CAwDxC;;;AAEA,QAAKG,gBAAgB,KAAK,IAA1B,EAAiCnmD,QAAQ,CAACygB,YAAT;AAEjC,QAAMkjB,YAAY,GAAGghB,kBAAkB,CAACzsC,KAAnB,CAAyByrB,YAA9C;AAEApF,IAAAA,SAAS,CAACl7B,MAAV,CAAkBsgC,YAAlB,EAAgC9gC,KAAhC,EAAuCrsB,MAAvC;AAEA,QAAK2vE,gBAAgB,KAAK,IAA1B,EAAiCnmD,QAAQ,CAAC0gB,UAAT,GAhEO,CAkExC;;AAEA,QAAK,KAAK1C,IAAL,CAAUyL,SAAV,KAAwB,IAA7B,EAAoC,KAAKzL,IAAL,CAAUP,KAAV,GApEI,CAsExC;;AAEAj0B,IAAAA,UAAU,CAAC6Z,MAAX,CAAmBqhD,iBAAnB,EAAsC7hD,KAAtC,EAxEwC,CA0ExC;;AAEA8hD,IAAAA,kBAAkB,CAAC5gB,WAAnB,CAAgCmhB,KAAK,CAAC5rB,uBAAtC;;AAEA,QAAK9iD,MAAM,CAACsiE,aAAZ,EAA4B;AAE3B,UAAMC,OAAO,GAAGviE,MAAM,CAACuiE,OAAvB;;AAEA,WAAM,IAAI1/E,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy/E,OAAO,CAACx/E,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD,YAAMoxF,OAAO,GAAG1R,OAAO,CAAE1/E,CAAF,CAAvB;AAEAqxF,QAAAA,WAAW,CAAEhG,iBAAF,EAAqB7hD,KAArB,EAA4B4nD,OAA5B,EAAqCA,OAAO,CAAC76E,QAA7C,CAAX;AAEA;AAED,KAZD,MAYO;AAEN86E,MAAAA,WAAW,CAAEhG,iBAAF,EAAqB7hD,KAArB,EAA4BrsB,MAA5B,CAAX;AAEA,KA9FuC,CAgGxC;;;AAEA,QAAK8uE,oBAAoB,KAAK,IAA9B,EAAqC;AAEpC;AAEA93E,MAAAA,QAAQ,CAACynE,6BAAT,CAAwCqQ,oBAAxC,EAJoC,CAMpC;;AAEA93E,MAAAA,QAAQ,CAACwnE,wBAAT,CAAmCsQ,oBAAnC;AAEA,KA5GuC,CA8GxC;;;AAEA,QAAKziD,KAAK,CAACtZ,OAAN,KAAkB,IAAvB,EAA8BsZ,KAAK,CAAC8nD,aAAN,CAAqBzF,KAArB,EAA4BriD,KAA5B,EAAmCrsB,MAAnC,EAhHU,CAkHxC;;AAEA2jC,IAAAA,aAAa,CAAC2D,iBAAd;AACAynC,IAAAA,kBAAkB,GAAG,CAAE,CAAvB;AACAC,IAAAA,cAAc,GAAG,IAAjB;AAEAX,IAAAA,gBAAgB,CAAC1lB,GAAjB;;AAEA,QAAK0lB,gBAAgB,CAACtrF,MAAjB,GAA0B,CAA/B,EAAmC;AAElCorF,MAAAA,kBAAkB,GAAGE,gBAAgB,CAAEA,gBAAgB,CAACtrF,MAAjB,GAA0B,CAA5B,CAArC;AAEA,KAJD,MAIO;AAENorF,MAAAA,kBAAkB,GAAG,IAArB;AAEA;;AAEDC,IAAAA,eAAe,CAACzlB,GAAhB;;AAEA,QAAKylB,eAAe,CAACrrF,MAAhB,GAAyB,CAA9B,EAAkC;AAEjCmrF,MAAAA,iBAAiB,GAAGE,eAAe,CAAEA,eAAe,CAACrrF,MAAhB,GAAyB,CAA3B,CAAnC;AAEA,KAJD,MAIO;AAENmrF,MAAAA,iBAAiB,GAAG,IAApB;AAEA;AAED,GAhJD;;AAkJA,WAAS8F,aAAT,CAAwBpxE,MAAxB,EAAgC5C,MAAhC,EAAwC+oD,UAAxC,EAAoDwlB,WAApD,EAAkE;AAEjE,QAAK3rE,MAAM,CAAC0N,OAAP,KAAmB,KAAxB,EAAgC;AAEhC,QAAMA,OAAO,GAAG1N,MAAM,CAAC8L,MAAP,CAAcxb,IAAd,CAAoB8M,MAAM,CAAC0O,MAA3B,CAAhB;;AAEA,QAAK4B,OAAL,EAAe;AAEd,UAAK1N,MAAM,CAAC6/D,OAAZ,EAAsB;AAErB1Z,QAAAA,UAAU,GAAGnmD,MAAM,CAAC8N,WAApB;AAEA,OAJD,MAIO,IAAK9N,MAAM,CAACwxE,KAAZ,EAAoB;AAE1B,YAAKxxE,MAAM,CAACusD,UAAP,KAAsB,IAA3B,EAAkCvsD,MAAM,CAACzH,MAAP,CAAe6E,MAAf;AAElC,OAJM,MAIA,IAAK4C,MAAM,CAACyO,OAAZ,EAAsB;AAE5B88D,QAAAA,kBAAkB,CAAC/gB,SAAnB,CAA8BxqD,MAA9B;;AAEA,YAAKA,MAAM,CAAC2N,UAAZ,EAAyB;AAExB49D,UAAAA,kBAAkB,CAAC9gB,UAAnB,CAA+BzqD,MAA/B;AAEA;AAED,OAVM,MAUA,IAAKA,MAAM,CAAC+wE,QAAZ,EAAuB;AAE7B,YAAK,CAAE/wE,MAAM,CAAC6N,aAAT,IAA0B09C,QAAQ,CAACkmB,gBAAT,CAA2BzxE,MAA3B,CAA/B,EAAqE;AAEpE,cAAK2rE,WAAL,EAAmB;AAElBwB,YAAAA,QAAQ,CAAC5+D,qBAAT,CAAgCvO,MAAM,CAACvC,WAAvC,EACEJ,YADF,CACgB6vE,iBADhB;AAGA;;AAED,cAAMzsE,QAAQ,GAAGs+B,OAAO,CAACxmC,MAAR,CAAgByH,MAAhB,CAAjB;AACA,cAAM+Q,QAAQ,GAAG/Q,MAAM,CAAC+Q,QAAxB;;AAEA,cAAKA,QAAQ,CAACrD,OAAd,EAAwB;AAEvB49D,YAAAA,iBAAiB,CAAC7rF,IAAlB,CAAwBugB,MAAxB,EAAgCS,QAAhC,EAA0CsQ,QAA1C,EAAoDo1C,UAApD,EAAgEgnB,QAAQ,CAACt4E,CAAzE,EAA4E,IAA5E;AAEA;AAED;AAED,OAtBM,MAsBA,IAAKmL,MAAM,CAACsQ,MAAP,IAAiBtQ,MAAM,CAACuQ,MAAxB,IAAkCvQ,MAAM,CAACwQ,QAA9C,EAAyD;AAE/D,YAAKxQ,MAAM,CAAC2Q,aAAZ,EAA4B;AAE3B;AAEA,cAAK3Q,MAAM,CAAC8Q,QAAP,CAAgB2c,KAAhB,KAA0BmX,IAAI,CAAC3a,MAAL,CAAYwD,KAA3C,EAAmD;AAElDztB,YAAAA,MAAM,CAAC8Q,QAAP,CAAgBvY,MAAhB;AACAyH,YAAAA,MAAM,CAAC8Q,QAAP,CAAgB2c,KAAhB,GAAwBmX,IAAI,CAAC3a,MAAL,CAAYwD,KAApC;AAEA;AAED;;AAED,YAAK,CAAEztB,MAAM,CAAC6N,aAAT,IAA0B09C,QAAQ,CAACkD,gBAAT,CAA2BzuD,MAA3B,CAA/B,EAAqE;AAEpE,cAAK2rE,WAAL,EAAmB;AAElBwB,YAAAA,QAAQ,CAAC5+D,qBAAT,CAAgCvO,MAAM,CAACvC,WAAvC,EACEJ,YADF,CACgB6vE,iBADhB;AAGA;;AAED,cAAMzsE,UAAQ,GAAGs+B,OAAO,CAACxmC,MAAR,CAAgByH,MAAhB,CAAjB;;AACA,cAAM+Q,SAAQ,GAAG/Q,MAAM,CAAC+Q,QAAxB;;AAEA,cAAKhf,KAAK,CAACC,OAAN,CAAe+e,SAAf,CAAL,EAAiC;AAEhC,gBAAMuM,MAAM,GAAG7c,UAAQ,CAAC6c,MAAxB;;AAEA,iBAAM,IAAIr9B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGo9B,MAAM,CAACn9B,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,kBAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,CAAF,CAApB;AACA,kBAAM2jC,aAAa,GAAG7S,SAAQ,CAAEiP,KAAK,CAACtC,aAAR,CAA9B;;AAEA,kBAAKkG,aAAa,IAAIA,aAAa,CAAClW,OAApC,EAA8C;AAE7C49D,gBAAAA,iBAAiB,CAAC7rF,IAAlB,CAAwBugB,MAAxB,EAAgCS,UAAhC,EAA0CmjB,aAA1C,EAAyDuiC,UAAzD,EAAqEgnB,QAAQ,CAACt4E,CAA9E,EAAiFmrB,KAAjF;AAEA;AAED;AAED,WAjBD,MAiBO,IAAKjP,SAAQ,CAACrD,OAAd,EAAwB;AAE9B49D,YAAAA,iBAAiB,CAAC7rF,IAAlB,CAAwBugB,MAAxB,EAAgCS,UAAhC,EAA0CsQ,SAA1C,EAAoDo1C,UAApD,EAAgEgnB,QAAQ,CAACt4E,CAAzE,EAA4E,IAA5E;AAEA;AAED;AAED;AAED;;AAED,QAAMoM,QAAQ,GAAGjB,MAAM,CAACiB,QAAxB;;AAEA,SAAM,IAAIhhB,IAAC,GAAG,CAAR,EAAWC,GAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,IAAC,GAAGC,GAA1C,EAA6CD,IAAC,EAA9C,EAAoD;AAEnDmxF,MAAAA,aAAa,CAAEnwE,QAAQ,CAAEhhB,IAAF,CAAV,EAAiBmd,MAAjB,EAAyB+oD,UAAzB,EAAqCwlB,WAArC,CAAb;AAEA;AAED;;AAED,WAAS2F,WAAT,CAAsBhG,iBAAtB,EAAyC7hD,KAAzC,EAAgDrsB,MAAhD,EAAwD5G,QAAxD,EAAmE;AAElE,QAAMk7E,aAAa,GAAGpG,iBAAiB,CAACnrB,MAAxC;AACA,QAAMwxB,mBAAmB,GAAGrG,iBAAiB,CAAC9kB,YAA9C;AACA,QAAMorB,kBAAkB,GAAGtG,iBAAiB,CAACh3D,WAA7C;AAEAi3D,IAAAA,kBAAkB,CAAC3gB,eAAnB,CAAoCxtD,MAApC;AAEA,QAAKu0E,mBAAmB,CAACxxF,MAApB,GAA6B,CAAlC,EAAsC0xF,sBAAsB,CAAEH,aAAF,EAAiBjoD,KAAjB,EAAwBrsB,MAAxB,CAAtB;AAEtC,QAAK5G,QAAL,EAAgBsoC,KAAK,CAACtoC,QAAN,CAAgB61E,gBAAgB,CAAC/9E,IAAjB,CAAuBkI,QAAvB,CAAhB;AAEhB,QAAKk7E,aAAa,CAACvxF,MAAd,GAAuB,CAA5B,EAAgC2xF,aAAa,CAAEJ,aAAF,EAAiBjoD,KAAjB,EAAwBrsB,MAAxB,CAAb;AAChC,QAAKu0E,mBAAmB,CAACxxF,MAApB,GAA6B,CAAlC,EAAsC2xF,aAAa,CAAEH,mBAAF,EAAuBloD,KAAvB,EAA8BrsB,MAA9B,CAAb;AACtC,QAAKw0E,kBAAkB,CAACzxF,MAAnB,GAA4B,CAAjC,EAAqC2xF,aAAa,CAAEF,kBAAF,EAAsBnoD,KAAtB,EAA6BrsB,MAA7B,CAAb,CAd6B,CAgBlE;;AAEA0hC,IAAAA,KAAK,CAAC3Q,OAAN,CAAc93B,KAAd,CAAoBy2D,OAApB,CAA6B,IAA7B;AACAhuB,IAAAA,KAAK,CAAC3Q,OAAN,CAAc93B,KAAd,CAAoB64D,OAApB,CAA6B,IAA7B;AACApwB,IAAAA,KAAK,CAAC3Q,OAAN,CAAc9gC,KAAd,CAAoB6hE,OAApB,CAA6B,IAA7B;AAEApwB,IAAAA,KAAK,CAAC80B,gBAAN,CAAwB,KAAxB;AAEA;;AAED,WAASie,sBAAT,CAAiCH,aAAjC,EAAgDjoD,KAAhD,EAAuDrsB,MAAvD,EAAgE;AAE/D,QAAM8wB,QAAQ,GAAGD,YAAY,CAACC,QAA9B;;AAEA,QAAK++C,yBAAyB,KAAK,IAAnC,EAA0C;AAEzCA,MAAAA,yBAAyB,GAAG,IAAI/2E,iBAAJ,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B;AACxD3C,QAAAA,eAAe,EAAE,IADuC;AAExDpU,QAAAA,IAAI,EAAE0nC,UAAU,CAACye,GAAX,CAAgB,6BAAhB,IAAkDjsD,aAAlD,GAAkEP,gBAFhB;AAGxD+Z,QAAAA,SAAS,EAAEja,wBAH6C;AAIxDie,QAAAA,OAAO,EAAIq3B,QAAQ,IAAI28C,UAAU,KAAK,IAA7B,GAAsC,CAAtC,GAA0C;AAJK,OAA7B,CAA5B;AAOA;;AAEDiB,IAAAA,KAAK,CAACiD,oBAAN,CAA4BnkD,QAA5B;;AAEA,QAAKsD,QAAL,EAAgB;AAEf++C,MAAAA,yBAAyB,CAAC2B,OAA1B,CAAmChkD,QAAQ,CAACjpC,CAA5C,EAA+CipC,QAAQ,CAAC3oC,CAAxD;AAEA,KAJD,MAIO;AAENgrF,MAAAA,yBAAyB,CAAC2B,OAA1B,CAAmC5qF,eAAe,CAAE4mC,QAAQ,CAACjpC,CAAX,CAAlD,EAAkEqC,eAAe,CAAE4mC,QAAQ,CAAC3oC,CAAX,CAAjF;AAEA,KAzB8D,CA2B/D;;;AAEA,QAAMynC,mBAAmB,GAAGoiD,KAAK,CAACniD,eAAN,EAA5B;;AACAmiD,IAAAA,KAAK,CAAC9hD,eAAN,CAAuBijD,yBAAvB;;AACAnB,IAAAA,KAAK,CAACphD,KAAN,GA/B+D,CAiC/D;AACA;;;AACA,QAAMd,kBAAkB,GAAGkiD,KAAK,CAACjiD,WAAjC;AACAiiD,IAAAA,KAAK,CAACjiD,WAAN,GAAoBxyC,aAApB;AAEAy6F,IAAAA,aAAa,CAAEJ,aAAF,EAAiBjoD,KAAjB,EAAwBrsB,MAAxB,CAAb;AAEA0uE,IAAAA,KAAK,CAACjiD,WAAN,GAAoBD,kBAApB;AAEAx1B,IAAAA,QAAQ,CAACynE,6BAAT,CAAwCoR,yBAAxC;AACA74E,IAAAA,QAAQ,CAACwnE,wBAAT,CAAmCqR,yBAAnC;;AAEAnB,IAAAA,KAAK,CAAC9hD,eAAN,CAAuBN,mBAAvB;AAEA;;AAED,WAASooD,aAAT,CAAwBvyC,UAAxB,EAAoC9V,KAApC,EAA2CrsB,MAA3C,EAAoD;AAEnD,QAAMiwE,gBAAgB,GAAG5jD,KAAK,CAACtZ,OAAN,KAAkB,IAAlB,GAAyBsZ,KAAK,CAAC4jD,gBAA/B,GAAkD,IAA3E;;AAEA,SAAM,IAAIptF,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq/C,UAAU,CAACp/C,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,UAAMymE,UAAU,GAAGnnB,UAAU,CAAEt/C,CAAF,CAA7B;AAEA,UAAM+f,MAAM,GAAG0mD,UAAU,CAAC1mD,MAA1B;AACA,UAAMS,QAAQ,GAAGimD,UAAU,CAACjmD,QAA5B;AACA,UAAMsQ,QAAQ,GAAGs8D,gBAAgB,KAAK,IAArB,GAA4B3mB,UAAU,CAAC31C,QAAvC,GAAkDs8D,gBAAnE;AACA,UAAMrtD,KAAK,GAAG0mC,UAAU,CAAC1mC,KAAzB;;AAEA,UAAKhgB,MAAM,CAAC8L,MAAP,CAAcxb,IAAd,CAAoB8M,MAAM,CAAC0O,MAA3B,CAAL,EAA2C;AAE1C2hD,QAAAA,YAAY,CAAEztD,MAAF,EAAUypB,KAAV,EAAiBrsB,MAAjB,EAAyBqD,QAAzB,EAAmCsQ,QAAnC,EAA6CiP,KAA7C,CAAZ;AAEA;AAED;AAED;;AAED,WAASytC,YAAT,CAAuBztD,MAAvB,EAA+BypB,KAA/B,EAAsCrsB,MAAtC,EAA8CqD,QAA9C,EAAwDsQ,QAAxD,EAAkEiP,KAAlE,EAA0E;AAEzEhgB,IAAAA,MAAM,CAACkgC,cAAP,CAAuB4rC,KAAvB,EAA8BriD,KAA9B,EAAqCrsB,MAArC,EAA6CqD,QAA7C,EAAuDsQ,QAAvD,EAAiEiP,KAAjE;AAEAhgB,IAAAA,MAAM,CAACsN,eAAP,CAAuBlkB,gBAAvB,CAAyCgU,MAAM,CAACE,kBAAhD,EAAoE0C,MAAM,CAACvC,WAA3E;AACAuC,IAAAA,MAAM,CAACuN,YAAP,CAAoBoQ,eAApB,CAAqC3d,MAAM,CAACsN,eAA5C;AAEAyD,IAAAA,QAAQ,CAACmvB,cAAT,CAAyB4rC,KAAzB,EAAgCriD,KAAhC,EAAuCrsB,MAAvC,EAA+CqD,QAA/C,EAAyDT,MAAzD,EAAiEggB,KAAjE;;AAEA,QAAKjP,QAAQ,CAACuD,WAAT,KAAyB,IAAzB,IAAiCvD,QAAQ,CAACoD,IAAT,KAAkBl/B,UAAxD,EAAqE;AAEpE87B,MAAAA,QAAQ,CAACoD,IAAT,GAAgBn/B,QAAhB;AACA+7B,MAAAA,QAAQ,CAAC5c,WAAT,GAAuB,IAAvB;;AACA23E,MAAAA,KAAK,CAAChe,kBAAN,CAA0B1wD,MAA1B,EAAkCqsB,KAAlC,EAAyChpB,QAAzC,EAAmDsQ,QAAnD,EAA6D/Q,MAA7D,EAAqEggB,KAArE;;AAEAjP,MAAAA,QAAQ,CAACoD,IAAT,GAAgBp/B,SAAhB;AACAg8B,MAAAA,QAAQ,CAAC5c,WAAT,GAAuB,IAAvB;;AACA23E,MAAAA,KAAK,CAAChe,kBAAN,CAA0B1wD,MAA1B,EAAkCqsB,KAAlC,EAAyChpB,QAAzC,EAAmDsQ,QAAnD,EAA6D/Q,MAA7D,EAAqEggB,KAArE;;AAEAjP,MAAAA,QAAQ,CAACoD,IAAT,GAAgBl/B,UAAhB;AAEA,KAZD,MAYO;AAEN62F,MAAAA,KAAK,CAAChe,kBAAN,CAA0B1wD,MAA1B,EAAkCqsB,KAAlC,EAAyChpB,QAAzC,EAAmDsQ,QAAnD,EAA6D/Q,MAA7D,EAAqEggB,KAArE;AAEA;;AAEDhgB,IAAAA,MAAM,CAACuxE,aAAP,CAAsBzF,KAAtB,EAA6BriD,KAA7B,EAAoCrsB,MAApC,EAA4CqD,QAA5C,EAAsDsQ,QAAtD,EAAgEiP,KAAhE;AAEA;;AAED,WAASixD,UAAT,CAAqBlgE,QAArB,EAA+B0Y,KAA/B,EAAsCzpB,MAAtC,EAA+C;AAE9C,QAAKypB,KAAK,CAACtZ,OAAN,KAAkB,IAAvB,EAA8BsZ,KAAK,GAAG2jD,WAAR,CAFgB,CAEK;;AAEnD,QAAM1lC,kBAAkB,GAAGhM,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,CAA3B;AAEA,QAAM4V,MAAM,GAAG4kD,kBAAkB,CAACzsC,KAAnB,CAAyBnY,MAAxC;AACA,QAAM4jC,YAAY,GAAGghB,kBAAkB,CAACzsC,KAAnB,CAAyByrB,YAA9C;AAEA,QAAMwnB,kBAAkB,GAAGprD,MAAM,CAACmY,KAAP,CAAartC,OAAxC;AAEA,QAAMgf,UAAU,GAAGu9D,YAAY,CAAC9pB,aAAb,CAA4BnzC,QAA5B,EAAsC4V,MAAM,CAACmY,KAA7C,EAAoDyrB,YAApD,EAAkE9gC,KAAlE,EAAyEzpB,MAAzE,CAAnB;AACA,QAAMgyE,eAAe,GAAGhE,YAAY,CAAC3oB,kBAAb,CAAiC50C,UAAjC,CAAxB;AAEA,QAAI2/B,QAAQ,GAAG1I,kBAAkB,CAAC0I,QAAlC,CAd8C,CAgB9C;;AAEA1I,IAAAA,kBAAkB,CAACr3B,WAAnB,GAAiCU,QAAQ,CAACqzC,sBAAT,GAAkC36B,KAAK,CAACpZ,WAAxC,GAAsD,IAAvF;AACAq3B,IAAAA,kBAAkB,CAAChtB,GAAnB,GAAyB+O,KAAK,CAAC/O,GAA/B;AACAgtB,IAAAA,kBAAkB,CAACruB,MAAnB,GAA4B,CAAEtI,QAAQ,CAACqzC,sBAAT,GAAkCpB,UAAlC,GAA+CnkB,QAAjD,EAA4D/P,GAA5D,CAAiE/d,QAAQ,CAACsI,MAAT,IAAmBquB,kBAAkB,CAACr3B,WAAvG,CAA5B;;AAEA,QAAK+/B,QAAQ,KAAK9wD,SAAlB,EAA8B;AAE7B;AAEAyxB,MAAAA,QAAQ,CAACy3B,gBAAT,CAA2B,SAA3B,EAAsCynC,iBAAtC;AAEA7/B,MAAAA,QAAQ,GAAG,IAAI+R,GAAJ,EAAX;AACAza,MAAAA,kBAAkB,CAAC0I,QAAnB,GAA8BA,QAA9B;AAEA;;AAED,QAAI/O,OAAO,GAAG+O,QAAQ,CAACthB,GAAT,CAAckjD,eAAd,CAAd;;AAEA,QAAK3wC,OAAO,KAAK/hD,SAAjB,EAA6B;AAE5B;AAEA,UAAKooD,kBAAkB,CAACupB,cAAnB,KAAsC5vB,OAAtC,IAAiDqG,kBAAkB,CAACqqC,kBAAnB,KAA0CA,kBAAhG,EAAqH;AAEpHE,QAAAA,8BAA8B,CAAElhE,QAAF,EAAYN,UAAZ,CAA9B;AAEA,eAAO4wB,OAAP;AAEA;AAED,KAZD,MAYO;AAEN5wB,MAAAA,UAAU,CAACuV,QAAX,GAAsBgoD,YAAY,CAACl8B,WAAb,CAA0B/gC,QAA1B,CAAtB;AAEAA,MAAAA,QAAQ,CAACmhE,OAAT,CAAkBlyE,MAAlB,EAA0ByQ,UAA1B,EAAsCq7D,KAAtC;AAEA/6D,MAAAA,QAAQ,CAACuF,eAAT,CAA0B7F,UAA1B,EAAsCq7D,KAAtC;AAEAzqC,MAAAA,OAAO,GAAG2sC,YAAY,CAACroB,cAAb,CAA6Bl1C,UAA7B,EAAyCuhE,eAAzC,CAAV;AACA5hC,MAAAA,QAAQ,CAACnrD,GAAT,CAAc+sF,eAAd,EAA+B3wC,OAA/B;AAEAqG,MAAAA,kBAAkB,CAAC1hB,QAAnB,GAA8BvV,UAAU,CAACuV,QAAzC;AAEA;;AAED,QAAMA,QAAQ,GAAG0hB,kBAAkB,CAAC1hB,QAApC;;AAEA,QAAO,CAAEjV,QAAQ,CAACwV,gBAAX,IAA+B,CAAExV,QAAQ,CAACiuC,mBAA5C,IAAqEjuC,QAAQ,CAAC6V,QAAT,KAAsB,IAAhG,EAAuG;AAEtGZ,MAAAA,QAAQ,CAACxQ,cAAT,GAA0BoR,QAAQ,CAACU,OAAnC;AAEA;;AAED2qD,IAAAA,8BAA8B,CAAElhE,QAAF,EAAYN,UAAZ,CAA9B,CAtE8C,CAwE9C;;AAEAi3B,IAAAA,kBAAkB,CAACyqC,WAAnB,GAAiCC,mBAAmB,CAAErhE,QAAF,CAApD;AACA22B,IAAAA,kBAAkB,CAACqqC,kBAAnB,GAAwCA,kBAAxC;;AAEA,QAAKrqC,kBAAkB,CAACyqC,WAAxB,EAAsC;AAErC;AAEAnsD,MAAAA,QAAQ,CAACuV,iBAAT,CAA2Bn6C,KAA3B,GAAmCulC,MAAM,CAACmY,KAAP,CAAawpB,OAAhD;AACAtiC,MAAAA,QAAQ,CAACwV,UAAT,CAAoBp6C,KAApB,GAA4BulC,MAAM,CAACmY,KAAP,CAAaypB,KAAzC;AACAviC,MAAAA,QAAQ,CAACyV,iBAAT,CAA2Br6C,KAA3B,GAAmCulC,MAAM,CAACmY,KAAP,CAAaimB,WAAhD;AACA/+B,MAAAA,QAAQ,CAAC2V,uBAAT,CAAiCv6C,KAAjC,GAAyCulC,MAAM,CAACmY,KAAP,CAAa0pB,iBAAtD;AACAxiC,MAAAA,QAAQ,CAACkW,UAAT,CAAoB96C,KAApB,GAA4BulC,MAAM,CAACmY,KAAP,CAAakmB,IAAzC;AACAh/B,MAAAA,QAAQ,CAACsW,gBAAT,CAA0Bl7C,KAA1B,GAAkCulC,MAAM,CAACmY,KAAP,CAAa2pB,UAA/C;AACAziC,MAAAA,QAAQ,CAACkX,cAAT,CAAwB97C,KAAxB,GAAgCulC,MAAM,CAACmY,KAAP,CAAammB,QAA7C;AACAj/B,MAAAA,QAAQ,CAACmX,KAAT,CAAe/7C,KAAf,GAAuBulC,MAAM,CAACmY,KAAP,CAAa4pB,YAApC;AACA1iC,MAAAA,QAAQ,CAACoX,KAAT,CAAeh8C,KAAf,GAAuBulC,MAAM,CAACmY,KAAP,CAAa6pB,YAApC;AACA3iC,MAAAA,QAAQ,CAACyW,WAAT,CAAqBr7C,KAArB,GAA6BulC,MAAM,CAACmY,KAAP,CAAaz+B,KAA1C;AACA2lB,MAAAA,QAAQ,CAAC0W,iBAAT,CAA2Bt7C,KAA3B,GAAmCulC,MAAM,CAACmY,KAAP,CAAa8pB,WAAhD;AACA5iC,MAAAA,QAAQ,CAAC+W,gBAAT,CAA0B37C,KAA1B,GAAkCulC,MAAM,CAACmY,KAAP,CAAaomB,IAA/C;AAEAl/B,MAAAA,QAAQ,CAACgW,oBAAT,CAA8B56C,KAA9B,GAAsCulC,MAAM,CAACmY,KAAP,CAAa9C,oBAAnD;AACAhW,MAAAA,QAAQ,CAACiW,uBAAT,CAAiC76C,KAAjC,GAAyCulC,MAAM,CAACmY,KAAP,CAAa7C,uBAAtD;AACAjW,MAAAA,QAAQ,CAACuW,aAAT,CAAuBn7C,KAAvB,GAA+BulC,MAAM,CAACmY,KAAP,CAAavC,aAA5C;AACAvW,MAAAA,QAAQ,CAACwW,gBAAT,CAA0Bp7C,KAA1B,GAAkCulC,MAAM,CAACmY,KAAP,CAAatC,gBAA/C;AACAxW,MAAAA,QAAQ,CAAC6W,cAAT,CAAwBz7C,KAAxB,GAAgCulC,MAAM,CAACmY,KAAP,CAAajC,cAA7C;AACA7W,MAAAA,QAAQ,CAAC8W,iBAAT,CAA2B17C,KAA3B,GAAmCulC,MAAM,CAACmY,KAAP,CAAahC,iBAAhD,CAtBqC,CAuBrC;AAEA;;AAED,QAAMu1C,YAAY,GAAGhxC,OAAO,CAACyQ,WAAR,EAArB;AACA,QAAMwgC,YAAY,GAAGt5B,aAAa,CAACu5B,YAAd,CAA4BF,YAAY,CAACn6B,GAAzC,EAA8ClyB,QAA9C,CAArB;AAEA0hB,IAAAA,kBAAkB,CAACupB,cAAnB,GAAoC5vB,OAApC;AACAqG,IAAAA,kBAAkB,CAAC4qC,YAAnB,GAAkCA,YAAlC;AAEA,WAAOjxC,OAAP;AAEA;;AAED,WAAS4wC,8BAAT,CAAyClhE,QAAzC,EAAmDN,UAAnD,EAAgE;AAE/D,QAAMi3B,kBAAkB,GAAGhM,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,CAA3B;AAEA22B,IAAAA,kBAAkB,CAAC0Y,cAAnB,GAAoC3vC,UAAU,CAAC2vC,cAA/C;AACA1Y,IAAAA,kBAAkB,CAACwX,UAAnB,GAAgCzuC,UAAU,CAACyuC,UAA3C;AACAxX,IAAAA,kBAAkB,CAACkY,QAAnB,GAA8BnvC,UAAU,CAACmvC,QAAzC;AACAlY,IAAAA,kBAAkB,CAAC0J,YAAnB,GAAkC3gC,UAAU,CAAC2gC,YAA7C;AACA1J,IAAAA,kBAAkB,CAAC2J,YAAnB,GAAkC5gC,UAAU,CAAC4gC,YAA7C;AACA3J,IAAAA,kBAAkB,CAAC4J,WAAnB,GAAiC7gC,UAAU,CAAC6gC,WAA5C;AACA5J,IAAAA,kBAAkB,CAACoJ,iBAAnB,GAAuCrgC,UAAU,CAACqgC,iBAAlD;AACApJ,IAAAA,kBAAkB,CAACgV,iBAAnB,GAAuCjsC,UAAU,CAACisC,iBAAlD;AACAhV,IAAAA,kBAAkB,CAACT,eAAnB,GAAqCx2B,UAAU,CAACksC,mBAAhD;AACAjV,IAAAA,kBAAkB,CAAC+X,YAAnB,GAAkChvC,UAAU,CAACgvC,YAA7C;AACA/X,IAAAA,kBAAkB,CAAC8X,cAAnB,GAAoC/uC,UAAU,CAAC+uC,cAA/C;AACA9X,IAAAA,kBAAkB,CAAC7d,WAAnB,GAAiCpZ,UAAU,CAACoZ,WAA5C;AAEA;;AAED,WAASwmD,UAAT,CAAqBjzE,MAArB,EAA6BqsB,KAA7B,EAAoChpB,QAApC,EAA8CsQ,QAA9C,EAAwD/Q,MAAxD,EAAiE;AAEhE,QAAKypB,KAAK,CAACtZ,OAAN,KAAkB,IAAvB,EAA8BsZ,KAAK,GAAG2jD,WAAR,CAFkC,CAEb;;AAEnDh5E,IAAAA,QAAQ,CAAC6jE,iBAAT;AAEA,QAAMv9C,GAAG,GAAG+O,KAAK,CAAC/O,GAAlB;AACA,QAAMrK,WAAW,GAAGU,QAAQ,CAACqzC,sBAAT,GAAkC36B,KAAK,CAACpZ,WAAxC,GAAsD,IAA1E;AACA,QAAMrd,QAAQ,GAAKk5E,oBAAoB,KAAK,IAA3B,GAAoCJ,KAAK,CAAC1rB,cAA1C,GAA6D8rB,oBAAoB,CAACtnB,gBAArB,KAA0C,IAA1C,GAAiDsnB,oBAAoB,CAACz1E,OAArB,CAA6BzD,QAA9E,GAAyFnW,cAAvK;AACA,QAAMw8B,MAAM,GAAG,CAAEtI,QAAQ,CAACqzC,sBAAT,GAAkCpB,UAAlC,GAA+CnkB,QAAjD,EAA4D/P,GAA5D,CAAiE/d,QAAQ,CAACsI,MAAT,IAAmBhJ,WAApF,CAAf;AACA,QAAMovC,YAAY,GAAG1uC,QAAQ,CAACqD,YAAT,KAA0B,IAA1B,IAAkC,CAAC,CAAE3T,QAAQ,CAACC,UAAT,CAAoBrT,KAAzD,IAAkEoT,QAAQ,CAACC,UAAT,CAAoBrT,KAApB,CAA0B8tB,QAA1B,KAAuC,CAA9H;AACA,QAAMqkC,cAAc,GAAG,CAAC,CAAEzuC,QAAQ,CAAC0H,SAAZ,IAAyB,CAAC,CAAEhY,QAAQ,CAACC,UAAT,CAAoBkd,OAAvE;AACA,QAAMwzB,YAAY,GAAG,CAAC,CAAE3wC,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAjD;AACA,QAAM0wC,YAAY,GAAG,CAAC,CAAE5wC,QAAQ,CAAC2c,eAAT,CAAyB7e,MAAjD;AACA,QAAM+yC,WAAW,GAAG,CAAC,CAAE7wC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAhD;AACA,QAAMw8B,WAAW,GAAG9Y,QAAQ,CAACqF,UAAT,GAAsB01D,KAAK,CAACjiD,WAA5B,GAA0CxyC,aAA9D;AAEA,QAAMonC,cAAc,GAAGhe,QAAQ,CAAC2c,eAAT,CAAyBzc,QAAzB,IAAqCF,QAAQ,CAAC2c,eAAT,CAAyB7e,MAA9D,IAAwEkC,QAAQ,CAAC2c,eAAT,CAAyB/vB,KAAxH;AACA,QAAMyjD,iBAAiB,GAAKryB,cAAc,KAAKn/B,SAArB,GAAmCm/B,cAAc,CAACt+B,MAAlD,GAA2D,CAArF;AAEA,QAAMunD,kBAAkB,GAAGhM,UAAU,CAAC5M,GAAX,CAAgB/d,QAAhB,CAA3B;AACA,QAAM4V,MAAM,GAAG4kD,kBAAkB,CAACzsC,KAAnB,CAAyBnY,MAAxC;;AAEA,QAAKomD,gBAAgB,KAAK,IAA1B,EAAiC;AAEhC,UAAKC,qBAAqB,KAAK,IAA1B,IAAkC5vE,MAAM,KAAKgvE,cAAlD,EAAmE;AAElE,YAAM3kC,QAAQ,GACbrqC,MAAM,KAAKgvE,cAAX,IACAr7D,QAAQ,CAAClC,EAAT,KAAgBs9D,kBAFjB,CAFkE,CAMlE;AACA;AACA;;AACAvlD,QAAAA,QAAQ,CAAC4gB,QAAT,CAAmBz2B,QAAnB,EAA6B3T,MAA7B,EAAqCqqC,QAArC;AAEA;AAED,KAtC+D,CAwChE;;;AAEA,QAAI+qC,kBAAkB,GAAG,KAAzB;;AAEA,QAAKzhE,QAAQ,CAACtf,OAAT,KAAqBi2C,kBAAkB,CAAC4wB,SAA7C,EAAyD;AAExD,UAAK5wB,kBAAkB,CAACyqC,WAAnB,IAAoCzqC,kBAAkB,CAACqqC,kBAAnB,KAA0CprD,MAAM,CAACmY,KAAP,CAAartC,OAAhG,EAA4G;AAE3G+gF,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJD,MAIO,IAAK9qC,kBAAkB,CAAC0Y,cAAnB,KAAsCptD,QAA3C,EAAsD;AAE5Dw/E,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAKxyE,MAAM,CAAC6P,eAAP,IAA0B63B,kBAAkB,CAACwX,UAAnB,KAAkC,KAAjE,EAAyE;AAE/EszB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK,CAAExyE,MAAM,CAAC6P,eAAT,IAA4B63B,kBAAkB,CAACwX,UAAnB,KAAkC,IAAnE,EAA0E;AAEhFszB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAKxyE,MAAM,CAAC2Q,aAAP,IAAwB+2B,kBAAkB,CAACkY,QAAnB,KAAgC,KAA7D,EAAqE;AAE3E4yB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK,CAAExyE,MAAM,CAAC2Q,aAAT,IAA0B+2B,kBAAkB,CAACkY,QAAnB,KAAgC,IAA/D,EAAsE;AAE5E4yB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAACruB,MAAnB,KAA8BA,MAAnC,EAA4C;AAElDm5D,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAKzhE,QAAQ,CAAC2J,GAAT,KAAiB,IAAjB,IAAyBgtB,kBAAkB,CAAChtB,GAAnB,KAA2BA,GAAzD,EAA+D;AAErE83D,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAACgV,iBAAnB,KAAyCp9D,SAAzC,KACTooD,kBAAkB,CAACgV,iBAAnB,KAAyC91B,QAAQ,CAACogB,SAAlD,IACFU,kBAAkB,CAACT,eAAnB,KAAuCrgB,QAAQ,CAACqgB,eAFrC,CAAL,EAE8D;AAEpEurC,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OANM,MAMA,IAAK9qC,kBAAkB,CAAC+X,YAAnB,KAAoCA,YAAzC,EAAwD;AAE9D+yB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAAC8X,cAAnB,KAAsCA,cAA3C,EAA4D;AAElEgzB,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAAC0J,YAAnB,KAAoCA,YAAzC,EAAwD;AAE9DohC,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAAC2J,YAAnB,KAAoCA,YAAzC,EAAwD;AAE9DmhC,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAAC4J,WAAnB,KAAmCA,WAAxC,EAAsD;AAE5DkhC,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAK9qC,kBAAkB,CAAC7d,WAAnB,KAAmCA,WAAxC,EAAsD;AAE5D2oD,QAAAA,kBAAkB,GAAG,IAArB;AAEA,OAJM,MAIA,IAAKvkD,YAAY,CAACC,QAAb,KAA0B,IAA1B,IAAkCwZ,kBAAkB,CAACoJ,iBAAnB,KAAyCA,iBAAhF,EAAoG;AAE1G0hC,QAAAA,kBAAkB,GAAG,IAArB;AAEA;AAED,KAtED,MAsEO;AAENA,MAAAA,kBAAkB,GAAG,IAArB;AACA9qC,MAAAA,kBAAkB,CAAC4wB,SAAnB,GAA+BvnD,QAAQ,CAACtf,OAAxC;AAEA,KAvH+D,CAyHhE;;;AAEA,QAAI4vC,OAAO,GAAGqG,kBAAkB,CAACupB,cAAjC;;AAEA,QAAKuhB,kBAAkB,KAAK,IAA5B,EAAmC;AAElCnxC,MAAAA,OAAO,GAAG4vC,UAAU,CAAElgE,QAAF,EAAY0Y,KAAZ,EAAmBzpB,MAAnB,CAApB;AAEA;;AAED,QAAIyyE,cAAc,GAAG,KAArB;AACA,QAAIC,eAAe,GAAG,KAAtB;AACA,QAAIC,aAAa,GAAG,KAApB;AAEA,QAAMC,UAAU,GAAGvxC,OAAO,CAACyQ,WAAR,EAAnB;AAAA,QACC+gC,UAAU,GAAGnrC,kBAAkB,CAAC1hB,QADjC;;AAGA,QAAK8Y,KAAK,CAACo0B,UAAN,CAAkB7xB,OAAO,CAACA,OAA1B,CAAL,EAA2C;AAE1CoxC,MAAAA,cAAc,GAAG,IAAjB;AACAC,MAAAA,eAAe,GAAG,IAAlB;AACAC,MAAAA,aAAa,GAAG,IAAhB;AAEA;;AAED,QAAK5hE,QAAQ,CAAClC,EAAT,KAAgBs9D,kBAArB,EAA0C;AAEzCA,MAAAA,kBAAkB,GAAGp7D,QAAQ,CAAClC,EAA9B;AAEA6jE,MAAAA,eAAe,GAAG,IAAlB;AAEA;;AAED,QAAKD,cAAc,IAAIrG,cAAc,KAAKhvE,MAA1C,EAAmD;AAElDw1E,MAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,kBAA1B,EAA8C73D,MAAM,CAACG,gBAArD;;AAEA,UAAK0wB,YAAY,CAAC4X,sBAAlB,EAA2C;AAE1C+sC,QAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,eAA1B,EACC,OAAQz0E,IAAI,CAACsD,GAAL,CAAUsZ,MAAM,CAAC6N,GAAP,GAAa,GAAvB,IAA+BzqB,IAAI,CAACuD,GAA5C,CADD;AAGA;;AAED,UAAKqoF,cAAc,KAAKhvE,MAAxB,EAAiC;AAEhCgvE,QAAAA,cAAc,GAAGhvE,MAAjB,CAFgC,CAIhC;AACA;AACA;;AAEAs1E,QAAAA,eAAe,GAAG,IAAlB,CARgC,CAQP;;AACzBC,QAAAA,aAAa,GAAG,IAAhB,CATgC,CAST;AAEvB,OAtBiD,CAwBlD;AACA;;;AAEA,UAAK5hE,QAAQ,CAACwV,gBAAT,IACJxV,QAAQ,CAACm4D,mBADL,IAEJn4D,QAAQ,CAACi4D,kBAFL,IAGJj4D,QAAQ,CAACqzC,sBAHL,IAIJrzC,QAAQ,CAACsI,MAJV,EAImB;AAElB,YAAMy5D,OAAO,GAAGF,UAAU,CAAC56D,GAAX,CAAe+6D,cAA/B;;AAEA,YAAKD,OAAO,KAAKxzF,SAAjB,EAA6B;AAE5BwzF,UAAAA,OAAO,CAAC/gC,QAAR,CAAkBkjB,GAAlB,EACCkY,QAAQ,CAAC5+D,qBAAT,CAAgCnR,MAAM,CAACK,WAAvC,CADD;AAGA;AAED;;AAED,UAAKsT,QAAQ,CAACm4D,mBAAT,IACJn4D,QAAQ,CAACi4D,kBADL,IAEJj4D,QAAQ,CAACg4D,qBAFL,IAGJh4D,QAAQ,CAAC+J,mBAHL,IAIJ/J,QAAQ,CAACqzC,sBAJL,IAKJrzC,QAAQ,CAACwV,gBALV,EAK6B;AAE5BqsD,QAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,gBAA1B,EAA4C73D,MAAM,CAACwrC,oBAAP,KAAgC,IAA5E;AAEA;;AAED,UAAK73B,QAAQ,CAACm4D,mBAAT,IACJn4D,QAAQ,CAACi4D,kBADL,IAEJj4D,QAAQ,CAACg4D,qBAFL,IAGJh4D,QAAQ,CAAC+J,mBAHL,IAIJ/J,QAAQ,CAACqzC,sBAJL,IAKJrzC,QAAQ,CAACwV,gBALL,IAMJxV,QAAQ,CAACo5D,gBANL,IAOJnqE,MAAM,CAAC2Q,aAPR,EAOwB;AAEvBiiE,QAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,YAA1B,EAAwC73D,MAAM,CAACE,kBAA/C;AAEA;AAED,KA9N+D,CAgOhE;AACA;AACA;;;AAEA,QAAK0C,MAAM,CAAC2Q,aAAZ,EAA4B;AAE3BiiE,MAAAA,UAAU,CAACI,WAAX,CAAwB/d,GAAxB,EAA6Bj1D,MAA7B,EAAqC,YAArC;AACA4yE,MAAAA,UAAU,CAACI,WAAX,CAAwB/d,GAAxB,EAA6Bj1D,MAA7B,EAAqC,mBAArC;AAEA,UAAM8Q,QAAQ,GAAG9Q,MAAM,CAAC8Q,QAAxB;;AAEA,UAAKA,QAAL,EAAgB;AAEf,YAAKmd,YAAY,CAACuY,mBAAlB,EAAwC;AAEvC,cAAK11B,QAAQ,CAACmiE,WAAT,KAAyB,IAA9B,EAAqCniE,QAAQ,CAACoiE,kBAAT;AAErCN,UAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,aAA1B,EAAyCnkD,QAAQ,CAACmiE,WAAlD,EAA+D7+E,QAA/D;AACAw+E,UAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,iBAA1B,EAA6CnkD,QAAQ,CAACqiE,eAAtD;AAEA,SAPD,MAOO;AAENjuF,UAAAA,OAAO,CAACC,IAAR,CAAc,yIAAd;AAEA;AAED;AAED;;AAED,QAAMi4B,eAAe,GAAG3c,QAAQ,CAAC2c,eAAjC;;AAEA,QAAKA,eAAe,CAACzc,QAAhB,KAA6BrhB,SAA7B,IAA0C89B,eAAe,CAAC7e,MAAhB,KAA2Bjf,SAArE,IAAoF89B,eAAe,CAAC/vB,KAAhB,KAA0B/N,SAA1B,IAAuC2uC,YAAY,CAACC,QAAb,KAA0B,IAA1J,EAAmK;AAElKggD,MAAAA,YAAY,CAAC31E,MAAb,CAAqByH,MAArB,EAA6BS,QAA7B,EAAuCsQ,QAAvC,EAAiDswB,OAAjD;AAEA;;AAGD,QAAKqxC,eAAe,IAAIhrC,kBAAkB,CAAC95B,aAAnB,KAAqC5N,MAAM,CAAC4N,aAApE,EAAoF;AAEnF85B,MAAAA,kBAAkB,CAAC95B,aAAnB,GAAmC5N,MAAM,CAAC4N,aAA1C;AACAglE,MAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,eAA1B,EAA2Cj1D,MAAM,CAAC4N,aAAlD;AAEA;;AAED,QAAK8kE,eAAL,EAAuB;AAEtBE,MAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,qBAA1B,EAAiD6W,KAAK,CAACF,mBAAvD;;AAEA,UAAKlkC,kBAAkB,CAACyqC,WAAxB,EAAsC;AAErC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAiB,QAAAA,6BAA6B,CAAEP,UAAF,EAAcF,aAAd,CAA7B;AAEA,OAjBqB,CAmBtB;;;AAEA,UAAKj4D,GAAG,IAAI3J,QAAQ,CAAC2J,GAAT,KAAiB,IAA7B,EAAoC;AAEnClL,QAAAA,SAAS,CAACg5D,kBAAV,CAA8BqK,UAA9B,EAA0Cn4D,GAA1C;AAEA;;AAEDlL,MAAAA,SAAS,CAACm5D,uBAAV,CAAmCkK,UAAnC,EAA+C9hE,QAA/C,EAAyD27D,WAAzD,EAAsED,OAAtE,EAA+EQ,yBAA/E;AAEAj0B,MAAAA,aAAa,CAACq6B,MAAd,CAAsBpe,GAAtB,EAA2BvtB,kBAAkB,CAAC4qC,YAA9C,EAA4DO,UAA5D,EAAwEz+E,QAAxE;AAEA;;AAED,QAAK2c,QAAQ,CAACwV,gBAAT,IAA6BxV,QAAQ,CAACqW,kBAAT,KAAgC,IAAlE,EAAyE;AAExE4xB,MAAAA,aAAa,CAACq6B,MAAd,CAAsBpe,GAAtB,EAA2BvtB,kBAAkB,CAAC4qC,YAA9C,EAA4DO,UAA5D,EAAwEz+E,QAAxE;AACA2c,MAAAA,QAAQ,CAACqW,kBAAT,GAA8B,KAA9B;AAEA;;AAED,QAAKrW,QAAQ,CAACk5D,gBAAd,EAAiC;AAEhC2I,MAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,QAA1B,EAAoCj1D,MAAM,CAAClY,MAA3C;AAEA,KA1T+D,CA4ThE;;;AAEA8qF,IAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,iBAA1B,EAA6Cj1D,MAAM,CAACsN,eAApD;AACAslE,IAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,cAA1B,EAA0Cj1D,MAAM,CAACuN,YAAjD;AACAqlE,IAAAA,UAAU,CAAC7gC,QAAX,CAAqBkjB,GAArB,EAA0B,aAA1B,EAAyCj1D,MAAM,CAACvC,WAAhD;AAEA,WAAO4jC,OAAP;AAEA,GAnsDwC,CAqsDzC;;;AAEA,WAAS+xC,6BAAT,CAAwCptD,QAAxC,EAAkD5kC,KAAlD,EAA0D;AAEzD4kC,IAAAA,QAAQ,CAACuV,iBAAT,CAA2BpnC,WAA3B,GAAyC/S,KAAzC;AACA4kC,IAAAA,QAAQ,CAACwV,UAAT,CAAoBrnC,WAApB,GAAkC/S,KAAlC;AAEA4kC,IAAAA,QAAQ,CAACyV,iBAAT,CAA2BtnC,WAA3B,GAAyC/S,KAAzC;AACA4kC,IAAAA,QAAQ,CAAC2V,uBAAT,CAAiCxnC,WAAjC,GAA+C/S,KAA/C;AACA4kC,IAAAA,QAAQ,CAACyW,WAAT,CAAqBtoC,WAArB,GAAmC/S,KAAnC;AACA4kC,IAAAA,QAAQ,CAAC0W,iBAAT,CAA2BvoC,WAA3B,GAAyC/S,KAAzC;AACA4kC,IAAAA,QAAQ,CAACkW,UAAT,CAAoB/nC,WAApB,GAAkC/S,KAAlC;AACA4kC,IAAAA,QAAQ,CAACsW,gBAAT,CAA0BnoC,WAA1B,GAAwC/S,KAAxC;AACA4kC,IAAAA,QAAQ,CAACkX,cAAT,CAAwB/oC,WAAxB,GAAsC/S,KAAtC;AACA4kC,IAAAA,QAAQ,CAAC+W,gBAAT,CAA0B5oC,WAA1B,GAAwC/S,KAAxC;AAEA;;AAED,WAASgxF,mBAAT,CAA8BrhE,QAA9B,EAAyC;AAExC,WAAOA,QAAQ,CAACg4D,qBAAT,IAAkCh4D,QAAQ,CAACi4D,kBAA3C,IAAiEj4D,QAAQ,CAACm4D,mBAA1E,IACNn4D,QAAQ,CAACqzC,sBADH,IAC6BrzC,QAAQ,CAACo5D,gBADtC,IAEJp5D,QAAQ,CAACwV,gBAAT,IAA6BxV,QAAQ,CAAC4V,MAAT,KAAoB,IAFpD;AAIA;;AAED,OAAK8lC,iBAAL,GAAyB,YAAY;AAEpC,WAAOuf,sBAAP;AAEA,GAJD;;AAMA,OAAKrf,oBAAL,GAA4B,YAAY;AAEvC,WAAOsf,yBAAP;AAEA,GAJD;;AAMA,OAAKtiD,eAAL,GAAuB,YAAY;AAElC,WAAOuiD,oBAAP;AAEA,GAJD;;AAMA,OAAK7D,uBAAL,GAA+B,UAAWr/C,YAAX,EAAyBuyC,YAAzB,EAAuC3kE,YAAvC,EAAsD;AAEpF8kC,IAAAA,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACvyB,OAA7B,EAAuC6gE,cAAvC,GAAwDiE,YAAxD;AACA7/B,IAAAA,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACpyB,YAA7B,EAA4C0gE,cAA5C,GAA6D1gE,YAA7D;AAEA,QAAM2gE,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACAuuC,IAAAA,sBAAsB,CAAC4C,qBAAvB,GAA+C,IAA/C;;AAEA,QAAK5C,sBAAsB,CAAC4C,qBAA5B,EAAoD;AAEnD5C,MAAAA,sBAAsB,CAAC6D,yBAAvB,GAAmDxkE,YAAY,KAAKtX,SAApE;;AAEA,UAAK,CAAEi4E,sBAAsB,CAAC6D,yBAA9B,EAA0D;AAEzD;AACA;AACA,YAAKv0C,UAAU,CAACye,GAAX,CAAgB,sCAAhB,MAA6D,IAAlE,EAAyE;AAExEpgD,UAAAA,OAAO,CAACC,IAAR,CAAc,wGAAd;AACAoyE,UAAAA,sBAAsB,CAAC6E,oBAAvB,GAA8C,KAA9C;AAEA;AAED;AAED;AAED,GA3BD;;AA6BA,OAAK6L,0BAAL,GAAkC,UAAWj/C,YAAX,EAAyBsqD,kBAAzB,EAA8C;AAE/E,QAAM/b,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;AACAuuC,IAAAA,sBAAsB,CAACE,kBAAvB,GAA4C6b,kBAA5C;AACA/b,IAAAA,sBAAsB,CAACgc,uBAAvB,GAAiDD,kBAAkB,KAAKh0F,SAAxE;AAEA,GAND;;AAQA,OAAK0qC,eAAL,GAAuB,UAAWhB,YAAX,EAAqE;AAAA,QAA5CwjC,cAA4C,uEAA3B,CAA2B;AAAA,QAAxBE,iBAAwB,uEAAJ,CAAI;AAE3Fwf,IAAAA,oBAAoB,GAAGljD,YAAvB;AACAgjD,IAAAA,sBAAsB,GAAGxf,cAAzB;AACAyf,IAAAA,yBAAyB,GAAGvf,iBAA5B;AAEA,QAAI8mB,qBAAqB,GAAG,IAA5B;;AAEA,QAAKxqD,YAAL,EAAoB;AAEnB,UAAMuuC,sBAAsB,GAAG77B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,CAA/B;;AAEA,UAAKuuC,sBAAsB,CAACgc,uBAAvB,KAAmDj0F,SAAxD,EAAoE;AAEnE;AACAw/C,QAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8B,IAA9B;AACAygB,QAAAA,qBAAqB,GAAG,KAAxB;AAEA,OAND,MAMO,IAAKjc,sBAAsB,CAACE,kBAAvB,KAA8Cn4E,SAAnD,EAA+D;AAErE8U,QAAAA,QAAQ,CAAConE,iBAAT,CAA4BxyC,YAA5B;AAEA,OAJM,MAIA,IAAKuuC,sBAAsB,CAAC4C,qBAA5B,EAAoD;AAE1D;AACA/lE,QAAAA,QAAQ,CAACknE,cAAT,CAAyBtyC,YAAzB,EAAuC0S,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACvyB,OAA7B,EAAuC6gE,cAA9E,EAA8F57B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACpyB,YAA7B,EAA4C0gE,cAA1I;AAEA;AAED;;AAED,QAAItE,WAAW,GAAG,IAAlB;AACA,QAAIiI,MAAM,GAAG,KAAb;AACA,QAAIwY,gBAAgB,GAAG,KAAvB;;AAEA,QAAKzqD,YAAL,EAAoB;AAEnB,UAAMvyB,OAAO,GAAGuyB,YAAY,CAACvyB,OAA7B;;AAEA,UAAKA,OAAO,CAACc,eAAR,IAA2Bd,OAAO,CAACS,kBAAxC,EAA6D;AAE5Du8E,QAAAA,gBAAgB,GAAG,IAAnB;AAEA;;AAED,UAAMhc,kBAAkB,GAAG/7B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,EAA+ByuC,kBAA1D;;AAEA,UAAKzuC,YAAY,CAACC,uBAAlB,EAA4C;AAE3C+pC,QAAAA,WAAW,GAAGyE,kBAAkB,CAAEjL,cAAF,CAAhC;AACAyO,QAAAA,MAAM,GAAG,IAAT;AAEA,OALD,MAKO,IAAOhtC,YAAY,CAACC,QAAb,IAAyBlF,YAAY,CAACnyB,OAAb,GAAuB,CAAlD,IAAyDzC,QAAQ,CAACgmE,kBAAT,CAA6BpxC,YAA7B,MAAgD,KAA9G,EAAsH;AAE5HgqC,QAAAA,WAAW,GAAGt3B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,EAA+B4uC,8BAA7C;AAEA,OAJM,MAIA;AAEN5E,QAAAA,WAAW,GAAGyE,kBAAd;AAEA;;AAED4U,MAAAA,gBAAgB,CAAC/9E,IAAjB,CAAuB06B,YAAY,CAACxyB,QAApC;;AACA81E,MAAAA,eAAe,CAACh+E,IAAhB,CAAsB06B,YAAY,CAAC1yB,OAAnC;;AACAi2E,MAAAA,mBAAmB,GAAGvjD,YAAY,CAACzyB,WAAnC;AAEA,KA/BD,MA+BO;AAEN81E,MAAAA,gBAAgB,CAAC/9E,IAAjB,CAAuBo9D,SAAvB,EAAmC/kE,cAAnC,CAAmD+lF,WAAnD,EAAiE3pF,KAAjE;;AACAupF,MAAAA,eAAe,CAACh+E,IAAhB,CAAsBu+E,QAAtB,EAAiClmF,cAAjC,CAAiD+lF,WAAjD,EAA+D3pF,KAA/D;;AACAwpF,MAAAA,mBAAmB,GAAGO,YAAtB;AAEA;;AAED,QAAM4G,gBAAgB,GAAG50C,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BC,WAA9B,CAAzB;;AAEA,QAAK0gB,gBAAgB,IAAIzlD,YAAY,CAACjH,WAAjC,IAAgDwsD,qBAArD,EAA6E;AAE5E10C,MAAAA,KAAK,CAAC9X,WAAN,CAAmBgC,YAAnB,EAAiCgqC,WAAjC;AAEA;;AAEDl0B,IAAAA,KAAK,CAACtoC,QAAN,CAAgB61E,gBAAhB;AACAvtC,IAAAA,KAAK,CAACxoC,OAAN,CAAeg2E,eAAf;AACAxtC,IAAAA,KAAK,CAACiuB,cAAN,CAAsBwf,mBAAtB;;AAEA,QAAKtR,MAAL,EAAc;AAEb,UAAMhE,iBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACvyB,OAA7B,CAA1B;;AACAw+D,MAAAA,GAAG,CAACsF,oBAAJ,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,QAAQ/N,cAAhD,EAAgEyK,iBAAiB,CAACK,cAAlF,EAAkG5K,iBAAlG;AAEA,KALD,MAKO,IAAK+mB,gBAAL,EAAwB;AAE9B,UAAMxc,kBAAiB,GAAGv7B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAY,CAACvyB,OAA7B,CAA1B;;AACA,UAAMk9E,KAAK,GAAGnnB,cAAc,IAAI,CAAhC;;AACAyI,MAAAA,GAAG,CAAC2e,uBAAJ,CAA6B,KAA7B,EAAoC,KAApC,EAA2C3c,kBAAiB,CAACK,cAA7D,EAA6E5K,iBAAiB,IAAI,CAAlG,EAAqGinB,KAArG;AAEA;;AAEDxH,IAAAA,kBAAkB,GAAG,CAAE,CAAvB,CAnG2F,CAmGjE;AAE1B,GArGD;;AAuGA,OAAK0H,sBAAL,GAA8B,UAAW7qD,YAAX,EAAyBrnC,CAAzB,EAA4BM,CAA5B,EAA+ByO,KAA/B,EAAsCC,MAAtC,EAA8ClE,MAA9C,EAAsDqnF,mBAAtD,EAA4E;AAEzG,QAAK,EAAI9qD,YAAY,IAAIA,YAAY,CAAC5yB,mBAAjC,CAAL,EAA8D;AAE7DlR,MAAAA,OAAO,CAACkD,KAAR,CAAe,0FAAf;AACA;AAEA;;AAED,QAAI4qE,WAAW,GAAGt3B,UAAU,CAAC5M,GAAX,CAAgB9F,YAAhB,EAA+ByuC,kBAAjD;;AAEA,QAAKzuC,YAAY,CAACC,uBAAb,IAAwC6qD,mBAAmB,KAAKx0F,SAArE,EAAiF;AAEhF0zE,MAAAA,WAAW,GAAGA,WAAW,CAAE8gB,mBAAF,CAAzB;AAEA;;AAED,QAAK9gB,WAAL,EAAmB;AAElBl0B,MAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BC,WAA9B;;AAEA,UAAI;AAEH,YAAMv8D,OAAO,GAAGuyB,YAAY,CAACvyB,OAA7B;AACA,YAAMs9E,aAAa,GAAGt9E,OAAO,CAAC3D,MAA9B;AACA,YAAM+lE,WAAW,GAAGpiE,OAAO,CAACtX,IAA5B;;AAEA,YAAK40F,aAAa,KAAKp6F,UAAlB,IAAgCu7E,KAAK,CAAC9nE,OAAN,CAAe2mF,aAAf,MAAmC9e,GAAG,CAACr0B,YAAJ,CAAkB,KAAlB,CAAxE,EAAoG;AAEnG17C,UAAAA,OAAO,CAACkD,KAAR,CAAe,2GAAf;AACA;AAEA;;AAED,YAAM4rF,uBAAuB,GAAKnb,WAAW,KAAKx/E,aAAlB,KAAuCwtC,UAAU,CAACye,GAAX,CAAgB,6BAAhB,KAAqDrX,YAAY,CAACC,QAAb,IAAyBrH,UAAU,CAACye,GAAX,CAAgB,wBAAhB,CAArH,CAAhC;;AAEA,YAAKuzB,WAAW,KAAK//E,gBAAhB,IAAoCo8E,KAAK,CAAC9nE,OAAN,CAAeyrE,WAAf,MAAiC5D,GAAG,CAACr0B,YAAJ,CAAkB,KAAlB,CAArE,IAAkG;AACtG,UAAIi4B,WAAW,KAAKz/E,SAAhB,KAA+B60C,YAAY,CAACC,QAAb,IAAyBrH,UAAU,CAACye,GAAX,CAAgB,mBAAhB,CAAzB,IAAkEze,UAAU,CAACye,GAAX,CAAgB,0BAAhB,CAAjG,CAAJ,CADI,IACqJ;AACzJ,SAAE0uC,uBAFH,EAE6B;AAE5B9uF,UAAAA,OAAO,CAACkD,KAAR,CAAe,qHAAf;AACA;AAEA,SAtBE,CAwBH;;;AAEA,YAAOzG,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAMqnC,YAAY,CAACt4B,KAAb,GAAqBA,KAAxC,IAAuDzO,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAM+mC,YAAY,CAACr4B,MAAb,GAAsBA,MAAnG,EAAgH;AAE/GskE,UAAAA,GAAG,CAACgf,UAAJ,CAAgBtyF,CAAhB,EAAmBM,CAAnB,EAAsByO,KAAtB,EAA6BC,MAA7B,EAAqCukE,KAAK,CAAC9nE,OAAN,CAAe2mF,aAAf,CAArC,EAAqE7e,KAAK,CAAC9nE,OAAN,CAAeyrE,WAAf,CAArE,EAAmGpsE,MAAnG;AAEA;AAED,OAhCD,SAgCU;AAET;AAEA,YAAMumE,YAAW,GAAKkZ,oBAAoB,KAAK,IAA3B,GAAoCxwC,UAAU,CAAC5M,GAAX,CAAgBo9C,oBAAhB,EAAuCzU,kBAA3E,GAAgG,IAApH;;AACA34B,QAAAA,KAAK,CAACi0B,eAAN,CAAuB,KAAvB,EAA8BC,YAA9B;AAEA;AAED;AAED,GAhED;;AAkEA,OAAKkhB,wBAAL,GAAgC,UAAWvzE,QAAX,EAAqBlK,OAArB,EAA0C;AAAA,QAAZ09E,KAAY,uEAAJ,CAAI;AAEzE,QAAMC,UAAU,GAAG5zF,IAAI,CAACoD,GAAL,CAAU,CAAV,EAAa,CAAEuwF,KAAf,CAAnB;AACA,QAAMzjF,KAAK,GAAGlQ,IAAI,CAACuC,KAAL,CAAY0T,OAAO,CAACpG,KAAR,CAAcK,KAAd,GAAsB0jF,UAAlC,CAAd;AACA,QAAMzjF,MAAM,GAAGnQ,IAAI,CAACuC,KAAL,CAAY0T,OAAO,CAACpG,KAAR,CAAcM,MAAd,GAAuByjF,UAAnC,CAAf;AAEAhgF,IAAAA,QAAQ,CAAC0hD,YAAT,CAAuBr/C,OAAvB,EAAgC,CAAhC;;AAEAw+D,IAAAA,GAAG,CAACof,iBAAJ,CAAuB,IAAvB,EAA6BF,KAA7B,EAAoC,CAApC,EAAuC,CAAvC,EAA0CxzE,QAAQ,CAAChf,CAAnD,EAAsDgf,QAAQ,CAAC1e,CAA/D,EAAkEyO,KAAlE,EAAyEC,MAAzE;;AAEAmuC,IAAAA,KAAK,CAACy1B,aAAN;AAEA,GAZD;;AAcA,OAAK+f,oBAAL,GAA4B,UAAW3zE,QAAX,EAAqB4zE,UAArB,EAAiCC,UAAjC,EAAyD;AAAA,QAAZL,KAAY,uEAAJ,CAAI;AAEpF,QAAMzjF,KAAK,GAAG6jF,UAAU,CAAClkF,KAAX,CAAiBK,KAA/B;AACA,QAAMC,MAAM,GAAG4jF,UAAU,CAAClkF,KAAX,CAAiBM,MAAhC;AACA,QAAM6lE,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeonF,UAAU,CAAC1hF,MAA1B,CAAjB;AACA,QAAM2jE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeonF,UAAU,CAACr1F,IAA1B,CAAf;AAEAiV,IAAAA,QAAQ,CAAC0hD,YAAT,CAAuB0+B,UAAvB,EAAmC,CAAnC,EAPoF,CASpF;AACA;;AACAvf,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBmb,UAAU,CAAC/gF,KAAnC;;AACAwhE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBmb,UAAU,CAAChhF,gBAAnC;;AACAyhE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBmb,UAAU,CAAC9gF,eAAlC;;AAEA,QAAK6gF,UAAU,CAACtiF,aAAhB,EAAgC;AAE/BgjE,MAAAA,GAAG,CAACP,aAAJ,CAAmB,IAAnB,EAAyByf,KAAzB,EAAgCxzE,QAAQ,CAAChf,CAAzC,EAA4Cgf,QAAQ,CAAC1e,CAArD,EAAwDyO,KAAxD,EAA+DC,MAA/D,EAAuE6lE,QAAvE,EAAiFC,MAAjF,EAAyF8d,UAAU,CAAClkF,KAAX,CAAiBiB,IAA1G;AAEA,KAJD,MAIO;AAEN,UAAKijF,UAAU,CAAC3d,mBAAhB,EAAsC;AAErC3B,QAAAA,GAAG,CAACL,uBAAJ,CAA6B,IAA7B,EAAmCuf,KAAnC,EAA0CxzE,QAAQ,CAAChf,CAAnD,EAAsDgf,QAAQ,CAAC1e,CAA/D,EAAkEsyF,UAAU,CAACphF,OAAX,CAAoB,CAApB,EAAwBzC,KAA1F,EAAiG6jF,UAAU,CAACphF,OAAX,CAAoB,CAApB,EAAwBxC,MAAzH,EAAiI6lE,QAAjI,EAA2I+d,UAAU,CAACphF,OAAX,CAAoB,CAApB,EAAwB7B,IAAnK;AAEA,OAJD,MAIO;AAEN2jE,QAAAA,GAAG,CAACP,aAAJ,CAAmB,IAAnB,EAAyByf,KAAzB,EAAgCxzE,QAAQ,CAAChf,CAAzC,EAA4Cgf,QAAQ,CAAC1e,CAArD,EAAwDu0E,QAAxD,EAAkEC,MAAlE,EAA0E8d,UAAU,CAAClkF,KAArF;AAEA;AAED,KA/BmF,CAiCpF;;;AACA,QAAK8jF,KAAK,KAAK,CAAV,IAAeK,UAAU,CAACjhF,eAA/B,EAAiD0hE,GAAG,CAACoB,cAAJ,CAAoB,IAApB;AAEjDv3B,IAAAA,KAAK,CAACy1B,aAAN;AAEA,GAtCD;;AAwCA,OAAKkgB,sBAAL,GAA8B,UAAWC,SAAX,EAAsB/zE,QAAtB,EAAgC4zE,UAAhC,EAA4CC,UAA5C,EAAoE;AAAA,QAAZL,KAAY,uEAAJ,CAAI;;AAEjG,QAAKrI,KAAK,CAAC+B,gBAAX,EAA8B;AAE7B3oF,MAAAA,OAAO,CAACC,IAAR,CAAc,2EAAd;AACA;AAEA;;AAED,QAAMuL,KAAK,GAAGgkF,SAAS,CAACpzF,GAAV,CAAcK,CAAd,GAAkB+yF,SAAS,CAACrzF,GAAV,CAAcM,CAAhC,GAAoC,CAAlD;AACA,QAAMgP,MAAM,GAAG+jF,SAAS,CAACpzF,GAAV,CAAcW,CAAd,GAAkByyF,SAAS,CAACrzF,GAAV,CAAcY,CAAhC,GAAoC,CAAnD;AACA,QAAMoU,KAAK,GAAGq+E,SAAS,CAACpzF,GAAV,CAAcuT,CAAd,GAAkB6/E,SAAS,CAACrzF,GAAV,CAAcwT,CAAhC,GAAoC,CAAlD;AACA,QAAM2hE,QAAQ,GAAGtB,KAAK,CAAC9nE,OAAN,CAAeonF,UAAU,CAAC1hF,MAA1B,CAAjB;AACA,QAAM2jE,MAAM,GAAGvB,KAAK,CAAC9nE,OAAN,CAAeonF,UAAU,CAACr1F,IAA1B,CAAf;AACA,QAAIw1F,QAAJ;;AAEA,QAAKH,UAAU,CAACj9E,eAAhB,EAAkC;AAEjCnD,MAAAA,QAAQ,CAAC4hD,YAAT,CAAuBw+B,UAAvB,EAAmC,CAAnC;AACAG,MAAAA,QAAQ,GAAG,KAAX;AAEA,KALD,MAKO,IAAKH,UAAU,CAACt9E,kBAAhB,EAAqC;AAE3C9C,MAAAA,QAAQ,CAACgiD,iBAAT,CAA4Bo+B,UAA5B,EAAwC,CAAxC;AACAG,MAAAA,QAAQ,GAAG,KAAX;AAEA,KALM,MAKA;AAENzvF,MAAAA,OAAO,CAACC,IAAR,CAAc,6GAAd;AACA;AAEA;;AAED8vE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBmb,UAAU,CAAC/gF,KAAnC;;AACAwhE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBmb,UAAU,CAAChhF,gBAAnC;;AACAyhE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBmb,UAAU,CAAC9gF,eAAlC;;AAEA,QAAMkhF,YAAY,GAAG3f,GAAG,CAACr0B,YAAJ,CAAkB,IAAlB,CAArB;;AACA,QAAMi0C,iBAAiB,GAAG5f,GAAG,CAACr0B,YAAJ,CAAkB,KAAlB,CAA1B;;AACA,QAAMk0C,gBAAgB,GAAG7f,GAAG,CAACr0B,YAAJ,CAAkB,IAAlB,CAAzB;;AACA,QAAMm0C,cAAc,GAAG9f,GAAG,CAACr0B,YAAJ,CAAkB,IAAlB,CAAvB;;AACA,QAAMo0C,gBAAgB,GAAG/f,GAAG,CAACr0B,YAAJ,CAAkB,KAAlB,CAAzB;;AAEA,QAAMvwC,KAAK,GAAGkkF,UAAU,CAAC3d,mBAAX,GAAiC2d,UAAU,CAACphF,OAAX,CAAoB,CAApB,CAAjC,GAA2DohF,UAAU,CAAClkF,KAApF;;AAEA4kE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBhpE,KAAK,CAACK,KAA7B;;AACAukE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBhpE,KAAK,CAACM,MAA9B;;AACAskE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBqb,SAAS,CAACrzF,GAAV,CAAcM,CAArC;;AACAszE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBqb,SAAS,CAACrzF,GAAV,CAAcY,CAArC;;AACAgzE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBqb,SAAS,CAACrzF,GAAV,CAAcwT,CAAtC;;AAEA,QAAK0/E,UAAU,CAACtiF,aAAX,IAA4BsiF,UAAU,CAACh9E,eAA5C,EAA8D;AAE7D09D,MAAAA,GAAG,CAACN,aAAJ,CAAmBggB,QAAnB,EAA6BR,KAA7B,EAAoCxzE,QAAQ,CAAChf,CAA7C,EAAgDgf,QAAQ,CAAC1e,CAAzD,EAA4D0e,QAAQ,CAAC9L,CAArE,EAAwEnE,KAAxE,EAA+EC,MAA/E,EAAuF0F,KAAvF,EAA8FmgE,QAA9F,EAAwGC,MAAxG,EAAgHpmE,KAAK,CAACiB,IAAtH;AAEA,KAJD,MAIO;AAEN,UAAKijF,UAAU,CAAC3d,mBAAhB,EAAsC;AAErC1xE,QAAAA,OAAO,CAACC,IAAR,CAAc,yFAAd;;AACA8vE,QAAAA,GAAG,CAACggB,uBAAJ,CAA6BN,QAA7B,EAAuCR,KAAvC,EAA8CxzE,QAAQ,CAAChf,CAAvD,EAA0Dgf,QAAQ,CAAC1e,CAAnE,EAAsE0e,QAAQ,CAAC9L,CAA/E,EAAkFnE,KAAlF,EAAyFC,MAAzF,EAAiG0F,KAAjG,EAAwGmgE,QAAxG,EAAkHnmE,KAAK,CAACiB,IAAxH;AAEA,OALD,MAKO;AAEN2jE,QAAAA,GAAG,CAACN,aAAJ,CAAmBggB,QAAnB,EAA6BR,KAA7B,EAAoCxzE,QAAQ,CAAChf,CAA7C,EAAgDgf,QAAQ,CAAC1e,CAAzD,EAA4D0e,QAAQ,CAAC9L,CAArE,EAAwEnE,KAAxE,EAA+EC,MAA/E,EAAuF0F,KAAvF,EAA8FmgE,QAA9F,EAAwGC,MAAxG,EAAgHpmE,KAAhH;AAEA;AAED;;AAED4kE,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuBub,YAAvB;;AACA3f,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwBwb,iBAAxB;;AACA5f,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuByb,gBAAvB;;AACA7f,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,IAAjB,EAAuB0b,cAAvB;;AACA9f,IAAAA,GAAG,CAACoE,WAAJ,CAAiB,KAAjB,EAAwB2b,gBAAxB,EA1EiG,CA4EjG;;;AACA,QAAKb,KAAK,KAAK,CAAV,IAAeK,UAAU,CAACjhF,eAA/B,EAAiD0hE,GAAG,CAACoB,cAAJ,CAAoBse,QAApB;AAEjD71C,IAAAA,KAAK,CAACy1B,aAAN;AAEA,GAjFD;;AAmFA,OAAK0E,WAAL,GAAmB,UAAWxiE,OAAX,EAAqB;AAEvC,QAAKA,OAAO,CAAC0zB,aAAb,EAA6B;AAE5B/1B,MAAAA,QAAQ,CAAC8hD,cAAT,CAAyBz/C,OAAzB,EAAkC,CAAlC;AAEA,KAJD,MAIO,IAAKA,OAAO,CAACc,eAAb,EAA+B;AAErCnD,MAAAA,QAAQ,CAAC4hD,YAAT,CAAuBv/C,OAAvB,EAAgC,CAAhC;AAEA,KAJM,MAIA,IAAKA,OAAO,CAACS,kBAAb,EAAkC;AAExC9C,MAAAA,QAAQ,CAACgiD,iBAAT,CAA4B3/C,OAA5B,EAAqC,CAArC;AAEA,KAJM,MAIA;AAENrC,MAAAA,QAAQ,CAAC0hD,YAAT,CAAuBr/C,OAAvB,EAAgC,CAAhC;AAEA;;AAEDqoC,IAAAA,KAAK,CAACy1B,aAAN;AAEA,GAtBD;;AAwBA,OAAK2gB,UAAL,GAAkB,YAAY;AAE7BlJ,IAAAA,sBAAsB,GAAG,CAAzB;AACAC,IAAAA,yBAAyB,GAAG,CAA5B;AACAC,IAAAA,oBAAoB,GAAG,IAAvB;AAEAptC,IAAAA,KAAK,CAACuF,KAAN;AACAtD,IAAAA,aAAa,CAACsD,KAAd;AAEA,GATD;;AAWA,MAAK,OAAO8wC,kBAAP,KAA8B,WAAnC,EAAiD;AAEhDA,IAAAA,kBAAkB,CAAC1gF,aAAnB,CAAkC,IAAI2gF,WAAJ,CAAiB,SAAjB,EAA4B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA5B,CAAlC;AAEA;AAED;;IAEKC,c;;;;;;;;;;;;EAAuB9K,a;;AAE7B8K,cAAc,CAAClvF,SAAf,CAAyBynF,gBAAzB,GAA4C,IAA5C;;IAEM0H,O;AAEL,mBAAaloF,KAAb,EAAwC;AAAA,QAApBq7E,OAAoB,uEAAV,OAAU;;AAAA;;AAEvC,SAAK5jB,SAAL,GAAiB,IAAjB;AAEA,SAAKn4D,IAAL,GAAY,EAAZ;AAEA,SAAKU,KAAL,GAAa,IAAIc,KAAJ,CAAWd,KAAX,CAAb;AACA,SAAKq7E,OAAL,GAAeA,OAAf;AAEA;;;;WAED,iBAAQ;AAEP,aAAO,IAAI6M,OAAJ,CAAa,KAAKloF,KAAlB,EAAyB,KAAKq7E,OAA9B,CAAP;AAEA;;;WAED,kBAAqB;AAEpB,aAAO;AACNvpF,QAAAA,IAAI,EAAE,SADA;AAENkO,QAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWkC,MAAX,EAFD;AAGNm5E,QAAAA,OAAO,EAAE,KAAKA;AAHR,OAAP;AAMA;;;;;;IAII8M,G;AAEL,eAAanoF,KAAb,EAA2C;AAAA,QAAvB2d,IAAuB,uEAAhB,CAAgB;AAAA,QAAbC,GAAa,uEAAP,IAAO;;AAAA;;AAE1C,SAAKw9D,KAAL,GAAa,IAAb;AAEA,SAAK97E,IAAL,GAAY,EAAZ;AAEA,SAAKU,KAAL,GAAa,IAAIc,KAAJ,CAAWd,KAAX,CAAb;AAEA,SAAK2d,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AAEA;;;;WAED,iBAAQ;AAEP,aAAO,IAAIuqE,GAAJ,CAAS,KAAKnoF,KAAd,EAAqB,KAAK2d,IAA1B,EAAgC,KAAKC,GAArC,CAAP;AAEA;;;WAED,kBAAqB;AAEpB,aAAO;AACN9rB,QAAAA,IAAI,EAAE,KADA;AAENkO,QAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWkC,MAAX,EAFD;AAGNyb,QAAAA,IAAI,EAAE,KAAKA,IAHL;AAINC,QAAAA,GAAG,EAAE,KAAKA;AAJJ,OAAP;AAOA;;;;;;IAIIwqE,K;;;;;AAEL,mBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKtlE,OAAL,GAAe,IAAf;AAEA,YAAKhxB,IAAL,GAAY,OAAZ;AAEA,YAAKixB,UAAL,GAAkB,IAAlB;AACA,YAAKC,WAAL,GAAmB,IAAnB;AACA,YAAKqK,GAAL,GAAW,IAAX;AAEA,YAAK2yD,gBAAL,GAAwB,IAAxB;AAEA,YAAK9gB,UAAL,GAAkB,IAAlB,CAda,CAcW;;AAExB,QAAK,OAAO4oB,kBAAP,KAA8B,WAAnC,EAAiD;AAEhDA,MAAAA,kBAAkB,CAAC1gF,aAAnB,CAAkC,IAAI2gF,WAAJ,CAAiB,SAAjB,EAA4B;AAAEC,QAAAA,MAAM;AAAR,OAA5B,CAAlC;AAEA;;AApBY;AAsBb;;;;WAED,cAAMnnF,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,sEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,UAAKpjB,MAAM,CAACkiB,UAAP,KAAsB,IAA3B,EAAkC,KAAKA,UAAL,GAAkBliB,MAAM,CAACkiB,UAAP,CAAkBrZ,KAAlB,EAAlB;AAClC,UAAK7I,MAAM,CAACmiB,WAAP,KAAuB,IAA5B,EAAmC,KAAKA,WAAL,GAAmBniB,MAAM,CAACmiB,WAAP,CAAmBtZ,KAAnB,EAAnB;AACnC,UAAK7I,MAAM,CAACwsB,GAAP,KAAe,IAApB,EAA2B,KAAKA,GAAL,GAAWxsB,MAAM,CAACwsB,GAAP,CAAW3jB,KAAX,EAAX;AAE3B,UAAK7I,MAAM,CAACm/E,gBAAP,KAA4B,IAAjC,EAAwC,KAAKA,gBAAL,GAAwBn/E,MAAM,CAACm/E,gBAAP,CAAwBt2E,KAAxB,EAAxB;AAExC,WAAKw1D,UAAL,GAAkBr+D,MAAM,CAACq+D,UAAzB;AACA,WAAKj5D,gBAAL,GAAwBpF,MAAM,CAACoF,gBAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ5B,IAAR,EAAe;AAEd,UAAMJ,IAAI,qEAAiBI,IAAjB,CAAV;;AAEA,UAAK,KAAKgpB,GAAL,KAAa,IAAlB,EAAyBppB,IAAI,CAAC0O,MAAL,CAAY0a,GAAZ,GAAkB,KAAKA,GAAL,CAASnmB,MAAT,EAAlB;AAEzB,aAAOjD,IAAP;AAEA;;;;EAnDkBsb,Q;;IAuDd8oE,iB;AAEL,6BAAa31F,KAAb,EAAoBwhC,MAApB,EAA6B;AAAA;;AAE5B,SAAKo0D,mBAAL,GAA2B,IAA3B;AAEA,SAAK51F,KAAL,GAAaA,KAAb;AACA,SAAKwhC,MAAL,GAAcA,MAAd;AACA,SAAK5pB,KAAL,GAAa5X,KAAK,KAAKT,SAAV,GAAsBS,KAAK,CAACI,MAAN,GAAeohC,MAArC,GAA8C,CAA3D;AAEA,SAAKjG,KAAL,GAAah9B,eAAb;AACA,SAAKi9B,WAAL,GAAmB;AAAE7zB,MAAAA,MAAM,EAAE,CAAV;AAAaiQ,MAAAA,KAAK,EAAE,CAAE;AAAtB,KAAnB;AAEA,SAAKlG,OAAL,GAAe,CAAf;AAEA,SAAKxQ,IAAL,GAAYN,YAAY,EAAxB;AAEA;;;;WAED,4BAAmB,CAAE;;;SAErB,aAAiBS,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKqQ,OAAL;AAEtB;;;WAED,kBAAUrQ,KAAV,EAAkB;AAEjB,WAAKk6B,KAAL,GAAal6B,KAAb;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM8M,MAAN,EAAe;AAEd,WAAKnO,KAAL,GAAa,IAAImO,MAAM,CAACnO,KAAP,CAAasF,WAAjB,CAA8B6I,MAAM,CAACnO,KAArC,CAAb;AACA,WAAK4X,KAAL,GAAazJ,MAAM,CAACyJ,KAApB;AACA,WAAK4pB,MAAL,GAAcrzB,MAAM,CAACqzB,MAArB;AACA,WAAKjG,KAAL,GAAaptB,MAAM,CAACotB,KAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQE,MAAR,EAAgB7zB,SAAhB,EAA2B8zB,MAA3B,EAAoC;AAEnCD,MAAAA,MAAM,IAAI,KAAK+F,MAAf;AACA9F,MAAAA,MAAM,IAAI9zB,SAAS,CAAC45B,MAApB;;AAEA,WAAM,IAAIthC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKqhC,MAA1B,EAAkCthC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,aAAKF,KAAL,CAAYy7B,MAAM,GAAGv7B,CAArB,IAA2B0H,SAAS,CAAC5H,KAAV,CAAiB07B,MAAM,GAAGx7B,CAA1B,CAA3B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,aAAKmB,KAAL,EAAyB;AAAA,UAAbsG,MAAa,uEAAJ,CAAI;AAExB,WAAK3H,KAAL,CAAWkF,GAAX,CAAgB7D,KAAhB,EAAuBsG,MAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO4J,IAAP,EAAc;AAEb,UAAKA,IAAI,CAACskF,YAAL,KAAsBt2F,SAA3B,EAAuC;AAEtCgS,QAAAA,IAAI,CAACskF,YAAL,GAAoB,EAApB;AAEA;;AAED,UAAK,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAAlB,KAA4Bv2F,SAAjC,EAA6C;AAE5C,aAAKS,KAAL,CAAW0M,MAAX,CAAkBopF,KAAlB,GAA0Bl1F,YAAY,EAAtC;AAEA;;AAED,UAAK2Q,IAAI,CAACskF,YAAL,CAAmB,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAArC,MAAiDv2F,SAAtD,EAAkE;AAEjEgS,QAAAA,IAAI,CAACskF,YAAL,CAAmB,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAArC,IAA+C,KAAK91F,KAAL,CAAWC,KAAX,CAAkB,CAAlB,EAAsByM,MAArE;AAEA;;AAED,UAAM1M,KAAK,GAAG,IAAI,KAAKA,KAAL,CAAWsF,WAAf,CAA4BiM,IAAI,CAACskF,YAAL,CAAmB,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAArC,CAA5B,CAAd;AAEA,UAAMC,EAAE,GAAG,IAAI,KAAKzwF,WAAT,CAAsBtF,KAAtB,EAA6B,KAAKwhC,MAAlC,CAAX;AACAu0D,MAAAA,EAAE,CAACC,QAAH,CAAa,KAAKz6D,KAAlB;AAEA,aAAOw6D,EAAP;AAEA;;;WAED,kBAAU96E,QAAV,EAAqB;AAEpB,WAAK+gB,gBAAL,GAAwB/gB,QAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQ1J,IAAR,EAAe;AAEd,UAAKA,IAAI,CAACskF,YAAL,KAAsBt2F,SAA3B,EAAuC;AAEtCgS,QAAAA,IAAI,CAACskF,YAAL,GAAoB,EAApB;AAEA,OANa,CAQd;;;AAEA,UAAK,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAAlB,KAA4Bv2F,SAAjC,EAA6C;AAE5C,aAAKS,KAAL,CAAW0M,MAAX,CAAkBopF,KAAlB,GAA0Bl1F,YAAY,EAAtC;AAEA;;AAED,UAAK2Q,IAAI,CAACskF,YAAL,CAAmB,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAArC,MAAiDv2F,SAAtD,EAAkE;AAEjEgS,QAAAA,IAAI,CAACskF,YAAL,CAAmB,KAAK71F,KAAL,CAAW0M,MAAX,CAAkBopF,KAArC,IAA+C9jF,KAAK,CAACK,IAAN,CAAY,IAAI9F,WAAJ,CAAiB,KAAKvM,KAAL,CAAW0M,MAA5B,CAAZ,CAA/C;AAEA,OApBa,CAsBd;;;AAEA,aAAO;AACNxL,QAAAA,IAAI,EAAE,KAAKA,IADL;AAENwL,QAAAA,MAAM,EAAE,KAAK1M,KAAL,CAAW0M,MAAX,CAAkBopF,KAFpB;AAGN12F,QAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWsF,WAAX,CAAuBsH,IAHvB;AAIN40B,QAAAA,MAAM,EAAE,KAAKA;AAJP,OAAP;AAOA;;;;;;AAIF,IAAMy0D,SAAS,GAAG,aAAc,IAAI35E,OAAJ,EAAhC;;IAEM45E,0B;AAEL,sCAAaC,iBAAb,EAAgC/6D,QAAhC,EAA0CzzB,MAA1C,EAAuE;AAAA,QAArBuI,UAAqB,uEAAR,KAAQ;;AAAA;;AAEtE,SAAKqxB,4BAAL,GAAoC,IAApC;AAEA,SAAK30B,IAAL,GAAY,EAAZ;AAEA,SAAK2E,IAAL,GAAY4kF,iBAAZ;AACA,SAAK/6D,QAAL,GAAgBA,QAAhB;AACA,SAAKzzB,MAAL,GAAcA,MAAd;AAEA,SAAKuI,UAAL,GAAkBA,UAAU,KAAK,IAAjC;AAEA;;;;SAED,eAAY;AAEX,aAAO,KAAKqB,IAAL,CAAUqG,KAAjB;AAEA;;;SAED,eAAY;AAEX,aAAO,KAAKrG,IAAL,CAAUvR,KAAjB;AAEA;;;SAED,aAAiBqB,KAAjB,EAAyB;AAExB,WAAKkQ,IAAL,CAAU6C,WAAV,GAAwB/S,KAAxB;AAEA;;;WAED,sBAAcK,CAAd,EAAkB;AAEjB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKoR,IAAL,CAAUqG,KAA/B,EAAsC1X,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnD+1F,QAAAA,SAAS,CAACp1E,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+1F,QAAAA,SAAS,CAAC34E,YAAV,CAAwB5b,CAAxB;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+1F,SAAS,CAACr0F,CAA1B,EAA6Bq0F,SAAS,CAAC/zF,CAAvC,EAA0C+zF,SAAS,CAACnhF,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAmBpT,CAAnB,EAAuB;AAEtB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9C+1F,QAAAA,SAAS,CAACp1E,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+1F,QAAAA,SAAS,CAACl6D,iBAAV,CAA6Br6B,CAA7B;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+1F,SAAS,CAACr0F,CAA1B,EAA6Bq0F,SAAS,CAAC/zF,CAAvC,EAA0C+zF,SAAS,CAACnhF,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,4BAAoBpT,CAApB,EAAwB;AAEvB,WAAM,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKyX,KAA1B,EAAiC1X,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA+C;AAE9C+1F,QAAAA,SAAS,CAACp1E,mBAAV,CAA+B,IAA/B,EAAqC3gB,CAArC;;AAEA+1F,QAAAA,SAAS,CAACnvE,kBAAV,CAA8BplB,CAA9B;;AAEA,aAAKo6B,MAAL,CAAa57B,CAAb,EAAgB+1F,SAAS,CAACr0F,CAA1B,EAA6Bq0F,SAAS,CAAC/zF,CAAvC,EAA0C+zF,SAAS,CAACnhF,CAApD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,cAAMlV,KAAN,EAAagC,CAAb,EAAiB;AAEhB,WAAK2P,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAjD,IAA4D/F,CAA5D;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMhC,KAAN,EAAasC,CAAb,EAAiB;AAEhB,WAAKqP,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,IAAgEzF,CAAhE;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMtC,KAAN,EAAakV,CAAb,EAAiB;AAEhB,WAAKvD,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,IAAgEmN,CAAhE;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMlV,KAAN,EAAa6G,CAAb,EAAiB;AAEhB,WAAK8K,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,IAAgElB,CAAhE;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAM7G,KAAN,EAAc;AAEb,aAAO,KAAK2R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAjD,CAAP;AAEA;;;WAED,cAAM/H,KAAN,EAAc;AAEb,aAAO,KAAK2R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,CAAP;AAEA;;;WAED,cAAM/H,KAAN,EAAc;AAEb,aAAO,KAAK2R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,CAAP;AAEA;;;WAED,cAAM/H,KAAN,EAAc;AAEb,aAAO,KAAK2R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAhC,GAAyC,CAA1D,CAAP;AAEA;;;WAED,eAAO/H,KAAP,EAAcgC,CAAd,EAAiBM,CAAjB,EAAqB;AAEpBtC,MAAAA,KAAK,GAAGA,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAxC;AAEA,WAAK4J,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BgC,CAA/B;AACA,WAAK2P,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BsC,CAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQtC,KAAR,EAAegC,CAAf,EAAkBM,CAAlB,EAAqB4S,CAArB,EAAyB;AAExBlV,MAAAA,KAAK,GAAGA,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAxC;AAEA,WAAK4J,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BgC,CAA/B;AACA,WAAK2P,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BsC,CAA/B;AACA,WAAKqP,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BkV,CAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAASlV,KAAT,EAAgBgC,CAAhB,EAAmBM,CAAnB,EAAsB4S,CAAtB,EAAyBrO,CAAzB,EAA6B;AAE5B7G,MAAAA,KAAK,GAAGA,KAAK,GAAG,KAAK2R,IAAL,CAAUiwB,MAAlB,GAA2B,KAAK75B,MAAxC;AAEA,WAAK4J,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BgC,CAA/B;AACA,WAAK2P,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BsC,CAA/B;AACA,WAAKqP,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+BkV,CAA/B;AACA,WAAKvD,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAG,CAAzB,IAA+B6G,CAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO8K,IAAP,EAAc;AAEb,UAAKA,IAAI,KAAKhS,SAAd,EAA0B;AAEzB4F,QAAAA,OAAO,CAACpB,GAAR,CAAa,kHAAb;AAEA,YAAM/D,KAAK,GAAG,EAAd;;AAEA,aAAM,IAAIE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK0X,KAA1B,EAAiC1X,CAAC,EAAlC,EAAwC;AAEvC,cAAMN,KAAK,GAAGM,CAAC,GAAG,KAAKqR,IAAL,CAAUiwB,MAAd,GAAuB,KAAK75B,MAA1C;;AAEA,eAAM,IAAIib,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKwY,QAA1B,EAAoCxY,CAAC,EAArC,EAA2C;AAE1C5iB,YAAAA,KAAK,CAACN,IAAN,CAAY,KAAK6R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAGgjB,CAAzB,CAAZ;AAEA;AAED;;AAED,eAAO,IAAIuY,eAAJ,CAAqB,IAAI,KAAKn7B,KAAL,CAAWsF,WAAf,CAA4BtF,KAA5B,CAArB,EAA0D,KAAKo7B,QAA/D,EAAyE,KAAKlrB,UAA9E,CAAP;AAEA,OApBD,MAoBO;AAEN,YAAKqB,IAAI,CAAC6kF,kBAAL,KAA4B72F,SAAjC,EAA6C;AAE5CgS,UAAAA,IAAI,CAAC6kF,kBAAL,GAA0B,EAA1B;AAEA;;AAED,YAAK7kF,IAAI,CAAC6kF,kBAAL,CAAyB,KAAK7kF,IAAL,CAAUrQ,IAAnC,MAA8C3B,SAAnD,EAA+D;AAE9DgS,UAAAA,IAAI,CAAC6kF,kBAAL,CAAyB,KAAK7kF,IAAL,CAAUrQ,IAAnC,IAA4C,KAAKqQ,IAAL,CAAUyF,KAAV,CAAiBzF,IAAjB,CAA5C;AAEA;;AAED,eAAO,IAAI2kF,0BAAJ,CAAgC3kF,IAAI,CAAC6kF,kBAAL,CAAyB,KAAK7kF,IAAL,CAAUrQ,IAAnC,CAAhC,EAA2E,KAAKk6B,QAAhF,EAA0F,KAAKzzB,MAA/F,EAAuG,KAAKuI,UAA5G,CAAP;AAEA;AAED;;;WAED,gBAAQqB,IAAR,EAAe;AAEd,UAAKA,IAAI,KAAKhS,SAAd,EAA0B;AAEzB4F,QAAAA,OAAO,CAACpB,GAAR,CAAa,uHAAb;AAEA,YAAM/D,KAAK,GAAG,EAAd;;AAEA,aAAM,IAAIE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK0X,KAA1B,EAAiC1X,CAAC,EAAlC,EAAwC;AAEvC,cAAMN,KAAK,GAAGM,CAAC,GAAG,KAAKqR,IAAL,CAAUiwB,MAAd,GAAuB,KAAK75B,MAA1C;;AAEA,eAAM,IAAIib,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKwY,QAA1B,EAAoCxY,CAAC,EAArC,EAA2C;AAE1C5iB,YAAAA,KAAK,CAACN,IAAN,CAAY,KAAK6R,IAAL,CAAUvR,KAAV,CAAiBJ,KAAK,GAAGgjB,CAAzB,CAAZ;AAEA;AAED,SAhBwB,CAkBzB;;;AAEA,eAAO;AACNwY,UAAAA,QAAQ,EAAE,KAAKA,QADT;AAENh8B,UAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWsF,WAAX,CAAuBsH,IAFvB;AAGN5M,UAAAA,KAAK,EAAEA,KAHD;AAINkQ,UAAAA,UAAU,EAAE,KAAKA;AAJX,SAAP;AAOA,OA3BD,MA2BO;AAEN;AAEA,YAAKqB,IAAI,CAAC6kF,kBAAL,KAA4B72F,SAAjC,EAA6C;AAE5CgS,UAAAA,IAAI,CAAC6kF,kBAAL,GAA0B,EAA1B;AAEA;;AAED,YAAK7kF,IAAI,CAAC6kF,kBAAL,CAAyB,KAAK7kF,IAAL,CAAUrQ,IAAnC,MAA8C3B,SAAnD,EAA+D;AAE9DgS,UAAAA,IAAI,CAAC6kF,kBAAL,CAAyB,KAAK7kF,IAAL,CAAUrQ,IAAnC,IAA4C,KAAKqQ,IAAL,CAAUiD,MAAV,CAAkBjD,IAAlB,CAA5C;AAEA;;AAED,eAAO;AACNgwB,UAAAA,4BAA4B,EAAE,IADxB;AAENnG,UAAAA,QAAQ,EAAE,KAAKA,QAFT;AAGN7pB,UAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUrQ,IAHV;AAINyG,UAAAA,MAAM,EAAE,KAAKA,MAJP;AAKNuI,UAAAA,UAAU,EAAE,KAAKA;AALX,SAAP;AAQA;AAED;;;;;;IAIIg0D,c;;;;;AAEL,0BAAaxzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKw5D,gBAAL,GAAwB,IAAxB;AAEA,YAAK9qF,IAAL,GAAY,gBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb;AAEA,YAAK6pB,GAAL,GAAW,IAAX;AAEA,YAAKE,QAAL,GAAgB,IAAhB;AAEA,YAAKtsB,QAAL,GAAgB,CAAhB;AAEA,YAAKquB,eAAL,GAAuB,IAAvB;AAEA,YAAK3F,WAAL,GAAmB,IAAnB;AAEA,YAAKoG,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAtByB;AAwBzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,+EAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK2qB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKE,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKtsB,QAAL,GAAgBsC,MAAM,CAACtC,QAAvB;AAEA,WAAKquB,eAAL,GAAuB/rB,MAAM,CAAC+rB,eAA9B;AAEA,WAAKS,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EA9C2B1G,Q;;AAkD7B,IAAIoiE,SAAJ;;AAEA,IAAMC,eAAe,GAAG,aAAc,IAAIh6E,OAAJ,EAAtC;;AACA,IAAMi6E,WAAW,GAAG,aAAc,IAAIj6E,OAAJ,EAAlC;;AACA,IAAMk6E,WAAW,GAAG,aAAc,IAAIl6E,OAAJ,EAAlC;;AAEA,IAAMm6E,gBAAgB,GAAG,aAAc,IAAIrwF,OAAJ,EAAvC;;AACA,IAAMswF,gBAAgB,GAAG,aAAc,IAAItwF,OAAJ,EAAvC;;AACA,IAAMuwF,gBAAgB,GAAG,aAAc,IAAI5vE,OAAJ,EAAvC;;AAEA,IAAM6vE,GAAG,GAAG,aAAc,IAAIt6E,OAAJ,EAA1B;;AACA,IAAMu6E,GAAG,GAAG,aAAc,IAAIv6E,OAAJ,EAA1B;;AACA,IAAMw6E,GAAG,GAAG,aAAc,IAAIx6E,OAAJ,EAA1B;;AAEA,IAAMy6E,IAAI,GAAG,aAAc,IAAI3wF,OAAJ,EAA3B;;AACA,IAAM4wF,IAAI,GAAG,aAAc,IAAI5wF,OAAJ,EAA3B;;AACA,IAAM6wF,IAAI,GAAG,aAAc,IAAI7wF,OAAJ,EAA3B;;IAEM8wF,M;;;;;AAEL,kBAAalmE,QAAb,EAAwB;AAAA;;AAAA;;AAEvB;AAEA,YAAKggE,QAAL,GAAgB,IAAhB;AAEA,YAAK5xF,IAAL,GAAY,QAAZ;;AAEA,QAAKi3F,SAAS,KAAK92F,SAAnB,EAA+B;AAE9B82F,MAAAA,SAAS,GAAG,IAAIl5D,cAAJ,EAAZ;AAEA,UAAMg6D,YAAY,GAAG,IAAI5xF,YAAJ,CAAkB,CACtC,CAAE,GADoC,EAC/B,CAAE,GAD6B,EACxB,CADwB,EACrB,CADqB,EAClB,CADkB,EAEtC,GAFsC,EAEjC,CAAE,GAF+B,EAE1B,CAF0B,EAEvB,CAFuB,EAEpB,CAFoB,EAGtC,GAHsC,EAGjC,GAHiC,EAG5B,CAH4B,EAGzB,CAHyB,EAGtB,CAHsB,EAItC,CAAE,GAJoC,EAI/B,GAJ+B,EAI1B,CAJ0B,EAIvB,CAJuB,EAIpB,CAJoB,CAAlB,CAArB;AAOA,UAAM4wF,iBAAiB,GAAG,IAAIR,iBAAJ,CAAuBwB,YAAvB,EAAqC,CAArC,CAA1B;;AAEAd,MAAAA,SAAS,CAACr0D,QAAV,CAAoB,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAApB;;AACAq0D,MAAAA,SAAS,CAAC/3D,YAAV,CAAwB,UAAxB,EAAoC,IAAI43D,0BAAJ,CAAgCC,iBAAhC,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,CAApC;;AACAE,MAAAA,SAAS,CAAC/3D,YAAV,CAAwB,IAAxB,EAA8B,IAAI43D,0BAAJ,CAAgCC,iBAAhC,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,CAA9B;AAEA;;AAED,YAAKz1E,QAAL,GAAgB21E,SAAhB;AACA,YAAKrlE,QAAL,GAAkBA,QAAQ,KAAKzxB,SAAf,GAA6ByxB,QAA7B,GAAwC,IAAIkzC,cAAJ,EAAxD;AAEA,YAAKn8D,MAAL,GAAc,IAAI3B,OAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAd;AA9BuB;AAgCvB;;;;WAED,iBAASo9B,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAKD,SAAS,CAACnmB,MAAV,KAAqB,IAA1B,EAAiC;AAEhClY,QAAAA,OAAO,CAACkD,KAAR,CAAe,uFAAf;AAEA;;AAEDkuF,MAAAA,WAAW,CAACa,kBAAZ,CAAgC,KAAK15E,WAArC;;AAEAi5E,MAAAA,gBAAgB,CAACpoF,IAAjB,CAAuBi1B,SAAS,CAACnmB,MAAV,CAAiBK,WAAxC;;AACA,WAAK6P,eAAL,CAAqBlkB,gBAArB,CAAuCm6B,SAAS,CAACnmB,MAAV,CAAiBE,kBAAxD,EAA4E,KAAKG,WAAjF;;AAEA84E,MAAAA,WAAW,CAAChoE,qBAAZ,CAAmC,KAAKjB,eAAxC;;AAEA,UAAKiW,SAAS,CAACnmB,MAAV,CAAiBuqB,mBAAjB,IAAwC,KAAK5W,QAAL,CAAckJ,eAAd,KAAkC,KAA/E,EAAuF;AAEtFq8D,QAAAA,WAAW,CAAC3vF,cAAZ,CAA4B,CAAE4vF,WAAW,CAAC1hF,CAA1C;AAEA;;AAED,UAAMjJ,QAAQ,GAAG,KAAKmlB,QAAL,CAAcnlB,QAA/B;AACA,UAAIpH,GAAJ,EAASD,GAAT;;AAEA,UAAKqH,QAAQ,KAAK,CAAlB,EAAsB;AAErBrH,QAAAA,GAAG,GAAG/D,IAAI,CAAC+D,GAAL,CAAUqH,QAAV,CAAN;AACApH,QAAAA,GAAG,GAAGhE,IAAI,CAACgE,GAAL,CAAUoH,QAAV,CAAN;AAEA;;AAED,UAAM9D,MAAM,GAAG,KAAKA,MAApB;AAEAsvF,MAAAA,eAAe,CAAET,GAAG,CAAC1xF,GAAJ,CAAS,CAAE,GAAX,EAAgB,CAAE,GAAlB,EAAuB,CAAvB,CAAF,EAA8BsxF,WAA9B,EAA2CzuF,MAA3C,EAAmDwuF,WAAnD,EAAgE9xF,GAAhE,EAAqED,GAArE,CAAf;AACA6yF,MAAAA,eAAe,CAAER,GAAG,CAAC3xF,GAAJ,CAAS,GAAT,EAAc,CAAE,GAAhB,EAAqB,CAArB,CAAF,EAA4BsxF,WAA5B,EAAyCzuF,MAAzC,EAAiDwuF,WAAjD,EAA8D9xF,GAA9D,EAAmED,GAAnE,CAAf;AACA6yF,MAAAA,eAAe,CAAEP,GAAG,CAAC5xF,GAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB,CAAF,EAA0BsxF,WAA1B,EAAuCzuF,MAAvC,EAA+CwuF,WAA/C,EAA4D9xF,GAA5D,EAAiED,GAAjE,CAAf;;AAEAuyF,MAAAA,IAAI,CAAC7xF,GAAL,CAAU,CAAV,EAAa,CAAb;;AACA8xF,MAAAA,IAAI,CAAC9xF,GAAL,CAAU,CAAV,EAAa,CAAb;;AACA+xF,MAAAA,IAAI,CAAC/xF,GAAL,CAAU,CAAV,EAAa,CAAb,EAvCgC,CAyChC;;;AACA,UAAIi/B,SAAS,GAAGX,SAAS,CAAC/e,GAAV,CAAc2f,iBAAd,CAAiCwyD,GAAjC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgD,KAAhD,EAAuDR,eAAvD,CAAhB;;AAEA,UAAKnyD,SAAS,KAAK,IAAnB,EAA0B;AAEzB;AACAkzD,QAAAA,eAAe,CAAER,GAAG,CAAC3xF,GAAJ,CAAS,CAAE,GAAX,EAAgB,GAAhB,EAAqB,CAArB,CAAF,EAA4BsxF,WAA5B,EAAyCzuF,MAAzC,EAAiDwuF,WAAjD,EAA8D9xF,GAA9D,EAAmED,GAAnE,CAAf;;AACAwyF,QAAAA,IAAI,CAAC9xF,GAAL,CAAU,CAAV,EAAa,CAAb;;AAEAi/B,QAAAA,SAAS,GAAGX,SAAS,CAAC/e,GAAV,CAAc2f,iBAAd,CAAiCwyD,GAAjC,EAAsCE,GAAtC,EAA2CD,GAA3C,EAAgD,KAAhD,EAAuDP,eAAvD,CAAZ;;AACA,YAAKnyD,SAAS,KAAK,IAAnB,EAA0B;AAEzB;AAEA;AAED;;AAED,UAAM7V,QAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiC+yE,eAAjC,CAAjB;AAEA,UAAKhoE,QAAQ,GAAGkV,SAAS,CAACvY,IAArB,IAA6BqD,QAAQ,GAAGkV,SAAS,CAACtY,GAAvD,EAA6D;AAE7DuY,MAAAA,UAAU,CAAC/jC,IAAX,CAAiB;AAEhB4uB,QAAAA,QAAQ,EAAEA,QAFM;AAGhBhO,QAAAA,KAAK,EAAEg2E,eAAe,CAACt/E,KAAhB,EAHS;AAIhBrC,QAAAA,EAAE,EAAEud,QAAQ,CAACU,KAAT,CAAgB0jE,eAAhB,EAAiCM,GAAjC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,IAAhD,EAAsDC,IAAtD,EAA4DC,IAA5D,EAAkE,IAAI7wF,OAAJ,EAAlE,CAJY;AAKhB69B,QAAAA,IAAI,EAAE,IALU;AAMhBhkB,QAAAA,MAAM,EAAE;AANQ,OAAjB;AAUA;;;WAED,cAAM9R,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,uEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,UAAKpjB,MAAM,CAACpG,MAAP,KAAkBxI,SAAvB,EAAmC,KAAKwI,MAAL,CAAYwG,IAAZ,CAAkBJ,MAAM,CAACpG,MAAzB;AAEnC,WAAKipB,QAAL,GAAgB7iB,MAAM,CAAC6iB,QAAvB;AAEA,aAAO,IAAP;AAEA;;;;EAzHmBnE,Q;;AA6HrB,SAASwqE,eAAT,CAA0BC,cAA1B,EAA0CC,UAA1C,EAAsDxvF,MAAtD,EAA8DiiB,KAA9D,EAAqEvlB,GAArE,EAA0ED,GAA1E,EAAgF;AAE/E;AACAiyF,EAAAA,gBAAgB,CAAC9vF,UAAjB,CAA6B2wF,cAA7B,EAA6CvvF,MAA7C,EAAsDyY,SAAtD,CAAiE,GAAjE,EAAuE4N,QAAvE,CAAiFpE,KAAjF,EAH+E,CAK/E;;;AACA,MAAKvlB,GAAG,KAAKlF,SAAb,EAAyB;AAExBm3F,IAAAA,gBAAgB,CAAC90F,CAAjB,GAAuB4C,GAAG,GAAGiyF,gBAAgB,CAAC70F,CAAzB,GAAiC6C,GAAG,GAAGgyF,gBAAgB,CAACv0F,CAA7E;AACAw0F,IAAAA,gBAAgB,CAACx0F,CAAjB,GAAuBuC,GAAG,GAAGgyF,gBAAgB,CAAC70F,CAAzB,GAAiC4C,GAAG,GAAGiyF,gBAAgB,CAACv0F,CAA7E;AAEA,GALD,MAKO;AAENw0F,IAAAA,gBAAgB,CAACnoF,IAAjB,CAAuBkoF,gBAAvB;AAEA;;AAGDa,EAAAA,cAAc,CAAC/oF,IAAf,CAAqBgpF,UAArB;AACAD,EAAAA,cAAc,CAAC11F,CAAf,IAAoB80F,gBAAgB,CAAC90F,CAArC;AACA01F,EAAAA,cAAc,CAACp1F,CAAf,IAAoBw0F,gBAAgB,CAACx0F,CAArC,CApB+E,CAsB/E;;AACAo1F,EAAAA,cAAc,CAACh6E,YAAf,CAA6Bq5E,gBAA7B;AAEA;;AAED,IAAMa,KAAK,GAAG,aAAc,IAAIl7E,OAAJ,EAA5B;;AACA,IAAMm7E,KAAK,GAAG,aAAc,IAAIn7E,OAAJ,EAA5B;;IAEMo7E,G;;;;;AAEL,iBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKC,aAAL,GAAqB,CAArB;AAEA,YAAKv4F,IAAL,GAAY,KAAZ;AAEA4G,IAAAA,MAAM,CAAConB,gBAAP,kCAA+B;AAC9BwsD,MAAAA,MAAM,EAAE;AACPtsD,QAAAA,UAAU,EAAE,IADL;AAEPjsB,QAAAA,KAAK,EAAE;AAFA,OADsB;AAK9BowF,MAAAA,KAAK,EAAE;AACNpwF,QAAAA,KAAK,EAAE;AADD;AALuB,KAA/B;AAUA,YAAKmrE,UAAL,GAAkB,IAAlB;AAlBa;AAoBb;;;;WAED,cAAMr+D,MAAN,EAAe;AAEd,oEAAYA,MAAZ,EAAoB,KAApB;;AAEA,UAAMyrE,MAAM,GAAGzrE,MAAM,CAACyrE,MAAtB;;AAEA,WAAM,IAAI15E,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy5E,MAAM,CAACx5E,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,YAAMk0F,KAAK,GAAGxa,MAAM,CAAE15E,CAAF,CAApB;AAEA,aAAK03F,QAAL,CAAexD,KAAK,CAACn0E,MAAN,CAAajJ,KAAb,EAAf,EAAqCo9E,KAAK,CAAC9lE,QAA3C;AAEA;;AAED,WAAKk+C,UAAL,GAAkBr+D,MAAM,CAACq+D,UAAzB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUvsD,MAAV,EAAiC;AAAA,UAAfqO,QAAe,uEAAJ,CAAI;AAEhCA,MAAAA,QAAQ,GAAG7tB,IAAI,CAACiC,GAAL,CAAU4rB,QAAV,CAAX;AAEA,UAAMsrD,MAAM,GAAG,KAAKA,MAApB;AAEA,UAAIz5E,CAAJ;;AAEA,WAAMA,CAAC,GAAG,CAAV,EAAaA,CAAC,GAAGy5E,MAAM,CAACx5E,MAAxB,EAAgCD,CAAC,EAAjC,EAAuC;AAEtC,YAAKmuB,QAAQ,GAAGsrD,MAAM,CAAEz5E,CAAF,CAAN,CAAYmuB,QAA5B,EAAuC;AAEtC;AAEA;AAED;;AAEDsrD,MAAAA,MAAM,CAAC/5E,MAAP,CAAeM,CAAf,EAAkB,CAAlB,EAAqB;AAAEmuB,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBrO,QAAAA,MAAM,EAAEA;AAA9B,OAArB;AAEA,WAAKD,GAAL,CAAUC,MAAV;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAO,KAAK03E,aAAZ;AAEA;;;WAED,8BAAsBrpE,QAAtB,EAAiC;AAEhC,UAAMsrD,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,CAACx5E,MAAP,GAAgB,CAArB,EAAyB;AAExB,YAAIF,CAAJ,EAAOC,CAAP;;AAEA,aAAMD,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGy5E,MAAM,CAACx5E,MAAxB,EAAgCF,CAAC,GAAGC,CAApC,EAAuCD,CAAC,EAAxC,EAA8C;AAE7C,cAAKouB,QAAQ,GAAGsrD,MAAM,CAAE15E,CAAF,CAAN,CAAYouB,QAA5B,EAAuC;AAEtC;AAEA;AAED;;AAED,eAAOsrD,MAAM,CAAE15E,CAAC,GAAG,CAAN,CAAN,CAAgB+f,MAAvB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAASujB,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAMm2C,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,CAACx5E,MAAP,GAAgB,CAArB,EAAyB;AAExBo3F,QAAAA,KAAK,CAAChpE,qBAAN,CAA6B,KAAK9Q,WAAlC;;AAEA,YAAM4Q,QAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiCi0E,KAAjC,CAAjB;AAEA,aAAKK,oBAAL,CAA2BvpE,QAA3B,EAAsCwpE,OAAtC,CAA+Ct0D,SAA/C,EAA0DC,UAA1D;AAEA;AAED;;;WAED,gBAAQpmB,MAAR,EAAiB;AAEhB,UAAMu8D,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,CAACx5E,MAAP,GAAgB,CAArB,EAAyB;AAExBo3F,QAAAA,KAAK,CAAChpE,qBAAN,CAA6BnR,MAAM,CAACK,WAApC;;AACA+5E,QAAAA,KAAK,CAACjpE,qBAAN,CAA6B,KAAK9Q,WAAlC;;AAEA,YAAM4Q,QAAQ,GAAGkpE,KAAK,CAACj0E,UAAN,CAAkBk0E,KAAlB,IAA4Bp6E,MAAM,CAACwqB,IAApD;AAEA+xC,QAAAA,MAAM,CAAE,CAAF,CAAN,CAAY35D,MAAZ,CAAmB0N,OAAnB,GAA6B,IAA7B;AAEA,YAAIztB,CAAJ,EAAOC,CAAP;;AAEA,aAAMD,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGy5E,MAAM,CAACx5E,MAAxB,EAAgCF,CAAC,GAAGC,CAApC,EAAuCD,CAAC,EAAxC,EAA8C;AAE7C,cAAKouB,QAAQ,IAAIsrD,MAAM,CAAE15E,CAAF,CAAN,CAAYouB,QAA7B,EAAwC;AAEvCsrD,YAAAA,MAAM,CAAE15E,CAAC,GAAG,CAAN,CAAN,CAAgB+f,MAAhB,CAAuB0N,OAAvB,GAAiC,KAAjC;AACAisD,YAAAA,MAAM,CAAE15E,CAAF,CAAN,CAAY+f,MAAZ,CAAmB0N,OAAnB,GAA6B,IAA7B;AAEA,WALD,MAKO;AAEN;AAEA;AAED;;AAED,aAAKgqE,aAAL,GAAqBz3F,CAAC,GAAG,CAAzB;;AAEA,eAAQA,CAAC,GAAGC,CAAZ,EAAeD,CAAC,EAAhB,EAAsB;AAErB05E,UAAAA,MAAM,CAAE15E,CAAF,CAAN,CAAY+f,MAAZ,CAAmB0N,OAAnB,GAA6B,KAA7B;AAEA;AAED;AAED;;;WAED,gBAAQhc,IAAR,EAAe;AAEd,UAAMJ,IAAI,mEAAiBI,IAAjB,CAAV;;AAEA,UAAK,KAAK66D,UAAL,KAAoB,KAAzB,EAAiCj7D,IAAI,CAAC0O,MAAL,CAAYusD,UAAZ,GAAyB,KAAzB;AAEjCj7D,MAAAA,IAAI,CAAC0O,MAAL,CAAY25D,MAAZ,GAAqB,EAArB;AAEA,UAAMA,MAAM,GAAG,KAAKA,MAApB;;AAEA,WAAM,IAAI15E,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGy5E,MAAM,CAACx5E,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,YAAMk0F,KAAK,GAAGxa,MAAM,CAAE15E,CAAF,CAApB;AAEAqR,QAAAA,IAAI,CAAC0O,MAAL,CAAY25D,MAAZ,CAAmBl6E,IAAnB,CAAyB;AACxBugB,UAAAA,MAAM,EAAEm0E,KAAK,CAACn0E,MAAN,CAAa/e,IADG;AAExBotB,UAAAA,QAAQ,EAAE8lE,KAAK,CAAC9lE;AAFQ,SAAzB;AAKA;;AAED,aAAO/c,IAAP;AAEA;;;;EAvLgBsb,Q;;AA2LlB,IAAMkrE,aAAa,GAAG,aAAc,IAAIz7E,OAAJ,EAApC;;AAEA,IAAM07E,UAAU,GAAG,aAAc,IAAInjF,OAAJ,EAAjC;;AACA,IAAMojF,WAAW,GAAG,aAAc,IAAIpjF,OAAJ,EAAlC;;AAEA,IAAMqjF,SAAS,GAAG,aAAc,IAAI57E,OAAJ,EAAhC;;AACA,IAAM67E,OAAO,GAAG,aAAc,IAAIpxE,OAAJ,EAA9B;;IAEMqxE,W;;;;;AAEL,uBAAa13E,QAAb,EAAuBsQ,QAAvB,EAAkC;AAAA;;AAAA;;AAEjC,kCAAOtQ,QAAP,EAAiBsQ,QAAjB;AAEA,YAAKJ,aAAL,GAAqB,IAArB;AAEA,YAAKxxB,IAAL,GAAY,aAAZ;AAEA,YAAKyxB,QAAL,GAAgB,UAAhB;AACA,YAAKC,UAAL,GAAkB,IAAI/J,OAAJ,EAAlB;AACA,YAAKsxE,iBAAL,GAAyB,IAAItxE,OAAJ,EAAzB;AAViC;AAYjC;;;;WAED,cAAM5Y,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,4EAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKV,QAAL,GAAgB1iB,MAAM,CAAC0iB,QAAvB;AACA,WAAKC,UAAL,CAAgBviB,IAAhB,CAAsBJ,MAAM,CAAC2iB,UAA7B;AACA,WAAKunE,iBAAL,CAAuB9pF,IAAvB,CAA6BJ,MAAM,CAACkqF,iBAApC;AAEA,WAAKtnE,QAAL,GAAgB5iB,MAAM,CAAC4iB,QAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMA,QAAN,EAAgBD,UAAhB,EAA6B;AAE5B,WAAKC,QAAL,GAAgBA,QAAhB;;AAEA,UAAKD,UAAU,KAAKvxB,SAApB,EAAgC;AAE/B,aAAK8vB,iBAAL,CAAwB,IAAxB;AAEA,aAAK0B,QAAL,CAAcunE,iBAAd;AAEAxnE,QAAAA,UAAU,GAAG,KAAKpT,WAAlB;AAEA;;AAED,WAAKoT,UAAL,CAAgBviB,IAAhB,CAAsBuiB,UAAtB;AACA,WAAKunE,iBAAL,CAAuB9pF,IAAvB,CAA6BuiB,UAA7B,EAA0CxlB,MAA1C;AAEA;;;WAED,gBAAO;AAEN,WAAKylB,QAAL,CAAcyxD,IAAd;AAEA;;;WAED,gCAAuB;AAEtB,UAAMjiE,MAAM,GAAG,IAAI1L,OAAJ,EAAf;AAEA,UAAM0jF,UAAU,GAAG,KAAK73E,QAAL,CAAcC,UAAd,CAAyB43E,UAA5C;;AAEA,WAAM,IAAIr4F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGo4F,UAAU,CAAC3gF,KAAhC,EAAuC1X,CAAC,GAAGC,CAA3C,EAA8CD,CAAC,EAA/C,EAAqD;AAEpDqgB,QAAAA,MAAM,CAACM,mBAAP,CAA4B03E,UAA5B,EAAwCr4F,CAAxC;AAEA,YAAM8pB,KAAK,GAAG,MAAMzJ,MAAM,CAACi4E,eAAP,EAApB;;AAEA,YAAKxuE,KAAK,KAAK7K,QAAf,EAA0B;AAEzBoB,UAAAA,MAAM,CAAC3Z,cAAP,CAAuBojB,KAAvB;AAEA,SAJD,MAIO;AAENzJ,UAAAA,MAAM,CAACrb,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAFM,CAEoB;AAE1B;;AAEDqzF,QAAAA,UAAU,CAACE,OAAX,CAAoBv4F,CAApB,EAAuBqgB,MAAM,CAAC3e,CAA9B,EAAiC2e,MAAM,CAACre,CAAxC,EAA2Cqe,MAAM,CAACzL,CAAlD,EAAqDyL,MAAM,CAAC9Z,CAA5D;AAEA;AAED;;;WAED,2BAAmB2oB,KAAnB,EAA2B;AAE1B,yFAAyBA,KAAzB;;AAEA,UAAK,KAAKyB,QAAL,KAAkB,UAAvB,EAAoC;AAEnC,aAAKwnE,iBAAL,CAAuB9pF,IAAvB,CAA6B,KAAKmP,WAAlC,EAAgDpS,MAAhD;AAEA,OAJD,MAIO,IAAK,KAAKulB,QAAL,KAAkB,UAAvB,EAAoC;AAE1C,aAAKwnE,iBAAL,CAAuB9pF,IAAvB,CAA6B,KAAKuiB,UAAlC,EAA+CxlB,MAA/C;AAEA,OAJM,MAIA;AAENnG,QAAAA,OAAO,CAACC,IAAR,CAAc,+CAA+C,KAAKyrB,QAAlE;AAEA;AAED;;;WAED,uBAAejxB,KAAf,EAAsBG,MAAtB,EAA+B;AAE9B,UAAMgxB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMrQ,QAAQ,GAAG,KAAKA,QAAtB;;AAEAs3E,MAAAA,UAAU,CAACn3E,mBAAX,CAAgCH,QAAQ,CAACC,UAAT,CAAoB+3E,SAApD,EAA+D94F,KAA/D;;AACAq4F,MAAAA,WAAW,CAACp3E,mBAAZ,CAAiCH,QAAQ,CAACC,UAAT,CAAoB43E,UAArD,EAAiE34F,KAAjE;;AAEAm4F,MAAAA,aAAa,CAACxpF,IAAd,CAAoBxO,MAApB,EAA6Bud,YAA7B,CAA2C,KAAKwT,UAAhD;;AAEA/wB,MAAAA,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB;;AAEA,WAAM,IAAIhF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAMwtD,MAAM,GAAGuqC,WAAW,CAACU,YAAZ,CAA0Bz4F,CAA1B,CAAf;;AAEA,YAAKwtD,MAAM,KAAK,CAAhB,EAAoB;AAEnB,cAAMkrC,SAAS,GAAGZ,UAAU,CAACW,YAAX,CAAyBz4F,CAAzB,CAAlB;;AAEAi4F,UAAAA,OAAO,CAAC9uF,gBAAR,CAA0B0nB,QAAQ,CAAC8nE,KAAT,CAAgBD,SAAhB,EAA4Bl7E,WAAtD,EAAmEqT,QAAQ,CAAC+nE,YAAT,CAAuBF,SAAvB,CAAnE;;AAEA74F,UAAAA,MAAM,CAACmzB,eAAP,CAAwBglE,SAAS,CAAC3pF,IAAV,CAAgBwpF,aAAhB,EAAgCz6E,YAAhC,CAA8C66E,OAA9C,CAAxB,EAAiFzqC,MAAjF;AAEA;AAED;;AAED,aAAO3tD,MAAM,CAACud,YAAP,CAAqB,KAAK+6E,iBAA1B,CAAP;AAEA;;;;EArIwBn1D,I;;IAyIpB61D,I;;;;;AAEL,kBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKC,MAAL,GAAc,IAAd;AAEA,YAAK55F,IAAL,GAAY,MAAZ;AANa;AAQb;;;EAViBytB,Q;;IAcbosE,W;;;;;AAEL,yBAAmK;AAAA;;AAAA,QAAtJ1nF,IAAsJ,uEAA/I,IAA+I;AAAA,QAAzIZ,KAAyI,uEAAjI,CAAiI;AAAA,QAA9HC,MAA8H,uEAArH,CAAqH;AAAA,QAAlHmC,MAAkH;AAAA,QAA1G3T,IAA0G;AAAA,QAApGqT,OAAoG;AAAA,QAA3FE,KAA2F;AAAA,QAApFC,KAAoF;AAAA,QAA7EC,SAA6E,uEAAjExa,aAAiE;AAAA,QAAlDya,SAAkD,uEAAtCza,aAAsC;AAAA,QAAvB2a,UAAuB;AAAA,QAAXC,QAAW;;AAAA;;AAElK,kCAAO,IAAP,EAAaR,OAAb,EAAsBE,KAAtB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DC,MAA1D,EAAkE3T,IAAlE,EAAwE4T,UAAxE,EAAoFC,QAApF;AAEA,YAAKf,aAAL,GAAqB,IAArB;AAEA,YAAK5B,KAAL,GAAa;AAAEiB,MAAAA,IAAI,EAAEA,IAAR;AAAcZ,MAAAA,KAAK,EAAEA,KAArB;AAA4BC,MAAAA,MAAM,EAAEA;AAApC,KAAb;AAEA,YAAK4C,eAAL,GAAuB,KAAvB;AACA,YAAKE,KAAL,GAAa,KAAb;AACA,YAAKC,eAAL,GAAuB,CAAvB;AAVkK;AAYlK;;;EAdwBpB,O;;AAkB1B,IAAM2mF,aAAa,GAAG,aAAc,IAAInyE,OAAJ,EAApC;;AACA,IAAMoyE,eAAe,GAAG,aAAc,IAAIpyE,OAAJ,EAAtC;;IAEMqyE,Q;AAEL,sBAA6C;AAAA,QAAhCP,KAAgC,uEAAxB,EAAwB;AAAA,QAApBC,YAAoB,uEAAL,EAAK;;AAAA;;AAE5C,SAAK53F,IAAL,GAAYN,YAAY,EAAxB;AAEA,SAAKi4F,KAAL,GAAaA,KAAK,CAAC54F,KAAN,CAAa,CAAb,CAAb;AACA,SAAK64F,YAAL,GAAoBA,YAApB;AACA,SAAKO,YAAL,GAAoB,IAApB;AAEA,SAAKnG,WAAL,GAAmB,IAAnB;AACA,SAAKE,eAAL,GAAuB,CAAvB;AAEA,SAAK1lD,KAAL,GAAa,CAAE,CAAf;AAEA,SAAKyZ,IAAL;AAEA;;;;WAED,gBAAO;AAEN,UAAM0xC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,YAAY,GAAG,KAAKA,YAA1B;AAEA,WAAKO,YAAL,GAAoB,IAAI9zF,YAAJ,CAAkBszF,KAAK,CAACz4F,MAAN,GAAe,EAAjC,CAApB,CALM,CAON;;AAEA,UAAK04F,YAAY,CAAC14F,MAAb,KAAwB,CAA7B,EAAiC;AAEhC,aAAKk4F,iBAAL;AAEA,OAJD,MAIO;AAEN;AAEA,YAAKO,KAAK,CAACz4F,MAAN,KAAiB04F,YAAY,CAAC14F,MAAnC,EAA4C;AAE3C+E,UAAAA,OAAO,CAACC,IAAR,CAAc,iFAAd;AAEA,eAAK0zF,YAAL,GAAoB,EAApB;;AAEA,eAAM,IAAI54F,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG,KAAK+gF,KAAL,CAAWz4F,MAAjC,EAAyCF,CAAC,GAAG4X,EAA7C,EAAiD5X,CAAC,EAAlD,EAAwD;AAEvD,iBAAK44F,YAAL,CAAkBp5F,IAAlB,CAAwB,IAAIqnB,OAAJ,EAAxB;AAEA;AAED;AAED;AAED;;;WAED,6BAAoB;AAEnB,WAAK+xE,YAAL,CAAkB14F,MAAlB,GAA2B,CAA3B;;AAEA,WAAM,IAAIF,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG,KAAK+gF,KAAL,CAAWz4F,MAAjC,EAAyCF,CAAC,GAAG4X,EAA7C,EAAiD5X,CAAC,EAAlD,EAAwD;AAEvD,YAAMo5F,OAAO,GAAG,IAAIvyE,OAAJ,EAAhB;;AAEA,YAAK,KAAK8xE,KAAL,CAAY34F,CAAZ,CAAL,EAAuB;AAEtBo5F,UAAAA,OAAO,CAAC/qF,IAAR,CAAc,KAAKsqF,KAAL,CAAY34F,CAAZ,EAAgBwd,WAA9B,EAA4CpS,MAA5C;AAEA;;AAED,aAAKwtF,YAAL,CAAkBp5F,IAAlB,CAAwB45F,OAAxB;AAEA;AAED;;;WAED,gBAAO;AAEN;AAEA,WAAM,IAAIp5F,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG,KAAK+gF,KAAL,CAAWz4F,MAAjC,EAAyCF,CAAC,GAAG4X,EAA7C,EAAiD5X,CAAC,EAAlD,EAAwD;AAEvD,YAAMq5F,IAAI,GAAG,KAAKV,KAAL,CAAY34F,CAAZ,CAAb;;AAEA,YAAKq5F,IAAL,EAAY;AAEXA,UAAAA,IAAI,CAAC77E,WAAL,CAAiBnP,IAAjB,CAAuB,KAAKuqF,YAAL,CAAmB54F,CAAnB,CAAvB,EAAgDoL,MAAhD;AAEA;AAED,OAdK,CAgBN;;;AAEA,WAAM,IAAIpL,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAG,KAAK+gF,KAAL,CAAWz4F,MAAjC,EAAyCF,IAAC,GAAG4X,KAA7C,EAAiD5X,IAAC,EAAlD,EAAwD;AAEvD,YAAMq5F,KAAI,GAAG,KAAKV,KAAL,CAAY34F,IAAZ,CAAb;;AAEA,YAAKq5F,KAAL,EAAY;AAEX,cAAKA,KAAI,CAACxsE,MAAL,IAAewsE,KAAI,CAACxsE,MAAL,CAAYisE,MAAhC,EAAyC;AAExCO,YAAAA,KAAI,CAACttF,MAAL,CAAYsC,IAAZ,CAAkBgrF,KAAI,CAACxsE,MAAL,CAAYrP,WAA9B,EAA4CpS,MAA5C;;AACAiuF,YAAAA,KAAI,CAACttF,MAAL,CAAYmiB,QAAZ,CAAsBmrE,KAAI,CAAC77E,WAA3B;AAEA,WALD,MAKO;AAEN67E,YAAAA,KAAI,CAACttF,MAAL,CAAYsC,IAAZ,CAAkBgrF,KAAI,CAAC77E,WAAvB;AAEA;;AAED67E,UAAAA,KAAI,CAACttF,MAAL,CAAYkiB,SAAZ,CAAuBorE,KAAI,CAAC34E,QAA5B,EAAsC24E,KAAI,CAACjhF,UAA3C,EAAuDihF,KAAI,CAACvvE,KAA5D;AAEA;AAED;AAED;;;WAED,kBAAS;AAER,UAAM6uE,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,YAAY,GAAG,KAAKA,YAA1B;AACA,UAAMO,YAAY,GAAG,KAAKA,YAA1B;AACA,UAAMnG,WAAW,GAAG,KAAKA,WAAzB,CALQ,CAOR;;AAEA,WAAM,IAAIhzF,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG+gF,KAAK,CAACz4F,MAA5B,EAAoCF,CAAC,GAAG4X,EAAxC,EAA4C5X,CAAC,EAA7C,EAAmD;AAElD;AAEA,YAAM+L,MAAM,GAAG4sF,KAAK,CAAE34F,CAAF,CAAL,GAAa24F,KAAK,CAAE34F,CAAF,CAAL,CAAWwd,WAAxB,GAAsCy7E,eAArD;;AAEAD,QAAAA,aAAa,CAAC7vF,gBAAd,CAAgC4C,MAAhC,EAAwC6sF,YAAY,CAAE54F,CAAF,CAApD;;AACAg5F,QAAAA,aAAa,CAACrpE,OAAd,CAAuBwpE,YAAvB,EAAqCn5F,CAAC,GAAG,EAAzC;AAEA;;AAED,UAAKgzF,WAAW,KAAK,IAArB,EAA4B;AAE3BA,QAAAA,WAAW,CAAC9+E,WAAZ,GAA0B,IAA1B;AAEA;AAED;;;WAED,iBAAQ;AAEP,aAAO,IAAIglF,QAAJ,CAAc,KAAKP,KAAnB,EAA0B,KAAKC,YAA/B,CAAP;AAEA;;;WAED,8BAAqB;AAEpB;AACA;AACA;AACA;AACA;AACA;AAEA,UAAI3pF,IAAI,GAAG1O,IAAI,CAACyG,IAAL,CAAW,KAAK2xF,KAAL,CAAWz4F,MAAX,GAAoB,CAA/B,CAAX,CAToB,CAS2B;;AAC/C+O,MAAAA,IAAI,GAAGvL,cAAc,CAAEuL,IAAF,CAArB;AACAA,MAAAA,IAAI,GAAG1O,IAAI,CAACc,GAAL,CAAU4N,IAAV,EAAgB,CAAhB,CAAP;AAEA,UAAMkqF,YAAY,GAAG,IAAI9zF,YAAJ,CAAkB4J,IAAI,GAAGA,IAAP,GAAc,CAAhC,CAArB,CAboB,CAasC;;AAC1DkqF,MAAAA,YAAY,CAACn0F,GAAb,CAAkB,KAAKm0F,YAAvB,EAdoB,CAcmB;;AAEvC,UAAMnG,WAAW,GAAG,IAAI+F,WAAJ,CAAiBI,YAAjB,EAA+BlqF,IAA/B,EAAqCA,IAArC,EAA2CvV,UAA3C,EAAuDP,SAAvD,CAApB;AACA65F,MAAAA,WAAW,CAAC9+E,WAAZ,GAA0B,IAA1B;AAEA,WAAKilF,YAAL,GAAoBA,YAApB;AACA,WAAKnG,WAAL,GAAmBA,WAAnB;AACA,WAAKE,eAAL,GAAuBjkF,IAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAevC,IAAf,EAAsB;AAErB,WAAM,IAAI1M,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG,KAAK+gF,KAAL,CAAWz4F,MAAjC,EAAyCF,CAAC,GAAG4X,EAA7C,EAAiD5X,CAAC,EAAlD,EAAwD;AAEvD,YAAMq5F,IAAI,GAAG,KAAKV,KAAL,CAAY34F,CAAZ,CAAb;;AAEA,YAAKq5F,IAAI,CAAC3sF,IAAL,KAAcA,IAAnB,EAA0B;AAEzB,iBAAO2sF,IAAP;AAEA;AAED;;AAED,aAAOh6F,SAAP;AAEA;;;WAED,mBAAW;AAEV,UAAK,KAAK2zF,WAAL,KAAqB,IAA1B,EAAiC;AAEhC,aAAKA,WAAL,CAAiBn8E,OAAjB;AAEA,aAAKm8E,WAAL,GAAmB,IAAnB;AAEA;AAED;;;WAED,kBAAUsG,IAAV,EAAgBX,KAAhB,EAAwB;AAEvB,WAAK33F,IAAL,GAAYs4F,IAAI,CAACt4F,IAAjB;;AAEA,WAAM,IAAIhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACX,KAAL,CAAWz4F,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,YAAMgB,IAAI,GAAGs4F,IAAI,CAACX,KAAL,CAAY34F,CAAZ,CAAb;AACA,YAAIq5F,IAAI,GAAGV,KAAK,CAAE33F,IAAF,CAAhB;;AAEA,YAAKq4F,IAAI,KAAKh6F,SAAd,EAA0B;AAEzB4F,UAAAA,OAAO,CAACC,IAAR,CAAc,0CAAd,EAA0DlE,IAA1D;AACAq4F,UAAAA,IAAI,GAAG,IAAIR,IAAJ,EAAP;AAEA;;AAED,aAAKF,KAAL,CAAWn5F,IAAX,CAAiB65F,IAAjB;AACA,aAAKT,YAAL,CAAkBp5F,IAAlB,CAAwB,IAAIqnB,OAAJ,GAAc7a,SAAd,CAAyBstF,IAAI,CAACV,YAAL,CAAmB54F,CAAnB,CAAzB,CAAxB;AAEA;;AAED,WAAKinD,IAAL;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM51C,IAAI,GAAG;AACZ+C,QAAAA,QAAQ,EAAE;AACT5C,UAAAA,OAAO,EAAE,GADA;AAETtS,UAAAA,IAAI,EAAE,UAFG;AAGTmV,UAAAA,SAAS,EAAE;AAHF,SADE;AAMZskF,QAAAA,KAAK,EAAE,EANK;AAOZC,QAAAA,YAAY,EAAE;AAPF,OAAb;AAUAvnF,MAAAA,IAAI,CAACrQ,IAAL,GAAY,KAAKA,IAAjB;AAEA,UAAM23F,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,YAAY,GAAG,KAAKA,YAA1B;;AAEA,WAAM,IAAI54F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG04F,KAAK,CAACz4F,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhD,YAAMq5F,IAAI,GAAGV,KAAK,CAAE34F,CAAF,CAAlB;AACAqR,QAAAA,IAAI,CAACsnF,KAAL,CAAWn5F,IAAX,CAAiB65F,IAAI,CAACr4F,IAAtB;AAEA,YAAMu4F,WAAW,GAAGX,YAAY,CAAE54F,CAAF,CAAhC;AACAqR,QAAAA,IAAI,CAACunF,YAAL,CAAkBp5F,IAAlB,CAAwB+5F,WAAW,CAAC5pE,OAAZ,EAAxB;AAEA;;AAED,aAAOte,IAAP;AAEA;;;;;;IAIImoF,wB;;;;;AAEL,oCAAa15F,KAAb,EAAoBo7B,QAApB,EAA8BlrB,UAA9B,EAAiE;AAAA;;AAAA,QAAvBozC,gBAAuB,uEAAJ,CAAI;;AAAA;;AAEhE,QAAK,OAAOpzC,UAAP,KAAsB,QAA3B,EAAsC;AAErCozC,MAAAA,gBAAgB,GAAGpzC,UAAnB;AAEAA,MAAAA,UAAU,GAAG,KAAb;AAEA/K,MAAAA,OAAO,CAACkD,KAAR,CAAe,+FAAf;AAEA;;AAED,kCAAOrI,KAAP,EAAco7B,QAAd,EAAwBlrB,UAAxB;AAEA,YAAK+zC,0BAAL,GAAkC,IAAlC;AAEA,YAAKX,gBAAL,GAAwBA,gBAAxB;AAhBgE;AAkBhE;;;;WAED,cAAMn1C,MAAN,EAAe;AAEd,yFAAYA,MAAZ;;AAEA,WAAKm1C,gBAAL,GAAwBn1C,MAAM,CAACm1C,gBAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM/xC,IAAI,uFAAV;;AAEAA,MAAAA,IAAI,CAAC+xC,gBAAL,GAAwB,KAAKA,gBAA7B;AAEA/xC,MAAAA,IAAI,CAAC0yC,0BAAL,GAAkC,IAAlC;AAEA,aAAO1yC,IAAP;AAEA;;;;EA1CqC4pB,e;;AA8CvC,IAAMw+D,oBAAoB,GAAG,aAAc,IAAI5yE,OAAJ,EAA3C;;AACA,IAAM6yE,oBAAoB,GAAG,aAAc,IAAI7yE,OAAJ,EAA3C;;AAEA,IAAM8yE,mBAAmB,GAAG,EAA5B;;AAEA,IAAMC,KAAK,GAAG,aAAc,IAAI52D,IAAJ,EAA5B;;IAEM62D,a;;;;;AAEL,yBAAar5E,QAAb,EAAuBsQ,QAAvB,EAAiCpZ,KAAjC,EAAyC;AAAA;;AAAA;;AAExC,kCAAO8I,QAAP,EAAiBsQ,QAAjB;AAEA,YAAKlB,eAAL,GAAuB,IAAvB;AAEA,YAAKC,cAAL,GAAsB,IAAI2pE,wBAAJ,CAA8B,IAAIn0F,YAAJ,CAAkBqS,KAAK,GAAG,EAA1B,CAA9B,EAA8D,EAA9D,CAAtB;AACA,YAAKoY,aAAL,GAAqB,IAArB;AAEA,YAAKpY,KAAL,GAAaA,KAAb;AAEA,YAAKkW,aAAL,GAAqB,KAArB;AAXwC;AAaxC;;;;WAED,cAAM3f,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,8EAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKxB,cAAL,CAAoBxhB,IAApB,CAA0BJ,MAAM,CAAC4hB,cAAjC;AAEA,UAAK5hB,MAAM,CAAC6hB,aAAP,KAAyB,IAA9B,EAAqC,KAAKA,aAAL,GAAqB7hB,MAAM,CAAC6hB,aAAP,CAAqBhZ,KAArB,EAArB;AAErC,WAAKY,KAAL,GAAazJ,MAAM,CAACyJ,KAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYhY,KAAZ,EAAmB0N,KAAnB,EAA2B;AAE1BA,MAAAA,KAAK,CAACpB,SAAN,CAAiB,KAAK8jB,aAAL,CAAmBhwB,KAApC,EAA2CJ,KAAK,GAAG,CAAnD;AAEA;;;WAED,qBAAaA,KAAb,EAAoBqM,MAApB,EAA6B;AAE5BA,MAAAA,MAAM,CAACC,SAAP,CAAkB,KAAK6jB,cAAL,CAAoB/vB,KAAtC,EAA6CJ,KAAK,GAAG,EAArD;AAEA;;;WAED,iBAAS4jC,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAM/lB,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAMs8E,YAAY,GAAG,KAAKpiF,KAA1B;AAEAkiF,MAAAA,KAAK,CAACp5E,QAAN,GAAiB,KAAKA,QAAtB;AACAo5E,MAAAA,KAAK,CAAC9oE,QAAN,GAAiB,KAAKA,QAAtB;AAEA,UAAK8oE,KAAK,CAAC9oE,QAAN,KAAmBzxB,SAAxB,EAAoC;;AAEpC,WAAM,IAAI06F,UAAU,GAAG,CAAvB,EAA0BA,UAAU,GAAGD,YAAvC,EAAqDC,UAAU,EAA/D,EAAqE;AAEpE;AAEA,aAAKC,WAAL,CAAkBD,UAAlB,EAA8BN,oBAA9B;;AAEAC,QAAAA,oBAAoB,CAACvwF,gBAArB,CAAuCqU,WAAvC,EAAoDi8E,oBAApD,EANoE,CAQpE;;;AAEAG,QAAAA,KAAK,CAACp8E,WAAN,GAAoBk8E,oBAApB;;AAEAE,QAAAA,KAAK,CAAChC,OAAN,CAAet0D,SAAf,EAA0Bq2D,mBAA1B,EAZoE,CAcpE;;;AAEA,aAAM,IAAI35F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG05F,mBAAmB,CAACz5F,MAAzC,EAAiDF,CAAC,GAAGC,CAArD,EAAwDD,CAAC,EAAzD,EAA+D;AAE9D,cAAMikC,SAAS,GAAG01D,mBAAmB,CAAE35F,CAAF,CAArC;AACAikC,UAAAA,SAAS,CAAC81D,UAAV,GAAuBA,UAAvB;AACA91D,UAAAA,SAAS,CAAClkB,MAAV,GAAmB,IAAnB;AACAwjB,UAAAA,UAAU,CAAC/jC,IAAX,CAAiBykC,SAAjB;AAEA;;AAED01D,QAAAA,mBAAmB,CAACz5F,MAApB,GAA6B,CAA7B;AAEA;AAED;;;WAED,oBAAYR,KAAZ,EAAmB0N,KAAnB,EAA2B;AAE1B,UAAK,KAAK0iB,aAAL,KAAuB,IAA5B,EAAmC;AAElC,aAAKA,aAAL,GAAqB,IAAI0pE,wBAAJ,CAA8B,IAAIn0F,YAAJ,CAAkB,KAAKwqB,cAAL,CAAoBnY,KAApB,GAA4B,CAA9C,CAA9B,EAAiF,CAAjF,CAArB;AAEA;;AAEDtK,MAAAA,KAAK,CAACuiB,OAAN,CAAe,KAAKG,aAAL,CAAmBhwB,KAAlC,EAAyCJ,KAAK,GAAG,CAAjD;AAEA;;;WAED,qBAAaA,KAAb,EAAoBqM,MAApB,EAA6B;AAE5BA,MAAAA,MAAM,CAAC4jB,OAAP,CAAgB,KAAKE,cAAL,CAAoB/vB,KAApC,EAA2CJ,KAAK,GAAG,EAAnD;AAEA;;;WAED,8BAAqB,CAEpB;;;WAED,mBAAU;AAET,WAAK8U,aAAL,CAAoB;AAAEtV,QAAAA,IAAI,EAAE;AAAR,OAApB;AAEA;;;;EA9G0B8jC,I;;IAkHtB4gC,iB;;;;;AAEL,6BAAapzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKk5D,mBAAL,GAA2B,IAA3B;AAEA,YAAKxqF,IAAL,GAAY,mBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb;AAEA,YAAK+rB,SAAL,GAAiB,CAAjB;AACA,YAAKggE,OAAL,GAAe,OAAf;AACA,YAAKC,QAAL,GAAgB,OAAhB;AAEA,YAAKz/D,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAhByB;AAkBzB;;;;WAGD,cAAMviB,MAAN,EAAe;AAEd,kFAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK6sB,SAAL,GAAiBhsB,MAAM,CAACgsB,SAAxB;AACA,WAAKggE,OAAL,GAAehsF,MAAM,CAACgsF,OAAtB;AACA,WAAKC,QAAL,GAAgBjsF,MAAM,CAACisF,QAAvB;AAEA,WAAKz/D,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EArC8B1G,Q;;AAyChC,IAAMomE,QAAQ,GAAG,aAAc,IAAI/9E,OAAJ,EAA/B;;AACA,IAAMg+E,MAAM,GAAG,aAAc,IAAIh+E,OAAJ,EAA7B;;AACA,IAAMi+E,gBAAgB,GAAG,aAAc,IAAIxzE,OAAJ,EAAvC;;AACA,IAAMyzE,MAAM,GAAG,aAAc,IAAIl2E,GAAJ,EAA7B;;AACA,IAAMm2E,SAAS,GAAG,aAAc,IAAIr3E,MAAJ,EAAhC;;IAEMs3E,I;;;;;AAEL,kBAAmF;AAAA;;AAAA,QAAtEh6E,QAAsE,uEAA3D,IAAIyc,cAAJ,EAA2D;AAAA,QAArCnM,QAAqC,uEAA1B,IAAI8yC,iBAAJ,EAA0B;;AAAA;;AAElF;AAEA,YAAKtzC,MAAL,GAAc,IAAd;AAEA,YAAKpxB,IAAL,GAAY,MAAZ;AAEA,YAAKshB,QAAL,GAAgBA,QAAhB;AACA,YAAKsQ,QAAL,GAAgBA,QAAhB;;AAEA,YAAKmS,kBAAL;;AAXkF;AAalF;;;;WAED,cAAMh1B,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,qEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKP,QAAL,GAAgB7iB,MAAM,CAAC6iB,QAAvB;AACA,WAAKtQ,QAAL,GAAgBvS,MAAM,CAACuS,QAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,gCAAuB;AAEtB,UAAMA,QAAQ,GAAG,KAAKA,QAAtB,CAFsB,CAItB;;AAEA,UAAKA,QAAQ,CAAC9gB,KAAT,KAAmB,IAAxB,EAA+B;AAE9B,YAAMygC,iBAAiB,GAAG3f,QAAQ,CAACC,UAAT,CAAoBC,QAA9C;AACA,YAAM+5E,aAAa,GAAG,CAAE,CAAF,CAAtB;;AAEA,aAAM,IAAIz6F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGkgC,iBAAiB,CAACzoB,KAAvC,EAA8C1X,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA4D;AAE3Dm6F,UAAAA,QAAQ,CAACx5E,mBAAT,CAA8Bwf,iBAA9B,EAAiDngC,CAAC,GAAG,CAArD;;AACAo6F,UAAAA,MAAM,CAACz5E,mBAAP,CAA4Bwf,iBAA5B,EAA+CngC,CAA/C;;AAEAy6F,UAAAA,aAAa,CAAEz6F,CAAF,CAAb,GAAqBy6F,aAAa,CAAEz6F,CAAC,GAAG,CAAN,CAAlC;AACAy6F,UAAAA,aAAa,CAAEz6F,CAAF,CAAb,IAAsBm6F,QAAQ,CAAC92E,UAAT,CAAqB+2E,MAArB,CAAtB;AAEA;;AAED55E,QAAAA,QAAQ,CAAC4d,YAAT,CAAuB,cAAvB,EAAuC,IAAI5B,sBAAJ,CAA4Bi+D,aAA5B,EAA2C,CAA3C,CAAvC;AAEA,OAjBD,MAiBO;AAENx1F,QAAAA,OAAO,CAACC,IAAR,CAAc,+FAAd;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAASo+B,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAM/iB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMhD,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAMokE,SAAS,GAAGt+C,SAAS,CAACgoB,MAAV,CAAiBkvC,IAAjB,CAAsB5Y,SAAxC;AACA,UAAMrkD,SAAS,GAAG/c,QAAQ,CAAC+c,SAA3B,CALgC,CAOhC;;AAEA,UAAK/c,QAAQ,CAAC8c,cAAT,KAA4B,IAAjC,EAAwC9c,QAAQ,CAACod,qBAAT;;AAExC28D,MAAAA,SAAS,CAAClsF,IAAV,CAAgBmS,QAAQ,CAAC8c,cAAzB;;AACAi9D,MAAAA,SAAS,CAACn9E,YAAV,CAAwBI,WAAxB;;AACA+8E,MAAAA,SAAS,CAAC97E,MAAV,IAAoBmjE,SAApB;AAEA,UAAKt+C,SAAS,CAAC/e,GAAV,CAAchB,gBAAd,CAAgCg3E,SAAhC,MAAgD,KAArD,EAA6D,OAf7B,CAiBhC;;AAEAF,MAAAA,gBAAgB,CAAChsF,IAAjB,CAAuBmP,WAAvB,EAAqCpS,MAArC;;AACAkvF,MAAAA,MAAM,CAACjsF,IAAP,CAAai1B,SAAS,CAAC/e,GAAvB,EAA6BnH,YAA7B,CAA2Ci9E,gBAA3C;;AAEA,UAAMK,cAAc,GAAG9Y,SAAS,IAAK,CAAE,KAAK93D,KAAL,CAAWpoB,CAAX,GAAe,KAAKooB,KAAL,CAAW9nB,CAA1B,GAA8B,KAAK8nB,KAAL,CAAWlV,CAA3C,IAAiD,CAAtD,CAAhC;AACA,UAAM+lF,gBAAgB,GAAGD,cAAc,GAAGA,cAA1C;AAEA,UAAME,MAAM,GAAG,IAAIx+E,OAAJ,EAAf;AACA,UAAMy+E,IAAI,GAAG,IAAIz+E,OAAJ,EAAb;AACA,UAAM0+E,YAAY,GAAG,IAAI1+E,OAAJ,EAArB;AACA,UAAM2+E,QAAQ,GAAG,IAAI3+E,OAAJ,EAAjB;AACA,UAAM/C,IAAI,GAAG,KAAKu3E,cAAL,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,UAAMlxF,KAAK,GAAG8gB,QAAQ,CAAC9gB,KAAvB;AACA,UAAM+gB,UAAU,GAAGD,QAAQ,CAACC,UAA5B;AACA,UAAM0f,iBAAiB,GAAG1f,UAAU,CAACC,QAArC;;AAEA,UAAKhhB,KAAK,KAAK,IAAf,EAAsB;AAErB,YAAM89B,KAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;AACA,YAAMoG,GAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU1B,KAAK,CAACgY,KAAhB,EAAyB6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAArD,CAAZ;;AAEA,aAAM,IAAI1X,CAAC,GAAGw9B,KAAR,EAAev9B,CAAC,GAAG2jC,GAAG,GAAG,CAA/B,EAAkC5jC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,IAAIqZ,IAA9C,EAAqD;AAEpD,cAAMnV,CAAC,GAAGxE,KAAK,CAACiI,IAAN,CAAY3H,CAAZ,CAAV;AACA,cAAMmE,CAAC,GAAGzE,KAAK,CAACiI,IAAN,CAAY3H,CAAC,GAAG,CAAhB,CAAV;AAEA46F,UAAAA,MAAM,CAACj6E,mBAAP,CAA4Bwf,iBAA5B,EAA+Cj8B,CAA/C;AACA22F,UAAAA,IAAI,CAACl6E,mBAAL,CAA0Bwf,iBAA1B,EAA6Ch8B,CAA7C;;AAEA,cAAM62F,MAAM,GAAGV,MAAM,CAACW,mBAAP,CAA4BL,MAA5B,EAAoCC,IAApC,EAA0CE,QAA1C,EAAoDD,YAApD,CAAf;;AAEA,cAAKE,MAAM,GAAGL,gBAAd,EAAiC;AAEjCI,UAAAA,QAAQ,CAAC39E,YAAT,CAAuB,KAAKI,WAA5B,EAZoD,CAYT;;AAE3C,cAAM4Q,QAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiC03E,QAAjC,CAAjB;AAEA,cAAK3sE,QAAQ,GAAGkV,SAAS,CAACvY,IAArB,IAA6BqD,QAAQ,GAAGkV,SAAS,CAACtY,GAAvD,EAA6D;AAE7DuY,UAAAA,UAAU,CAAC/jC,IAAX,CAAiB;AAEhB4uB,YAAAA,QAAQ,EAAEA,QAFM;AAGhB;AACA;AACAhO,YAAAA,KAAK,EAAE06E,YAAY,CAAChkF,KAAb,GAAqBsG,YAArB,CAAmC,KAAKI,WAAxC,CALS;AAMhB9d,YAAAA,KAAK,EAAEM,CANS;AAOhB+jC,YAAAA,IAAI,EAAE,IAPU;AAQhBD,YAAAA,SAAS,EAAE,IARK;AAShB/jB,YAAAA,MAAM,EAAE;AATQ,WAAjB;AAaA;AAED,OAtCD,MAsCO;AAEN,YAAMyd,OAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;;AACA,YAAMoG,KAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU++B,iBAAiB,CAACzoB,KAA5B,EAAqC6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAAjE,CAAZ;;AAEA,aAAM,IAAI1X,IAAC,GAAGw9B,OAAR,EAAev9B,GAAC,GAAG2jC,KAAG,GAAG,CAA/B,EAAkC5jC,IAAC,GAAGC,GAAtC,EAAyCD,IAAC,IAAIqZ,IAA9C,EAAqD;AAEpDuhF,UAAAA,MAAM,CAACj6E,mBAAP,CAA4Bwf,iBAA5B,EAA+CngC,IAA/C;AACA66F,UAAAA,IAAI,CAACl6E,mBAAL,CAA0Bwf,iBAA1B,EAA6CngC,IAAC,GAAG,CAAjD;;AAEA,cAAMg7F,OAAM,GAAGV,MAAM,CAACW,mBAAP,CAA4BL,MAA5B,EAAoCC,IAApC,EAA0CE,QAA1C,EAAoDD,YAApD,CAAf;;AAEA,cAAKE,OAAM,GAAGL,gBAAd,EAAiC;AAEjCI,UAAAA,QAAQ,CAAC39E,YAAT,CAAuB,KAAKI,WAA5B,EAToD,CAST;;AAE3C,cAAM4Q,SAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiC03E,QAAjC,CAAjB;;AAEA,cAAK3sE,SAAQ,GAAGkV,SAAS,CAACvY,IAArB,IAA6BqD,SAAQ,GAAGkV,SAAS,CAACtY,GAAvD,EAA6D;AAE7DuY,UAAAA,UAAU,CAAC/jC,IAAX,CAAiB;AAEhB4uB,YAAAA,QAAQ,EAAEA,SAFM;AAGhB;AACA;AACAhO,YAAAA,KAAK,EAAE06E,YAAY,CAAChkF,KAAb,GAAqBsG,YAArB,CAAmC,KAAKI,WAAxC,CALS;AAMhB9d,YAAAA,KAAK,EAAEM,IANS;AAOhB+jC,YAAAA,IAAI,EAAE,IAPU;AAQhBD,YAAAA,SAAS,EAAE,IARK;AAShB/jB,YAAAA,MAAM,EAAE;AATQ,WAAjB;AAaA;AAED;AAED;;;WAED,8BAAqB;AAEpB,UAAMS,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAM2c,eAAe,GAAG3c,QAAQ,CAAC2c,eAAjC;AACA,UAAMwE,IAAI,GAAG77B,MAAM,CAAC67B,IAAP,CAAaxE,eAAb,CAAb;;AAEA,UAAKwE,IAAI,CAACzhC,MAAL,GAAc,CAAnB,EAAuB;AAEtB,YAAMs+B,cAAc,GAAGrB,eAAe,CAAEwE,IAAI,CAAE,CAAF,CAAN,CAAtC;;AAEA,YAAKnD,cAAc,KAAKn/B,SAAxB,EAAoC;AAEnC,eAAK6jC,qBAAL,GAA6B,EAA7B;AACA,eAAKC,qBAAL,GAA6B,EAA7B;;AAEA,eAAM,IAAI3hC,CAAC,GAAG,CAAR,EAAW4hC,EAAE,GAAG5E,cAAc,CAACt+B,MAArC,EAA6CsB,CAAC,GAAG4hC,EAAjD,EAAqD5hC,CAAC,EAAtD,EAA4D;AAE3D,gBAAMkL,IAAI,GAAG8xB,cAAc,CAAEh9B,CAAF,CAAd,CAAoBkL,IAApB,IAA4B22B,MAAM,CAAE7hC,CAAF,CAA/C;AAEA,iBAAK0hC,qBAAL,CAA2B1jC,IAA3B,CAAiC,CAAjC;AACA,iBAAK2jC,qBAAL,CAA4Bz2B,IAA5B,IAAqClL,CAArC;AAEA;AAED;AAED;AAED;;;;EA1MiBmrB,Q;;AA8MnB,IAAMuuE,MAAM,GAAG,aAAc,IAAI9+E,OAAJ,EAA7B;;AACA,IAAM++E,IAAI,GAAG,aAAc,IAAI/+E,OAAJ,EAA3B;;IAEMg/E,Y;;;;;AAEL,wBAAa56E,QAAb,EAAuBsQ,QAAvB,EAAkC;AAAA;;AAAA;;AAEjC,kCAAOtQ,QAAP,EAAiBsQ,QAAjB;AAEA,YAAK8/D,cAAL,GAAsB,IAAtB;AAEA,YAAK1xF,IAAL,GAAY,cAAZ;AANiC;AAQjC;;;;WAED,gCAAuB;AAEtB,UAAMshB,QAAQ,GAAG,KAAKA,QAAtB,CAFsB,CAItB;;AAEA,UAAKA,QAAQ,CAAC9gB,KAAT,KAAmB,IAAxB,EAA+B;AAE9B,YAAMygC,iBAAiB,GAAG3f,QAAQ,CAACC,UAAT,CAAoBC,QAA9C;AACA,YAAM+5E,aAAa,GAAG,EAAtB;;AAEA,aAAM,IAAIz6F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGkgC,iBAAiB,CAACzoB,KAAvC,EAA8C1X,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,IAAI,CAA1D,EAA8D;AAE7Dk7F,UAAAA,MAAM,CAACv6E,mBAAP,CAA4Bwf,iBAA5B,EAA+CngC,CAA/C;;AACAm7F,UAAAA,IAAI,CAACx6E,mBAAL,CAA0Bwf,iBAA1B,EAA6CngC,CAAC,GAAG,CAAjD;;AAEAy6F,UAAAA,aAAa,CAAEz6F,CAAF,CAAb,GAAuBA,CAAC,KAAK,CAAR,GAAc,CAAd,GAAkBy6F,aAAa,CAAEz6F,CAAC,GAAG,CAAN,CAApD;AACAy6F,UAAAA,aAAa,CAAEz6F,CAAC,GAAG,CAAN,CAAb,GAAyBy6F,aAAa,CAAEz6F,CAAF,CAAb,GAAqBk7F,MAAM,CAAC73E,UAAP,CAAmB83E,IAAnB,CAA9C;AAEA;;AAED36E,QAAAA,QAAQ,CAAC4d,YAAT,CAAuB,cAAvB,EAAuC,IAAI5B,sBAAJ,CAA4Bi+D,aAA5B,EAA2C,CAA3C,CAAvC;AAEA,OAjBD,MAiBO;AAENx1F,QAAAA,OAAO,CAACC,IAAR,CAAc,uGAAd;AAEA;;AAED,aAAO,IAAP;AAEA;;;;EA3CyBs1F,I;;IA+CrBa,Q;;;;;AAEL,oBAAa76E,QAAb,EAAuBsQ,QAAvB,EAAkC;AAAA;;AAAA;;AAEjC,kCAAOtQ,QAAP,EAAiBsQ,QAAjB;AAEA,YAAK+/D,UAAL,GAAkB,IAAlB;AAEA,YAAK3xF,IAAL,GAAY,UAAZ;AANiC;AAQjC;;;EAVqBs7F,I;;IAcjB12B,c;;;;;AAEL,0BAAatzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKs5D,gBAAL,GAAwB,IAAxB;AAEA,YAAK5qF,IAAL,GAAY,gBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb;AAEA,YAAK6pB,GAAL,GAAW,IAAX;AAEA,YAAKE,QAAL,GAAgB,IAAhB;AAEA,YAAKhpB,IAAL,GAAY,CAAZ;AACA,YAAK+qB,eAAL,GAAuB,IAAvB;AAEA,YAAKS,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAnByB;AAqBzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,+EAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK2qB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKE,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKhpB,IAAL,GAAYhB,MAAM,CAACgB,IAAnB;AACA,WAAK+qB,eAAL,GAAuB/rB,MAAM,CAAC+rB,eAA9B;AAEA,WAAKS,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EA1C2B1G,Q;;AA8C7B,IAAMunE,cAAc,GAAG,aAAc,IAAIz0E,OAAJ,EAArC;;AACA,IAAM00E,IAAI,GAAG,aAAc,IAAIn3E,GAAJ,EAA3B;;AACA,IAAMo3E,OAAO,GAAG,aAAc,IAAIt4E,MAAJ,EAA9B;;AACA,IAAMu4E,WAAW,GAAG,aAAc,IAAIr/E,OAAJ,EAAlC;;IAEMs/E,M;;;;;AAEL,oBAAgF;AAAA;;AAAA,QAAnEl7E,QAAmE,uEAAxD,IAAIyc,cAAJ,EAAwD;AAAA,QAAlCnM,QAAkC,uEAAvB,IAAIgzC,cAAJ,EAAuB;;AAAA;;AAE/E;AAEA,YAAKvzC,QAAL,GAAgB,IAAhB;AAEA,YAAKrxB,IAAL,GAAY,QAAZ;AAEA,YAAKshB,QAAL,GAAgBA,QAAhB;AACA,YAAKsQ,QAAL,GAAgBA,QAAhB;;AAEA,YAAKmS,kBAAL;;AAX+E;AAa/E;;;;WAED,cAAMh1B,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,uEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKP,QAAL,GAAgB7iB,MAAM,CAAC6iB,QAAvB;AACA,WAAKtQ,QAAL,GAAgBvS,MAAM,CAACuS,QAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAS8iB,SAAT,EAAoBC,UAApB,EAAiC;AAEhC,UAAM/iB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMhD,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAMokE,SAAS,GAAGt+C,SAAS,CAACgoB,MAAV,CAAiBowC,MAAjB,CAAwB9Z,SAA1C;AACA,UAAMrkD,SAAS,GAAG/c,QAAQ,CAAC+c,SAA3B,CALgC,CAOhC;;AAEA,UAAK/c,QAAQ,CAAC8c,cAAT,KAA4B,IAAjC,EAAwC9c,QAAQ,CAACod,qBAAT;;AAExC49D,MAAAA,OAAO,CAACntF,IAAR,CAAcmS,QAAQ,CAAC8c,cAAvB;;AACAk+D,MAAAA,OAAO,CAACp+E,YAAR,CAAsBI,WAAtB;;AACAg+E,MAAAA,OAAO,CAAC/8E,MAAR,IAAkBmjE,SAAlB;AAEA,UAAKt+C,SAAS,CAAC/e,GAAV,CAAchB,gBAAd,CAAgCi4E,OAAhC,MAA8C,KAAnD,EAA2D,OAf3B,CAiBhC;;AAEAF,MAAAA,cAAc,CAACjtF,IAAf,CAAqBmP,WAArB,EAAmCpS,MAAnC;;AACAmwF,MAAAA,IAAI,CAACltF,IAAL,CAAWi1B,SAAS,CAAC/e,GAArB,EAA2BnH,YAA3B,CAAyCk+E,cAAzC;;AAEA,UAAMZ,cAAc,GAAG9Y,SAAS,IAAK,CAAE,KAAK93D,KAAL,CAAWpoB,CAAX,GAAe,KAAKooB,KAAL,CAAW9nB,CAA1B,GAA8B,KAAK8nB,KAAL,CAAWlV,CAA3C,IAAiD,CAAtD,CAAhC;AACA,UAAM+lF,gBAAgB,GAAGD,cAAc,GAAGA,cAA1C;AAEA,UAAMh7F,KAAK,GAAG8gB,QAAQ,CAAC9gB,KAAvB;AACA,UAAM+gB,UAAU,GAAGD,QAAQ,CAACC,UAA5B;AACA,UAAM0f,iBAAiB,GAAG1f,UAAU,CAACC,QAArC;;AAEA,UAAKhhB,KAAK,KAAK,IAAf,EAAsB;AAErB,YAAM89B,KAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;AACA,YAAMoG,GAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU1B,KAAK,CAACgY,KAAhB,EAAyB6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAArD,CAAZ;;AAEA,aAAM,IAAI1X,CAAC,GAAGw9B,KAAR,EAAe5lB,EAAE,GAAGgsB,GAA1B,EAA+B5jC,CAAC,GAAG4X,EAAnC,EAAuC5X,CAAC,EAAxC,EAA8C;AAE7C,cAAMkE,CAAC,GAAGxE,KAAK,CAACiI,IAAN,CAAY3H,CAAZ,CAAV;;AAEAy7F,UAAAA,WAAW,CAAC96E,mBAAZ,CAAiCwf,iBAAjC,EAAoDj8B,CAApD;;AAEAy3F,UAAAA,SAAS,CAAEF,WAAF,EAAev3F,CAAf,EAAkBy2F,gBAAlB,EAAoCn9E,WAApC,EAAiD8lB,SAAjD,EAA4DC,UAA5D,EAAwE,IAAxE,CAAT;AAEA;AAED,OAfD,MAeO;AAEN,YAAM/F,OAAK,GAAGj9B,IAAI,CAACc,GAAL,CAAU,CAAV,EAAak8B,SAAS,CAACC,KAAvB,CAAd;;AACA,YAAMoG,KAAG,GAAGrjC,IAAI,CAACa,GAAL,CAAU++B,iBAAiB,CAACzoB,KAA5B,EAAqC6lB,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC7lB,KAAjE,CAAZ;;AAEA,aAAM,IAAI1X,IAAC,GAAGw9B,OAAR,EAAev9B,CAAC,GAAG2jC,KAAzB,EAA8B5jC,IAAC,GAAGC,CAAlC,EAAqCD,IAAC,EAAtC,EAA4C;AAE3Cy7F,UAAAA,WAAW,CAAC96E,mBAAZ,CAAiCwf,iBAAjC,EAAoDngC,IAApD;;AAEA27F,UAAAA,SAAS,CAAEF,WAAF,EAAez7F,IAAf,EAAkB26F,gBAAlB,EAAoCn9E,WAApC,EAAiD8lB,SAAjD,EAA4DC,UAA5D,EAAwE,IAAxE,CAAT;AAEA;AAED;AAED;;;WAED,8BAAqB;AAEpB,UAAM/iB,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAM2c,eAAe,GAAG3c,QAAQ,CAAC2c,eAAjC;AACA,UAAMwE,IAAI,GAAG77B,MAAM,CAAC67B,IAAP,CAAaxE,eAAb,CAAb;;AAEA,UAAKwE,IAAI,CAACzhC,MAAL,GAAc,CAAnB,EAAuB;AAEtB,YAAMs+B,cAAc,GAAGrB,eAAe,CAAEwE,IAAI,CAAE,CAAF,CAAN,CAAtC;;AAEA,YAAKnD,cAAc,KAAKn/B,SAAxB,EAAoC;AAEnC,eAAK6jC,qBAAL,GAA6B,EAA7B;AACA,eAAKC,qBAAL,GAA6B,EAA7B;;AAEA,eAAM,IAAI3hC,CAAC,GAAG,CAAR,EAAW4hC,EAAE,GAAG5E,cAAc,CAACt+B,MAArC,EAA6CsB,CAAC,GAAG4hC,EAAjD,EAAqD5hC,CAAC,EAAtD,EAA4D;AAE3D,gBAAMkL,IAAI,GAAG8xB,cAAc,CAAEh9B,CAAF,CAAd,CAAoBkL,IAApB,IAA4B22B,MAAM,CAAE7hC,CAAF,CAA/C;AAEA,iBAAK0hC,qBAAL,CAA2B1jC,IAA3B,CAAiC,CAAjC;AACA,iBAAK2jC,qBAAL,CAA4Bz2B,IAA5B,IAAqClL,CAArC;AAEA;AAED;AAED;AAED;;;;EAtHmBmrB,Q;;AA0HrB,SAASgvE,SAAT,CAAoBv7E,KAApB,EAA2B1gB,KAA3B,EAAkCi7F,gBAAlC,EAAoDn9E,WAApD,EAAiE8lB,SAAjE,EAA4EC,UAA5E,EAAwFxjB,MAAxF,EAAiG;AAEhG,MAAM67E,kBAAkB,GAAGL,IAAI,CAAC72E,iBAAL,CAAwBtE,KAAxB,CAA3B;;AAEA,MAAKw7E,kBAAkB,GAAGjB,gBAA1B,EAA6C;AAE5C,QAAMkB,cAAc,GAAG,IAAIz/E,OAAJ,EAAvB;;AAEAm/E,IAAAA,IAAI,CAACO,mBAAL,CAA0B17E,KAA1B,EAAiCy7E,cAAjC;;AACAA,IAAAA,cAAc,CAACz+E,YAAf,CAA6BI,WAA7B;AAEA,QAAM4Q,QAAQ,GAAGkV,SAAS,CAAC/e,GAAV,CAAcF,MAAd,CAAqBhB,UAArB,CAAiCw4E,cAAjC,CAAjB;AAEA,QAAKztE,QAAQ,GAAGkV,SAAS,CAACvY,IAArB,IAA6BqD,QAAQ,GAAGkV,SAAS,CAACtY,GAAvD,EAA6D;AAE7DuY,IAAAA,UAAU,CAAC/jC,IAAX,CAAiB;AAEhB4uB,MAAAA,QAAQ,EAAEA,QAFM;AAGhB2tE,MAAAA,aAAa,EAAEx7F,IAAI,CAACyG,IAAL,CAAW40F,kBAAX,CAHC;AAIhBx7E,MAAAA,KAAK,EAAEy7E,cAJS;AAKhBn8F,MAAAA,KAAK,EAAEA,KALS;AAMhBqkC,MAAAA,IAAI,EAAE,IANU;AAOhBhkB,MAAAA,MAAM,EAAEA;AAPQ,KAAjB;AAWA;AAED;;IAEKi8E,Y;;;;;AAEL,wBAAaC,KAAb,EAAoB1pF,OAApB,EAA6BE,KAA7B,EAAoCC,KAApC,EAA2CC,SAA3C,EAAsDC,SAAtD,EAAiEC,MAAjE,EAAyE3T,IAAzE,EAA+E4T,UAA/E,EAA4F;AAAA;;AAAA;;AAE3F,kCAAOmpF,KAAP,EAAc1pF,OAAd,EAAuBE,KAAvB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgDC,SAAhD,EAA2DC,MAA3D,EAAmE3T,IAAnE,EAAyE4T,UAAzE;AAEA,YAAK8xD,cAAL,GAAsB,IAAtB;AAEA,YAAKhyD,SAAL,GAAiBA,SAAS,KAAKvT,SAAd,GAA0BuT,SAA1B,GAAsCpa,YAAvD;AACA,YAAKma,SAAL,GAAiBA,SAAS,KAAKtT,SAAd,GAA0BsT,SAA1B,GAAsCna,YAAvD;AAEA,YAAK8a,eAAL,GAAuB,KAAvB;;AAEA,QAAMoxB,KAAK,kCAAX;;AAEA,aAASw3D,WAAT,GAAuB;AAEtBx3D,MAAAA,KAAK,CAACxwB,WAAN,GAAoB,IAApB;AACA+nF,MAAAA,KAAK,CAACE,yBAAN,CAAiCD,WAAjC;AAEA;;AAED,QAAK,+BAA+BD,KAApC,EAA4C;AAE3CA,MAAAA,KAAK,CAACE,yBAAN,CAAiCD,WAAjC;AAEA;;AAxB0F;AA0B3F;;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK92F,WAAT,CAAsB,KAAKgL,KAA3B,EAAmC/B,IAAnC,CAAyC,IAAzC,CAAP;AAEA;;;WAED,kBAAS;AAER,UAAM4tF,KAAK,GAAG,KAAK7rF,KAAnB;AACA,UAAMgsF,qBAAqB,IAAG,+BAA+BH,KAAlC,CAA3B;;AAEA,UAAKG,qBAAqB,KAAK,KAA1B,IAAmCH,KAAK,CAACI,UAAN,IAAoBJ,KAAK,CAACK,iBAAlE,EAAsF;AAErF,aAAKpoF,WAAL,GAAmB,IAAnB;AAEA;AAED;;;;EA/CyB7B,O;;IAmDrBkqF,kB;;;;;AAEL,8BAAa9rF,KAAb,EAAoBC,MAApB,EAA4BmC,MAA5B,EAAqC;AAAA;;AAAA;;AAEpC,kCAAO;AAAEpC,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,MAAM,EAANA;AAAT,KAAP;AAEA,YAAKgmE,oBAAL,GAA4B,IAA5B;AAEA,YAAK7jE,MAAL,GAAcA,MAAd;AAEA,YAAKF,SAAL,GAAiBxa,aAAjB;AACA,YAAKya,SAAL,GAAiBza,aAAjB;AAEA,YAAKmb,eAAL,GAAuB,KAAvB;AAEA,YAAKY,WAAL,GAAmB,IAAnB;AAboC;AAepC;;;EAjB+B7B,O;;IAqB3BmqF,iB;;;;;AAEL,6BAAatpF,OAAb,EAAsBzC,KAAtB,EAA6BC,MAA7B,EAAqCmC,MAArC,EAA6C3T,IAA7C,EAAmDqT,OAAnD,EAA4DE,KAA5D,EAAmEC,KAAnE,EAA0EC,SAA1E,EAAqFC,SAArF,EAAgGE,UAAhG,EAA4GC,QAA5G,EAAuH;AAAA;;AAAA;;AAEtH,kCAAO,IAAP,EAAaR,OAAb,EAAsBE,KAAtB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DC,MAA1D,EAAkE3T,IAAlE,EAAwE4T,UAAxE,EAAoFC,QAApF;AAEA,YAAK4jE,mBAAL,GAA2B,IAA3B;AAEA,YAAKvmE,KAAL,GAAa;AAAEK,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEA;AAAxB,KAAb;AACA,YAAKwC,OAAL,GAAeA,OAAf,CAPsH,CAStH;AACA;;AAEA,YAAKM,KAAL,GAAa,KAAb,CAZsH,CActH;AACA;;AAEA,YAAKF,eAAL,GAAuB,KAAvB;AAjBsH;AAmBtH;;;EArB8BjB,O;;IAyB1BoqF,a;;;;;AAEL,yBAAajsF,MAAb,EAAqB+B,OAArB,EAA8BE,KAA9B,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkEC,MAAlE,EAA0E3T,IAA1E,EAAgF4T,UAAhF,EAA6F;AAAA;;AAAA;;AAE5F,kCAAOtC,MAAP,EAAe+B,OAAf,EAAwBE,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoE3T,IAApE,EAA0E4T,UAA1E;AAEA,YAAK4pF,eAAL,GAAuB,IAAvB;AAEA,YAAKxoF,WAAL,GAAmB,IAAnB;AAN4F;AAQ5F;;;EAV0B7B,O;AAc5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMsqF,K;AAEL,mBAAc;AAAA;;AAEb,SAAKz9F,IAAL,GAAY,OAAZ;AAEA,SAAK09F,kBAAL,GAA0B,GAA1B;AAEA,G,CAED;AACA;;;;;WAEA,oBAAoC;AAEnC33F,MAAAA,OAAO,CAACC,IAAR,CAAc,2CAAd;AACA,aAAO,IAAP;AAEA,K,CAED;AACA;;;;WAEA,oBAAY6Z,CAAZ,EAAe89E,cAAf,EAAgC;AAE/B,UAAM36F,CAAC,GAAG,KAAK46F,cAAL,CAAqB/9E,CAArB,CAAV;AACA,aAAO,KAAKg+E,QAAL,CAAe76F,CAAf,EAAkB26F,cAAlB,CAAP;AAEA,K,CAED;;;;WAEA,qBAA2B;AAAA,UAAhBG,SAAgB,uEAAJ,CAAI;AAE1B,UAAMv9E,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIjV,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIwyF,SAAtB,EAAiCxyF,CAAC,EAAlC,EAAwC;AAEvCiV,QAAAA,MAAM,CAACjgB,IAAP,CAAa,KAAKu9F,QAAL,CAAevyF,CAAC,GAAGwyF,SAAnB,CAAb;AAEA;;AAED,aAAOv9E,MAAP;AAEA,K,CAED;;;;WAEA,2BAAiC;AAAA,UAAhBu9E,SAAgB,uEAAJ,CAAI;AAEhC,UAAMv9E,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIjV,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIwyF,SAAtB,EAAiCxyF,CAAC,EAAlC,EAAwC;AAEvCiV,QAAAA,MAAM,CAACjgB,IAAP,CAAa,KAAKy9F,UAAL,CAAiBzyF,CAAC,GAAGwyF,SAArB,CAAb;AAEA;;AAED,aAAOv9E,MAAP;AAEA,K,CAED;;;;WAEA,qBAAY;AAEX,UAAMy9E,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,aAAOD,OAAO,CAAEA,OAAO,CAACh9F,MAAR,GAAiB,CAAnB,CAAd;AAEA,K,CAED;;;;WAEA,sBAAkD;AAAA,UAAtC88F,SAAsC,uEAA1B,KAAKJ,kBAAqB;;AAEjD,UAAK,KAAKQ,eAAL,IACF,KAAKA,eAAL,CAAqBl9F,MAArB,KAAgC88F,SAAS,GAAG,CAD1C,IAEJ,CAAE,KAAK9oF,WAFR,EAEsB;AAErB,eAAO,KAAKkpF,eAAZ;AAEA;;AAED,WAAKlpF,WAAL,GAAmB,KAAnB;AAEA,UAAMgd,KAAK,GAAG,EAAd;AACA,UAAImsE,OAAJ;AAAA,UAAaC,IAAI,GAAG,KAAKP,QAAL,CAAe,CAAf,CAApB;AACA,UAAIxvC,GAAG,GAAG,CAAV;AAEAr8B,MAAAA,KAAK,CAAC1xB,IAAN,CAAY,CAAZ;;AAEA,WAAM,IAAIuO,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIivF,SAAtB,EAAiCjvF,CAAC,EAAlC,EAAwC;AAEvCsvF,QAAAA,OAAO,GAAG,KAAKN,QAAL,CAAehvF,CAAC,GAAGivF,SAAnB,CAAV;AACAzvC,QAAAA,GAAG,IAAI8vC,OAAO,CAACh6E,UAAR,CAAoBi6E,IAApB,CAAP;AACApsE,QAAAA,KAAK,CAAC1xB,IAAN,CAAY+tD,GAAZ;AACA+vC,QAAAA,IAAI,GAAGD,OAAP;AAEA;;AAED,WAAKD,eAAL,GAAuBlsE,KAAvB;AAEA,aAAOA,KAAP,CA7BiD,CA6BnC;AAEd;;;WAED,4BAAmB;AAElB,WAAKhd,WAAL,GAAmB,IAAnB;AACA,WAAKipF,UAAL;AAEA,K,CAED;;;;WAEA,wBAAgBp+E,CAAhB,EAAmBqP,QAAnB,EAA8B;AAE7B,UAAMmvE,UAAU,GAAG,KAAKJ,UAAL,EAAnB;AAEA,UAAIn9F,CAAC,GAAG,CAAR;AACA,UAAM4X,EAAE,GAAG2lF,UAAU,CAACr9F,MAAtB;AAEA,UAAIs9F,eAAJ,CAP6B,CAOR;;AAErB,UAAKpvE,QAAL,EAAgB;AAEfovE,QAAAA,eAAe,GAAGpvE,QAAlB;AAEA,OAJD,MAIO;AAENovE,QAAAA,eAAe,GAAGz+E,CAAC,GAAGw+E,UAAU,CAAE3lF,EAAE,GAAG,CAAP,CAAhC;AAEA,OAjB4B,CAmB7B;;;AAEA,UAAIhV,GAAG,GAAG,CAAV;AAAA,UAAaC,IAAI,GAAG+U,EAAE,GAAG,CAAzB;AAAA,UAA4B6lF,UAA5B;;AAEA,aAAQ76F,GAAG,IAAIC,IAAf,EAAsB;AAErB7C,QAAAA,CAAC,GAAGO,IAAI,CAACuC,KAAL,CAAYF,GAAG,GAAG,CAAEC,IAAI,GAAGD,GAAT,IAAiB,CAAnC,CAAJ,CAFqB,CAEuB;;AAE5C66F,QAAAA,UAAU,GAAGF,UAAU,CAAEv9F,CAAF,CAAV,GAAkBw9F,eAA/B;;AAEA,YAAKC,UAAU,GAAG,CAAlB,EAAsB;AAErB76F,UAAAA,GAAG,GAAG5C,CAAC,GAAG,CAAV;AAEA,SAJD,MAIO,IAAKy9F,UAAU,GAAG,CAAlB,EAAsB;AAE5B56F,UAAAA,IAAI,GAAG7C,CAAC,GAAG,CAAX;AAEA,SAJM,MAIA;AAEN6C,UAAAA,IAAI,GAAG7C,CAAP;AACA,gBAHM,CAKN;AAEA;AAED;;AAEDA,MAAAA,CAAC,GAAG6C,IAAJ;;AAEA,UAAK06F,UAAU,CAAEv9F,CAAF,CAAV,KAAoBw9F,eAAzB,EAA2C;AAE1C,eAAOx9F,CAAC,IAAK4X,EAAE,GAAG,CAAV,CAAR;AAEA,OAtD4B,CAwD7B;;;AAEA,UAAM8lF,YAAY,GAAGH,UAAU,CAAEv9F,CAAF,CAA/B;AACA,UAAM29F,WAAW,GAAGJ,UAAU,CAAEv9F,CAAC,GAAG,CAAN,CAA9B;AAEA,UAAM49F,aAAa,GAAGD,WAAW,GAAGD,YAApC,CA7D6B,CA+D7B;;AAEA,UAAMG,eAAe,GAAG,CAAEL,eAAe,GAAGE,YAApB,IAAqCE,aAA7D,CAjE6B,CAmE7B;;AAEA,UAAM17F,CAAC,GAAG,CAAElC,CAAC,GAAG69F,eAAN,KAA4BjmF,EAAE,GAAG,CAAjC,CAAV;AAEA,aAAO1V,CAAP;AAEA,K,CAED;AACA;AACA;AACA;;;;WAEA,oBAAYA,CAAZ,EAAe26F,cAAf,EAAgC;AAE/B,UAAMltF,KAAK,GAAG,MAAd;AACA,UAAI6V,EAAE,GAAGtjB,CAAC,GAAGyN,KAAb;AACA,UAAImuF,EAAE,GAAG57F,CAAC,GAAGyN,KAAb,CAJ+B,CAM/B;;AAEA,UAAK6V,EAAE,GAAG,CAAV,EAAcA,EAAE,GAAG,CAAL;AACd,UAAKs4E,EAAE,GAAG,CAAV,EAAcA,EAAE,GAAG,CAAL;AAEd,UAAMC,GAAG,GAAG,KAAKhB,QAAL,CAAev3E,EAAf,CAAZ;AACA,UAAMw4E,GAAG,GAAG,KAAKjB,QAAL,CAAee,EAAf,CAAZ;AAEA,UAAMngE,OAAO,GAAGk/D,cAAc,KAAQkB,GAAG,CAAC33F,SAAN,GAAoB,IAAIF,OAAJ,EAApB,GAAoC,IAAIkW,OAAJ,EAA1C,CAA9B;AAEAuhB,MAAAA,OAAO,CAACtvB,IAAR,CAAc2vF,GAAd,EAAoB3/E,GAApB,CAAyB0/E,GAAzB,EAA+Bp4F,SAA/B;AAEA,aAAOg4B,OAAP;AAEA;;;WAED,sBAAc5e,CAAd,EAAiB89E,cAAjB,EAAkC;AAEjC,UAAM36F,CAAC,GAAG,KAAK46F,cAAL,CAAqB/9E,CAArB,CAAV;AACA,aAAO,KAAKk/E,UAAL,CAAiB/7F,CAAjB,EAAoB26F,cAApB,CAAP;AAEA;;;WAED,6BAAqBqB,QAArB,EAA+BC,MAA/B,EAAwC;AAEvC;AAEA,UAAM7/E,MAAM,GAAG,IAAIlC,OAAJ,EAAf;AAEA,UAAM6iB,QAAQ,GAAG,EAAjB;AACA,UAAMJ,OAAO,GAAG,EAAhB;AACA,UAAMu/D,SAAS,GAAG,EAAlB;AAEA,UAAMC,GAAG,GAAG,IAAIjiF,OAAJ,EAAZ;AACA,UAAMkiF,GAAG,GAAG,IAAIz3E,OAAJ,EAAZ,CAXuC,CAavC;;AAEA,WAAM,IAAI7mB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIk+F,QAAtB,EAAgCl+F,CAAC,EAAjC,EAAuC;AAEtC,YAAM+e,CAAC,GAAG/e,CAAC,GAAGk+F,QAAd;AAEAj/D,QAAAA,QAAQ,CAAEj/B,CAAF,CAAR,GAAgB,KAAKu+F,YAAL,CAAmBx/E,CAAnB,EAAsB,IAAI3C,OAAJ,EAAtB,CAAhB;AAEA,OArBsC,CAuBvC;AACA;;;AAEAyiB,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,IAAIziB,OAAJ,EAAf;AACAgiF,MAAAA,SAAS,CAAE,CAAF,CAAT,GAAiB,IAAIhiF,OAAJ,EAAjB;AACA,UAAIhb,GAAG,GAAG+X,MAAM,CAACqlF,SAAjB;AACA,UAAMjzF,EAAE,GAAGhL,IAAI,CAACiC,GAAL,CAAUy8B,QAAQ,CAAE,CAAF,CAAR,CAAcv9B,CAAxB,CAAX;AACA,UAAM8J,EAAE,GAAGjL,IAAI,CAACiC,GAAL,CAAUy8B,QAAQ,CAAE,CAAF,CAAR,CAAcj9B,CAAxB,CAAX;AACA,UAAMy8F,EAAE,GAAGl+F,IAAI,CAACiC,GAAL,CAAUy8B,QAAQ,CAAE,CAAF,CAAR,CAAcrqB,CAAxB,CAAX;;AAEA,UAAKrJ,EAAE,IAAInK,GAAX,EAAiB;AAEhBA,QAAAA,GAAG,GAAGmK,EAAN;AACA+S,QAAAA,MAAM,CAACtZ,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB;AAEA;;AAED,UAAKwG,EAAE,IAAIpK,GAAX,EAAiB;AAEhBA,QAAAA,GAAG,GAAGoK,EAAN;AACA8S,QAAAA,MAAM,CAACtZ,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB;AAEA;;AAED,UAAKy5F,EAAE,IAAIr9F,GAAX,EAAiB;AAEhBkd,QAAAA,MAAM,CAACtZ,GAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB;AAEA;;AAEDq5F,MAAAA,GAAG,CAAC5gF,YAAJ,CAAkBwhB,QAAQ,CAAE,CAAF,CAA1B,EAAiC3gB,MAAjC,EAA0C3Y,SAA1C;AAEAk5B,MAAAA,OAAO,CAAE,CAAF,CAAP,CAAaphB,YAAb,CAA2BwhB,QAAQ,CAAE,CAAF,CAAnC,EAA0Co/D,GAA1C;AACAD,MAAAA,SAAS,CAAE,CAAF,CAAT,CAAe3gF,YAAf,CAA6BwhB,QAAQ,CAAE,CAAF,CAArC,EAA4CJ,OAAO,CAAE,CAAF,CAAnD,EAxDuC,CA2DvC;;AAEA,WAAM,IAAI7+B,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIk+F,QAAtB,EAAgCl+F,IAAC,EAAjC,EAAuC;AAEtC6+B,QAAAA,OAAO,CAAE7+B,IAAF,CAAP,GAAe6+B,OAAO,CAAE7+B,IAAC,GAAG,CAAN,CAAP,CAAiB8W,KAAjB,EAAf;AAEAsnF,QAAAA,SAAS,CAAEp+F,IAAF,CAAT,GAAiBo+F,SAAS,CAAEp+F,IAAC,GAAG,CAAN,CAAT,CAAmB8W,KAAnB,EAAjB;AAEAunF,QAAAA,GAAG,CAAC5gF,YAAJ,CAAkBwhB,QAAQ,CAAEj/B,IAAC,GAAG,CAAN,CAA1B,EAAqCi/B,QAAQ,CAAEj/B,IAAF,CAA7C;;AAEA,YAAKq+F,GAAG,CAACn+F,MAAJ,KAAeiZ,MAAM,CAACC,OAA3B,EAAqC;AAEpCilF,UAAAA,GAAG,CAAC14F,SAAJ;AAEA,cAAMmG,KAAK,GAAGvL,IAAI,CAACuU,IAAL,CAAW5T,KAAK,CAAE+9B,QAAQ,CAAEj/B,IAAC,GAAG,CAAN,CAAR,CAAkBkZ,GAAlB,CAAuB+lB,QAAQ,CAAEj/B,IAAF,CAA/B,CAAF,EAA0C,CAAE,CAA5C,EAA+C,CAA/C,CAAhB,CAAd,CAJoC,CAIgD;;AAEpF6+B,UAAAA,OAAO,CAAE7+B,IAAF,CAAP,CAAaod,YAAb,CAA2BkhF,GAAG,CAACI,gBAAJ,CAAsBL,GAAtB,EAA2BvyF,KAA3B,CAA3B;AAEA;;AAEDsyF,QAAAA,SAAS,CAAEp+F,IAAF,CAAT,CAAeyd,YAAf,CAA6BwhB,QAAQ,CAAEj/B,IAAF,CAArC,EAA4C6+B,OAAO,CAAE7+B,IAAF,CAAnD;AAEA,OAjFsC,CAmFvC;;;AAEA,UAAKm+F,MAAM,KAAK,IAAhB,EAAuB;AAEtB,YAAIryF,MAAK,GAAGvL,IAAI,CAACuU,IAAL,CAAW5T,KAAK,CAAE29B,OAAO,CAAE,CAAF,CAAP,CAAa3lB,GAAb,CAAkB2lB,OAAO,CAAEq/D,QAAF,CAAzB,CAAF,EAA2C,CAAE,CAA7C,EAAgD,CAAhD,CAAhB,CAAZ;;AACApyF,QAAAA,MAAK,IAAIoyF,QAAT;;AAEA,YAAKj/D,QAAQ,CAAE,CAAF,CAAR,CAAc/lB,GAAd,CAAmBmlF,GAAG,CAAC5gF,YAAJ,CAAkBohB,OAAO,CAAE,CAAF,CAAzB,EAAgCA,OAAO,CAAEq/D,QAAF,CAAvC,CAAnB,IAA6E,CAAlF,EAAsF;AAErFpyF,UAAAA,MAAK,GAAG,CAAEA,MAAV;AAEA;;AAED,aAAM,IAAI9L,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIk+F,QAAtB,EAAgCl+F,IAAC,EAAjC,EAAuC;AAEtC;AACA6+B,UAAAA,OAAO,CAAE7+B,IAAF,CAAP,CAAaod,YAAb,CAA2BkhF,GAAG,CAACI,gBAAJ,CAAsBz/D,QAAQ,CAAEj/B,IAAF,CAA9B,EAAqC8L,MAAK,GAAG9L,IAA7C,CAA3B;;AACAo+F,UAAAA,SAAS,CAAEp+F,IAAF,CAAT,CAAeyd,YAAf,CAA6BwhB,QAAQ,CAAEj/B,IAAF,CAArC,EAA4C6+B,OAAO,CAAE7+B,IAAF,CAAnD;AAEA;AAED;;AAED,aAAO;AACNi/B,QAAAA,QAAQ,EAAEA,QADJ;AAENJ,QAAAA,OAAO,EAAEA,OAFH;AAGNu/D,QAAAA,SAAS,EAAEA;AAHL,OAAP;AAMA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKh5F,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAMJ,MAAN,EAAe;AAEd,WAAK2uF,kBAAL,GAA0B3uF,MAAM,CAAC2uF,kBAAjC;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMvrF,IAAI,GAAG;AACZ+C,QAAAA,QAAQ,EAAE;AACT5C,UAAAA,OAAO,EAAE,GADA;AAETtS,UAAAA,IAAI,EAAE,OAFG;AAGTmV,UAAAA,SAAS,EAAE;AAHF;AADE,OAAb;AAQAhD,MAAAA,IAAI,CAACurF,kBAAL,GAA0B,KAAKA,kBAA/B;AACAvrF,MAAAA,IAAI,CAACnS,IAAL,GAAY,KAAKA,IAAjB;AAEA,aAAOmS,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,WAAKsD,kBAAL,GAA0BtD,IAAI,CAACsD,kBAA/B;AAEA,aAAO,IAAP;AAEA;;;;;;IAII+B,Y;;;;;AAEL,0BAAqI;AAAA;;AAAA,QAAxHC,EAAwH,uEAAnH,CAAmH;AAAA,QAAhHC,EAAgH,uEAA3G,CAA2G;AAAA,QAAxGC,OAAwG,uEAA9F,CAA8F;AAAA,QAA3FC,OAA2F,uEAAjF,CAAiF;AAAA,QAA9EC,WAA8E,uEAAhE,CAAgE;AAAA,QAA7DC,SAA6D,uEAAjD1+F,IAAI,CAACC,EAAL,GAAU,CAAuC;AAAA,QAApC0+F,UAAoC,uEAAvB,KAAuB;AAAA,QAAhBC,SAAgB,uEAAJ,CAAI;;AAAA;;AAEpI;AAEA,YAAKC,cAAL,GAAsB,IAAtB;AAEA,YAAKlgG,IAAL,GAAY,cAAZ;AAEA,YAAK0/F,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AAEA,YAAKC,OAAL,GAAeA,OAAf;AACA,YAAKC,OAAL,GAAeA,OAAf;AAEA,YAAKC,WAAL,GAAmBA,WAAnB;AACA,YAAKC,SAAL,GAAiBA,SAAjB;AAEA,YAAKC,UAAL,GAAkBA,UAAlB;AAEA,YAAKC,SAAL,GAAiBA,SAAjB;AAnBoI;AAqBpI;;;;WAED,kBAAUj9F,CAAV,EAAa26F,cAAb,EAA8B;AAE7B,UAAMz8E,KAAK,GAAGy8E,cAAc,IAAI,IAAI32F,OAAJ,EAAhC;AAEA,UAAMm5F,KAAK,GAAG9+F,IAAI,CAACC,EAAL,GAAU,CAAxB;AACA,UAAI8+F,UAAU,GAAG,KAAKL,SAAL,GAAiB,KAAKD,WAAvC;AACA,UAAMO,UAAU,GAAGh/F,IAAI,CAACiC,GAAL,CAAU88F,UAAV,IAAyBnmF,MAAM,CAACC,OAAnD,CAN6B,CAQ7B;;AACA,aAAQkmF,UAAU,GAAG,CAArB;AAAyBA,QAAAA,UAAU,IAAID,KAAd;AAAzB;;AACA,aAAQC,UAAU,GAAGD,KAArB;AAA6BC,QAAAA,UAAU,IAAID,KAAd;AAA7B;;AAEA,UAAKC,UAAU,GAAGnmF,MAAM,CAACC,OAAzB,EAAmC;AAElC,YAAKmmF,UAAL,EAAkB;AAEjBD,UAAAA,UAAU,GAAG,CAAb;AAEA,SAJD,MAIO;AAENA,UAAAA,UAAU,GAAGD,KAAb;AAEA;AAED;;AAED,UAAK,KAAKH,UAAL,KAAoB,IAApB,IAA4B,CAAEK,UAAnC,EAAgD;AAE/C,YAAKD,UAAU,KAAKD,KAApB,EAA4B;AAE3BC,UAAAA,UAAU,GAAG,CAAED,KAAf;AAEA,SAJD,MAIO;AAENC,UAAAA,UAAU,GAAGA,UAAU,GAAGD,KAA1B;AAEA;AAED;;AAED,UAAMp4F,KAAK,GAAG,KAAK+3F,WAAL,GAAmB98F,CAAC,GAAGo9F,UAArC;AACA,UAAI59F,CAAC,GAAG,KAAKk9F,EAAL,GAAU,KAAKE,OAAL,GAAev+F,IAAI,CAAC+D,GAAL,CAAU2C,KAAV,CAAjC;AACA,UAAIjF,CAAC,GAAG,KAAK68F,EAAL,GAAU,KAAKE,OAAL,GAAex+F,IAAI,CAACgE,GAAL,CAAU0C,KAAV,CAAjC;;AAEA,UAAK,KAAKk4F,SAAL,KAAmB,CAAxB,EAA4B;AAE3B,YAAM76F,GAAG,GAAG/D,IAAI,CAAC+D,GAAL,CAAU,KAAK66F,SAAf,CAAZ;AACA,YAAM56F,GAAG,GAAGhE,IAAI,CAACgE,GAAL,CAAU,KAAK46F,SAAf,CAAZ;AAEA,YAAM5zF,EAAE,GAAG7J,CAAC,GAAG,KAAKk9F,EAApB;AACA,YAAMpzF,EAAE,GAAGxJ,CAAC,GAAG,KAAK68F,EAApB,CAN2B,CAQ3B;;AACAn9F,QAAAA,CAAC,GAAG6J,EAAE,GAAGjH,GAAL,GAAWkH,EAAE,GAAGjH,GAAhB,GAAsB,KAAKq6F,EAA/B;AACA58F,QAAAA,CAAC,GAAGuJ,EAAE,GAAGhH,GAAL,GAAWiH,EAAE,GAAGlH,GAAhB,GAAsB,KAAKu6F,EAA/B;AAEA;;AAED,aAAOz+E,KAAK,CAACpb,GAAN,CAAWtD,CAAX,EAAcM,CAAd,CAAP;AAEA;;;WAED,cAAMiM,MAAN,EAAe;AAEd,6EAAYA,MAAZ;;AAEA,WAAK2wF,EAAL,GAAU3wF,MAAM,CAAC2wF,EAAjB;AACA,WAAKC,EAAL,GAAU5wF,MAAM,CAAC4wF,EAAjB;AAEA,WAAKC,OAAL,GAAe7wF,MAAM,CAAC6wF,OAAtB;AACA,WAAKC,OAAL,GAAe9wF,MAAM,CAAC8wF,OAAtB;AAEA,WAAKC,WAAL,GAAmB/wF,MAAM,CAAC+wF,WAA1B;AACA,WAAKC,SAAL,GAAiBhxF,MAAM,CAACgxF,SAAxB;AAEA,WAAKC,UAAL,GAAkBjxF,MAAM,CAACixF,UAAzB;AAEA,WAAKC,SAAL,GAAiBlxF,MAAM,CAACkxF,SAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM9tF,IAAI,2EAAV;;AAEAA,MAAAA,IAAI,CAACutF,EAAL,GAAU,KAAKA,EAAf;AACAvtF,MAAAA,IAAI,CAACwtF,EAAL,GAAU,KAAKA,EAAf;AAEAxtF,MAAAA,IAAI,CAACytF,OAAL,GAAe,KAAKA,OAApB;AACAztF,MAAAA,IAAI,CAAC0tF,OAAL,GAAe,KAAKA,OAApB;AAEA1tF,MAAAA,IAAI,CAAC2tF,WAAL,GAAmB,KAAKA,WAAxB;AACA3tF,MAAAA,IAAI,CAAC4tF,SAAL,GAAiB,KAAKA,SAAtB;AAEA5tF,MAAAA,IAAI,CAAC6tF,UAAL,GAAkB,KAAKA,UAAvB;AAEA7tF,MAAAA,IAAI,CAAC8tF,SAAL,GAAiB,KAAKA,SAAtB;AAEA,aAAO9tF,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,iFAAgBA,IAAhB;;AAEA,WAAKsF,EAAL,GAAUtF,IAAI,CAACsF,EAAf;AACA,WAAKC,EAAL,GAAUvF,IAAI,CAACuF,EAAf;AAEA,WAAKC,OAAL,GAAexF,IAAI,CAACwF,OAApB;AACA,WAAKC,OAAL,GAAezF,IAAI,CAACyF,OAApB;AAEA,WAAKC,WAAL,GAAmB1F,IAAI,CAAC0F,WAAxB;AACA,WAAKC,SAAL,GAAiB3F,IAAI,CAAC2F,SAAtB;AAEA,WAAKC,UAAL,GAAkB5F,IAAI,CAAC4F,UAAvB;AAEA,WAAKC,SAAL,GAAiB7F,IAAI,CAAC6F,SAAtB;AAEA,aAAO,IAAP;AAEA;;;;EApJyBxC,K;;IAwJrB6C,Q;;;;;AAEL,oBAAaZ,EAAb,EAAiBC,EAAjB,EAAqBY,OAArB,EAA8BT,WAA9B,EAA2CC,SAA3C,EAAsDC,UAAtD,EAAmE;AAAA;;AAAA;;AAElE,kCAAON,EAAP,EAAWC,EAAX,EAAeY,OAAf,EAAwBA,OAAxB,EAAiCT,WAAjC,EAA8CC,SAA9C,EAAyDC,UAAzD;AAEA,YAAKQ,UAAL,GAAkB,IAAlB;AAEA,YAAKxgG,IAAL,GAAY,UAAZ;AANkE;AAQlE;;;EAVqBy/F,Y;AAcvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASgB,SAAT,GAAqB;AAEpB,MAAIC,EAAE,GAAG,CAAT;AAAA,MAAYnnF,EAAE,GAAG,CAAjB;AAAA,MAAoBjU,EAAE,GAAG,CAAzB;AAAA,MAA4BkU,EAAE,GAAG,CAAjC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,WAASuuC,IAAT,CAAezrC,EAAf,EAAmBI,EAAnB,EAAuB2J,EAAvB,EAA2BC,EAA3B,EAAgC;AAE/Bo6E,IAAAA,EAAE,GAAGpkF,EAAL;AACA/C,IAAAA,EAAE,GAAG8M,EAAL;AACA/gB,IAAAA,EAAE,GAAG,CAAE,CAAF,GAAMgX,EAAN,GAAW,IAAII,EAAf,GAAoB,IAAI2J,EAAxB,GAA6BC,EAAlC;AACA9M,IAAAA,EAAE,GAAG,IAAI8C,EAAJ,GAAS,IAAII,EAAb,GAAkB2J,EAAlB,GAAuBC,EAA5B;AAEA;;AAED,SAAO;AAENq6E,IAAAA,cAAc,EAAE,wBAAWrkF,EAAX,EAAeI,EAAf,EAAmBmO,EAAnB,EAAuB+1E,EAAvB,EAA2BC,OAA3B,EAAqC;AAEpD94C,MAAAA,IAAI,CAAErrC,EAAF,EAAMmO,EAAN,EAAUg2E,OAAO,IAAKh2E,EAAE,GAAGvO,EAAV,CAAjB,EAAiCukF,OAAO,IAAKD,EAAE,GAAGlkF,EAAV,CAAxC,CAAJ;AAEA,KANK;AAQNokF,IAAAA,wBAAwB,EAAE,kCAAWxkF,EAAX,EAAeI,EAAf,EAAmBmO,EAAnB,EAAuB+1E,EAAvB,EAA2BG,GAA3B,EAAgCC,GAAhC,EAAqCC,GAArC,EAA2C;AAEpE;AACA,UAAI36E,EAAE,GAAG,CAAE5J,EAAE,GAAGJ,EAAP,IAAcykF,GAAd,GAAoB,CAAEl2E,EAAE,GAAGvO,EAAP,KAAgBykF,GAAG,GAAGC,GAAtB,CAApB,GAAkD,CAAEn2E,EAAE,GAAGnO,EAAP,IAAcskF,GAAzE;AACA,UAAIpC,EAAE,GAAG,CAAE/zE,EAAE,GAAGnO,EAAP,IAAcskF,GAAd,GAAoB,CAAEJ,EAAE,GAAGlkF,EAAP,KAAgBskF,GAAG,GAAGC,GAAtB,CAApB,GAAkD,CAAEL,EAAE,GAAG/1E,EAAP,IAAco2E,GAAzE,CAJoE,CAMpE;;AACA36E,MAAAA,EAAE,IAAI06E,GAAN;AACApC,MAAAA,EAAE,IAAIoC,GAAN;AAEAj5C,MAAAA,IAAI,CAAErrC,EAAF,EAAMmO,EAAN,EAAUvE,EAAV,EAAcs4E,EAAd,CAAJ;AAEA,KApBK;AAsBNsC,IAAAA,IAAI,EAAE,cAAWl+F,CAAX,EAAe;AAEpB,UAAM47F,EAAE,GAAG57F,CAAC,GAAGA,CAAf;AACA,UAAMm+F,EAAE,GAAGvC,EAAE,GAAG57F,CAAhB;AACA,aAAO09F,EAAE,GAAGnnF,EAAE,GAAGvW,CAAV,GAAcsC,EAAE,GAAGs5F,EAAnB,GAAwBplF,EAAE,GAAG2nF,EAApC;AAEA;AA5BK,GAAP;AAgCA,C,CAED;;;AAEA,IAAMp1F,GAAG,GAAG,aAAc,IAAImR,OAAJ,EAA1B;AACA,IAAMkkF,EAAE,GAAG,aAAc,IAAIX,SAAJ,EAAzB;AACA,IAAMY,EAAE,GAAG,aAAc,IAAIZ,SAAJ,EAAzB;AACA,IAAMa,EAAE,GAAG,aAAc,IAAIb,SAAJ,EAAzB;;IAEMc,gB;;;;;AAEL,8BAAqF;AAAA;;AAAA,QAAxEhhF,MAAwE,uEAA/D,EAA+D;AAAA,QAA3D0+E,MAA2D,uEAAlD,KAAkD;AAAA,QAA3CuC,SAA2C,uEAA/B,aAA+B;AAAA,QAAhBX,OAAgB,uEAAN,GAAM;;AAAA;;AAEpF;AAEA,YAAKY,kBAAL,GAA0B,IAA1B;AAEA,YAAKzhG,IAAL,GAAY,kBAAZ;AAEA,YAAKugB,MAAL,GAAcA,MAAd;AACA,YAAK0+E,MAAL,GAAcA,MAAd;AACA,YAAKuC,SAAL,GAAiBA,SAAjB;AACA,YAAKX,OAAL,GAAeA,OAAf;AAXoF;AAapF;;;;WAED,kBAAU79F,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAIzgF,OAAJ,EAAgB;AAE7C,UAAMgE,KAAK,GAAGy8E,cAAd;AAEA,UAAMp9E,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMxf,CAAC,GAAGwf,MAAM,CAACvf,MAAjB;AAEA,UAAM6N,CAAC,GAAG,CAAE9N,CAAC,IAAK,KAAKk+F,MAAL,GAAc,CAAd,GAAkB,CAAvB,CAAH,IAAkCj8F,CAA5C;AACA,UAAI0+F,QAAQ,GAAGrgG,IAAI,CAACuC,KAAL,CAAYiL,CAAZ,CAAf;AACA,UAAIy/C,MAAM,GAAGz/C,CAAC,GAAG6yF,QAAjB;;AAEA,UAAK,KAAKzC,MAAV,EAAmB;AAElByC,QAAAA,QAAQ,IAAIA,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmB,CAAErgG,IAAI,CAACuC,KAAL,CAAYvC,IAAI,CAACiC,GAAL,CAAUo+F,QAAV,IAAuB3gG,CAAnC,IAAyC,CAA3C,IAAiDA,CAAhF;AAEA,OAJD,MAIO,IAAKutD,MAAM,KAAK,CAAX,IAAgBozC,QAAQ,KAAK3gG,CAAC,GAAG,CAAtC,EAA0C;AAEhD2gG,QAAAA,QAAQ,GAAG3gG,CAAC,GAAG,CAAf;AACAutD,QAAAA,MAAM,GAAG,CAAT;AAEA;;AAED,UAAI7qC,EAAJ,EAAQkR,EAAR,CAtB6C,CAsBjC;;AAEZ,UAAK,KAAKsqE,MAAL,IAAeyC,QAAQ,GAAG,CAA/B,EAAmC;AAElCj+E,QAAAA,EAAE,GAAGlD,MAAM,CAAE,CAAEmhF,QAAQ,GAAG,CAAb,IAAmB3gG,CAArB,CAAX;AAEA,OAJD,MAIO;AAEN;AACAgL,QAAAA,GAAG,CAACxE,UAAJ,CAAgBgZ,MAAM,CAAE,CAAF,CAAtB,EAA6BA,MAAM,CAAE,CAAF,CAAnC,EAA2CK,GAA3C,CAAgDL,MAAM,CAAE,CAAF,CAAtD;AACAkD,QAAAA,EAAE,GAAG1X,GAAL;AAEA;;AAED,UAAM2X,EAAE,GAAGnD,MAAM,CAAEmhF,QAAQ,GAAG3gG,CAAb,CAAjB;AACA,UAAM4iB,EAAE,GAAGpD,MAAM,CAAE,CAAEmhF,QAAQ,GAAG,CAAb,IAAmB3gG,CAArB,CAAjB;;AAEA,UAAK,KAAKk+F,MAAL,IAAeyC,QAAQ,GAAG,CAAX,GAAe3gG,CAAnC,EAAuC;AAEtC4zB,QAAAA,EAAE,GAAGpU,MAAM,CAAE,CAAEmhF,QAAQ,GAAG,CAAb,IAAmB3gG,CAArB,CAAX;AAEA,OAJD,MAIO;AAEN;AACAgL,QAAAA,GAAG,CAACxE,UAAJ,CAAgBgZ,MAAM,CAAExf,CAAC,GAAG,CAAN,CAAtB,EAAiCwf,MAAM,CAAExf,CAAC,GAAG,CAAN,CAAvC,EAAmD6f,GAAnD,CAAwDL,MAAM,CAAExf,CAAC,GAAG,CAAN,CAA9D;AACA4zB,QAAAA,EAAE,GAAG5oB,GAAL;AAEA;;AAED,UAAK,KAAKy1F,SAAL,KAAmB,aAAnB,IAAoC,KAAKA,SAAL,KAAmB,SAA5D,EAAwE;AAEvE;AACA,YAAM/8F,GAAG,GAAG,KAAK+8F,SAAL,KAAmB,SAAnB,GAA+B,GAA/B,GAAqC,IAAjD;AACA,YAAIT,GAAG,GAAG1/F,IAAI,CAACoD,GAAL,CAAUgf,EAAE,CAACxb,iBAAH,CAAsByb,EAAtB,CAAV,EAAsCjf,GAAtC,CAAV;AACA,YAAIu8F,GAAG,GAAG3/F,IAAI,CAACoD,GAAL,CAAUif,EAAE,CAACzb,iBAAH,CAAsB0b,EAAtB,CAAV,EAAsClf,GAAtC,CAAV;AACA,YAAIw8F,GAAG,GAAG5/F,IAAI,CAACoD,GAAL,CAAUkf,EAAE,CAAC1b,iBAAH,CAAsB0sB,EAAtB,CAAV,EAAsClwB,GAAtC,CAAV,CANuE,CAQvE;;AACA,YAAKu8F,GAAG,GAAG,IAAX,EAAkBA,GAAG,GAAG,GAAN;AAClB,YAAKD,GAAG,GAAG,IAAX,EAAkBA,GAAG,GAAGC,GAAN;AAClB,YAAKC,GAAG,GAAG,IAAX,EAAkBA,GAAG,GAAGD,GAAN;AAElBI,QAAAA,EAAE,CAACN,wBAAH,CAA6Br9E,EAAE,CAACjhB,CAAhC,EAAmCkhB,EAAE,CAAClhB,CAAtC,EAAyCmhB,EAAE,CAACnhB,CAA5C,EAA+CmyB,EAAE,CAACnyB,CAAlD,EAAqDu+F,GAArD,EAA0DC,GAA1D,EAA+DC,GAA/D;AACAI,QAAAA,EAAE,CAACP,wBAAH,CAA6Br9E,EAAE,CAAC3gB,CAAhC,EAAmC4gB,EAAE,CAAC5gB,CAAtC,EAAyC6gB,EAAE,CAAC7gB,CAA5C,EAA+C6xB,EAAE,CAAC7xB,CAAlD,EAAqDi+F,GAArD,EAA0DC,GAA1D,EAA+DC,GAA/D;AACAK,QAAAA,EAAE,CAACR,wBAAH,CAA6Br9E,EAAE,CAAC/N,CAAhC,EAAmCgO,EAAE,CAAChO,CAAtC,EAAyCiO,EAAE,CAACjO,CAA5C,EAA+Cif,EAAE,CAACjf,CAAlD,EAAqDqrF,GAArD,EAA0DC,GAA1D,EAA+DC,GAA/D;AAEA,OAjBD,MAiBO,IAAK,KAAKO,SAAL,KAAmB,YAAxB,EAAuC;AAE7CJ,QAAAA,EAAE,CAACT,cAAH,CAAmBl9E,EAAE,CAACjhB,CAAtB,EAAyBkhB,EAAE,CAAClhB,CAA5B,EAA+BmhB,EAAE,CAACnhB,CAAlC,EAAqCmyB,EAAE,CAACnyB,CAAxC,EAA2C,KAAKq+F,OAAhD;AACAQ,QAAAA,EAAE,CAACV,cAAH,CAAmBl9E,EAAE,CAAC3gB,CAAtB,EAAyB4gB,EAAE,CAAC5gB,CAA5B,EAA+B6gB,EAAE,CAAC7gB,CAAlC,EAAqC6xB,EAAE,CAAC7xB,CAAxC,EAA2C,KAAK+9F,OAAhD;AACAS,QAAAA,EAAE,CAACX,cAAH,CAAmBl9E,EAAE,CAAC/N,CAAtB,EAAyBgO,EAAE,CAAChO,CAA5B,EAA+BiO,EAAE,CAACjO,CAAlC,EAAqCif,EAAE,CAACjf,CAAxC,EAA2C,KAAKmrF,OAAhD;AAEA;;AAED3/E,MAAAA,KAAK,CAACpb,GAAN,CACCs7F,EAAE,CAACF,IAAH,CAAS5yC,MAAT,CADD,EAEC+yC,EAAE,CAACH,IAAH,CAAS5yC,MAAT,CAFD,EAGCgzC,EAAE,CAACJ,IAAH,CAAS5yC,MAAT,CAHD;AAMA,aAAOptC,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,iFAAYA,MAAZ;;AAEA,WAAKwR,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGgO,MAAM,CAACwR,MAAP,CAAcvf,MAAnC,EAA2CF,CAAC,GAAGC,CAA/C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,YAAMogB,KAAK,GAAGnS,MAAM,CAACwR,MAAP,CAAezf,CAAf,CAAd;AAEA,aAAKyf,MAAL,CAAYjgB,IAAZ,CAAkB4gB,KAAK,CAACtJ,KAAN,EAAlB;AAEA;;AAED,WAAKqnF,MAAL,GAAclwF,MAAM,CAACkwF,MAArB;AACA,WAAKuC,SAAL,GAAiBzyF,MAAM,CAACyyF,SAAxB;AACA,WAAKX,OAAL,GAAe9xF,MAAM,CAAC8xF,OAAtB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM1uF,IAAI,+EAAV;;AAEAA,MAAAA,IAAI,CAACoO,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKwf,MAAL,CAAYvf,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAMogB,KAAK,GAAG,KAAKX,MAAL,CAAazf,CAAb,CAAd;AACAqR,QAAAA,IAAI,CAACoO,MAAL,CAAYjgB,IAAZ,CAAkB4gB,KAAK,CAACuP,OAAN,EAAlB;AAEA;;AAEDte,MAAAA,IAAI,CAAC8sF,MAAL,GAAc,KAAKA,MAAnB;AACA9sF,MAAAA,IAAI,CAACqvF,SAAL,GAAiB,KAAKA,SAAtB;AACArvF,MAAAA,IAAI,CAAC0uF,OAAL,GAAe,KAAKA,OAApB;AAEA,aAAO1uF,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,qFAAgBA,IAAhB;;AAEA,WAAK75E,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAAC75E,MAAL,CAAYvf,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAMogB,KAAK,GAAGk5E,IAAI,CAAC75E,MAAL,CAAazf,CAAb,CAAd;AACA,aAAKyf,MAAL,CAAYjgB,IAAZ,CAAkB,IAAI4c,OAAJ,GAAcpQ,SAAd,CAAyBoU,KAAzB,CAAlB;AAEA;;AAED,WAAK+9E,MAAL,GAAc7E,IAAI,CAAC6E,MAAnB;AACA,WAAKuC,SAAL,GAAiBpH,IAAI,CAACoH,SAAtB;AACA,WAAKX,OAAL,GAAezG,IAAI,CAACyG,OAApB;AAEA,aAAO,IAAP;AAEA;;;;EArK6BpD,K;AAyK/B;AACA;AACA;AACA;;;AAEA,SAASkE,UAAT,CAAqB3+F,CAArB,EAAwBygB,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCgR,EAApC,EAAyC;AAExC,MAAMrR,EAAE,GAAG,CAAEK,EAAE,GAAGF,EAAP,IAAc,GAAzB;AACA,MAAMpb,EAAE,GAAG,CAAEssB,EAAE,GAAGjR,EAAP,IAAc,GAAzB;AACA,MAAMk7E,EAAE,GAAG57F,CAAC,GAAGA,CAAf;AACA,MAAMm+F,EAAE,GAAGn+F,CAAC,GAAG47F,EAAf;AACA,SAAO,CAAE,IAAIl7E,EAAJ,GAAS,IAAIC,EAAb,GAAkBL,EAAlB,GAAuBjb,EAAzB,IAAgC84F,EAAhC,GAAqC,CAAE,CAAE,CAAF,GAAMz9E,EAAN,GAAW,IAAIC,EAAf,GAAoB,IAAIL,EAAxB,GAA6Bjb,EAA/B,IAAsCu2F,EAA3E,GAAgFt7E,EAAE,GAAGtgB,CAArF,GAAyF0gB,EAAhG;AAEA,C,CAED;;;AAEA,SAASk+E,iBAAT,CAA4B5+F,CAA5B,EAA+B6L,CAA/B,EAAmC;AAElC,MAAM0gE,CAAC,GAAG,IAAIvsE,CAAd;AACA,SAAOusE,CAAC,GAAGA,CAAJ,GAAQ1gE,CAAf;AAEA;;AAED,SAASgzF,iBAAT,CAA4B7+F,CAA5B,EAA+B6L,CAA/B,EAAmC;AAElC,SAAO,KAAM,IAAI7L,CAAV,IAAgBA,CAAhB,GAAoB6L,CAA3B;AAEA;;AAED,SAASizF,iBAAT,CAA4B9+F,CAA5B,EAA+B6L,CAA/B,EAAmC;AAElC,SAAO7L,CAAC,GAAGA,CAAJ,GAAQ6L,CAAf;AAEA;;AAED,SAASkzF,eAAT,CAA0B/+F,CAA1B,EAA6BygB,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAA0C;AAEzC,SAAOi+E,iBAAiB,CAAE5+F,CAAF,EAAKygB,EAAL,CAAjB,GAA6Bo+E,iBAAiB,CAAE7+F,CAAF,EAAK0gB,EAAL,CAA9C,GACNo+E,iBAAiB,CAAE9+F,CAAF,EAAK2gB,EAAL,CADlB;AAGA,C,CAED;;;AAEA,SAASq+E,aAAT,CAAwBh/F,CAAxB,EAA2B6L,CAA3B,EAA+B;AAE9B,MAAM0gE,CAAC,GAAG,IAAIvsE,CAAd;AACA,SAAOusE,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAY1gE,CAAnB;AAEA;;AAED,SAASozF,aAAT,CAAwBj/F,CAAxB,EAA2B6L,CAA3B,EAA+B;AAE9B,MAAM0gE,CAAC,GAAG,IAAIvsE,CAAd;AACA,SAAO,IAAIusE,CAAJ,GAAQA,CAAR,GAAYvsE,CAAZ,GAAgB6L,CAAvB;AAEA;;AAED,SAASqzF,aAAT,CAAwBl/F,CAAxB,EAA2B6L,CAA3B,EAA+B;AAE9B,SAAO,KAAM,IAAI7L,CAAV,IAAgBA,CAAhB,GAAoBA,CAApB,GAAwB6L,CAA/B;AAEA;;AAED,SAASszF,aAAT,CAAwBn/F,CAAxB,EAA2B6L,CAA3B,EAA+B;AAE9B,SAAO7L,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAY6L,CAAnB;AAEA;;AAED,SAASuzF,WAAT,CAAsBp/F,CAAtB,EAAyBygB,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCgR,EAArC,EAA0C;AAEzC,SAAOqtE,aAAa,CAAEh/F,CAAF,EAAKygB,EAAL,CAAb,GAAyBw+E,aAAa,CAAEj/F,CAAF,EAAK0gB,EAAL,CAAtC,GAAkDw+E,aAAa,CAAEl/F,CAAF,EAAK2gB,EAAL,CAA/D,GACNw+E,aAAa,CAAEn/F,CAAF,EAAK2xB,EAAL,CADd;AAGA;;IAEK0tE,gB;;;;;AAEL,8BAA8F;AAAA;;AAAA,QAAjF/+E,EAAiF,uEAA5E,IAAItc,OAAJ,EAA4E;AAAA,QAA7DqB,EAA6D,uEAAxD,IAAIrB,OAAJ,EAAwD;AAAA,QAAzCsB,EAAyC,uEAApC,IAAItB,OAAJ,EAAoC;AAAA,QAArBs7F,EAAqB,uEAAhB,IAAIt7F,OAAJ,EAAgB;;AAAA;;AAE7F;AAEA,YAAKu7F,kBAAL,GAA0B,IAA1B;AAEA,YAAKviG,IAAL,GAAY,kBAAZ;AAEA,YAAKsjB,EAAL,GAAUA,EAAV;AACA,YAAKjb,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AACA,YAAKg6F,EAAL,GAAUA,EAAV;AAX6F;AAa7F;;;;WAED,kBAAUt/F,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAI32F,OAAJ,EAAgB;AAE7C,UAAMka,KAAK,GAAGy8E,cAAd;AAEA,UAAMr6E,EAAE,GAAG,KAAKA,EAAhB;AAAA,UAAoBjb,EAAE,GAAG,KAAKA,EAA9B;AAAA,UAAkCC,EAAE,GAAG,KAAKA,EAA5C;AAAA,UAAgDg6F,EAAE,GAAG,KAAKA,EAA1D;AAEAphF,MAAAA,KAAK,CAACpb,GAAN,CACCs8F,WAAW,CAAEp/F,CAAF,EAAKsgB,EAAE,CAAC9gB,CAAR,EAAW6F,EAAE,CAAC7F,CAAd,EAAiB8F,EAAE,CAAC9F,CAApB,EAAuB8/F,EAAE,CAAC9/F,CAA1B,CADZ,EAEC4/F,WAAW,CAAEp/F,CAAF,EAAKsgB,EAAE,CAACxgB,CAAR,EAAWuF,EAAE,CAACvF,CAAd,EAAiBwF,EAAE,CAACxF,CAApB,EAAuBw/F,EAAE,CAACx/F,CAA1B,CAFZ;AAKA,aAAOoe,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,iFAAYA,MAAZ;;AAEA,WAAKuU,EAAL,CAAQnU,IAAR,CAAcJ,MAAM,CAACuU,EAArB;AACA,WAAKjb,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AACA,WAAKg6F,EAAL,CAAQnzF,IAAR,CAAcJ,MAAM,CAACuzF,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMnwF,IAAI,+EAAV;;AAEAA,MAAAA,IAAI,CAACmR,EAAL,GAAU,KAAKA,EAAL,CAAQmN,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAACmwF,EAAL,GAAU,KAAKA,EAAL,CAAQ7xE,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,qFAAgBA,IAAhB;;AAEA,WAAK92E,EAAL,CAAQxW,SAAR,CAAmBstF,IAAI,CAAC92E,EAAxB;AACA,WAAKjb,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AACA,WAAKg6F,EAAL,CAAQx1F,SAAR,CAAmBstF,IAAI,CAACkI,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EArE6B7E,K;;IAyEzB+E,iB;;;;;AAEL,+BAA8F;AAAA;;AAAA,QAAjFl/E,EAAiF,uEAA5E,IAAIpG,OAAJ,EAA4E;AAAA,QAA7D7U,EAA6D,uEAAxD,IAAI6U,OAAJ,EAAwD;AAAA,QAAzC5U,EAAyC,uEAApC,IAAI4U,OAAJ,EAAoC;AAAA,QAArBolF,EAAqB,uEAAhB,IAAIplF,OAAJ,EAAgB;;AAAA;;AAE7F;AAEA,YAAKulF,mBAAL,GAA2B,IAA3B;AAEA,YAAKziG,IAAL,GAAY,mBAAZ;AAEA,YAAKsjB,EAAL,GAAUA,EAAV;AACA,YAAKjb,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AACA,YAAKg6F,EAAL,GAAUA,EAAV;AAX6F;AAa7F;;;;WAED,kBAAUt/F,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAIzgF,OAAJ,EAAgB;AAE7C,UAAMgE,KAAK,GAAGy8E,cAAd;AAEA,UAAMr6E,EAAE,GAAG,KAAKA,EAAhB;AAAA,UAAoBjb,EAAE,GAAG,KAAKA,EAA9B;AAAA,UAAkCC,EAAE,GAAG,KAAKA,EAA5C;AAAA,UAAgDg6F,EAAE,GAAG,KAAKA,EAA1D;AAEAphF,MAAAA,KAAK,CAACpb,GAAN,CACCs8F,WAAW,CAAEp/F,CAAF,EAAKsgB,EAAE,CAAC9gB,CAAR,EAAW6F,EAAE,CAAC7F,CAAd,EAAiB8F,EAAE,CAAC9F,CAApB,EAAuB8/F,EAAE,CAAC9/F,CAA1B,CADZ,EAEC4/F,WAAW,CAAEp/F,CAAF,EAAKsgB,EAAE,CAACxgB,CAAR,EAAWuF,EAAE,CAACvF,CAAd,EAAiBwF,EAAE,CAACxF,CAApB,EAAuBw/F,EAAE,CAACx/F,CAA1B,CAFZ,EAGCs/F,WAAW,CAAEp/F,CAAF,EAAKsgB,EAAE,CAAC5N,CAAR,EAAWrN,EAAE,CAACqN,CAAd,EAAiBpN,EAAE,CAACoN,CAApB,EAAuB4sF,EAAE,CAAC5sF,CAA1B,CAHZ;AAMA,aAAOwL,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,kFAAYA,MAAZ;;AAEA,WAAKuU,EAAL,CAAQnU,IAAR,CAAcJ,MAAM,CAACuU,EAArB;AACA,WAAKjb,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AACA,WAAKg6F,EAAL,CAAQnzF,IAAR,CAAcJ,MAAM,CAACuzF,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMnwF,IAAI,gFAAV;;AAEAA,MAAAA,IAAI,CAACmR,EAAL,GAAU,KAAKA,EAAL,CAAQmN,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAACmwF,EAAL,GAAU,KAAKA,EAAL,CAAQ7xE,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,sFAAgBA,IAAhB;;AAEA,WAAK92E,EAAL,CAAQxW,SAAR,CAAmBstF,IAAI,CAAC92E,EAAxB;AACA,WAAKjb,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AACA,WAAKg6F,EAAL,CAAQx1F,SAAR,CAAmBstF,IAAI,CAACkI,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EAtE8B7E,K;;IA0E1BiF,S;;;;;AAEL,uBAAsD;AAAA;;AAAA,QAAzCr6F,EAAyC,uEAApC,IAAIrB,OAAJ,EAAoC;AAAA,QAArBsB,EAAqB,uEAAhB,IAAItB,OAAJ,EAAgB;;AAAA;;AAErD;AAEA,YAAK27F,WAAL,GAAmB,IAAnB;AAEA,YAAK3iG,IAAL,GAAY,WAAZ;AAEA,YAAKqI,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AATqD;AAWrD;;;;WAED,kBAAUtF,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAI32F,OAAJ,EAAgB;AAE7C,UAAMka,KAAK,GAAGy8E,cAAd;;AAEA,UAAK36F,CAAC,KAAK,CAAX,EAAe;AAEdke,QAAAA,KAAK,CAAC/R,IAAN,CAAY,KAAK7G,EAAjB;AAEA,OAJD,MAIO;AAEN4Y,QAAAA,KAAK,CAAC/R,IAAN,CAAY,KAAK7G,EAAjB,EAAsB6W,GAAtB,CAA2B,KAAK9W,EAAhC;AACA6Y,QAAAA,KAAK,CAAC1Z,cAAN,CAAsBxE,CAAtB,EAA0B4d,GAA1B,CAA+B,KAAKvY,EAApC;AAEA;;AAED,aAAO6Y,KAAP;AAEA,K,CAED;;;;WACA,oBAAYrB,CAAZ,EAAe89E,cAAf,EAAgC;AAE/B,aAAO,KAAKE,QAAL,CAAeh+E,CAAf,EAAkB89E,cAAlB,CAAP;AAEA;;;WAED,oBAAY36F,CAAZ,EAAe26F,cAAf,EAAgC;AAE/B,UAAMl/D,OAAO,GAAGk/D,cAAc,IAAI,IAAI32F,OAAJ,EAAlC;AAEAy3B,MAAAA,OAAO,CAACtvB,IAAR,CAAc,KAAK7G,EAAnB,EAAwB6W,GAAxB,CAA6B,KAAK9W,EAAlC,EAAuC5B,SAAvC;AAEA,aAAOg4B,OAAP;AAEA;;;WAED,cAAM1vB,MAAN,EAAe;AAEd,0EAAYA,MAAZ;;AAEA,WAAK1G,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM6J,IAAI,wEAAV;;AAEAA,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,8EAAgBA,IAAhB;;AAEA,WAAK/xF,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EAlFsBm1F,K;;IAsFlBmF,U;;;;;AAEL,wBAAsD;AAAA;;AAAA,QAAzCv6F,EAAyC,uEAApC,IAAI6U,OAAJ,EAAoC;AAAA,QAArB5U,EAAqB,uEAAhB,IAAI4U,OAAJ,EAAgB;;AAAA;;AAErD;AAEA,YAAK2lF,YAAL,GAAoB,IAApB;AAEA,YAAK7iG,IAAL,GAAY,YAAZ;AAEA,YAAKqI,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AATqD;AAWrD;;;;WACD,kBAAUtF,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAIzgF,OAAJ,EAAgB;AAE7C,UAAMgE,KAAK,GAAGy8E,cAAd;;AAEA,UAAK36F,CAAC,KAAK,CAAX,EAAe;AAEdke,QAAAA,KAAK,CAAC/R,IAAN,CAAY,KAAK7G,EAAjB;AAEA,OAJD,MAIO;AAEN4Y,QAAAA,KAAK,CAAC/R,IAAN,CAAY,KAAK7G,EAAjB,EAAsB6W,GAAtB,CAA2B,KAAK9W,EAAhC;AACA6Y,QAAAA,KAAK,CAAC1Z,cAAN,CAAsBxE,CAAtB,EAA0B4d,GAA1B,CAA+B,KAAKvY,EAApC;AAEA;;AAED,aAAO6Y,KAAP;AAEA,K,CACD;;;;WACA,oBAAYrB,CAAZ,EAAe89E,cAAf,EAAgC;AAE/B,aAAO,KAAKE,QAAL,CAAeh+E,CAAf,EAAkB89E,cAAlB,CAAP;AAEA;;;WACD,cAAM5uF,MAAN,EAAe;AAEd,2EAAYA,MAAZ;;AAEA,WAAK1G,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AAEA,aAAO,IAAP;AAEA;;;WACD,kBAAS;AAER,UAAM6J,IAAI,yEAAV;;AAEAA,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WACD,kBAAUioF,IAAV,EAAiB;AAEhB,+EAAgBA,IAAhB;;AAEA,WAAK/xF,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EAnEuBm1F,K;;IAuEnBqF,oB;;;;;AAEL,kCAA0E;AAAA;;AAAA,QAA7Dx/E,EAA6D,uEAAxD,IAAItc,OAAJ,EAAwD;AAAA,QAAzCqB,EAAyC,uEAApC,IAAIrB,OAAJ,EAAoC;AAAA,QAArBsB,EAAqB,uEAAhB,IAAItB,OAAJ,EAAgB;;AAAA;;AAEzE;AAEA,YAAK+7F,sBAAL,GAA8B,IAA9B;AAEA,YAAK/iG,IAAL,GAAY,sBAAZ;AAEA,YAAKsjB,EAAL,GAAUA,EAAV;AACA,YAAKjb,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AAVyE;AAYzE;;;;WAED,kBAAUtF,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAI32F,OAAJ,EAAgB;AAE7C,UAAMka,KAAK,GAAGy8E,cAAd;AAEA,UAAMr6E,EAAE,GAAG,KAAKA,EAAhB;AAAA,UAAoBjb,EAAE,GAAG,KAAKA,EAA9B;AAAA,UAAkCC,EAAE,GAAG,KAAKA,EAA5C;AAEA4Y,MAAAA,KAAK,CAACpb,GAAN,CACCi8F,eAAe,CAAE/+F,CAAF,EAAKsgB,EAAE,CAAC9gB,CAAR,EAAW6F,EAAE,CAAC7F,CAAd,EAAiB8F,EAAE,CAAC9F,CAApB,CADhB,EAECu/F,eAAe,CAAE/+F,CAAF,EAAKsgB,EAAE,CAACxgB,CAAR,EAAWuF,EAAE,CAACvF,CAAd,EAAiBwF,EAAE,CAACxF,CAApB,CAFhB;AAKA,aAAOoe,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,qFAAYA,MAAZ;;AAEA,WAAKuU,EAAL,CAAQnU,IAAR,CAAcJ,MAAM,CAACuU,EAArB;AACA,WAAKjb,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM6J,IAAI,mFAAV;;AAEAA,MAAAA,IAAI,CAACmR,EAAL,GAAU,KAAKA,EAAL,CAAQmN,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,yFAAgBA,IAAhB;;AAEA,WAAK92E,EAAL,CAAQxW,SAAR,CAAmBstF,IAAI,CAAC92E,EAAxB;AACA,WAAKjb,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EAjEiCm1F,K;;IAqE7BuF,qB;;;;;AAEL,mCAA0E;AAAA;;AAAA,QAA7D1/E,EAA6D,uEAAxD,IAAIpG,OAAJ,EAAwD;AAAA,QAAzC7U,EAAyC,uEAApC,IAAI6U,OAAJ,EAAoC;AAAA,QAArB5U,EAAqB,uEAAhB,IAAI4U,OAAJ,EAAgB;;AAAA;;AAEzE;AAEA,YAAK+lF,uBAAL,GAA+B,IAA/B;AAEA,YAAKjjG,IAAL,GAAY,uBAAZ;AAEA,YAAKsjB,EAAL,GAAUA,EAAV;AACA,YAAKjb,EAAL,GAAUA,EAAV;AACA,YAAKC,EAAL,GAAUA,EAAV;AAVyE;AAYzE;;;;WAED,kBAAUtF,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAIzgF,OAAJ,EAAgB;AAE7C,UAAMgE,KAAK,GAAGy8E,cAAd;AAEA,UAAMr6E,EAAE,GAAG,KAAKA,EAAhB;AAAA,UAAoBjb,EAAE,GAAG,KAAKA,EAA9B;AAAA,UAAkCC,EAAE,GAAG,KAAKA,EAA5C;AAEA4Y,MAAAA,KAAK,CAACpb,GAAN,CACCi8F,eAAe,CAAE/+F,CAAF,EAAKsgB,EAAE,CAAC9gB,CAAR,EAAW6F,EAAE,CAAC7F,CAAd,EAAiB8F,EAAE,CAAC9F,CAApB,CADhB,EAECu/F,eAAe,CAAE/+F,CAAF,EAAKsgB,EAAE,CAACxgB,CAAR,EAAWuF,EAAE,CAACvF,CAAd,EAAiBwF,EAAE,CAACxF,CAApB,CAFhB,EAGCi/F,eAAe,CAAE/+F,CAAF,EAAKsgB,EAAE,CAAC5N,CAAR,EAAWrN,EAAE,CAACqN,CAAd,EAAiBpN,EAAE,CAACoN,CAApB,CAHhB;AAMA,aAAOwL,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,sFAAYA,MAAZ;;AAEA,WAAKuU,EAAL,CAAQnU,IAAR,CAAcJ,MAAM,CAACuU,EAArB;AACA,WAAKjb,EAAL,CAAQ8G,IAAR,CAAcJ,MAAM,CAAC1G,EAArB;AACA,WAAKC,EAAL,CAAQ6G,IAAR,CAAcJ,MAAM,CAACzG,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAM6J,IAAI,oFAAV;;AAEAA,MAAAA,IAAI,CAACmR,EAAL,GAAU,KAAKA,EAAL,CAAQmN,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC9J,EAAL,GAAU,KAAKA,EAAL,CAAQooB,OAAR,EAAV;AACAte,MAAAA,IAAI,CAAC7J,EAAL,GAAU,KAAKA,EAAL,CAAQmoB,OAAR,EAAV;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,0FAAgBA,IAAhB;;AAEA,WAAK92E,EAAL,CAAQxW,SAAR,CAAmBstF,IAAI,CAAC92E,EAAxB;AACA,WAAKjb,EAAL,CAAQyE,SAAR,CAAmBstF,IAAI,CAAC/xF,EAAxB;AACA,WAAKC,EAAL,CAAQwE,SAAR,CAAmBstF,IAAI,CAAC9xF,EAAxB;AAEA,aAAO,IAAP;AAEA;;;;EAlEkCm1F,K;;IAsE9ByF,W;;;;;AAEL,yBAA2B;AAAA;;AAAA,QAAd3iF,MAAc,uEAAL,EAAK;;AAAA;;AAE1B;AAEA,YAAK4iF,aAAL,GAAqB,IAArB;AAEA,YAAKnjG,IAAL,GAAY,aAAZ;AAEA,YAAKugB,MAAL,GAAcA,MAAd;AAR0B;AAU1B;;;;WAED,kBAAUvd,CAAV,EAA8C;AAAA,UAAjC26F,cAAiC,uEAAhB,IAAI32F,OAAJ,EAAgB;AAE7C,UAAMka,KAAK,GAAGy8E,cAAd;AAEA,UAAMp9E,MAAM,GAAG,KAAKA,MAApB;AACA,UAAM1R,CAAC,GAAG,CAAE0R,MAAM,CAACvf,MAAP,GAAgB,CAAlB,IAAwBgC,CAAlC;AAEA,UAAM0+F,QAAQ,GAAGrgG,IAAI,CAACuC,KAAL,CAAYiL,CAAZ,CAAjB;AACA,UAAMy/C,MAAM,GAAGz/C,CAAC,GAAG6yF,QAAnB;AAEA,UAAMj+E,EAAE,GAAGlD,MAAM,CAAEmhF,QAAQ,KAAK,CAAb,GAAiBA,QAAjB,GAA4BA,QAAQ,GAAG,CAAzC,CAAjB;AACA,UAAMh+E,EAAE,GAAGnD,MAAM,CAAEmhF,QAAF,CAAjB;AACA,UAAM/9E,EAAE,GAAGpD,MAAM,CAAEmhF,QAAQ,GAAGnhF,MAAM,CAACvf,MAAP,GAAgB,CAA3B,GAA+Buf,MAAM,CAACvf,MAAP,GAAgB,CAA/C,GAAmD0gG,QAAQ,GAAG,CAAhE,CAAjB;AACA,UAAM/sE,EAAE,GAAGpU,MAAM,CAAEmhF,QAAQ,GAAGnhF,MAAM,CAACvf,MAAP,GAAgB,CAA3B,GAA+Buf,MAAM,CAACvf,MAAP,GAAgB,CAA/C,GAAmD0gG,QAAQ,GAAG,CAAhE,CAAjB;AAEAxgF,MAAAA,KAAK,CAACpb,GAAN,CACC67F,UAAU,CAAErzC,MAAF,EAAU7qC,EAAE,CAACjhB,CAAb,EAAgBkhB,EAAE,CAAClhB,CAAnB,EAAsBmhB,EAAE,CAACnhB,CAAzB,EAA4BmyB,EAAE,CAACnyB,CAA/B,CADX,EAECm/F,UAAU,CAAErzC,MAAF,EAAU7qC,EAAE,CAAC3gB,CAAb,EAAgB4gB,EAAE,CAAC5gB,CAAnB,EAAsB6gB,EAAE,CAAC7gB,CAAzB,EAA4B6xB,EAAE,CAAC7xB,CAA/B,CAFX;AAKA,aAAOoe,KAAP;AAEA;;;WAED,cAAMnS,MAAN,EAAe;AAEd,4EAAYA,MAAZ;;AAEA,WAAKwR,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGgO,MAAM,CAACwR,MAAP,CAAcvf,MAAnC,EAA2CF,CAAC,GAAGC,CAA/C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,YAAMogB,KAAK,GAAGnS,MAAM,CAACwR,MAAP,CAAezf,CAAf,CAAd;AAEA,aAAKyf,MAAL,CAAYjgB,IAAZ,CAAkB4gB,KAAK,CAACtJ,KAAN,EAAlB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMzF,IAAI,0EAAV;;AAEAA,MAAAA,IAAI,CAACoO,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKwf,MAAL,CAAYvf,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAMogB,KAAK,GAAG,KAAKX,MAAL,CAAazf,CAAb,CAAd;AACAqR,QAAAA,IAAI,CAACoO,MAAL,CAAYjgB,IAAZ,CAAkB4gB,KAAK,CAACuP,OAAN,EAAlB;AAEA;;AAED,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,gFAAgBA,IAAhB;;AAEA,WAAK75E,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAAC75E,MAAL,CAAYvf,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAMogB,KAAK,GAAGk5E,IAAI,CAAC75E,MAAL,CAAazf,CAAb,CAAd;AACA,aAAKyf,MAAL,CAAYjgB,IAAZ,CAAkB,IAAI0G,OAAJ,GAAc8F,SAAd,CAAyBoU,KAAzB,CAAlB;AAEA;;AAED,aAAO,IAAP;AAEA;;;;EAxFwBu8E,K;;AA4F1B,IAAI2F,MAAM,GAAG,aAAax8F,MAAM,CAACC,MAAP,CAAc;AACvCC,EAAAA,SAAS,EAAE,IAD4B;AAEvCw5F,EAAAA,QAAQ,EAAEA,QAF6B;AAGvCiB,EAAAA,gBAAgB,EAAEA,gBAHqB;AAIvCc,EAAAA,gBAAgB,EAAEA,gBAJqB;AAKvCG,EAAAA,iBAAiB,EAAEA,iBALoB;AAMvC/C,EAAAA,YAAY,EAAEA,YANyB;AAOvCiD,EAAAA,SAAS,EAAEA,SAP4B;AAQvCE,EAAAA,UAAU,EAAEA,UAR2B;AASvCE,EAAAA,oBAAoB,EAAEA,oBATiB;AAUvCE,EAAAA,qBAAqB,EAAEA,qBAVgB;AAWvCE,EAAAA,WAAW,EAAEA;AAX0B,CAAd,CAA1B;AAcA;AACA;AACA;AACA;;IAEMG,S;;;;;AAEL,uBAAc;AAAA;;AAAA;;AAEb;AAEA,YAAKrjG,IAAL,GAAY,WAAZ;AAEA,YAAKsjG,MAAL,GAAc,EAAd;AACA,YAAKC,SAAL,GAAiB,KAAjB,CAPa,CAOW;;AAPX;AASb;;;;WAED,aAAKC,KAAL,EAAa;AAEZ,WAAKF,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA;;;WAED,qBAAY;AAEX;AACA,UAAMC,UAAU,GAAG,KAAKH,MAAL,CAAa,CAAb,EAAiBzF,QAAjB,CAA2B,CAA3B,CAAnB;AACA,UAAM6F,QAAQ,GAAG,KAAKJ,MAAL,CAAa,KAAKA,MAAL,CAAYtiG,MAAZ,GAAqB,CAAlC,EAAsC68F,QAAtC,CAAgD,CAAhD,CAAjB;;AAEA,UAAK,CAAE4F,UAAU,CAACrgF,MAAX,CAAmBsgF,QAAnB,CAAP,EAAuC;AAEtC,aAAKJ,MAAL,CAAYhjG,IAAZ,CAAkB,IAAIoiG,SAAJ,CAAegB,QAAf,EAAyBD,UAAzB,CAAlB;AAEA;AAED,K,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;;;;WAEA,kBAAUzgG,CAAV,EAAa26F,cAAb,EAA8B;AAE7B,UAAMryF,CAAC,GAAGtI,CAAC,GAAG,KAAK2gG,SAAL,EAAd;AACA,UAAMC,YAAY,GAAG,KAAKC,eAAL,EAArB;AACA,UAAI/iG,CAAC,GAAG,CAAR,CAJ6B,CAM7B;;AAEA,aAAQA,CAAC,GAAG8iG,YAAY,CAAC5iG,MAAzB,EAAkC;AAEjC,YAAK4iG,YAAY,CAAE9iG,CAAF,CAAZ,IAAqBwK,CAA1B,EAA8B;AAE7B,cAAMw4F,IAAI,GAAGF,YAAY,CAAE9iG,CAAF,CAAZ,GAAoBwK,CAAjC;AACA,cAAMk4F,KAAK,GAAG,KAAKF,MAAL,CAAaxiG,CAAb,CAAd;AAEA,cAAM49F,aAAa,GAAG8E,KAAK,CAACG,SAAN,EAAtB;AACA,cAAM9jF,CAAC,GAAG6+E,aAAa,KAAK,CAAlB,GAAsB,CAAtB,GAA0B,IAAIoF,IAAI,GAAGpF,aAA/C;AAEA,iBAAO8E,KAAK,CAACzF,UAAN,CAAkBl+E,CAAlB,EAAqB89E,cAArB,CAAP;AAEA;;AAED78F,QAAAA,CAAC;AAED;;AAED,aAAO,IAAP,CA1B6B,CA4B7B;AAEA,K,CAED;AACA;AACA;;;;WAEA,qBAAY;AAEX,UAAMijG,IAAI,GAAG,KAAKF,eAAL,EAAb;AACA,aAAOE,IAAI,CAAEA,IAAI,CAAC/iG,MAAL,GAAc,CAAhB,CAAX;AAEA,K,CAED;;;;WACA,4BAAmB;AAElB,WAAKgU,WAAL,GAAmB,IAAnB;AACA,WAAKgvF,YAAL,GAAoB,IAApB;AACA,WAAKH,eAAL;AAEA,K,CAED;AACA;;;;WAEA,2BAAkB;AAEjB;AAEA,UAAK,KAAKG,YAAL,IAAqB,KAAKA,YAAL,CAAkBhjG,MAAlB,KAA6B,KAAKsiG,MAAL,CAAYtiG,MAAnE,EAA4E;AAE3E,eAAO,KAAKgjG,YAAZ;AAEA,OARgB,CAUjB;AACA;;;AAEA,UAAMhG,OAAO,GAAG,EAAhB;AACA,UAAIiG,IAAI,GAAG,CAAX;;AAEA,WAAM,IAAInjG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKuiG,MAAL,CAAYtiG,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtDmjG,QAAAA,IAAI,IAAI,KAAKX,MAAL,CAAaxiG,CAAb,EAAiB6iG,SAAjB,EAAR;AACA3F,QAAAA,OAAO,CAAC19F,IAAR,CAAc2jG,IAAd;AAEA;;AAED,WAAKD,YAAL,GAAoBhG,OAApB;AAEA,aAAOA,OAAP;AAEA;;;WAED,2BAAkC;AAAA,UAAjBF,SAAiB,uEAAL,EAAK;AAEjC,UAAMv9E,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIzf,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIg9F,SAAtB,EAAiCh9F,CAAC,EAAlC,EAAwC;AAEvCyf,QAAAA,MAAM,CAACjgB,IAAP,CAAa,KAAKu9F,QAAL,CAAe/8F,CAAC,GAAGg9F,SAAnB,CAAb;AAEA;;AAED,UAAK,KAAKyF,SAAV,EAAsB;AAErBhjF,QAAAA,MAAM,CAACjgB,IAAP,CAAaigB,MAAM,CAAE,CAAF,CAAnB;AAEA;;AAED,aAAOA,MAAP;AAEA;;;WAED,qBAA4B;AAAA,UAAjBu9E,SAAiB,uEAAL,EAAK;AAE3B,UAAMv9E,MAAM,GAAG,EAAf;AACA,UAAI69E,IAAJ;;AAEA,WAAM,IAAIt9F,CAAC,GAAG,CAAR,EAAWwiG,MAAM,GAAG,KAAKA,MAA/B,EAAuCxiG,CAAC,GAAGwiG,MAAM,CAACtiG,MAAlD,EAA0DF,CAAC,EAA3D,EAAiE;AAEhE,YAAM0iG,KAAK,GAAGF,MAAM,CAAExiG,CAAF,CAApB;AACA,YAAMisE,UAAU,GAAGy2B,KAAK,CAACtD,cAAN,GAAuBpC,SAAS,GAAG,CAAnC,GACd0F,KAAK,CAACb,WAAN,IAAqBa,KAAK,CAACX,YAA7B,GAA8C,CAA9C,GACCW,KAAK,CAACL,aAAN,GAAsBrF,SAAS,GAAG0F,KAAK,CAACjjF,MAAN,CAAavf,MAA/C,GACC88F,SAHL;AAKA,YAAMoG,GAAG,GAAGV,KAAK,CAACW,SAAN,CAAiBp3B,UAAjB,CAAZ;;AAEA,aAAM,IAAIvpD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0gF,GAAG,CAACljG,MAAzB,EAAiCwiB,CAAC,EAAlC,EAAwC;AAEvC,cAAMtC,KAAK,GAAGgjF,GAAG,CAAE1gF,CAAF,CAAjB;AAEA,cAAK46E,IAAI,IAAIA,IAAI,CAACh7E,MAAL,CAAalC,KAAb,CAAb,EAAoC,SAJG,CAIO;;AAE9CX,UAAAA,MAAM,CAACjgB,IAAP,CAAa4gB,KAAb;AACAk9E,UAAAA,IAAI,GAAGl9E,KAAP;AAEA;AAED;;AAED,UAAK,KAAKqiF,SAAL,IAAkBhjF,MAAM,CAACvf,MAAP,GAAgB,CAAlC,IAAuC,CAAEuf,MAAM,CAAEA,MAAM,CAACvf,MAAP,GAAgB,CAAlB,CAAN,CAA4BoiB,MAA5B,CAAoC7C,MAAM,CAAE,CAAF,CAA1C,CAA9C,EAAkG;AAEjGA,QAAAA,MAAM,CAACjgB,IAAP,CAAaigB,MAAM,CAAE,CAAF,CAAnB;AAEA;;AAED,aAAOA,MAAP;AAEA;;;WAED,cAAMxR,MAAN,EAAe;AAEd,0EAAYA,MAAZ;;AAEA,WAAKu0F,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIxiG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGgO,MAAM,CAACu0F,MAAP,CAActiG,MAAnC,EAA2CF,CAAC,GAAGC,CAA/C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,YAAM0iG,KAAK,GAAGz0F,MAAM,CAACu0F,MAAP,CAAexiG,CAAf,CAAd;AAEA,aAAKwiG,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAK,CAAC5rF,KAAN,EAAlB;AAEA;;AAED,WAAK2rF,SAAL,GAAiBx0F,MAAM,CAACw0F,SAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMpxF,IAAI,wEAAV;;AAEAA,MAAAA,IAAI,CAACoxF,SAAL,GAAiB,KAAKA,SAAtB;AACApxF,MAAAA,IAAI,CAACmxF,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIxiG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKuiG,MAAL,CAAYtiG,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAM0iG,KAAK,GAAG,KAAKF,MAAL,CAAaxiG,CAAb,CAAd;AACAqR,QAAAA,IAAI,CAACmxF,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAK,CAACpuF,MAAN,EAAlB;AAEA;;AAED,aAAOjD,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,8EAAgBA,IAAhB;;AAEA,WAAKmJ,SAAL,GAAiBnJ,IAAI,CAACmJ,SAAtB;AACA,WAAKD,MAAL,GAAc,EAAd;;AAEA,WAAM,IAAIxiG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACkJ,MAAL,CAAYtiG,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,YAAM0iG,KAAK,GAAGpJ,IAAI,CAACkJ,MAAL,CAAaxiG,CAAb,CAAd;AACA,aAAKwiG,MAAL,CAAYhjG,IAAZ,CAAkB,IAAI8iG,MAAM,CAAEI,KAAK,CAACxjG,IAAR,CAAV,GAA2BokG,QAA3B,CAAqCZ,KAArC,CAAlB;AAEA;;AAED,aAAO,IAAP;AAEA;;;;EA9OsB/F,K;;IAkPlB4G,I;;;;;AAEL,gBAAa9jF,MAAb,EAAsB;AAAA;;AAAA;;AAErB;AAEA,YAAKvgB,IAAL,GAAY,MAAZ;AAEA,YAAKskG,YAAL,GAAoB,IAAIt9F,OAAJ,EAApB;;AAEA,QAAKuZ,MAAL,EAAc;AAEb,cAAK4C,aAAL,CAAoB5C,MAApB;AAEA;;AAZoB;AAcrB;;;;WAED,uBAAeA,MAAf,EAAwB;AAEvB,WAAKgkF,MAAL,CAAahkF,MAAM,CAAE,CAAF,CAAN,CAAY/d,CAAzB,EAA4B+d,MAAM,CAAE,CAAF,CAAN,CAAYzd,CAAxC;;AAEA,WAAM,IAAIhC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGwf,MAAM,CAACvf,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,aAAK0jG,MAAL,CAAajkF,MAAM,CAAEzf,CAAF,CAAN,CAAY0B,CAAzB,EAA4B+d,MAAM,CAAEzf,CAAF,CAAN,CAAYgC,CAAxC;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAQN,CAAR,EAAWM,CAAX,EAAe;AAEd,WAAKwhG,YAAL,CAAkBx+F,GAAlB,CAAuBtD,CAAvB,EAA0BM,CAA1B,EAFc,CAEiB;;AAE/B,aAAO,IAAP;AAEA;;;WAED,gBAAQN,CAAR,EAAWM,CAAX,EAAe;AAEd,UAAM0gG,KAAK,GAAG,IAAId,SAAJ,CAAe,KAAK4B,YAAL,CAAkB1sF,KAAlB,EAAf,EAA0C,IAAI5Q,OAAJ,CAAaxE,CAAb,EAAgBM,CAAhB,CAA1C,CAAd;AACA,WAAKwgG,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA,WAAKc,YAAL,CAAkBx+F,GAAlB,CAAuBtD,CAAvB,EAA0BM,CAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkB2hG,IAAlB,EAAwBC,IAAxB,EAA8BhF,EAA9B,EAAkCC,EAAlC,EAAuC;AAEtC,UAAM6D,KAAK,GAAG,IAAIV,oBAAJ,CACb,KAAKwB,YAAL,CAAkB1sF,KAAlB,EADa,EAEb,IAAI5Q,OAAJ,CAAay9F,IAAb,EAAmBC,IAAnB,CAFa,EAGb,IAAI19F,OAAJ,CAAa04F,EAAb,EAAiBC,EAAjB,CAHa,CAAd;AAMA,WAAK2D,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA,WAAKc,YAAL,CAAkBx+F,GAAlB,CAAuB45F,EAAvB,EAA2BC,EAA3B;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAegF,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CpF,EAA3C,EAA+CC,EAA/C,EAAoD;AAEnD,UAAM6D,KAAK,GAAG,IAAInB,gBAAJ,CACb,KAAKiC,YAAL,CAAkB1sF,KAAlB,EADa,EAEb,IAAI5Q,OAAJ,CAAa29F,KAAb,EAAoBC,KAApB,CAFa,EAGb,IAAI59F,OAAJ,CAAa69F,KAAb,EAAoBC,KAApB,CAHa,EAIb,IAAI99F,OAAJ,CAAa04F,EAAb,EAAiBC,EAAjB,CAJa,CAAd;AAOA,WAAK2D,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA,WAAKc,YAAL,CAAkBx+F,GAAlB,CAAuB45F,EAAvB,EAA2BC,EAA3B;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYuE;AAAI;AAAhB,MAAsC;AAErC,UAAMa,IAAI,GAAG,CAAE,KAAKT,YAAL,CAAkB1sF,KAAlB,EAAF,EAA8BotF,MAA9B,CAAsCd,GAAtC,CAAb;AAEA,UAAMV,KAAK,GAAG,IAAIN,WAAJ,CAAiB6B,IAAjB,CAAd;AACA,WAAKzB,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA,WAAKc,YAAL,CAAkBn1F,IAAlB,CAAwB+0F,GAAG,CAAEA,GAAG,CAACljG,MAAJ,GAAa,CAAf,CAA3B;AAEA,aAAO,IAAP;AAEA;;;WAED,aAAK0+F,EAAL,EAASC,EAAT,EAAaY,OAAb,EAAsBT,WAAtB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA2D;AAE1D,UAAM1jF,EAAE,GAAG,KAAKgoF,YAAL,CAAkB9hG,CAA7B;AACA,UAAM+Z,EAAE,GAAG,KAAK+nF,YAAL,CAAkBxhG,CAA7B;AAEA,WAAKmiG,MAAL,CAAavF,EAAE,GAAGpjF,EAAlB,EAAsBqjF,EAAE,GAAGpjF,EAA3B,EAA+BgkF,OAA/B,EACCT,WADD,EACcC,SADd,EACyBC,UADzB;AAGA,aAAO,IAAP;AAEA;;;WAED,gBAAQN,EAAR,EAAYC,EAAZ,EAAgBY,OAAhB,EAAyBT,WAAzB,EAAsCC,SAAtC,EAAiDC,UAAjD,EAA8D;AAE7D,WAAKkF,UAAL,CAAiBxF,EAAjB,EAAqBC,EAArB,EAAyBY,OAAzB,EAAkCA,OAAlC,EAA2CT,WAA3C,EAAwDC,SAAxD,EAAmEC,UAAnE;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAASN,EAAT,EAAaC,EAAb,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,UAA3D,EAAuEC,SAAvE,EAAmF;AAElF,UAAM3jF,EAAE,GAAG,KAAKgoF,YAAL,CAAkB9hG,CAA7B;AACA,UAAM+Z,EAAE,GAAG,KAAK+nF,YAAL,CAAkBxhG,CAA7B;AAEA,WAAKoiG,UAAL,CAAiBxF,EAAE,GAAGpjF,EAAtB,EAA0BqjF,EAAE,GAAGpjF,EAA/B,EAAmCqjF,OAAnC,EAA4CC,OAA5C,EAAqDC,WAArD,EAAkEC,SAAlE,EAA6EC,UAA7E,EAAyFC,SAAzF;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYP,EAAZ,EAAgBC,EAAhB,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,WAAtC,EAAmDC,SAAnD,EAA8DC,UAA9D,EAA0EC,SAA1E,EAAsF;AAErF,UAAMuD,KAAK,GAAG,IAAI/D,YAAJ,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CC,WAA5C,EAAyDC,SAAzD,EAAoEC,UAApE,EAAgFC,SAAhF,CAAd;;AAEA,UAAK,KAAKqD,MAAL,CAAYtiG,MAAZ,GAAqB,CAA1B,EAA8B;AAE7B;AACA,YAAMmkG,UAAU,GAAG3B,KAAK,CAAC3F,QAAN,CAAgB,CAAhB,CAAnB;;AAEA,YAAK,CAAEsH,UAAU,CAAC/hF,MAAX,CAAmB,KAAKkhF,YAAxB,CAAP,EAAgD;AAE/C,eAAKE,MAAL,CAAaW,UAAU,CAAC3iG,CAAxB,EAA2B2iG,UAAU,CAACriG,CAAtC;AAEA;AAED;;AAED,WAAKwgG,MAAL,CAAYhjG,IAAZ,CAAkBkjG,KAAlB;AAEA,UAAM4B,SAAS,GAAG5B,KAAK,CAAC3F,QAAN,CAAgB,CAAhB,CAAlB;AACA,WAAKyG,YAAL,CAAkBn1F,IAAlB,CAAwBi2F,SAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMr2F,MAAN,EAAe;AAEd,qEAAYA,MAAZ;;AAEA,WAAKu1F,YAAL,CAAkBn1F,IAAlB,CAAwBJ,MAAM,CAACu1F,YAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMnyF,IAAI,mEAAV;;AAEAA,MAAAA,IAAI,CAACmyF,YAAL,GAAoB,KAAKA,YAAL,CAAkB7zE,OAAlB,EAApB;AAEA,aAAOte,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,yEAAgBA,IAAhB;;AAEA,WAAKkK,YAAL,CAAkBx3F,SAAlB,CAA6BstF,IAAI,CAACkK,YAAlC;AAEA,aAAO,IAAP;AAEA;;;;EAtLiBjB,S;;IA0LbgC,a;;;;;AAEL,2BAAwJ;AAAA;;AAAA,QAA3I9kF,MAA2I,uEAAlI,CAAE,IAAIvZ,OAAJ,CAAa,CAAb,EAAgB,GAAhB,CAAF,EAAyB,IAAIA,OAAJ,CAAa,GAAb,EAAkB,CAAlB,CAAzB,EAAgD,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAE,GAAlB,CAAhD,CAAkI;AAAA,QAAvDg4F,QAAuD,uEAA5C,EAA4C;AAAA,QAAxCsG,QAAwC,uEAA7B,CAA6B;AAAA,QAA1BC,SAA0B,uEAAdlkG,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAEvJ;AAEA,YAAKtB,IAAL,GAAY,eAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/Q,MAAAA,MAAM,EAAEA,MADS;AAEjBy+E,MAAAA,QAAQ,EAAEA,QAFO;AAGjBsG,MAAAA,QAAQ,EAAEA,QAHO;AAIjBC,MAAAA,SAAS,EAAEA;AAJM,KAAlB;AAOAvG,IAAAA,QAAQ,GAAG39F,IAAI,CAACuC,KAAL,CAAYo7F,QAAZ,CAAX,CAbuJ,CAevJ;;AAEAuG,IAAAA,SAAS,GAAGvjG,KAAK,CAAEujG,SAAF,EAAa,CAAb,EAAgBlkG,IAAI,CAACC,EAAL,GAAU,CAA1B,CAAjB,CAjBuJ,CAmBvJ;;AAEA,QAAMm+B,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM7F,GAAG,GAAG,EAAZ;AACA,QAAM4lE,WAAW,GAAG,EAApB;AACA,QAAM7lE,OAAO,GAAG,EAAhB,CAzBuJ,CA2BvJ;;AAEA,QAAM8lE,eAAe,GAAG,MAAMzG,QAA9B;AACA,QAAMjzB,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAM3H,EAAE,GAAG,IAAIvO,OAAJ,EAAX;AACA,QAAMoY,MAAM,GAAG,IAAIlC,OAAJ,EAAf;AACA,QAAMwoF,SAAS,GAAG,IAAIxoF,OAAJ,EAAlB;AACA,QAAMyoF,UAAU,GAAG,IAAIzoF,OAAJ,EAAnB;AACA,QAAIhV,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT,CApCuJ,CAsCvJ;;AAEA,SAAM,IAAIqb,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAMjD,MAAM,CAACvf,MAAP,GAAgB,CAAxC,EAA6CwiB,CAAC,EAA9C,EAAoD;AAEnD,cAASA,CAAT;AAEC,aAAK,CAAL;AAAW;AAEVtb,UAAAA,EAAE,GAAGqY,MAAM,CAAEiD,CAAC,GAAG,CAAN,CAAN,CAAgBhhB,CAAhB,GAAoB+d,MAAM,CAAEiD,CAAF,CAAN,CAAYhhB,CAArC;AACA2F,UAAAA,EAAE,GAAGoY,MAAM,CAAEiD,CAAC,GAAG,CAAN,CAAN,CAAgB1gB,CAAhB,GAAoByd,MAAM,CAAEiD,CAAF,CAAN,CAAY1gB,CAArC;AAEAsc,UAAAA,MAAM,CAAC5c,CAAP,GAAW2F,EAAE,GAAG,GAAhB;AACAiX,UAAAA,MAAM,CAACtc,CAAP,GAAW,CAAEoF,EAAb;AACAkX,UAAAA,MAAM,CAAC1J,CAAP,GAAWvN,EAAE,GAAG,GAAhB;AAEAw9F,UAAAA,UAAU,CAACx2F,IAAX,CAAiBiQ,MAAjB;AAEAA,UAAAA,MAAM,CAAC3Y,SAAP;AAEA++F,UAAAA,WAAW,CAACllG,IAAZ,CAAkB8e,MAAM,CAAC5c,CAAzB,EAA4B4c,MAAM,CAACtc,CAAnC,EAAsCsc,MAAM,CAAC1J,CAA7C;AAEA;;AAED,aAAO6K,MAAM,CAACvf,MAAP,GAAgB,CAAvB;AAA4B;AAE3BwkG,UAAAA,WAAW,CAACllG,IAAZ,CAAkBqlG,UAAU,CAACnjG,CAA7B,EAAgCmjG,UAAU,CAAC7iG,CAA3C,EAA8C6iG,UAAU,CAACjwF,CAAzD;AAEA;;AAED;AAAW;AAEVxN,UAAAA,EAAE,GAAGqY,MAAM,CAAEiD,CAAC,GAAG,CAAN,CAAN,CAAgBhhB,CAAhB,GAAoB+d,MAAM,CAAEiD,CAAF,CAAN,CAAYhhB,CAArC;AACA2F,UAAAA,EAAE,GAAGoY,MAAM,CAAEiD,CAAC,GAAG,CAAN,CAAN,CAAgB1gB,CAAhB,GAAoByd,MAAM,CAAEiD,CAAF,CAAN,CAAY1gB,CAArC;AAEAsc,UAAAA,MAAM,CAAC5c,CAAP,GAAW2F,EAAE,GAAG,GAAhB;AACAiX,UAAAA,MAAM,CAACtc,CAAP,GAAW,CAAEoF,EAAb;AACAkX,UAAAA,MAAM,CAAC1J,CAAP,GAAWvN,EAAE,GAAG,GAAhB;AAEAu9F,UAAAA,SAAS,CAACv2F,IAAV,CAAgBiQ,MAAhB;AAEAA,UAAAA,MAAM,CAAC5c,CAAP,IAAYmjG,UAAU,CAACnjG,CAAvB;AACA4c,UAAAA,MAAM,CAACtc,CAAP,IAAY6iG,UAAU,CAAC7iG,CAAvB;AACAsc,UAAAA,MAAM,CAAC1J,CAAP,IAAYiwF,UAAU,CAACjwF,CAAvB;AAEA0J,UAAAA,MAAM,CAAC3Y,SAAP;AAEA++F,UAAAA,WAAW,CAACllG,IAAZ,CAAkB8e,MAAM,CAAC5c,CAAzB,EAA4B4c,MAAM,CAACtc,CAAnC,EAAsCsc,MAAM,CAAC1J,CAA7C;AAEAiwF,UAAAA,UAAU,CAACx2F,IAAX,CAAiBu2F,SAAjB;AA5CF;AAgDA,KA1FsJ,CA4FvJ;;;AAEA,SAAM,IAAI5kG,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIk+F,QAAtB,EAAgCl+F,CAAC,EAAjC,EAAuC;AAEtC,UAAM0e,GAAG,GAAG8lF,QAAQ,GAAGxkG,CAAC,GAAG2kG,eAAJ,GAAsBF,SAA7C;AAEA,UAAMlgG,GAAG,GAAGhE,IAAI,CAACgE,GAAL,CAAUma,GAAV,CAAZ;AACA,UAAMpa,GAAG,GAAG/D,IAAI,CAAC+D,GAAL,CAAUoa,GAAV,CAAZ;;AAEA,WAAM,IAAIgE,GAAC,GAAG,CAAd,EAAiBA,GAAC,IAAMjD,MAAM,CAACvf,MAAP,GAAgB,CAAxC,EAA6CwiB,GAAC,EAA9C,EAAoD;AAEnD;AAEAuoD,QAAAA,MAAM,CAACvpE,CAAP,GAAW+d,MAAM,CAAEiD,GAAF,CAAN,CAAYhhB,CAAZ,GAAgB6C,GAA3B;AACA0mE,QAAAA,MAAM,CAACjpE,CAAP,GAAWyd,MAAM,CAAEiD,GAAF,CAAN,CAAY1gB,CAAvB;AACAipE,QAAAA,MAAM,CAACr2D,CAAP,GAAW6K,MAAM,CAAEiD,GAAF,CAAN,CAAYhhB,CAAZ,GAAgB4C,GAA3B;AAEAqgC,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EARmD,CAUnD;;AAEAH,QAAAA,EAAE,CAAC/S,CAAH,GAAO1B,CAAC,GAAGk+F,QAAX;AACAzpF,QAAAA,EAAE,CAACzS,CAAH,GAAO0gB,GAAC,IAAKjD,MAAM,CAACvf,MAAP,GAAgB,CAArB,CAAR;AAEA4+B,QAAAA,GAAG,CAACt/B,IAAJ,CAAUiV,EAAE,CAAC/S,CAAb,EAAgB+S,EAAE,CAACzS,CAAnB,EAfmD,CAiBnD;;AAEA,YAAMN,CAAC,GAAGgjG,WAAW,CAAE,IAAIhiF,GAAJ,GAAQ,CAAV,CAAX,GAA2Bne,GAArC;AACA,YAAMvC,CAAC,GAAG0iG,WAAW,CAAE,IAAIhiF,GAAJ,GAAQ,CAAV,CAArB;AACA,YAAM9N,CAAC,GAAG8vF,WAAW,CAAE,IAAIhiF,GAAJ,GAAQ,CAAV,CAAX,GAA2Bpe,GAArC;AAEAu6B,QAAAA,OAAO,CAACr/B,IAAR,CAAckC,CAAd,EAAiBM,CAAjB,EAAoB4S,CAApB;AAEA;AAED,KAhIsJ,CAkIvJ;;;AAEA,SAAM,IAAI5U,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGk+F,QAArB,EAA+Bl+F,IAAC,EAAhC,EAAsC;AAErC,WAAM,IAAI0iB,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAKjD,MAAM,CAACvf,MAAP,GAAgB,CAAvC,EAA4CwiB,GAAC,EAA7C,EAAmD;AAElD,YAAMoiF,IAAI,GAAGpiF,GAAC,GAAG1iB,IAAC,GAAGyf,MAAM,CAACvf,MAA5B;AAEA,YAAMgE,CAAC,GAAG4gG,IAAV;AACA,YAAM3gG,CAAC,GAAG2gG,IAAI,GAAGrlF,MAAM,CAACvf,MAAxB;AACA,YAAMkE,CAAC,GAAG0gG,IAAI,GAAGrlF,MAAM,CAACvf,MAAd,GAAuB,CAAjC;AACA,YAAMsK,CAAC,GAAGs6F,IAAI,GAAG,CAAjB,CAPkD,CASlD;;AAEAnmE,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,QAAAA,OAAO,CAACn/B,IAAR,CAAc4E,CAAd,EAAiBoG,CAAjB,EAAoBrG,CAApB;AAEA;AAED,KAtJsJ,CAwJvJ;;;AAEA,YAAK29B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AACA,YAAKV,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AA7JuJ;AA+JvJ;;;;WAED,kBAAiBxtB,IAAjB,EAAwB;AAEvB,aAAO,IAAIkzF,aAAJ,CAAmBlzF,IAAI,CAACoO,MAAxB,EAAgCpO,IAAI,CAAC6sF,QAArC,EAA+C7sF,IAAI,CAACmzF,QAApD,EAA8DnzF,IAAI,CAACozF,SAAnE,CAAP;AAEA;;;;EAvK0BxnE,c;;IA2KtB8nE,e;;;;;AAEL,6BAA2E;AAAA;;AAAA,QAA9DtmF,MAA8D,uEAArD,CAAqD;AAAA,QAAlDve,MAAkD,uEAAzC,CAAyC;AAAA,QAAtC8kG,WAAsC,uEAAxB,CAAwB;AAAA,QAArBC,cAAqB,uEAAJ,CAAI;;AAAA;;AAE1E,QAAM1sC,IAAI,GAAG,IAAIgrC,IAAJ,EAAb;AACAhrC,IAAAA,IAAI,CAAC4rC,MAAL,CAAa,CAAb,EAAgB,CAAEjkG,MAAF,GAAW,CAA3B,EAA8Bue,MAA9B,EAAsCle,IAAI,CAACC,EAAL,GAAU,GAAhD,EAAqD,CAArD;AACA+3D,IAAAA,IAAI,CAAC4rC,MAAL,CAAa,CAAb,EAAgBjkG,MAAM,GAAG,CAAzB,EAA4Bue,MAA5B,EAAoC,CAApC,EAAuCle,IAAI,CAACC,EAAL,GAAU,GAAjD;AAEA,kCAAO+3D,IAAI,CAAC8qC,SAAL,CAAgB2B,WAAhB,CAAP,EAAsCC,cAAtC;AAEA,YAAK/lG,IAAL,GAAY,iBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB/N,MAAAA,MAAM,EAAExQ,MAFS;AAGjB8kG,MAAAA,WAAW,EAAEA,WAHI;AAIjBC,MAAAA,cAAc,EAAEA;AAJC,KAAlB;AAV0E;AAiB1E;;;;WAED,kBAAiB5zF,IAAjB,EAAwB;AAEvB,aAAO,IAAI0zF,eAAJ,CAAqB1zF,IAAI,CAACoN,MAA1B,EAAkCpN,IAAI,CAACnR,MAAvC,EAA+CmR,IAAI,CAAC2zF,WAApD,EAAiE3zF,IAAI,CAAC4zF,cAAtE,CAAP;AAEA;;;;EAzB4BV,a;;IA6BxBW,c;;;;;AAEL,4BAAmF;AAAA;;AAAA,QAAtEzmF,MAAsE,uEAA7D,CAA6D;AAAA,QAA1Dy/E,QAA0D,uEAA/C,CAA+C;AAAA,QAA5CiH,UAA4C,uEAA/B,CAA+B;AAAA,QAA5BC,WAA4B,uEAAd7kG,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAElF;AAEA,YAAKtB,IAAL,GAAY,gBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjBy/E,MAAAA,QAAQ,EAAEA,QAFO;AAGjBiH,MAAAA,UAAU,EAAEA,UAHK;AAIjBC,MAAAA,WAAW,EAAEA;AAJI,KAAlB;AAOAlH,IAAAA,QAAQ,GAAG39F,IAAI,CAACc,GAAL,CAAU,CAAV,EAAa68F,QAAb,CAAX,CAbkF,CAelF;;AAEA,QAAMv/D,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CApBkF,CAsBlF;;AAEA,QAAMmsC,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAM3H,EAAE,GAAG,IAAIvO,OAAJ,EAAX,CAzBkF,CA2BlF;;AAEAy+B,IAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACAq/B,IAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AACAs/B,IAAAA,GAAG,CAACt/B,IAAJ,CAAU,GAAV,EAAe,GAAf;;AAEA,SAAM,IAAI2D,CAAC,GAAG,CAAR,EAAWnD,CAAC,GAAG,CAArB,EAAwBmD,CAAC,IAAI+6F,QAA7B,EAAuC/6F,CAAC,IAAKnD,CAAC,IAAI,CAAlD,EAAsD;AAErD,UAAMqlG,OAAO,GAAGF,UAAU,GAAGhiG,CAAC,GAAG+6F,QAAJ,GAAekH,WAA5C,CAFqD,CAIrD;;AAEAn6B,MAAAA,MAAM,CAACvpE,CAAP,GAAW+c,MAAM,GAAGle,IAAI,CAAC+D,GAAL,CAAU+gG,OAAV,CAApB;AACAp6B,MAAAA,MAAM,CAACjpE,CAAP,GAAWyc,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAU8gG,OAAV,CAApB;AAEA1gE,MAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EATqD,CAWrD;;AAEAiqB,MAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAbqD,CAerD;;AAEAiV,MAAAA,EAAE,CAAC/S,CAAH,GAAO,CAAEijC,QAAQ,CAAE3kC,CAAF,CAAR,GAAgBye,MAAhB,GAAyB,CAA3B,IAAiC,CAAxC;AACAhK,MAAAA,EAAE,CAACzS,CAAH,GAAO,CAAE2iC,QAAQ,CAAE3kC,CAAC,GAAG,CAAN,CAAR,GAAoBye,MAApB,GAA6B,CAA/B,IAAqC,CAA5C;AAEAqgB,MAAAA,GAAG,CAACt/B,IAAJ,CAAUiV,EAAE,CAAC/S,CAAb,EAAgB+S,EAAE,CAACzS,CAAnB;AAEA,KAvDiF,CAyDlF;;;AAEA,SAAM,IAAIhC,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIk+F,QAAtB,EAAgCl+F,IAAC,EAAjC,EAAuC;AAEtC2+B,MAAAA,OAAO,CAACn/B,IAAR,CAAcQ,IAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwB,CAAxB;AAEA,KA/DiF,CAiElF;;;AAEA,YAAK8hC,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AAtEkF;AAwElF;;;;WAED,kBAAiBztB,IAAjB,EAAwB;AAEvB,aAAO,IAAI6zF,cAAJ,CAAoB7zF,IAAI,CAACoN,MAAzB,EAAiCpN,IAAI,CAAC6sF,QAAtC,EAAgD7sF,IAAI,CAAC8zF,UAArD,EAAiE9zF,IAAI,CAAC+zF,WAAtE,CAAP;AAEA;;;;EAhF2BnoE,c;;IAoFvBqoE,gB;;;;;AAEL,8BAAiK;AAAA;;AAAA,QAApJC,SAAoJ,uEAAxI,CAAwI;AAAA,QAArIC,YAAqI,uEAAtH,CAAsH;AAAA,QAAnH90F,MAAmH,uEAA1G,CAA0G;AAAA,QAAvGu0F,cAAuG,uEAAtF,CAAsF;AAAA,QAAnFzgE,cAAmF,uEAAlE,CAAkE;AAAA,QAA/DihE,SAA+D,uEAAnD,KAAmD;AAAA,QAA5CN,UAA4C,uEAA/B,CAA+B;AAAA,QAA5BC,WAA4B,uEAAd7kG,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAEhK;AACA,YAAKtB,IAAL,GAAY,kBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB+0E,MAAAA,SAAS,EAAEA,SADM;AAEjBC,MAAAA,YAAY,EAAEA,YAFG;AAGjB90F,MAAAA,MAAM,EAAEA,MAHS;AAIjBu0F,MAAAA,cAAc,EAAEA,cAJC;AAKjBzgE,MAAAA,cAAc,EAAEA,cALC;AAMjBihE,MAAAA,SAAS,EAAEA,SANM;AAOjBN,MAAAA,UAAU,EAAEA,UAPK;AAQjBC,MAAAA,WAAW,EAAEA;AARI,KAAlB;;AAWA,QAAM1gE,KAAK,kCAAX;;AAEAugE,IAAAA,cAAc,GAAG1kG,IAAI,CAACuC,KAAL,CAAYmiG,cAAZ,CAAjB;AACAzgE,IAAAA,cAAc,GAAGjkC,IAAI,CAACuC,KAAL,CAAY0hC,cAAZ,CAAjB,CAnBgK,CAqBhK;;AAEA,QAAM7F,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CA1BgK,CA4BhK;;AAEA,QAAIp/B,KAAK,GAAG,CAAZ;AACA,QAAMgmG,UAAU,GAAG,EAAnB;AACA,QAAMt+B,UAAU,GAAG12D,MAAM,GAAG,CAA5B;AACA,QAAIm0B,UAAU,GAAG,CAAjB,CAjCgK,CAmChK;;AAEA8gE,IAAAA,aAAa;;AAEb,QAAKF,SAAS,KAAK,KAAnB,EAA2B;AAE1B,UAAKF,SAAS,GAAG,CAAjB,EAAqBK,WAAW,CAAE,IAAF,CAAX;AACrB,UAAKJ,YAAY,GAAG,CAApB,EAAwBI,WAAW,CAAE,KAAF,CAAX;AAExB,KA5C+J,CA8ChK;;;AAEA,YAAK9jE,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AAEA,aAAS6mE,aAAT,GAAyB;AAExB,UAAMrnF,MAAM,GAAG,IAAIlC,OAAJ,EAAf;AACA,UAAM6uD,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AAEA,UAAIupB,UAAU,GAAG,CAAjB,CALwB,CAOxB;;AACA,UAAMkgE,KAAK,GAAG,CAAEL,YAAY,GAAGD,SAAjB,IAA+B70F,MAA7C,CARwB,CAUxB;;AAEA,WAAM,IAAI1O,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIwiC,cAAtB,EAAsCxiC,CAAC,EAAvC,EAA6C;AAE5C,YAAM8jG,QAAQ,GAAG,EAAjB;AAEA,YAAMx/F,CAAC,GAAGtE,CAAC,GAAGwiC,cAAd,CAJ4C,CAM5C;;AAEA,YAAM/lB,MAAM,GAAGnY,CAAC,IAAKk/F,YAAY,GAAGD,SAApB,CAAD,GAAmCA,SAAlD;;AAEA,aAAM,IAAI7jG,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIujG,cAAtB,EAAsCvjG,CAAC,EAAvC,EAA6C;AAE5C,cAAMqd,CAAC,GAAGrd,CAAC,GAAGujG,cAAd;AAEA,cAAMn5F,KAAK,GAAGiT,CAAC,GAAGqmF,WAAJ,GAAkBD,UAAhC;AAEA,cAAMY,QAAQ,GAAGxlG,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAjB;AACA,cAAMk6F,QAAQ,GAAGzlG,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAjB,CAP4C,CAS5C;;AAEAm/D,UAAAA,MAAM,CAACvpE,CAAP,GAAW+c,MAAM,GAAGsnF,QAApB;AACA96B,UAAAA,MAAM,CAACjpE,CAAP,GAAW,CAAEsE,CAAF,GAAMoK,MAAN,GAAe02D,UAA1B;AACA6D,UAAAA,MAAM,CAACr2D,CAAP,GAAW6J,MAAM,GAAGunF,QAApB;AACArhE,UAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAd4C,CAgB5C;;AAEA0J,UAAAA,MAAM,CAACtZ,GAAP,CAAY+gG,QAAZ,EAAsBF,KAAtB,EAA6BG,QAA7B,EAAwCrgG,SAAxC;AACAk5B,UAAAA,OAAO,CAACr/B,IAAR,CAAc8e,MAAM,CAAC5c,CAArB,EAAwB4c,MAAM,CAACtc,CAA/B,EAAkCsc,MAAM,CAAC1J,CAAzC,EAnB4C,CAqB5C;;AAEAkqB,UAAAA,GAAG,CAACt/B,IAAJ,CAAUuf,CAAV,EAAa,IAAIzY,CAAjB,EAvB4C,CAyB5C;;AAEAw/F,UAAAA,QAAQ,CAACtmG,IAAT,CAAeE,KAAK,EAApB;AAEA,SAvC2C,CAyC5C;;;AAEAgmG,QAAAA,UAAU,CAAClmG,IAAX,CAAiBsmG,QAAjB;AAEA,OAzDuB,CA2DxB;;;AAEA,WAAM,IAAIpkG,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGujG,cAArB,EAAqCvjG,GAAC,EAAtC,EAA4C;AAE3C,aAAM,IAAIM,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGwiC,cAArB,EAAqCxiC,GAAC,EAAtC,EAA4C;AAE3C;AAEA,cAAMkC,CAAC,GAAGwhG,UAAU,CAAE1jG,GAAF,CAAV,CAAiBN,GAAjB,CAAV;AACA,cAAMyC,CAAC,GAAGuhG,UAAU,CAAE1jG,GAAC,GAAG,CAAN,CAAV,CAAqBN,GAArB,CAAV;AACA,cAAM0C,CAAC,GAAGshG,UAAU,CAAE1jG,GAAC,GAAG,CAAN,CAAV,CAAqBN,GAAC,GAAG,CAAzB,CAAV;AACA,cAAM8I,CAAC,GAAGk7F,UAAU,CAAE1jG,GAAF,CAAV,CAAiBN,GAAC,GAAG,CAArB,CAAV,CAP2C,CAS3C;;AAEAi9B,UAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,UAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB,EAZ2C,CAc3C;;AAEAm7B,UAAAA,UAAU,IAAI,CAAd;AAEA;AAED,OAnFuB,CAqFxB;;;AAEAjB,MAAAA,KAAK,CAAChD,QAAN,CAAgBmD,UAAhB,EAA4Bc,UAA5B,EAAwC,CAAxC,EAvFwB,CAyFxB;;AAEAd,MAAAA,UAAU,IAAIc,UAAd;AAEA;;AAED,aAASigE,WAAT,CAAsB/6E,GAAtB,EAA4B;AAE3B;AACA,UAAMo7E,gBAAgB,GAAGvmG,KAAzB;AAEA,UAAM+U,EAAE,GAAG,IAAIvO,OAAJ,EAAX;AACA,UAAM+kE,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AAEA,UAAIupB,UAAU,GAAG,CAAjB;AAEA,UAAMlnB,MAAM,GAAKoM,GAAG,KAAK,IAAV,GAAmB06E,SAAnB,GAA+BC,YAA9C;AACA,UAAMj/E,IAAI,GAAKsE,GAAG,KAAK,IAAV,GAAmB,CAAnB,GAAuB,CAAE,CAAtC,CAX2B,CAa3B;AACA;AACA;;AAEA,WAAM,IAAInpB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIujG,cAAtB,EAAsCvjG,CAAC,EAAvC,EAA6C;AAE5C;AAEAijC,QAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB4nE,UAAU,GAAG7gD,IAA/B,EAAqC,CAArC,EAJ4C,CAM5C;;AAEAsY,QAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB+mB,IAAjB,EAAuB,CAAvB,EAR4C,CAU5C;;AAEAuY,QAAAA,GAAG,CAACt/B,IAAJ,CAAU,GAAV,EAAe,GAAf,EAZ4C,CAc5C;;AAEAE,QAAAA,KAAK;AAEL,OAnC0B,CAqC3B;;;AACA,UAAMwmG,cAAc,GAAGxmG,KAAvB,CAtC2B,CAwC3B;;AAEA,WAAM,IAAIgC,GAAC,GAAG,CAAd,EAAiBA,GAAC,IAAIujG,cAAtB,EAAsCvjG,GAAC,EAAvC,EAA6C;AAE5C,YAAMqd,CAAC,GAAGrd,GAAC,GAAGujG,cAAd;AACA,YAAMn5F,KAAK,GAAGiT,CAAC,GAAGqmF,WAAJ,GAAkBD,UAAhC;AAEA,YAAMa,QAAQ,GAAGzlG,IAAI,CAAC+D,GAAL,CAAUwH,KAAV,CAAjB;AACA,YAAMi6F,QAAQ,GAAGxlG,IAAI,CAACgE,GAAL,CAAUuH,KAAV,CAAjB,CAN4C,CAQ5C;;AAEAm/D,QAAAA,MAAM,CAACvpE,CAAP,GAAW+c,MAAM,GAAGsnF,QAApB;AACA96B,QAAAA,MAAM,CAACjpE,CAAP,GAAWolE,UAAU,GAAG7gD,IAAxB;AACA0kD,QAAAA,MAAM,CAACr2D,CAAP,GAAW6J,MAAM,GAAGunF,QAApB;AACArhE,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAb4C,CAe5C;;AAEAiqB,QAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB+mB,IAAjB,EAAuB,CAAvB,EAjB4C,CAmB5C;;AAEA9R,QAAAA,EAAE,CAAC/S,CAAH,GAASskG,QAAQ,GAAG,GAAb,GAAqB,GAA5B;AACAvxF,QAAAA,EAAE,CAACzS,CAAH,GAAS+jG,QAAQ,GAAG,GAAX,GAAiBx/E,IAAnB,GAA4B,GAAnC;AACAuY,QAAAA,GAAG,CAACt/B,IAAJ,CAAUiV,EAAE,CAAC/S,CAAb,EAAgB+S,EAAE,CAACzS,CAAnB,EAvB4C,CAyB5C;;AAEAtC,QAAAA,KAAK;AAEL,OAvE0B,CAyE3B;;;AAEA,WAAM,IAAIgC,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGujG,cAArB,EAAqCvjG,GAAC,EAAtC,EAA4C;AAE3C,YAAM0C,CAAC,GAAG6hG,gBAAgB,GAAGvkG,GAA7B;AACA,YAAM1B,CAAC,GAAGkmG,cAAc,GAAGxkG,GAA3B;;AAEA,YAAKmpB,GAAG,KAAK,IAAb,EAAoB;AAEnB;AAEA8T,UAAAA,OAAO,CAACn/B,IAAR,CAAcQ,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBoE,CAAxB;AAEA,SAND,MAMO;AAEN;AAEAu6B,UAAAA,OAAO,CAACn/B,IAAR,CAAcQ,CAAC,GAAG,CAAlB,EAAqBA,CAArB,EAAwBoE,CAAxB;AAEA;;AAEDuhC,QAAAA,UAAU,IAAI,CAAd;AAEA,OAhG0B,CAkG3B;;;AAEAjB,MAAAA,KAAK,CAAChD,QAAN,CAAgBmD,UAAhB,EAA4Bc,UAA5B,EAAwC9a,GAAG,KAAK,IAAR,GAAe,CAAf,GAAmB,CAA3D,EApG2B,CAsG3B;;AAEAga,MAAAA,UAAU,IAAIc,UAAd;AAEA;;AA9P+J;AAgQhK;;;;WAED,kBAAiBt0B,IAAjB,EAAwB;AAEvB,aAAO,IAAIi0F,gBAAJ,CAAsBj0F,IAAI,CAACk0F,SAA3B,EAAsCl0F,IAAI,CAACm0F,YAA3C,EAAyDn0F,IAAI,CAACX,MAA9D,EAAsEW,IAAI,CAAC4zF,cAA3E,EAA2F5zF,IAAI,CAACmzB,cAAhG,EAAgHnzB,IAAI,CAACo0F,SAArH,EAAgIp0F,IAAI,CAAC8zF,UAArI,EAAiJ9zF,IAAI,CAAC+zF,WAAtJ,CAAP;AAEA;;;;EAxQ6BnoE,c;;IA4QzBkpE,Y;;;;;AAEL,0BAA4I;AAAA;;AAAA,QAA/H1nF,MAA+H,uEAAtH,CAAsH;AAAA,QAAnH/N,MAAmH,uEAA1G,CAA0G;AAAA,QAAvGu0F,cAAuG,uEAAtF,CAAsF;AAAA,QAAnFzgE,cAAmF,uEAAlE,CAAkE;AAAA,QAA/DihE,SAA+D,uEAAnD,KAAmD;AAAA,QAA5CN,UAA4C,uEAA/B,CAA+B;AAAA,QAA5BC,WAA4B,uEAAd7kG,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAE3I,kCAAO,CAAP,EAAUie,MAAV,EAAkB/N,MAAlB,EAA0Bu0F,cAA1B,EAA0CzgE,cAA1C,EAA0DihE,SAA1D,EAAqEN,UAArE,EAAiFC,WAAjF;AAEA,YAAKlmG,IAAL,GAAY,cAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB/N,MAAAA,MAAM,EAAEA,MAFS;AAGjBu0F,MAAAA,cAAc,EAAEA,cAHC;AAIjBzgE,MAAAA,cAAc,EAAEA,cAJC;AAKjBihE,MAAAA,SAAS,EAAEA,SALM;AAMjBN,MAAAA,UAAU,EAAEA,UANK;AAOjBC,MAAAA,WAAW,EAAEA;AAPI,KAAlB;AAN2I;AAgB3I;;;;WAED,kBAAiB/zF,IAAjB,EAAwB;AAEvB,aAAO,IAAI80F,YAAJ,CAAkB90F,IAAI,CAACoN,MAAvB,EAA+BpN,IAAI,CAACX,MAApC,EAA4CW,IAAI,CAAC4zF,cAAjD,EAAiE5zF,IAAI,CAACmzB,cAAtE,EAAsFnzB,IAAI,CAACo0F,SAA3F,EAAsGp0F,IAAI,CAAC8zF,UAA3G,EAAuH9zF,IAAI,CAAC+zF,WAA5H,CAAP;AAEA;;;;EAxByBE,gB;;IA4BrBc,kB;;;;;AAEL,gCAAmE;AAAA;;AAAA,QAAtDzhE,QAAsD,uEAA3C,EAA2C;AAAA,QAAvChG,OAAuC,uEAA7B,EAA6B;AAAA,QAAzBlgB,MAAyB,uEAAhB,CAAgB;AAAA,QAAb22E,MAAa,uEAAJ,CAAI;;AAAA;;AAElE;AAEA,YAAKl2F,IAAL,GAAY,oBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjBmU,MAAAA,QAAQ,EAAEA,QADO;AAEjBhG,MAAAA,OAAO,EAAEA,OAFQ;AAGjBlgB,MAAAA,MAAM,EAAEA,MAHS;AAIjB22E,MAAAA,MAAM,EAAEA;AAJS,KAAlB,CANkE,CAalE;;AAEA,QAAMiR,YAAY,GAAG,EAArB;AACA,QAAMC,QAAQ,GAAG,EAAjB,CAhBkE,CAkBlE;;AAEAC,IAAAA,SAAS,CAAEnR,MAAF,CAAT,CApBkE,CAsBlE;;AAEAoR,IAAAA,WAAW,CAAE/nF,MAAF,CAAX,CAxBkE,CA0BlE;;AAEAgoF,IAAAA,WAAW,GA5BuD,CA8BlE;;AAEA,YAAKroE,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4B6pE,YAA5B,EAA0C,CAA1C,CAA/B;;AACA,YAAKjoE,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4B6pE,YAAY,CAACtmG,KAAb,EAA5B,EAAkD,CAAlD,CAA7B;;AACA,YAAKq+B,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4B8pE,QAA5B,EAAsC,CAAtC,CAAzB;;AAEA,QAAKlR,MAAM,KAAK,CAAhB,EAAoB;AAEnB,cAAKsR,oBAAL,GAFmB,CAEU;;AAE7B,KAJD,MAIO;AAEN,cAAK7lE,gBAAL,GAFM,CAEmB;;AAEzB,KA5CiE,CA8ClE;;;AAEA,aAAS0lE,SAAT,CAAoBnR,MAApB,EAA6B;AAE5B,UAAMlxF,CAAC,GAAG,IAAIkY,OAAJ,EAAV;AACA,UAAMjY,CAAC,GAAG,IAAIiY,OAAJ,EAAV;AACA,UAAMhY,CAAC,GAAG,IAAIgY,OAAJ,EAAV,CAJ4B,CAM5B;;AAEA,WAAM,IAAIpc,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG2+B,OAAO,CAACz+B,MAA7B,EAAqCF,CAAC,IAAI,CAA1C,EAA8C;AAE7C;AAEA2mG,QAAAA,gBAAgB,CAAEhoE,OAAO,CAAE3+B,CAAC,GAAG,CAAN,CAAT,EAAoBkE,CAApB,CAAhB;AACAyiG,QAAAA,gBAAgB,CAAEhoE,OAAO,CAAE3+B,CAAC,GAAG,CAAN,CAAT,EAAoBmE,CAApB,CAAhB;AACAwiG,QAAAA,gBAAgB,CAAEhoE,OAAO,CAAE3+B,CAAC,GAAG,CAAN,CAAT,EAAoBoE,CAApB,CAAhB,CAN6C,CAQ7C;;AAEAwiG,QAAAA,aAAa,CAAE1iG,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAWgxF,MAAX,CAAb;AAEA;AAED;;AAED,aAASwR,aAAT,CAAwB1iG,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCgxF,MAAjC,EAA0C;AAEzC,UAAMyR,IAAI,GAAGzR,MAAM,GAAG,CAAtB,CAFyC,CAIzC;;AAEA,UAAM9uF,CAAC,GAAG,EAAV,CANyC,CAQzC;;AAEA,WAAM,IAAItG,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAI6mG,IAAtB,EAA4B7mG,CAAC,EAA7B,EAAmC;AAElCsG,QAAAA,CAAC,CAAEtG,CAAF,CAAD,GAAS,EAAT;AAEA,YAAM8mG,EAAE,GAAG5iG,CAAC,CAAC4S,KAAF,GAAU7U,IAAV,CAAgBmC,CAAhB,EAAmBpE,CAAC,GAAG6mG,IAAvB,CAAX;AACA,YAAME,EAAE,GAAG5iG,CAAC,CAAC2S,KAAF,GAAU7U,IAAV,CAAgBmC,CAAhB,EAAmBpE,CAAC,GAAG6mG,IAAvB,CAAX;AAEA,YAAMG,IAAI,GAAGH,IAAI,GAAG7mG,CAApB;;AAEA,aAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIskF,IAAtB,EAA4BtkF,CAAC,EAA7B,EAAmC;AAElC,cAAKA,CAAC,KAAK,CAAN,IAAW1iB,CAAC,KAAK6mG,IAAtB,EAA6B;AAE5BvgG,YAAAA,CAAC,CAAEtG,CAAF,CAAD,CAAQ0iB,CAAR,IAAcokF,EAAd;AAEA,WAJD,MAIO;AAENxgG,YAAAA,CAAC,CAAEtG,CAAF,CAAD,CAAQ0iB,CAAR,IAAcokF,EAAE,CAAChwF,KAAH,GAAW7U,IAAX,CAAiB8kG,EAAjB,EAAqBrkF,CAAC,GAAGskF,IAAzB,CAAd;AAEA;AAED;AAED,OAjCwC,CAmCzC;;;AAEA,WAAM,IAAIhnG,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6mG,IAArB,EAA2B7mG,IAAC,EAA5B,EAAkC;AAEjC,aAAM,IAAI0iB,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAG,KAAMmkF,IAAI,GAAG7mG,IAAb,IAAmB,CAAxC,EAA2C0iB,GAAC,EAA5C,EAAkD;AAEjD,cAAM+rD,CAAC,GAAGluE,IAAI,CAACuC,KAAL,CAAY4f,GAAC,GAAG,CAAhB,CAAV;;AAEA,cAAKA,GAAC,GAAG,CAAJ,KAAU,CAAf,EAAmB;AAElBukF,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAF,CAAD,CAAQyuE,CAAC,GAAG,CAAZ,CAAF,CAAV;AACAw4B,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAC,GAAG,CAAN,CAAD,CAAYyuE,CAAZ,CAAF,CAAV;AACAw4B,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAF,CAAD,CAAQyuE,CAAR,CAAF,CAAV;AAEA,WAND,MAMO;AAENw4B,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAF,CAAD,CAAQyuE,CAAC,GAAG,CAAZ,CAAF,CAAV;AACAw4B,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAC,GAAG,CAAN,CAAD,CAAYyuE,CAAC,GAAG,CAAhB,CAAF,CAAV;AACAw4B,YAAAA,UAAU,CAAE3gG,CAAC,CAAEtG,IAAC,GAAG,CAAN,CAAD,CAAYyuE,CAAZ,CAAF,CAAV;AAEA;AAED;AAED;AAED;;AAED,aAAS+3B,WAAT,CAAsB/nF,MAAtB,EAA+B;AAE9B,UAAMwsD,MAAM,GAAG,IAAI7uD,OAAJ,EAAf,CAF8B,CAI9B;;AAEA,WAAM,IAAIpc,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGqmG,YAAY,CAACnmG,MAAlC,EAA0CF,CAAC,IAAI,CAA/C,EAAmD;AAElDirE,QAAAA,MAAM,CAACvpE,CAAP,GAAW2kG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AACAirE,QAAAA,MAAM,CAACjpE,CAAP,GAAWqkG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AACAirE,QAAAA,MAAM,CAACr2D,CAAP,GAAWyxF,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AAEAirE,QAAAA,MAAM,CAACtlE,SAAP,GAAmBe,cAAnB,CAAmC+X,MAAnC;AAEA4nF,QAAAA,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAZ,GAAwBirE,MAAM,CAACvpE,CAA/B;AACA2kG,QAAAA,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAZ,GAAwBirE,MAAM,CAACjpE,CAA/B;AACAqkG,QAAAA,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAZ,GAAwBirE,MAAM,CAACr2D,CAA/B;AAEA;AAED;;AAED,aAAS6xF,WAAT,GAAuB;AAEtB,UAAMx7B,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;;AAEA,WAAM,IAAIpc,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGqmG,YAAY,CAACnmG,MAAlC,EAA0CF,CAAC,IAAI,CAA/C,EAAmD;AAElDirE,QAAAA,MAAM,CAACvpE,CAAP,GAAW2kG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AACAirE,QAAAA,MAAM,CAACjpE,CAAP,GAAWqkG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AACAirE,QAAAA,MAAM,CAACr2D,CAAP,GAAWyxF,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAvB;AAEA,YAAM+e,CAAC,GAAGmoF,OAAO,CAAEj8B,MAAF,CAAP,GAAoB,CAApB,GAAwB1qE,IAAI,CAACC,EAA7B,GAAkC,GAA5C;AACA,YAAM8F,CAAC,GAAG6gG,WAAW,CAAEl8B,MAAF,CAAX,GAAwB1qE,IAAI,CAACC,EAA7B,GAAkC,GAA5C;AACA8lG,QAAAA,QAAQ,CAAC9mG,IAAT,CAAeuf,CAAf,EAAkB,IAAIzY,CAAtB;AAEA;;AAED8gG,MAAAA,UAAU;AAEVC,MAAAA,WAAW;AAEX;;AAED,aAASA,WAAT,GAAuB;AAEtB;AAEA,WAAM,IAAIrnG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGsmG,QAAQ,CAACpmG,MAA9B,EAAsCF,CAAC,IAAI,CAA3C,EAA+C;AAE9C;AAEA,YAAMwb,EAAE,GAAG8qF,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAnB;AACA,YAAM4b,EAAE,GAAG0qF,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAnB;AACA,YAAM+pB,EAAE,GAAGu8E,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAnB;AAEA,YAAMqB,GAAG,GAAGd,IAAI,CAACc,GAAL,CAAUma,EAAV,EAAcI,EAAd,EAAkBmO,EAAlB,CAAZ;AACA,YAAM3oB,GAAG,GAAGb,IAAI,CAACa,GAAL,CAAUoa,EAAV,EAAcI,EAAd,EAAkBmO,EAAlB,CAAZ,CAT8C,CAW9C;;AAEA,YAAK1oB,GAAG,GAAG,GAAN,IAAaD,GAAG,GAAG,GAAxB,EAA8B;AAE7B,cAAKoa,EAAE,GAAG,GAAV,EAAgB8qF,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAR,IAAqB,CAArB;AAChB,cAAK4b,EAAE,GAAG,GAAV,EAAgB0qF,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAR,IAAqB,CAArB;AAChB,cAAK+pB,EAAE,GAAG,GAAV,EAAgBu8E,QAAQ,CAAEtmG,CAAC,GAAG,CAAN,CAAR,IAAqB,CAArB;AAEhB;AAED;AAED;;AAED,aAASinG,UAAT,CAAqBh8B,MAArB,EAA8B;AAE7Bo7B,MAAAA,YAAY,CAAC7mG,IAAb,CAAmByrE,MAAM,CAACvpE,CAA1B,EAA6BupE,MAAM,CAACjpE,CAApC,EAAuCipE,MAAM,CAACr2D,CAA9C;AAEA;;AAED,aAAS+xF,gBAAT,CAA2BjnG,KAA3B,EAAkCurE,MAAlC,EAA2C;AAE1C,UAAM3pC,MAAM,GAAG5hC,KAAK,GAAG,CAAvB;AAEAurE,MAAAA,MAAM,CAACvpE,CAAP,GAAWijC,QAAQ,CAAErD,MAAM,GAAG,CAAX,CAAnB;AACA2pC,MAAAA,MAAM,CAACjpE,CAAP,GAAW2iC,QAAQ,CAAErD,MAAM,GAAG,CAAX,CAAnB;AACA2pC,MAAAA,MAAM,CAACr2D,CAAP,GAAW+vB,QAAQ,CAAErD,MAAM,GAAG,CAAX,CAAnB;AAEA;;AAED,aAAS8lE,UAAT,GAAsB;AAErB,UAAMljG,CAAC,GAAG,IAAIkY,OAAJ,EAAV;AACA,UAAMjY,CAAC,GAAG,IAAIiY,OAAJ,EAAV;AACA,UAAMhY,CAAC,GAAG,IAAIgY,OAAJ,EAAV;AAEA,UAAMkrF,QAAQ,GAAG,IAAIlrF,OAAJ,EAAjB;AAEA,UAAMojB,GAAG,GAAG,IAAIt5B,OAAJ,EAAZ;AACA,UAAMu5B,GAAG,GAAG,IAAIv5B,OAAJ,EAAZ;AACA,UAAMw5B,GAAG,GAAG,IAAIx5B,OAAJ,EAAZ;;AAEA,WAAM,IAAIlG,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAG,CAArB,EAAwB1iB,CAAC,GAAGqmG,YAAY,CAACnmG,MAAzC,EAAiDF,CAAC,IAAI,CAAL,EAAQ0iB,CAAC,IAAI,CAA9D,EAAkE;AAEjExe,QAAAA,CAAC,CAACc,GAAF,CAAOqhG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAnB,EAA8BqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAA1C,EAAqDqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAjE;AACAmE,QAAAA,CAAC,CAACa,GAAF,CAAOqhG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAnB,EAA8BqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAA1C,EAAqDqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAjE;AACAoE,QAAAA,CAAC,CAACY,GAAF,CAAOqhG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAnB,EAA8BqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAA1C,EAAqDqmG,YAAY,CAAErmG,CAAC,GAAG,CAAN,CAAjE;AAEAw/B,QAAAA,GAAG,CAACx6B,GAAJ,CAASshG,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAAjB,EAA4B4jF,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAApC;AACA+c,QAAAA,GAAG,CAACz6B,GAAJ,CAASshG,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAAjB,EAA4B4jF,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAApC;AACAgd,QAAAA,GAAG,CAAC16B,GAAJ,CAASshG,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAAjB,EAA4B4jF,QAAQ,CAAE5jF,CAAC,GAAG,CAAN,CAApC;AAEA4kF,QAAAA,QAAQ,CAACj5F,IAAT,CAAenK,CAAf,EAAmB4b,GAAnB,CAAwB3b,CAAxB,EAA4B2b,GAA5B,CAAiC1b,CAAjC,EAAqC2C,YAArC,CAAmD,CAAnD;AAEA,YAAMwgG,GAAG,GAAGL,OAAO,CAAEI,QAAF,CAAnB;AAEAE,QAAAA,SAAS,CAAEhoE,GAAF,EAAO9c,CAAC,GAAG,CAAX,EAAcxe,CAAd,EAAiBqjG,GAAjB,CAAT;AACAC,QAAAA,SAAS,CAAE/nE,GAAF,EAAO/c,CAAC,GAAG,CAAX,EAAcve,CAAd,EAAiBojG,GAAjB,CAAT;AACAC,QAAAA,SAAS,CAAE9nE,GAAF,EAAOhd,CAAC,GAAG,CAAX,EAActe,CAAd,EAAiBmjG,GAAjB,CAAT;AAEA;AAED;;AAED,aAASC,SAAT,CAAoB/yF,EAApB,EAAwB6sB,MAAxB,EAAgCjhB,MAAhC,EAAwC6mF,OAAxC,EAAkD;AAEjD,UAAOA,OAAO,GAAG,CAAZ,IAAqBzyF,EAAE,CAAC/S,CAAH,KAAS,CAAnC,EAAyC;AAExC4kG,QAAAA,QAAQ,CAAEhlE,MAAF,CAAR,GAAqB7sB,EAAE,CAAC/S,CAAH,GAAO,CAA5B;AAEA;;AAED,UAAO2e,MAAM,CAAC3e,CAAP,KAAa,CAAf,IAAwB2e,MAAM,CAACzL,CAAP,KAAa,CAA1C,EAAgD;AAE/C0xF,QAAAA,QAAQ,CAAEhlE,MAAF,CAAR,GAAqB4lE,OAAO,GAAG,CAAV,GAAc3mG,IAAI,CAACC,EAAnB,GAAwB,GAA7C;AAEA;AAED,KAhRiE,CAkRlE;;;AAEA,aAAS0mG,OAAT,CAAkB7mF,MAAlB,EAA2B;AAE1B,aAAO9f,IAAI,CAAC2G,KAAL,CAAYmZ,MAAM,CAACzL,CAAnB,EAAsB,CAAEyL,MAAM,CAAC3e,CAA/B,CAAP;AAEA,KAxRiE,CA2RlE;;;AAEA,aAASylG,WAAT,CAAsB9mF,MAAtB,EAA+B;AAE9B,aAAO9f,IAAI,CAAC2G,KAAL,CAAY,CAAEmZ,MAAM,CAACre,CAArB,EAAwBzB,IAAI,CAACyG,IAAL,CAAaqZ,MAAM,CAAC3e,CAAP,GAAW2e,MAAM,CAAC3e,CAApB,GAA4B2e,MAAM,CAACzL,CAAP,GAAWyL,MAAM,CAACzL,CAAzD,CAAxB,CAAP;AAEA;;AAjSiE;AAmSlE;;;;WAED,kBAAiBvD,IAAjB,EAAwB;AAEvB,aAAO,IAAI+0F,kBAAJ,CAAwB/0F,IAAI,CAACszB,QAA7B,EAAuCtzB,IAAI,CAACstB,OAA5C,EAAqDttB,IAAI,CAACoN,MAA1D,EAAkEpN,IAAI,CAACo2F,OAAvE,CAAP;AAEA;;;;EA3S+BxqE,c;;IA+S3ByqE,oB;;;;;AAEL,kCAAsC;AAAA;;AAAA,QAAzBjpF,MAAyB,uEAAhB,CAAgB;AAAA,QAAb22E,MAAa,uEAAJ,CAAI;;AAAA;;AAErC,QAAMlzF,CAAC,GAAG,CAAE,IAAI3B,IAAI,CAACyG,IAAL,CAAW,CAAX,CAAN,IAAyB,CAAnC;AACA,QAAMsE,CAAC,GAAG,IAAIpJ,CAAd;AAEA,QAAMyiC,QAAQ,GAAG,CAEhB;AACA,KAAE,CAHc,EAGX,CAAE,CAHS,EAGN,CAAE,CAHI,EAGD,CAAE,CAHD,EAGI,CAAE,CAHN,EAGS,CAHT,EAIhB,CAAE,CAJc,EAIX,CAJW,EAIR,CAAE,CAJM,EAIH,CAAE,CAJC,EAIE,CAJF,EAIK,CAJL,EAKhB,CALgB,EAKb,CAAE,CALW,EAKR,CAAE,CALM,EAKH,CALG,EAKA,CAAE,CALF,EAKK,CALL,EAMhB,CANgB,EAMb,CANa,EAMV,CAAE,CANQ,EAML,CANK,EAMF,CANE,EAMC,CAND,EAQhB;AACA,KATgB,EASb,CAAEr5B,CATW,EASR,CAAEpJ,CATM,EASH,CATG,EASA,CAAEoJ,CATF,EASKpJ,CATL,EAUhB,CAVgB,EAUboJ,CAVa,EAUV,CAAEpJ,CAVQ,EAUL,CAVK,EAUFoJ,CAVE,EAUCpJ,CAVD,EAYhB;AACA,KAAEoJ,CAbc,EAaX,CAAEpJ,CAbS,EAaN,CAbM,EAaH,CAAEoJ,CAbC,EAaEpJ,CAbF,EAaK,CAbL,EAchBoJ,CAdgB,EAcb,CAAEpJ,CAdW,EAcR,CAdQ,EAcLoJ,CAdK,EAcFpJ,CAdE,EAcC,CAdD,EAgBhB;AACA,KAAEA,CAjBc,EAiBX,CAjBW,EAiBR,CAAEoJ,CAjBM,EAiBHpJ,CAjBG,EAiBA,CAjBA,EAiBG,CAAEoJ,CAjBL,EAkBhB,CAAEpJ,CAlBc,EAkBX,CAlBW,EAkBRoJ,CAlBQ,EAkBLpJ,CAlBK,EAkBF,CAlBE,EAkBCoJ,CAlBD,CAAjB;AAqBA,QAAMqzB,OAAO,GAAG,CACf,CADe,EACZ,EADY,EACR,CADQ,EACJ,CADI,EACD,CADC,EACE,EADF,EACO,CADP,EACU,EADV,EACc,EADd,EAEf,CAFe,EAEZ,EAFY,EAER,EAFQ,EAEH,CAFG,EAEA,EAFA,EAEI,CAFJ,EAEQ,CAFR,EAEW,CAFX,EAEc,EAFd,EAGf,EAHe,EAGX,CAHW,EAGR,CAHQ,EAGJ,EAHI,EAGA,CAHA,EAGG,EAHH,EAGQ,EAHR,EAGY,EAHZ,EAGgB,CAHhB,EAIf,CAJe,EAIZ,CAJY,EAIT,EAJS,EAIJ,CAJI,EAID,EAJC,EAIG,CAJH,EAIO,CAJP,EAIU,CAJV,EAIa,EAJb,EAKf,CALe,EAKZ,EALY,EAKR,CALQ,EAKJ,CALI,EAKD,CALC,EAKE,EALF,EAKO,CALP,EAKU,EALV,EAKc,EALd,EAMf,CANe,EAMZ,EANY,EAMR,CANQ,EAMJ,CANI,EAMD,CANC,EAME,EANF,EAMO,CANP,EAMU,EANV,EAMc,EANd,EAOf,CAPe,EAOZ,EAPY,EAOR,EAPQ,EAOH,CAPG,EAOA,EAPA,EAOI,CAPJ,EAOQ,CAPR,EAOW,CAPX,EAOc,EAPd,EAQf,EARe,EAQX,CARW,EAQR,CARQ,EAQJ,EARI,EAQA,CARA,EAQG,EARH,EAQQ,EARR,EAQY,EARZ,EAQgB,CARhB,EASf,CATe,EASZ,EATY,EASR,EATQ,EASH,CATG,EASA,EATA,EASI,CATJ,EASQ,CATR,EASW,CATX,EASc,CATd,EAUf,EAVe,EAUX,CAVW,EAUR,CAVQ,EAUJ,EAVI,EAUA,CAVA,EAUG,EAVH,EAUQ,EAVR,EAUY,EAVZ,EAUgB,CAVhB,EAWf,EAXe,EAWX,CAXW,EAWR,EAXQ,EAWH,EAXG,EAWC,EAXD,EAWK,CAXL,EAWS,EAXT,EAWa,CAXb,EAWgB,EAXhB,EAYf,CAZe,EAYZ,EAZY,EAYR,EAZQ,EAYH,CAZG,EAYA,EAZA,EAYI,CAZJ,EAYQ,CAZR,EAYW,CAZX,EAYc,CAZd,CAAhB;AAeA,kCAAOgG,QAAP,EAAiBhG,OAAjB,EAA0BlgB,MAA1B,EAAkC22E,MAAlC;AAEA,YAAKl2F,IAAL,GAAY,sBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB22E,MAAAA,MAAM,EAAEA;AAFS,KAAlB;AA7CqC;AAkDrC;;;;WAED,kBAAiB/jF,IAAjB,EAAwB;AAEvB,aAAO,IAAIq2F,oBAAJ,CAA0Br2F,IAAI,CAACoN,MAA/B,EAAuCpN,IAAI,CAAC+jF,MAA5C,CAAP;AAEA;;;;EA1DiCgR,kB;;AA8DnC,IAAMuB,GAAG,GAAG,aAAc,IAAIvrF,OAAJ,EAA1B;;AACA,IAAMwrF,KAAK,GAAG,aAAc,IAAIxrF,OAAJ,EAA5B;;AACA,IAAMyrF,OAAO,GAAG,aAAc,IAAIzrF,OAAJ,EAA9B;;AACA,IAAM0rF,SAAS,GAAG,aAAc,IAAI91E,QAAJ,EAAhC;;IAEM+1E,a;;;;;AAEL,2BAAmD;AAAA;;AAAA,QAAtCvnF,QAAsC,uEAA3B,IAA2B;AAAA,QAArBwnF,cAAqB,uEAAJ,CAAI;;AAAA;;AAElD;AACA,YAAK9oG,IAAL,GAAY,eAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjBhQ,MAAAA,QAAQ,EAAEA,QADO;AAEjBwnF,MAAAA,cAAc,EAAEA;AAFC,KAAlB;;AAKA,QAAKxnF,QAAQ,KAAK,IAAlB,EAAyB;AAExB,UAAMynF,eAAe,GAAG,CAAxB;AACA,UAAMryE,SAAS,GAAGr1B,IAAI,CAACoD,GAAL,CAAU,EAAV,EAAcskG,eAAd,CAAlB;AACA,UAAMC,YAAY,GAAG3nG,IAAI,CAAC+D,GAAL,CAAUhE,OAAO,GAAG0nG,cAApB,CAArB;AAEA,UAAMG,SAAS,GAAG3nF,QAAQ,CAAC4nF,QAAT,EAAlB;AACA,UAAMC,YAAY,GAAG7nF,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,CAArB;AACA,UAAMopE,UAAU,GAAGH,SAAS,GAAGA,SAAS,CAACzwF,KAAb,GAAqB2wF,YAAY,CAAC3wF,KAA9D;AAEA,UAAM6wF,QAAQ,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAjB;AACA,UAAMC,QAAQ,GAAG,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAjB;AACA,UAAMC,MAAM,GAAG,IAAI32F,KAAJ,CAAW,CAAX,CAAf;AAEA,UAAM42F,QAAQ,GAAG,EAAjB;AACA,UAAM/jE,QAAQ,GAAG,EAAjB;;AACA,WAAM,IAAI3kC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGsoG,UAArB,EAAiCtoG,CAAC,IAAI,CAAtC,EAA0C;AAEzC,YAAKmoG,SAAL,EAAiB;AAEhBI,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBJ,SAAS,CAACxgG,IAAV,CAAgB3H,CAAhB,CAAhB;AACAuoG,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBJ,SAAS,CAACxgG,IAAV,CAAgB3H,CAAC,GAAG,CAApB,CAAhB;AACAuoG,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBJ,SAAS,CAACxgG,IAAV,CAAgB3H,CAAC,GAAG,CAApB,CAAhB;AAEA,SAND,MAMO;AAENuoG,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBvoG,CAAhB;AACAuoG,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBvoG,CAAC,GAAG,CAApB;AACAuoG,UAAAA,QAAQ,CAAE,CAAF,CAAR,GAAgBvoG,CAAC,GAAG,CAApB;AAEA;;AAED,YAAQkE,CAAR,GAAoB4jG,SAApB,CAAQ5jG,CAAR;AAAA,YAAWC,CAAX,GAAoB2jG,SAApB,CAAW3jG,CAAX;AAAA,YAAcC,CAAd,GAAoB0jG,SAApB,CAAc1jG,CAAd;AACAF,QAAAA,CAAC,CAACyc,mBAAF,CAAuB0nF,YAAvB,EAAqCE,QAAQ,CAAE,CAAF,CAA7C;AACApkG,QAAAA,CAAC,CAACwc,mBAAF,CAAuB0nF,YAAvB,EAAqCE,QAAQ,CAAE,CAAF,CAA7C;AACAnkG,QAAAA,CAAC,CAACuc,mBAAF,CAAuB0nF,YAAvB,EAAqCE,QAAQ,CAAE,CAAF,CAA7C;;AACAT,QAAAA,SAAS,CAAC11E,SAAV,CAAqBy1E,OAArB,EApByC,CAsBzC;;;AACAY,QAAAA,MAAM,CAAE,CAAF,CAAN,aAAkBloG,IAAI,CAACqF,KAAL,CAAY1B,CAAC,CAACxC,CAAF,GAAMk0B,SAAlB,CAAlB,cAAqDr1B,IAAI,CAACqF,KAAL,CAAY1B,CAAC,CAAClC,CAAF,GAAM4zB,SAAlB,CAArD,cAAwFr1B,IAAI,CAACqF,KAAL,CAAY1B,CAAC,CAAC0Q,CAAF,GAAMghB,SAAlB,CAAxF;AACA6yE,QAAAA,MAAM,CAAE,CAAF,CAAN,aAAkBloG,IAAI,CAACqF,KAAL,CAAYzB,CAAC,CAACzC,CAAF,GAAMk0B,SAAlB,CAAlB,cAAqDr1B,IAAI,CAACqF,KAAL,CAAYzB,CAAC,CAACnC,CAAF,GAAM4zB,SAAlB,CAArD,cAAwFr1B,IAAI,CAACqF,KAAL,CAAYzB,CAAC,CAACyQ,CAAF,GAAMghB,SAAlB,CAAxF;AACA6yE,QAAAA,MAAM,CAAE,CAAF,CAAN,aAAkBloG,IAAI,CAACqF,KAAL,CAAYxB,CAAC,CAAC1C,CAAF,GAAMk0B,SAAlB,CAAlB,cAAqDr1B,IAAI,CAACqF,KAAL,CAAYxB,CAAC,CAACpC,CAAF,GAAM4zB,SAAlB,CAArD,cAAwFr1B,IAAI,CAACqF,KAAL,CAAYxB,CAAC,CAACwQ,CAAF,GAAMghB,SAAlB,CAAxF,EAzByC,CA2BzC;;AACA,YAAK6yE,MAAM,CAAE,CAAF,CAAN,KAAgBA,MAAM,CAAE,CAAF,CAAtB,IAA+BA,MAAM,CAAE,CAAF,CAAN,KAAgBA,MAAM,CAAE,CAAF,CAArD,IAA8DA,MAAM,CAAE,CAAF,CAAN,KAAgBA,MAAM,CAAE,CAAF,CAAzF,EAAiG;AAEhG;AAEA,SAhCwC,CAkCzC;;;AACA,aAAM,IAAI/lF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B;AACA,cAAMimF,KAAK,GAAG,CAAEjmF,CAAC,GAAG,CAAN,IAAY,CAA1B;AACA,cAAMkmF,QAAQ,GAAGH,MAAM,CAAE/lF,CAAF,CAAvB;AACA,cAAMmmF,QAAQ,GAAGJ,MAAM,CAAEE,KAAF,CAAvB;AACA,cAAMnmF,EAAE,GAAGslF,SAAS,CAAEU,QAAQ,CAAE9lF,CAAF,CAAV,CAApB;AACA,cAAMnb,EAAE,GAAGugG,SAAS,CAAEU,QAAQ,CAAEG,KAAF,CAAV,CAApB;AAEA,cAAM/gC,IAAI,aAAOghC,QAAP,cAAqBC,QAArB,CAAV;AACA,cAAMC,WAAW,aAAOD,QAAP,cAAqBD,QAArB,CAAjB;;AAEA,cAAKE,WAAW,IAAIJ,QAAf,IAA2BA,QAAQ,CAAEI,WAAF,CAAxC,EAA0D;AAEzD;AACA;AACA,gBAAKjB,OAAO,CAAC3uF,GAAR,CAAawvF,QAAQ,CAAEI,WAAF,CAAR,CAAwBxqF,MAArC,KAAiD4pF,YAAtD,EAAqE;AAEpEvjE,cAAAA,QAAQ,CAACnlC,IAAT,CAAegjB,EAAE,CAAC9gB,CAAlB,EAAqB8gB,EAAE,CAACxgB,CAAxB,EAA2BwgB,EAAE,CAAC5N,CAA9B;AACA+vB,cAAAA,QAAQ,CAACnlC,IAAT,CAAe+H,EAAE,CAAC7F,CAAlB,EAAqB6F,EAAE,CAACvF,CAAxB,EAA2BuF,EAAE,CAACqN,CAA9B;AAEA;;AAED8zF,YAAAA,QAAQ,CAAEI,WAAF,CAAR,GAA0B,IAA1B;AAEA,WAbD,MAaO,IAAK,EAAIlhC,IAAI,IAAI8gC,QAAZ,CAAL,EAA8B;AAEpC;AACAA,YAAAA,QAAQ,CAAE9gC,IAAF,CAAR,GAAmB;AAElBmhC,cAAAA,MAAM,EAAER,QAAQ,CAAE7lF,CAAF,CAFE;AAGlB6Y,cAAAA,MAAM,EAAEgtE,QAAQ,CAAEI,KAAF,CAHE;AAIlBrqF,cAAAA,MAAM,EAAEupF,OAAO,CAAC/wF,KAAR;AAJU,aAAnB;AAQA;AAED;AAED,OA3FuB,CA6FxB;;;AACA,WAAM,IAAMsa,GAAZ,IAAmBs3E,QAAnB,EAA8B;AAE7B,YAAKA,QAAQ,CAAEt3E,GAAF,CAAb,EAAuB;AAEtB,8BAA2Bs3E,QAAQ,CAAEt3E,GAAF,CAAnC;AAAA,cAAQ23E,MAAR,iBAAQA,MAAR;AAAA,cAAgBxtE,MAAhB,iBAAgBA,MAAhB;;AACAosE,UAAAA,GAAG,CAAChnF,mBAAJ,CAAyB0nF,YAAzB,EAAuCU,MAAvC;;AACAnB,UAAAA,KAAK,CAACjnF,mBAAN,CAA2B0nF,YAA3B,EAAyC9sE,MAAzC;;AAEAoJ,UAAAA,QAAQ,CAACnlC,IAAT,CAAemoG,GAAG,CAACjmG,CAAnB,EAAsBimG,GAAG,CAAC3lG,CAA1B,EAA6B2lG,GAAG,CAAC/yF,CAAjC;AACA+vB,UAAAA,QAAQ,CAACnlC,IAAT,CAAeooG,KAAK,CAAClmG,CAArB,EAAwBkmG,KAAK,CAAC5lG,CAA9B,EAAiC4lG,KAAK,CAAChzF,CAAvC;AAEA;AAED;;AAED,cAAKwpB,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;AAEA;;AAzHiD;AA2HlD;;;EA7H0B1H,c;;IAiItB+rE,K;;;;;AAEL,iBAAavpF,MAAb,EAAsB;AAAA;;AAAA;;AAErB,kCAAOA,MAAP;AAEA,YAAKze,IAAL,GAAYN,YAAY,EAAxB;AAEA,YAAKxB,IAAL,GAAY,OAAZ;AAEA,YAAK+pG,KAAL,GAAa,EAAb;AARqB;AAUrB;;;;WAED,wBAAgBjM,SAAhB,EAA4B;AAE3B,UAAMkM,QAAQ,GAAG,EAAjB;;AAEA,WAAM,IAAIlpG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKgpG,KAAL,CAAW/oG,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErDkpG,QAAAA,QAAQ,CAAElpG,CAAF,CAAR,GAAgB,KAAKipG,KAAL,CAAYjpG,CAAZ,EAAgBqjG,SAAhB,CAA2BrG,SAA3B,CAAhB;AAEA;;AAED,aAAOkM,QAAP;AAEA,K,CAED;;;;WAEA,uBAAelM,SAAf,EAA2B;AAE1B,aAAO;AAENvsE,QAAAA,KAAK,EAAE,KAAK4yE,SAAL,CAAgBrG,SAAhB,CAFD;AAGNiM,QAAAA,KAAK,EAAE,KAAKE,cAAL,CAAqBnM,SAArB;AAHD,OAAP;AAOA;;;WAED,cAAM/uF,MAAN,EAAe;AAEd,sEAAYA,MAAZ;;AAEA,WAAKg7F,KAAL,GAAa,EAAb;;AAEA,WAAM,IAAIjpG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGgO,MAAM,CAACg7F,KAAP,CAAa/oG,MAAlC,EAA0CF,CAAC,GAAGC,CAA9C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvD,YAAMopG,IAAI,GAAGn7F,MAAM,CAACg7F,KAAP,CAAcjpG,CAAd,CAAb;AAEA,aAAKipG,KAAL,CAAWzpG,IAAX,CAAiB4pG,IAAI,CAACtyF,KAAL,EAAjB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,kBAAS;AAER,UAAMzF,IAAI,oEAAV;;AAEAA,MAAAA,IAAI,CAACrQ,IAAL,GAAY,KAAKA,IAAjB;AACAqQ,MAAAA,IAAI,CAAC43F,KAAL,GAAa,EAAb;;AAEA,WAAM,IAAIjpG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKgpG,KAAL,CAAW/oG,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,YAAMopG,IAAI,GAAG,KAAKH,KAAL,CAAYjpG,CAAZ,CAAb;AACAqR,QAAAA,IAAI,CAAC43F,KAAL,CAAWzpG,IAAX,CAAiB4pG,IAAI,CAAC90F,MAAL,EAAjB;AAEA;;AAED,aAAOjD,IAAP;AAEA;;;WAED,kBAAUioF,IAAV,EAAiB;AAEhB,0EAAgBA,IAAhB;;AAEA,WAAKt4F,IAAL,GAAYs4F,IAAI,CAACt4F,IAAjB;AACA,WAAKioG,KAAL,GAAa,EAAb;;AAEA,WAAM,IAAIjpG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAAC2P,KAAL,CAAW/oG,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,YAAMopG,IAAI,GAAG9P,IAAI,CAAC2P,KAAL,CAAYjpG,CAAZ,CAAb;AACA,aAAKipG,KAAL,CAAWzpG,IAAX,CAAiB,IAAI+jG,IAAJ,GAAWD,QAAX,CAAqB8F,IAArB,CAAjB;AAEA;;AAED,aAAO,IAAP;AAEA;;;;EA7FkB7F,I;AAiGpB;AACA;AACA;;;AAEA,IAAM8F,MAAM,GAAG;AAEdC,EAAAA,WAAW,EAAE,qBAAWj4F,IAAX,EAAiBk4F,WAAjB,EAAwC;AAAA,QAAVC,GAAU,uEAAJ,CAAI;AAEpD,QAAMC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACrpG,MAA5C;AACA,QAAMwpG,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAE,CAAF,CAAX,GAAmBC,GAAtB,GAA4Bn4F,IAAI,CAACnR,MAA1D;AACA,QAAIypG,SAAS,GAAGC,UAAU,CAAEv4F,IAAF,EAAQ,CAAR,EAAWq4F,QAAX,EAAqBF,GAArB,EAA0B,IAA1B,CAA1B;AACA,QAAMx5C,SAAS,GAAG,EAAlB;AAEA,QAAK,CAAE25C,SAAF,IAAeA,SAAS,CAAC7wC,IAAV,KAAmB6wC,SAAS,CAACE,IAAjD,EAAwD,OAAO75C,SAAP;AAExD,QAAI7wC,IAAJ,EAAUC,IAAV,EAAgBE,IAAhB,EAAsBC,IAAtB,EAA4B7d,CAA5B,EAA+BM,CAA/B,EAAkC8nG,OAAlC;AAEA,QAAKL,QAAL,EAAgBE,SAAS,GAAGI,cAAc,CAAE14F,IAAF,EAAQk4F,WAAR,EAAqBI,SAArB,EAAgCH,GAAhC,CAA1B,CAXoC,CAapD;;AACA,QAAKn4F,IAAI,CAACnR,MAAL,GAAc,KAAKspG,GAAxB,EAA8B;AAE7BrqF,MAAAA,IAAI,GAAGG,IAAI,GAAGjO,IAAI,CAAE,CAAF,CAAlB;AACA+N,MAAAA,IAAI,GAAGG,IAAI,GAAGlO,IAAI,CAAE,CAAF,CAAlB;;AAEA,WAAM,IAAIrR,CAAC,GAAGwpG,GAAd,EAAmBxpG,CAAC,GAAG0pG,QAAvB,EAAiC1pG,CAAC,IAAIwpG,GAAtC,EAA4C;AAE3C9nG,QAAAA,CAAC,GAAG2P,IAAI,CAAErR,CAAF,CAAR;AACAgC,QAAAA,CAAC,GAAGqP,IAAI,CAAErR,CAAC,GAAG,CAAN,CAAR;AACA,YAAK0B,CAAC,GAAGyd,IAAT,EAAgBA,IAAI,GAAGzd,CAAP;AAChB,YAAKM,CAAC,GAAGod,IAAT,EAAgBA,IAAI,GAAGpd,CAAP;AAChB,YAAKN,CAAC,GAAG4d,IAAT,EAAgBA,IAAI,GAAG5d,CAAP;AAChB,YAAKM,CAAC,GAAGud,IAAT,EAAgBA,IAAI,GAAGvd,CAAP;AAEhB,OAd4B,CAgB7B;;;AACA8nG,MAAAA,OAAO,GAAGvpG,IAAI,CAACc,GAAL,CAAUie,IAAI,GAAGH,IAAjB,EAAuBI,IAAI,GAAGH,IAA9B,CAAV;AACA0qF,MAAAA,OAAO,GAAGA,OAAO,KAAK,CAAZ,GAAgB,IAAIA,OAApB,GAA8B,CAAxC;AAEA;;AAEDE,IAAAA,YAAY,CAAEL,SAAF,EAAa35C,SAAb,EAAwBw5C,GAAxB,EAA6BrqF,IAA7B,EAAmCC,IAAnC,EAAyC0qF,OAAzC,CAAZ;AAEA,WAAO95C,SAAP;AAEA;AA1Ca,CAAf,C,CA8CA;;AACA,SAAS45C,UAAT,CAAqBv4F,IAArB,EAA2BmsB,KAA3B,EAAkCoG,GAAlC,EAAuC4lE,GAAvC,EAA4CS,SAA5C,EAAwD;AAEvD,MAAIjqG,CAAJ,EAAOs9F,IAAP;;AAEA,MAAK2M,SAAS,KAAOC,UAAU,CAAE74F,IAAF,EAAQmsB,KAAR,EAAeoG,GAAf,EAAoB4lE,GAApB,CAAV,GAAsC,CAA3D,EAAiE;AAEhE,SAAMxpG,CAAC,GAAGw9B,KAAV,EAAiBx9B,CAAC,GAAG4jC,GAArB,EAA0B5jC,CAAC,IAAIwpG,GAA/B;AAAqClM,MAAAA,IAAI,GAAG6M,UAAU,CAAEnqG,CAAF,EAAKqR,IAAI,CAAErR,CAAF,CAAT,EAAgBqR,IAAI,CAAErR,CAAC,GAAG,CAAN,CAApB,EAA+Bs9F,IAA/B,CAAjB;AAArC;AAEA,GAJD,MAIO;AAEN,SAAMt9F,CAAC,GAAG4jC,GAAG,GAAG4lE,GAAhB,EAAqBxpG,CAAC,IAAIw9B,KAA1B,EAAiCx9B,CAAC,IAAIwpG,GAAtC;AAA4ClM,MAAAA,IAAI,GAAG6M,UAAU,CAAEnqG,CAAF,EAAKqR,IAAI,CAAErR,CAAF,CAAT,EAAgBqR,IAAI,CAAErR,CAAC,GAAG,CAAN,CAApB,EAA+Bs9F,IAA/B,CAAjB;AAA5C;AAEA;;AAED,MAAKA,IAAI,IAAIh7E,MAAM,CAAEg7E,IAAF,EAAQA,IAAI,CAACxkC,IAAb,CAAnB,EAAyC;AAExCsxC,IAAAA,UAAU,CAAE9M,IAAF,CAAV;AACAA,IAAAA,IAAI,GAAGA,IAAI,CAACxkC,IAAZ;AAEA;;AAED,SAAOwkC,IAAP;AAEA,C,CAED;;;AACA,SAAS+M,YAAT,CAAuB7sE,KAAvB,EAA8BoG,GAA9B,EAAoC;AAEnC,MAAK,CAAEpG,KAAP,EAAe,OAAOA,KAAP;AACf,MAAK,CAAEoG,GAAP,EAAaA,GAAG,GAAGpG,KAAN;AAEb,MAAIzvB,CAAC,GAAGyvB,KAAR;AAAA,MACC8sE,KADD;;AAEA,KAAG;AAEFA,IAAAA,KAAK,GAAG,KAAR;;AAEA,QAAK,CAAEv8F,CAAC,CAACw8F,OAAJ,KAAiBjoF,MAAM,CAAEvU,CAAF,EAAKA,CAAC,CAAC+qD,IAAP,CAAN,IAAuB0xC,IAAI,CAAEz8F,CAAC,CAAC87F,IAAJ,EAAU97F,CAAV,EAAaA,CAAC,CAAC+qD,IAAf,CAAJ,KAA8B,CAAtE,CAAL,EAAiF;AAEhFsxC,MAAAA,UAAU,CAAEr8F,CAAF,CAAV;AACAA,MAAAA,CAAC,GAAG61B,GAAG,GAAG71B,CAAC,CAAC87F,IAAZ;AACA,UAAK97F,CAAC,KAAKA,CAAC,CAAC+qD,IAAb,EAAoB;AACpBwxC,MAAAA,KAAK,GAAG,IAAR;AAEA,KAPD,MAOO;AAENv8F,MAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA;AAED,GAjBD,QAiBUwxC,KAAK,IAAIv8F,CAAC,KAAK61B,GAjBzB;;AAmBA,SAAOA,GAAP;AAEA,C,CAED;;;AACA,SAASomE,YAAT,CAAuBS,GAAvB,EAA4Bz6C,SAA5B,EAAuCw5C,GAAvC,EAA4CrqF,IAA5C,EAAkDC,IAAlD,EAAwD0qF,OAAxD,EAAiEY,IAAjE,EAAwE;AAEvE,MAAK,CAAED,GAAP,EAAa,OAF0D,CAIvE;;AACA,MAAK,CAAEC,IAAF,IAAUZ,OAAf,EAAyBa,UAAU,CAAEF,GAAF,EAAOtrF,IAAP,EAAaC,IAAb,EAAmB0qF,OAAnB,CAAV;AAEzB,MAAIp8D,IAAI,GAAG+8D,GAAX;AAAA,MACCZ,IADD;AAAA,MACO/wC,IADP,CAPuE,CAUvE;;AACA,SAAQ2xC,GAAG,CAACZ,IAAJ,KAAaY,GAAG,CAAC3xC,IAAzB,EAAgC;AAE/B+wC,IAAAA,IAAI,GAAGY,GAAG,CAACZ,IAAX;AACA/wC,IAAAA,IAAI,GAAG2xC,GAAG,CAAC3xC,IAAX;;AAEA,QAAKgxC,OAAO,GAAGc,WAAW,CAAEH,GAAF,EAAOtrF,IAAP,EAAaC,IAAb,EAAmB0qF,OAAnB,CAAd,GAA6Ce,KAAK,CAAEJ,GAAF,CAA9D,EAAwE;AAEvE;AACAz6C,MAAAA,SAAS,CAACxwD,IAAV,CAAgBqqG,IAAI,CAAC7pG,CAAL,GAASwpG,GAAzB;AACAx5C,MAAAA,SAAS,CAACxwD,IAAV,CAAgBirG,GAAG,CAACzqG,CAAJ,GAAQwpG,GAAxB;AACAx5C,MAAAA,SAAS,CAACxwD,IAAV,CAAgBs5D,IAAI,CAAC94D,CAAL,GAASwpG,GAAzB;AAEAY,MAAAA,UAAU,CAAEK,GAAF,CAAV,CAPuE,CASvE;;AACAA,MAAAA,GAAG,GAAG3xC,IAAI,CAACA,IAAX;AACAprB,MAAAA,IAAI,GAAGorB,IAAI,CAACA,IAAZ;AAEA;AAEA;;AAED2xC,IAAAA,GAAG,GAAG3xC,IAAN,CAtB+B,CAwB/B;;AACA,QAAK2xC,GAAG,KAAK/8D,IAAb,EAAoB;AAEnB;AACA,UAAK,CAAEg9D,IAAP,EAAc;AAEbV,QAAAA,YAAY,CAAEK,YAAY,CAAEI,GAAF,CAAd,EAAuBz6C,SAAvB,EAAkCw5C,GAAlC,EAAuCrqF,IAAvC,EAA6CC,IAA7C,EAAmD0qF,OAAnD,EAA4D,CAA5D,CAAZ,CAFa,CAIb;AAEA,OAND,MAMO,IAAKY,IAAI,KAAK,CAAd,EAAkB;AAExBD,QAAAA,GAAG,GAAGK,sBAAsB,CAAET,YAAY,CAAEI,GAAF,CAAd,EAAuBz6C,SAAvB,EAAkCw5C,GAAlC,CAA5B;AACAQ,QAAAA,YAAY,CAAES,GAAF,EAAOz6C,SAAP,EAAkBw5C,GAAlB,EAAuBrqF,IAAvB,EAA6BC,IAA7B,EAAmC0qF,OAAnC,EAA4C,CAA5C,CAAZ,CAHwB,CAKxB;AAEA,OAPM,MAOA,IAAKY,IAAI,KAAK,CAAd,EAAkB;AAExBK,QAAAA,WAAW,CAAEN,GAAF,EAAOz6C,SAAP,EAAkBw5C,GAAlB,EAAuBrqF,IAAvB,EAA6BC,IAA7B,EAAmC0qF,OAAnC,CAAX;AAEA;;AAED;AAEA;AAED;AAED,C,CAED;;;AACA,SAASe,KAAT,CAAgBJ,GAAhB,EAAsB;AAErB,MAAMvmG,CAAC,GAAGumG,GAAG,CAACZ,IAAd;AAAA,MACC1lG,CAAC,GAAGsmG,GADL;AAAA,MAECrmG,CAAC,GAAGqmG,GAAG,CAAC3xC,IAFT;AAIA,MAAK0xC,IAAI,CAAEtmG,CAAF,EAAKC,CAAL,EAAQC,CAAR,CAAJ,IAAmB,CAAxB,EAA4B,OAAO,KAAP,CANP,CAMqB;AAE1C;;AACA,MAAI2J,CAAC,GAAG08F,GAAG,CAAC3xC,IAAJ,CAASA,IAAjB;;AAEA,SAAQ/qD,CAAC,KAAK08F,GAAG,CAACZ,IAAlB,EAAyB;AAExB,QAAKmB,eAAe,CAAE9mG,CAAC,CAACxC,CAAJ,EAAOwC,CAAC,CAAClC,CAAT,EAAYmC,CAAC,CAACzC,CAAd,EAAiByC,CAAC,CAACnC,CAAnB,EAAsBoC,CAAC,CAAC1C,CAAxB,EAA2B0C,CAAC,CAACpC,CAA7B,EAAgC+L,CAAC,CAACrM,CAAlC,EAAqCqM,CAAC,CAAC/L,CAAvC,CAAf,IACJwoG,IAAI,CAAEz8F,CAAC,CAAC87F,IAAJ,EAAU97F,CAAV,EAAaA,CAAC,CAAC+qD,IAAf,CAAJ,IAA6B,CAD9B,EACkC,OAAO,KAAP;AAClC/qD,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA;;AAED,SAAO,IAAP;AAEA;;AAED,SAAS8xC,WAAT,CAAsBH,GAAtB,EAA2BtrF,IAA3B,EAAiCC,IAAjC,EAAuC0qF,OAAvC,EAAiD;AAEhD,MAAM5lG,CAAC,GAAGumG,GAAG,CAACZ,IAAd;AAAA,MACC1lG,CAAC,GAAGsmG,GADL;AAAA,MAECrmG,CAAC,GAAGqmG,GAAG,CAAC3xC,IAFT;AAIA,MAAK0xC,IAAI,CAAEtmG,CAAF,EAAKC,CAAL,EAAQC,CAAR,CAAJ,IAAmB,CAAxB,EAA4B,OAAO,KAAP,CANoB,CAMN;AAE1C;;AACA,MAAM6mG,KAAK,GAAG/mG,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAR,GAAcwC,CAAC,CAACxC,CAAF,GAAM0C,CAAC,CAAC1C,CAAR,GAAYwC,CAAC,CAACxC,CAAd,GAAkB0C,CAAC,CAAC1C,CAAlC,GAA0CyC,CAAC,CAACzC,CAAF,GAAM0C,CAAC,CAAC1C,CAAR,GAAYyC,CAAC,CAACzC,CAAd,GAAkB0C,CAAC,CAAC1C,CAA5E;AAAA,MACCwpG,KAAK,GAAGhnG,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAR,GAAckC,CAAC,CAAClC,CAAF,GAAMoC,CAAC,CAACpC,CAAR,GAAYkC,CAAC,CAAClC,CAAd,GAAkBoC,CAAC,CAACpC,CAAlC,GAA0CmC,CAAC,CAACnC,CAAF,GAAMoC,CAAC,CAACpC,CAAR,GAAYmC,CAAC,CAACnC,CAAd,GAAkBoC,CAAC,CAACpC,CADvE;AAAA,MAECmpG,KAAK,GAAGjnG,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAR,GAAcwC,CAAC,CAACxC,CAAF,GAAM0C,CAAC,CAAC1C,CAAR,GAAYwC,CAAC,CAACxC,CAAd,GAAkB0C,CAAC,CAAC1C,CAAlC,GAA0CyC,CAAC,CAACzC,CAAF,GAAM0C,CAAC,CAAC1C,CAAR,GAAYyC,CAAC,CAACzC,CAAd,GAAkB0C,CAAC,CAAC1C,CAFvE;AAAA,MAGC0pG,KAAK,GAAGlnG,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAR,GAAckC,CAAC,CAAClC,CAAF,GAAMoC,CAAC,CAACpC,CAAR,GAAYkC,CAAC,CAAClC,CAAd,GAAkBoC,CAAC,CAACpC,CAAlC,GAA0CmC,CAAC,CAACnC,CAAF,GAAMoC,CAAC,CAACpC,CAAR,GAAYmC,CAAC,CAACnC,CAAd,GAAkBoC,CAAC,CAACpC,CAHvE,CATgD,CAchD;;AACA,MAAMqd,IAAI,GAAGgsF,MAAM,CAAEJ,KAAF,EAASC,KAAT,EAAgB/rF,IAAhB,EAAsBC,IAAtB,EAA4B0qF,OAA5B,CAAnB;AAAA,MACCtqF,IAAI,GAAG6rF,MAAM,CAAEF,KAAF,EAASC,KAAT,EAAgBjsF,IAAhB,EAAsBC,IAAtB,EAA4B0qF,OAA5B,CADd;AAGA,MAAI/7F,CAAC,GAAG08F,GAAG,CAACa,KAAZ;AAAA,MACC/pG,CAAC,GAAGkpG,GAAG,CAACc,KADT,CAlBgD,CAqBhD;;AACA,SAAQx9F,CAAC,IAAIA,CAAC,CAAC6G,CAAF,IAAOyK,IAAZ,IAAoB9d,CAApB,IAAyBA,CAAC,CAACqT,CAAF,IAAO4K,IAAxC,EAA+C;AAE9C,QAAKzR,CAAC,KAAK08F,GAAG,CAACZ,IAAV,IAAkB97F,CAAC,KAAK08F,GAAG,CAAC3xC,IAA5B,IACJkyC,eAAe,CAAE9mG,CAAC,CAACxC,CAAJ,EAAOwC,CAAC,CAAClC,CAAT,EAAYmC,CAAC,CAACzC,CAAd,EAAiByC,CAAC,CAACnC,CAAnB,EAAsBoC,CAAC,CAAC1C,CAAxB,EAA2B0C,CAAC,CAACpC,CAA7B,EAAgC+L,CAAC,CAACrM,CAAlC,EAAqCqM,CAAC,CAAC/L,CAAvC,CADX,IAEJwoG,IAAI,CAAEz8F,CAAC,CAAC87F,IAAJ,EAAU97F,CAAV,EAAaA,CAAC,CAAC+qD,IAAf,CAAJ,IAA6B,CAF9B,EAEkC,OAAO,KAAP;AAClC/qD,IAAAA,CAAC,GAAGA,CAAC,CAACu9F,KAAN;AAEA,QAAK/pG,CAAC,KAAKkpG,GAAG,CAACZ,IAAV,IAAkBtoG,CAAC,KAAKkpG,GAAG,CAAC3xC,IAA5B,IACJkyC,eAAe,CAAE9mG,CAAC,CAACxC,CAAJ,EAAOwC,CAAC,CAAClC,CAAT,EAAYmC,CAAC,CAACzC,CAAd,EAAiByC,CAAC,CAACnC,CAAnB,EAAsBoC,CAAC,CAAC1C,CAAxB,EAA2B0C,CAAC,CAACpC,CAA7B,EAAgCT,CAAC,CAACG,CAAlC,EAAqCH,CAAC,CAACS,CAAvC,CADX,IAEJwoG,IAAI,CAAEjpG,CAAC,CAACsoG,IAAJ,EAAUtoG,CAAV,EAAaA,CAAC,CAACu3D,IAAf,CAAJ,IAA6B,CAF9B,EAEkC,OAAO,KAAP;AAClCv3D,IAAAA,CAAC,GAAGA,CAAC,CAACgqG,KAAN;AAEA,GAlC+C,CAoChD;;;AACA,SAAQx9F,CAAC,IAAIA,CAAC,CAAC6G,CAAF,IAAOyK,IAApB,EAA2B;AAE1B,QAAKtR,CAAC,KAAK08F,GAAG,CAACZ,IAAV,IAAkB97F,CAAC,KAAK08F,GAAG,CAAC3xC,IAA5B,IACJkyC,eAAe,CAAE9mG,CAAC,CAACxC,CAAJ,EAAOwC,CAAC,CAAClC,CAAT,EAAYmC,CAAC,CAACzC,CAAd,EAAiByC,CAAC,CAACnC,CAAnB,EAAsBoC,CAAC,CAAC1C,CAAxB,EAA2B0C,CAAC,CAACpC,CAA7B,EAAgC+L,CAAC,CAACrM,CAAlC,EAAqCqM,CAAC,CAAC/L,CAAvC,CADX,IAEJwoG,IAAI,CAAEz8F,CAAC,CAAC87F,IAAJ,EAAU97F,CAAV,EAAaA,CAAC,CAAC+qD,IAAf,CAAJ,IAA6B,CAF9B,EAEkC,OAAO,KAAP;AAClC/qD,IAAAA,CAAC,GAAGA,CAAC,CAACu9F,KAAN;AAEA,GA5C+C,CA8ChD;;;AACA,SAAQ/pG,CAAC,IAAIA,CAAC,CAACqT,CAAF,IAAO4K,IAApB,EAA2B;AAE1B,QAAKje,CAAC,KAAKkpG,GAAG,CAACZ,IAAV,IAAkBtoG,CAAC,KAAKkpG,GAAG,CAAC3xC,IAA5B,IACJkyC,eAAe,CAAE9mG,CAAC,CAACxC,CAAJ,EAAOwC,CAAC,CAAClC,CAAT,EAAYmC,CAAC,CAACzC,CAAd,EAAiByC,CAAC,CAACnC,CAAnB,EAAsBoC,CAAC,CAAC1C,CAAxB,EAA2B0C,CAAC,CAACpC,CAA7B,EAAgCT,CAAC,CAACG,CAAlC,EAAqCH,CAAC,CAACS,CAAvC,CADX,IAEJwoG,IAAI,CAAEjpG,CAAC,CAACsoG,IAAJ,EAAUtoG,CAAV,EAAaA,CAAC,CAACu3D,IAAf,CAAJ,IAA6B,CAF9B,EAEkC,OAAO,KAAP;AAClCv3D,IAAAA,CAAC,GAAGA,CAAC,CAACgqG,KAAN;AAEA;;AAED,SAAO,IAAP;AAEA,C,CAED;;;AACA,SAAST,sBAAT,CAAiCttE,KAAjC,EAAwCwyB,SAAxC,EAAmDw5C,GAAnD,EAAyD;AAExD,MAAIz7F,CAAC,GAAGyvB,KAAR;;AACA,KAAG;AAEF,QAAMt5B,CAAC,GAAG6J,CAAC,CAAC87F,IAAZ;AAAA,QACC1lG,CAAC,GAAG4J,CAAC,CAAC+qD,IAAF,CAAOA,IADZ;;AAGA,QAAK,CAAEx2C,MAAM,CAAEpe,CAAF,EAAKC,CAAL,CAAR,IAAoBo/B,UAAU,CAAEr/B,CAAF,EAAK6J,CAAL,EAAQA,CAAC,CAAC+qD,IAAV,EAAgB30D,CAAhB,CAA9B,IAAqDqnG,aAAa,CAAEtnG,CAAF,EAAKC,CAAL,CAAlE,IAA8EqnG,aAAa,CAAErnG,CAAF,EAAKD,CAAL,CAAhG,EAA2G;AAE1G8rD,MAAAA,SAAS,CAACxwD,IAAV,CAAgB0E,CAAC,CAAClE,CAAF,GAAMwpG,GAAtB;AACAx5C,MAAAA,SAAS,CAACxwD,IAAV,CAAgBuO,CAAC,CAAC/N,CAAF,GAAMwpG,GAAtB;AACAx5C,MAAAA,SAAS,CAACxwD,IAAV,CAAgB2E,CAAC,CAACnE,CAAF,GAAMwpG,GAAtB,EAJ0G,CAM1G;;AACAY,MAAAA,UAAU,CAAEr8F,CAAF,CAAV;AACAq8F,MAAAA,UAAU,CAAEr8F,CAAC,CAAC+qD,IAAJ,CAAV;AAEA/qD,MAAAA,CAAC,GAAGyvB,KAAK,GAAGr5B,CAAZ;AAEA;;AAED4J,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GArBD,QAqBU/qD,CAAC,KAAKyvB,KArBhB;;AAuBA,SAAO6sE,YAAY,CAAEt8F,CAAF,CAAnB;AAEA,C,CAED;;;AACA,SAASg9F,WAAT,CAAsBvtE,KAAtB,EAA6BwyB,SAA7B,EAAwCw5C,GAAxC,EAA6CrqF,IAA7C,EAAmDC,IAAnD,EAAyD0qF,OAAzD,EAAmE;AAElE;AACA,MAAI5lG,CAAC,GAAGs5B,KAAR;;AACA,KAAG;AAEF,QAAIr5B,CAAC,GAAGD,CAAC,CAAC40D,IAAF,CAAOA,IAAf;;AACA,WAAQ30D,CAAC,KAAKD,CAAC,CAAC2lG,IAAhB,EAAuB;AAEtB,UAAK3lG,CAAC,CAAClE,CAAF,KAAQmE,CAAC,CAACnE,CAAV,IAAeyrG,eAAe,CAAEvnG,CAAF,EAAKC,CAAL,CAAnC,EAA8C;AAE7C;AACA,YAAIC,CAAC,GAAGsnG,YAAY,CAAExnG,CAAF,EAAKC,CAAL,CAApB,CAH6C,CAK7C;;AACAD,QAAAA,CAAC,GAAGmmG,YAAY,CAAEnmG,CAAF,EAAKA,CAAC,CAAC40D,IAAP,CAAhB;AACA10D,QAAAA,CAAC,GAAGimG,YAAY,CAAEjmG,CAAF,EAAKA,CAAC,CAAC00D,IAAP,CAAhB,CAP6C,CAS7C;;AACAkxC,QAAAA,YAAY,CAAE9lG,CAAF,EAAK8rD,SAAL,EAAgBw5C,GAAhB,EAAqBrqF,IAArB,EAA2BC,IAA3B,EAAiC0qF,OAAjC,CAAZ;AACAE,QAAAA,YAAY,CAAE5lG,CAAF,EAAK4rD,SAAL,EAAgBw5C,GAAhB,EAAqBrqF,IAArB,EAA2BC,IAA3B,EAAiC0qF,OAAjC,CAAZ;AACA;AAEA;;AAED3lG,MAAAA,CAAC,GAAGA,CAAC,CAAC20D,IAAN;AAEA;;AAED50D,IAAAA,CAAC,GAAGA,CAAC,CAAC40D,IAAN;AAEA,GA3BD,QA2BU50D,CAAC,KAAKs5B,KA3BhB;AA6BA,C,CAED;;;AACA,SAASusE,cAAT,CAAyB14F,IAAzB,EAA+Bk4F,WAA/B,EAA4CI,SAA5C,EAAuDH,GAAvD,EAA6D;AAE5D,MAAMmC,KAAK,GAAG,EAAd;AACA,MAAI3rG,CAAJ,EAAOkc,GAAP,EAAYshB,KAAZ,EAAmBoG,GAAnB,EAAwBojC,IAAxB;;AAEA,OAAMhnE,CAAC,GAAG,CAAJ,EAAOkc,GAAG,GAAGqtF,WAAW,CAACrpG,MAA/B,EAAuCF,CAAC,GAAGkc,GAA3C,EAAgDlc,CAAC,EAAjD,EAAuD;AAEtDw9B,IAAAA,KAAK,GAAG+rE,WAAW,CAAEvpG,CAAF,CAAX,GAAmBwpG,GAA3B;AACA5lE,IAAAA,GAAG,GAAG5jC,CAAC,GAAGkc,GAAG,GAAG,CAAV,GAAcqtF,WAAW,CAAEvpG,CAAC,GAAG,CAAN,CAAX,GAAuBwpG,GAArC,GAA2Cn4F,IAAI,CAACnR,MAAtD;AACA8mE,IAAAA,IAAI,GAAG4iC,UAAU,CAAEv4F,IAAF,EAAQmsB,KAAR,EAAeoG,GAAf,EAAoB4lE,GAApB,EAAyB,KAAzB,CAAjB;AACA,QAAKxiC,IAAI,KAAKA,IAAI,CAAClO,IAAnB,EAA0BkO,IAAI,CAACujC,OAAL,GAAe,IAAf;AAC1BoB,IAAAA,KAAK,CAACnsG,IAAN,CAAYosG,WAAW,CAAE5kC,IAAF,CAAvB;AAEA;;AAED2kC,EAAAA,KAAK,CAAC35C,IAAN,CAAY65C,QAAZ,EAf4D,CAiB5D;;AACA,OAAM7rG,CAAC,GAAG,CAAV,EAAaA,CAAC,GAAG2rG,KAAK,CAACzrG,MAAvB,EAA+BF,CAAC,EAAhC,EAAsC;AAErC8rG,IAAAA,aAAa,CAAEH,KAAK,CAAE3rG,CAAF,CAAP,EAAc2pG,SAAd,CAAb;AACAA,IAAAA,SAAS,GAAGU,YAAY,CAAEV,SAAF,EAAaA,SAAS,CAAC7wC,IAAvB,CAAxB;AAEA;;AAED,SAAO6wC,SAAP;AAEA;;AAED,SAASkC,QAAT,CAAmB3nG,CAAnB,EAAsBC,CAAtB,EAA0B;AAEzB,SAAOD,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAf;AAEA,C,CAED;;;AACA,SAASoqG,aAAT,CAAwB1C,IAAxB,EAA8BO,SAA9B,EAA0C;AAEzCA,EAAAA,SAAS,GAAGoC,cAAc,CAAE3C,IAAF,EAAQO,SAAR,CAA1B;;AACA,MAAKA,SAAL,EAAiB;AAEhB,QAAMxlG,CAAC,GAAGunG,YAAY,CAAE/B,SAAF,EAAaP,IAAb,CAAtB,CAFgB,CAIhB;;AACAiB,IAAAA,YAAY,CAAEV,SAAF,EAAaA,SAAS,CAAC7wC,IAAvB,CAAZ;AACAuxC,IAAAA,YAAY,CAAElmG,CAAF,EAAKA,CAAC,CAAC20D,IAAP,CAAZ;AAEA;AAED,C,CAED;;;AACA,SAASizC,cAAT,CAAyB3C,IAAzB,EAA+BO,SAA/B,EAA2C;AAE1C,MAAI57F,CAAC,GAAG47F,SAAR;AACA,MAAMqC,EAAE,GAAG5C,IAAI,CAAC1nG,CAAhB;AACA,MAAMuqG,EAAE,GAAG7C,IAAI,CAACpnG,CAAhB;AACA,MAAI2a,EAAE,GAAG,CAAEsC,QAAX;AAAA,MAAqBzd,CAArB,CAL0C,CAO1C;AACA;;AACA,KAAG;AAEF,QAAKyqG,EAAE,IAAIl+F,CAAC,CAAC/L,CAAR,IAAaiqG,EAAE,IAAIl+F,CAAC,CAAC+qD,IAAF,CAAO92D,CAA1B,IAA+B+L,CAAC,CAAC+qD,IAAF,CAAO92D,CAAP,KAAa+L,CAAC,CAAC/L,CAAnD,EAAuD;AAEtD,UAAMN,CAAC,GAAGqM,CAAC,CAACrM,CAAF,GAAM,CAAEuqG,EAAE,GAAGl+F,CAAC,CAAC/L,CAAT,KAAiB+L,CAAC,CAAC+qD,IAAF,CAAOp3D,CAAP,GAAWqM,CAAC,CAACrM,CAA9B,KAAsCqM,CAAC,CAAC+qD,IAAF,CAAO92D,CAAP,GAAW+L,CAAC,CAAC/L,CAAnD,CAAhB;;AACA,UAAKN,CAAC,IAAIsqG,EAAL,IAAWtqG,CAAC,GAAGib,EAApB,EAAyB;AAExBA,QAAAA,EAAE,GAAGjb,CAAL;;AACA,YAAKA,CAAC,KAAKsqG,EAAX,EAAgB;AAEf,cAAKC,EAAE,KAAKl+F,CAAC,CAAC/L,CAAd,EAAkB,OAAO+L,CAAP;AAClB,cAAKk+F,EAAE,KAAKl+F,CAAC,CAAC+qD,IAAF,CAAO92D,CAAnB,EAAuB,OAAO+L,CAAC,CAAC+qD,IAAT;AAEvB;;AAEDt3D,QAAAA,CAAC,GAAGuM,CAAC,CAACrM,CAAF,GAAMqM,CAAC,CAAC+qD,IAAF,CAAOp3D,CAAb,GAAiBqM,CAAjB,GAAqBA,CAAC,CAAC+qD,IAA3B;AAEA;AAED;;AAED/qD,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GAvBD,QAuBU/qD,CAAC,KAAK47F,SAvBhB;;AAyBA,MAAK,CAAEnoG,CAAP,EAAW,OAAO,IAAP;AAEX,MAAKwqG,EAAE,KAAKrvF,EAAZ,EAAiB,OAAOnb,CAAP,CApCyB,CAoCf;AAE3B;AACA;AACA;;AAEA,MAAMksC,IAAI,GAAGlsC,CAAb;AAAA,MACC0qG,EAAE,GAAG1qG,CAAC,CAACE,CADR;AAAA,MAECyqG,EAAE,GAAG3qG,CAAC,CAACQ,CAFR;AAGA,MAAIoqG,MAAM,GAAGntF,QAAb;AAAA,MAAuBopB,GAAvB;AAEAt6B,EAAAA,CAAC,GAAGvM,CAAJ;;AAEA,KAAG;AAEF,QAAKwqG,EAAE,IAAIj+F,CAAC,CAACrM,CAAR,IAAaqM,CAAC,CAACrM,CAAF,IAAOwqG,EAApB,IAA0BF,EAAE,KAAKj+F,CAAC,CAACrM,CAAnC,IACHspG,eAAe,CAAEiB,EAAE,GAAGE,EAAL,GAAUH,EAAV,GAAervF,EAAjB,EAAqBsvF,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCF,EAAE,GAAGE,EAAL,GAAUxvF,EAAV,GAAeqvF,EAAhD,EAAoDC,EAApD,EAAwDl+F,CAAC,CAACrM,CAA1D,EAA6DqM,CAAC,CAAC/L,CAA/D,CADjB,EACsF;AAErFqmC,MAAAA,GAAG,GAAG9nC,IAAI,CAACiC,GAAL,CAAUypG,EAAE,GAAGl+F,CAAC,CAAC/L,CAAjB,KAAyBgqG,EAAE,GAAGj+F,CAAC,CAACrM,CAAhC,CAAN,CAFqF,CAE1C;;AAE3C,UAAK8pG,aAAa,CAAEz9F,CAAF,EAAKq7F,IAAL,CAAb,KAA8B/gE,GAAG,GAAG+jE,MAAN,IAAkB/jE,GAAG,KAAK+jE,MAAR,KAAoBr+F,CAAC,CAACrM,CAAF,GAAMF,CAAC,CAACE,CAAR,IAAeqM,CAAC,CAACrM,CAAF,KAAQF,CAAC,CAACE,CAAV,IAAe2qG,oBAAoB,CAAE7qG,CAAF,EAAKuM,CAAL,CAAtE,CAAhD,CAAL,EAA8I;AAE7IvM,QAAAA,CAAC,GAAGuM,CAAJ;AACAq+F,QAAAA,MAAM,GAAG/jE,GAAT;AAEA;AAED;;AAEDt6B,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GAlBD,QAkBU/qD,CAAC,KAAK2/B,IAlBhB;;AAoBA,SAAOlsC,CAAP;AAEA,C,CAED;;;AACA,SAAS6qG,oBAAT,CAA+B7qG,CAA/B,EAAkCuM,CAAlC,EAAsC;AAErC,SAAOy8F,IAAI,CAAEhpG,CAAC,CAACqoG,IAAJ,EAAUroG,CAAV,EAAauM,CAAC,CAAC87F,IAAf,CAAJ,GAA4B,CAA5B,IAAiCW,IAAI,CAAEz8F,CAAC,CAAC+qD,IAAJ,EAAUt3D,CAAV,EAAaA,CAAC,CAACs3D,IAAf,CAAJ,GAA4B,CAApE;AAEA,C,CAED;;;AACA,SAAS6xC,UAAT,CAAqBntE,KAArB,EAA4Bre,IAA5B,EAAkCC,IAAlC,EAAwC0qF,OAAxC,EAAkD;AAEjD,MAAI/7F,CAAC,GAAGyvB,KAAR;;AACA,KAAG;AAEF,QAAKzvB,CAAC,CAAC6G,CAAF,KAAQ,IAAb,EAAoB7G,CAAC,CAAC6G,CAAF,GAAMy2F,MAAM,CAAEt9F,CAAC,CAACrM,CAAJ,EAAOqM,CAAC,CAAC/L,CAAT,EAAYmd,IAAZ,EAAkBC,IAAlB,EAAwB0qF,OAAxB,CAAZ;AACpB/7F,IAAAA,CAAC,CAACu9F,KAAF,GAAUv9F,CAAC,CAAC87F,IAAZ;AACA97F,IAAAA,CAAC,CAACw9F,KAAF,GAAUx9F,CAAC,CAAC+qD,IAAZ;AACA/qD,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GAPD,QAOU/qD,CAAC,KAAKyvB,KAPhB;;AASAzvB,EAAAA,CAAC,CAACu9F,KAAF,CAAQC,KAAR,GAAgB,IAAhB;AACAx9F,EAAAA,CAAC,CAACu9F,KAAF,GAAU,IAAV;AAEAgB,EAAAA,UAAU,CAAEv+F,CAAF,CAAV;AAEA,C,CAED;AACA;;;AACA,SAASu+F,UAAT,CAAqBtlC,IAArB,EAA4B;AAE3B,MAAIhnE,CAAJ;AAAA,MAAO+N,CAAP;AAAA,MAAU9J,CAAV;AAAA,MAAa0C,CAAb;AAAA,MAAgB4lG,IAAhB;AAAA,MAAsBC,SAAtB;AAAA,MAAiCC,KAAjC;AAAA,MAAwCC,KAAxC;AAAA,MACCC,MAAM,GAAG,CADV;;AAGA,KAAG;AAEF5+F,IAAAA,CAAC,GAAGi5D,IAAJ;AACAA,IAAAA,IAAI,GAAG,IAAP;AACAulC,IAAAA,IAAI,GAAG,IAAP;AACAC,IAAAA,SAAS,GAAG,CAAZ;;AAEA,WAAQz+F,CAAR,EAAY;AAEXy+F,MAAAA,SAAS;AACTvoG,MAAAA,CAAC,GAAG8J,CAAJ;AACA0+F,MAAAA,KAAK,GAAG,CAAR;;AACA,WAAMzsG,CAAC,GAAG,CAAV,EAAaA,CAAC,GAAG2sG,MAAjB,EAAyB3sG,CAAC,EAA1B,EAAgC;AAE/BysG,QAAAA,KAAK;AACLxoG,QAAAA,CAAC,GAAGA,CAAC,CAACsnG,KAAN;AACA,YAAK,CAAEtnG,CAAP,EAAW;AAEX;;AAEDyoG,MAAAA,KAAK,GAAGC,MAAR;;AAEA,aAAQF,KAAK,GAAG,CAAR,IAAeC,KAAK,GAAG,CAAR,IAAazoG,CAApC,EAA0C;AAEzC,YAAKwoG,KAAK,KAAK,CAAV,KAAiBC,KAAK,KAAK,CAAV,IAAe,CAAEzoG,CAAjB,IAAsB8J,CAAC,CAAC6G,CAAF,IAAO3Q,CAAC,CAAC2Q,CAAhD,CAAL,EAA2D;AAE1DjO,UAAAA,CAAC,GAAGoH,CAAJ;AACAA,UAAAA,CAAC,GAAGA,CAAC,CAACw9F,KAAN;AACAkB,UAAAA,KAAK;AAEL,SAND,MAMO;AAEN9lG,UAAAA,CAAC,GAAG1C,CAAJ;AACAA,UAAAA,CAAC,GAAGA,CAAC,CAACsnG,KAAN;AACAmB,UAAAA,KAAK;AAEL;;AAED,YAAKH,IAAL,EAAYA,IAAI,CAAChB,KAAL,GAAa5kG,CAAb,CAAZ,KACKqgE,IAAI,GAAGrgE,CAAP;AAELA,QAAAA,CAAC,CAAC2kG,KAAF,GAAUiB,IAAV;AACAA,QAAAA,IAAI,GAAG5lG,CAAP;AAEA;;AAEDoH,MAAAA,CAAC,GAAG9J,CAAJ;AAEA;;AAEDsoG,IAAAA,IAAI,CAAChB,KAAL,GAAa,IAAb;AACAoB,IAAAA,MAAM,IAAI,CAAV;AAEA,GArDD,QAqDUH,SAAS,GAAG,CArDtB;;AAuDA,SAAOxlC,IAAP;AAEA,C,CAED;;;AACA,SAASqkC,MAAT,CAAiB3pG,CAAjB,EAAoBM,CAApB,EAAuBmd,IAAvB,EAA6BC,IAA7B,EAAmC0qF,OAAnC,EAA6C;AAE5C;AACApoG,EAAAA,CAAC,GAAG,SAAUA,CAAC,GAAGyd,IAAd,IAAuB2qF,OAA3B;AACA9nG,EAAAA,CAAC,GAAG,SAAUA,CAAC,GAAGod,IAAd,IAAuB0qF,OAA3B;AAEApoG,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AAEAM,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAb,IAAqB,UAAzB;AAEA,SAAON,CAAC,GAAKM,CAAC,IAAI,CAAlB;AAEA,C,CAED;;;AACA,SAAS4pG,WAAT,CAAsBpuE,KAAtB,EAA8B;AAE7B,MAAIzvB,CAAC,GAAGyvB,KAAR;AAAA,MACCovE,QAAQ,GAAGpvE,KADZ;;AAEA,KAAG;AAEF,QAAKzvB,CAAC,CAACrM,CAAF,GAAMkrG,QAAQ,CAAClrG,CAAf,IAAsBqM,CAAC,CAACrM,CAAF,KAAQkrG,QAAQ,CAAClrG,CAAjB,IAAsBqM,CAAC,CAAC/L,CAAF,GAAM4qG,QAAQ,CAAC5qG,CAAhE,EAAsE4qG,QAAQ,GAAG7+F,CAAX;AACtEA,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GALD,QAKU/qD,CAAC,KAAKyvB,KALhB;;AAOA,SAAOovE,QAAP;AAEA,C,CAED;;;AACA,SAAS5B,eAAT,CAA0BttF,EAA1B,EAA8BC,EAA9B,EAAkCE,EAAlC,EAAsCC,EAAtC,EAA0ClS,EAA1C,EAA8CC,EAA9C,EAAkDy0F,EAAlD,EAAsDC,EAAtD,EAA2D;AAE1D,SAAO,CAAE30F,EAAE,GAAG00F,EAAP,KAAgB3iF,EAAE,GAAG4iF,EAArB,IAA4B,CAAE7iF,EAAE,GAAG4iF,EAAP,KAAgBz0F,EAAE,GAAG00F,EAArB,CAA5B,IAAyD,CAAzD,IACL,CAAE7iF,EAAE,GAAG4iF,EAAP,KAAgBxiF,EAAE,GAAGyiF,EAArB,IAA4B,CAAE1iF,EAAE,GAAGyiF,EAAP,KAAgB3iF,EAAE,GAAG4iF,EAArB,CAA5B,IAAyD,CADpD,IAEL,CAAE1iF,EAAE,GAAGyiF,EAAP,KAAgBz0F,EAAE,GAAG00F,EAArB,IAA4B,CAAE30F,EAAE,GAAG00F,EAAP,KAAgBxiF,EAAE,GAAGyiF,EAArB,CAA5B,IAAyD,CAF3D;AAIA,C,CAED;;;AACA,SAASkL,eAAT,CAA0BvnG,CAA1B,EAA6BC,CAA7B,EAAiC;AAEhC,SAAOD,CAAC,CAAC40D,IAAF,CAAO94D,CAAP,KAAamE,CAAC,CAACnE,CAAf,IAAoBkE,CAAC,CAAC2lG,IAAF,CAAO7pG,CAAP,KAAamE,CAAC,CAACnE,CAAnC,IAAwC,CAAE6sG,iBAAiB,CAAE3oG,CAAF,EAAKC,CAAL,CAA3D,KACJqnG,aAAa,CAAEtnG,CAAF,EAAKC,CAAL,CAAb,IAAyBqnG,aAAa,CAAErnG,CAAF,EAAKD,CAAL,CAAtC,IAAkD4oG,YAAY,CAAE5oG,CAAF,EAAKC,CAAL,CAA9D,KACAqmG,IAAI,CAAEtmG,CAAC,CAAC2lG,IAAJ,EAAU3lG,CAAV,EAAaC,CAAC,CAAC0lG,IAAf,CAAJ,IAA6BW,IAAI,CAAEtmG,CAAF,EAAKC,CAAC,CAAC0lG,IAAP,EAAa1lG,CAAb,CADjC,KACuD;AACzDme,EAAAA,MAAM,CAAEpe,CAAF,EAAKC,CAAL,CAAN,IAAkBqmG,IAAI,CAAEtmG,CAAC,CAAC2lG,IAAJ,EAAU3lG,CAAV,EAAaA,CAAC,CAAC40D,IAAf,CAAJ,GAA4B,CAA9C,IAAmD0xC,IAAI,CAAErmG,CAAC,CAAC0lG,IAAJ,EAAU1lG,CAAV,EAAaA,CAAC,CAAC20D,IAAf,CAAJ,GAA4B,CAHzE,CAAP,CAFgC,CAKqD;AAErF,C,CAED;;;AACA,SAAS0xC,IAAT,CAAez8F,CAAf,EAAkB9J,CAAlB,EAAqBqH,CAArB,EAAyB;AAExB,SAAO,CAAErH,CAAC,CAACjC,CAAF,GAAM+L,CAAC,CAAC/L,CAAV,KAAkBsJ,CAAC,CAAC5J,CAAF,GAAMuC,CAAC,CAACvC,CAA1B,IAAgC,CAAEuC,CAAC,CAACvC,CAAF,GAAMqM,CAAC,CAACrM,CAAV,KAAkB4J,CAAC,CAACtJ,CAAF,GAAMiC,CAAC,CAACjC,CAA1B,CAAvC;AAEA,C,CAED;;;AACA,SAASsgB,MAAT,CAAiBM,EAAjB,EAAqBC,EAArB,EAA0B;AAEzB,SAAOD,EAAE,CAAClhB,CAAH,KAASmhB,EAAE,CAACnhB,CAAZ,IAAiBkhB,EAAE,CAAC5gB,CAAH,KAAS6gB,EAAE,CAAC7gB,CAApC;AAEA,C,CAED;;;AACA,SAASuhC,UAAT,CAAqB3gB,EAArB,EAAyBmqF,EAAzB,EAA6BlqF,EAA7B,EAAiCmqF,EAAjC,EAAsC;AAErC,MAAMC,EAAE,GAAG1mF,IAAI,CAAEikF,IAAI,CAAE5nF,EAAF,EAAMmqF,EAAN,EAAUlqF,EAAV,CAAN,CAAf;AACA,MAAMqqF,EAAE,GAAG3mF,IAAI,CAAEikF,IAAI,CAAE5nF,EAAF,EAAMmqF,EAAN,EAAUC,EAAV,CAAN,CAAf;AACA,MAAMG,EAAE,GAAG5mF,IAAI,CAAEikF,IAAI,CAAE3nF,EAAF,EAAMmqF,EAAN,EAAUpqF,EAAV,CAAN,CAAf;AACA,MAAMwqF,EAAE,GAAG7mF,IAAI,CAAEikF,IAAI,CAAE3nF,EAAF,EAAMmqF,EAAN,EAAUD,EAAV,CAAN,CAAf;AAEA,MAAKE,EAAE,KAAKC,EAAP,IAAaC,EAAE,KAAKC,EAAzB,EAA8B,OAAO,IAAP,CAPO,CAOM;;AAE3C,MAAKH,EAAE,KAAK,CAAP,IAAYI,SAAS,CAAEzqF,EAAF,EAAMC,EAAN,EAAUkqF,EAAV,CAA1B,EAA2C,OAAO,IAAP,CATN,CASmB;;AACxD,MAAKG,EAAE,KAAK,CAAP,IAAYG,SAAS,CAAEzqF,EAAF,EAAMoqF,EAAN,EAAUD,EAAV,CAA1B,EAA2C,OAAO,IAAP,CAVN,CAUmB;;AACxD,MAAKI,EAAE,KAAK,CAAP,IAAYE,SAAS,CAAExqF,EAAF,EAAMD,EAAN,EAAUoqF,EAAV,CAA1B,EAA2C,OAAO,IAAP,CAXN,CAWmB;;AACxD,MAAKI,EAAE,KAAK,CAAP,IAAYC,SAAS,CAAExqF,EAAF,EAAMkqF,EAAN,EAAUC,EAAV,CAA1B,EAA2C,OAAO,IAAP,CAZN,CAYmB;;AAExD,SAAO,KAAP;AAEA,C,CAED;;;AACA,SAASK,SAAT,CAAoBt/F,CAApB,EAAuB9J,CAAvB,EAA0BqH,CAA1B,EAA8B;AAE7B,SAAOrH,CAAC,CAACvC,CAAF,IAAOnB,IAAI,CAACc,GAAL,CAAU0M,CAAC,CAACrM,CAAZ,EAAe4J,CAAC,CAAC5J,CAAjB,CAAP,IAA+BuC,CAAC,CAACvC,CAAF,IAAOnB,IAAI,CAACa,GAAL,CAAU2M,CAAC,CAACrM,CAAZ,EAAe4J,CAAC,CAAC5J,CAAjB,CAAtC,IAA8DuC,CAAC,CAACjC,CAAF,IAAOzB,IAAI,CAACc,GAAL,CAAU0M,CAAC,CAAC/L,CAAZ,EAAesJ,CAAC,CAACtJ,CAAjB,CAArE,IAA6FiC,CAAC,CAACjC,CAAF,IAAOzB,IAAI,CAACa,GAAL,CAAU2M,CAAC,CAAC/L,CAAZ,EAAesJ,CAAC,CAACtJ,CAAjB,CAA3G;AAEA;;AAED,SAASukB,IAAT,CAAe+mF,GAAf,EAAqB;AAEpB,SAAOA,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcA,GAAG,GAAG,CAAN,GAAU,CAAE,CAAZ,GAAgB,CAArC;AAEA,C,CAED;;;AACA,SAAST,iBAAT,CAA4B3oG,CAA5B,EAA+BC,CAA/B,EAAmC;AAElC,MAAI4J,CAAC,GAAG7J,CAAR;;AACA,KAAG;AAEF,QAAK6J,CAAC,CAAC/N,CAAF,KAAQkE,CAAC,CAAClE,CAAV,IAAe+N,CAAC,CAAC+qD,IAAF,CAAO94D,CAAP,KAAakE,CAAC,CAAClE,CAA9B,IAAmC+N,CAAC,CAAC/N,CAAF,KAAQmE,CAAC,CAACnE,CAA7C,IAAkD+N,CAAC,CAAC+qD,IAAF,CAAO94D,CAAP,KAAamE,CAAC,CAACnE,CAAjE,IACHujC,UAAU,CAAEx1B,CAAF,EAAKA,CAAC,CAAC+qD,IAAP,EAAa50D,CAAb,EAAgBC,CAAhB,CADZ,EACkC,OAAO,IAAP;AAClC4J,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GAND,QAMU/qD,CAAC,KAAK7J,CANhB;;AAQA,SAAO,KAAP;AAEA,C,CAED;;;AACA,SAASsnG,aAAT,CAAwBtnG,CAAxB,EAA2BC,CAA3B,EAA+B;AAE9B,SAAOqmG,IAAI,CAAEtmG,CAAC,CAAC2lG,IAAJ,EAAU3lG,CAAV,EAAaA,CAAC,CAAC40D,IAAf,CAAJ,GAA4B,CAA5B,GACN0xC,IAAI,CAAEtmG,CAAF,EAAKC,CAAL,EAAQD,CAAC,CAAC40D,IAAV,CAAJ,IAAwB,CAAxB,IAA6B0xC,IAAI,CAAEtmG,CAAF,EAAKA,CAAC,CAAC2lG,IAAP,EAAa1lG,CAAb,CAAJ,IAAwB,CAD/C,GAENqmG,IAAI,CAAEtmG,CAAF,EAAKC,CAAL,EAAQD,CAAC,CAAC2lG,IAAV,CAAJ,GAAuB,CAAvB,IAA4BW,IAAI,CAAEtmG,CAAF,EAAKA,CAAC,CAAC40D,IAAP,EAAa30D,CAAb,CAAJ,GAAuB,CAFpD;AAIA,C,CAED;;;AACA,SAAS2oG,YAAT,CAAuB5oG,CAAvB,EAA0BC,CAA1B,EAA8B;AAE7B,MAAI4J,CAAC,GAAG7J,CAAR;AAAA,MACCqpG,MAAM,GAAG,KADV;AAEA,MAAMjN,EAAE,GAAG,CAAEp8F,CAAC,CAACxC,CAAF,GAAMyC,CAAC,CAACzC,CAAV,IAAgB,CAA3B;AAAA,MACC6+F,EAAE,GAAG,CAAEr8F,CAAC,CAAClC,CAAF,GAAMmC,CAAC,CAACnC,CAAV,IAAgB,CADtB;;AAEA,KAAG;AAEF,QAAS+L,CAAC,CAAC/L,CAAF,GAAMu+F,EAAR,KAAmBxyF,CAAC,CAAC+qD,IAAF,CAAO92D,CAAP,GAAWu+F,EAAhC,IAA0CxyF,CAAC,CAAC+qD,IAAF,CAAO92D,CAAP,KAAa+L,CAAC,CAAC/L,CAAzD,IACDs+F,EAAE,GAAG,CAAEvyF,CAAC,CAAC+qD,IAAF,CAAOp3D,CAAP,GAAWqM,CAAC,CAACrM,CAAf,KAAuB6+F,EAAE,GAAGxyF,CAAC,CAAC/L,CAA9B,KAAsC+L,CAAC,CAAC+qD,IAAF,CAAO92D,CAAP,GAAW+L,CAAC,CAAC/L,CAAnD,IAAyD+L,CAAC,CAACrM,CADpE,EAEC6rG,MAAM,GAAG,CAAEA,MAAX;AACDx/F,IAAAA,CAAC,GAAGA,CAAC,CAAC+qD,IAAN;AAEA,GAPD,QAOU/qD,CAAC,KAAK7J,CAPhB;;AASA,SAAOqpG,MAAP;AAEA,C,CAED;AACA;;;AACA,SAAS7B,YAAT,CAAuBxnG,CAAvB,EAA0BC,CAA1B,EAA8B;AAE7B,MAAMvC,EAAE,GAAG,IAAI4rG,IAAJ,CAAUtpG,CAAC,CAAClE,CAAZ,EAAekE,CAAC,CAACxC,CAAjB,EAAoBwC,CAAC,CAAClC,CAAtB,CAAX;AAAA,MACCF,EAAE,GAAG,IAAI0rG,IAAJ,CAAUrpG,CAAC,CAACnE,CAAZ,EAAemE,CAAC,CAACzC,CAAjB,EAAoByC,CAAC,CAACnC,CAAtB,CADN;AAAA,MAECyrG,EAAE,GAAGvpG,CAAC,CAAC40D,IAFR;AAAA,MAGC40C,EAAE,GAAGvpG,CAAC,CAAC0lG,IAHR;AAKA3lG,EAAAA,CAAC,CAAC40D,IAAF,GAAS30D,CAAT;AACAA,EAAAA,CAAC,CAAC0lG,IAAF,GAAS3lG,CAAT;AAEAtC,EAAAA,EAAE,CAACk3D,IAAH,GAAU20C,EAAV;AACAA,EAAAA,EAAE,CAAC5D,IAAH,GAAUjoG,EAAV;AAEAE,EAAAA,EAAE,CAACg3D,IAAH,GAAUl3D,EAAV;AACAA,EAAAA,EAAE,CAACioG,IAAH,GAAU/nG,EAAV;AAEA4rG,EAAAA,EAAE,CAAC50C,IAAH,GAAUh3D,EAAV;AACAA,EAAAA,EAAE,CAAC+nG,IAAH,GAAU6D,EAAV;AAEA,SAAO5rG,EAAP;AAEA,C,CAED;;;AACA,SAASqoG,UAAT,CAAqBnqG,CAArB,EAAwB0B,CAAxB,EAA2BM,CAA3B,EAA8Bs7F,IAA9B,EAAqC;AAEpC,MAAMvvF,CAAC,GAAG,IAAIy/F,IAAJ,CAAUxtG,CAAV,EAAa0B,CAAb,EAAgBM,CAAhB,CAAV;;AAEA,MAAK,CAAEs7F,IAAP,EAAc;AAEbvvF,IAAAA,CAAC,CAAC87F,IAAF,GAAS97F,CAAT;AACAA,IAAAA,CAAC,CAAC+qD,IAAF,GAAS/qD,CAAT;AAEA,GALD,MAKO;AAENA,IAAAA,CAAC,CAAC+qD,IAAF,GAASwkC,IAAI,CAACxkC,IAAd;AACA/qD,IAAAA,CAAC,CAAC87F,IAAF,GAASvM,IAAT;AACAA,IAAAA,IAAI,CAACxkC,IAAL,CAAU+wC,IAAV,GAAiB97F,CAAjB;AACAuvF,IAAAA,IAAI,CAACxkC,IAAL,GAAY/qD,CAAZ;AAEA;;AAED,SAAOA,CAAP;AAEA;;AAED,SAASq8F,UAAT,CAAqBr8F,CAArB,EAAyB;AAExBA,EAAAA,CAAC,CAAC+qD,IAAF,CAAO+wC,IAAP,GAAc97F,CAAC,CAAC87F,IAAhB;AACA97F,EAAAA,CAAC,CAAC87F,IAAF,CAAO/wC,IAAP,GAAc/qD,CAAC,CAAC+qD,IAAhB;AAEA,MAAK/qD,CAAC,CAACu9F,KAAP,EAAev9F,CAAC,CAACu9F,KAAF,CAAQC,KAAR,GAAgBx9F,CAAC,CAACw9F,KAAlB;AACf,MAAKx9F,CAAC,CAACw9F,KAAP,EAAex9F,CAAC,CAACw9F,KAAF,CAAQD,KAAR,GAAgBv9F,CAAC,CAACu9F,KAAlB;AAEf;;AAED,SAASkC,IAAT,CAAextG,CAAf,EAAkB0B,CAAlB,EAAqBM,CAArB,EAAyB;AAExB;AACA,OAAKhC,CAAL,GAASA,CAAT,CAHwB,CAKxB;;AACA,OAAK0B,CAAL,GAASA,CAAT;AACA,OAAKM,CAAL,GAASA,CAAT,CAPwB,CASxB;;AACA,OAAK6nG,IAAL,GAAY,IAAZ;AACA,OAAK/wC,IAAL,GAAY,IAAZ,CAXwB,CAaxB;;AACA,OAAKlkD,CAAL,GAAS,IAAT,CAdwB,CAgBxB;;AACA,OAAK02F,KAAL,GAAa,IAAb;AACA,OAAKC,KAAL,GAAa,IAAb,CAlBwB,CAoBxB;;AACA,OAAKhB,OAAL,GAAe,KAAf;AAEA;;AAED,SAASL,UAAT,CAAqB74F,IAArB,EAA2BmsB,KAA3B,EAAkCoG,GAAlC,EAAuC4lE,GAAvC,EAA6C;AAE5C,MAAIj8C,GAAG,GAAG,CAAV;;AACA,OAAM,IAAIvtD,CAAC,GAAGw9B,KAAR,EAAe9a,CAAC,GAAGkhB,GAAG,GAAG4lE,GAA/B,EAAoCxpG,CAAC,GAAG4jC,GAAxC,EAA6C5jC,CAAC,IAAIwpG,GAAlD,EAAwD;AAEvDj8C,IAAAA,GAAG,IAAI,CAAEl8C,IAAI,CAAEqR,CAAF,CAAJ,GAAYrR,IAAI,CAAErR,CAAF,CAAlB,KAA8BqR,IAAI,CAAErR,CAAC,GAAG,CAAN,CAAJ,GAAgBqR,IAAI,CAAEqR,CAAC,GAAG,CAAN,CAAlD,CAAP;AACAA,IAAAA,CAAC,GAAG1iB,CAAJ;AAEA;;AAED,SAAOutD,GAAP;AAEA;;IAEKogD,U;;;;;;;WAEL;AAEA,kBAAaC,OAAb,EAAuB;AAEtB,UAAMrsG,CAAC,GAAGqsG,OAAO,CAAC1tG,MAAlB;AACA,UAAIgE,CAAC,GAAG,GAAR;;AAEA,WAAM,IAAI6J,CAAC,GAAGxM,CAAC,GAAG,CAAZ,EAAe0C,CAAC,GAAG,CAAzB,EAA4BA,CAAC,GAAG1C,CAAhC,EAAmCwM,CAAC,GAAG9J,CAAC,EAAxC,EAA8C;AAE7CC,QAAAA,CAAC,IAAI0pG,OAAO,CAAE7/F,CAAF,CAAP,CAAarM,CAAb,GAAiBksG,OAAO,CAAE3pG,CAAF,CAAP,CAAajC,CAA9B,GAAkC4rG,OAAO,CAAE3pG,CAAF,CAAP,CAAavC,CAAb,GAAiBksG,OAAO,CAAE7/F,CAAF,CAAP,CAAa/L,CAArE;AAEA;;AAED,aAAOkC,CAAC,GAAG,GAAX;AAEA;;;WAED,qBAAoBk/F,GAApB,EAA0B;AAEzB,aAAOuK,UAAU,CAACnD,IAAX,CAAiBpH,GAAjB,IAAyB,CAAhC;AAEA;;;WAED,0BAAyBwK,OAAzB,EAAkC3E,KAAlC,EAA0C;AAEzC,UAAMtkE,QAAQ,GAAG,EAAjB,CAFyC,CAEpB;;AACrB,UAAM4kE,WAAW,GAAG,EAApB,CAHyC,CAGjB;;AACxB,UAAMsE,KAAK,GAAG,EAAd,CAJyC,CAIvB;;AAElBC,MAAAA,eAAe,CAAEF,OAAF,CAAf;AACAG,MAAAA,UAAU,CAAEppE,QAAF,EAAYipE,OAAZ,CAAV,CAPyC,CASzC;;AAEA,UAAII,SAAS,GAAGJ,OAAO,CAAC1tG,MAAxB;AAEA+oG,MAAAA,KAAK,CAAC9Y,OAAN,CAAe2d,eAAf;;AAEA,WAAM,IAAI9tG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGipG,KAAK,CAAC/oG,MAA3B,EAAmCF,CAAC,EAApC,EAA0C;AAEzCupG,QAAAA,WAAW,CAAC/pG,IAAZ,CAAkBwuG,SAAlB;AACAA,QAAAA,SAAS,IAAI/E,KAAK,CAAEjpG,CAAF,CAAL,CAAWE,MAAxB;AACA6tG,QAAAA,UAAU,CAAEppE,QAAF,EAAYskE,KAAK,CAAEjpG,CAAF,CAAjB,CAAV;AAEA,OArBwC,CAuBzC;;;AAEA,UAAMgwD,SAAS,GAAGq5C,MAAM,CAACC,WAAP,CAAoB3kE,QAApB,EAA8B4kE,WAA9B,CAAlB,CAzByC,CA2BzC;;AAEA,WAAM,IAAIvpG,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGgwD,SAAS,CAAC9vD,MAA/B,EAAuCF,IAAC,IAAI,CAA5C,EAAgD;AAE/C6tG,QAAAA,KAAK,CAACruG,IAAN,CAAYwwD,SAAS,CAACjwD,KAAV,CAAiBC,IAAjB,EAAoBA,IAAC,GAAG,CAAxB,CAAZ;AAEA;;AAED,aAAO6tG,KAAP;AAEA;;;;;;AAIF,SAASC,eAAT,CAA0BruF,MAA1B,EAAmC;AAElC,MAAMxf,CAAC,GAAGwf,MAAM,CAACvf,MAAjB;;AAEA,MAAKD,CAAC,GAAG,CAAJ,IAASwf,MAAM,CAAExf,CAAC,GAAG,CAAN,CAAN,CAAgBqiB,MAAhB,CAAwB7C,MAAM,CAAE,CAAF,CAA9B,CAAd,EAAsD;AAErDA,IAAAA,MAAM,CAACqmD,GAAP;AAEA;AAED;;AAED,SAASioC,UAAT,CAAqBppE,QAArB,EAA+BipE,OAA/B,EAAyC;AAExC,OAAM,IAAI5tG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG4tG,OAAO,CAAC1tG,MAA7B,EAAqCF,CAAC,EAAtC,EAA4C;AAE3C2kC,IAAAA,QAAQ,CAACnlC,IAAT,CAAeouG,OAAO,CAAE5tG,CAAF,CAAP,CAAa0B,CAA5B;AACAijC,IAAAA,QAAQ,CAACnlC,IAAT,CAAeouG,OAAO,CAAE5tG,CAAF,CAAP,CAAagC,CAA5B;AAEA;AAED;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMisG,e;;;;;AAEL,6BAAkK;AAAA;;AAAA,QAArJz+E,MAAqJ,uEAA5I,IAAIw5E,KAAJ,CAAW,CAAE,IAAI9iG,OAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAF,EAA2B,IAAIA,OAAJ,CAAa,CAAE,GAAf,EAAoB,GAApB,CAA3B,EAAsD,IAAIA,OAAJ,CAAa,CAAE,GAAf,EAAoB,CAAE,GAAtB,CAAtD,EAAmF,IAAIA,OAAJ,CAAa,GAAb,EAAkB,CAAE,GAApB,CAAnF,CAAX,CAA4I;AAAA,QAAfgQ,OAAe,uEAAL,EAAK;;AAAA;;AAEjK;AAEA,YAAKhX,IAAL,GAAY,iBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjBhB,MAAAA,MAAM,EAAEA,MADS;AAEjBtZ,MAAAA,OAAO,EAAEA;AAFQ,KAAlB;AAKAsZ,IAAAA,MAAM,GAAG1d,KAAK,CAACC,OAAN,CAAeyd,MAAf,IAA0BA,MAA1B,GAAmC,CAAEA,MAAF,CAA5C;;AAEA,QAAMkV,KAAK,kCAAX;;AAEA,QAAMwpE,aAAa,GAAG,EAAtB;AACA,QAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAM,IAAInuG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGuvB,MAAM,CAACtvB,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,UAAMywB,KAAK,GAAGjB,MAAM,CAAExvB,CAAF,CAApB;AACAouG,MAAAA,QAAQ,CAAE39E,KAAF,CAAR;AAEA,KAvBgK,CAyBjK;;;AAEA,YAAK2N,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4B0xE,aAA5B,EAA2C,CAA3C,CAA/B;;AACA,YAAK9vE,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4B2xE,OAA5B,EAAqC,CAArC,CAAzB;;AAEA,YAAKzH,oBAAL,GA9BiK,CAgCjK;;;AAEA,aAAS0H,QAAT,CAAmB39E,KAAnB,EAA2B;AAE1B,UAAM49E,WAAW,GAAG,EAApB,CAF0B,CAI1B;;AAEA,UAAMC,aAAa,GAAGp4F,OAAO,CAACo4F,aAAR,KAA0BjvG,SAA1B,GAAsC6W,OAAO,CAACo4F,aAA9C,GAA8D,EAApF;AACA,UAAMC,KAAK,GAAGr4F,OAAO,CAACq4F,KAAR,KAAkBlvG,SAAlB,GAA8B6W,OAAO,CAACq4F,KAAtC,GAA8C,CAA5D;AACA,UAAIn4F,KAAK,GAAGF,OAAO,CAACE,KAAR,KAAkB/W,SAAlB,GAA8B6W,OAAO,CAACE,KAAtC,GAA8C,CAA1D;AAEA,UAAIo4F,YAAY,GAAGt4F,OAAO,CAACs4F,YAAR,KAAyBnvG,SAAzB,GAAqC6W,OAAO,CAACs4F,YAA7C,GAA4D,IAA/E;AACA,UAAIC,cAAc,GAAGv4F,OAAO,CAACu4F,cAAR,KAA2BpvG,SAA3B,GAAuC6W,OAAO,CAACu4F,cAA/C,GAAgE,GAArF;AACA,UAAIC,SAAS,GAAGx4F,OAAO,CAACw4F,SAAR,KAAsBrvG,SAAtB,GAAkC6W,OAAO,CAACw4F,SAA1C,GAAsDD,cAAc,GAAG,GAAvF;AACA,UAAIE,WAAW,GAAGz4F,OAAO,CAACy4F,WAAR,KAAwBtvG,SAAxB,GAAoC6W,OAAO,CAACy4F,WAA5C,GAA0D,CAA5E;AACA,UAAIC,aAAa,GAAG14F,OAAO,CAAC04F,aAAR,KAA0BvvG,SAA1B,GAAsC6W,OAAO,CAAC04F,aAA9C,GAA8D,CAAlF;AAEA,UAAMC,WAAW,GAAG34F,OAAO,CAAC24F,WAA5B;AAEA,UAAMC,KAAK,GAAG54F,OAAO,CAAC64F,WAAR,KAAwB1vG,SAAxB,GAAoC6W,OAAO,CAAC64F,WAA5C,GAA0DC,gBAAxE,CAlB0B,CAoB1B;;AAEA,UAAK94F,OAAO,CAAC+4F,MAAR,KAAmB5vG,SAAxB,EAAoC;AAEnC4F,QAAAA,OAAO,CAACC,IAAR,CAAc,gEAAd;AACAkR,QAAAA,KAAK,GAAGF,OAAO,CAAC+4F,MAAhB;AAEA,OA3ByB,CA6B1B;;;AAEA,UAAIC,UAAJ;AAAA,UAAgBC,aAAa,GAAG,KAAhC;AACA,UAAIC,UAAJ,EAAgBC,QAAhB,EAA0B/wF,MAA1B,EAAkCgxF,SAAlC;;AAEA,UAAKT,WAAL,EAAmB;AAElBK,QAAAA,UAAU,GAAGL,WAAW,CAACU,eAAZ,CAA6BhB,KAA7B,CAAb;AAEAY,QAAAA,aAAa,GAAG,IAAhB;AACAX,QAAAA,YAAY,GAAG,KAAf,CALkB,CAKI;AAEtB;AAEA;;AAEAY,QAAAA,UAAU,GAAGP,WAAW,CAACW,mBAAZ,CAAiCjB,KAAjC,EAAwC,KAAxC,CAAb,CAXkB,CAalB;;AAEAc,QAAAA,QAAQ,GAAG,IAAIjzF,OAAJ,EAAX;AACAkC,QAAAA,MAAM,GAAG,IAAIlC,OAAJ,EAAT;AACAkzF,QAAAA,SAAS,GAAG,IAAIlzF,OAAJ,EAAZ;AAEA,OArDyB,CAuD1B;;;AAEA,UAAK,CAAEoyF,YAAP,EAAsB;AAErBI,QAAAA,aAAa,GAAG,CAAhB;AACAH,QAAAA,cAAc,GAAG,CAAjB;AACAC,QAAAA,SAAS,GAAG,CAAZ;AACAC,QAAAA,WAAW,GAAG,CAAd;AAEA,OAhEyB,CAkE1B;;;AAEA,UAAMc,WAAW,GAAGh/E,KAAK,CAACi/E,aAAN,CAAqBpB,aAArB,CAApB;AAEA,UAAI3pE,QAAQ,GAAG8qE,WAAW,CAACh/E,KAA3B;AACA,UAAMw4E,KAAK,GAAGwG,WAAW,CAACxG,KAA1B;AAEA,UAAM0G,OAAO,GAAG,CAAEhC,UAAU,CAACiC,WAAX,CAAwBjrE,QAAxB,CAAlB;;AAEA,UAAKgrE,OAAL,EAAe;AAEdhrE,QAAAA,QAAQ,GAAGA,QAAQ,CAACgrE,OAAT,EAAX,CAFc,CAId;;AAEA,aAAM,IAAIhlG,CAAC,GAAG,CAAR,EAAWklG,EAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,CAAC,GAAGklG,EAAxC,EAA4CllG,CAAC,EAA7C,EAAmD;AAElD,cAAMmlG,KAAK,GAAG7G,KAAK,CAAEt+F,CAAF,CAAnB;;AAEA,cAAKgjG,UAAU,CAACiC,WAAX,CAAwBE,KAAxB,CAAL,EAAuC;AAEtC7G,YAAAA,KAAK,CAAEt+F,CAAF,CAAL,GAAamlG,KAAK,CAACH,OAAN,EAAb;AAEA;AAED;AAED;;AAGD,UAAM9B,KAAK,GAAGF,UAAU,CAACoC,gBAAX,CAA6BprE,QAA7B,EAAuCskE,KAAvC,CAAd;AAEA;;AAEA,UAAM2E,OAAO,GAAGjpE,QAAhB,CApG0B,CAoGA;;AAE1B,WAAM,IAAIh6B,EAAC,GAAG,CAAR,EAAWklG,GAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,EAAC,GAAGklG,GAAxC,EAA4CllG,EAAC,EAA7C,EAAmD;AAElD,YAAMmlG,MAAK,GAAG7G,KAAK,CAAEt+F,EAAF,CAAnB;AAEAg6B,QAAAA,QAAQ,GAAGA,QAAQ,CAACu/D,MAAT,CAAiB4L,MAAjB,CAAX;AAEA;;AAGD,eAASE,QAAT,CAAmBC,EAAnB,EAAuB5R,GAAvB,EAA4BpvF,IAA5B,EAAmC;AAElC,YAAK,CAAEovF,GAAP,EAAap5F,OAAO,CAACkD,KAAR,CAAe,2CAAf;AAEb,eAAOk2F,GAAG,CAACvnF,KAAJ,GAAYpQ,cAAZ,CAA4BuI,IAA5B,EAAmC6Q,GAAnC,CAAwCmwF,EAAxC,CAAP;AAEA;;AAED,UAAMC,IAAI,GAAGvrE,QAAQ,CAACzkC,MAAtB;AAAA,UAA8BiwG,IAAI,GAAGtC,KAAK,CAAC3tG,MAA3C,CAvH0B,CA0H1B;;AAGA,eAASkwG,WAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA6C;AAE5C;AACA;AACA;AACA;AACA;AACA;AAEA,YAAIC,SAAJ,EAAeC,SAAf,EAA0BC,SAA1B,CAT4C,CASP;AAErC;AACA;;AAEA,YAAMC,QAAQ,GAAGN,IAAI,CAAC3uG,CAAL,GAAS4uG,MAAM,CAAC5uG,CAAjC;AAAA,YACCkvG,QAAQ,GAAGP,IAAI,CAACruG,CAAL,GAASsuG,MAAM,CAACtuG,CAD5B;AAEA,YAAM6uG,QAAQ,GAAGN,MAAM,CAAC7uG,CAAP,GAAW2uG,IAAI,CAAC3uG,CAAjC;AAAA,YACCovG,QAAQ,GAAGP,MAAM,CAACvuG,CAAP,GAAWquG,IAAI,CAACruG,CAD5B;AAGA,YAAM+uG,YAAY,GAAKJ,QAAQ,GAAGA,QAAX,GAAsBC,QAAQ,GAAGA,QAAxD,CAnB4C,CAqB5C;;AACA,YAAMI,UAAU,GAAKL,QAAQ,GAAGG,QAAX,GAAsBF,QAAQ,GAAGC,QAAtD;;AAEA,YAAKtwG,IAAI,CAACiC,GAAL,CAAUwuG,UAAV,IAAyB73F,MAAM,CAACC,OAArC,EAA+C;AAE9C;AAEA;AAEA,cAAM63F,UAAU,GAAG1wG,IAAI,CAACyG,IAAL,CAAW+pG,YAAX,CAAnB;AACA,cAAMG,UAAU,GAAG3wG,IAAI,CAACyG,IAAL,CAAW6pG,QAAQ,GAAGA,QAAX,GAAsBC,QAAQ,GAAGA,QAA5C,CAAnB,CAP8C,CAS9C;;AAEA,cAAMK,aAAa,GAAKb,MAAM,CAAC5uG,CAAP,GAAWkvG,QAAQ,GAAGK,UAA9C;AACA,cAAMG,aAAa,GAAKd,MAAM,CAACtuG,CAAP,GAAW2uG,QAAQ,GAAGM,UAA9C;AAEA,cAAMI,aAAa,GAAKd,MAAM,CAAC7uG,CAAP,GAAWovG,QAAQ,GAAGI,UAA9C;AACA,cAAMI,aAAa,GAAKf,MAAM,CAACvuG,CAAP,GAAW6uG,QAAQ,GAAGK,UAA9C,CAf8C,CAiB9C;;AAEA,cAAMK,EAAE,GAAG,CAAE,CAAEF,aAAa,GAAGF,aAAlB,IAAoCL,QAApC,GACX,CAAEQ,aAAa,GAAGF,aAAlB,IAAoCP,QAD3B,KAERF,QAAQ,GAAGG,QAAX,GAAsBF,QAAQ,GAAGC,QAFzB,CAAX,CAnB8C,CAuB9C;;AAEAL,UAAAA,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGY,EAA3B,GAAgClB,IAAI,CAAC3uG,CAAnD;AACA+uG,UAAAA,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGW,EAA3B,GAAgClB,IAAI,CAACruG,CAAnD,CA1B8C,CA4B9C;AACA;;AACA,cAAMwvG,aAAa,GAAKhB,SAAS,GAAGA,SAAZ,GAAwBC,SAAS,GAAGA,SAA5D;;AACA,cAAKe,aAAa,IAAI,CAAtB,EAA0B;AAEzB,mBAAO,IAAItrG,OAAJ,CAAasqG,SAAb,EAAwBC,SAAxB,CAAP;AAEA,WAJD,MAIO;AAENC,YAAAA,SAAS,GAAGnwG,IAAI,CAACyG,IAAL,CAAWwqG,aAAa,GAAG,CAA3B,CAAZ;AAEA;AAED,SAzCD,MAyCO;AAEN;AAEA,cAAIC,YAAY,GAAG,KAAnB,CAJM,CAIoB;;AAE1B,cAAKd,QAAQ,GAAGx3F,MAAM,CAACC,OAAvB,EAAiC;AAEhC,gBAAKy3F,QAAQ,GAAG13F,MAAM,CAACC,OAAvB,EAAiC;AAEhCq4F,cAAAA,YAAY,GAAG,IAAf;AAEA;AAED,WARD,MAQO;AAEN,gBAAKd,QAAQ,GAAG,CAAEx3F,MAAM,CAACC,OAAzB,EAAmC;AAElC,kBAAKy3F,QAAQ,GAAG,CAAE13F,MAAM,CAACC,OAAzB,EAAmC;AAElCq4F,gBAAAA,YAAY,GAAG,IAAf;AAEA;AAED,aARD,MAQO;AAEN,kBAAKlxG,IAAI,CAACgmB,IAAL,CAAWqqF,QAAX,MAA0BrwG,IAAI,CAACgmB,IAAL,CAAWuqF,QAAX,CAA/B,EAAuD;AAEtDW,gBAAAA,YAAY,GAAG,IAAf;AAEA;AAED;AAED;;AAED,cAAKA,YAAL,EAAoB;AAEnB;AACAjB,YAAAA,SAAS,GAAG,CAAEI,QAAd;AACAH,YAAAA,SAAS,GAAGE,QAAZ;AACAD,YAAAA,SAAS,GAAGnwG,IAAI,CAACyG,IAAL,CAAW+pG,YAAX,CAAZ;AAEA,WAPD,MAOO;AAEN;AACAP,YAAAA,SAAS,GAAGG,QAAZ;AACAF,YAAAA,SAAS,GAAGG,QAAZ;AACAF,YAAAA,SAAS,GAAGnwG,IAAI,CAACyG,IAAL,CAAW+pG,YAAY,GAAG,CAA1B,CAAZ;AAEA;AAED;;AAED,eAAO,IAAI7qG,OAAJ,CAAasqG,SAAS,GAAGE,SAAzB,EAAoCD,SAAS,GAAGC,SAAhD,CAAP;AAEA;;AAGD,UAAMgB,gBAAgB,GAAG,EAAzB;;AAEA,WAAM,IAAI1xG,IAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGg2F,OAAO,CAAC1tG,MAAxB,EAAgCwiB,CAAC,GAAG9K,EAAE,GAAG,CAAzC,EAA4C62D,CAAC,GAAGzuE,IAAC,GAAG,CAA1D,EAA6DA,IAAC,GAAG4X,EAAjE,EAAqE5X,IAAC,IAAK0iB,CAAC,EAAN,EAAW+rD,CAAC,EAAlF,EAAwF;AAEvF,YAAK/rD,CAAC,KAAK9K,EAAX,EAAgB8K,CAAC,GAAG,CAAJ;AAChB,YAAK+rD,CAAC,KAAK72D,EAAX,EAAgB62D,CAAC,GAAG,CAAJ,CAHuE,CAKvF;AACA;;AAEAijC,QAAAA,gBAAgB,CAAE1xG,IAAF,CAAhB,GAAwBowG,WAAW,CAAExC,OAAO,CAAE5tG,IAAF,CAAT,EAAgB4tG,OAAO,CAAElrF,CAAF,CAAvB,EAA8BkrF,OAAO,CAAEn/B,CAAF,CAArC,CAAnC;AAEA;;AAED,UAAMkjC,cAAc,GAAG,EAAvB;AACA,UAAIC,gBAAJ;AAAA,UAAsBC,iBAAiB,GAAGH,gBAAgB,CAACxN,MAAjB,EAA1C;;AAEA,WAAM,IAAIv5F,GAAC,GAAG,CAAR,EAAWklG,IAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,GAAC,GAAGklG,IAAxC,EAA4CllG,GAAC,EAA7C,EAAmD;AAElD,YAAMmlG,OAAK,GAAG7G,KAAK,CAAEt+F,GAAF,CAAnB;AAEAinG,QAAAA,gBAAgB,GAAG,EAAnB;;AAEA,aAAM,IAAI5xG,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGk4F,OAAK,CAAC5vG,MAAtB,EAA8BwiB,GAAC,GAAG9K,KAAE,GAAG,CAAvC,EAA0C62D,EAAC,GAAGzuE,IAAC,GAAG,CAAxD,EAA2DA,IAAC,GAAG4X,KAA/D,EAAmE5X,IAAC,IAAK0iB,GAAC,EAAN,EAAW+rD,EAAC,EAAhF,EAAsF;AAErF,cAAK/rD,GAAC,KAAK9K,KAAX,EAAgB8K,GAAC,GAAG,CAAJ;AAChB,cAAK+rD,EAAC,KAAK72D,KAAX,EAAgB62D,EAAC,GAAG,CAAJ,CAHqE,CAKrF;;AACAmjC,UAAAA,gBAAgB,CAAE5xG,IAAF,CAAhB,GAAwBowG,WAAW,CAAEN,OAAK,CAAE9vG,IAAF,CAAP,EAAc8vG,OAAK,CAAEptF,GAAF,CAAnB,EAA0BotF,OAAK,CAAErhC,EAAF,CAA/B,CAAnC;AAEA;;AAEDkjC,QAAAA,cAAc,CAACnyG,IAAf,CAAqBoyG,gBAArB;AACAC,QAAAA,iBAAiB,GAAGA,iBAAiB,CAAC3N,MAAlB,CAA0B0N,gBAA1B,CAApB;AAEA,OA7RyB,CAgS1B;;;AAEA,WAAM,IAAIztG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGyqG,aAArB,EAAoCzqG,CAAC,EAArC,EAA2C;AAE1C;AAEA,YAAMjC,CAAC,GAAGiC,CAAC,GAAGyqG,aAAd;AACA,YAAMh6F,CAAC,GAAG65F,cAAc,GAAGluG,IAAI,CAAC+D,GAAL,CAAUpC,CAAC,GAAG3B,IAAI,CAACC,EAAT,GAAc,CAAxB,CAA3B;;AACA,YAAMsxG,GAAE,GAAGpD,SAAS,GAAGnuG,IAAI,CAACgE,GAAL,CAAUrC,CAAC,GAAG3B,IAAI,CAACC,EAAT,GAAc,CAAxB,CAAZ,GAA0CmuG,WAArD,CAN0C,CAQ1C;;;AAEA,aAAM,IAAI3uG,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGg2F,OAAO,CAAC1tG,MAA9B,EAAsCF,IAAC,GAAG4X,KAA1C,EAA8C5X,IAAC,EAA/C,EAAqD;AAEpD,cAAM+xG,IAAI,GAAG/B,QAAQ,CAAEpC,OAAO,CAAE5tG,IAAF,CAAT,EAAgB0xG,gBAAgB,CAAE1xG,IAAF,CAAhC,EAAuC8xG,GAAvC,CAArB;AAEAxrG,UAAAA,CAAC,CAAEyrG,IAAI,CAACrwG,CAAP,EAAUqwG,IAAI,CAAC/vG,CAAf,EAAkB,CAAE4S,CAApB,CAAD;AAEA,SAhByC,CAkB1C;;;AAEA,aAAM,IAAIjK,GAAC,GAAG,CAAR,EAAWklG,IAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,GAAC,GAAGklG,IAAxC,EAA4CllG,GAAC,EAA7C,EAAmD;AAElD,cAAMmlG,OAAK,GAAG7G,KAAK,CAAEt+F,GAAF,CAAnB;AACAinG,UAAAA,gBAAgB,GAAGD,cAAc,CAAEhnG,GAAF,CAAjC;;AAEA,eAAM,IAAI3K,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGk4F,OAAK,CAAC5vG,MAA5B,EAAoCF,IAAC,GAAG4X,KAAxC,EAA4C5X,IAAC,EAA7C,EAAmD;AAElD,gBAAM+xG,KAAI,GAAG/B,QAAQ,CAAEF,OAAK,CAAE9vG,IAAF,CAAP,EAAc4xG,gBAAgB,CAAE5xG,IAAF,CAA9B,EAAqC8xG,GAArC,CAArB;;AAEAxrG,YAAAA,CAAC,CAAEyrG,KAAI,CAACrwG,CAAP,EAAUqwG,KAAI,CAAC/vG,CAAf,EAAkB,CAAE4S,CAApB,CAAD;AAEA;AAED;AAED;;AAED,UAAMk9F,EAAE,GAAGpD,SAAS,GAAGC,WAAvB,CAvU0B,CAyU1B;;AAEA,WAAM,IAAI3uG,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGkwG,IAArB,EAA2BlwG,IAAC,EAA5B,EAAkC;AAEjC,YAAM+xG,MAAI,GAAGvD,YAAY,GAAGwB,QAAQ,CAAErrE,QAAQ,CAAE3kC,IAAF,CAAV,EAAiB6xG,iBAAiB,CAAE7xG,IAAF,CAAlC,EAAyC8xG,EAAzC,CAAX,GAA2DntE,QAAQ,CAAE3kC,IAAF,CAA5F;;AAEA,YAAK,CAAEmvG,aAAP,EAAuB;AAEtB7oG,UAAAA,CAAC,CAAEyrG,MAAI,CAACrwG,CAAP,EAAUqwG,MAAI,CAAC/vG,CAAf,EAAkB,CAAlB,CAAD;AAEA,SAJD,MAIO;AAEN;AAEAsc,UAAAA,MAAM,CAACjQ,IAAP,CAAa+gG,UAAU,CAACvwE,OAAX,CAAoB,CAApB,CAAb,EAAuCn4B,cAAvC,CAAuDqrG,MAAI,CAACrwG,CAA5D;AACA2tG,UAAAA,QAAQ,CAAChhG,IAAT,CAAe+gG,UAAU,CAAChR,SAAX,CAAsB,CAAtB,CAAf,EAA2C13F,cAA3C,CAA2DqrG,MAAI,CAAC/vG,CAAhE;AAEAstG,UAAAA,SAAS,CAACjhG,IAAV,CAAgB6gG,UAAU,CAAE,CAAF,CAA1B,EAAkCpvF,GAAlC,CAAuCxB,MAAvC,EAAgDwB,GAAhD,CAAqDuvF,QAArD;AAEA/oG,UAAAA,CAAC,CAAEgpG,SAAS,CAAC5tG,CAAZ,EAAe4tG,SAAS,CAACttG,CAAzB,EAA4BstG,SAAS,CAAC16F,CAAtC,CAAD;AAEA;AAED,OAhWyB,CAkW1B;AACA;;;AAEA,WAAM,IAAIzR,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIorG,KAAtB,EAA6BprG,CAAC,EAA9B,EAAoC;AAEnC,aAAM,IAAInD,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGkwG,IAArB,EAA2BlwG,IAAC,EAA5B,EAAkC;AAEjC,cAAM+xG,MAAI,GAAGvD,YAAY,GAAGwB,QAAQ,CAAErrE,QAAQ,CAAE3kC,IAAF,CAAV,EAAiB6xG,iBAAiB,CAAE7xG,IAAF,CAAlC,EAAyC8xG,EAAzC,CAAX,GAA2DntE,QAAQ,CAAE3kC,IAAF,CAA5F;;AAEA,cAAK,CAAEmvG,aAAP,EAAuB;AAEtB7oG,YAAAA,CAAC,CAAEyrG,MAAI,CAACrwG,CAAP,EAAUqwG,MAAI,CAAC/vG,CAAf,EAAkBoU,KAAK,GAAGm4F,KAAR,GAAgBprG,CAAlC,CAAD;AAEA,WAJD,MAIO;AAEN;AAEAmb,YAAAA,MAAM,CAACjQ,IAAP,CAAa+gG,UAAU,CAACvwE,OAAX,CAAoB17B,CAApB,CAAb,EAAuCuD,cAAvC,CAAuDqrG,MAAI,CAACrwG,CAA5D;AACA2tG,YAAAA,QAAQ,CAAChhG,IAAT,CAAe+gG,UAAU,CAAChR,SAAX,CAAsBj7F,CAAtB,CAAf,EAA2CuD,cAA3C,CAA2DqrG,MAAI,CAAC/vG,CAAhE;AAEAstG,YAAAA,SAAS,CAACjhG,IAAV,CAAgB6gG,UAAU,CAAE/rG,CAAF,CAA1B,EAAkC2c,GAAlC,CAAuCxB,MAAvC,EAAgDwB,GAAhD,CAAqDuvF,QAArD;AAEA/oG,YAAAA,CAAC,CAAEgpG,SAAS,CAAC5tG,CAAZ,EAAe4tG,SAAS,CAACttG,CAAzB,EAA4BstG,SAAS,CAAC16F,CAAtC,CAAD;AAEA;AAED;AAED,OA9XyB,CAiY1B;AAEA;;;AACA,WAAM,IAAIzQ,GAAC,GAAGyqG,aAAa,GAAG,CAA9B,EAAiCzqG,GAAC,IAAI,CAAtC,EAAyCA,GAAC,EAA1C,EAAgD;AAE/C,YAAMjC,EAAC,GAAGiC,GAAC,GAAGyqG,aAAd;;AACA,YAAMh6F,GAAC,GAAG65F,cAAc,GAAGluG,IAAI,CAAC+D,GAAL,CAAUpC,EAAC,GAAG3B,IAAI,CAACC,EAAT,GAAc,CAAxB,CAA3B;;AACA,YAAMsxG,IAAE,GAAGpD,SAAS,GAAGnuG,IAAI,CAACgE,GAAL,CAAUrC,EAAC,GAAG3B,IAAI,CAACC,EAAT,GAAc,CAAxB,CAAZ,GAA0CmuG,WAArD,CAJ+C,CAM/C;;;AAEA,aAAM,IAAI3uG,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGg2F,OAAO,CAAC1tG,MAA9B,EAAsCF,IAAC,GAAG4X,KAA1C,EAA8C5X,IAAC,EAA/C,EAAqD;AAEpD,cAAM+xG,MAAI,GAAG/B,QAAQ,CAAEpC,OAAO,CAAE5tG,IAAF,CAAT,EAAgB0xG,gBAAgB,CAAE1xG,IAAF,CAAhC,EAAuC8xG,IAAvC,CAArB;;AACAxrG,UAAAA,CAAC,CAAEyrG,MAAI,CAACrwG,CAAP,EAAUqwG,MAAI,CAAC/vG,CAAf,EAAkBoU,KAAK,GAAGxB,GAA1B,CAAD;AAEA,SAb8C,CAe/C;;;AAEA,aAAM,IAAIjK,GAAC,GAAG,CAAR,EAAWklG,IAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,GAAC,GAAGklG,IAAxC,EAA4CllG,GAAC,EAA7C,EAAmD;AAElD,cAAMmlG,OAAK,GAAG7G,KAAK,CAAEt+F,GAAF,CAAnB;AACAinG,UAAAA,gBAAgB,GAAGD,cAAc,CAAEhnG,GAAF,CAAjC;;AAEA,eAAM,IAAI3K,IAAC,GAAG,CAAR,EAAW4X,KAAE,GAAGk4F,OAAK,CAAC5vG,MAA5B,EAAoCF,IAAC,GAAG4X,KAAxC,EAA4C5X,IAAC,EAA7C,EAAmD;AAElD,gBAAM+xG,MAAI,GAAG/B,QAAQ,CAAEF,OAAK,CAAE9vG,IAAF,CAAP,EAAc4xG,gBAAgB,CAAE5xG,IAAF,CAA9B,EAAqC8xG,IAArC,CAArB;;AAEA,gBAAK,CAAE3C,aAAP,EAAuB;AAEtB7oG,cAAAA,CAAC,CAAEyrG,MAAI,CAACrwG,CAAP,EAAUqwG,MAAI,CAAC/vG,CAAf,EAAkBoU,KAAK,GAAGxB,GAA1B,CAAD;AAEA,aAJD,MAIO;AAENtO,cAAAA,CAAC,CAAEyrG,MAAI,CAACrwG,CAAP,EAAUqwG,MAAI,CAAC/vG,CAAL,GAASktG,UAAU,CAAEX,KAAK,GAAG,CAAV,CAAV,CAAwBvsG,CAA3C,EAA8CktG,UAAU,CAAEX,KAAK,GAAG,CAAV,CAAV,CAAwB7sG,CAAxB,GAA4BkT,GAA1E,CAAD;AAEA;AAED;AAED;AAED;AAED;AAEA;;;AAEAo9F,MAAAA,aAAa,GAlba,CAob1B;;AAEAC,MAAAA,cAAc,GAtbY,CAyb1B;;AAEA,eAASD,aAAT,GAAyB;AAExB,YAAMx0E,KAAK,GAAG0wE,aAAa,CAAChuG,MAAd,GAAuB,CAArC;;AAEA,YAAKsuG,YAAL,EAAoB;AAEnB,cAAI9a,KAAK,GAAG,CAAZ,CAFmB,CAEJ;;AACf,cAAIjsF,MAAM,GAAGyoG,IAAI,GAAGxc,KAApB,CAHmB,CAKnB;;AAEA,eAAM,IAAI1zF,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmwG,IAArB,EAA2BnwG,IAAC,EAA5B,EAAkC;AAEjC,gBAAM+jC,IAAI,GAAG8pE,KAAK,CAAE7tG,IAAF,CAAlB;AACAkyG,YAAAA,EAAE,CAAEnuE,IAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAd,EAAsBs8B,IAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAlC,EAA0Cs8B,IAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAtD,CAAF;AAEA;;AAEDisF,UAAAA,KAAK,GAAG6a,KAAK,GAAGK,aAAa,GAAG,CAAhC;AACAnnG,UAAAA,MAAM,GAAGyoG,IAAI,GAAGxc,KAAhB,CAfmB,CAiBnB;;AAEA,eAAM,IAAI1zF,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmwG,IAArB,EAA2BnwG,IAAC,EAA5B,EAAkC;AAEjC,gBAAM+jC,KAAI,GAAG8pE,KAAK,CAAE7tG,IAAF,CAAlB;AACAkyG,YAAAA,EAAE,CAAEnuE,KAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAd,EAAsBs8B,KAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAlC,EAA0Cs8B,KAAI,CAAE,CAAF,CAAJ,GAAYt8B,MAAtD,CAAF;AAEA;AAED,SA1BD,MA0BO;AAEN;AAEA,eAAM,IAAIzH,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmwG,IAArB,EAA2BnwG,IAAC,EAA5B,EAAkC;AAEjC,gBAAM+jC,MAAI,GAAG8pE,KAAK,CAAE7tG,IAAF,CAAlB;AACAkyG,YAAAA,EAAE,CAAEnuE,MAAI,CAAE,CAAF,CAAN,EAAaA,MAAI,CAAE,CAAF,CAAjB,EAAwBA,MAAI,CAAE,CAAF,CAA5B,CAAF;AAEA,WATK,CAWN;;;AAEA,eAAM,IAAI/jC,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGmwG,IAArB,EAA2BnwG,IAAC,EAA5B,EAAkC;AAEjC,gBAAM+jC,MAAI,GAAG8pE,KAAK,CAAE7tG,IAAF,CAAlB;AACAkyG,YAAAA,EAAE,CAAEnuE,MAAI,CAAE,CAAF,CAAJ,GAAYmsE,IAAI,GAAG3B,KAArB,EAA4BxqE,MAAI,CAAE,CAAF,CAAJ,GAAYmsE,IAAI,GAAG3B,KAA/C,EAAsDxqE,MAAI,CAAE,CAAF,CAAJ,GAAYmsE,IAAI,GAAG3B,KAAzE,CAAF;AAEA;AAED;;AAED7pE,QAAAA,KAAK,CAAChD,QAAN,CAAgBlE,KAAhB,EAAuB0wE,aAAa,CAAChuG,MAAd,GAAuB,CAAvB,GAA2Bs9B,KAAlD,EAAyD,CAAzD;AAEA,OAjfyB,CAmf1B;;;AAEA,eAASy0E,cAAT,GAA0B;AAEzB,YAAMz0E,KAAK,GAAG0wE,aAAa,CAAChuG,MAAd,GAAuB,CAArC;AACA,YAAIiyG,WAAW,GAAG,CAAlB;AACAC,QAAAA,SAAS,CAAExE,OAAF,EAAWuE,WAAX,CAAT;AACAA,QAAAA,WAAW,IAAIvE,OAAO,CAAC1tG,MAAvB;;AAEA,aAAM,IAAIyK,GAAC,GAAG,CAAR,EAAWklG,IAAE,GAAG5G,KAAK,CAAC/oG,MAA5B,EAAoCyK,GAAC,GAAGklG,IAAxC,EAA4CllG,GAAC,EAA7C,EAAmD;AAElD,cAAMmlG,OAAK,GAAG7G,KAAK,CAAEt+F,GAAF,CAAnB;AACAynG,UAAAA,SAAS,CAAEtC,OAAF,EAASqC,WAAT,CAAT,CAHkD,CAKlD;;AACAA,UAAAA,WAAW,IAAIrC,OAAK,CAAC5vG,MAArB;AAEA;;AAGDwkC,QAAAA,KAAK,CAAChD,QAAN,CAAgBlE,KAAhB,EAAuB0wE,aAAa,CAAChuG,MAAd,GAAuB,CAAvB,GAA2Bs9B,KAAlD,EAAyD,CAAzD;AAGA;;AAED,eAAS40E,SAAT,CAAoBxE,OAApB,EAA6BuE,WAA7B,EAA2C;AAE1C,YAAInyG,CAAC,GAAG4tG,OAAO,CAAC1tG,MAAhB;;AAEA,eAAQ,EAAGF,CAAH,IAAQ,CAAhB,EAAoB;AAEnB,cAAM0iB,GAAC,GAAG1iB,CAAV;;AACA,cAAIyuE,GAAC,GAAGzuE,CAAC,GAAG,CAAZ;;AACA,cAAKyuE,GAAC,GAAG,CAAT,EAAaA,GAAC,GAAGm/B,OAAO,CAAC1tG,MAAR,GAAiB,CAArB,CAJM,CAMnB;;AAEA,eAAM,IAAIiD,GAAC,GAAG,CAAR,EAAWkvG,EAAE,GAAK9D,KAAK,GAAGK,aAAa,GAAG,CAAhD,EAAqDzrG,GAAC,GAAGkvG,EAAzD,EAA6DlvG,GAAC,EAA9D,EAAoE;AAEnE,gBAAMmvG,KAAK,GAAGpC,IAAI,GAAG/sG,GAArB;AACA,gBAAMovG,KAAK,GAAGrC,IAAI,IAAK/sG,GAAC,GAAG,CAAT,CAAlB;;AAEA,gBAAMe,CAAC,GAAGiuG,WAAW,GAAGzvF,GAAd,GAAkB4vF,KAA5B;AAAA,gBACCnuG,GAAC,GAAGguG,WAAW,GAAG1jC,GAAd,GAAkB6jC,KADvB;AAAA,gBAECluG,CAAC,GAAG+tG,WAAW,GAAG1jC,GAAd,GAAkB8jC,KAFvB;AAAA,gBAGC/nG,CAAC,GAAG2nG,WAAW,GAAGzvF,GAAd,GAAkB6vF,KAHvB;;AAKAC,YAAAA,EAAE,CAAEtuG,CAAF,EAAKC,GAAL,EAAQC,CAAR,EAAWoG,CAAX,CAAF;AAEA;AAED;AAED;;AAED,eAASlE,CAAT,CAAY5E,CAAZ,EAAeM,CAAf,EAAkB4S,CAAlB,EAAsB;AAErBy5F,QAAAA,WAAW,CAAC7uG,IAAZ,CAAkBkC,CAAlB;AACA2sG,QAAAA,WAAW,CAAC7uG,IAAZ,CAAkBwC,CAAlB;AACAqsG,QAAAA,WAAW,CAAC7uG,IAAZ,CAAkBoV,CAAlB;AAEA;;AAGD,eAASs9F,EAAT,CAAahuG,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAuB;AAEtBquG,QAAAA,SAAS,CAAEvuG,CAAF,CAAT;AACAuuG,QAAAA,SAAS,CAAEtuG,CAAF,CAAT;AACAsuG,QAAAA,SAAS,CAAEruG,CAAF,CAAT;AAEA,YAAMsuG,SAAS,GAAGxE,aAAa,CAAChuG,MAAd,GAAuB,CAAzC;AACA,YAAM4+B,GAAG,GAAGgwE,KAAK,CAAC6D,aAAN,CAAqBjuE,KAArB,EAA4BwpE,aAA5B,EAA2CwE,SAAS,GAAG,CAAvD,EAA0DA,SAAS,GAAG,CAAtE,EAAyEA,SAAS,GAAG,CAArF,CAAZ;AAEAE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AAEA;;AAED,eAAS0zE,EAAT,CAAatuG,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBoG,CAAtB,EAA0B;AAEzBioG,QAAAA,SAAS,CAAEvuG,CAAF,CAAT;AACAuuG,QAAAA,SAAS,CAAEtuG,CAAF,CAAT;AACAsuG,QAAAA,SAAS,CAAEjoG,CAAF,CAAT;AAEAioG,QAAAA,SAAS,CAAEtuG,CAAF,CAAT;AACAsuG,QAAAA,SAAS,CAAEruG,CAAF,CAAT;AACAquG,QAAAA,SAAS,CAAEjoG,CAAF,CAAT;AAGA,YAAMkoG,SAAS,GAAGxE,aAAa,CAAChuG,MAAd,GAAuB,CAAzC;AACA,YAAM4+B,GAAG,GAAGgwE,KAAK,CAAC+D,kBAAN,CAA0BnuE,KAA1B,EAAiCwpE,aAAjC,EAAgDwE,SAAS,GAAG,CAA5D,EAA+DA,SAAS,GAAG,CAA3E,EAA8EA,SAAS,GAAG,CAA1F,EAA6FA,SAAS,GAAG,CAAzG,CAAZ;AAEAE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AAEA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AACA8zE,QAAAA,KAAK,CAAE9zE,GAAG,CAAE,CAAF,CAAL,CAAL;AAEA;;AAED,eAAS2zE,SAAT,CAAoB/yG,KAApB,EAA4B;AAE3BwuG,QAAAA,aAAa,CAAC1uG,IAAd,CAAoB6uG,WAAW,CAAE3uG,KAAK,GAAG,CAAR,GAAY,CAAd,CAA/B;AACAwuG,QAAAA,aAAa,CAAC1uG,IAAd,CAAoB6uG,WAAW,CAAE3uG,KAAK,GAAG,CAAR,GAAY,CAAd,CAA/B;AACAwuG,QAAAA,aAAa,CAAC1uG,IAAd,CAAoB6uG,WAAW,CAAE3uG,KAAK,GAAG,CAAR,GAAY,CAAd,CAA/B;AAEA;;AAGD,eAASkzG,KAAT,CAAgBE,OAAhB,EAA0B;AAEzB3E,QAAAA,OAAO,CAAC3uG,IAAR,CAAcszG,OAAO,CAACpxG,CAAtB;AACAysG,QAAAA,OAAO,CAAC3uG,IAAR,CAAcszG,OAAO,CAAC9wG,CAAtB;AAEA;AAED;;AA5oBgK;AA8oBjK;;;;WAED,kBAAS;AAER,UAAMqP,IAAI,8EAAV;;AAEA,UAAMme,MAAM,GAAG,KAAKgB,UAAL,CAAgBhB,MAA/B;AACA,UAAMtZ,OAAO,GAAG,KAAKsa,UAAL,CAAgBta,OAAhC;AAEA,aAAO68F,QAAQ,CAAEvjF,MAAF,EAAUtZ,OAAV,EAAmB7E,IAAnB,CAAf;AAEA;;;WAED,kBAAiBA,IAAjB,EAAuBme,MAAvB,EAAgC;AAE/B,UAAMwjF,cAAc,GAAG,EAAvB;;AAEA,WAAM,IAAItwF,CAAC,GAAG,CAAR,EAAWgc,EAAE,GAAGrtB,IAAI,CAACme,MAAL,CAAYtvB,MAAlC,EAA0CwiB,CAAC,GAAGgc,EAA9C,EAAkDhc,CAAC,EAAnD,EAAyD;AAExD,YAAM+N,KAAK,GAAGjB,MAAM,CAAEne,IAAI,CAACme,MAAL,CAAa9M,CAAb,CAAF,CAApB;AAEAswF,QAAAA,cAAc,CAACxzG,IAAf,CAAqBixB,KAArB;AAEA;;AAED,UAAMo+E,WAAW,GAAGx9F,IAAI,CAAC6E,OAAL,CAAa24F,WAAjC;;AAEA,UAAKA,WAAW,KAAKxvG,SAArB,EAAiC;AAEhCgS,QAAAA,IAAI,CAAC6E,OAAL,CAAa24F,WAAb,GAA2B,IAAIvM,MAAM,CAAEuM,WAAW,CAAC3vG,IAAd,CAAV,GAAiCokG,QAAjC,CAA2CuL,WAA3C,CAA3B;AAEA;;AAED,aAAO,IAAIZ,eAAJ,CAAqB+E,cAArB,EAAqC3hG,IAAI,CAAC6E,OAA1C,CAAP;AAEA;;;;EAnrB4B+mB,c;;AAurB9B,IAAM+xE,gBAAgB,GAAG;AAExB2D,EAAAA,aAAa,EAAE,uBAAWnyF,QAAX,EAAqBmkB,QAArB,EAA+BsuE,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAwD;AAEtE,QAAMC,GAAG,GAAGzuE,QAAQ,CAAEsuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMI,GAAG,GAAG1uE,QAAQ,CAAEsuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMK,GAAG,GAAG3uE,QAAQ,CAAEuuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMK,GAAG,GAAG5uE,QAAQ,CAAEuuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMM,GAAG,GAAG7uE,QAAQ,CAAEwuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMM,GAAG,GAAG9uE,QAAQ,CAAEwuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AAEA,WAAO,CACN,IAAIjtG,OAAJ,CAAaktG,GAAb,EAAkBC,GAAlB,CADM,EAEN,IAAIntG,OAAJ,CAAaotG,GAAb,EAAkBC,GAAlB,CAFM,EAGN,IAAIrtG,OAAJ,CAAastG,GAAb,EAAkBC,GAAlB,CAHM,CAAP;AAMA,GAjBuB;AAmBxBZ,EAAAA,kBAAkB,EAAE,4BAAWryF,QAAX,EAAqBmkB,QAArB,EAA+BsuE,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuDO,MAAvD,EAAgE;AAEnF,QAAMN,GAAG,GAAGzuE,QAAQ,CAAEsuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMI,GAAG,GAAG1uE,QAAQ,CAAEsuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMU,GAAG,GAAGhvE,QAAQ,CAAEsuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMK,GAAG,GAAG3uE,QAAQ,CAAEuuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMK,GAAG,GAAG5uE,QAAQ,CAAEuuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMU,GAAG,GAAGjvE,QAAQ,CAAEuuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMM,GAAG,GAAG7uE,QAAQ,CAAEwuE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMM,GAAG,GAAG9uE,QAAQ,CAAEwuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMU,GAAG,GAAGlvE,QAAQ,CAAEwuE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMW,GAAG,GAAGnvE,QAAQ,CAAE+uE,MAAM,GAAG,CAAX,CAApB;AACA,QAAMK,GAAG,GAAGpvE,QAAQ,CAAE+uE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;AACA,QAAMM,GAAG,GAAGrvE,QAAQ,CAAE+uE,MAAM,GAAG,CAAT,GAAa,CAAf,CAApB;;AAEA,QAAKnzG,IAAI,CAACiC,GAAL,CAAU6wG,GAAG,GAAGE,GAAhB,IAAwBhzG,IAAI,CAACiC,GAAL,CAAU4wG,GAAG,GAAGE,GAAhB,CAA7B,EAAqD;AAEpD,aAAO,CACN,IAAIptG,OAAJ,CAAaktG,GAAb,EAAkB,IAAIO,GAAtB,CADM,EAEN,IAAIztG,OAAJ,CAAaotG,GAAb,EAAkB,IAAIM,GAAtB,CAFM,EAGN,IAAI1tG,OAAJ,CAAastG,GAAb,EAAkB,IAAIK,GAAtB,CAHM,EAIN,IAAI3tG,OAAJ,CAAa4tG,GAAb,EAAkB,IAAIE,GAAtB,CAJM,CAAP;AAOA,KATD,MASO;AAEN,aAAO,CACN,IAAI9tG,OAAJ,CAAamtG,GAAb,EAAkB,IAAIM,GAAtB,CADM,EAEN,IAAIztG,OAAJ,CAAaqtG,GAAb,EAAkB,IAAIK,GAAtB,CAFM,EAGN,IAAI1tG,OAAJ,CAAautG,GAAb,EAAkB,IAAII,GAAtB,CAHM,EAIN,IAAI3tG,OAAJ,CAAa6tG,GAAb,EAAkB,IAAIC,GAAtB,CAJM,CAAP;AAOA;AAED;AAtDuB,CAAzB;;AA0DA,SAASjB,QAAT,CAAmBvjF,MAAnB,EAA2BtZ,OAA3B,EAAoC7E,IAApC,EAA2C;AAE1CA,EAAAA,IAAI,CAACme,MAAL,GAAc,EAAd;;AAEA,MAAK1d,KAAK,CAACC,OAAN,CAAeyd,MAAf,CAAL,EAA+B;AAE9B,SAAM,IAAIxvB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGuvB,MAAM,CAACtvB,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,UAAMywB,KAAK,GAAGjB,MAAM,CAAExvB,CAAF,CAApB;AAEAqR,MAAAA,IAAI,CAACme,MAAL,CAAYhwB,IAAZ,CAAkBixB,KAAK,CAACzvB,IAAxB;AAEA;AAED,GAVD,MAUO;AAENqQ,IAAAA,IAAI,CAACme,MAAL,CAAYhwB,IAAZ,CAAkBgwB,MAAM,CAACxuB,IAAzB;AAEA;;AAEDqQ,EAAAA,IAAI,CAAC6E,OAAL,GAAepQ,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmBb,OAAnB,CAAf;AAEA,MAAKA,OAAO,CAAC24F,WAAR,KAAwBxvG,SAA7B,EAAyCgS,IAAI,CAAC6E,OAAL,CAAa24F,WAAb,GAA2B34F,OAAO,CAAC24F,WAAR,CAAoBv6F,MAApB,EAA3B;AAEzC,SAAOjD,IAAP;AAEA;;IAEK4iG,mB;;;;;AAEL,iCAAsC;AAAA;;AAAA,QAAzBx1F,MAAyB,uEAAhB,CAAgB;AAAA,QAAb22E,MAAa,uEAAJ,CAAI;;AAAA;;AAErC,QAAMlzF,CAAC,GAAG,CAAE,IAAI3B,IAAI,CAACyG,IAAL,CAAW,CAAX,CAAN,IAAyB,CAAnC;AAEA,QAAM29B,QAAQ,GAAG,CAChB,CAAE,CADc,EACXziC,CADW,EACR,CADQ,EACJ,CADI,EACDA,CADC,EACE,CADF,EACM,CAAE,CADR,EACW,CAAEA,CADb,EACgB,CADhB,EACoB,CADpB,EACuB,CAAEA,CADzB,EAC4B,CAD5B,EAEhB,CAFgB,EAEb,CAAE,CAFW,EAERA,CAFQ,EAEJ,CAFI,EAED,CAFC,EAEEA,CAFF,EAEK,CAFL,EAEQ,CAAE,CAFV,EAEa,CAAEA,CAFf,EAEmB,CAFnB,EAEsB,CAFtB,EAEyB,CAAEA,CAF3B,EAGhBA,CAHgB,EAGb,CAHa,EAGV,CAAE,CAHQ,EAGJA,CAHI,EAGD,CAHC,EAGE,CAHF,EAGM,CAAEA,CAHR,EAGW,CAHX,EAGc,CAAE,CAHhB,EAGoB,CAAEA,CAHtB,EAGyB,CAHzB,EAG4B,CAH5B,CAAjB;AAMA,QAAMy8B,OAAO,GAAG,CACf,CADe,EACZ,EADY,EACR,CADQ,EACJ,CADI,EACD,CADC,EACE,CADF,EACM,CADN,EACS,CADT,EACY,CADZ,EACgB,CADhB,EACmB,CADnB,EACsB,EADtB,EAC2B,CAD3B,EAC8B,EAD9B,EACkC,EADlC,EAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAEL,CAFK,EAEF,EAFE,EAEE,CAFF,EAEK,EAFL,EAES,EAFT,EAEa,CAFb,EAEgB,EAFhB,EAEoB,CAFpB,EAEuB,CAFvB,EAE0B,CAF1B,EAE6B,CAF7B,EAEgC,CAFhC,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGL,CAHK,EAGF,CAHE,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGU,CAHV,EAGa,CAHb,EAGgB,CAHhB,EAGmB,CAHnB,EAGsB,CAHtB,EAGyB,CAHzB,EAG4B,CAH5B,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIL,CAJK,EAIF,CAJE,EAIC,EAJD,EAIK,CAJL,EAIQ,CAJR,EAIW,EAJX,EAIe,CAJf,EAIkB,CAJlB,EAIqB,CAJrB,EAIwB,CAJxB,EAI2B,CAJ3B,EAI8B,CAJ9B,CAAhB;AAOA,kCAAOgG,QAAP,EAAiBhG,OAAjB,EAA0BlgB,MAA1B,EAAkC22E,MAAlC;AAEA,YAAKl2F,IAAL,GAAY,qBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB22E,MAAAA,MAAM,EAAEA;AAFS,KAAlB;AArBqC;AA0BrC;;;;WAED,kBAAiB/jF,IAAjB,EAAwB;AAEvB,aAAO,IAAI4iG,mBAAJ,CAAyB5iG,IAAI,CAACoN,MAA9B,EAAsCpN,IAAI,CAAC+jF,MAA3C,CAAP;AAEA;;;;EAlCgCgR,kB;;IAsC5B8N,kB;;;;;AAEL,gCAAsC;AAAA;;AAAA,QAAzBz1F,MAAyB,uEAAhB,CAAgB;AAAA,QAAb22E,MAAa,uEAAJ,CAAI;;AAAA;;AAErC,QAAMzwD,QAAQ,GAAG,CAChB,CADgB,EACb,CADa,EACV,CADU,EACN,CAAE,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EACQ,CADR,EACW,CADX,EAEhB,CAFgB,EAEb,CAAE,CAFW,EAER,CAFQ,EAEJ,CAFI,EAED,CAFC,EAEE,CAFF,EAEK,CAFL,EAEQ,CAFR,EAEW,CAAE,CAFb,CAAjB;AAKA,QAAMhG,OAAO,GAAG,CACf,CADe,EACZ,CADY,EACT,CADS,EACN,CADM,EACH,CADG,EACA,CADA,EACG,CADH,EACM,CADN,EACS,CADT,EAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAEH,CAFG,EAEA,CAFA,EAEG,CAFH,EAEM,CAFN,EAES,CAFT,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAGH,CAHG,EAGA,CAHA,CAAhB;AAMA,kCAAOgG,QAAP,EAAiBhG,OAAjB,EAA0BlgB,MAA1B,EAAkC22E,MAAlC;AAEA,YAAKl2F,IAAL,GAAY,oBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB22E,MAAAA,MAAM,EAAEA;AAFS,KAAlB;AAjBqC;AAsBrC;;;;WAED,kBAAiB/jF,IAAjB,EAAwB;AAEvB,aAAO,IAAI6iG,kBAAJ,CAAwB7iG,IAAI,CAACoN,MAA7B,EAAqCpN,IAAI,CAAC+jF,MAA1C,CAAP;AAEA;;;;EA9B+BgR,kB;;IAkC3B+N,Y;;;;;AAEL,0BAAiI;AAAA;;AAAA,QAApHC,WAAoH,uEAAtG,GAAsG;AAAA,QAAjGC,WAAiG,uEAAnF,CAAmF;AAAA,QAAhFC,aAAgF,uEAAhE,CAAgE;AAAA,QAA7DC,WAA6D,uEAA/C,CAA+C;AAAA,QAA5CpP,UAA4C,uEAA/B,CAA+B;AAAA,QAA5BC,WAA4B,uEAAd7kG,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAEhI;AAEA,YAAKtB,IAAL,GAAY,cAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB4jF,MAAAA,WAAW,EAAEA,WADI;AAEjBC,MAAAA,WAAW,EAAEA,WAFI;AAGjBC,MAAAA,aAAa,EAAEA,aAHE;AAIjBC,MAAAA,WAAW,EAAEA,WAJI;AAKjBpP,MAAAA,UAAU,EAAEA,UALK;AAMjBC,MAAAA,WAAW,EAAEA;AANI,KAAlB;AASAkP,IAAAA,aAAa,GAAG/zG,IAAI,CAACc,GAAL,CAAU,CAAV,EAAaizG,aAAb,CAAhB;AACAC,IAAAA,WAAW,GAAGh0G,IAAI,CAACc,GAAL,CAAU,CAAV,EAAakzG,WAAb,CAAd,CAhBgI,CAkBhI;;AAEA,QAAM51E,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CAvBgI,CAyBhI;;AAEA,QAAIrgB,MAAM,GAAG21F,WAAb;AACA,QAAMI,UAAU,GAAK,CAAEH,WAAW,GAAGD,WAAhB,IAAgCG,WAArD;AACA,QAAMtpC,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAM3H,EAAE,GAAG,IAAIvO,OAAJ,EAAX,CA9BgI,CAgChI;;AAEA,SAAM,IAAIwc,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAI6xF,WAAtB,EAAmC7xF,CAAC,EAApC,EAA0C;AAEzC,WAAM,IAAI1iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIs0G,aAAtB,EAAqCt0G,CAAC,EAAtC,EAA4C;AAE3C;AAEA,YAAMqlG,OAAO,GAAGF,UAAU,GAAGnlG,CAAC,GAAGs0G,aAAJ,GAAoBlP,WAAjD,CAJ2C,CAM3C;;AAEAn6B,QAAAA,MAAM,CAACvpE,CAAP,GAAW+c,MAAM,GAAGle,IAAI,CAAC+D,GAAL,CAAU+gG,OAAV,CAApB;AACAp6B,QAAAA,MAAM,CAACjpE,CAAP,GAAWyc,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAU8gG,OAAV,CAApB;AAEA1gE,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAX2C,CAa3C;;AAEAiqB,QAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAf2C,CAiB3C;;AAEAiV,QAAAA,EAAE,CAAC/S,CAAH,GAAO,CAAEupE,MAAM,CAACvpE,CAAP,GAAW2yG,WAAX,GAAyB,CAA3B,IAAiC,CAAxC;AACA5/F,QAAAA,EAAE,CAACzS,CAAH,GAAO,CAAEipE,MAAM,CAACjpE,CAAP,GAAWqyG,WAAX,GAAyB,CAA3B,IAAiC,CAAxC;AAEAv1E,QAAAA,GAAG,CAACt/B,IAAJ,CAAUiV,EAAE,CAAC/S,CAAb,EAAgB+S,EAAE,CAACzS,CAAnB;AAEA,OA1BwC,CA4BzC;;;AAEAyc,MAAAA,MAAM,IAAI+1F,UAAV;AAEA,KAlE+H,CAoEhI;;;AAEA,SAAM,IAAI9xF,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG6xF,WAArB,EAAkC7xF,IAAC,EAAnC,EAAyC;AAExC,UAAM+xF,iBAAiB,GAAG/xF,IAAC,IAAK4xF,aAAa,GAAG,CAArB,CAA3B;;AAEA,WAAM,IAAIt0G,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGs0G,aAArB,EAAoCt0G,IAAC,EAArC,EAA2C;AAE1C,YAAMqlG,QAAO,GAAGrlG,IAAC,GAAGy0G,iBAApB;;AAEA,YAAMvwG,CAAC,GAAGmhG,QAAV;AACA,YAAMlhG,CAAC,GAAGkhG,QAAO,GAAGiP,aAAV,GAA0B,CAApC;AACA,YAAMlwG,CAAC,GAAGihG,QAAO,GAAGiP,aAAV,GAA0B,CAApC;AACA,YAAM9pG,CAAC,GAAG66F,QAAO,GAAG,CAApB,CAP0C,CAS1C;;AAEA1mE,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,QAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEA;AAED,KA1F+H,CA4FhI;;;AAEA,YAAKs3B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AAjGgI;AAmGhI;;;;WAED,kBAAiBztB,IAAjB,EAAwB;AAEvB,aAAO,IAAI8iG,YAAJ,CAAkB9iG,IAAI,CAAC+iG,WAAvB,EAAoC/iG,IAAI,CAACgjG,WAAzC,EAAsDhjG,IAAI,CAACijG,aAA3D,EAA0EjjG,IAAI,CAACkjG,WAA/E,EAA4FljG,IAAI,CAAC8zF,UAAjG,EAA6G9zF,IAAI,CAAC+zF,WAAlH,CAAP;AAEA;;;;EA3GyBnoE,c;;IA+GrBy3E,a;;;;;AAEL,2BAA2I;AAAA;;AAAA,QAA9HllF,MAA8H,uEAArH,IAAIw5E,KAAJ,CAAW,CAAE,IAAI9iG,OAAJ,CAAa,CAAb,EAAgB,GAAhB,CAAF,EAAyB,IAAIA,OAAJ,CAAa,CAAE,GAAf,EAAoB,CAAE,GAAtB,CAAzB,EAAsD,IAAIA,OAAJ,CAAa,GAAb,EAAkB,CAAE,GAApB,CAAtD,CAAX,CAAqH;AAAA,QAArBooG,aAAqB,uEAAL,EAAK;;AAAA;;AAE1I;AACA,YAAKpvG,IAAL,GAAY,eAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjBhB,MAAAA,MAAM,EAAEA,MADS;AAEjB8+E,MAAAA,aAAa,EAAEA;AAFE,KAAlB,CAL0I,CAU1I;;AAEA,QAAM3vE,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CAf0I,CAiB1I;;AAEA,QAAI+F,UAAU,GAAG,CAAjB;AACA,QAAIc,UAAU,GAAG,CAAjB,CApB0I,CAsB1I;;AAEA,QAAK7zB,KAAK,CAACC,OAAN,CAAeyd,MAAf,MAA4B,KAAjC,EAAyC;AAExC4+E,MAAAA,QAAQ,CAAE5+E,MAAF,CAAR;AAEA,KAJD,MAIO;AAEN,WAAM,IAAIxvB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGwvB,MAAM,CAACtvB,MAA5B,EAAoCF,CAAC,EAArC,EAA2C;AAE1CouG,QAAAA,QAAQ,CAAE5+E,MAAM,CAAExvB,CAAF,CAAR,CAAR;;AAEA,gBAAK0hC,QAAL,CAAemD,UAAf,EAA2Bc,UAA3B,EAAuC3lC,CAAvC,EAJ0C,CAIE;;;AAE5C6kC,QAAAA,UAAU,IAAIc,UAAd;AACAA,QAAAA,UAAU,GAAG,CAAb;AAEA;AAED,KAzCyI,CA2C1I;;;AAEA,YAAK7D,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB,EAhD0I,CAmD1I;;;AAEA,aAASsvE,QAAT,CAAmB39E,KAAnB,EAA2B;AAE1B,UAAMkkF,WAAW,GAAGhwE,QAAQ,CAACzkC,MAAT,GAAkB,CAAtC;AACA,UAAMuf,MAAM,GAAGgR,KAAK,CAACi/E,aAAN,CAAqBpB,aAArB,CAAf;AAEA,UAAIsG,aAAa,GAAGn1F,MAAM,CAACgR,KAA3B;AACA,UAAMokF,UAAU,GAAGp1F,MAAM,CAACwpF,KAA1B,CAN0B,CAQ1B;;AAEA,UAAK0E,UAAU,CAACiC,WAAX,CAAwBgF,aAAxB,MAA4C,KAAjD,EAAyD;AAExDA,QAAAA,aAAa,GAAGA,aAAa,CAACjF,OAAd,EAAhB;AAEA;;AAED,WAAM,IAAI3vG,IAAC,GAAG,CAAR,EAAWC,CAAC,GAAG40G,UAAU,CAAC30G,MAAhC,EAAwCF,IAAC,GAAGC,CAA5C,EAA+CD,IAAC,EAAhD,EAAsD;AAErD,YAAM80G,SAAS,GAAGD,UAAU,CAAE70G,IAAF,CAA5B;;AAEA,YAAK2tG,UAAU,CAACiC,WAAX,CAAwBkF,SAAxB,MAAwC,IAA7C,EAAoD;AAEnDD,UAAAA,UAAU,CAAE70G,IAAF,CAAV,GAAkB80G,SAAS,CAACnF,OAAV,EAAlB;AAEA;AAED;;AAED,UAAM9B,KAAK,GAAGF,UAAU,CAACoC,gBAAX,CAA6B6E,aAA7B,EAA4CC,UAA5C,CAAd,CA5B0B,CA8B1B;;AAEA,WAAM,IAAI70G,IAAC,GAAG,CAAR,EAAWC,GAAC,GAAG40G,UAAU,CAAC30G,MAAhC,EAAwCF,IAAC,GAAGC,GAA5C,EAA+CD,IAAC,EAAhD,EAAsD;AAErD,YAAM80G,UAAS,GAAGD,UAAU,CAAE70G,IAAF,CAA5B;AACA40G,QAAAA,aAAa,GAAGA,aAAa,CAAC1Q,MAAd,CAAsB4Q,UAAtB,CAAhB;AAEA,OArCyB,CAuC1B;;;AAEA,WAAM,IAAI90G,IAAC,GAAG,CAAR,EAAWC,GAAC,GAAG20G,aAAa,CAAC10G,MAAnC,EAA2CF,IAAC,GAAGC,GAA/C,EAAkDD,IAAC,EAAnD,EAAyD;AAExD,YAAMirE,OAAM,GAAG2pC,aAAa,CAAE50G,IAAF,CAA5B;AAEA2kC,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,OAAM,CAACvpE,CAAtB,EAAyBupE,OAAM,CAACjpE,CAAhC,EAAmC,CAAnC;AACA68B,QAAAA,OAAO,CAACr/B,IAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AACAs/B,QAAAA,GAAG,CAACt/B,IAAJ,CAAUyrE,OAAM,CAACvpE,CAAjB,EAAoBupE,OAAM,CAACjpE,CAA3B,EANwD,CAMxB;AAEhC,OAjDyB,CAmD1B;;;AAEA,WAAM,IAAIhC,IAAC,GAAG,CAAR,EAAWC,IAAC,GAAG4tG,KAAK,CAAC3tG,MAA3B,EAAmCF,IAAC,GAAGC,IAAvC,EAA0CD,IAAC,EAA3C,EAAiD;AAEhD,YAAM+jC,IAAI,GAAG8pE,KAAK,CAAE7tG,IAAF,CAAlB;AAEA,YAAMkE,CAAC,GAAG6/B,IAAI,CAAE,CAAF,CAAJ,GAAY4wE,WAAtB;AACA,YAAMxwG,CAAC,GAAG4/B,IAAI,CAAE,CAAF,CAAJ,GAAY4wE,WAAtB;AACA,YAAMvwG,CAAC,GAAG2/B,IAAI,CAAE,CAAF,CAAJ,GAAY4wE,WAAtB;AAEAh2E,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBC,CAApB;AACAuhC,QAAAA,UAAU,IAAI,CAAd;AAEA;AAED;;AAvHyI;AAyH1I;;;;WAED,kBAAS;AAER,UAAMt0B,IAAI,4EAAV;;AAEA,UAAMme,MAAM,GAAG,KAAKgB,UAAL,CAAgBhB,MAA/B;AAEA,aAAOlb,OAAM,CAAEkb,MAAF,EAAUne,IAAV,CAAb;AAEA;;;WAED,kBAAiBA,IAAjB,EAAuBme,MAAvB,EAAgC;AAE/B,UAAMwjF,cAAc,GAAG,EAAvB;;AAEA,WAAM,IAAItwF,CAAC,GAAG,CAAR,EAAWgc,EAAE,GAAGrtB,IAAI,CAACme,MAAL,CAAYtvB,MAAlC,EAA0CwiB,CAAC,GAAGgc,EAA9C,EAAkDhc,CAAC,EAAnD,EAAyD;AAExD,YAAM+N,KAAK,GAAGjB,MAAM,CAAEne,IAAI,CAACme,MAAL,CAAa9M,CAAb,CAAF,CAApB;AAEAswF,QAAAA,cAAc,CAACxzG,IAAf,CAAqBixB,KAArB;AAEA;;AAED,aAAO,IAAIikF,aAAJ,CAAmB1B,cAAnB,EAAmC3hG,IAAI,CAACi9F,aAAxC,CAAP;AAEA;;;;EArJ0BrxE,c;;AAyJ5B,SAAS3oB,OAAT,CAAiBkb,MAAjB,EAAyBne,IAAzB,EAAgC;AAE/BA,EAAAA,IAAI,CAACme,MAAL,GAAc,EAAd;;AAEA,MAAK1d,KAAK,CAACC,OAAN,CAAeyd,MAAf,CAAL,EAA+B;AAE9B,SAAM,IAAIxvB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGuvB,MAAM,CAACtvB,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,UAAMywB,KAAK,GAAGjB,MAAM,CAAExvB,CAAF,CAApB;AAEAqR,MAAAA,IAAI,CAACme,MAAL,CAAYhwB,IAAZ,CAAkBixB,KAAK,CAACzvB,IAAxB;AAEA;AAED,GAVD,MAUO;AAENqQ,IAAAA,IAAI,CAACme,MAAL,CAAYhwB,IAAZ,CAAkBgwB,MAAM,CAACxuB,IAAzB;AAEA;;AAED,SAAOqQ,IAAP;AAEA;;IAEK0jG,c;;;;;AAEL,4BAAiJ;AAAA;;AAAA,QAApIt2F,MAAoI,uEAA3H,CAA2H;AAAA,QAAxH8lB,aAAwH,uEAAxG,EAAwG;AAAA,QAApGC,cAAoG,uEAAnF,EAAmF;AAAA,QAA/EggE,QAA+E,uEAApE,CAAoE;AAAA,QAAjEC,SAAiE,uEAArDlkG,IAAI,CAACC,EAAL,GAAU,CAA2C;AAAA,QAAxC2kG,UAAwC,uEAA3B,CAA2B;AAAA,QAAxBC,WAAwB,uEAAV7kG,IAAI,CAACC,EAAK;;AAAA;;AAEhJ;AACA,YAAKtB,IAAL,GAAY,gBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB8lB,MAAAA,aAAa,EAAEA,aAFE;AAGjBC,MAAAA,cAAc,EAAEA,cAHC;AAIjBggE,MAAAA,QAAQ,EAAEA,QAJO;AAKjBC,MAAAA,SAAS,EAAEA,SALM;AAMjBU,MAAAA,UAAU,EAAEA,UANK;AAOjBC,MAAAA,WAAW,EAAEA;AAPI,KAAlB;AAUA7gE,IAAAA,aAAa,GAAGhkC,IAAI,CAACc,GAAL,CAAU,CAAV,EAAad,IAAI,CAACuC,KAAL,CAAYyhC,aAAZ,CAAb,CAAhB;AACAC,IAAAA,cAAc,GAAGjkC,IAAI,CAACc,GAAL,CAAU,CAAV,EAAad,IAAI,CAACuC,KAAL,CAAY0hC,cAAZ,CAAb,CAAjB;AAEA,QAAMwwE,QAAQ,GAAGz0G,IAAI,CAACa,GAAL,CAAU+jG,UAAU,GAAGC,WAAvB,EAAoC7kG,IAAI,CAACC,EAAzC,CAAjB;AAEA,QAAId,KAAK,GAAG,CAAZ;AACA,QAAMu1G,IAAI,GAAG,EAAb;AAEA,QAAMhqC,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAMkC,MAAM,GAAG,IAAIlC,OAAJ,EAAf,CAxBgJ,CA0BhJ;;AAEA,QAAMuiB,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CA/BgJ,CAiChJ;;AAEA,SAAM,IAAI9hB,EAAE,GAAG,CAAf,EAAkBA,EAAE,IAAIwnB,cAAxB,EAAwCxnB,EAAE,EAA1C,EAAgD;AAE/C,UAAMk4F,WAAW,GAAG,EAApB;AAEA,UAAM5uG,CAAC,GAAG0W,EAAE,GAAGwnB,cAAf,CAJ+C,CAM/C;;AAEA,UAAI2wE,OAAO,GAAG,CAAd;;AAEA,UAAKn4F,EAAE,IAAI,CAAN,IAAWmoF,UAAU,IAAI,CAA9B,EAAkC;AAEjCgQ,QAAAA,OAAO,GAAG,MAAM5wE,aAAhB;AAEA,OAJD,MAIO,IAAKvnB,EAAE,IAAIwnB,cAAN,IAAwBwwE,QAAQ,IAAIz0G,IAAI,CAACC,EAA9C,EAAmD;AAEzD20G,QAAAA,OAAO,GAAG,CAAE,GAAF,GAAQ5wE,aAAlB;AAEA;;AAED,WAAM,IAAIxnB,EAAE,GAAG,CAAf,EAAkBA,EAAE,IAAIwnB,aAAxB,EAAuCxnB,EAAE,EAAzC,EAA+C;AAE9C,YAAMgC,CAAC,GAAGhC,EAAE,GAAGwnB,aAAf,CAF8C,CAI9C;;AAEA0mC,QAAAA,MAAM,CAACvpE,CAAP,GAAW,CAAE+c,MAAF,GAAWle,IAAI,CAAC+D,GAAL,CAAUkgG,QAAQ,GAAGzlF,CAAC,GAAG0lF,SAAzB,CAAX,GAAkDlkG,IAAI,CAACgE,GAAL,CAAU4gG,UAAU,GAAG7+F,CAAC,GAAG8+F,WAA3B,CAA7D;AACAn6B,QAAAA,MAAM,CAACjpE,CAAP,GAAWyc,MAAM,GAAGle,IAAI,CAAC+D,GAAL,CAAU6gG,UAAU,GAAG7+F,CAAC,GAAG8+F,WAA3B,CAApB;AACAn6B,QAAAA,MAAM,CAACr2D,CAAP,GAAW6J,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAUigG,QAAQ,GAAGzlF,CAAC,GAAG0lF,SAAzB,CAAT,GAAgDlkG,IAAI,CAACgE,GAAL,CAAU4gG,UAAU,GAAG7+F,CAAC,GAAG8+F,WAA3B,CAA3D;AAEAzgE,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAV8C,CAY9C;;AAEA0J,QAAAA,MAAM,CAACjQ,IAAP,CAAa48D,MAAb,EAAsBtlE,SAAtB;AACAk5B,QAAAA,OAAO,CAACr/B,IAAR,CAAc8e,MAAM,CAAC5c,CAArB,EAAwB4c,MAAM,CAACtc,CAA/B,EAAkCsc,MAAM,CAAC1J,CAAzC,EAf8C,CAiB9C;;AAEAkqB,QAAAA,GAAG,CAACt/B,IAAJ,CAAUuf,CAAC,GAAGo2F,OAAd,EAAuB,IAAI7uG,CAA3B;AAEA4uG,QAAAA,WAAW,CAAC11G,IAAZ,CAAkBE,KAAK,EAAvB;AAEA;;AAEDu1G,MAAAA,IAAI,CAACz1G,IAAL,CAAW01G,WAAX;AAEA,KAlF+I,CAoFhJ;;;AAEA,SAAM,IAAIl4F,IAAE,GAAG,CAAf,EAAkBA,IAAE,GAAGwnB,cAAvB,EAAuCxnB,IAAE,EAAzC,EAA+C;AAE9C,WAAM,IAAID,IAAE,GAAG,CAAf,EAAkBA,IAAE,GAAGwnB,aAAvB,EAAsCxnB,IAAE,EAAxC,EAA8C;AAE7C,YAAM7Y,CAAC,GAAG+wG,IAAI,CAAEj4F,IAAF,CAAJ,CAAYD,IAAE,GAAG,CAAjB,CAAV;AACA,YAAM5Y,CAAC,GAAG8wG,IAAI,CAAEj4F,IAAF,CAAJ,CAAYD,IAAZ,CAAV;AACA,YAAM3Y,CAAC,GAAG6wG,IAAI,CAAEj4F,IAAE,GAAG,CAAP,CAAJ,CAAgBD,IAAhB,CAAV;AACA,YAAMvS,CAAC,GAAGyqG,IAAI,CAAEj4F,IAAE,GAAG,CAAP,CAAJ,CAAgBD,IAAE,GAAG,CAArB,CAAV;AAEA,YAAKC,IAAE,KAAK,CAAP,IAAYmoF,UAAU,GAAG,CAA9B,EAAkCxmE,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AAClC,YAAKwS,IAAE,KAAKwnB,cAAc,GAAG,CAAxB,IAA6BwwE,QAAQ,GAAGz0G,IAAI,CAACC,EAAlD,EAAuDm+B,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEvD;AAED,KApG+I,CAsGhJ;;;AAEA,YAAKs3B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AA3GgJ;AA6GhJ;;;;WAED,kBAAiBztB,IAAjB,EAAwB;AAEvB,aAAO,IAAI0jG,cAAJ,CAAoB1jG,IAAI,CAACoN,MAAzB,EAAiCpN,IAAI,CAACkzB,aAAtC,EAAqDlzB,IAAI,CAACmzB,cAA1D,EAA0EnzB,IAAI,CAACmzF,QAA/E,EAAyFnzF,IAAI,CAACozF,SAA9F,EAAyGpzF,IAAI,CAAC8zF,UAA9G,EAA0H9zF,IAAI,CAAC+zF,WAA/H,CAAP;AAEA;;;;EArH2BnoE,c;;IAyHvBm4E,mB;;;;;AAEL,iCAAsC;AAAA;;AAAA,QAAzB32F,MAAyB,uEAAhB,CAAgB;AAAA,QAAb22E,MAAa,uEAAJ,CAAI;;AAAA;;AAErC,QAAMzwD,QAAQ,GAAG,CAChB,CADgB,EACb,CADa,EACV,CADU,EACN,CAAE,CADI,EACD,CAAE,CADD,EACI,CADJ,EACQ,CAAE,CADV,EACa,CADb,EACgB,CAAE,CADlB,EACsB,CADtB,EACyB,CAAE,CAD3B,EAC8B,CAAE,CADhC,CAAjB;AAIA,QAAMhG,OAAO,GAAG,CACf,CADe,EACZ,CADY,EACT,CADS,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,CADnB,CAAhB;AAIA,kCAAOgG,QAAP,EAAiBhG,OAAjB,EAA0BlgB,MAA1B,EAAkC22E,MAAlC;AAEA,YAAKl2F,IAAL,GAAY,qBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB22E,MAAAA,MAAM,EAAEA;AAFS,KAAlB;AAdqC;AAmBrC;;;;WAED,kBAAiB/jF,IAAjB,EAAwB;AAEvB,aAAO,IAAI+jG,mBAAJ,CAAyB/jG,IAAI,CAACoN,MAA9B,EAAsCpN,IAAI,CAAC+jF,MAA3C,CAAP;AAEA;;;;EA3BgCgR,kB;;IA+B5BiP,a;;;;;AAEL,2BAAkG;AAAA;;AAAA,QAArF52F,MAAqF,uEAA5E,CAA4E;AAAA,QAAzE62F,IAAyE,uEAAlE,GAAkE;AAAA,QAA7DrQ,cAA6D,uEAA5C,CAA4C;AAAA,QAAzCsQ,eAAyC,uEAAvB,CAAuB;AAAA,QAApBC,GAAoB,uEAAdj1G,IAAI,CAACC,EAAL,GAAU,CAAI;;AAAA;;AAEjG;AACA,YAAKtB,IAAL,GAAY,eAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB62F,MAAAA,IAAI,EAAEA,IAFW;AAGjBrQ,MAAAA,cAAc,EAAEA,cAHC;AAIjBsQ,MAAAA,eAAe,EAAEA,eAJA;AAKjBC,MAAAA,GAAG,EAAEA;AALY,KAAlB;AAQAvQ,IAAAA,cAAc,GAAG1kG,IAAI,CAACuC,KAAL,CAAYmiG,cAAZ,CAAjB;AACAsQ,IAAAA,eAAe,GAAGh1G,IAAI,CAACuC,KAAL,CAAYyyG,eAAZ,CAAlB,CAdiG,CAgBjG;;AAEA,QAAM52E,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CArBiG,CAuBjG;;AAEA,QAAMj3B,MAAM,GAAG,IAAIuU,OAAJ,EAAf;AACA,QAAM6uD,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAMkC,MAAM,GAAG,IAAIlC,OAAJ,EAAf,CA3BiG,CA6BjG;;AAEA,SAAM,IAAIsG,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIuiF,cAAtB,EAAsCviF,CAAC,EAAvC,EAA6C;AAE5C,WAAM,IAAI1iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIu1G,eAAtB,EAAuCv1G,CAAC,EAAxC,EAA8C;AAE7C,YAAM+e,CAAC,GAAG/e,CAAC,GAAGu1G,eAAJ,GAAsBC,GAAhC;AACA,YAAMlvG,CAAC,GAAGoc,CAAC,GAAGuiF,cAAJ,GAAqB1kG,IAAI,CAACC,EAA1B,GAA+B,CAAzC,CAH6C,CAK7C;;AAEAyqE,QAAAA,MAAM,CAACvpE,CAAP,GAAW,CAAE+c,MAAM,GAAG62F,IAAI,GAAG/0G,IAAI,CAAC+D,GAAL,CAAUgC,CAAV,CAAlB,IAAoC/F,IAAI,CAAC+D,GAAL,CAAUya,CAAV,CAA/C;AACAksD,QAAAA,MAAM,CAACjpE,CAAP,GAAW,CAAEyc,MAAM,GAAG62F,IAAI,GAAG/0G,IAAI,CAAC+D,GAAL,CAAUgC,CAAV,CAAlB,IAAoC/F,IAAI,CAACgE,GAAL,CAAUwa,CAAV,CAA/C;AACAksD,QAAAA,MAAM,CAACr2D,CAAP,GAAW0gG,IAAI,GAAG/0G,IAAI,CAACgE,GAAL,CAAU+B,CAAV,CAAlB;AAEAq+B,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAX6C,CAa7C;;AAEA/M,QAAAA,MAAM,CAACnG,CAAP,GAAW+c,MAAM,GAAGle,IAAI,CAAC+D,GAAL,CAAUya,CAAV,CAApB;AACAlX,QAAAA,MAAM,CAAC7F,CAAP,GAAWyc,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAUwa,CAAV,CAApB;AACAT,QAAAA,MAAM,CAAC7X,UAAP,CAAmBwkE,MAAnB,EAA2BpjE,MAA3B,EAAoClC,SAApC;AAEAk5B,QAAAA,OAAO,CAACr/B,IAAR,CAAc8e,MAAM,CAAC5c,CAArB,EAAwB4c,MAAM,CAACtc,CAA/B,EAAkCsc,MAAM,CAAC1J,CAAzC,EAnB6C,CAqB7C;;AAEAkqB,QAAAA,GAAG,CAACt/B,IAAJ,CAAUQ,CAAC,GAAGu1G,eAAd;AACAz2E,QAAAA,GAAG,CAACt/B,IAAJ,CAAUkjB,CAAC,GAAGuiF,cAAd;AAEA;AAED,KA7DgG,CA+DjG;;;AAEA,SAAM,IAAIviF,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIuiF,cAAtB,EAAsCviF,IAAC,EAAvC,EAA6C;AAE5C,WAAM,IAAI1iB,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIu1G,eAAtB,EAAuCv1G,IAAC,EAAxC,EAA8C;AAE7C;AAEA,YAAMkE,CAAC,GAAG,CAAEqxG,eAAe,GAAG,CAApB,IAA0B7yF,IAA1B,GAA8B1iB,IAA9B,GAAkC,CAA5C;AACA,YAAMmE,CAAC,GAAG,CAAEoxG,eAAe,GAAG,CAApB,KAA4B7yF,IAAC,GAAG,CAAhC,IAAsC1iB,IAAtC,GAA0C,CAApD;AACA,YAAMoE,CAAC,GAAG,CAAEmxG,eAAe,GAAG,CAApB,KAA4B7yF,IAAC,GAAG,CAAhC,IAAsC1iB,IAAhD;AACA,YAAMwK,CAAC,GAAG,CAAE+qG,eAAe,GAAG,CAApB,IAA0B7yF,IAA1B,GAA8B1iB,IAAxC,CAP6C,CAS7C;;AAEA2+B,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,QAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEA;AAED,KAnFgG,CAqFjG;;;AAEA,YAAKs3B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB;;AA1FiG;AA4FjG;;;;WAED,kBAAiBztB,IAAjB,EAAwB;AAEvB,aAAO,IAAIgkG,aAAJ,CAAmBhkG,IAAI,CAACoN,MAAxB,EAAgCpN,IAAI,CAACikG,IAArC,EAA2CjkG,IAAI,CAAC4zF,cAAhD,EAAgE5zF,IAAI,CAACkkG,eAArE,EAAsFlkG,IAAI,CAACmkG,GAA3F,CAAP;AAEA;;;;EApG0Bv4E,c;;IAwGtBw4E,iB;;;;;AAEL,+BAA8F;AAAA;;AAAA,QAAjFh3F,MAAiF,uEAAxE,CAAwE;AAAA,QAArE62F,IAAqE,uEAA9D,GAA8D;AAAA,QAAzDC,eAAyD,uEAAvC,EAAuC;AAAA,QAAnCtQ,cAAmC,uEAAlB,CAAkB;AAAA,QAAfl3F,CAAe,uEAAX,CAAW;AAAA,QAAR9J,CAAQ,uEAAJ,CAAI;;AAAA;;AAE7F;AACA,YAAK/E,IAAL,GAAY,mBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB/R,MAAAA,MAAM,EAAEA,MADS;AAEjB62F,MAAAA,IAAI,EAAEA,IAFW;AAGjBC,MAAAA,eAAe,EAAEA,eAHA;AAIjBtQ,MAAAA,cAAc,EAAEA,cAJC;AAKjBl3F,MAAAA,CAAC,EAAEA,CALc;AAMjB9J,MAAAA,CAAC,EAAEA;AANc,KAAlB;AASAsxG,IAAAA,eAAe,GAAGh1G,IAAI,CAACuC,KAAL,CAAYyyG,eAAZ,CAAlB;AACAtQ,IAAAA,cAAc,GAAG1kG,IAAI,CAACuC,KAAL,CAAYmiG,cAAZ,CAAjB,CAf6F,CAiB7F;;AAEA,QAAMtmE,OAAO,GAAG,EAAhB;AACA,QAAMgG,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ,CAtB6F,CAwB7F;;AAEA,QAAMmsC,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAMkC,MAAM,GAAG,IAAIlC,OAAJ,EAAf;AAEA,QAAMs5F,EAAE,GAAG,IAAIt5F,OAAJ,EAAX;AACA,QAAMu5F,EAAE,GAAG,IAAIv5F,OAAJ,EAAX;AAEA,QAAMw5F,CAAC,GAAG,IAAIx5F,OAAJ,EAAV;AACA,QAAMy5F,CAAC,GAAG,IAAIz5F,OAAJ,EAAV;AACA,QAAM05F,CAAC,GAAG,IAAI15F,OAAJ,EAAV,CAlC6F,CAoC7F;;AAEA,SAAM,IAAIpc,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIu1G,eAAtB,EAAuC,EAAGv1G,CAA1C,EAA8C;AAE7C;AAEA,UAAM+e,CAAC,GAAG/e,CAAC,GAAGu1G,eAAJ,GAAsBxnG,CAAtB,GAA0BxN,IAAI,CAACC,EAA/B,GAAoC,CAA9C,CAJ6C,CAM7C;AACA;;AAEAu1G,MAAAA,wBAAwB,CAAEh3F,CAAF,EAAKhR,CAAL,EAAQ9J,CAAR,EAAWwa,MAAX,EAAmBi3F,EAAnB,CAAxB;AACAK,MAAAA,wBAAwB,CAAEh3F,CAAC,GAAG,IAAN,EAAYhR,CAAZ,EAAe9J,CAAf,EAAkBwa,MAAlB,EAA0Bk3F,EAA1B,CAAxB,CAV6C,CAY7C;;AAEAE,MAAAA,CAAC,CAACpvG,UAAF,CAAckvG,EAAd,EAAkBD,EAAlB;AACAI,MAAAA,CAAC,CAACtvG,UAAF,CAAcmvG,EAAd,EAAkBD,EAAlB;AACAE,MAAAA,CAAC,CAACn4F,YAAF,CAAgBo4F,CAAhB,EAAmBC,CAAnB;AACAA,MAAAA,CAAC,CAACr4F,YAAF,CAAgBm4F,CAAhB,EAAmBC,CAAnB,EAjB6C,CAmB7C;;AAEAD,MAAAA,CAAC,CAACjwG,SAAF;AACAmwG,MAAAA,CAAC,CAACnwG,SAAF;;AAEA,WAAM,IAAI+c,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIuiF,cAAtB,EAAsC,EAAGviF,CAAzC,EAA6C;AAE5C;AACA;AAEA,YAAMpc,CAAC,GAAGoc,CAAC,GAAGuiF,cAAJ,GAAqB1kG,IAAI,CAACC,EAA1B,GAA+B,CAAzC;AACA,YAAMoL,EAAE,GAAG,CAAE0pG,IAAF,GAAS/0G,IAAI,CAAC+D,GAAL,CAAUgC,CAAV,CAApB;AACA,YAAMuF,EAAE,GAAGypG,IAAI,GAAG/0G,IAAI,CAACgE,GAAL,CAAU+B,CAAV,CAAlB,CAP4C,CAS5C;AACA;;AAEA2kE,QAAAA,MAAM,CAACvpE,CAAP,GAAWg0G,EAAE,CAACh0G,CAAH,IAASkK,EAAE,GAAGkqG,CAAC,CAACp0G,CAAP,GAAWmK,EAAE,GAAG+pG,CAAC,CAACl0G,CAA3B,CAAX;AACAupE,QAAAA,MAAM,CAACjpE,CAAP,GAAW0zG,EAAE,CAAC1zG,CAAH,IAAS4J,EAAE,GAAGkqG,CAAC,CAAC9zG,CAAP,GAAW6J,EAAE,GAAG+pG,CAAC,CAAC5zG,CAA3B,CAAX;AACAipE,QAAAA,MAAM,CAACr2D,CAAP,GAAW8gG,EAAE,CAAC9gG,CAAH,IAAShJ,EAAE,GAAGkqG,CAAC,CAAClhG,CAAP,GAAW/I,EAAE,GAAG+pG,CAAC,CAAChhG,CAA3B,CAAX;AAEA+vB,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C,EAhB4C,CAkB5C;;AAEA0J,QAAAA,MAAM,CAAC7X,UAAP,CAAmBwkE,MAAnB,EAA2ByqC,EAA3B,EAAgC/vG,SAAhC;AAEAk5B,QAAAA,OAAO,CAACr/B,IAAR,CAAc8e,MAAM,CAAC5c,CAArB,EAAwB4c,MAAM,CAACtc,CAA/B,EAAkCsc,MAAM,CAAC1J,CAAzC,EAtB4C,CAwB5C;;AAEAkqB,QAAAA,GAAG,CAACt/B,IAAJ,CAAUQ,CAAC,GAAGu1G,eAAd;AACAz2E,QAAAA,GAAG,CAACt/B,IAAJ,CAAUkjB,CAAC,GAAGuiF,cAAd;AAEA;AAED,KA7F4F,CA+F7F;;;AAEA,SAAM,IAAIviF,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAI6yF,eAAtB,EAAuC7yF,IAAC,EAAxC,EAA8C;AAE7C,WAAM,IAAI1iB,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIilG,cAAtB,EAAsCjlG,IAAC,EAAvC,EAA6C;AAE5C;AAEA,YAAMkE,CAAC,GAAG,CAAE+gG,cAAc,GAAG,CAAnB,KAA2BviF,IAAC,GAAG,CAA/B,KAAuC1iB,IAAC,GAAG,CAA3C,CAAV;AACA,YAAMmE,CAAC,GAAG,CAAE8gG,cAAc,GAAG,CAAnB,IAAyBviF,IAAzB,IAA+B1iB,IAAC,GAAG,CAAnC,CAAV;AACA,YAAMoE,CAAC,GAAG,CAAE6gG,cAAc,GAAG,CAAnB,IAAyBviF,IAAzB,GAA6B1iB,IAAvC;AACA,YAAMwK,CAAC,GAAG,CAAEy6F,cAAc,GAAG,CAAnB,KAA2BviF,IAAC,GAAG,CAA/B,IAAqC1iB,IAA/C,CAP4C,CAS5C;;AAEA2+B,QAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,QAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEA;AAED,KAnH4F,CAqH7F;;;AAEA,YAAKs3B,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB,EA1H6F,CA4H7F;;;AAEA,aAASi3E,wBAAT,CAAmCh3F,CAAnC,EAAsChR,CAAtC,EAAyC9J,CAAzC,EAA4Cwa,MAA5C,EAAoDiC,QAApD,EAA+D;AAE9D,UAAMs1F,EAAE,GAAGz1G,IAAI,CAAC+D,GAAL,CAAUya,CAAV,CAAX;AACA,UAAMk3F,EAAE,GAAG11G,IAAI,CAACgE,GAAL,CAAUwa,CAAV,CAAX;AACA,UAAMm3F,OAAO,GAAGjyG,CAAC,GAAG8J,CAAJ,GAAQgR,CAAxB;AACA,UAAMo3F,EAAE,GAAG51G,IAAI,CAAC+D,GAAL,CAAU4xG,OAAV,CAAX;AAEAx1F,MAAAA,QAAQ,CAAChf,CAAT,GAAa+c,MAAM,IAAK,IAAI03F,EAAT,CAAN,GAAsB,GAAtB,GAA4BH,EAAzC;AACAt1F,MAAAA,QAAQ,CAAC1e,CAAT,GAAayc,MAAM,IAAK,IAAI03F,EAAT,CAAN,GAAsBF,EAAtB,GAA2B,GAAxC;AACAv1F,MAAAA,QAAQ,CAAC9L,CAAT,GAAa6J,MAAM,GAAGle,IAAI,CAACgE,GAAL,CAAU2xG,OAAV,CAAT,GAA+B,GAA5C;AAEA;;AAzI4F;AA2I7F;;;;WAED,kBAAiB7kG,IAAjB,EAAwB;AAEvB,aAAO,IAAIokG,iBAAJ,CAAuBpkG,IAAI,CAACoN,MAA5B,EAAoCpN,IAAI,CAACikG,IAAzC,EAA+CjkG,IAAI,CAACkkG,eAApD,EAAqElkG,IAAI,CAAC4zF,cAA1E,EAA0F5zF,IAAI,CAACtD,CAA/F,EAAkGsD,IAAI,CAACpN,CAAvG,CAAP;AAEA;;;;EAnJ8Bg5B,c;;IAuJ1Bm5E,Y;;;;;AAEL,0BAAsM;AAAA;;AAAA,QAAzL79C,IAAyL,uEAAlL,IAAI2pC,qBAAJ,CAA2B,IAAI9lF,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAE,CAApB,EAAuB,CAAvB,CAA3B,EAAuD,IAAIA,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAvD,EAAiF,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjF,CAAkL;AAAA,QAAvEm5F,eAAuE,uEAArD,EAAqD;AAAA,QAAjD92F,MAAiD,uEAAxC,CAAwC;AAAA,QAArCwmF,cAAqC,uEAApB,CAAoB;AAAA,QAAjB9G,MAAiB,uEAAR,KAAQ;;AAAA;;AAErM;AACA,YAAKj/F,IAAL,GAAY,cAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjB+nC,MAAAA,IAAI,EAAEA,IADW;AAEjBg9C,MAAAA,eAAe,EAAEA,eAFA;AAGjB92F,MAAAA,MAAM,EAAEA,MAHS;AAIjBwmF,MAAAA,cAAc,EAAEA,cAJC;AAKjB9G,MAAAA,MAAM,EAAEA;AALS,KAAlB;AAQA,QAAMkY,MAAM,GAAG99C,IAAI,CAACi3C,mBAAL,CAA0B+F,eAA1B,EAA2CpX,MAA3C,CAAf,CAbqM,CAerM;;AAEA,YAAKl/D,QAAL,GAAgBo3E,MAAM,CAACp3E,QAAvB;AACA,YAAKJ,OAAL,GAAew3E,MAAM,CAACx3E,OAAtB;AACA,YAAKu/D,SAAL,GAAiBiY,MAAM,CAACjY,SAAxB,CAnBqM,CAqBrM;;AAEA,QAAMnzB,MAAM,GAAG,IAAI7uD,OAAJ,EAAf;AACA,QAAMkC,MAAM,GAAG,IAAIlC,OAAJ,EAAf;AACA,QAAM3H,EAAE,GAAG,IAAIvO,OAAJ,EAAX;AACA,QAAIowG,CAAC,GAAG,IAAIl6F,OAAJ,EAAR,CA1BqM,CA4BrM;;AAEA,QAAMuoB,QAAQ,GAAG,EAAjB;AACA,QAAM9F,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMH,OAAO,GAAG,EAAhB,CAjCqM,CAmCrM;;AAEA43E,IAAAA,kBAAkB,GArCmL,CAuCrM;;AAEA,YAAKz0E,QAAL,CAAenD,OAAf;;AACA,YAAKP,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;;AACA,YAAKvG,YAAL,CAAmB,QAAnB,EAA6B,IAAI5B,sBAAJ,CAA4BqC,OAA5B,EAAqC,CAArC,CAA7B;;AACA,YAAKT,YAAL,CAAmB,IAAnB,EAAyB,IAAI5B,sBAAJ,CAA4BsC,GAA5B,EAAiC,CAAjC,CAAzB,EA5CqM,CA8CrM;;;AAEA,aAASy3E,kBAAT,GAA8B;AAE7B,WAAM,IAAIv2G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGu1G,eAArB,EAAsCv1G,CAAC,EAAvC,EAA6C;AAE5Cw2G,QAAAA,eAAe,CAAEx2G,CAAF,CAAf;AAEA,OAN4B,CAQ7B;AACA;AACA;AACA;;;AAEAw2G,MAAAA,eAAe,CAAIrY,MAAM,KAAK,KAAb,GAAuBoX,eAAvB,GAAyC,CAA3C,CAAf,CAb6B,CAe7B;AACA;;AAEA9O,MAAAA,WAAW,GAlBkB,CAoB7B;;AAEAgQ,MAAAA,eAAe;AAEf;;AAED,aAASD,eAAT,CAA0Bx2G,CAA1B,EAA8B;AAE7B;AAEAs2G,MAAAA,CAAC,GAAG/9C,IAAI,CAAC0kC,UAAL,CAAiBj9F,CAAC,GAAGu1G,eAArB,EAAsCe,CAAtC,CAAJ,CAJ6B,CAM7B;;AAEA,UAAMR,CAAC,GAAGO,MAAM,CAACx3E,OAAP,CAAgB7+B,CAAhB,CAAV;AACA,UAAM41G,CAAC,GAAGS,MAAM,CAACjY,SAAP,CAAkBp+F,CAAlB,CAAV,CAT6B,CAW7B;;AAEA,WAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIuiF,cAAtB,EAAsCviF,CAAC,EAAvC,EAA6C;AAE5C,YAAMpc,CAAC,GAAGoc,CAAC,GAAGuiF,cAAJ,GAAqB1kG,IAAI,CAACC,EAA1B,GAA+B,CAAzC;AAEA,YAAM+D,GAAG,GAAGhE,IAAI,CAACgE,GAAL,CAAU+B,CAAV,CAAZ;AACA,YAAMhC,GAAG,GAAG,CAAE/D,IAAI,CAAC+D,GAAL,CAAUgC,CAAV,CAAd,CAL4C,CAO5C;;AAEAgY,QAAAA,MAAM,CAAC5c,CAAP,GAAa4C,GAAG,GAAGwxG,CAAC,CAACp0G,CAAR,GAAY6C,GAAG,GAAGqxG,CAAC,CAACl0G,CAAjC;AACA4c,QAAAA,MAAM,CAACtc,CAAP,GAAasC,GAAG,GAAGwxG,CAAC,CAAC9zG,CAAR,GAAYuC,GAAG,GAAGqxG,CAAC,CAAC5zG,CAAjC;AACAsc,QAAAA,MAAM,CAAC1J,CAAP,GAAatQ,GAAG,GAAGwxG,CAAC,CAAClhG,CAAR,GAAYrQ,GAAG,GAAGqxG,CAAC,CAAChhG,CAAjC;AACA0J,QAAAA,MAAM,CAAC3Y,SAAP;AAEAk5B,QAAAA,OAAO,CAACr/B,IAAR,CAAc8e,MAAM,CAAC5c,CAArB,EAAwB4c,MAAM,CAACtc,CAA/B,EAAkCsc,MAAM,CAAC1J,CAAzC,EAd4C,CAgB5C;;AAEAq2D,QAAAA,MAAM,CAACvpE,CAAP,GAAW40G,CAAC,CAAC50G,CAAF,GAAM+c,MAAM,GAAGH,MAAM,CAAC5c,CAAjC;AACAupE,QAAAA,MAAM,CAACjpE,CAAP,GAAWs0G,CAAC,CAACt0G,CAAF,GAAMyc,MAAM,GAAGH,MAAM,CAACtc,CAAjC;AACAipE,QAAAA,MAAM,CAACr2D,CAAP,GAAW0hG,CAAC,CAAC1hG,CAAF,GAAM6J,MAAM,GAAGH,MAAM,CAAC1J,CAAjC;AAEA+vB,QAAAA,QAAQ,CAACnlC,IAAT,CAAeyrE,MAAM,CAACvpE,CAAtB,EAAyBupE,MAAM,CAACjpE,CAAhC,EAAmCipE,MAAM,CAACr2D,CAA1C;AAEA;AAED;;AAED,aAAS6hG,eAAT,GAA2B;AAE1B,WAAM,IAAI/zF,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAI6yF,eAAtB,EAAuC7yF,CAAC,EAAxC,EAA8C;AAE7C,aAAM,IAAI1iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIilG,cAAtB,EAAsCjlG,CAAC,EAAvC,EAA6C;AAE5C,cAAMkE,CAAC,GAAG,CAAE+gG,cAAc,GAAG,CAAnB,KAA2BviF,CAAC,GAAG,CAA/B,KAAuC1iB,CAAC,GAAG,CAA3C,CAAV;AACA,cAAMmE,CAAC,GAAG,CAAE8gG,cAAc,GAAG,CAAnB,IAAyBviF,CAAzB,IAA+B1iB,CAAC,GAAG,CAAnC,CAAV;AACA,cAAMoE,CAAC,GAAG,CAAE6gG,cAAc,GAAG,CAAnB,IAAyBviF,CAAzB,GAA6B1iB,CAAvC;AACA,cAAMwK,CAAC,GAAG,CAAEy6F,cAAc,GAAG,CAAnB,KAA2BviF,CAAC,GAAG,CAA/B,IAAqC1iB,CAA/C,CAL4C,CAO5C;;AAEA2+B,UAAAA,OAAO,CAACn/B,IAAR,CAAc0E,CAAd,EAAiBC,CAAjB,EAAoBqG,CAApB;AACAm0B,UAAAA,OAAO,CAACn/B,IAAR,CAAc2E,CAAd,EAAiBC,CAAjB,EAAoBoG,CAApB;AAEA;AAED;AAED;;AAED,aAASi8F,WAAT,GAAuB;AAEtB,WAAM,IAAIzmG,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIu1G,eAAtB,EAAuCv1G,CAAC,EAAxC,EAA8C;AAE7C,aAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAIuiF,cAAtB,EAAsCviF,CAAC,EAAvC,EAA6C;AAE5CjO,UAAAA,EAAE,CAAC/S,CAAH,GAAO1B,CAAC,GAAGu1G,eAAX;AACA9gG,UAAAA,EAAE,CAACzS,CAAH,GAAO0gB,CAAC,GAAGuiF,cAAX;AAEAnmE,UAAAA,GAAG,CAACt/B,IAAJ,CAAUiV,EAAE,CAAC/S,CAAb,EAAgB+S,EAAE,CAACzS,CAAnB;AAEA;AAED;AAED;;AAxJoM;AA0JrM;;;;WAED,kBAAS;AAER,UAAMqP,IAAI,2EAAV;;AAEAA,MAAAA,IAAI,CAACknD,IAAL,GAAY,KAAK/nC,UAAL,CAAgB+nC,IAAhB,CAAqBjkD,MAArB,EAAZ;AAEA,aAAOjD,IAAP;AAEA;;;WAED,kBAAiBA,IAAjB,EAAwB;AAEvB;AACA;AACA,aAAO,IAAI+kG,YAAJ,CACN,IAAI9T,MAAM,CAAEjxF,IAAI,CAACknD,IAAL,CAAUr5D,IAAZ,CAAV,GAA+BokG,QAA/B,CAAyCjyF,IAAI,CAACknD,IAA9C,CADM,EAENlnD,IAAI,CAACkkG,eAFC,EAGNlkG,IAAI,CAACoN,MAHC,EAINpN,IAAI,CAAC4zF,cAJC,EAKN5zF,IAAI,CAAC8sF,MALC,CAAP;AAQA;;;;EApLyBlhE,c;;IAwLrBy5E,iB;;;;;AAEL,+BAA+B;AAAA;;AAAA,QAAlBl2F,QAAkB,uEAAP,IAAO;;AAAA;;AAE9B;AACA,YAAKthB,IAAL,GAAY,mBAAZ;AAEA,YAAKsxB,UAAL,GAAkB;AACjBhQ,MAAAA,QAAQ,EAAEA;AADO,KAAlB;;AAIA,QAAKA,QAAQ,KAAK,IAAlB,EAAyB;AAExB;AAEA,UAAMmkB,QAAQ,GAAG,EAAjB;AACA,UAAMgyE,KAAK,GAAG,IAAIh0C,GAAJ,EAAd,CALwB,CAOxB;;AAEA,UAAMnlC,KAAK,GAAG,IAAIphB,OAAJ,EAAd;AACA,UAAMwnB,GAAG,GAAG,IAAIxnB,OAAJ,EAAZ;;AAEA,UAAKoE,QAAQ,CAAC9gB,KAAT,KAAmB,IAAxB,EAA+B;AAE9B;AAEA,YAAMghB,QAAQ,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,QAArC;AACA,YAAMie,OAAO,GAAGne,QAAQ,CAAC9gB,KAAzB;AACA,YAAI29B,MAAM,GAAG7c,QAAQ,CAAC6c,MAAtB;;AAEA,YAAKA,MAAM,CAACn9B,MAAP,KAAkB,CAAvB,EAA2B;AAE1Bm9B,UAAAA,MAAM,GAAG,CAAE;AAAEG,YAAAA,KAAK,EAAE,CAAT;AAAY9lB,YAAAA,KAAK,EAAEinB,OAAO,CAACjnB,KAA3B;AAAkC+lB,YAAAA,aAAa,EAAE;AAAjD,WAAF,CAAT;AAEA,SAZ6B,CAc9B;;;AAEA,aAAM,IAAIm5E,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGx5E,MAAM,CAACn9B,MAA7B,EAAqC02G,CAAC,GAAGC,EAAzC,EAA6C,EAAGD,CAAhD,EAAoD;AAEnD,cAAM72E,KAAK,GAAG1C,MAAM,CAAEu5E,CAAF,CAApB;AAEA,cAAM/xE,UAAU,GAAG9E,KAAK,CAACvC,KAAzB;AACA,cAAMmI,UAAU,GAAG5F,KAAK,CAACroB,KAAzB;;AAEA,eAAM,IAAI1X,CAAC,GAAG6kC,UAAR,EAAoB5kC,CAAC,GAAK4kC,UAAU,GAAGc,UAA7C,EAA2D3lC,CAAC,GAAGC,CAA/D,EAAkED,CAAC,IAAI,CAAvE,EAA2E;AAE1E,iBAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,kBAAM6Y,MAAM,GAAGoD,OAAO,CAACh3B,IAAR,CAAc3H,CAAC,GAAG0iB,CAAlB,CAAf;AACA,kBAAM8Y,MAAM,GAAGmD,OAAO,CAACh3B,IAAR,CAAc3H,CAAC,GAAG,CAAE0iB,CAAC,GAAG,CAAN,IAAY,CAA9B,CAAf;AAEA8a,cAAAA,KAAK,CAAC7c,mBAAN,CAA2BD,QAA3B,EAAqC6a,MAArC;AACAqI,cAAAA,GAAG,CAACjjB,mBAAJ,CAAyBD,QAAzB,EAAmC8a,MAAnC;;AAEA,kBAAKs7E,YAAY,CAAEt5E,KAAF,EAASoG,GAAT,EAAc+yE,KAAd,CAAZ,KAAsC,IAA3C,EAAkD;AAEjDhyE,gBAAAA,QAAQ,CAACnlC,IAAT,CAAeg+B,KAAK,CAAC97B,CAArB,EAAwB87B,KAAK,CAACx7B,CAA9B,EAAiCw7B,KAAK,CAAC5oB,CAAvC;AACA+vB,gBAAAA,QAAQ,CAACnlC,IAAT,CAAeokC,GAAG,CAACliC,CAAnB,EAAsBkiC,GAAG,CAAC5hC,CAA1B,EAA6B4hC,GAAG,CAAChvB,CAAjC;AAEA;AAED;AAED;AAED;AAED,OA9CD,MA8CO;AAEN;AAEA,YAAM8L,UAAQ,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,QAArC;;AAEA,aAAM,IAAI1gB,IAAC,GAAG,CAAR,EAAWC,IAAC,GAAKygB,UAAQ,CAAChJ,KAAT,GAAiB,CAAxC,EAA6C1X,IAAC,GAAGC,IAAjD,EAAoDD,IAAC,EAArD,EAA2D;AAE1D,eAAM,IAAI0iB,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,CAArB,EAAwBA,IAAC,EAAzB,EAA+B;AAE9B;AACA;AAEA,gBAAM6Y,MAAM,GAAG,IAAIv7B,IAAJ,GAAQ0iB,IAAvB;;AACA,gBAAM8Y,OAAM,GAAG,IAAIx7B,IAAJ,GAAU,CAAE0iB,IAAC,GAAG,CAAN,IAAY,CAArC;;AAEA8a,YAAAA,KAAK,CAAC7c,mBAAN,CAA2BD,UAA3B,EAAqC6a,MAArC;AACAqI,YAAAA,GAAG,CAACjjB,mBAAJ,CAAyBD,UAAzB,EAAmC8a,OAAnC;;AAEA,gBAAKs7E,YAAY,CAAEt5E,KAAF,EAASoG,GAAT,EAAc+yE,KAAd,CAAZ,KAAsC,IAA3C,EAAkD;AAEjDhyE,cAAAA,QAAQ,CAACnlC,IAAT,CAAeg+B,KAAK,CAAC97B,CAArB,EAAwB87B,KAAK,CAACx7B,CAA9B,EAAiCw7B,KAAK,CAAC5oB,CAAvC;AACA+vB,cAAAA,QAAQ,CAACnlC,IAAT,CAAeokC,GAAG,CAACliC,CAAnB,EAAsBkiC,GAAG,CAAC5hC,CAA1B,EAA6B4hC,GAAG,CAAChvB,CAAjC;AAEA;AAED;AAED;AAED,OAxFuB,CA0FxB;;;AAEA,cAAKwpB,YAAL,CAAmB,UAAnB,EAA+B,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAA/B;AAEA;;AAvG6B;AAyG9B;;;EA3G8B1H,c;;AA+GhC,SAAS65E,YAAT,CAAuBt5E,KAAvB,EAA8BoG,GAA9B,EAAmC+yE,KAAnC,EAA2C;AAE1C,MAAMI,KAAK,aAAMv5E,KAAK,CAAC97B,CAAZ,cAAiB87B,KAAK,CAACx7B,CAAvB,cAA4Bw7B,KAAK,CAAC5oB,CAAlC,cAAuCgvB,GAAG,CAACliC,CAA3C,cAAgDkiC,GAAG,CAAC5hC,CAApD,cAAyD4hC,GAAG,CAAChvB,CAA7D,CAAX;AACA,MAAMoiG,KAAK,aAAMpzE,GAAG,CAACliC,CAAV,cAAekiC,GAAG,CAAC5hC,CAAnB,cAAwB4hC,GAAG,CAAChvB,CAA5B,cAAiC4oB,KAAK,CAAC97B,CAAvC,cAA4C87B,KAAK,CAACx7B,CAAlD,cAAuDw7B,KAAK,CAAC5oB,CAA7D,CAAX,CAH0C,CAGmC;;AAE7E,MAAK+hG,KAAK,CAACtxD,GAAN,CAAW0xD,KAAX,MAAuB,IAAvB,IAA+BJ,KAAK,CAACtxD,GAAN,CAAW2xD,KAAX,MAAuB,IAA3D,EAAkE;AAEjE,WAAO,KAAP;AAEA,GAJD,MAIO;AAENL,IAAAA,KAAK,CAAC72F,GAAN,CAAWi3F,KAAX;AACAJ,IAAAA,KAAK,CAAC72F,GAAN,CAAWk3F,KAAX;AACA,WAAO,IAAP;AAEA;AAED;;AAED,IAAIC,UAAU,GAAG,aAAanxG,MAAM,CAACC,MAAP,CAAc;AAC3CC,EAAAA,SAAS,EAAE,IADgC;AAE3Cs+B,EAAAA,WAAW,EAAEA,WAF8B;AAG3C4yE,EAAAA,iBAAiB,EAAE5yE,WAHwB;AAI3CygE,EAAAA,eAAe,EAAEA,eAJ0B;AAK3CoS,EAAAA,qBAAqB,EAAEpS,eALoB;AAM3CG,EAAAA,cAAc,EAAEA,cAN2B;AAO3CkS,EAAAA,oBAAoB,EAAElS,cAPqB;AAQ3CiB,EAAAA,YAAY,EAAEA,YAR6B;AAS3CkR,EAAAA,kBAAkB,EAAElR,YATuB;AAU3Cb,EAAAA,gBAAgB,EAAEA,gBAVyB;AAW3CgS,EAAAA,sBAAsB,EAAEhS,gBAXmB;AAY3CoC,EAAAA,oBAAoB,EAAEA,oBAZqB;AAa3C6P,EAAAA,0BAA0B,EAAE7P,oBAbe;AAc3CK,EAAAA,aAAa,EAAEA,aAd4B;AAe3CkG,EAAAA,eAAe,EAAEA,eAf0B;AAgB3CuJ,EAAAA,qBAAqB,EAAEvJ,eAhBoB;AAiB3CgG,EAAAA,mBAAmB,EAAEA,mBAjBsB;AAkB3CwD,EAAAA,yBAAyB,EAAExD,mBAlBgB;AAmB3C1P,EAAAA,aAAa,EAAEA,aAnB4B;AAoB3CmT,EAAAA,mBAAmB,EAAEnT,aApBsB;AAqB3C2P,EAAAA,kBAAkB,EAAEA,kBArBuB;AAsB3CyD,EAAAA,wBAAwB,EAAEzD,kBAtBiB;AAuB3ChlE,EAAAA,aAAa,EAAEA,aAvB4B;AAwB3C0oE,EAAAA,mBAAmB,EAAE1oE,aAxBsB;AAyB3Ck3D,EAAAA,kBAAkB,EAAEA,kBAzBuB;AA0B3CyR,EAAAA,wBAAwB,EAAEzR,kBA1BiB;AA2B3C+N,EAAAA,YAAY,EAAEA,YA3B6B;AA4B3C2D,EAAAA,kBAAkB,EAAE3D,YA5BuB;AA6B3CO,EAAAA,aAAa,EAAEA,aA7B4B;AA8B3CqD,EAAAA,mBAAmB,EAAErD,aA9BsB;AA+B3CK,EAAAA,cAAc,EAAEA,cA/B2B;AAgC3CiD,EAAAA,oBAAoB,EAAEjD,cAhCqB;AAiC3CK,EAAAA,mBAAmB,EAAEA,mBAjCsB;AAkC3C6C,EAAAA,yBAAyB,EAAE7C,mBAlCgB;AAmC3CC,EAAAA,aAAa,EAAEA,aAnC4B;AAoC3C6C,EAAAA,mBAAmB,EAAE7C,aApCsB;AAqC3CI,EAAAA,iBAAiB,EAAEA,iBArCwB;AAsC3C0C,EAAAA,uBAAuB,EAAE1C,iBAtCkB;AAuC3CW,EAAAA,YAAY,EAAEA,YAvC6B;AAwC3CgC,EAAAA,kBAAkB,EAAEhC,YAxCuB;AAyC3CM,EAAAA,iBAAiB,EAAEA;AAzCwB,CAAd,CAA9B;;IA4CM3yC,c;;;;;AAEL,0BAAavzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAK05D,gBAAL,GAAwB,IAAxB;AAEA,YAAKhrF,IAAL,GAAY,gBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb;AACA,YAAKmmB,WAAL,GAAmB,IAAnB;AAEA,YAAKoG,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAbyB;AAezB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,+EAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAKqtB,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EA7B2B1G,Q;;IAiCvBskF,iB;;;;;AAEL,6BAAa7nF,UAAb,EAA0B;AAAA;;AAAA;;AAEzB,kCAAOA,UAAP;AAEA,YAAKuuC,mBAAL,GAA2B,IAA3B;AAEA,YAAK7/D,IAAL,GAAY,mBAAZ;AANyB;AAQzB;;;EAV8BmnC,c;;IAc1Bo9B,oB;;;;;AAEL,gCAAajzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAK2zC,sBAAL,GAA8B,IAA9B;AAEA,YAAK59B,OAAL,GAAe;AAAE,kBAAY;AAAd,KAAf;AAEA,YAAKrnC,IAAL,GAAY,sBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb,CAVyB,CAUW;;AACpC,YAAKuoB,SAAL,GAAiB,GAAjB;AACA,YAAKC,SAAL,GAAiB,GAAjB;AAEA,YAAKqB,GAAL,GAAW,IAAX;AAEA,YAAKG,QAAL,GAAgB,IAAhB;AACA,YAAKC,iBAAL,GAAyB,GAAzB;AAEA,YAAKC,KAAL,GAAa,IAAb;AACA,YAAKC,cAAL,GAAsB,GAAtB;AAEA,YAAKvB,QAAL,GAAgB,IAAI5oB,KAAJ,CAAW,QAAX,CAAhB;AACA,YAAK6oB,iBAAL,GAAyB,GAAzB;AACA,YAAKiC,WAAL,GAAmB,IAAnB;AAEA,YAAKV,OAAL,GAAe,IAAf;AACA,YAAKC,SAAL,GAAiB,CAAjB;AAEA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,aAAL,GAAqBz7B,qBAArB;AACA,YAAK07B,WAAL,GAAmB,IAAIxyB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,YAAKyyB,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKC,YAAL,GAAoB,IAApB;AAEA,YAAKC,YAAL,GAAoB,IAApB;AAEA,YAAKd,QAAL,GAAgB,IAAhB;AAEA,YAAKmB,MAAL,GAAc,IAAd;AACA,YAAKE,eAAL,GAAuB,GAAvB;AAEA,YAAKe,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AACA,YAAKC,gBAAL,GAAwB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,OAAzB;AAEA,YAAKjE,WAAL,GAAmB,KAAnB;AAEA,YAAKkE,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAvDyB;AAyDzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,qFAAYA,MAAZ;;AAEA,WAAKs4B,OAAL,GAAe;AAAE,oBAAY;AAAd,OAAf;AAEA,WAAKn5B,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AACA,WAAKqpB,SAAL,GAAiBxoB,MAAM,CAACwoB,SAAxB;AACA,WAAKC,SAAL,GAAiBzoB,MAAM,CAACyoB,SAAxB;AAEA,WAAKqB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKG,QAAL,GAAgBjqB,MAAM,CAACiqB,QAAvB;AACA,WAAKC,iBAAL,GAAyBlqB,MAAM,CAACkqB,iBAAhC;AAEA,WAAKC,KAAL,GAAanqB,MAAM,CAACmqB,KAApB;AACA,WAAKC,cAAL,GAAsBpqB,MAAM,CAACoqB,cAA7B;AAEA,WAAKvB,QAAL,CAAczoB,IAAd,CAAoBJ,MAAM,CAAC6oB,QAA3B;AACA,WAAKkC,WAAL,GAAmB/qB,MAAM,CAAC+qB,WAA1B;AACA,WAAKjC,iBAAL,GAAyB9oB,MAAM,CAAC8oB,iBAAhC;AAEA,WAAKuB,OAAL,GAAerqB,MAAM,CAACqqB,OAAtB;AACA,WAAKC,SAAL,GAAiBtqB,MAAM,CAACsqB,SAAxB;AAEA,WAAKC,SAAL,GAAiBvqB,MAAM,CAACuqB,SAAxB;AACA,WAAKC,aAAL,GAAqBxqB,MAAM,CAACwqB,aAA5B;AACA,WAAKC,WAAL,CAAiBrqB,IAAjB,CAAuBJ,MAAM,CAACyqB,WAA9B;AAEA,WAAKC,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKC,YAAL,GAAoB7qB,MAAM,CAAC6qB,YAA3B;AAEA,WAAKC,YAAL,GAAoB9qB,MAAM,CAAC8qB,YAA3B;AAEA,WAAKd,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKmB,MAAL,GAAcnrB,MAAM,CAACmrB,MAArB;AACA,WAAKE,eAAL,GAAuBrrB,MAAM,CAACqrB,eAA9B;AAEA,WAAKe,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AACA,WAAKC,gBAAL,GAAwBtsB,MAAM,CAACssB,gBAA/B;AACA,WAAKC,iBAAL,GAAyBvsB,MAAM,CAACusB,iBAAhC;AAEA,WAAKjE,WAAL,GAAmBtoB,MAAM,CAACsoB,WAA1B;AAEA,WAAKkE,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EAlHiC1G,Q;;IAsH7B2vC,oB;;;;;AAEL,gCAAalzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAK44D,sBAAL,GAA8B,IAA9B;AAEA,YAAK7iD,OAAL,GAAe;AAEd,kBAAY,EAFE;AAGd,kBAAY;AAHE,KAAf;AAOA,YAAKrnC,IAAL,GAAY,sBAAZ;AAEA,YAAKo4B,YAAL,GAAoB,IAApB;AACA,YAAKD,kBAAL,GAA0B,GAA1B;AACA,YAAKE,qBAAL,GAA6B,IAA7B;AACA,YAAKE,oBAAL,GAA4B,IAAIvxB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAA5B;AACA,YAAKsxB,kBAAL,GAA0B,IAA1B;AAEA,YAAKgjB,GAAL,GAAW,GAAX;AAEA10C,IAAAA,MAAM,CAACmN,cAAP,kCAA6B,cAA7B,EAA6C;AAC5C47B,MAAAA,GAAG,EAAE,eAAY;AAEhB,eAAS3tC,KAAK,CAAE,OAAQ,KAAKs5C,GAAL,GAAW,CAAnB,KAA2B,KAAKA,GAAL,GAAW,CAAtC,CAAF,EAA6C,CAA7C,EAAgD,CAAhD,CAAd;AAEA,OAL2C;AAM5Cx1C,MAAAA,GAAG,EAAE,aAAWu0B,YAAX,EAA0B;AAE9B,aAAKihB,GAAL,GAAW,CAAE,IAAI,MAAMjhB,YAAZ,KAA+B,IAAI,MAAMA,YAAzC,CAAX;AAEA;AAV2C,KAA7C;AAaA,YAAK1B,cAAL,GAAsB,IAAtB;AACA,YAAKF,cAAL,GAAsB,GAAtB;AACA,YAAKC,yBAAL,GAAiC,CAAE,GAAF,EAAO,GAAP,CAAjC;AACA,YAAKE,uBAAL,GAA+B,IAA/B;AAEA,YAAKlB,UAAL,GAAkB,IAAI1oB,KAAJ,CAAW,QAAX,CAAlB;AACA,YAAKqwC,aAAL,GAAqB,IAArB;AACA,YAAK1nB,cAAL,GAAsB,GAAtB;AACA,YAAK2nB,iBAAL,GAAyB,IAAzB;AAEA,YAAK7kB,eAAL,GAAuB,IAAvB;AAEA,YAAKC,SAAL,GAAiB,CAAjB;AACA,YAAKC,YAAL,GAAoB,IAApB;AACA,YAAKC,mBAAL,GAA2B,GAA3B;AACA,YAAKC,gBAAL,GAAwB,IAAI7rB,KAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAxB;AAEA,YAAK+oB,iBAAL,GAAyB,GAAzB;AACA,YAAKiC,oBAAL,GAA4B,IAA5B;AACA,YAAKhC,aAAL,GAAqB,IAAIhpB,KAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAArB;AACA,YAAKirB,gBAAL,GAAwB,IAAxB;AAEA,YAAKm/E,MAAL,GAAc,GAAd;AACA,YAAKC,UAAL,GAAkB,CAAlB;AACA,YAAKC,YAAL,GAAoB,CAApB;AACA,YAAKC,aAAL,GAAqB,CAArB;;AAEA,YAAK39E,SAAL,CAAgBtK,UAAhB;;AA/DyB;AAiEzB;;;;SAED,eAAY;AAEX,aAAO,KAAK8nF,MAAZ;AAEA,K;SAED,aAAWn3G,KAAX,EAAmB;AAElB,UAAK,KAAKm3G,MAAL,GAAc,CAAd,KAAoBn3G,KAAK,GAAG,CAAjC,EAAqC;AAEpC,aAAKqQ,OAAL;AAEA;;AAED,WAAK8mG,MAAL,GAAcn3G,KAAd;AAEA;;;SAED,eAAgB;AAEf,aAAO,KAAKo3G,UAAZ;AAEA,K;SAED,aAAep3G,KAAf,EAAuB;AAEtB,UAAK,KAAKo3G,UAAL,GAAkB,CAAlB,KAAwBp3G,KAAK,GAAG,CAArC,EAAyC;AAExC,aAAKqQ,OAAL;AAEA;;AAED,WAAK+mG,UAAL,GAAkBp3G,KAAlB;AAEA;;;SAED,eAAkB;AAEjB,aAAO,KAAKq3G,YAAZ;AAEA,K;SAED,aAAiBr3G,KAAjB,EAAyB;AAExB,UAAK,KAAKq3G,YAAL,GAAoB,CAApB,KAA0Br3G,KAAK,GAAG,CAAvC,EAA2C;AAE1C,aAAKqQ,OAAL;AAEA;;AAED,WAAKgnG,YAAL,GAAoBr3G,KAApB;AAEA;;;SAED,eAAmB;AAElB,aAAO,KAAKs3G,aAAZ;AAEA,K;SAED,aAAkBt3G,KAAlB,EAA0B;AAEzB,UAAK,KAAKs3G,aAAL,GAAqB,CAArB,KAA2Bt3G,KAAK,GAAG,CAAxC,EAA4C;AAE3C,aAAKqQ,OAAL;AAEA;;AAED,WAAKinG,aAAL,GAAqBt3G,KAArB;AAEA;;;WAED,cAAM8M,MAAN,EAAe;AAEd,qFAAYA,MAAZ;;AAEA,WAAKs4B,OAAL,GAAe;AAEd,oBAAY,EAFE;AAGd,oBAAY;AAHE,OAAf;AAOA,WAAKnP,SAAL,GAAiBnpB,MAAM,CAACmpB,SAAxB;AACA,WAAKE,YAAL,GAAoBrpB,MAAM,CAACqpB,YAA3B;AACA,WAAKD,kBAAL,GAA0BppB,MAAM,CAACopB,kBAAjC;AACA,WAAKE,qBAAL,GAA6BtpB,MAAM,CAACspB,qBAApC;AACA,WAAKC,kBAAL,GAA0BvpB,MAAM,CAACupB,kBAAjC;AACA,WAAKC,oBAAL,CAA0BppB,IAA1B,CAAgCJ,MAAM,CAACwpB,oBAAvC;AAEA,WAAK+iB,GAAL,GAAWvsC,MAAM,CAACusC,GAAlB;AAEA,WAAK9iB,WAAL,GAAmBzpB,MAAM,CAACypB,WAA1B;AACA,WAAKG,cAAL,GAAsB5pB,MAAM,CAAC4pB,cAA7B;AACA,WAAKF,cAAL,GAAsB1pB,MAAM,CAAC0pB,cAA7B;AACA,WAAKC,yBAAL,sBAAsC3pB,MAAM,CAAC2pB,yBAA7C;AACA,WAAKE,uBAAL,GAA+B7pB,MAAM,CAAC6pB,uBAAtC;AAEA,WAAKnB,KAAL,GAAa1oB,MAAM,CAAC0oB,KAApB;AACA,WAAKC,UAAL,CAAgBvoB,IAAhB,CAAsBJ,MAAM,CAAC2oB,UAA7B;AACA,WAAK2nB,aAAL,GAAqBtwC,MAAM,CAACswC,aAA5B;AACA,WAAK1nB,cAAL,GAAsB5oB,MAAM,CAAC4oB,cAA7B;AACA,WAAK2nB,iBAAL,GAAyBvwC,MAAM,CAACuwC,iBAAhC;AAEA,WAAK9kB,YAAL,GAAoBzrB,MAAM,CAACyrB,YAA3B;AACA,WAAKC,eAAL,GAAuB1rB,MAAM,CAAC0rB,eAA9B;AAEA,WAAKC,SAAL,GAAiB3rB,MAAM,CAAC2rB,SAAxB;AACA,WAAKC,YAAL,GAAoB5rB,MAAM,CAAC4rB,YAA3B;AACA,WAAKC,mBAAL,GAA2B7rB,MAAM,CAAC6rB,mBAAlC;AACA,WAAKC,gBAAL,CAAsB1rB,IAAtB,CAA4BJ,MAAM,CAAC8rB,gBAAnC;AAEA,WAAK9C,iBAAL,GAAyBhpB,MAAM,CAACgpB,iBAAhC;AACA,WAAKiC,oBAAL,GAA4BjrB,MAAM,CAACirB,oBAAnC;AACA,WAAKhC,aAAL,CAAmB7oB,IAAnB,CAAyBJ,MAAM,CAACipB,aAAhC;AACA,WAAKiC,gBAAL,GAAwBlrB,MAAM,CAACkrB,gBAA/B;AAEA,aAAO,IAAP;AAEA;;;;EA5LiCsqC,oB;;IAgM7BF,iB;;;;;AAEL,6BAAa/yC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKy4D,mBAAL,GAA2B,IAA3B;AAEA,YAAK/pF,IAAL,GAAY,mBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb,CARyB,CAQW;;AACpC,YAAK8oB,QAAL,GAAgB,IAAI9oB,KAAJ,CAAW,QAAX,CAAhB;AACA,YAAKipB,SAAL,GAAiB,EAAjB;AAEA,YAAKY,GAAL,GAAW,IAAX;AAEA,YAAKG,QAAL,GAAgB,IAAhB;AACA,YAAKC,iBAAL,GAAyB,GAAzB;AAEA,YAAKC,KAAL,GAAa,IAAb;AACA,YAAKC,cAAL,GAAsB,GAAtB;AAEA,YAAKvB,QAAL,GAAgB,IAAI5oB,KAAJ,CAAW,QAAX,CAAhB;AACA,YAAK6oB,iBAAL,GAAyB,GAAzB;AACA,YAAKiC,WAAL,GAAmB,IAAnB;AAEA,YAAKV,OAAL,GAAe,IAAf;AACA,YAAKC,SAAL,GAAiB,CAAjB;AAEA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,aAAL,GAAqBz7B,qBAArB;AACA,YAAK07B,WAAL,GAAmB,IAAIxyB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,YAAKyyB,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKI,WAAL,GAAmB,IAAnB;AAEA,YAAKhB,QAAL,GAAgB,IAAhB;AAEA,YAAKmB,MAAL,GAAc,IAAd;AACA,YAAKC,OAAL,GAAepiC,iBAAf;AACA,YAAKsiC,YAAL,GAAoB,CAApB;AACA,YAAKC,eAAL,GAAuB,IAAvB;AAEA,YAAKa,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AACA,YAAKC,gBAAL,GAAwB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,OAAzB;AAEA,YAAKjE,WAAL,GAAmB,KAAnB;AAEA,YAAKkE,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AArDyB;AAuDzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,kFAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AACA,WAAK4pB,QAAL,CAAc3oB,IAAd,CAAoBJ,MAAM,CAAC+oB,QAA3B;AACA,WAAKG,SAAL,GAAiBlpB,MAAM,CAACkpB,SAAxB;AAEA,WAAKY,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKG,QAAL,GAAgBjqB,MAAM,CAACiqB,QAAvB;AACA,WAAKC,iBAAL,GAAyBlqB,MAAM,CAACkqB,iBAAhC;AAEA,WAAKC,KAAL,GAAanqB,MAAM,CAACmqB,KAApB;AACA,WAAKC,cAAL,GAAsBpqB,MAAM,CAACoqB,cAA7B;AAEA,WAAKvB,QAAL,CAAczoB,IAAd,CAAoBJ,MAAM,CAAC6oB,QAA3B;AACA,WAAKkC,WAAL,GAAmB/qB,MAAM,CAAC+qB,WAA1B;AACA,WAAKjC,iBAAL,GAAyB9oB,MAAM,CAAC8oB,iBAAhC;AAEA,WAAKuB,OAAL,GAAerqB,MAAM,CAACqqB,OAAtB;AACA,WAAKC,SAAL,GAAiBtqB,MAAM,CAACsqB,SAAxB;AAEA,WAAKC,SAAL,GAAiBvqB,MAAM,CAACuqB,SAAxB;AACA,WAAKC,aAAL,GAAqBxqB,MAAM,CAACwqB,aAA5B;AACA,WAAKC,WAAL,CAAiBrqB,IAAjB,CAAuBJ,MAAM,CAACyqB,WAA9B;AAEA,WAAKC,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKI,WAAL,GAAmBhrB,MAAM,CAACgrB,WAA1B;AAEA,WAAKhB,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKmB,MAAL,GAAcnrB,MAAM,CAACmrB,MAArB;AACA,WAAKC,OAAL,GAAeprB,MAAM,CAACorB,OAAtB;AACA,WAAKE,YAAL,GAAoBtrB,MAAM,CAACsrB,YAA3B;AACA,WAAKC,eAAL,GAAuBvrB,MAAM,CAACurB,eAA9B;AAEA,WAAKa,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AACA,WAAKC,gBAAL,GAAwBtsB,MAAM,CAACssB,gBAA/B;AACA,WAAKC,iBAAL,GAAyBvsB,MAAM,CAACusB,iBAAhC;AAEA,WAAKjE,WAAL,GAAmBtoB,MAAM,CAACsoB,WAA1B;AAEA,WAAKkE,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EA9G8B1G,Q;;IAkH1ByvC,gB;;;;;AAEL,4BAAahzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKu4D,kBAAL,GAA0B,IAA1B;AAEA,YAAKxiD,OAAL,GAAe;AAAE,cAAQ;AAAV,KAAf;AAEA,YAAKrnC,IAAL,GAAY,kBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb;AAEA,YAAK6pB,GAAL,GAAW,IAAX;AACA,YAAK0B,WAAL,GAAmB,IAAnB;AAEA,YAAKvB,QAAL,GAAgB,IAAhB;AACA,YAAKC,iBAAL,GAAyB,GAAzB;AAEA,YAAKC,KAAL,GAAa,IAAb;AACA,YAAKC,cAAL,GAAsB,GAAtB;AAEA,YAAKvB,QAAL,GAAgB,IAAI5oB,KAAJ,CAAW,QAAX,CAAhB;AACA,YAAK6oB,iBAAL,GAAyB,GAAzB;AACA,YAAKiC,WAAL,GAAmB,IAAnB;AAEA,YAAKV,OAAL,GAAe,IAAf;AACA,YAAKC,SAAL,GAAiB,CAAjB;AAEA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,aAAL,GAAqBz7B,qBAArB;AACA,YAAK07B,WAAL,GAAmB,IAAIxyB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,YAAKyyB,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKZ,QAAL,GAAgB,IAAhB;AAEA,YAAKoC,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AACA,YAAKC,gBAAL,GAAwB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,OAAzB;AAEA,YAAKC,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AA7CyB;AA+CzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,iFAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK2qB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AACA,WAAK0B,WAAL,GAAmBxrB,MAAM,CAACwrB,WAA1B;AAEA,WAAKvB,QAAL,GAAgBjqB,MAAM,CAACiqB,QAAvB;AACA,WAAKC,iBAAL,GAAyBlqB,MAAM,CAACkqB,iBAAhC;AAEA,WAAKC,KAAL,GAAanqB,MAAM,CAACmqB,KAApB;AACA,WAAKC,cAAL,GAAsBpqB,MAAM,CAACoqB,cAA7B;AAEA,WAAKvB,QAAL,CAAczoB,IAAd,CAAoBJ,MAAM,CAAC6oB,QAA3B;AACA,WAAKkC,WAAL,GAAmB/qB,MAAM,CAAC+qB,WAA1B;AACA,WAAKjC,iBAAL,GAAyB9oB,MAAM,CAAC8oB,iBAAhC;AAEA,WAAKuB,OAAL,GAAerqB,MAAM,CAACqqB,OAAtB;AACA,WAAKC,SAAL,GAAiBtqB,MAAM,CAACsqB,SAAxB;AAEA,WAAKC,SAAL,GAAiBvqB,MAAM,CAACuqB,SAAxB;AACA,WAAKC,aAAL,GAAqBxqB,MAAM,CAACwqB,aAA5B;AACA,WAAKC,WAAL,CAAiBrqB,IAAjB,CAAuBJ,MAAM,CAACyqB,WAA9B;AAEA,WAAKC,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKZ,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKoC,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AACA,WAAKC,gBAAL,GAAwBtsB,MAAM,CAACssB,gBAA/B;AACA,WAAKC,iBAAL,GAAyBvsB,MAAM,CAACusB,iBAAhC;AAEA,WAAKC,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EA5F6B1G,Q;;IAgGzBsvC,kB;;;;;AAEL,8BAAa7yC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKi5D,oBAAL,GAA4B,IAA5B;AAEA,YAAKvqF,IAAL,GAAY,oBAAZ;AAEA,YAAKo5B,OAAL,GAAe,IAAf;AACA,YAAKC,SAAL,GAAiB,CAAjB;AAEA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,aAAL,GAAqBz7B,qBAArB;AACA,YAAK07B,WAAL,GAAmB,IAAIxyB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,YAAKyyB,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKwB,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AAEA,YAAK/D,WAAL,GAAmB,KAAnB;;AAEA,YAAKuE,SAAL,CAAgBtK,UAAhB;;AAxByB;AA0BzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,mFAAYA,MAAZ;;AAEA,WAAKqqB,OAAL,GAAerqB,MAAM,CAACqqB,OAAtB;AACA,WAAKC,SAAL,GAAiBtqB,MAAM,CAACsqB,SAAxB;AAEA,WAAKC,SAAL,GAAiBvqB,MAAM,CAACuqB,SAAxB;AACA,WAAKC,aAAL,GAAqBxqB,MAAM,CAACwqB,aAA5B;AACA,WAAKC,WAAL,CAAiBrqB,IAAjB,CAAuBJ,MAAM,CAACyqB,WAA9B;AAEA,WAAKC,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKwB,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AAEA,WAAK/D,WAAL,GAAmBtoB,MAAM,CAACsoB,WAA1B;AAEA,aAAO,IAAP;AAEA;;;;EApD+BxC,Q;;IAwD3BuvC,mB;;;;;AAEL,+BAAa9yC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKs4D,qBAAL,GAA6B,IAA7B;AAEA,YAAK5pF,IAAL,GAAY,qBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb,CARyB,CAQW;;AAEpC,YAAK6pB,GAAL,GAAW,IAAX;AAEA,YAAKG,QAAL,GAAgB,IAAhB;AACA,YAAKC,iBAAL,GAAyB,GAAzB;AAEA,YAAKC,KAAL,GAAa,IAAb;AACA,YAAKC,cAAL,GAAsB,GAAtB;AAEA,YAAKvB,QAAL,GAAgB,IAAI5oB,KAAJ,CAAW,QAAX,CAAhB;AACA,YAAK6oB,iBAAL,GAAyB,GAAzB;AACA,YAAKiC,WAAL,GAAmB,IAAnB;AAEA,YAAKC,WAAL,GAAmB,IAAnB;AAEA,YAAKhB,QAAL,GAAgB,IAAhB;AAEA,YAAKmB,MAAL,GAAc,IAAd;AACA,YAAKC,OAAL,GAAepiC,iBAAf;AACA,YAAKsiC,YAAL,GAAoB,CAApB;AACA,YAAKC,eAAL,GAAuB,IAAvB;AAEA,YAAKa,SAAL,GAAiB,KAAjB;AACA,YAAKC,kBAAL,GAA0B,CAA1B;AACA,YAAKC,gBAAL,GAAwB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,OAAzB;AAEA,YAAKC,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAtCyB;AAwCzB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,oFAAYA,MAAZ;;AAEA,WAAKb,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK2qB,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKG,QAAL,GAAgBjqB,MAAM,CAACiqB,QAAvB;AACA,WAAKC,iBAAL,GAAyBlqB,MAAM,CAACkqB,iBAAhC;AAEA,WAAKC,KAAL,GAAanqB,MAAM,CAACmqB,KAApB;AACA,WAAKC,cAAL,GAAsBpqB,MAAM,CAACoqB,cAA7B;AAEA,WAAKvB,QAAL,CAAczoB,IAAd,CAAoBJ,MAAM,CAAC6oB,QAA3B;AACA,WAAKkC,WAAL,GAAmB/qB,MAAM,CAAC+qB,WAA1B;AACA,WAAKjC,iBAAL,GAAyB9oB,MAAM,CAAC8oB,iBAAhC;AAEA,WAAKkC,WAAL,GAAmBhrB,MAAM,CAACgrB,WAA1B;AAEA,WAAKhB,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAKmB,MAAL,GAAcnrB,MAAM,CAACmrB,MAArB;AACA,WAAKC,OAAL,GAAeprB,MAAM,CAACorB,OAAtB;AACA,WAAKE,YAAL,GAAoBtrB,MAAM,CAACsrB,YAA3B;AACA,WAAKC,eAAL,GAAuBvrB,MAAM,CAACurB,eAA9B;AAEA,WAAKa,SAAL,GAAiBpsB,MAAM,CAACosB,SAAxB;AACA,WAAKC,kBAAL,GAA0BrsB,MAAM,CAACqsB,kBAAjC;AACA,WAAKC,gBAAL,GAAwBtsB,MAAM,CAACssB,gBAA/B;AACA,WAAKC,iBAAL,GAAyBvsB,MAAM,CAACusB,iBAAhC;AAEA,WAAKC,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EAhFgC1G,Q;;IAoF5B4vC,kB;;;;;AAEL,8BAAanzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAK84D,oBAAL,GAA4B,IAA5B;AAEA,YAAK/iD,OAAL,GAAe;AAAE,gBAAU;AAAZ,KAAf;AAEA,YAAKrnC,IAAL,GAAY,oBAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAW,QAAX,CAAb,CAVyB,CAUW;;AAEpC,YAAK8pB,MAAL,GAAc,IAAd;AAEA,YAAKD,GAAL,GAAW,IAAX;AAEA,YAAKO,OAAL,GAAe,IAAf;AACA,YAAKC,SAAL,GAAiB,CAAjB;AAEA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,aAAL,GAAqBz7B,qBAArB;AACA,YAAK07B,WAAL,GAAmB,IAAIxyB,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,YAAKyyB,eAAL,GAAuB,IAAvB;AACA,YAAKC,iBAAL,GAAyB,CAAzB;AACA,YAAKC,gBAAL,GAAwB,CAAxB;AAEA,YAAKZ,QAAL,GAAgB,IAAhB;AAEA,YAAK1B,WAAL,GAAmB,KAAnB;AAEA,YAAKkE,GAAL,GAAW,IAAX;;AAEA,YAAKK,SAAL,CAAgBtK,UAAhB;;AAjCyB;AAmCzB;;;;WAGD,cAAMviB,MAAN,EAAe;AAEd,mFAAYA,MAAZ;;AAEA,WAAKs4B,OAAL,GAAe;AAAE,kBAAU;AAAZ,OAAf;AAEA,WAAKn5B,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AAEA,WAAK4qB,MAAL,GAAc/pB,MAAM,CAAC+pB,MAArB;AAEA,WAAKD,GAAL,GAAW9pB,MAAM,CAAC8pB,GAAlB;AAEA,WAAKO,OAAL,GAAerqB,MAAM,CAACqqB,OAAtB;AACA,WAAKC,SAAL,GAAiBtqB,MAAM,CAACsqB,SAAxB;AAEA,WAAKC,SAAL,GAAiBvqB,MAAM,CAACuqB,SAAxB;AACA,WAAKC,aAAL,GAAqBxqB,MAAM,CAACwqB,aAA5B;AACA,WAAKC,WAAL,CAAiBrqB,IAAjB,CAAuBJ,MAAM,CAACyqB,WAA9B;AAEA,WAAKC,eAAL,GAAuB1qB,MAAM,CAAC0qB,eAA9B;AACA,WAAKC,iBAAL,GAAyB3qB,MAAM,CAAC2qB,iBAAhC;AACA,WAAKC,gBAAL,GAAwB5qB,MAAM,CAAC4qB,gBAA/B;AAEA,WAAKZ,QAAL,GAAgBhqB,MAAM,CAACgqB,QAAvB;AAEA,WAAK1B,WAAL,GAAmBtoB,MAAM,CAACsoB,WAA1B;AAEA,WAAKkE,GAAL,GAAWxsB,MAAM,CAACwsB,GAAlB;AAEA,aAAO,IAAP;AAEA;;;;EAvE+B1G,Q;;IA2E3B8vC,kB;;;;;AAEL,8BAAarzC,UAAb,EAA0B;AAAA;;AAAA;;AAEzB;AAEA,YAAKo5D,oBAAL,GAA4B,IAA5B;AAEA,YAAK1qF,IAAL,GAAY,oBAAZ;AAEA,YAAK4qB,KAAL,GAAa,CAAb;AACA,YAAKoQ,QAAL,GAAgB,CAAhB;AACA,YAAKC,OAAL,GAAe,CAAf;;AAEA,YAAKW,SAAL,CAAgBtK,UAAhB;;AAZyB;AAczB;;;;WAED,cAAMviB,MAAN,EAAe;AAEd,mFAAYA,MAAZ;;AAEA,WAAK6b,KAAL,GAAa7b,MAAM,CAAC6b,KAApB;AACA,WAAKoQ,QAAL,GAAgBjsB,MAAM,CAACisB,QAAvB;AACA,WAAKC,OAAL,GAAelsB,MAAM,CAACksB,OAAtB;AAEA,aAAO,IAAP;AAEA;;;;EA5B+BypC,iB;;AAgCjC,IAAM80C,cAAc,GAAG;AAEtB;AACAC,EAAAA,UAAU,EAAE,oBAAW74G,KAAX,EAAkBqS,IAAlB,EAAwBynD,EAAxB,EAA6B;AAExC,QAAK8+C,cAAc,CAACE,YAAf,CAA6B94G,KAA7B,CAAL,EAA4C;AAE3C;AACA;AACA,aAAO,IAAIA,KAAK,CAACsF,WAAV,CAAuBtF,KAAK,CAAC8uC,QAAN,CAAgBz8B,IAAhB,EAAsBynD,EAAE,KAAKv6D,SAAP,GAAmBu6D,EAAnB,GAAwB95D,KAAK,CAACI,MAApD,CAAvB,CAAP;AAEA;;AAED,WAAOJ,KAAK,CAACC,KAAN,CAAaoS,IAAb,EAAmBynD,EAAnB,CAAP;AAEA,GAfqB;AAiBtB;AACAi/C,EAAAA,YAAY,EAAE,sBAAW/4G,KAAX,EAAkBZ,IAAlB,EAAwB45G,UAAxB,EAAqC;AAElD,QAAK,CAAEh5G,KAAF,IAAW;AACf,KAAEg5G,UAAF,IAAgBh5G,KAAK,CAACsF,WAAN,KAAsBlG,IADvC,EAC8C,OAAOY,KAAP;;AAE9C,QAAK,OAAOZ,IAAI,CAACuvC,iBAAZ,KAAkC,QAAvC,EAAkD;AAEjD,aAAO,IAAIvvC,IAAJ,CAAUY,KAAV,CAAP,CAFiD,CAEvB;AAE1B;;AAED,WAAOgS,KAAK,CAAC3L,SAAN,CAAgBpG,KAAhB,CAAsBI,IAAtB,CAA4BL,KAA5B,CAAP,CAXkD,CAWN;AAE5C,GA/BqB;AAiCtB84G,EAAAA,YAAY,EAAE,sBAAW74F,MAAX,EAAoB;AAEjC,WAAOg5F,WAAW,CAACC,MAAZ,CAAoBj5F,MAApB,KACN,EAAIA,MAAM,YAAYk5F,QAAtB,CADD;AAGA,GAtCqB;AAwCtB;AACAC,EAAAA,gBAAgB,EAAE,0BAAWC,KAAX,EAAmB;AAEpC,aAASC,WAAT,CAAsBp5G,CAAtB,EAAyB0iB,CAAzB,EAA6B;AAE5B,aAAOy2F,KAAK,CAAEn5G,CAAF,CAAL,GAAam5G,KAAK,CAAEz2F,CAAF,CAAzB;AAEA;;AAED,QAAMnhB,CAAC,GAAG43G,KAAK,CAACj5G,MAAhB;AACA,QAAM6tE,MAAM,GAAG,IAAIj8D,KAAJ,CAAWvQ,CAAX,CAAf;;AACA,SAAM,IAAIvB,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKuB,CAAvB,EAA0B,EAAGvB,CAA7B;AAAiC+tE,MAAAA,MAAM,CAAE/tE,CAAF,CAAN,GAAcA,CAAd;AAAjC;;AAEA+tE,IAAAA,MAAM,CAAC/b,IAAP,CAAaonD,WAAb;AAEA,WAAOrrC,MAAP;AAEA,GAzDqB;AA2DtB;AACAsrC,EAAAA,WAAW,EAAE,qBAAWloF,MAAX,EAAmBmQ,MAAnB,EAA2Bj9B,KAA3B,EAAmC;AAE/C,QAAMi1G,OAAO,GAAGnoF,MAAM,CAACjxB,MAAvB;AACA,QAAM6tE,MAAM,GAAG,IAAI58C,MAAM,CAAC/rB,WAAX,CAAwBk0G,OAAxB,CAAf;;AAEA,SAAM,IAAIt5G,CAAC,GAAG,CAAR,EAAWmb,SAAS,GAAG,CAA7B,EAAgCA,SAAS,KAAKm+F,OAA9C,EAAuD,EAAGt5G,CAA1D,EAA8D;AAE7D,UAAMu5G,SAAS,GAAGl1G,KAAK,CAAErE,CAAF,CAAL,GAAashC,MAA/B;;AAEA,WAAM,IAAI5e,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK4e,MAAvB,EAA+B,EAAG5e,CAAlC,EAAsC;AAErCqrD,QAAAA,MAAM,CAAE5yD,SAAS,EAAX,CAAN,GAAyBgW,MAAM,CAAEooF,SAAS,GAAG72F,CAAd,CAA/B;AAEA;AAED;;AAED,WAAOqrD,MAAP;AAEA,GA/EqB;AAiFtB;AACAyrC,EAAAA,WAAW,EAAE,qBAAWC,QAAX,EAAqBN,KAArB,EAA4BhoF,MAA5B,EAAoCuoF,iBAApC,EAAwD;AAEpE,QAAI15G,CAAC,GAAG,CAAR;AAAA,QAAWoxB,GAAG,GAAGqoF,QAAQ,CAAE,CAAF,CAAzB;;AAEA,WAAQroF,GAAG,KAAK/xB,SAAR,IAAqB+xB,GAAG,CAAEsoF,iBAAF,CAAH,KAA6Br6G,SAA1D,EAAsE;AAErE+xB,MAAAA,GAAG,GAAGqoF,QAAQ,CAAEz5G,CAAC,EAAH,CAAd;AAEA;;AAED,QAAKoxB,GAAG,KAAK/xB,SAAb,EAAyB,OAV2C,CAUnC;;AAEjC,QAAI8B,KAAK,GAAGiwB,GAAG,CAAEsoF,iBAAF,CAAf;AACA,QAAKv4G,KAAK,KAAK9B,SAAf,EAA2B,OAbyC,CAajC;;AAEnC,QAAKyS,KAAK,CAACC,OAAN,CAAe5Q,KAAf,CAAL,EAA8B;AAE7B,SAAG;AAEFA,QAAAA,KAAK,GAAGiwB,GAAG,CAAEsoF,iBAAF,CAAX;;AAEA,YAAKv4G,KAAK,KAAK9B,SAAf,EAA2B;AAE1B85G,UAAAA,KAAK,CAAC35G,IAAN,CAAY4xB,GAAG,CAACmc,IAAhB;AACApc,UAAAA,MAAM,CAAC3xB,IAAP,CAAYg1E,KAAZ,CAAmBrjD,MAAnB,EAA2BhwB,KAA3B,EAH0B,CAGU;AAEpC;;AAEDiwB,QAAAA,GAAG,GAAGqoF,QAAQ,CAAEz5G,CAAC,EAAH,CAAd;AAEA,OAbD,QAaUoxB,GAAG,KAAK/xB,SAblB;AAeA,KAjBD,MAiBO,IAAK8B,KAAK,CAACwuB,OAAN,KAAkBtwB,SAAvB,EAAmC;AAEzC;AAEA,SAAG;AAEF8B,QAAAA,KAAK,GAAGiwB,GAAG,CAAEsoF,iBAAF,CAAX;;AAEA,YAAKv4G,KAAK,KAAK9B,SAAf,EAA2B;AAE1B85G,UAAAA,KAAK,CAAC35G,IAAN,CAAY4xB,GAAG,CAACmc,IAAhB;AACApsC,UAAAA,KAAK,CAACwuB,OAAN,CAAewB,MAAf,EAAuBA,MAAM,CAACjxB,MAA9B;AAEA;;AAEDkxB,QAAAA,GAAG,GAAGqoF,QAAQ,CAAEz5G,CAAC,EAAH,CAAd;AAEA,OAbD,QAaUoxB,GAAG,KAAK/xB,SAblB;AAeA,KAnBM,MAmBA;AAEN;AAEA,SAAG;AAEF8B,QAAAA,KAAK,GAAGiwB,GAAG,CAAEsoF,iBAAF,CAAX;;AAEA,YAAKv4G,KAAK,KAAK9B,SAAf,EAA2B;AAE1B85G,UAAAA,KAAK,CAAC35G,IAAN,CAAY4xB,GAAG,CAACmc,IAAhB;AACApc,UAAAA,MAAM,CAAC3xB,IAAP,CAAa2B,KAAb;AAEA;;AAEDiwB,QAAAA,GAAG,GAAGqoF,QAAQ,CAAEz5G,CAAC,EAAH,CAAd;AAEA,OAbD,QAaUoxB,GAAG,KAAK/xB,SAblB;AAeA;AAED,GA1JqB;AA4JtBs6G,EAAAA,OAAO,EAAE,iBAAWC,UAAX,EAAuBltG,IAAvB,EAA6BmtG,UAA7B,EAAyCC,QAAzC,EAA8D;AAAA,QAAXC,GAAW,uEAAL,EAAK;AAEtE,QAAMC,IAAI,GAAGJ,UAAU,CAAC9iG,KAAX,EAAb;AAEAkjG,IAAAA,IAAI,CAACttG,IAAL,GAAYA,IAAZ;AAEA,QAAMutG,MAAM,GAAG,EAAf;;AAEA,SAAM,IAAIj6G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGg6G,IAAI,CAACC,MAAL,CAAY/5G,MAAjC,EAAyC,EAAGF,CAA5C,EAAgD;AAE/C,UAAMk6G,KAAK,GAAGF,IAAI,CAACC,MAAL,CAAaj6G,CAAb,CAAd;AACA,UAAMm6G,SAAS,GAAGD,KAAK,CAACE,YAAN,EAAlB;AAEA,UAAMjB,KAAK,GAAG,EAAd;AACA,UAAMhoF,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIzO,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGw3F,KAAK,CAACf,KAAN,CAAYj5G,MAAjC,EAAyC,EAAGwiB,CAA5C,EAAgD;AAE/C,YAAM8qB,KAAK,GAAG0sE,KAAK,CAACf,KAAN,CAAaz2F,CAAb,IAAmBq3F,GAAjC;AAEA,YAAKvsE,KAAK,GAAGqsE,UAAR,IAAsBrsE,KAAK,IAAIssE,QAApC,EAA+C;AAE/CX,QAAAA,KAAK,CAAC35G,IAAN,CAAY06G,KAAK,CAACf,KAAN,CAAaz2F,CAAb,CAAZ;;AAEA,aAAM,IAAI+rD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG0rC,SAArB,EAAgC,EAAG1rC,CAAnC,EAAuC;AAEtCt9C,UAAAA,MAAM,CAAC3xB,IAAP,CAAa06G,KAAK,CAAC/oF,MAAN,CAAczO,CAAC,GAAGy3F,SAAJ,GAAgB1rC,CAA9B,CAAb;AAEA;AAED;;AAED,UAAK0qC,KAAK,CAACj5G,MAAN,KAAiB,CAAtB,EAA0B;AAE1Bg6G,MAAAA,KAAK,CAACf,KAAN,GAAcT,cAAc,CAACG,YAAf,CAA6BM,KAA7B,EAAoCe,KAAK,CAACf,KAAN,CAAY/zG,WAAhD,CAAd;AACA80G,MAAAA,KAAK,CAAC/oF,MAAN,GAAeunF,cAAc,CAACG,YAAf,CAA6B1nF,MAA7B,EAAqC+oF,KAAK,CAAC/oF,MAAN,CAAa/rB,WAAlD,CAAf;AAEA60G,MAAAA,MAAM,CAACz6G,IAAP,CAAa06G,KAAb;AAEA;;AAEDF,IAAAA,IAAI,CAACC,MAAL,GAAcA,MAAd,CAzCsE,CA2CtE;;AAEA,QAAII,YAAY,GAAGp7F,QAAnB;;AAEA,SAAM,IAAIjf,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGg6G,IAAI,CAACC,MAAL,CAAY/5G,MAAjC,EAAyC,EAAGF,IAA5C,EAAgD;AAE/C,UAAKq6G,YAAY,GAAGL,IAAI,CAACC,MAAL,CAAaj6G,IAAb,EAAiBm5G,KAAjB,CAAwB,CAAxB,CAApB,EAAkD;AAEjDkB,QAAAA,YAAY,GAAGL,IAAI,CAACC,MAAL,CAAaj6G,IAAb,EAAiBm5G,KAAjB,CAAwB,CAAxB,CAAf;AAEA;AAED,KAvDqE,CAyDtE;;;AAEA,SAAM,IAAIn5G,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAGg6G,IAAI,CAACC,MAAL,CAAY/5G,MAAjC,EAAyC,EAAGF,IAA5C,EAAgD;AAE/Cg6G,MAAAA,IAAI,CAACC,MAAL,CAAaj6G,IAAb,EAAiB6tF,KAAjB,CAAwB,CAAE,CAAF,GAAMwsB,YAA9B;AAEA;;AAEDL,IAAAA,IAAI,CAACM,aAAL;AAEA,WAAON,IAAP;AAEA,GAjOqB;AAmOtBO,EAAAA,gBAAgB,EAAE,0BAAWC,UAAX,EAAkF;AAAA,QAA3DC,cAA2D,uEAA1C,CAA0C;AAAA,QAAvCC,aAAuC,uEAAvBF,UAAuB;AAAA,QAAXT,GAAW,uEAAL,EAAK;AAEnG,QAAKA,GAAG,IAAI,CAAZ,EAAgBA,GAAG,GAAG,EAAN;AAEhB,QAAMY,SAAS,GAAGD,aAAa,CAACT,MAAd,CAAqB/5G,MAAvC;AACA,QAAM06G,aAAa,GAAGH,cAAc,GAAGV,GAAvC,CALmG,CAOnG;;AAPmG,+BAQzF/5G,CARyF;AAUlG,UAAM66G,cAAc,GAAGH,aAAa,CAACT,MAAd,CAAsBj6G,CAAtB,CAAvB;AACA,UAAM86G,kBAAkB,GAAGD,cAAc,CAACE,aAA1C,CAXkG,CAalG;;AACA,UAAKD,kBAAkB,KAAK,MAAvB,IAAiCA,kBAAkB,KAAK,QAA7D,EAAwE,kBAd0B,CAgBlG;;AACA,UAAME,WAAW,GAAGR,UAAU,CAACP,MAAX,CAAkBgB,IAAlB,CAAwB,UAAWf,KAAX,EAAmB;AAE9D,eAAOA,KAAK,CAACxtG,IAAN,KAAemuG,cAAc,CAACnuG,IAA9B,IACHwtG,KAAK,CAACa,aAAN,KAAwBD,kBAD5B;AAGA,OALmB,CAApB;AAOA,UAAKE,WAAW,KAAK37G,SAArB,EAAiC;AAEjC,UAAI67G,eAAe,GAAG,CAAtB;AACA,UAAMC,kBAAkB,GAAGN,cAAc,CAACT,YAAf,EAA3B;;AAEA,UAAKS,cAAc,CAACO,iBAAf,CAAiCC,yCAAtC,EAAkF;AAEjFH,QAAAA,eAAe,GAAGC,kBAAkB,GAAG,CAAvC;AAEA;;AAED,UAAIG,YAAY,GAAG,CAAnB;AACA,UAAMC,eAAe,GAAGP,WAAW,CAACZ,YAAZ,EAAxB;;AAEA,UAAKY,WAAW,CAACI,iBAAZ,CAA8BC,yCAAnC,EAA+E;AAE9EC,QAAAA,YAAY,GAAGC,eAAe,GAAG,CAAjC;AAEA;;AAED,UAAM9iD,SAAS,GAAGoiD,cAAc,CAAC1B,KAAf,CAAqBj5G,MAArB,GAA8B,CAAhD;AACA,UAAIs7G,cAAc,SAAlB,CA7CkG,CA+ClG;;AACA,UAAKZ,aAAa,IAAIC,cAAc,CAAC1B,KAAf,CAAsB,CAAtB,CAAtB,EAAkD;AAEjD;AACA,YAAMsC,UAAU,GAAGP,eAAnB;AACA,YAAMQ,QAAQ,GAAGP,kBAAkB,GAAGD,eAAtC;AACAM,QAAAA,cAAc,GAAG9C,cAAc,CAACC,UAAf,CAA2BkC,cAAc,CAAC1pF,MAA1C,EAAkDsqF,UAAlD,EAA8DC,QAA9D,CAAjB;AAEA,OAPD,MAOO,IAAKd,aAAa,IAAIC,cAAc,CAAC1B,KAAf,CAAsB1gD,SAAtB,CAAtB,EAA0D;AAEhE;AACA,YAAMgjD,WAAU,GAAGhjD,SAAS,GAAG0iD,kBAAZ,GAAiCD,eAApD;;AACA,YAAMQ,SAAQ,GAAGD,WAAU,GAAGN,kBAAb,GAAkCD,eAAnD;;AACAM,QAAAA,cAAc,GAAG9C,cAAc,CAACC,UAAf,CAA2BkC,cAAc,CAAC1pF,MAA1C,EAAkDsqF,WAAlD,EAA8DC,SAA9D,CAAjB;AAEA,OAPM,MAOA;AAEN;AACA,YAAMC,WAAW,GAAGd,cAAc,CAACO,iBAAf,EAApB;AACA,YAAMK,YAAU,GAAGP,eAAnB;;AACA,YAAMQ,UAAQ,GAAGP,kBAAkB,GAAGD,eAAtC;;AACAS,QAAAA,WAAW,CAACC,QAAZ,CAAsBhB,aAAtB;AACAY,QAAAA,cAAc,GAAG9C,cAAc,CAACC,UAAf,CAA2BgD,WAAW,CAACE,YAAvC,EAAqDJ,YAArD,EAAiEC,UAAjE,CAAjB;AAEA,OAvEiG,CAyElG;;;AACA,UAAKZ,kBAAkB,KAAK,YAA5B,EAA2C;AAE1C,YAAMgB,aAAa,GAAG,IAAIjkG,UAAJ,GAAiB7L,SAAjB,CAA4BwvG,cAA5B,EAA6C71G,SAA7C,GAAyD6T,SAAzD,EAAtB;AACAsiG,QAAAA,aAAa,CAACnsF,OAAd,CAAuB6rF,cAAvB;AAEA,OA/EiG,CAiFlG;;;AAEA,UAAMO,QAAQ,GAAGf,WAAW,CAAC7B,KAAZ,CAAkBj5G,MAAnC;;AACA,WAAM,IAAIwiB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGq5F,QAArB,EAA+B,EAAGr5F,CAAlC,EAAsC;AAErC,YAAMs5F,UAAU,GAAGt5F,CAAC,GAAG64F,eAAJ,GAAsBD,YAAzC;;AAEA,YAAKR,kBAAkB,KAAK,YAA5B,EAA2C;AAE1C;AACAjjG,UAAAA,UAAU,CAACokG,uBAAX,CACCjB,WAAW,CAAC7pF,MADb,EAEC6qF,UAFD,EAGCR,cAHD,EAIC,CAJD,EAKCR,WAAW,CAAC7pF,MALb,EAMC6qF,UAND;AASA,SAZD,MAYO;AAEN,cAAME,QAAQ,GAAGX,eAAe,GAAGD,YAAY,GAAG,CAAlD,CAFM,CAIN;;AACA,eAAM,IAAI7sC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGytC,QAArB,EAA+B,EAAGztC,CAAlC,EAAsC;AAErCusC,YAAAA,WAAW,CAAC7pF,MAAZ,CAAoB6qF,UAAU,GAAGvtC,CAAjC,KAAwC+sC,cAAc,CAAE/sC,CAAF,CAAtD;AAEA;AAED;AAED;AAjHiG;;AAQnG,SAAM,IAAIzuE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG26G,SAArB,EAAgC,EAAG36G,CAAnC,EAAuC;AAAA,uBAA7BA,CAA6B;;AAAA,+BAgBL;AA2FjC;;AAEDw6G,IAAAA,UAAU,CAAC2B,SAAX,GAAuB3/G,0BAAvB;AAEA,WAAOg+G,UAAP;AAEA;AA5VqB,CAAvB;AAgWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEM4B,W;AAEL,uBAAaC,kBAAb,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DV,YAA3D,EAA0E;AAAA;;AAEzE,SAAKQ,kBAAL,GAA0BA,kBAA1B;AACA,SAAKG,YAAL,GAAoB,CAApB;AAEA,SAAKX,YAAL,GAAoBA,YAAY,KAAKx8G,SAAjB,GACnBw8G,YADmB,GACJ,IAAIS,YAAY,CAACl3G,WAAjB,CAA8Bm3G,UAA9B,CADhB;AAEA,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKnC,SAAL,GAAiBoC,UAAjB;AAEA,SAAKE,QAAL,GAAgB,IAAhB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AAEA;;;;WAED,kBAAUx6G,CAAV,EAAc;AAEb,UAAMy6G,EAAE,GAAG,KAAKN,kBAAhB;AACA,UAAInqF,EAAE,GAAG,KAAKsqF,YAAd;AAAA,UACCh3F,EAAE,GAAGm3F,EAAE,CAAEzqF,EAAF,CADR;AAAA,UAEC3M,EAAE,GAAGo3F,EAAE,CAAEzqF,EAAE,GAAG,CAAP,CAFR;;AAIA0qF,MAAAA,iBAAiB,EAAE;AAElBC,QAAAA,IAAI,EAAE;AAEL,cAAIjyF,KAAJ;;AAEAkyF,UAAAA,WAAW,EAAE;AAEZ;AACA;AACA;AACA;AACAC,YAAAA,YAAY,EAAE,IAAK,EAAI76G,CAAC,GAAGsjB,EAAR,CAAL,EAAoB;AAEjC,mBAAM,IAAIw3F,QAAQ,GAAG9qF,EAAE,GAAG,CAA1B,IAAiC;AAEhC,oBAAK1M,EAAE,KAAKnmB,SAAZ,EAAwB;AAEvB,sBAAK6C,CAAC,GAAGqjB,EAAT,EAAc,MAAMw3F,YAAN,CAFS,CAIvB;;AAEA7qF,kBAAAA,EAAE,GAAGyqF,EAAE,CAACz8G,MAAR;AACA,uBAAKs8G,YAAL,GAAoBtqF,EAApB;AACA,yBAAO,KAAK+qF,gBAAL,CAAuB/qF,EAAE,GAAG,CAA5B,CAAP;AAEA;;AAED,oBAAKA,EAAE,KAAK8qF,QAAZ,EAAuB,MAdS,CAcF;;AAE9Bz3F,gBAAAA,EAAE,GAAGC,EAAL;AACAA,gBAAAA,EAAE,GAAGm3F,EAAE,CAAE,EAAGzqF,EAAL,CAAP;;AAEA,oBAAKhwB,CAAC,GAAGsjB,EAAT,EAAc;AAEb;AACA,wBAAMq3F,IAAN;AAEA;AAED,eA5BgC,CA8BjC;;;AACAjyF,cAAAA,KAAK,GAAG+xF,EAAE,CAACz8G,MAAX;AACA,oBAAM48G,WAAN;AAEA,aAxCW,CA0CZ;AACA;;;AACA,gBAAK,EAAI56G,CAAC,IAAIqjB,EAAT,CAAL,EAAqB;AAEpB;AAEA,kBAAM23F,QAAQ,GAAGP,EAAE,CAAE,CAAF,CAAnB;;AAEA,kBAAKz6G,CAAC,GAAGg7G,QAAT,EAAoB;AAEnBhrF,gBAAAA,EAAE,GAAG,CAAL,CAFmB,CAEX;;AACR3M,gBAAAA,EAAE,GAAG23F,QAAL;AAEA,eAXmB,CAapB;;;AAEA,mBAAM,IAAIF,SAAQ,GAAG9qF,EAAE,GAAG,CAA1B,IAAiC;AAEhC,oBAAK3M,EAAE,KAAKlmB,SAAZ,EAAwB;AAEvB;AAEA,uBAAKm9G,YAAL,GAAoB,CAApB;AACA,yBAAO,KAAKS,gBAAL,CAAuB,CAAvB,CAAP;AAEA;;AAED,oBAAK/qF,EAAE,KAAK8qF,SAAZ,EAAuB,MAXS,CAWF;;AAE9Bx3F,gBAAAA,EAAE,GAAGD,EAAL;AACAA,gBAAAA,EAAE,GAAGo3F,EAAE,CAAE,EAAGzqF,EAAH,GAAQ,CAAV,CAAP;;AAEA,oBAAKhwB,CAAC,IAAIqjB,EAAV,EAAe;AAEd;AACA,wBAAMs3F,IAAN;AAEA;AAED,eAtCmB,CAwCpB;;;AACAjyF,cAAAA,KAAK,GAAGsH,EAAR;AACAA,cAAAA,EAAE,GAAG,CAAL;AACA,oBAAM4qF,WAAN;AAEA,aAzFW,CA2FZ;;;AAEA,kBAAMF,iBAAN;AAEA,WAnGI,CAmGH;AAEF;;;AAEA,iBAAQ1qF,EAAE,GAAGtH,KAAb,EAAqB;AAEpB,gBAAMuyF,GAAG,GAAKjrF,EAAE,GAAGtH,KAAP,KAAmB,CAA/B;;AAEA,gBAAK1oB,CAAC,GAAGy6G,EAAE,CAAEQ,GAAF,CAAX,EAAqB;AAEpBvyF,cAAAA,KAAK,GAAGuyF,GAAR;AAEA,aAJD,MAIO;AAENjrF,cAAAA,EAAE,GAAGirF,GAAG,GAAG,CAAX;AAEA;AAED;;AAED33F,UAAAA,EAAE,GAAGm3F,EAAE,CAAEzqF,EAAF,CAAP;AACA3M,UAAAA,EAAE,GAAGo3F,EAAE,CAAEzqF,EAAE,GAAG,CAAP,CAAP,CAxHK,CA0HL;;AAEA,cAAK3M,EAAE,KAAKlmB,SAAZ,EAAwB;AAEvB,iBAAKm9G,YAAL,GAAoB,CAApB;AACA,mBAAO,KAAKS,gBAAL,CAAuB,CAAvB,CAAP;AAEA;;AAED,cAAKz3F,EAAE,KAAKnmB,SAAZ,EAAwB;AAEvB6yB,YAAAA,EAAE,GAAGyqF,EAAE,CAACz8G,MAAR;AACA,iBAAKs8G,YAAL,GAAoBtqF,EAApB;AACA,mBAAO,KAAK+qF,gBAAL,CAAuB/qF,EAAE,GAAG,CAA5B,CAAP;AAEA;AAED,SA7IiB,CA6IhB;;;AAEF,aAAKsqF,YAAL,GAAoBtqF,EAApB;AAEA,aAAKkrF,gBAAL,CAAuBlrF,EAAvB,EAA2B3M,EAA3B,EAA+BC,EAA/B;AAEA,OA1JY,CA0JX;;;AAEF,aAAO,KAAK63F,YAAL,CAAmBnrF,EAAnB,EAAuB3M,EAAvB,EAA2BrjB,CAA3B,EAA8BsjB,EAA9B,CAAP;AAEA;;;WAED,wBAAe;AAEd,aAAO,KAAKi3F,QAAL,IAAiB,KAAKC,gBAA7B;AAEA;;;WAED,0BAAkBh9G,KAAlB,EAA0B;AAEzB;AAEA,UAAMquE,MAAM,GAAG,KAAK8tC,YAApB;AAAA,UACC1qF,MAAM,GAAG,KAAKmrF,YADf;AAAA,UAECh7E,MAAM,GAAG,KAAK64E,SAFf;AAAA,UAGC1yG,MAAM,GAAG/H,KAAK,GAAG4hC,MAHlB;;AAKA,WAAM,IAAIthC,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErC+tE,QAAAA,MAAM,CAAE/tE,CAAF,CAAN,GAAcmxB,MAAM,CAAE1pB,MAAM,GAAGzH,CAAX,CAApB;AAEA;;AAED,aAAO+tE,MAAP;AAEA,K,CAED;;;;WAEA,wBAAoC;AAEnC,YAAM,IAAIroE,KAAJ,CAAW,yBAAX,CAAN,CAFmC,CAGnC;AAEA;;;WAED,4BAAqC,CAEpC;AAEA;;;;;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEM43G,gB;;;;;AAEL,4BAAajB,kBAAb,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DV,YAA3D,EAA0E;AAAA;;AAAA;;AAEzE,mCAAOQ,kBAAP,EAA2BC,YAA3B,EAAyCC,UAAzC,EAAqDV,YAArD;AAEA,YAAK0B,WAAL,GAAmB,CAAE,CAArB;AACA,YAAKC,WAAL,GAAmB,CAAE,CAArB;AACA,YAAKC,WAAL,GAAmB,CAAE,CAArB;AACA,YAAKC,WAAL,GAAmB,CAAE,CAArB;AAEA,YAAKhB,gBAAL,GAAwB;AAEvBiB,MAAAA,WAAW,EAAEvhH,mBAFU;AAGvBwhH,MAAAA,SAAS,EAAExhH;AAHY,KAAxB;AATyE;AAgBzE;;;;WAED,0BAAkB81B,EAAlB,EAAsB3M,EAAtB,EAA0BC,EAA1B,EAA+B;AAE9B,UAAMm3F,EAAE,GAAG,KAAKN,kBAAhB;AACA,UAAIwB,KAAK,GAAG3rF,EAAE,GAAG,CAAjB;AAAA,UACC4rF,KAAK,GAAG5rF,EAAE,GAAG,CADd;AAAA,UAGC6rF,KAAK,GAAGpB,EAAE,CAAEkB,KAAF,CAHX;AAAA,UAICG,KAAK,GAAGrB,EAAE,CAAEmB,KAAF,CAJX;;AAMA,UAAKC,KAAK,KAAK1+G,SAAf,EAA2B;AAE1B,gBAAS,KAAK4+G,YAAL,GAAoBN,WAA7B;AAEC,eAAKthH,eAAL;AAEC;AACAwhH,YAAAA,KAAK,GAAG3rF,EAAR;AACA6rF,YAAAA,KAAK,GAAG,IAAIx4F,EAAJ,GAASC,EAAjB;AAEA;;AAED,eAAKlpB,gBAAL;AAEC;AACAuhH,YAAAA,KAAK,GAAGlB,EAAE,CAACz8G,MAAH,GAAY,CAApB;AACA69G,YAAAA,KAAK,GAAGx4F,EAAE,GAAGo3F,EAAE,CAAEkB,KAAF,CAAP,GAAmBlB,EAAE,CAAEkB,KAAK,GAAG,CAAV,CAA7B;AAEA;;AAED;AAAS;AAER;AACAA,YAAAA,KAAK,GAAG3rF,EAAR;AACA6rF,YAAAA,KAAK,GAAGv4F,EAAR;AAtBF;AA0BA;;AAED,UAAKw4F,KAAK,KAAK3+G,SAAf,EAA2B;AAE1B,gBAAS,KAAK4+G,YAAL,GAAoBL,SAA7B;AAEC,eAAKvhH,eAAL;AAEC;AACAyhH,YAAAA,KAAK,GAAG5rF,EAAR;AACA8rF,YAAAA,KAAK,GAAG,IAAIx4F,EAAJ,GAASD,EAAjB;AAEA;;AAED,eAAKjpB,gBAAL;AAEC;AACAwhH,YAAAA,KAAK,GAAG,CAAR;AACAE,YAAAA,KAAK,GAAGx4F,EAAE,GAAGm3F,EAAE,CAAE,CAAF,CAAP,GAAeA,EAAE,CAAE,CAAF,CAAzB;AAEA;;AAED;AAAS;AAER;AACAmB,YAAAA,KAAK,GAAG5rF,EAAE,GAAG,CAAb;AACA8rF,YAAAA,KAAK,GAAGz4F,EAAR;AAtBF;AA0BA;;AAED,UAAM24F,MAAM,GAAG,CAAE14F,EAAE,GAAGD,EAAP,IAAc,GAA7B;AAAA,UACC+b,MAAM,GAAG,KAAK64E,SADf;AAGA,WAAKoD,WAAL,GAAmBW,MAAM,IAAK34F,EAAE,GAAGw4F,KAAV,CAAzB;AACA,WAAKN,WAAL,GAAmBS,MAAM,IAAKF,KAAK,GAAGx4F,EAAb,CAAzB;AACA,WAAKg4F,WAAL,GAAmBK,KAAK,GAAGv8E,MAA3B;AACA,WAAKo8E,WAAL,GAAmBI,KAAK,GAAGx8E,MAA3B;AAEA;;;WAED,sBAAcpP,EAAd,EAAkB3M,EAAlB,EAAsBrjB,CAAtB,EAAyBsjB,EAAzB,EAA8B;AAE7B,UAAMuoD,MAAM,GAAG,KAAK8tC,YAApB;AAAA,UACC1qF,MAAM,GAAG,KAAKmrF,YADf;AAAA,UAECh7E,MAAM,GAAG,KAAK64E,SAFf;AAAA,UAIClN,EAAE,GAAG/6E,EAAE,GAAGoP,MAJX;AAAA,UAIoB68E,EAAE,GAAGlR,EAAE,GAAG3rE,MAJ9B;AAAA,UAKC88E,EAAE,GAAG,KAAKZ,WALX;AAAA,UAKyBa,EAAE,GAAG,KAAKX,WALnC;AAAA,UAMCY,EAAE,GAAG,KAAKf,WANX;AAAA,UAMwBgB,EAAE,GAAG,KAAKd,WANlC;AAAA,UAQC1vG,CAAC,GAAG,CAAE7L,CAAC,GAAGqjB,EAAN,KAAeC,EAAE,GAAGD,EAApB,CARL;AAAA,UASCo3F,EAAE,GAAG5uG,CAAC,GAAGA,CATV;AAAA,UAUCywG,GAAG,GAAG7B,EAAE,GAAG5uG,CAVZ,CAF6B,CAc7B;;AAEA,UAAM0wG,EAAE,GAAG,CAAEH,EAAF,GAAOE,GAAP,GAAa,IAAIF,EAAJ,GAAS3B,EAAtB,GAA2B2B,EAAE,GAAGvwG,CAA3C;AACA,UAAMiX,EAAE,GAAG,CAAE,IAAIs5F,EAAN,IAAaE,GAAb,GAAmB,CAAE,CAAE,GAAF,GAAQ,IAAIF,EAAd,IAAqB3B,EAAxC,GAA6C,CAAE,CAAE,GAAF,GAAQ2B,EAAV,IAAiBvwG,CAA9D,GAAkE,CAA7E;AACA,UAAM4K,EAAE,GAAG,CAAE,CAAE,CAAF,GAAM4lG,EAAR,IAAeC,GAAf,GAAqB,CAAE,MAAMD,EAAR,IAAe5B,EAApC,GAAyC,MAAM5uG,CAA1D;AACA,UAAM2wG,EAAE,GAAGH,EAAE,GAAGC,GAAL,GAAWD,EAAE,GAAG5B,EAA3B,CAnB6B,CAqB7B;;AAEA,WAAM,IAAI38G,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErC+tE,QAAAA,MAAM,CAAE/tE,CAAF,CAAN,GACEy+G,EAAE,GAAGttF,MAAM,CAAEitF,EAAE,GAAGp+G,CAAP,CAAX,GACAglB,EAAE,GAAGmM,MAAM,CAAEgtF,EAAE,GAAGn+G,CAAP,CADX,GAEA2Y,EAAE,GAAGwY,MAAM,CAAE87E,EAAE,GAAGjtG,CAAP,CAFX,GAGA0+G,EAAE,GAAGvtF,MAAM,CAAEktF,EAAE,GAAGr+G,CAAP,CAJb;AAMA;;AAED,aAAO+tE,MAAP;AAEA;;;;EAtI6BquC,W;;IA0IzBuC,iB;;;;;AAEL,6BAAatC,kBAAb,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DV,YAA3D,EAA0E;AAAA;;AAAA,gCAElEQ,kBAFkE,EAE9CC,YAF8C,EAEhCC,UAFgC,EAEpBV,YAFoB;AAIzE;;;;WAED,sBAAc3pF,EAAd,EAAkB3M,EAAlB,EAAsBrjB,CAAtB,EAAyBsjB,EAAzB,EAA8B;AAE7B,UAAMuoD,MAAM,GAAG,KAAK8tC,YAApB;AAAA,UACC1qF,MAAM,GAAG,KAAKmrF,YADf;AAAA,UAECh7E,MAAM,GAAG,KAAK64E,SAFf;AAAA,UAICyE,OAAO,GAAG1sF,EAAE,GAAGoP,MAJhB;AAAA,UAKCu9E,OAAO,GAAGD,OAAO,GAAGt9E,MALrB;AAAA,UAOCw9E,OAAO,GAAG,CAAE58G,CAAC,GAAGqjB,EAAN,KAAeC,EAAE,GAAGD,EAApB,CAPX;AAAA,UAQCw5F,OAAO,GAAG,IAAID,OARf;;AAUA,WAAM,IAAI9+G,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErC+tE,QAAAA,MAAM,CAAE/tE,CAAF,CAAN,GACEmxB,MAAM,CAAE0tF,OAAO,GAAG7+G,CAAZ,CAAN,GAAwB++G,OAAxB,GACA5tF,MAAM,CAAEytF,OAAO,GAAG5+G,CAAZ,CAAN,GAAwB8+G,OAF1B;AAIA;;AAED,aAAO/wC,MAAP;AAEA;;;;EA9B8BquC,W;AAkChC;AACA;AACA;AACA;AACA;;;IAEM4C,mB;;;;;AAEL,+BAAa3C,kBAAb,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DV,YAA3D,EAA0E;AAAA;;AAAA,gCAElEQ,kBAFkE,EAE9CC,YAF8C,EAEhCC,UAFgC,EAEpBV,YAFoB;AAIzE;;;;WAED,sBAAc3pF;AAAG;AAAjB,MAAoC;AAEnC,aAAO,KAAK+qF,gBAAL,CAAuB/qF,EAAE,GAAG,CAA5B,CAAP;AAEA;;;;EAZgCkqF,W;;IAgB5B6C,a;AAEL,yBAAavyG,IAAb,EAAmBysG,KAAnB,EAA0BhoF,MAA1B,EAAkC+tF,aAAlC,EAAkD;AAAA;;AAEjD,QAAKxyG,IAAI,KAAKrN,SAAd,EAA0B,MAAM,IAAIqG,KAAJ,CAAW,8CAAX,CAAN;AAC1B,QAAKyzG,KAAK,KAAK95G,SAAV,IAAuB85G,KAAK,CAACj5G,MAAN,KAAiB,CAA7C,EAAiD,MAAM,IAAIwF,KAAJ,CAAW,sDAAsDgH,IAAjE,CAAN;AAEjD,SAAKA,IAAL,GAAYA,IAAZ;AAEA,SAAKysG,KAAL,GAAaT,cAAc,CAACG,YAAf,CAA6BM,KAA7B,EAAoC,KAAKgG,cAAzC,CAAb;AACA,SAAKhuF,MAAL,GAAcunF,cAAc,CAACG,YAAf,CAA6B1nF,MAA7B,EAAqC,KAAKiuF,eAA1C,CAAd;AAEA,SAAKC,gBAAL,CAAuBH,aAAa,IAAI,KAAKI,oBAA7C;AAEA,G,CAED;AACA;;;;;WAwCA,0CAAkCvxC,MAAlC,EAA2C;AAE1C,aAAO,IAAIixC,mBAAJ,CAAyB,KAAK7F,KAA9B,EAAqC,KAAKhoF,MAA1C,EAAkD,KAAKipF,YAAL,EAAlD,EAAuErsC,MAAvE,CAAP;AAEA;;;WAED,wCAAgCA,MAAhC,EAAyC;AAExC,aAAO,IAAI4wC,iBAAJ,CAAuB,KAAKxF,KAA5B,EAAmC,KAAKhoF,MAAxC,EAAgD,KAAKipF,YAAL,EAAhD,EAAqErsC,MAArE,CAAP;AAEA;;;WAED,wCAAgCA,MAAhC,EAAyC;AAExC,aAAO,IAAIuvC,gBAAJ,CAAsB,KAAKnE,KAA3B,EAAkC,KAAKhoF,MAAvC,EAA+C,KAAKipF,YAAL,EAA/C,EAAoErsC,MAApE,CAAP;AAEA;;;WAED,0BAAkBmxC,aAAlB,EAAkC;AAEjC,UAAIK,aAAJ;;AAEA,cAASL,aAAT;AAEC,aAAKjjH,mBAAL;AAECsjH,UAAAA,aAAa,GAAG,KAAKC,gCAArB;AAEA;;AAED,aAAKtjH,iBAAL;AAECqjH,UAAAA,aAAa,GAAG,KAAKE,8BAArB;AAEA;;AAED,aAAKtjH,iBAAL;AAECojH,UAAAA,aAAa,GAAG,KAAKG,8BAArB;AAEA;AAlBF;;AAsBA,UAAKH,aAAa,KAAKlgH,SAAvB,EAAmC;AAElC,YAAMyuF,OAAO,GAAG,mCACf,KAAKitB,aADU,GACM,wBADN,GACiC,KAAKruG,IADtD;;AAGA,YAAK,KAAK0uG,iBAAL,KAA2B/7G,SAAhC,EAA4C;AAE3C;AACA,cAAK6/G,aAAa,KAAK,KAAKI,oBAA5B,EAAmD;AAElD,iBAAKD,gBAAL,CAAuB,KAAKC,oBAA5B;AAEA,WAJD,MAIO;AAEN,kBAAM,IAAI55G,KAAJ,CAAWooF,OAAX,CAAN,CAFM,CAEsB;AAE5B;AAED;;AAED7oF,QAAAA,OAAO,CAACC,IAAR,CAAc,sBAAd,EAAsC4oF,OAAtC;AACA,eAAO,IAAP;AAEA;;AAED,WAAKstB,iBAAL,GAAyBmE,aAAzB;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAmB;AAElB,cAAS,KAAKnE,iBAAd;AAEC,aAAK,KAAKoE,gCAAV;AAEC,iBAAOvjH,mBAAP;;AAED,aAAK,KAAKwjH,8BAAV;AAEC,iBAAOvjH,iBAAP;;AAED,aAAK,KAAKwjH,8BAAV;AAEC,iBAAOvjH,iBAAP;AAZF;AAgBA;;;WAED,wBAAe;AAEd,aAAO,KAAKg1B,MAAL,CAAYjxB,MAAZ,GAAqB,KAAKi5G,KAAL,CAAWj5G,MAAvC;AAEA,K,CAED;;;;WACA,eAAOy/G,UAAP,EAAoB;AAEnB,UAAKA,UAAU,KAAK,GAApB,EAA0B;AAEzB,YAAMxG,KAAK,GAAG,KAAKA,KAAnB;;AAEA,aAAM,IAAIn5G,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG43G,KAAK,CAACj5G,MAA3B,EAAmCF,CAAC,KAAKuB,CAAzC,EAA4C,EAAGvB,CAA/C,EAAmD;AAElDm5G,UAAAA,KAAK,CAAEn5G,CAAF,CAAL,IAAc2/G,UAAd;AAEA;AAED;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WACA,eAAOC,SAAP,EAAmB;AAElB,UAAKA,SAAS,KAAK,GAAnB,EAAyB;AAExB,YAAMzG,KAAK,GAAG,KAAKA,KAAnB;;AAEA,aAAM,IAAIn5G,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG43G,KAAK,CAACj5G,MAA3B,EAAmCF,CAAC,KAAKuB,CAAzC,EAA4C,EAAGvB,CAA/C,EAAmD;AAElDm5G,UAAAA,KAAK,CAAEn5G,CAAF,CAAL,IAAc4/G,SAAd;AAEA;AAED;;AAED,aAAO,IAAP;AAEA,K,CAED;AACA;;;;WACA,cAAMC,SAAN,EAAiBC,OAAjB,EAA2B;AAE1B,UAAM3G,KAAK,GAAG,KAAKA,KAAnB;AAAA,UACC4G,KAAK,GAAG5G,KAAK,CAACj5G,MADf;AAGA,UAAIiS,IAAI,GAAG,CAAX;AAAA,UACCynD,EAAE,GAAGmmD,KAAK,GAAG,CADd;;AAGA,aAAQ5tG,IAAI,KAAK4tG,KAAT,IAAkB5G,KAAK,CAAEhnG,IAAF,CAAL,GAAgB0tG,SAA1C,EAAsD;AAErD,UAAG1tG,IAAH;AAEA;;AAED,aAAQynD,EAAE,KAAK,CAAE,CAAT,IAAcu/C,KAAK,CAAEv/C,EAAF,CAAL,GAAckmD,OAApC,EAA8C;AAE7C,UAAGlmD,EAAH;AAEA;;AAED,QAAGA,EAAH,CApB0B,CAoBnB;;AAEP,UAAKznD,IAAI,KAAK,CAAT,IAAcynD,EAAE,KAAKmmD,KAA1B,EAAkC;AAEjC;AACA,YAAK5tG,IAAI,IAAIynD,EAAb,EAAkB;AAEjBA,UAAAA,EAAE,GAAGr5D,IAAI,CAACc,GAAL,CAAUu4D,EAAV,EAAc,CAAd,CAAL;AACAznD,UAAAA,IAAI,GAAGynD,EAAE,GAAG,CAAZ;AAEA;;AAED,YAAMt4B,MAAM,GAAG,KAAK84E,YAAL,EAAf;AACA,aAAKjB,KAAL,GAAaT,cAAc,CAACC,UAAf,CAA2BQ,KAA3B,EAAkChnG,IAAlC,EAAwCynD,EAAxC,CAAb;AACA,aAAKzoC,MAAL,GAAcunF,cAAc,CAACC,UAAf,CAA2B,KAAKxnF,MAAhC,EAAwChf,IAAI,GAAGmvB,MAA/C,EAAuDs4B,EAAE,GAAGt4B,MAA5D,CAAd;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WACA,oBAAW;AAEV,UAAI0+E,KAAK,GAAG,IAAZ;AAEA,UAAM7F,SAAS,GAAG,KAAKC,YAAL,EAAlB;;AACA,UAAKD,SAAS,GAAG55G,IAAI,CAACuC,KAAL,CAAYq3G,SAAZ,CAAZ,KAAwC,CAA7C,EAAiD;AAEhDl1G,QAAAA,OAAO,CAACkD,KAAR,CAAe,mDAAf,EAAoE,IAApE;AACA63G,QAAAA,KAAK,GAAG,KAAR;AAEA;;AAED,UAAM7G,KAAK,GAAG,KAAKA,KAAnB;AAAA,UACChoF,MAAM,GAAG,KAAKA,MADf;AAAA,UAGC4uF,KAAK,GAAG5G,KAAK,CAACj5G,MAHf;;AAKA,UAAK6/G,KAAK,KAAK,CAAf,EAAmB;AAElB96G,QAAAA,OAAO,CAACkD,KAAR,CAAe,sCAAf,EAAuD,IAAvD;AACA63G,QAAAA,KAAK,GAAG,KAAR;AAEA;;AAED,UAAIC,QAAQ,GAAG,IAAf;;AAEA,WAAM,IAAIjgH,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK+/G,KAAvB,EAA8B//G,CAAC,EAA/B,EAAqC;AAEpC,YAAMkgH,QAAQ,GAAG/G,KAAK,CAAEn5G,CAAF,CAAtB;;AAEA,YAAK,OAAOkgH,QAAP,KAAoB,QAApB,IAAgCzhF,KAAK,CAAEyhF,QAAF,CAA1C,EAAyD;AAExDj7G,UAAAA,OAAO,CAACkD,KAAR,CAAe,kDAAf,EAAmE,IAAnE,EAAyEnI,CAAzE,EAA4EkgH,QAA5E;AACAF,UAAAA,KAAK,GAAG,KAAR;AACA;AAEA;;AAED,YAAKC,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,GAAGC,QAArC,EAAgD;AAE/Cj7G,UAAAA,OAAO,CAACkD,KAAR,CAAe,yCAAf,EAA0D,IAA1D,EAAgEnI,CAAhE,EAAmEkgH,QAAnE,EAA6ED,QAA7E;AACAD,UAAAA,KAAK,GAAG,KAAR;AACA;AAEA;;AAEDC,QAAAA,QAAQ,GAAGC,QAAX;AAEA;;AAED,UAAK/uF,MAAM,KAAK9xB,SAAhB,EAA4B;AAE3B,YAAKq5G,cAAc,CAACE,YAAf,CAA6BznF,MAA7B,CAAL,EAA6C;AAE5C,eAAM,IAAInxB,IAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG4vB,MAAM,CAACjxB,MAA5B,EAAoCF,IAAC,KAAKuB,CAA1C,EAA6C,EAAGvB,IAAhD,EAAoD;AAEnD,gBAAMmB,OAAK,GAAGgwB,MAAM,CAAEnxB,IAAF,CAApB;;AAEA,gBAAKy+B,KAAK,CAAEt9B,OAAF,CAAV,EAAsB;AAErB8D,cAAAA,OAAO,CAACkD,KAAR,CAAe,mDAAf,EAAoE,IAApE,EAA0EnI,IAA1E,EAA6EmB,OAA7E;AACA6+G,cAAAA,KAAK,GAAG,KAAR;AACA;AAEA;AAED;AAED;AAED;;AAED,aAAOA,KAAP;AAEA,K,CAED;AACA;;;;WACA,oBAAW;AAEV;AACA,UAAM7G,KAAK,GAAGT,cAAc,CAACC,UAAf,CAA2B,KAAKQ,KAAhC,CAAd;AAAA,UACChoF,MAAM,GAAGunF,cAAc,CAACC,UAAf,CAA2B,KAAKxnF,MAAhC,CADV;AAAA,UAECmQ,MAAM,GAAG,KAAK84E,YAAL,EAFV;AAAA,UAIC+F,mBAAmB,GAAG,KAAKC,gBAAL,OAA4BjkH,iBAJnD;AAAA,UAMCs8D,SAAS,GAAG0gD,KAAK,CAACj5G,MAAN,GAAe,CAN5B;AAQA,UAAImgH,UAAU,GAAG,CAAjB;;AAEA,WAAM,IAAIrgH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGy4D,SAArB,EAAgC,EAAGz4D,CAAnC,EAAuC;AAEtC,YAAIsgH,IAAI,GAAG,KAAX;AAEA,YAAM/yE,IAAI,GAAG4rE,KAAK,CAAEn5G,CAAF,CAAlB;AACA,YAAMugH,QAAQ,GAAGpH,KAAK,CAAEn5G,CAAC,GAAG,CAAN,CAAtB,CALsC,CAOtC;;AAEA,YAAKutC,IAAI,KAAKgzE,QAAT,KAAuBvgH,CAAC,KAAK,CAAN,IAAWutC,IAAI,KAAK4rE,KAAK,CAAE,CAAF,CAAhD,CAAL,EAA+D;AAE9D,cAAK,CAAEgH,mBAAP,EAA6B;AAE5B;AAEA,gBAAM14G,MAAM,GAAGzH,CAAC,GAAGshC,MAAnB;AAAA,gBACCk/E,OAAO,GAAG/4G,MAAM,GAAG65B,MADpB;AAAA,gBAECm/E,OAAO,GAAGh5G,MAAM,GAAG65B,MAFpB;;AAIA,iBAAM,IAAI5e,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK4e,MAAvB,EAA+B,EAAG5e,CAAlC,EAAsC;AAErC,kBAAMvhB,OAAK,GAAGgwB,MAAM,CAAE1pB,MAAM,GAAGib,CAAX,CAApB;;AAEA,kBAAKvhB,OAAK,KAAKgwB,MAAM,CAAEqvF,OAAO,GAAG99F,CAAZ,CAAhB,IACJvhB,OAAK,KAAKgwB,MAAM,CAAEsvF,OAAO,GAAG/9F,CAAZ,CADjB,EACmC;AAElC49F,gBAAAA,IAAI,GAAG,IAAP;AACA;AAEA;AAED;AAED,WAtBD,MAsBO;AAENA,YAAAA,IAAI,GAAG,IAAP;AAEA;AAED,SAvCqC,CAyCtC;;;AAEA,YAAKA,IAAL,EAAY;AAEX,cAAKtgH,CAAC,KAAKqgH,UAAX,EAAwB;AAEvBlH,YAAAA,KAAK,CAAEkH,UAAF,CAAL,GAAsBlH,KAAK,CAAEn5G,CAAF,CAA3B;AAEA,gBAAM0gH,UAAU,GAAG1gH,CAAC,GAAGshC,MAAvB;AAAA,gBACCq/E,WAAW,GAAGN,UAAU,GAAG/+E,MAD5B;;AAGA,iBAAM,IAAI5e,IAAC,GAAG,CAAd,EAAiBA,IAAC,KAAK4e,MAAvB,EAA+B,EAAG5e,IAAlC,EAAsC;AAErCyO,cAAAA,MAAM,CAAEwvF,WAAW,GAAGj+F,IAAhB,CAAN,GAA4ByO,MAAM,CAAEuvF,UAAU,GAAGh+F,IAAf,CAAlC;AAEA;AAED;;AAED,YAAG29F,UAAH;AAEA;AAED,OA7ES,CA+EV;;;AAEA,UAAK5nD,SAAS,GAAG,CAAjB,EAAqB;AAEpB0gD,QAAAA,KAAK,CAAEkH,UAAF,CAAL,GAAsBlH,KAAK,CAAE1gD,SAAF,CAA3B;;AAEA,aAAM,IAAIioD,WAAU,GAAGjoD,SAAS,GAAGn3B,MAA7B,EAAqCq/E,YAAW,GAAGN,UAAU,GAAG/+E,MAAhE,EAAwE5e,IAAC,GAAG,CAAlF,EAAqFA,IAAC,KAAK4e,MAA3F,EAAmG,EAAG5e,IAAtG,EAA0G;AAEzGyO,UAAAA,MAAM,CAAEwvF,YAAW,GAAGj+F,IAAhB,CAAN,GAA4ByO,MAAM,CAAEuvF,WAAU,GAAGh+F,IAAf,CAAlC;AAEA;;AAED,UAAG29F,UAAH;AAEA;;AAED,UAAKA,UAAU,KAAKlH,KAAK,CAACj5G,MAA1B,EAAmC;AAElC,aAAKi5G,KAAL,GAAaT,cAAc,CAACC,UAAf,CAA2BQ,KAA3B,EAAkC,CAAlC,EAAqCkH,UAArC,CAAb;AACA,aAAKlvF,MAAL,GAAcunF,cAAc,CAACC,UAAf,CAA2BxnF,MAA3B,EAAmC,CAAnC,EAAsCkvF,UAAU,GAAG/+E,MAAnD,CAAd;AAEA,OALD,MAKO;AAEN,aAAK63E,KAAL,GAAaA,KAAb;AACA,aAAKhoF,MAAL,GAAcA,MAAd;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,UAAMgoF,KAAK,GAAGT,cAAc,CAACC,UAAf,CAA2B,KAAKQ,KAAhC,EAAuC,CAAvC,CAAd;AACA,UAAMhoF,MAAM,GAAGunF,cAAc,CAACC,UAAf,CAA2B,KAAKxnF,MAAhC,EAAwC,CAAxC,CAAf;AAEA,UAAMyvF,kBAAkB,GAAG,KAAKx7G,WAAhC;AACA,UAAM80G,KAAK,GAAG,IAAI0G,kBAAJ,CAAwB,KAAKl0G,IAA7B,EAAmCysG,KAAnC,EAA0ChoF,MAA1C,CAAd,CANO,CAQP;;AACA+oF,MAAAA,KAAK,CAACkB,iBAAN,GAA0B,KAAKA,iBAA/B;AAEA,aAAOlB,KAAP;AAEA;;;WAxaD,gBAAeA,KAAf,EAAuB;AAEtB,UAAM2G,SAAS,GAAG3G,KAAK,CAAC90G,WAAxB;AAEA,UAAIk0F,IAAJ,CAJsB,CAMtB;;AACA,UAAKunB,SAAS,CAACvsG,MAAV,KAAqB,KAAKA,MAA/B,EAAwC;AAEvCglF,QAAAA,IAAI,GAAGunB,SAAS,CAACvsG,MAAV,CAAkB4lG,KAAlB,CAAP;AAEA,OAJD,MAIO;AAEN;AACA5gB,QAAAA,IAAI,GAAG;AAEN,kBAAQ4gB,KAAK,CAACxtG,IAFR;AAGN,mBAASgsG,cAAc,CAACG,YAAf,CAA6BqB,KAAK,CAACf,KAAnC,EAA0CrnG,KAA1C,CAHH;AAIN,oBAAU4mG,cAAc,CAACG,YAAf,CAA6BqB,KAAK,CAAC/oF,MAAnC,EAA2Crf,KAA3C;AAJJ,SAAP;AAQA,YAAMotG,aAAa,GAAGhF,KAAK,CAACkG,gBAAN,EAAtB;;AAEA,YAAKlB,aAAa,KAAKhF,KAAK,CAACoF,oBAA7B,EAAoD;AAEnDhmB,UAAAA,IAAI,CAAC4lB,aAAL,GAAqBA,aAArB;AAEA;AAED;;AAED5lB,MAAAA,IAAI,CAACp6F,IAAL,GAAYg7G,KAAK,CAACa,aAAlB,CAhCsB,CAgCW;;AAEjC,aAAOzhB,IAAP;AAEA;;;;;;AAwYF2lB,aAAa,CAAC94G,SAAd,CAAwBg5G,cAAxB,GAAyC95G,YAAzC;AACA45G,aAAa,CAAC94G,SAAd,CAAwBi5G,eAAxB,GAA0C/5G,YAA1C;AACA45G,aAAa,CAAC94G,SAAd,CAAwBm5G,oBAAxB,GAA+CpjH,iBAA/C;AAEA;AACA;AACA;;IACM4kH,oB;;;;;;;;;;;;EAA6B7B,a;;AAEnC6B,oBAAoB,CAAC36G,SAArB,CAA+B40G,aAA/B,GAA+C,MAA/C;AACA+F,oBAAoB,CAAC36G,SAArB,CAA+Bi5G,eAA/B,GAAiDttG,KAAjD;AACAgvG,oBAAoB,CAAC36G,SAArB,CAA+Bm5G,oBAA/B,GAAsDrjH,mBAAtD;AACA6kH,oBAAoB,CAAC36G,SAArB,CAA+Bs5G,8BAA/B,GAAgEpgH,SAAhE;AACAyhH,oBAAoB,CAAC36G,SAArB,CAA+Bu5G,8BAA/B,GAAgErgH,SAAhE;AAEA;AACA;AACA;;IACM0hH,kB;;;;;;;;;;;;EAA2B9B,a;;AAEjC8B,kBAAkB,CAAC56G,SAAnB,CAA6B40G,aAA7B,GAA6C,OAA7C;AAEA;AACA;AACA;;IACMiG,mB;;;;;;;;;;;;EAA4B/B,a;;AAElC+B,mBAAmB,CAAC76G,SAApB,CAA8B40G,aAA9B,GAA8C,QAA9C;AAEA;AACA;AACA;;IAEMkG,2B;;;;;AAEL,uCAAa5E,kBAAb,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DV,YAA3D,EAA0E;AAAA;;AAAA,gCAElEQ,kBAFkE,EAE9CC,YAF8C,EAEhCC,UAFgC,EAEpBV,YAFoB;AAIzE;;;;WAED,sBAAc3pF,EAAd,EAAkB3M,EAAlB,EAAsBrjB,CAAtB,EAAyBsjB,EAAzB,EAA8B;AAE7B,UAAMuoD,MAAM,GAAG,KAAK8tC,YAApB;AAAA,UACC1qF,MAAM,GAAG,KAAKmrF,YADf;AAAA,UAECh7E,MAAM,GAAG,KAAK64E,SAFf;AAAA,UAIC7yG,KAAK,GAAG,CAAEpF,CAAC,GAAGqjB,EAAN,KAAeC,EAAE,GAAGD,EAApB,CAJT;AAMA,UAAI9d,MAAM,GAAGyqB,EAAE,GAAGoP,MAAlB;;AAEA,WAAM,IAAIsC,GAAG,GAAGn8B,MAAM,GAAG65B,MAAzB,EAAiC75B,MAAM,KAAKm8B,GAA5C,EAAiDn8B,MAAM,IAAI,CAA3D,EAA+D;AAE9DoQ,QAAAA,UAAU,CAACqpG,SAAX,CAAsBnzC,MAAtB,EAA8B,CAA9B,EAAiC58C,MAAjC,EAAyC1pB,MAAM,GAAG65B,MAAlD,EAA0DnQ,MAA1D,EAAkE1pB,MAAlE,EAA0EH,KAA1E;AAEA;;AAED,aAAOymE,MAAP;AAEA;;;;EA1BwCquC,W;AA8B1C;AACA;AACA;;;IACM+E,uB;;;;;;;;;;;;;WAEL,wCAAgCpzC,MAAhC,EAAyC;AAExC,aAAO,IAAIkzC,2BAAJ,CAAiC,KAAK9H,KAAtC,EAA6C,KAAKhoF,MAAlD,EAA0D,KAAKipF,YAAL,EAA1D,EAA+ErsC,MAA/E,CAAP;AAEA;;;;EANoCkxC,a;;AAUtCkC,uBAAuB,CAACh7G,SAAxB,CAAkC40G,aAAlC,GAAkD,YAAlD,C,CACA;;AACAoG,uBAAuB,CAACh7G,SAAxB,CAAkCm5G,oBAAlC,GAAyDpjH,iBAAzD;AACAilH,uBAAuB,CAACh7G,SAAxB,CAAkCu5G,8BAAlC,GAAmErgH,SAAnE;AAEA;AACA;AACA;;IACM+hH,mB;;;;;;;;;;;;EAA4BnC,a;;AAElCmC,mBAAmB,CAACj7G,SAApB,CAA8B40G,aAA9B,GAA8C,QAA9C;AACAqG,mBAAmB,CAACj7G,SAApB,CAA8Bi5G,eAA9B,GAAgDttG,KAAhD;AACAsvG,mBAAmB,CAACj7G,SAApB,CAA8Bm5G,oBAA9B,GAAqDrjH,mBAArD;AACAmlH,mBAAmB,CAACj7G,SAApB,CAA8Bs5G,8BAA9B,GAA+DpgH,SAA/D;AACA+hH,mBAAmB,CAACj7G,SAApB,CAA8Bu5G,8BAA9B,GAA+DrgH,SAA/D;AAEA;AACA;AACA;;IACMgiH,mB;;;;;;;;;;;;EAA4BpC,a;;AAElCoC,mBAAmB,CAACl7G,SAApB,CAA8B40G,aAA9B,GAA8C,QAA9C;;IAEMuG,a;AAEL,yBAAa50G,IAAb,EAAkF;AAAA,QAA/D60G,QAA+D,uEAApD,CAAE,CAAkD;AAAA,QAA/CtH,MAA+C;AAAA,QAAvCkC,SAAuC,uEAA3B5/G,wBAA2B;;AAAA;;AAEjF,SAAKmQ,IAAL,GAAYA,IAAZ;AACA,SAAKutG,MAAL,GAAcA,MAAd;AACA,SAAKsH,QAAL,GAAgBA,QAAhB;AACA,SAAKpF,SAAL,GAAiBA,SAAjB;AAEA,SAAKn7G,IAAL,GAAYN,YAAY,EAAxB,CAPiF,CASjF;;AACA,QAAK,KAAK6gH,QAAL,GAAgB,CAArB,EAAyB;AAExB,WAAKjH,aAAL;AAEA;AAED;;;;WA+RD,yBAAgB;AAEf,UAAML,MAAM,GAAG,KAAKA,MAApB;AACA,UAAIsH,QAAQ,GAAG,CAAf;;AAEA,WAAM,IAAIvhH,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG04G,MAAM,CAAC/5G,MAA5B,EAAoCF,CAAC,KAAKuB,CAA1C,EAA6C,EAAGvB,CAAhD,EAAoD;AAEnD,YAAMk6G,KAAK,GAAG,KAAKD,MAAL,CAAaj6G,CAAb,CAAd;AAEAuhH,QAAAA,QAAQ,GAAGhhH,IAAI,CAACc,GAAL,CAAUkgH,QAAV,EAAoBrH,KAAK,CAACf,KAAN,CAAae,KAAK,CAACf,KAAN,CAAYj5G,MAAZ,GAAqB,CAAlC,CAApB,CAAX;AAEA;;AAED,WAAKqhH,QAAL,GAAgBA,QAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAM,IAAIvhH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKi6G,MAAL,CAAY/5G,MAAjC,EAAyCF,CAAC,EAA1C,EAAgD;AAE/C,aAAKi6G,MAAL,CAAaj6G,CAAb,EAAiBo6D,IAAjB,CAAuB,CAAvB,EAA0B,KAAKmnD,QAA/B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,oBAAW;AAEV,UAAIvB,KAAK,GAAG,IAAZ;;AAEA,WAAM,IAAIhgH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKi6G,MAAL,CAAY/5G,MAAjC,EAAyCF,CAAC,EAA1C,EAAgD;AAE/CggH,QAAAA,KAAK,GAAGA,KAAK,IAAI,KAAK/F,MAAL,CAAaj6G,CAAb,EAAiBwhH,QAAjB,EAAjB;AAEA;;AAED,aAAOxB,KAAP;AAEA;;;WAED,oBAAW;AAEV,WAAM,IAAIhgH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKi6G,MAAL,CAAY/5G,MAAjC,EAAyCF,CAAC,EAA1C,EAAgD;AAE/C,aAAKi6G,MAAL,CAAaj6G,CAAb,EAAiByhH,QAAjB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,UAAMxH,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIj6G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKi6G,MAAL,CAAY/5G,MAAjC,EAAyCF,CAAC,EAA1C,EAAgD;AAE/Ci6G,QAAAA,MAAM,CAACz6G,IAAP,CAAa,KAAKy6G,MAAL,CAAaj6G,CAAb,EAAiB8W,KAAjB,EAAb;AAEA;;AAED,aAAO,IAAI,KAAK1R,WAAT,CAAsB,KAAKsH,IAA3B,EAAiC,KAAK60G,QAAtC,EAAgDtH,MAAhD,EAAwD,KAAKkC,SAA7D,CAAP;AAEA;;;WAED,kBAAS;AAER,aAAO,KAAK/2G,WAAL,CAAiBkP,MAAjB,CAAyB,IAAzB,CAAP;AAEA;;;WAvWD,eAAcglF,IAAd,EAAqB;AAEpB,UAAM2gB,MAAM,GAAG,EAAf;AAAA,UACCyH,UAAU,GAAGpoB,IAAI,CAAC2gB,MADnB;AAAA,UAEC0H,SAAS,GAAG,OAAQroB,IAAI,CAACygB,GAAL,IAAY,GAApB,CAFb;;AAIA,WAAM,IAAI/5G,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGmgH,UAAU,CAACxhH,MAAhC,EAAwCF,CAAC,KAAKuB,CAA9C,EAAiD,EAAGvB,CAApD,EAAwD;AAEvDi6G,QAAAA,MAAM,CAACz6G,IAAP,CAAaoiH,kBAAkB,CAAEF,UAAU,CAAE1hH,CAAF,CAAZ,CAAlB,CAAsC8pB,KAAtC,CAA6C63F,SAA7C,CAAb;AAEA;;AAED,UAAM3H,IAAI,GAAG,IAAI,IAAJ,CAAU1gB,IAAI,CAAC5sF,IAAf,EAAqB4sF,IAAI,CAACioB,QAA1B,EAAoCtH,MAApC,EAA4C3gB,IAAI,CAAC6iB,SAAjD,CAAb;AACAnC,MAAAA,IAAI,CAACh5G,IAAL,GAAYs4F,IAAI,CAACt4F,IAAjB;AAEA,aAAOg5G,IAAP;AAEA;;;WAED,gBAAeA,IAAf,EAAsB;AAErB,UAAMC,MAAM,GAAG,EAAf;AAAA,UACC4H,UAAU,GAAG7H,IAAI,CAACC,MADnB;AAGA,UAAM3gB,IAAI,GAAG;AAEZ,gBAAQ0gB,IAAI,CAACttG,IAFD;AAGZ,oBAAYstG,IAAI,CAACuH,QAHL;AAIZ,kBAAUtH,MAJE;AAKZ,gBAAQD,IAAI,CAACh5G,IALD;AAMZ,qBAAag5G,IAAI,CAACmC;AANN,OAAb;;AAUA,WAAM,IAAIn8G,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGsgH,UAAU,CAAC3hH,MAAhC,EAAwCF,CAAC,KAAKuB,CAA9C,EAAiD,EAAGvB,CAApD,EAAwD;AAEvDi6G,QAAAA,MAAM,CAACz6G,IAAP,CAAay/G,aAAa,CAAC3qG,MAAd,CAAsButG,UAAU,CAAE7hH,CAAF,CAAhC,CAAb;AAEA;;AAED,aAAOs5F,IAAP;AAEA;;;WAED,uCAAsC5sF,IAAtC,EAA4Co1G,mBAA5C,EAAiE/H,GAAjE,EAAsEgI,MAAtE,EAA+E;AAE9E,UAAMC,eAAe,GAAGF,mBAAmB,CAAC5hH,MAA5C;AACA,UAAM+5G,MAAM,GAAG,EAAf;;AAEA,WAAM,IAAIj6G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGgiH,eAArB,EAAsChiH,CAAC,EAAvC,EAA6C;AAE5C,YAAIm5G,KAAK,GAAG,EAAZ;AACA,YAAIhoF,MAAM,GAAG,EAAb;AAEAgoF,QAAAA,KAAK,CAAC35G,IAAN,CACC,CAAEQ,CAAC,GAAGgiH,eAAJ,GAAsB,CAAxB,IAA8BA,eAD/B,EAEChiH,CAFD,EAGC,CAAEA,CAAC,GAAG,CAAN,IAAYgiH,eAHb;AAKA7wF,QAAAA,MAAM,CAAC3xB,IAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;AAEA,YAAM6E,KAAK,GAAGq0G,cAAc,CAACQ,gBAAf,CAAiCC,KAAjC,CAAd;AACAA,QAAAA,KAAK,GAAGT,cAAc,CAACW,WAAf,CAA4BF,KAA5B,EAAmC,CAAnC,EAAsC90G,KAAtC,CAAR;AACA8sB,QAAAA,MAAM,GAAGunF,cAAc,CAACW,WAAf,CAA4BloF,MAA5B,EAAoC,CAApC,EAAuC9sB,KAAvC,CAAT,CAd4C,CAgB5C;AACA;;AACA,YAAK,CAAE09G,MAAF,IAAY5I,KAAK,CAAE,CAAF,CAAL,KAAe,CAAhC,EAAoC;AAEnCA,UAAAA,KAAK,CAAC35G,IAAN,CAAYwiH,eAAZ;AACA7wF,UAAAA,MAAM,CAAC3xB,IAAP,CAAa2xB,MAAM,CAAE,CAAF,CAAnB;AAEA;;AAED8oF,QAAAA,MAAM,CAACz6G,IAAP,CACC,IAAIwhH,mBAAJ,CACC,4BAA4Bc,mBAAmB,CAAE9hH,CAAF,CAAnB,CAAyB0M,IAArD,GAA4D,GAD7D,EAECysG,KAFD,EAEQhoF,MAFR,EAGErH,KAHF,CAGS,MAAMiwF,GAHf,CADD;AAMA;;AAED,aAAO,IAAI,IAAJ,CAAUrtG,IAAV,EAAgB,CAAE,CAAlB,EAAqButG,MAArB,CAAP;AAEA;;;WAED,oBAAmBgI,iBAAnB,EAAsCv1G,IAAtC,EAA6C;AAE5C,UAAIw1G,SAAS,GAAGD,iBAAhB;;AAEA,UAAK,CAAEnwG,KAAK,CAACC,OAAN,CAAekwG,iBAAf,CAAP,EAA4C;AAE3C,YAAMrL,CAAC,GAAGqL,iBAAV;AACAC,QAAAA,SAAS,GAAGtL,CAAC,CAACp2F,QAAF,IAAco2F,CAAC,CAACp2F,QAAF,CAAWsN,UAAzB,IAAuC8oF,CAAC,CAAC9oF,UAArD;AAEA;;AAED,WAAM,IAAI9tB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGkiH,SAAS,CAAChiH,MAA/B,EAAuCF,CAAC,EAAxC,EAA8C;AAE7C,YAAKkiH,SAAS,CAAEliH,CAAF,CAAT,CAAe0M,IAAf,KAAwBA,IAA7B,EAAoC;AAEnC,iBAAOw1G,SAAS,CAAEliH,CAAF,CAAhB;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,6CAA4CmxD,YAA5C,EAA0D4oD,GAA1D,EAA+DgI,MAA/D,EAAwE;AAEvE,UAAMI,uBAAuB,GAAG,EAAhC,CAFuE,CAIvE;AACA;;AACA,UAAMC,OAAO,GAAG,oBAAhB,CANuE,CAQvE;AACA;;AACA,WAAM,IAAIpiH,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGu5C,YAAY,CAACjxD,MAAnC,EAA2CF,CAAC,GAAG4X,EAA/C,EAAmD5X,CAAC,EAApD,EAA0D;AAEzD,YAAMwxD,WAAW,GAAGL,YAAY,CAAEnxD,CAAF,CAAhC;AACA,YAAMqiH,KAAK,GAAG7wD,WAAW,CAAC9kD,IAAZ,CAAiBgsD,KAAjB,CAAwB0pD,OAAxB,CAAd;;AAEA,YAAKC,KAAK,IAAIA,KAAK,CAACniH,MAAN,GAAe,CAA7B,EAAiC;AAEhC,cAAMwM,IAAI,GAAG21G,KAAK,CAAE,CAAF,CAAlB;AAEA,cAAIC,qBAAqB,GAAGH,uBAAuB,CAAEz1G,IAAF,CAAnD;;AAEA,cAAK,CAAE41G,qBAAP,EAA+B;AAE9BH,YAAAA,uBAAuB,CAAEz1G,IAAF,CAAvB,GAAkC41G,qBAAqB,GAAG,EAA1D;AAEA;;AAEDA,UAAAA,qBAAqB,CAAC9iH,IAAtB,CAA4BgyD,WAA5B;AAEA;AAED;;AAED,UAAM+wD,KAAK,GAAG,EAAd;;AAEA,WAAM,IAAM71G,MAAZ,IAAoBy1G,uBAApB,EAA8C;AAE7CI,QAAAA,KAAK,CAAC/iH,IAAN,CAAY,KAAKgjH,6BAAL,CAAoC91G,MAApC,EAA0Cy1G,uBAAuB,CAAEz1G,MAAF,CAAjE,EAA2EqtG,GAA3E,EAAgFgI,MAAhF,CAAZ;AAEA;;AAED,aAAOQ,KAAP;AAEA,K,CAED;;;;WACA,wBAAuBvxF,SAAvB,EAAkC2nE,KAAlC,EAA0C;AAEzC,UAAK,CAAE3nE,SAAP,EAAmB;AAElB/rB,QAAAA,OAAO,CAACkD,KAAR,CAAe,uDAAf;AACA,eAAO,IAAP;AAEA;;AAED,UAAMs6G,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAW5B,SAAX,EAAsB6B,SAAtB,EAAiCC,aAAjC,EAAgDC,YAAhD,EAA8DC,UAA9D,EAA2E;AAEnG;AACA,YAAKF,aAAa,CAACziH,MAAd,KAAyB,CAA9B,EAAkC;AAEjC,cAAMi5G,KAAK,GAAG,EAAd;AACA,cAAMhoF,MAAM,GAAG,EAAf;AAEAunF,UAAAA,cAAc,CAACc,WAAf,CAA4BmJ,aAA5B,EAA2CxJ,KAA3C,EAAkDhoF,MAAlD,EAA0DyxF,YAA1D,EALiC,CAOjC;;AACA,cAAKzJ,KAAK,CAACj5G,MAAN,KAAiB,CAAtB,EAA0B;AAEzB2iH,YAAAA,UAAU,CAACrjH,IAAX,CAAiB,IAAIqhH,SAAJ,CAAe6B,SAAf,EAA0BvJ,KAA1B,EAAiChoF,MAAjC,CAAjB;AAEA;AAED;AAED,OAnBD;;AAqBA,UAAM8oF,MAAM,GAAG,EAAf;AAEA,UAAM6I,QAAQ,GAAG9xF,SAAS,CAACtkB,IAAV,IAAkB,SAAnC;AACA,UAAMqtG,GAAG,GAAG/oF,SAAS,CAAC+oF,GAAV,IAAiB,EAA7B;AACA,UAAMoC,SAAS,GAAGnrF,SAAS,CAACmrF,SAA5B,CAlCyC,CAoCzC;;AACA,UAAIoF,QAAQ,GAAGvwF,SAAS,CAAC9wB,MAAV,IAAoB,CAAE,CAArC;AAEA,UAAM6iH,eAAe,GAAG/xF,SAAS,CAACgyF,SAAV,IAAuB,EAA/C;;AAEA,WAAM,IAAIr4G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGo4G,eAAe,CAAC7iH,MAArC,EAA6CyK,CAAC,EAA9C,EAAoD;AAEnD,YAAMg4G,aAAa,GAAGI,eAAe,CAAEp4G,CAAF,CAAf,CAAqBg3B,IAA3C,CAFmD,CAInD;;AACA,YAAK,CAAEghF,aAAF,IAAmBA,aAAa,CAACziH,MAAd,KAAyB,CAAjD,EAAqD,SALF,CAOnD;;AACA,YAAKyiH,aAAa,CAAE,CAAF,CAAb,CAAmBxxD,YAAxB,EAAuC;AAEtC;AACA,cAAM8xD,gBAAgB,GAAG,EAAzB;AAEA,cAAIx0C,CAAC,SAAL;;AAEA,eAAMA,CAAC,GAAG,CAAV,EAAaA,CAAC,GAAGk0C,aAAa,CAACziH,MAA/B,EAAuCuuE,CAAC,EAAxC,EAA8C;AAE7C,gBAAKk0C,aAAa,CAAEl0C,CAAF,CAAb,CAAmBtd,YAAxB,EAAuC;AAEtC,mBAAM,IAAI3vD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmhH,aAAa,CAAEl0C,CAAF,CAAb,CAAmBtd,YAAnB,CAAgCjxD,MAArD,EAA6DsB,CAAC,EAA9D,EAAoE;AAEnEyhH,gBAAAA,gBAAgB,CAAEN,aAAa,CAAEl0C,CAAF,CAAb,CAAmBtd,YAAnB,CAAiC3vD,CAAjC,CAAF,CAAhB,GAA2D,CAAE,CAA7D;AAEA;AAED;AAED,WAnBqC,CAqBtC;AACA;AACA;;;AACA,eAAM,IAAM0hH,eAAZ,IAA+BD,gBAA/B,EAAkD;AAEjD,gBAAM9J,KAAK,GAAG,EAAd;AACA,gBAAMhoF,MAAM,GAAG,EAAf;;AAEA,iBAAM,IAAI3vB,EAAC,GAAG,CAAd,EAAiBA,EAAC,KAAKmhH,aAAa,CAAEl0C,CAAF,CAAb,CAAmBtd,YAAnB,CAAgCjxD,MAAvD,EAA+D,EAAGsB,EAAlE,EAAsE;AAErE,kBAAM2hH,YAAY,GAAGR,aAAa,CAAEl0C,CAAF,CAAlC;AAEA0qC,cAAAA,KAAK,CAAC35G,IAAN,CAAY2jH,YAAY,CAAC51E,IAAzB;AACApc,cAAAA,MAAM,CAAC3xB,IAAP,CAAe2jH,YAAY,CAAC3xD,WAAb,KAA6B0xD,eAA/B,GAAmD,CAAnD,GAAuD,CAApE;AAEA;;AAEDjJ,YAAAA,MAAM,CAACz6G,IAAP,CAAa,IAAIwhH,mBAAJ,CAAyB,2BAA2BkC,eAA3B,GAA6C,GAAtE,EAA2E/J,KAA3E,EAAkFhoF,MAAlF,CAAb;AAEA;;AAEDowF,UAAAA,QAAQ,GAAG0B,gBAAgB,CAAC/iH,MAAjB,GAA0B65G,GAArC;AAEA,SA5CD,MA4CO;AAEN;AAEA,cAAMqJ,QAAQ,GAAG,YAAYzqB,KAAK,CAAEhuF,CAAF,CAAL,CAAW+B,IAAvB,GAA8B,GAA/C;AAEA+1G,UAAAA,gBAAgB,CACfpB,mBADe,EACM+B,QAAQ,GAAG,WADjB,EAEfT,aAFe,EAEA,KAFA,EAEO1I,MAFP,CAAhB;AAIAwI,UAAAA,gBAAgB,CACftB,uBADe,EACUiC,QAAQ,GAAG,aADrB,EAEfT,aAFe,EAEA,KAFA,EAEO1I,MAFP,CAAhB;AAIAwI,UAAAA,gBAAgB,CACfpB,mBADe,EACM+B,QAAQ,GAAG,QADjB,EAEfT,aAFe,EAEA,KAFA,EAEO1I,MAFP,CAAhB;AAIA;AAED;;AAED,UAAKA,MAAM,CAAC/5G,MAAP,KAAkB,CAAvB,EAA2B;AAE1B,eAAO,IAAP;AAEA;;AAED,UAAM85G,IAAI,GAAG,IAAI,IAAJ,CAAU8I,QAAV,EAAoBvB,QAApB,EAA8BtH,MAA9B,EAAsCkC,SAAtC,CAAb;AAEA,aAAOnC,IAAP;AAEA;;;;;;AAiFF,SAASqJ,4BAAT,CAAuCC,QAAvC,EAAkD;AAEjD,UAASA,QAAQ,CAACriH,WAAT,EAAT;AAEC,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,OAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AAEC,aAAO+/G,mBAAP;;AAED,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AAEC,aAAOK,mBAAP;;AAED,SAAK,OAAL;AAEC,aAAON,kBAAP;;AAED,SAAK,YAAL;AAEC,aAAOI,uBAAP;;AAED,SAAK,MAAL;AACA,SAAK,SAAL;AAEC,aAAOL,oBAAP;;AAED,SAAK,QAAL;AAEC,aAAOM,mBAAP;AAhCF;;AAoCA,QAAM,IAAI17G,KAAJ,CAAW,gDAAgD49G,QAA3D,CAAN;AAEA;;AAED,SAAS1B,kBAAT,CAA6BtoB,IAA7B,EAAoC;AAEnC,MAAKA,IAAI,CAACp6F,IAAL,KAAcG,SAAnB,EAA+B;AAE9B,UAAM,IAAIqG,KAAJ,CAAW,0DAAX,CAAN;AAEA;;AAED,MAAMm7G,SAAS,GAAGwC,4BAA4B,CAAE/pB,IAAI,CAACp6F,IAAP,CAA9C;;AAEA,MAAKo6F,IAAI,CAAC6f,KAAL,KAAe95G,SAApB,EAAgC;AAE/B,QAAM85G,KAAK,GAAG,EAAd;AAAA,QAAkBhoF,MAAM,GAAG,EAA3B;AAEAunF,IAAAA,cAAc,CAACc,WAAf,CAA4BlgB,IAAI,CAAC33D,IAAjC,EAAuCw3E,KAAvC,EAA8ChoF,MAA9C,EAAsD,OAAtD;AAEAmoE,IAAAA,IAAI,CAAC6f,KAAL,GAAaA,KAAb;AACA7f,IAAAA,IAAI,CAACnoE,MAAL,GAAcA,MAAd;AAEA,GAnBkC,CAqBnC;;;AACA,MAAK0vF,SAAS,CAAC7sG,KAAV,KAAoB3U,SAAzB,EAAqC;AAEpC,WAAOwhH,SAAS,CAAC7sG,KAAV,CAAiBslF,IAAjB,CAAP;AAEA,GAJD,MAIO;AAEN;AACA,WAAO,IAAIunB,SAAJ,CAAevnB,IAAI,CAAC5sF,IAApB,EAA0B4sF,IAAI,CAAC6f,KAA/B,EAAsC7f,IAAI,CAACnoE,MAA3C,EAAmDmoE,IAAI,CAAC4lB,aAAxD,CAAP;AAEA;AAED;;AAED,IAAMqE,KAAK,GAAG;AAEb/6E,EAAAA,OAAO,EAAE,KAFI;AAIbg7E,EAAAA,KAAK,EAAE,EAJM;AAMb1jG,EAAAA,GAAG,EAAE,aAAWsR,GAAX,EAAgBqyF,IAAhB,EAAuB;AAE3B,QAAK,KAAKj7E,OAAL,KAAiB,KAAtB,EAA8B,OAFH,CAI3B;;AAEA,SAAKg7E,KAAL,CAAYpyF,GAAZ,IAAoBqyF,IAApB;AAEA,GAdY;AAgBb50E,EAAAA,GAAG,EAAE,aAAWzd,GAAX,EAAiB;AAErB,QAAK,KAAKoX,OAAL,KAAiB,KAAtB,EAA8B,OAFT,CAIrB;;AAEA,WAAO,KAAKg7E,KAAL,CAAYpyF,GAAZ,CAAP;AAEA,GAxBY;AA0BbzC,EAAAA,MAAM,EAAE,gBAAWyC,GAAX,EAAiB;AAExB,WAAO,KAAKoyF,KAAL,CAAYpyF,GAAZ,CAAP;AAEA,GA9BY;AAgCbqZ,EAAAA,KAAK,EAAE,iBAAY;AAElB,SAAK+4E,KAAL,GAAa,EAAb;AAEA;AApCY,CAAd;;IAwCME,c,GAEL,wBAAaC,MAAb,EAAqBC,UAArB,EAAiCC,OAAjC,EAA2C;AAAA;;AAE1C,MAAMn/E,KAAK,GAAG,IAAd;AAEA,MAAIo/E,SAAS,GAAG,KAAhB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,WAAW,GAAG5kH,SAAlB;AACA,MAAM6kH,QAAQ,GAAG,EAAjB,CAR0C,CAU1C;AACA;;AAEA,OAAKC,OAAL,GAAe9kH,SAAf;AACA,OAAKskH,MAAL,GAAcA,MAAd;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,OAAL,GAAeA,OAAf;;AAEA,OAAKO,SAAL,GAAiB,UAAWvyG,GAAX,EAAiB;AAEjCmyG,IAAAA,UAAU;;AAEV,QAAKF,SAAS,KAAK,KAAnB,EAA2B;AAE1B,UAAKp/E,KAAK,CAACy/E,OAAN,KAAkB9kH,SAAvB,EAAmC;AAElCqlC,QAAAA,KAAK,CAACy/E,OAAN,CAAetyG,GAAf,EAAoBkyG,WAApB,EAAiCC,UAAjC;AAEA;AAED;;AAEDF,IAAAA,SAAS,GAAG,IAAZ;AAEA,GAhBD;;AAkBA,OAAKO,OAAL,GAAe,UAAWxyG,GAAX,EAAiB;AAE/BkyG,IAAAA,WAAW;;AAEX,QAAKr/E,KAAK,CAACk/E,UAAN,KAAqBvkH,SAA1B,EAAsC;AAErCqlC,MAAAA,KAAK,CAACk/E,UAAN,CAAkB/xG,GAAlB,EAAuBkyG,WAAvB,EAAoCC,UAApC;AAEA;;AAED,QAAKD,WAAW,KAAKC,UAArB,EAAkC;AAEjCF,MAAAA,SAAS,GAAG,KAAZ;;AAEA,UAAKp/E,KAAK,CAACi/E,MAAN,KAAiBtkH,SAAtB,EAAkC;AAEjCqlC,QAAAA,KAAK,CAACi/E,MAAN;AAEA;AAED;AAED,GAtBD;;AAwBA,OAAKW,SAAL,GAAiB,UAAWzyG,GAAX,EAAiB;AAEjC,QAAK6yB,KAAK,CAACm/E,OAAN,KAAkBxkH,SAAvB,EAAmC;AAElCqlC,MAAAA,KAAK,CAACm/E,OAAN,CAAehyG,GAAf;AAEA;AAED,GARD;;AAUA,OAAK0yG,UAAL,GAAkB,UAAW1yG,GAAX,EAAiB;AAElC,QAAKoyG,WAAL,EAAmB;AAElB,aAAOA,WAAW,CAAEpyG,GAAF,CAAlB;AAEA;;AAED,WAAOA,GAAP;AAEA,GAVD;;AAYA,OAAK2yG,cAAL,GAAsB,UAAWjjC,SAAX,EAAuB;AAE5C0iC,IAAAA,WAAW,GAAG1iC,SAAd;AAEA,WAAO,IAAP;AAEA,GAND;;AAQA,OAAKkjC,UAAL,GAAkB,UAAWC,KAAX,EAAkBC,MAAlB,EAA2B;AAE5CT,IAAAA,QAAQ,CAAC1kH,IAAT,CAAeklH,KAAf,EAAsBC,MAAtB;AAEA,WAAO,IAAP;AAEA,GAND;;AAQA,OAAKC,aAAL,GAAqB,UAAWF,KAAX,EAAmB;AAEvC,QAAMhlH,KAAK,GAAGwkH,QAAQ,CAAC3kH,OAAT,CAAkBmlH,KAAlB,CAAd;;AAEA,QAAKhlH,KAAK,KAAK,CAAE,CAAjB,EAAqB;AAEpBwkH,MAAAA,QAAQ,CAACvkH,MAAT,CAAiBD,KAAjB,EAAwB,CAAxB;AAEA;;AAED,WAAO,IAAP;AAEA,GAZD;;AAcA,OAAKmlH,UAAL,GAAkB,UAAWpB,IAAX,EAAkB;AAEnC,SAAM,IAAIzjH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGikH,QAAQ,CAAChkH,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,IAAI,CAAlD,EAAsD;AAErD,UAAM0kH,KAAK,GAAGR,QAAQ,CAAElkH,CAAF,CAAtB;AACA,UAAM2kH,MAAM,GAAGT,QAAQ,CAAElkH,CAAC,GAAG,CAAN,CAAvB;AAEA,UAAK0kH,KAAK,CAACI,MAAX,EAAoBJ,KAAK,CAACjsD,SAAN,GAAkB,CAAlB,CALiC,CAKZ;;AAEzC,UAAKisD,KAAK,CAACr0G,IAAN,CAAYozG,IAAZ,CAAL,EAA0B;AAEzB,eAAOkB,MAAP;AAEA;AAED;;AAED,WAAO,IAAP;AAEA,GAnBD;AAqBA,C;;AAIF,IAAMI,qBAAqB,GAAG,IAAIrB,cAAJ,EAA9B;;IAEMsB,M;AAEL,kBAAaC,OAAb,EAAuB;AAAA;;AAEtB,SAAKA,OAAL,GAAiBA,OAAO,KAAK5lH,SAAd,GAA4B4lH,OAA5B,GAAsCF,qBAArD;AAEA,SAAKG,WAAL,GAAmB,WAAnB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAK5sD,IAAL,GAAY,EAAZ;AACA,SAAK6sD,YAAL,GAAoB,EAApB;AACA,SAAKC,aAAL,GAAqB,EAArB;AAEA;;;;WAED,gBAA+C,CAAE;;;WAEjD,mBAAWxzG,GAAX,EAAgB+xG,UAAhB,EAA6B;AAE5B,UAAMl/E,KAAK,GAAG,IAAd;AAEA,aAAO,IAAI4gF,OAAJ,CAAa,UAAWC,OAAX,EAAoBC,MAApB,EAA6B;AAEhD9gF,QAAAA,KAAK,CAAC+gF,IAAN,CAAY5zG,GAAZ,EAAiB0zG,OAAjB,EAA0B3B,UAA1B,EAAsC4B,MAAtC;AAEA,OAJM,CAAP;AAMA;;;WAED,iBAAoB,CAAE;;;WAEtB,wBAAgBN,WAAhB,EAA8B;AAE7B,WAAKA,WAAL,GAAmBA,WAAnB;AACA,aAAO,IAAP;AAEA;;;WAED,4BAAoB/jH,KAApB,EAA4B;AAE3B,WAAKgkH,eAAL,GAAuBhkH,KAAvB;AACA,aAAO,IAAP;AAEA;;;WAED,iBAASo3D,IAAT,EAAgB;AAEf,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,IAAP;AAEA;;;WAED,yBAAiB6sD,YAAjB,EAAgC;AAE/B,WAAKA,YAAL,GAAoBA,YAApB;AACA,aAAO,IAAP;AAEA;;;WAED,0BAAkBC,aAAlB,EAAkC;AAEjC,WAAKA,aAAL,GAAqBA,aAArB;AACA,aAAO,IAAP;AAEA;;;;;;AAIF,IAAMK,OAAO,GAAG,EAAhB;;IAEMC,U;;;;;AAEL,sBAAaV,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAAA;;AAExC,UAAKhyG,GAAG,KAAKxS,SAAb,EAAyBwS,GAAG,GAAG,EAAN;AAEzB,UAAK,KAAK0mD,IAAL,KAAcl5D,SAAnB,EAA+BwS,GAAG,GAAG,KAAK0mD,IAAL,GAAY1mD,GAAlB;AAE/BA,MAAAA,GAAG,GAAG,KAAKozG,OAAL,CAAaV,UAAb,CAAyB1yG,GAAzB,CAAN;AAEA,UAAMm9B,MAAM,GAAGu0E,KAAK,CAAC10E,GAAN,CAAWh9B,GAAX,CAAf;;AAEA,UAAKm9B,MAAM,KAAK3vC,SAAhB,EAA4B;AAE3B,aAAK4lH,OAAL,CAAab,SAAb,CAAwBvyG,GAAxB;AAEA+zG,QAAAA,UAAU,CAAE,YAAM;AAEjB,cAAKjC,MAAL,EAAcA,MAAM,CAAE30E,MAAF,CAAN;;AAEd,UAAA,OAAI,CAACi2E,OAAL,CAAaZ,OAAb,CAAsBxyG,GAAtB;AAEA,SANS,EAMP,CANO,CAAV;AAQA,eAAOm9B,MAAP;AAEA,OAxBuC,CA0BxC;;;AAEA,UAAK02E,OAAO,CAAE7zG,GAAF,CAAP,KAAmBxS,SAAxB,EAAoC;AAEnCqmH,QAAAA,OAAO,CAAE7zG,GAAF,CAAP,CAAerS,IAAf,CAAqB;AAEpBmkH,UAAAA,MAAM,EAAEA,MAFY;AAGpBC,UAAAA,UAAU,EAAEA,UAHQ;AAIpBC,UAAAA,OAAO,EAAEA;AAJW,SAArB;AAQA;AAEA,OAxCuC,CA0CxC;;;AACA6B,MAAAA,OAAO,CAAE7zG,GAAF,CAAP,GAAiB,EAAjB;AAEA6zG,MAAAA,OAAO,CAAE7zG,GAAF,CAAP,CAAerS,IAAf,CAAqB;AACpBmkH,QAAAA,MAAM,EAAEA,MADY;AAEpBC,QAAAA,UAAU,EAAEA,UAFQ;AAGpBC,QAAAA,OAAO,EAAEA;AAHW,OAArB,EA7CwC,CAmDxC;;AACA,UAAMgC,GAAG,GAAG,IAAIC,OAAJ,CAAaj0G,GAAb,EAAkB;AAC7Bk0G,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAa,KAAKX,aAAlB,CADoB;AAE7BY,QAAAA,WAAW,EAAE,KAAKd,eAAL,GAAuB,SAAvB,GAAmC,aAFnB,CAG7B;;AAH6B,OAAlB,CAAZ,CApDwC,CA0DxC;;AACA,UAAMe,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMC,YAAY,GAAG,KAAKA,YAA1B,CA5DwC,CA8DxC;;AACAC,MAAAA,KAAK,CAAEP,GAAF,CAAL,CACEQ,IADF,CACQ,UAAAC,QAAQ,EAAI;AAElB,YAAKA,QAAQ,CAACtsD,MAAT,KAAoB,GAApB,IAA2BssD,QAAQ,CAACtsD,MAAT,KAAoB,CAApD,EAAwD;AAEvD;AACA;AAEA,cAAKssD,QAAQ,CAACtsD,MAAT,KAAoB,CAAzB,EAA6B;AAE5B/0D,YAAAA,OAAO,CAACC,IAAR,CAAc,2CAAd;AAEA,WATsD,CAWvD;;;AAEA,cAAK,OAAOqhH,cAAP,KAA0B,WAA1B,IAAyCD,QAAQ,CAACE,IAAT,KAAkBnnH,SAA3D,IAAwEinH,QAAQ,CAACE,IAAT,CAAcC,SAAd,KAA4BpnH,SAAzG,EAAqH;AAEpH,mBAAOinH,QAAP;AAEA;;AAED,cAAMI,SAAS,GAAGhB,OAAO,CAAE7zG,GAAF,CAAzB;AACA,cAAM80G,MAAM,GAAGL,QAAQ,CAACE,IAAT,CAAcC,SAAd,EAAf;AACA,cAAMG,aAAa,GAAGN,QAAQ,CAACP,OAAT,CAAiBl3E,GAAjB,CAAsB,gBAAtB,CAAtB;AACA,cAAMg4E,KAAK,GAAGD,aAAa,GAAG73G,QAAQ,CAAE63G,aAAF,CAAX,GAA+B,CAA1D;AACA,cAAME,gBAAgB,GAAGD,KAAK,KAAK,CAAnC;AACA,cAAIE,MAAM,GAAG,CAAb,CAxBuD,CA0BvD;;AACA,cAAMC,MAAM,GAAG,IAAIT,cAAJ,CAAoB;AAClC/oF,YAAAA,KADkC,iBAC3BgmD,UAD2B,EACd;AAEnByjC,cAAAA,QAAQ;;AAER,uBAASA,QAAT,GAAoB;AAEnBN,gBAAAA,MAAM,CAACO,IAAP,GAAcb,IAAd,CAAoB,iBAAuB;AAAA,sBAAnBc,IAAmB,SAAnBA,IAAmB;AAAA,sBAAbhmH,KAAa,SAAbA,KAAa;;AAE1C,sBAAKgmH,IAAL,EAAY;AAEX3jC,oBAAAA,UAAU,CAAC4jC,KAAX;AAEA,mBAJD,MAIO;AAENL,oBAAAA,MAAM,IAAI5lH,KAAK,CAACkmH,UAAhB;AAEA,wBAAMznH,KAAK,GAAG,IAAI0nH,aAAJ,CAAmB,UAAnB,EAA+B;AAAER,sBAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBC,sBAAAA,MAAM,EAANA,MAApB;AAA4BF,sBAAAA,KAAK,EAALA;AAA5B,qBAA/B,CAAd;;AACA,yBAAM,IAAI7mH,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG8uG,SAAS,CAACxmH,MAAhC,EAAwCF,CAAC,GAAG4X,EAA5C,EAAgD5X,CAAC,EAAjD,EAAuD;AAEtD,0BAAM+a,QAAQ,GAAG2rG,SAAS,CAAE1mH,CAAF,CAA1B;AACA,0BAAK+a,QAAQ,CAAC6oG,UAAd,EAA2B7oG,QAAQ,CAAC6oG,UAAT,CAAqBhkH,KAArB;AAE3B;;AAED4jF,oBAAAA,UAAU,CAAC+jC,OAAX,CAAoBpmH,KAApB;AACA8lH,oBAAAA,QAAQ;AAER;AAED,iBAvBD;AAyBA;AAED;AAlCiC,WAApB,CAAf;AAsCA,iBAAO,IAAIO,QAAJ,CAAcR,MAAd,CAAP;AAEA,SAnED,MAmEO;AAEN,gBAAMthH,KAAK,uBAAgB4gH,QAAQ,CAACz0G,GAAzB,+BAAgDy0G,QAAQ,CAACtsD,MAAzD,eAAoEssD,QAAQ,CAACmB,UAA7E,EAAX;AAEA;AAED,OA5EF,EA6EEpB,IA7EF,CA6EQ,UAAAC,QAAQ,EAAI;AAElB,gBAASH,YAAT;AAEC,eAAK,aAAL;AAEC,mBAAOG,QAAQ,CAACoB,WAAT,EAAP;;AAED,eAAK,MAAL;AAEC,mBAAOpB,QAAQ,CAACqB,IAAT,EAAP;;AAED,eAAK,UAAL;AAEC,mBAAOrB,QAAQ,CAACsB,IAAT,GACLvB,IADK,CACC,UAAAuB,IAAI,EAAI;AAEd,kBAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,qBAAOD,MAAM,CAACE,eAAP,CAAwBH,IAAxB,EAA8B1B,QAA9B,CAAP;AAEA,aANK,CAAP;;AAQD,eAAK,MAAL;AAEC,mBAAOI,QAAQ,CAAChtB,IAAT,EAAP;;AAED;AAEC,gBAAK4sB,QAAQ,KAAK7mH,SAAlB,EAA8B;AAE7B,qBAAOinH,QAAQ,CAACsB,IAAT,EAAP;AAEA,aAJD,MAIO;AAEN;AACA,kBAAMI,EAAE,GAAG,yBAAX;AACA,kBAAMn5G,IAAI,GAAGm5G,EAAE,CAACn5G,IAAH,CAASq3G,QAAT,CAAb;AACA,kBAAM+B,KAAK,GAAGp5G,IAAI,IAAIA,IAAI,CAAE,CAAF,CAAZ,GAAoBA,IAAI,CAAE,CAAF,CAAJ,CAAU5N,WAAV,EAApB,GAA8C5B,SAA5D;AACA,kBAAM6oH,OAAO,GAAG,IAAIC,WAAJ,CAAiBF,KAAjB,CAAhB;AACA,qBAAO3B,QAAQ,CAACoB,WAAT,GAAuBrB,IAAvB,CAA6B,UAAAzlF,EAAE;AAAA,uBAAIsnF,OAAO,CAACE,MAAR,CAAgBxnF,EAAhB,CAAJ;AAAA,eAA/B,CAAP;AAEA;;AAvCH;AA2CA,OA1HF,EA2HEylF,IA3HF,CA2HQ,UAAAh1G,IAAI,EAAI;AAEd;AACA;AACAkyG,QAAAA,KAAK,CAACzjG,GAAN,CAAWjO,GAAX,EAAgBR,IAAhB;AAEA,YAAMq1G,SAAS,GAAGhB,OAAO,CAAE7zG,GAAF,CAAzB;AACA,eAAO6zG,OAAO,CAAE7zG,GAAF,CAAd;;AAEA,aAAM,IAAI7R,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG8uG,SAAS,CAACxmH,MAAhC,EAAwCF,CAAC,GAAG4X,EAA5C,EAAgD5X,CAAC,EAAjD,EAAuD;AAEtD,cAAM+a,QAAQ,GAAG2rG,SAAS,CAAE1mH,CAAF,CAA1B;AACA,cAAK+a,QAAQ,CAAC4oG,MAAd,EAAuB5oG,QAAQ,CAAC4oG,MAAT,CAAiBtyG,IAAjB;AAEvB;AAED,OA3IF,EA4IEg3G,KA5IF,CA4IS,UAAA3yC,GAAG,EAAI;AAEd;AAEA,YAAMgxC,SAAS,GAAGhB,OAAO,CAAE7zG,GAAF,CAAzB;;AAEA,YAAK60G,SAAS,KAAKrnH,SAAnB,EAA+B;AAE9B;AACA,UAAA,OAAI,CAAC4lH,OAAL,CAAaX,SAAb,CAAwBzyG,GAAxB;;AACA,gBAAM6jE,GAAN;AAEA;;AAED,eAAOgwC,OAAO,CAAE7zG,GAAF,CAAd;;AAEA,aAAM,IAAI7R,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG8uG,SAAS,CAACxmH,MAAhC,EAAwCF,CAAC,GAAG4X,EAA5C,EAAgD5X,CAAC,EAAjD,EAAuD;AAEtD,cAAM+a,QAAQ,GAAG2rG,SAAS,CAAE1mH,CAAF,CAA1B;AACA,cAAK+a,QAAQ,CAAC8oG,OAAd,EAAwB9oG,QAAQ,CAAC8oG,OAAT,CAAkBnuC,GAAlB;AAExB;;AAED,QAAA,OAAI,CAACuvC,OAAL,CAAaX,SAAb,CAAwBzyG,GAAxB;AAEA,OArKF,EAsKEy2G,OAtKF,CAsKW,YAAM;AAEf,QAAA,OAAI,CAACrD,OAAL,CAAaZ,OAAb,CAAsBxyG,GAAtB;AAEA,OA1KF;AA4KA,WAAKozG,OAAL,CAAab,SAAb,CAAwBvyG,GAAxB;AAEA;;;WAED,yBAAiB1Q,KAAjB,EAAyB;AAExB,WAAKglH,YAAL,GAAoBhlH,KAApB;AACA,aAAO,IAAP;AAEA;;;WAED,qBAAaA,KAAb,EAAqB;AAEpB,WAAK+kH,QAAL,GAAgB/kH,KAAhB;AACA,aAAO,IAAP;AAEA;;;;EAnQuB6jH,M;;IAuQnBuD,e;;;;;AAEL,2BAAatD,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAMigF,MAAM,GAAG,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAAf;AACAN,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2B,KAAKvD,eAAhC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAW+1G,IAAX,EAAkB;AAEnC,YAAI;AAEHjE,UAAAA,MAAM,CAAEj/E,KAAK,CAAC1wB,KAAN,CAAaD,IAAI,CAACC,KAAL,CAAY4zG,IAAZ,CAAb,CAAF,CAAN;AAEA,SAJD,CAIE,OAAQjhH,CAAR,EAAY;AAEb,cAAKk9G,OAAL,EAAe;AAEdA,YAAAA,OAAO,CAAEl9G,CAAF,CAAP;AAEA,WAJD,MAIO;AAEN1B,YAAAA,OAAO,CAACkD,KAAR,CAAexB,CAAf;AAEA;;AAED+9B,UAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AAEA;AAED,OAtBD,EAsBG+xG,UAtBH,EAsBeC,OAtBf;AAwBA;;;WAED,eAAOvqB,IAAP,EAAc;AAEb,UAAMxrE,UAAU,GAAG,EAAnB;;AAEA,WAAM,IAAI9tB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGs5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,EAAnC,EAAyC;AAExC,YAAMg6G,IAAI,GAAGsH,aAAa,CAACttG,KAAd,CAAqBslF,IAAI,CAAEt5F,CAAF,CAAzB,CAAb;AAEA8tB,QAAAA,UAAU,CAACtuB,IAAX,CAAiBw6G,IAAjB;AAEA;;AAED,aAAOlsF,UAAP;AAEA;;;;EAxD4Bk3F,M;AA4D9B;AACA;AACA;AACA;AACA;;;IAEM2D,uB;;;;;AAEL,mCAAa1D,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAM/yB,MAAM,GAAG,EAAf;AAEA,UAAM6E,OAAO,GAAG,IAAIgmF,iBAAJ,EAAhB;AAEA,UAAMmoB,MAAM,GAAG,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAAf;AACAN,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,MAAAA,MAAM,CAACiE,eAAP,CAAwB,aAAxB;AACAjE,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2BhkF,KAAK,CAACygF,eAAjC;AAEA,UAAI4B,MAAM,GAAG,CAAb;;AAEA,eAAS8B,WAAT,CAAsB7oH,CAAtB,EAA0B;AAEzB2kH,QAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAG,CAAE7R,CAAF,CAAhB,EAAuB,UAAWwM,MAAX,EAAoB;AAE1C,cAAMs8G,QAAQ,GAAGpkF,KAAK,CAAC1wB,KAAN,CAAaxH,MAAb,EAAqB,IAArB,CAAjB;AAEAmF,UAAAA,MAAM,CAAE3R,CAAF,CAAN,GAAc;AACbyQ,YAAAA,KAAK,EAAEq4G,QAAQ,CAACr4G,KADH;AAEbC,YAAAA,MAAM,EAAEo4G,QAAQ,CAACp4G,MAFJ;AAGbmC,YAAAA,MAAM,EAAEi2G,QAAQ,CAACj2G,MAHJ;AAIbK,YAAAA,OAAO,EAAE41G,QAAQ,CAAC51G;AAJL,WAAd;AAOA6zG,UAAAA,MAAM,IAAI,CAAV;;AAEA,cAAKA,MAAM,KAAK,CAAhB,EAAoB;AAEnB,gBAAK+B,QAAQ,CAACC,WAAT,KAAyB,CAA9B,EAAkCvyG,OAAO,CAAC5D,SAAR,GAAoBpa,YAApB;AAElCge,YAAAA,OAAO,CAACpG,KAAR,GAAgBuB,MAAhB;AACA6E,YAAAA,OAAO,CAAC3D,MAAR,GAAiBi2G,QAAQ,CAACj2G,MAA1B;AACA2D,YAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB;AAEA,gBAAKyvG,MAAL,EAAcA,MAAM,CAAEntG,OAAF,CAAN;AAEd;AAED,SAzBD,EAyBGotG,UAzBH,EAyBeC,OAzBf;AA2BA;;AAED,UAAK/xG,KAAK,CAACC,OAAN,CAAeF,GAAf,CAAL,EAA4B;AAE3B,aAAM,IAAI7R,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG/F,GAAG,CAAC3R,MAA1B,EAAkCF,CAAC,GAAG4X,EAAtC,EAA0C,EAAG5X,CAA7C,EAAiD;AAEhD6oH,UAAAA,WAAW,CAAE7oH,CAAF,CAAX;AAEA;AAED,OARD,MAQO;AAEN;AAEA2kH,QAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAWrF,MAAX,EAAoB;AAErC,cAAMs8G,QAAQ,GAAGpkF,KAAK,CAAC1wB,KAAN,CAAaxH,MAAb,EAAqB,IAArB,CAAjB;;AAEA,cAAKs8G,QAAQ,CAACE,SAAd,EAA0B;AAEzB,gBAAMnb,KAAK,GAAGib,QAAQ,CAAC51G,OAAT,CAAiBhT,MAAjB,GAA0B4oH,QAAQ,CAACC,WAAjD;;AAEA,iBAAM,IAAIt+G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGojG,KAArB,EAA4BpjG,CAAC,EAA7B,EAAmC;AAElCkH,cAAAA,MAAM,CAAElH,CAAF,CAAN,GAAc;AAAEyI,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAEA,mBAAM,IAAIlT,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG8oH,QAAQ,CAACC,WAA9B,EAA2C/oH,IAAC,EAA5C,EAAkD;AAEjD2R,gBAAAA,MAAM,CAAElH,CAAF,CAAN,CAAYyI,OAAZ,CAAoB1T,IAApB,CAA0BspH,QAAQ,CAAC51G,OAAT,CAAkBzI,CAAC,GAAGq+G,QAAQ,CAACC,WAAb,GAA2B/oH,IAA7C,CAA1B;AACA2R,gBAAAA,MAAM,CAAElH,CAAF,CAAN,CAAYoI,MAAZ,GAAqBi2G,QAAQ,CAACj2G,MAA9B;AACAlB,gBAAAA,MAAM,CAAElH,CAAF,CAAN,CAAYgG,KAAZ,GAAoBq4G,QAAQ,CAACr4G,KAA7B;AACAkB,gBAAAA,MAAM,CAAElH,CAAF,CAAN,CAAYiG,MAAZ,GAAqBo4G,QAAQ,CAACp4G,MAA9B;AAEA;AAED;;AAED8F,YAAAA,OAAO,CAACpG,KAAR,GAAgBuB,MAAhB;AAEA,WArBD,MAqBO;AAEN6E,YAAAA,OAAO,CAACpG,KAAR,CAAcK,KAAd,GAAsBq4G,QAAQ,CAACr4G,KAA/B;AACA+F,YAAAA,OAAO,CAACpG,KAAR,CAAcM,MAAd,GAAuBo4G,QAAQ,CAACp4G,MAAhC;AACA8F,YAAAA,OAAO,CAACtD,OAAR,GAAkB41G,QAAQ,CAAC51G,OAA3B;AAEA;;AAED,cAAK41G,QAAQ,CAACC,WAAT,KAAyB,CAA9B,EAAkC;AAEjCvyG,YAAAA,OAAO,CAAC5D,SAAR,GAAoBpa,YAApB;AAEA;;AAEDge,UAAAA,OAAO,CAAC3D,MAAR,GAAiBi2G,QAAQ,CAACj2G,MAA1B;AACA2D,UAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB;AAEA,cAAKyvG,MAAL,EAAcA,MAAM,CAAEntG,OAAF,CAAN;AAEd,SA5CD,EA4CGotG,UA5CH,EA4CeC,OA5Cf;AA8CA;;AAED,aAAOrtG,OAAP;AAEA;;;;EArHoCwuG,M;;IAyHhCiE,W;;;;;AAEL,uBAAahE,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAK,KAAKtrD,IAAL,KAAcl5D,SAAnB,EAA+BwS,GAAG,GAAG,KAAK0mD,IAAL,GAAY1mD,GAAlB;AAE/BA,MAAAA,GAAG,GAAG,KAAKozG,OAAL,CAAaV,UAAb,CAAyB1yG,GAAzB,CAAN;AAEA,UAAM6yB,KAAK,GAAG,IAAd;AAEA,UAAMsK,MAAM,GAAGu0E,KAAK,CAAC10E,GAAN,CAAWh9B,GAAX,CAAf;;AAEA,UAAKm9B,MAAM,KAAK3vC,SAAhB,EAA4B;AAE3BqlC,QAAAA,KAAK,CAACugF,OAAN,CAAcb,SAAd,CAAyBvyG,GAAzB;AAEA+zG,QAAAA,UAAU,CAAE,YAAY;AAEvB,cAAKjC,MAAL,EAAcA,MAAM,CAAE30E,MAAF,CAAN;AAEdtK,UAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,SANS,EAMP,CANO,CAAV;AAQA,eAAOm9B,MAAP;AAEA;;AAED,UAAM5+B,KAAK,GAAG3D,eAAe,CAAE,KAAF,CAA7B;;AAEA,eAASy8G,WAAT,GAAuB;AAEtBC,QAAAA,oBAAoB;AAEpB5F,QAAAA,KAAK,CAACzjG,GAAN,CAAWjO,GAAX,EAAgB,IAAhB;AAEA,YAAK8xG,MAAL,EAAcA,MAAM,CAAE,IAAF,CAAN;AAEdj/E,QAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA;;AAED,eAASu3G,YAAT,CAAuBxpH,KAAvB,EAA+B;AAE9BupH,QAAAA,oBAAoB;AAEpB,YAAKtF,OAAL,EAAeA,OAAO,CAAEjkH,KAAF,CAAP;AAEf8kC,QAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AACA6yB,QAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA;;AAED,eAASs3G,oBAAT,GAAgC;AAE/B/4G,QAAAA,KAAK,CAACq4C,mBAAN,CAA2B,MAA3B,EAAmCygE,WAAnC,EAAgD,KAAhD;AACA94G,QAAAA,KAAK,CAACq4C,mBAAN,CAA2B,OAA3B,EAAoC2gE,YAApC,EAAkD,KAAlD;AAEA;;AAEDh5G,MAAAA,KAAK,CAACm4C,gBAAN,CAAwB,MAAxB,EAAgC2gE,WAAhC,EAA6C,KAA7C;AACA94G,MAAAA,KAAK,CAACm4C,gBAAN,CAAwB,OAAxB,EAAiC6gE,YAAjC,EAA+C,KAA/C;;AAEA,UAAKv3G,GAAG,CAAC9R,KAAJ,CAAW,CAAX,EAAc,CAAd,MAAsB,OAA3B,EAAqC;AAEpC,YAAK,KAAKmlH,WAAL,KAAqB7lH,SAA1B,EAAsC+Q,KAAK,CAAC80G,WAAN,GAAoB,KAAKA,WAAzB;AAEtC;;AAEDxgF,MAAAA,KAAK,CAACugF,OAAN,CAAcb,SAAd,CAAyBvyG,GAAzB;AAEAzB,MAAAA,KAAK,CAACE,GAAN,GAAYuB,GAAZ;AAEA,aAAOzB,KAAP;AAEA;;;;EAjFwB40G,M;;IAqFpBqE,iB;;;;;AAEL,6BAAapE,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMqE,IAAN,EAAY3F,MAAZ,EAAoBC,UAApB,EAAgCC,OAAhC,EAA0C;AAEzC,UAAMrtG,OAAO,GAAG,IAAIyzB,WAAJ,EAAhB;AAEA,UAAM06E,MAAM,GAAG,IAAIsE,WAAJ,CAAiB,KAAKhE,OAAtB,CAAf;AACAN,MAAAA,MAAM,CAAC4E,cAAP,CAAuB,KAAKrE,WAA5B;AACAP,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AAEA,UAAIwuD,MAAM,GAAG,CAAb;;AAEA,eAAS8B,WAAT,CAAsB7oH,CAAtB,EAA0B;AAEzB2kH,QAAAA,MAAM,CAACc,IAAP,CAAa6D,IAAI,CAAEtpH,CAAF,CAAjB,EAAwB,UAAWoQ,KAAX,EAAmB;AAE1CoG,UAAAA,OAAO,CAAC7E,MAAR,CAAgB3R,CAAhB,IAAsBoQ,KAAtB;AAEA22G,UAAAA,MAAM;;AAEN,cAAKA,MAAM,KAAK,CAAhB,EAAoB;AAEnBvwG,YAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB;AAEA,gBAAKyvG,MAAL,EAAcA,MAAM,CAAEntG,OAAF,CAAN;AAEd;AAED,SAdD,EAcGnX,SAdH,EAccwkH,OAdd;AAgBA;;AAED,WAAM,IAAI7jH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGspH,IAAI,CAACppH,MAA1B,EAAkC,EAAGF,CAArC,EAAyC;AAExC6oH,QAAAA,WAAW,CAAE7oH,CAAF,CAAX;AAEA;;AAED,aAAOwW,OAAP;AAEA;;;;EA9C8BwuG,M;AAkDhC;AACA;AACA;AACA;AACA;;;IAEMwE,iB;;;;;AAEL,6BAAavE,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAMluB,OAAO,GAAG,IAAIuiF,WAAJ,EAAhB;AAEA,UAAM4rB,MAAM,GAAG,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAAf;AACAN,MAAAA,MAAM,CAACiE,eAAP,CAAwB,aAAxB;AACAjE,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,MAAAA,MAAM,CAAC+D,kBAAP,CAA2BhkF,KAAK,CAACygF,eAAjC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAWrF,MAAX,EAAoB;AAErC,YAAMi9G,OAAO,GAAG/kF,KAAK,CAAC1wB,KAAN,CAAaxH,MAAb,CAAhB;AAEA,YAAK,CAAEi9G,OAAP,EAAiB;;AAEjB,YAAKA,OAAO,CAACr5G,KAAR,KAAkB/Q,SAAvB,EAAmC;AAElCmX,UAAAA,OAAO,CAACpG,KAAR,GAAgBq5G,OAAO,CAACr5G,KAAxB;AAEA,SAJD,MAIO,IAAKq5G,OAAO,CAACp4G,IAAR,KAAiBhS,SAAtB,EAAkC;AAExCmX,UAAAA,OAAO,CAACpG,KAAR,CAAcK,KAAd,GAAsBg5G,OAAO,CAACh5G,KAA9B;AACA+F,UAAAA,OAAO,CAACpG,KAAR,CAAcM,MAAd,GAAuB+4G,OAAO,CAAC/4G,MAA/B;AACA8F,UAAAA,OAAO,CAACpG,KAAR,CAAciB,IAAd,GAAqBo4G,OAAO,CAACp4G,IAA7B;AAEA;;AAEDmF,QAAAA,OAAO,CAAC/D,KAAR,GAAgBg3G,OAAO,CAACh3G,KAAR,KAAkBpT,SAAlB,GAA8BoqH,OAAO,CAACh3G,KAAtC,GAA8Cxa,mBAA9D;AACAue,QAAAA,OAAO,CAAC9D,KAAR,GAAgB+2G,OAAO,CAAC/2G,KAAR,KAAkBrT,SAAlB,GAA8BoqH,OAAO,CAAC/2G,KAAtC,GAA8Cza,mBAA9D;AAEAue,QAAAA,OAAO,CAAC7D,SAAR,GAAoB82G,OAAO,CAAC92G,SAAR,KAAsBtT,SAAtB,GAAkCoqH,OAAO,CAAC92G,SAA1C,GAAsDna,YAA1E;AACAge,QAAAA,OAAO,CAAC5D,SAAR,GAAoB62G,OAAO,CAAC72G,SAAR,KAAsBvT,SAAtB,GAAkCoqH,OAAO,CAAC72G,SAA1C,GAAsDpa,YAA1E;AAEAge,QAAAA,OAAO,CAAC1D,UAAR,GAAqB22G,OAAO,CAAC32G,UAAR,KAAuBzT,SAAvB,GAAmCoqH,OAAO,CAAC32G,UAA3C,GAAwD,CAA7E;;AAEA,YAAK22G,OAAO,CAAC12G,QAAR,KAAqB1T,SAA1B,EAAsC;AAErCmX,UAAAA,OAAO,CAACzD,QAAR,GAAmB02G,OAAO,CAAC12G,QAA3B;AAEA;;AAED,YAAK02G,OAAO,CAACj2G,KAAR,KAAkBnU,SAAvB,EAAmC;AAElCmX,UAAAA,OAAO,CAAChD,KAAR,GAAgBi2G,OAAO,CAACj2G,KAAxB;AAEA;;AAED,YAAKi2G,OAAO,CAAC52G,MAAR,KAAmBxT,SAAxB,EAAoC;AAEnCmX,UAAAA,OAAO,CAAC3D,MAAR,GAAiB42G,OAAO,CAAC52G,MAAzB;AAEA;;AAED,YAAK42G,OAAO,CAACvqH,IAAR,KAAiBG,SAAtB,EAAkC;AAEjCmX,UAAAA,OAAO,CAACtX,IAAR,GAAeuqH,OAAO,CAACvqH,IAAvB;AAEA;;AAED,YAAKuqH,OAAO,CAACv2G,OAAR,KAAoB7T,SAAzB,EAAqC;AAEpCmX,UAAAA,OAAO,CAACtD,OAAR,GAAkBu2G,OAAO,CAACv2G,OAA1B;AACAsD,UAAAA,OAAO,CAAC5D,SAAR,GAAoBja,wBAApB,CAHoC,CAGU;AAE9C;;AAED,YAAK8wH,OAAO,CAACV,WAAR,KAAwB,CAA7B,EAAiC;AAEhCvyG,UAAAA,OAAO,CAAC5D,SAAR,GAAoBpa,YAApB;AAEA;;AAED,YAAKixH,OAAO,CAACn2G,eAAR,KAA4BjU,SAAjC,EAA6C;AAE5CmX,UAAAA,OAAO,CAAClD,eAAR,GAA0Bm2G,OAAO,CAACn2G,eAAlC;AAEA;;AAEDkD,QAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB;AAEA,YAAKyvG,MAAL,EAAcA,MAAM,CAAEntG,OAAF,EAAWizG,OAAX,CAAN;AAEd,OAzED,EAyEG7F,UAzEH,EAyEeC,OAzEf;AA4EA,aAAOrtG,OAAP;AAEA;;;;EAjG8BwuG,M;;IAqG1B0E,a;;;;;AAEL,yBAAazE,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMrtG,OAAO,GAAG,IAAInE,OAAJ,EAAhB;AAEA,UAAMsyG,MAAM,GAAG,IAAIsE,WAAJ,CAAiB,KAAKhE,OAAtB,CAAf;AACAN,MAAAA,MAAM,CAAC4E,cAAP,CAAuB,KAAKrE,WAA5B;AACAP,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AAEAosD,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAWzB,KAAX,EAAmB;AAEpCoG,QAAAA,OAAO,CAACpG,KAAR,GAAgBA,KAAhB;AACAoG,QAAAA,OAAO,CAACtC,WAAR,GAAsB,IAAtB;;AAEA,YAAKyvG,MAAM,KAAKtkH,SAAhB,EAA4B;AAE3BskH,UAAAA,MAAM,CAAEntG,OAAF,CAAN;AAEA;AAED,OAXD,EAWGotG,UAXH,EAWeC,OAXf;AAaA,aAAOrtG,OAAP;AAEA;;;;EA/B0BwuG,M;;IAmCtB2E,K;;;;;AAEL,iBAAav8G,KAAb,EAAoC;AAAA;;AAAA,QAAhB27D,SAAgB,uEAAJ,CAAI;;AAAA;;AAEnC;AAEA,YAAKv6C,OAAL,GAAe,IAAf;AAEA,YAAKtvB,IAAL,GAAY,OAAZ;AAEA,YAAKkO,KAAL,GAAa,IAAIc,KAAJ,CAAWd,KAAX,CAAb;AACA,YAAK27D,SAAL,GAAiBA,SAAjB;AATmC;AAWnC;;;;WAED,mBAAU,CAET;AAEA;;;WAED,cAAM96D,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,sEAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKjkB,KAAL,CAAWiB,IAAX,CAAiBJ,MAAM,CAACb,KAAxB;AACA,WAAK27D,SAAL,GAAiB96D,MAAM,CAAC86D,SAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQt3D,IAAR,EAAe;AAEd,UAAMJ,IAAI,qEAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC0O,MAAL,CAAY3S,KAAZ,GAAoB,KAAKA,KAAL,CAAWkC,MAAX,EAApB;AACA+B,MAAAA,IAAI,CAAC0O,MAAL,CAAYgpD,SAAZ,GAAwB,KAAKA,SAA7B;AAEA,UAAK,KAAK/rB,WAAL,KAAqB39C,SAA1B,EAAsCgS,IAAI,CAAC0O,MAAL,CAAYi9B,WAAZ,GAA0B,KAAKA,WAAL,CAAiB1tC,MAAjB,EAA1B;AAEtC,UAAK,KAAK8e,QAAL,KAAkB/uB,SAAvB,EAAmCgS,IAAI,CAAC0O,MAAL,CAAYqO,QAAZ,GAAuB,KAAKA,QAA5B;AACnC,UAAK,KAAKnnB,KAAL,KAAe5H,SAApB,EAAgCgS,IAAI,CAAC0O,MAAL,CAAY9Y,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,UAAK,KAAKm1C,KAAL,KAAe/8C,SAApB,EAAgCgS,IAAI,CAAC0O,MAAL,CAAYq8B,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,UAAK,KAAKstB,QAAL,KAAkBrqE,SAAvB,EAAmCgS,IAAI,CAAC0O,MAAL,CAAY2pD,QAAZ,GAAuB,KAAKA,QAA5B;AAEnC,UAAK,KAAKvrB,MAAL,KAAgB9+C,SAArB,EAAiCgS,IAAI,CAAC0O,MAAL,CAAYo+B,MAAZ,GAAqB,KAAKA,MAAL,CAAY7pC,MAAZ,EAArB;AAEjC,aAAOjD,IAAP;AAEA;;;;EAlDkBsb,Q;;IAsDdi9F,e;;;;;AAEL,2BAAa7sE,QAAb,EAAuBC,WAAvB,EAAoC+rB,SAApC,EAAgD;AAAA;;AAAA;;AAE/C,mCAAOhsB,QAAP,EAAiBgsB,SAAjB;AAEA,YAAKc,iBAAL,GAAyB,IAAzB;AAEA,YAAK3qE,IAAL,GAAY,iBAAZ;;AAEA,YAAKwhB,QAAL,CAAcrS,IAAd,CAAoBse,QAAQ,CAACG,SAA7B;;AACA,YAAKiB,YAAL;;AAEA,YAAKivB,WAAL,GAAmB,IAAI9uC,KAAJ,CAAW8uC,WAAX,CAAnB;AAX+C;AAa/C;;;;WAED,cAAM/uC,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,gFAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAK2rB,WAAL,CAAiB3uC,IAAjB,CAAuBJ,MAAM,CAAC+uC,WAA9B;AAEA,aAAO,IAAP;AAEA;;;;EAzB4B2sE,K;;AA6B9B,IAAME,mBAAmB,GAAG,aAAc,IAAIhjG,OAAJ,EAA1C;;AACA,IAAMijG,qBAAqB,GAAG,aAAc,IAAI1tG,OAAJ,EAA5C;;AACA,IAAM2tG,aAAa,GAAG,aAAc,IAAI3tG,OAAJ,EAApC;;IAEM4tG,W;AAEL,uBAAa7sG,MAAb,EAAsB;AAAA;;AAErB,SAAKA,MAAL,GAAcA,MAAd;AAEA,SAAKmsD,IAAL,GAAY,CAAZ;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAK9qD,MAAL,GAAc,CAAd;AACA,SAAKkvD,WAAL,GAAmB,CAAnB;AAEA,SAAKnE,OAAL,GAAe,IAAItjE,OAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAf;AAEA,SAAK6xB,GAAL,GAAW,IAAX;AACA,SAAK61C,OAAL,GAAe,IAAf;AACA,SAAK7hE,MAAL,GAAc,IAAI8a,OAAJ,EAAd;AAEA,SAAKylD,UAAL,GAAkB,IAAlB;AACA,SAAKp4D,WAAL,GAAmB,KAAnB;AAEA,SAAKo3D,QAAL,GAAgB,IAAI5/B,OAAJ,EAAhB;AACA,SAAKu+E,aAAL,GAAqB,IAAI/jH,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AAEA,SAAKgkH,cAAL,GAAsB,CAAtB;AAEA,SAAKC,UAAL,GAAkB,CAEjB,IAAIx1G,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAFiB,CAAlB;AAMA;;;;WAED,4BAAmB;AAElB,aAAO,KAAKu1G,cAAZ;AAEA;;;WAED,sBAAa;AAEZ,aAAO,KAAK5+C,QAAZ;AAEA;;;WAED,wBAAgBpE,KAAhB,EAAwB;AAEvB,UAAMqH,YAAY,GAAG,KAAKpxD,MAA1B;AACA,UAAMitG,YAAY,GAAG,KAAKr+G,MAA1B;;AAEA+9G,MAAAA,qBAAqB,CAACx7F,qBAAtB,CAA6C44C,KAAK,CAAC1pD,WAAnD;;AACA+wD,MAAAA,YAAY,CAAC7tD,QAAb,CAAsBrS,IAAtB,CAA4By7G,qBAA5B;;AAEAC,MAAAA,aAAa,CAACz7F,qBAAd,CAAqC44C,KAAK,CAACrnE,MAAN,CAAa2d,WAAlD;;AACA+wD,MAAAA,YAAY,CAAC9/C,MAAb,CAAqBs7F,aAArB;AACAx7C,MAAAA,YAAY,CAACp/C,iBAAb;;AAEA06F,MAAAA,mBAAmB,CAAC1gH,gBAApB,CAAsColE,YAAY,CAACjxD,gBAAnD,EAAqEixD,YAAY,CAAClxD,kBAAlF;;AACA,WAAKiuD,QAAL,CAAc4lB,uBAAd,CAAuC24B,mBAAvC;;AAEAO,MAAAA,YAAY,CAACplH,GAAb,CACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,EAEC,GAFD,EAEM,GAFN,EAEW,GAFX,EAEgB,GAFhB,EAGC,GAHD,EAGM,GAHN,EAGW,GAHX,EAGgB,GAHhB,EAIC,GAJD,EAIM,GAJN,EAIW,GAJX,EAIgB,GAJhB;AAOAolH,MAAAA,YAAY,CAACl8F,QAAb,CAAuBqgD,YAAY,CAACjxD,gBAApC;AACA8sG,MAAAA,YAAY,CAACl8F,QAAb,CAAuBqgD,YAAY,CAAClxD,kBAApC;AAEA;;;WAED,qBAAagtG,aAAb,EAA6B;AAE5B,aAAO,KAAKF,UAAL,CAAiBE,aAAjB,CAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAO,KAAKJ,aAAZ;AAEA;;;WAED,mBAAU;AAET,UAAK,KAAKlyF,GAAV,EAAgB;AAEf,aAAKA,GAAL,CAASlhB,OAAT;AAEA;;AAED,UAAK,KAAK+2D,OAAV,EAAoB;AAEnB,aAAKA,OAAL,CAAa/2D,OAAb;AAEA;AAED;;;WAED,cAAM5I,MAAN,EAAe;AAEd,WAAKkP,MAAL,GAAclP,MAAM,CAACkP,MAAP,CAAcrG,KAAd,EAAd;AAEA,WAAKwyD,IAAL,GAAYr7D,MAAM,CAACq7D,IAAnB;AACA,WAAK7qD,MAAL,GAAcxQ,MAAM,CAACwQ,MAArB;AAEA,WAAK+qD,OAAL,CAAan7D,IAAb,CAAmBJ,MAAM,CAACu7D,OAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKpkE,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,kBAAS;AAER,UAAM0R,MAAM,GAAG,EAAf;AAEA,UAAK,KAAKupD,IAAL,KAAc,CAAnB,EAAuBvpD,MAAM,CAACupD,IAAP,GAAc,KAAKA,IAAnB;AACvB,UAAK,KAAKC,UAAL,KAAoB,CAAzB,EAA6BxpD,MAAM,CAACwpD,UAAP,GAAoB,KAAKA,UAAzB;AAC7B,UAAK,KAAK9qD,MAAL,KAAgB,CAArB,EAAyBsB,MAAM,CAACtB,MAAP,GAAgB,KAAKA,MAArB;AACzB,UAAK,KAAK+qD,OAAL,CAAa9nE,CAAb,KAAmB,GAAnB,IAA0B,KAAK8nE,OAAL,CAAaxnE,CAAb,KAAmB,GAAlD,EAAwD+d,MAAM,CAACypD,OAAP,GAAiB,KAAKA,OAAL,CAAa75C,OAAb,EAAjB;AAExD5P,MAAAA,MAAM,CAAC5C,MAAP,GAAgB,KAAKA,MAAL,CAAY7I,MAAZ,CAAoB,KAApB,EAA4ByL,MAA5C;AACA,aAAOA,MAAM,CAAC5C,MAAP,CAAcpR,MAArB;AAEA,aAAOgU,MAAP;AAEA;;;;;;IAIIuqG,e;;;;;AAEL,6BAAc;AAAA;;AAAA;;AAEb,mCAAO,IAAI/iF,iBAAJ,CAAuB,EAAvB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC,CAAP;AAEA,YAAKgjF,iBAAL,GAAyB,IAAzB;AAEA,YAAK3iF,KAAL,GAAa,CAAb;AANa;AAQb;;;;WAED,wBAAgBs/B,KAAhB,EAAwB;AAEvB,UAAM/pD,MAAM,GAAG,KAAKA,MAApB;AAEA,UAAMqqB,GAAG,GAAG/mC,OAAO,GAAG,CAAV,GAAcymE,KAAK,CAACjgE,KAApB,GAA4B,KAAK2gC,KAA7C;AACA,UAAMH,MAAM,GAAG,KAAK+hC,OAAL,CAAa/4D,KAAb,GAAqB,KAAK+4D,OAAL,CAAa94D,MAAjD;AACA,UAAMsa,GAAG,GAAGk8C,KAAK,CAAC94C,QAAN,IAAkBjR,MAAM,CAAC6N,GAArC;;AAEA,UAAKwc,GAAG,KAAKrqB,MAAM,CAACqqB,GAAf,IAAsBC,MAAM,KAAKtqB,MAAM,CAACsqB,MAAxC,IAAkDzc,GAAG,KAAK7N,MAAM,CAAC6N,GAAtE,EAA4E;AAE3E7N,QAAAA,MAAM,CAACqqB,GAAP,GAAaA,GAAb;AACArqB,QAAAA,MAAM,CAACsqB,MAAP,GAAgBA,MAAhB;AACAtqB,QAAAA,MAAM,CAAC6N,GAAP,GAAaA,GAAb;AACA7N,QAAAA,MAAM,CAAC6qB,sBAAP;AAEA;;AAED,0FAAsBk/B,KAAtB;AAEA;;;WAED,cAAMj5D,MAAN,EAAe;AAEd,gFAAYA,MAAZ;;AAEA,WAAK25B,KAAL,GAAa35B,MAAM,CAAC25B,KAApB;AAEA,aAAO,IAAP;AAEA;;;;EAzC4BoiF,W;;IA6CxBQ,S;;;;;AAEL,qBAAap9G,KAAb,EAAoB27D,SAApB,EAA4F;AAAA;;AAAA,QAA7D36C,QAA6D,uEAAlD,CAAkD;AAAA,QAA/CnnB,KAA+C,uEAAvC1G,IAAI,CAACC,EAAL,GAAU,CAA6B;AAAA,QAA1BkpE,QAA0B,uEAAf,CAAe;AAAA,QAAZttB,KAAY,uEAAJ,CAAI;;AAAA;;AAE3F,mCAAOhvC,KAAP,EAAc27D,SAAd;AAEA,YAAKU,WAAL,GAAmB,IAAnB;AAEA,YAAKvqE,IAAL,GAAY,WAAZ;;AAEA,YAAKwhB,QAAL,CAAcrS,IAAd,CAAoBse,QAAQ,CAACG,SAA7B;;AACA,YAAKiB,YAAL;;AAEA,YAAKluB,MAAL,GAAc,IAAI8sB,QAAJ,EAAd;AAEA,YAAKyB,QAAL,GAAgBA,QAAhB;AACA,YAAKnnB,KAAL,GAAaA,KAAb;AACA,YAAKyiE,QAAL,GAAgBA,QAAhB;AACA,YAAKttB,KAAL,GAAaA,KAAb,CAhB2F,CAgBvE;;AAEpB,YAAK+B,MAAL,GAAc,IAAImsE,eAAJ,EAAd;AAlB2F;AAoB3F;;;;SAED,eAAY;AAEX;AACA;AACA,aAAO,KAAKvhD,SAAL,GAAiBxoE,IAAI,CAACC,EAA7B;AAEA,K;SAED,aAAWiqH,KAAX,EAAmB;AAElB;AACA,WAAK1hD,SAAL,GAAiB0hD,KAAK,GAAGlqH,IAAI,CAACC,EAA9B;AAEA;;;WAED,mBAAU;AAET,WAAK29C,MAAL,CAAYtnC,OAAZ;AAEA;;;WAED,cAAM5I,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,0EAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKjD,QAAL,GAAgBngB,MAAM,CAACmgB,QAAvB;AACA,WAAKnnB,KAAL,GAAagH,MAAM,CAAChH,KAApB;AACA,WAAKyiE,QAAL,GAAgBz7D,MAAM,CAACy7D,QAAvB;AACA,WAAKttB,KAAL,GAAanuC,MAAM,CAACmuC,KAApB;AAEA,WAAKv8C,MAAL,GAAcoO,MAAM,CAACpO,MAAP,CAAciX,KAAd,EAAd;AAEA,WAAKqnC,MAAL,GAAclwC,MAAM,CAACkwC,MAAP,CAAcrnC,KAAd,EAAd;AAEA,aAAO,IAAP;AAEA;;;;EA5DsB6yG,K;;AAgExB,IAAM18B,iBAAiB,GAAG,aAAc,IAAIpmE,OAAJ,EAAxC;;AACA,IAAM6jG,mBAAmB,GAAG,aAAc,IAAItuG,OAAJ,EAA1C;;AACA,IAAMuuG,WAAW,GAAG,aAAc,IAAIvuG,OAAJ,EAAlC;;IAEMwuG,gB;;;;;AAEL,8BAAc;AAAA;;AAAA;;AAEb,mCAAO,IAAIrjF,iBAAJ,CAAuB,EAAvB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC,CAAP;AAEA,YAAKkmC,kBAAL,GAA0B,IAA1B;AAEA,YAAKw8C,aAAL,GAAqB,IAAI/jH,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AAEA,YAAKgkH,cAAL,GAAsB,CAAtB;AAEA,YAAKC,UAAL,GAAkB,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAIx1G,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAfiB,EAgBjB;AACA,QAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAjBiB,EAkBjB;AACA,QAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAnBiB,EAoBjB;AACA,QAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CArBiB,EAsBjB;AACA,QAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAvBiB,EAwBjB;AACA,QAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAzBiB,CAAlB;AA4BA,YAAKk2G,eAAL,GAAuB,CACtB,IAAIzuG,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADsB,EACE,IAAIA,OAAJ,CAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CADF,EAC4B,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAD5B,EAEtB,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAE,CAArB,CAFsB,EAEI,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAFJ,EAE4B,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAE,CAAlB,EAAqB,CAArB,CAF5B,CAAvB;AAKA,YAAK0uG,QAAL,GAAgB,CACf,IAAI1uG,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADe,EACS,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADT,EACiC,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADjC,EAEf,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAFe,EAES,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAFT,EAEiC,IAAIA,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAE,CAArB,CAFjC,CAAhB;AA3Ca;AAgDb;;;;WAED,wBAAgB8qD,KAAhB,EAA2C;AAAA,UAApBmjD,aAAoB,uEAAJ,CAAI;AAE1C,UAAMltG,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMitG,YAAY,GAAG,KAAKr+G,MAA1B;AAEA,UAAMif,GAAG,GAAGk8C,KAAK,CAAC94C,QAAN,IAAkBjR,MAAM,CAAC6N,GAArC;;AAEA,UAAKA,GAAG,KAAK7N,MAAM,CAAC6N,GAApB,EAA0B;AAEzB7N,QAAAA,MAAM,CAAC6N,GAAP,GAAaA,GAAb;AACA7N,QAAAA,MAAM,CAAC6qB,sBAAP;AAEA;;AAED0iF,MAAAA,mBAAmB,CAACp8F,qBAApB,CAA2C44C,KAAK,CAAC1pD,WAAjD;;AACAL,MAAAA,MAAM,CAACuD,QAAP,CAAgBrS,IAAhB,CAAsBq8G,mBAAtB;;AAEAC,MAAAA,WAAW,CAACt8G,IAAZ,CAAkB8O,MAAM,CAACuD,QAAzB;;AACAiqG,MAAAA,WAAW,CAAC7qG,GAAZ,CAAiB,KAAK+qG,eAAL,CAAsBR,aAAtB,CAAjB;;AACAltG,MAAAA,MAAM,CAACqL,EAAP,CAAUna,IAAV,CAAgB,KAAKy8G,QAAL,CAAeT,aAAf,CAAhB;AACAltG,MAAAA,MAAM,CAACsR,MAAP,CAAek8F,WAAf;AACAxtG,MAAAA,MAAM,CAACgS,iBAAP;AAEAi7F,MAAAA,YAAY,CAACpsF,eAAb,CAA8B,CAAE0sF,mBAAmB,CAAChpH,CAApD,EAAuD,CAAEgpH,mBAAmB,CAAC1oH,CAA7E,EAAgF,CAAE0oH,mBAAmB,CAAC91G,CAAtG;;AAEAq4E,MAAAA,iBAAiB,CAAC9jF,gBAAlB,CAAoCgU,MAAM,CAACG,gBAA3C,EAA6DH,MAAM,CAACE,kBAApE;;AACA,WAAKiuD,QAAL,CAAc4lB,uBAAd,CAAuCjE,iBAAvC;AAEA;;;;EAhF6B+8B,W;;IAoFzBe,U;;;;;AAEL,sBAAa39G,KAAb,EAAoB27D,SAApB,EAAyD;AAAA;;AAAA,QAA1B36C,QAA0B,uEAAf,CAAe;AAAA,QAAZguB,KAAY,uEAAJ,CAAI;;AAAA;;AAExD,mCAAOhvC,KAAP,EAAc27D,SAAd;AAEA,YAAKa,YAAL,GAAoB,IAApB;AAEA,YAAK1qE,IAAL,GAAY,YAAZ;AAEA,YAAKkvB,QAAL,GAAgBA,QAAhB;AACA,YAAKguB,KAAL,GAAaA,KAAb,CATwD,CASpC;;AAEpB,YAAK+B,MAAL,GAAc,IAAIysE,gBAAJ,EAAd;AAXwD;AAaxD;;;;SAED,eAAY;AAEX;AACA;AACA,aAAO,KAAK7hD,SAAL,GAAiB,CAAjB,GAAqBxoE,IAAI,CAACC,EAAjC;AAEA,K;SAED,aAAWiqH,KAAX,EAAmB;AAElB;AACA,WAAK1hD,SAAL,GAAiB0hD,KAAK,IAAK,IAAIlqH,IAAI,CAACC,EAAd,CAAtB;AAEA;;;WAED,mBAAU;AAET,WAAK29C,MAAL,CAAYtnC,OAAZ;AAEA;;;WAED,cAAM5I,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,2EAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKjD,QAAL,GAAgBngB,MAAM,CAACmgB,QAAvB;AACA,WAAKguB,KAAL,GAAanuC,MAAM,CAACmuC,KAApB;AAEA,WAAK+B,MAAL,GAAclwC,MAAM,CAACkwC,MAAP,CAAcrnC,KAAd,EAAd;AAEA,aAAO,IAAP;AAEA;;;;EAjDuB6yG,K;;IAqDnBqB,sB;;;;;AAEL,oCAAc;AAAA;;AAAA;;AAEb,mCAAO,IAAItiE,kBAAJ,CAAwB,CAAE,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAE,CAArC,EAAwC,GAAxC,EAA6C,GAA7C,CAAP;AAEA,YAAKuiE,wBAAL,GAAgC,IAAhC;AAJa;AAMb;;;EARmCjB,W;;IAY/BkB,gB;;;;;AAEL,4BAAa99G,KAAb,EAAoB27D,SAApB,EAAgC;AAAA;;AAAA;;AAE/B,oCAAO37D,KAAP,EAAc27D,SAAd;AAEA,aAAKK,kBAAL,GAA0B,IAA1B;AAEA,aAAKlqE,IAAL,GAAY,kBAAZ;;AAEA,aAAKwhB,QAAL,CAAcrS,IAAd,CAAoBse,QAAQ,CAACG,SAA7B;;AACA,aAAKiB,YAAL;;AAEA,aAAKluB,MAAL,GAAc,IAAI8sB,QAAJ,EAAd;AAEA,aAAKwxB,MAAL,GAAc,IAAI6sE,sBAAJ,EAAd;AAb+B;AAe/B;;;;WAED,mBAAU;AAET,WAAK7sE,MAAL,CAAYtnC,OAAZ;AAEA;;;WAED,cAAM5I,MAAN,EAAe;AAEd,iFAAYA,MAAZ;;AAEA,WAAKpO,MAAL,GAAcoO,MAAM,CAACpO,MAAP,CAAciX,KAAd,EAAd;AACA,WAAKqnC,MAAL,GAAclwC,MAAM,CAACkwC,MAAP,CAAcrnC,KAAd,EAAd;AAEA,aAAO,IAAP;AAEA;;;;EAlC6B6yG,K;;IAsCzBwB,Y;;;;;AAEL,wBAAa/9G,KAAb,EAAoB27D,SAApB,EAAgC;AAAA;;AAAA;;AAE/B,oCAAO37D,KAAP,EAAc27D,SAAd;AAEA,aAAKC,cAAL,GAAsB,IAAtB;AAEA,aAAK9pE,IAAL,GAAY,cAAZ;AAN+B;AAQ/B;;;EAVyByqH,K;;IAcrByB,a;;;;;AAEL,yBAAah+G,KAAb,EAAoB27D,SAApB,EAAyD;AAAA;;AAAA,QAA1Bt4D,KAA0B,uEAAlB,EAAkB;AAAA,QAAdC,MAAc,uEAAL,EAAK;;AAAA;;AAExD,oCAAOtD,KAAP,EAAc27D,SAAd;AAEA,aAAKY,eAAL,GAAuB,IAAvB;AAEA,aAAKzqE,IAAL,GAAY,eAAZ;AAEA,aAAKuR,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AATwD;AAWxD;;;;SAED,eAAY;AAEX;AACA,aAAO,KAAKq4D,SAAL,GAAiB,KAAKt4D,KAAtB,GAA8B,KAAKC,MAAnC,GAA4CnQ,IAAI,CAACC,EAAxD;AAEA,K;SAED,aAAWiqH,KAAX,EAAmB;AAElB;AACA,WAAK1hD,SAAL,GAAiB0hD,KAAK,IAAK,KAAKh6G,KAAL,GAAa,KAAKC,MAAlB,GAA2BnQ,IAAI,CAACC,EAArC,CAAtB;AAEA;;;WAED,cAAMyN,MAAN,EAAe;AAEd,8EAAYA,MAAZ;;AAEA,WAAKwC,KAAL,GAAaxC,MAAM,CAACwC,KAApB;AACA,WAAKC,MAAL,GAAczC,MAAM,CAACyC,MAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQe,IAAR,EAAe;AAEd,UAAMJ,IAAI,6EAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC0O,MAAL,CAAYtP,KAAZ,GAAoB,KAAKA,KAAzB;AACAY,MAAAA,IAAI,CAAC0O,MAAL,CAAYrP,MAAZ,GAAqB,KAAKA,MAA1B;AAEA,aAAOW,IAAP;AAEA;;;;EAjD0Bs4G,K;AAqD5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;IAEM0B,mB;AAEL,iCAAc;AAAA;;AAEb,SAAKC,qBAAL,GAA6B,IAA7B;AAEA,SAAKniD,YAAL,GAAoB,EAApB;;AAEA,SAAM,IAAInpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,WAAKmpE,YAAL,CAAkB3pE,IAAlB,CAAwB,IAAI4c,OAAJ,EAAxB;AAEA;AAED;;;;WAED,aAAK+sD,YAAL,EAAoB;AAEnB,WAAM,IAAInpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuBqO,IAAvB,CAA6B86D,YAAY,CAAEnpE,CAAF,CAAzC;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAM,IAAIA,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuBgF,GAAvB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;AACA;;;;WACA,eAAOsZ,MAAP,EAAeze,MAAf,EAAwB;AAEvB;AAEA,UAAM6B,CAAC,GAAG4c,MAAM,CAAC5c,CAAjB;AAAA,UAAoBM,CAAC,GAAGsc,MAAM,CAACtc,CAA/B;AAAA,UAAkC4S,CAAC,GAAG0J,MAAM,CAAC1J,CAA7C;AAEA,UAAM22G,KAAK,GAAG,KAAKpiD,YAAnB,CANuB,CAQvB;;AACAtpE,MAAAA,MAAM,CAACwO,IAAP,CAAak9G,KAAK,CAAE,CAAF,CAAlB,EAA0B7kH,cAA1B,CAA0C,QAA1C,EATuB,CAWvB;;AACA7G,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,WAAWvpH,CAA/C;AACAnC,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,WAAW32G,CAA/C;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,WAAW7pH,CAA/C,EAduB,CAgBvB;;AACA7B,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAa7pH,CAAC,GAAGM,CAAjB,CAApC;AACAnC,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAavpH,CAAC,GAAG4S,CAAjB,CAApC;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAa,MAAM32G,CAAN,GAAUA,CAAV,GAAc,GAA3B,CAApC;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAa7pH,CAAC,GAAGkT,CAAjB,CAApC;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAa7pH,CAAC,GAAGA,CAAJ,GAAQM,CAAC,GAAGA,CAAzB,CAApC;AAEA,aAAOnC,MAAP;AAEA,K,CAED;AACA;AACA;;;;WACA,yBAAiBye,MAAjB,EAAyBze,MAAzB,EAAkC;AAEjC;AAEA,UAAM6B,CAAC,GAAG4c,MAAM,CAAC5c,CAAjB;AAAA,UAAoBM,CAAC,GAAGsc,MAAM,CAACtc,CAA/B;AAAA,UAAkC4S,CAAC,GAAG0J,MAAM,CAAC1J,CAA7C;AAEA,UAAM22G,KAAK,GAAG,KAAKpiD,YAAnB,CANiC,CAQjC;;AACAtpE,MAAAA,MAAM,CAACwO,IAAP,CAAak9G,KAAK,CAAE,CAAF,CAAlB,EAA0B7kH,cAA1B,CAA0C,QAA1C,EATiC,CASqB;AAEtD;;AACA7G,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiBvpH,CAArD,EAZiC,CAYyB;;AAC1DnC,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiB32G,CAArD;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiB7pH,CAArD,EAdiC,CAgBjC;;AACA7B,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiB7pH,CAAjB,GAAqBM,CAAzD,EAjBiC,CAiB6B;;AAC9DnC,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiBvpH,CAAjB,GAAqB4S,CAAzD;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,WAAW32G,CAAX,GAAeA,CAAf,GAAmB,QAAvD,EAnBiC,CAmBkC;;AACnE/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,MAAM,QAAN,GAAiB7pH,CAAjB,GAAqBkT,CAAzD;AACA/U,MAAAA,MAAM,CAACmzB,eAAP,CAAwBu4F,KAAK,CAAE,CAAF,CAA7B,EAAoC,YAAa7pH,CAAC,GAAGA,CAAJ,GAAQM,CAAC,GAAGA,CAAzB,CAApC,EArBiC,CAqBmC;;AAEpE,aAAOnC,MAAP;AAEA;;;WAED,aAAKqpE,EAAL,EAAU;AAET,WAAM,IAAIlpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuB8f,GAAvB,CAA4BopD,EAAE,CAACC,YAAH,CAAiBnpE,CAAjB,CAA5B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,qBAAakpE,EAAb,EAAiB/lE,CAAjB,EAAqB;AAEpB,WAAM,IAAInD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuBgzB,eAAvB,CAAwCk2C,EAAE,CAACC,YAAH,CAAiBnpE,CAAjB,CAAxC,EAA8DmD,CAA9D;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,eAAOA,CAAP,EAAW;AAEV,WAAM,IAAInD,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuB0G,cAAvB,CAAuCvD,CAAvC;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,cAAM+lE,EAAN,EAAU5hE,KAAV,EAAkB;AAEjB,WAAM,IAAItH,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,aAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuBiC,IAAvB,CAA6BinE,EAAE,CAACC,YAAH,CAAiBnpE,CAAjB,CAA7B,EAAmDsH,KAAnD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAQ4hE,EAAR,EAAa;AAEZ,WAAM,IAAIlpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,YAAK,CAAE,KAAKmpE,YAAL,CAAmBnpE,CAAnB,EAAuBsiB,MAAvB,CAA+B4mD,EAAE,CAACC,YAAH,CAAiBnpE,CAAjB,CAA/B,CAAP,EAA+D;AAE9D,iBAAO,KAAP;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;WAED,cAAMkpE,EAAN,EAAW;AAEV,aAAO,KAAKlkE,GAAL,CAAUkkE,EAAE,CAACC,YAAb,CAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK/jE,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,mBAAWvO,KAAX,EAA+B;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAE9B,UAAM0hE,YAAY,GAAG,KAAKA,YAA1B;;AAEA,WAAM,IAAInpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9BmpE,QAAAA,YAAY,CAAEnpE,CAAF,CAAZ,CAAkBgM,SAAlB,CAA6BlM,KAA7B,EAAoC2H,MAAM,GAAKzH,CAAC,GAAG,CAAnD;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAkC;AAAA,UAAzBF,KAAyB,uEAAjB,EAAiB;AAAA,UAAb2H,MAAa,uEAAJ,CAAI;AAEjC,UAAM0hE,YAAY,GAAG,KAAKA,YAA1B;;AAEA,WAAM,IAAInpE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9BmpE,QAAAA,YAAY,CAAEnpE,CAAF,CAAZ,CAAkB2vB,OAAlB,CAA2B7vB,KAA3B,EAAkC2H,MAAM,GAAKzH,CAAC,GAAG,CAAjD;AAEA;;AAED,aAAOF,KAAP;AAEA,K,CAED;AACA;;;;WACA,oBAAmBwe,MAAnB,EAA2BktG,OAA3B,EAAqC;AAEpC;AAEA,UAAM9pH,CAAC,GAAG4c,MAAM,CAAC5c,CAAjB;AAAA,UAAoBM,CAAC,GAAGsc,MAAM,CAACtc,CAA/B;AAAA,UAAkC4S,CAAC,GAAG0J,MAAM,CAAC1J,CAA7C,CAJoC,CAMpC;;AACA42G,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,QAAf,CAPoC,CASpC;;AACAA,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAWxpH,CAA1B;AACAwpH,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAW52G,CAA1B;AACA42G,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAW9pH,CAA1B,CAZoC,CAcpC;;AACA8pH,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAW9pH,CAAX,GAAeM,CAA9B;AACAwpH,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAWxpH,CAAX,GAAe4S,CAA9B;AACA42G,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,YAAa,IAAI52G,CAAJ,GAAQA,CAAR,GAAY,CAAzB,CAAf;AACA42G,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,WAAW9pH,CAAX,GAAekT,CAA9B;AACA42G,MAAAA,OAAO,CAAE,CAAF,CAAP,GAAe,YAAa9pH,CAAC,GAAGA,CAAJ,GAAQM,CAAC,GAAGA,CAAzB,CAAf;AAEA;;;;;;IAIIypH,U;;;;;AAEL,wBAA6D;AAAA;;AAAA,QAAhDviD,EAAgD,uEAA3C,IAAImiD,mBAAJ,EAA2C;AAAA,QAAhBtiD,SAAgB,uEAAJ,CAAI;;AAAA;;AAE5D,oCAAO1pE,SAAP,EAAkB0pE,SAAlB;AAEA,aAAKE,YAAL,GAAoB,IAApB;AAEA,aAAKC,EAAL,GAAUA,EAAV;AAN4D;AAQ5D;;;;WAED,cAAMj7D,MAAN,EAAe;AAEd,2EAAYA,MAAZ;;AAEA,WAAKi7D,EAAL,CAAQ76D,IAAR,CAAcJ,MAAM,CAACi7D,EAArB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUowB,IAAV,EAAiB;AAEhB,WAAKvwB,SAAL,GAAiBuwB,IAAI,CAACvwB,SAAtB,CAFgB,CAEiB;;AACjC,WAAKG,EAAL,CAAQl9D,SAAR,CAAmBstF,IAAI,CAACpwB,EAAxB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQz3D,IAAR,EAAe;AAEd,UAAMJ,IAAI,0EAAiBI,IAAjB,CAAV;;AAEAJ,MAAAA,IAAI,CAAC0O,MAAL,CAAYmpD,EAAZ,GAAiB,KAAKA,EAAL,CAAQv5C,OAAR,EAAjB;AAEA,aAAOte,IAAP;AAEA;;;;EAvCuBs4G,K;;IA2CnB+B,c;;;;;AAEL,0BAAazG,OAAb,EAAuB;AAAA;;AAAA;;AAEtB,oCAAOA,OAAP;AACA,aAAK9wG,QAAL,GAAgB,EAAhB;AAHsB;AAKtB;;;;WAED,cAAMtC,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAMigF,MAAM,GAAG,IAAIgB,UAAJ,CAAgBjhF,KAAK,CAACugF,OAAtB,CAAf;AACAN,MAAAA,MAAM,CAAC6D,OAAP,CAAgB9jF,KAAK,CAAC6zB,IAAtB;AACAosD,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB/jF,KAAK,CAAC2gF,aAA/B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2BhkF,KAAK,CAACygF,eAAjC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAW+1G,IAAX,EAAkB;AAEnC,YAAI;AAEHjE,UAAAA,MAAM,CAAEj/E,KAAK,CAAC1wB,KAAN,CAAaD,IAAI,CAACC,KAAL,CAAY4zG,IAAZ,CAAb,CAAF,CAAN;AAEA,SAJD,CAIE,OAAQjhH,CAAR,EAAY;AAEb,cAAKk9G,OAAL,EAAe;AAEdA,YAAAA,OAAO,CAAEl9G,CAAF,CAAP;AAEA,WAJD,MAIO;AAEN1B,YAAAA,OAAO,CAACkD,KAAR,CAAexB,CAAf;AAEA;;AAED+9B,UAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AAEA;AAED,OAtBD,EAsBG+xG,UAtBH,EAsBeC,OAtBf;AAwBA;;;WAED,eAAOvqB,IAAP,EAAc;AAEb,UAAMnlF,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,eAASw3G,UAAT,CAAqBj/G,IAArB,EAA4B;AAE3B,YAAKyH,QAAQ,CAAEzH,IAAF,CAAR,KAAqBrN,SAA1B,EAAsC;AAErC4F,UAAAA,OAAO,CAACC,IAAR,CAAc,yCAAd,EAAyDwH,IAAzD;AAEA;;AAED,eAAOyH,QAAQ,CAAEzH,IAAF,CAAf;AAEA;;AAED,UAAMokB,QAAQ,GAAG46F,cAAc,CAACE,sBAAf,CAAuCtyB,IAAI,CAACp6F,IAA5C,CAAjB;AAEA,UAAKo6F,IAAI,CAACt4F,IAAL,KAAc3B,SAAnB,EAA+ByxB,QAAQ,CAAC9vB,IAAT,GAAgBs4F,IAAI,CAACt4F,IAArB;AAC/B,UAAKs4F,IAAI,CAAC5sF,IAAL,KAAcrN,SAAnB,EAA+ByxB,QAAQ,CAACpkB,IAAT,GAAgB4sF,IAAI,CAAC5sF,IAArB;AAC/B,UAAK4sF,IAAI,CAAClsF,KAAL,KAAe/N,SAAf,IAA4ByxB,QAAQ,CAAC1jB,KAAT,KAAmB/N,SAApD,EAAgEyxB,QAAQ,CAAC1jB,KAAT,CAAekB,MAAf,CAAuBgrF,IAAI,CAAClsF,KAA5B;AAChE,UAAKksF,IAAI,CAAC7iE,SAAL,KAAmBp3B,SAAxB,EAAoCyxB,QAAQ,CAAC2F,SAAT,GAAqB6iE,IAAI,CAAC7iE,SAA1B;AACpC,UAAK6iE,IAAI,CAAC5iE,SAAL,KAAmBr3B,SAAxB,EAAoCyxB,QAAQ,CAAC4F,SAAT,GAAqB4iE,IAAI,CAAC5iE,SAA1B;AACpC,UAAK4iE,IAAI,CAAC3iE,KAAL,KAAet3B,SAApB,EAAgCyxB,QAAQ,CAAC6F,KAAT,GAAiB2iE,IAAI,CAAC3iE,KAAtB;AAChC,UAAK2iE,IAAI,CAAC1iE,UAAL,KAAoBv3B,SAAzB,EAAqCyxB,QAAQ,CAAC8F,UAAT,GAAsB,IAAI1oB,KAAJ,GAAYI,MAAZ,CAAoBgrF,IAAI,CAAC1iE,UAAzB,CAAtB;AACrC,UAAK0iE,IAAI,CAACziE,cAAL,KAAwBx3B,SAA7B,EAAyCyxB,QAAQ,CAAC+F,cAAT,GAA0ByiE,IAAI,CAACziE,cAA/B;AACzC,UAAKyiE,IAAI,CAACxiE,QAAL,KAAkBz3B,SAAlB,IAA+ByxB,QAAQ,CAACgG,QAAT,KAAsBz3B,SAA1D,EAAsEyxB,QAAQ,CAACgG,QAAT,CAAkBxoB,MAAlB,CAA0BgrF,IAAI,CAACxiE,QAA/B;AACtE,UAAKwiE,IAAI,CAACtiE,QAAL,KAAkB33B,SAAlB,IAA+ByxB,QAAQ,CAACkG,QAAT,KAAsB33B,SAA1D,EAAsEyxB,QAAQ,CAACkG,QAAT,CAAkB1oB,MAAlB,CAA0BgrF,IAAI,CAACtiE,QAA/B;AACtE,UAAKsiE,IAAI,CAACriE,iBAAL,KAA2B53B,SAAhC,EAA4CyxB,QAAQ,CAACmG,iBAAT,GAA6BqiE,IAAI,CAACriE,iBAAlC;AAC5C,UAAKqiE,IAAI,CAACpiE,aAAL,KAAuB73B,SAAvB,IAAoCyxB,QAAQ,CAACoG,aAAT,KAA2B73B,SAApE,EAAgFyxB,QAAQ,CAACoG,aAAT,CAAuB5oB,MAAvB,CAA+BgrF,IAAI,CAACpiE,aAApC;AAChF,UAAKoiE,IAAI,CAACniE,SAAL,KAAmB93B,SAAxB,EAAoCyxB,QAAQ,CAACqG,SAAT,GAAqBmiE,IAAI,CAACniE,SAA1B;AACpC,UAAKmiE,IAAI,CAACliE,SAAL,KAAmB/3B,SAAxB,EAAoCyxB,QAAQ,CAACsG,SAAT,GAAqBkiE,IAAI,CAACliE,SAA1B;AACpC,UAAKkiE,IAAI,CAACjiE,kBAAL,KAA4Bh4B,SAAjC,EAA6CyxB,QAAQ,CAACuG,kBAAT,GAA8BiiE,IAAI,CAACjiE,kBAAnC;AAC7C,UAAKiiE,IAAI,CAAC5hE,WAAL,KAAqBr4B,SAA1B,EAAsCyxB,QAAQ,CAAC4G,WAAT,GAAuB4hE,IAAI,CAAC5hE,WAA5B;AACtC,UAAK4hE,IAAI,CAAC3hE,cAAL,KAAwBt4B,SAA7B,EAAyCyxB,QAAQ,CAAC6G,cAAT,GAA0B2hE,IAAI,CAAC3hE,cAA/B;AACzC,UAAK2hE,IAAI,CAAC1hE,yBAAL,KAAmCv4B,SAAxC,EAAoDyxB,QAAQ,CAAC8G,yBAAT,GAAqC0hE,IAAI,CAAC1hE,yBAA1C;AACpD,UAAK0hE,IAAI,CAAC5/D,YAAL,KAAsBr6B,SAA3B,EAAuCyxB,QAAQ,CAAC4I,YAAT,GAAwB4/D,IAAI,CAAC5/D,YAA7B;AACvC,UAAK4/D,IAAI,CAAC1/D,SAAL,KAAmBv6B,SAAxB,EAAoCyxB,QAAQ,CAAC8I,SAAT,GAAqB0/D,IAAI,CAAC1/D,SAA1B;AACpC,UAAK0/D,IAAI,CAACx/D,mBAAL,KAA6Bz6B,SAAlC,EAA8CyxB,QAAQ,CAACgJ,mBAAT,GAA+Bw/D,IAAI,CAACx/D,mBAApC;AAC9C,UAAKw/D,IAAI,CAACv/D,gBAAL,KAA0B16B,SAA1B,IAAuCyxB,QAAQ,CAACiJ,gBAAT,KAA8B16B,SAA1E,EAAsFyxB,QAAQ,CAACiJ,gBAAT,CAA0BzrB,MAA1B,CAAkCgrF,IAAI,CAACv/D,gBAAvC;AACtF,UAAKu/D,IAAI,CAAC7+D,GAAL,KAAap7B,SAAlB,EAA8ByxB,QAAQ,CAAC2J,GAAT,GAAe6+D,IAAI,CAAC7+D,GAApB;AAC9B,UAAK6+D,IAAI,CAAC/iE,WAAL,KAAqBl3B,SAA1B,EAAsCyxB,QAAQ,CAACyF,WAAT,GAAuB+iE,IAAI,CAAC/iE,WAA5B;AACtC,UAAK+iE,IAAI,CAACrlE,QAAL,KAAkB50B,SAAvB,EAAmCyxB,QAAQ,CAACmD,QAAT,GAAoBqlE,IAAI,CAACrlE,QAAzB;AACnC,UAAKqlE,IAAI,CAACjgE,OAAL,KAAiBh6B,SAAtB,EAAkCyxB,QAAQ,CAACuI,OAAT,GAAmBigE,IAAI,CAACjgE,OAAxB;AAClC,UAAKigE,IAAI,CAACplE,IAAL,KAAc70B,SAAnB,EAA+ByxB,QAAQ,CAACoD,IAAT,GAAgBolE,IAAI,CAACplE,IAArB;AAC/B,UAAKolE,IAAI,CAAC5jE,UAAL,KAAoBr2B,SAAzB,EAAqCyxB,QAAQ,CAAC4E,UAAT,GAAsB4jE,IAAI,CAAC5jE,UAA3B;AACrC,UAAK4jE,IAAI,CAACllE,OAAL,KAAiB/0B,SAAtB,EAAkCyxB,QAAQ,CAACsD,OAAT,GAAmBklE,IAAI,CAACllE,OAAxB;AAClC,UAAKklE,IAAI,CAACjlE,WAAL,KAAqBh1B,SAA1B,EAAsCyxB,QAAQ,CAACuD,WAAT,GAAuBilE,IAAI,CAACjlE,WAA5B;AACtC,UAAKilE,IAAI,CAACl/D,SAAL,KAAmB/6B,SAAxB,EAAoCyxB,QAAQ,CAACsJ,SAAT,GAAqBk/D,IAAI,CAACl/D,SAA1B;AACpC,UAAKk/D,IAAI,CAACzkE,SAAL,KAAmBx1B,SAAxB,EAAoCyxB,QAAQ,CAAC+D,SAAT,GAAqBykE,IAAI,CAACzkE,SAA1B;AACpC,UAAKykE,IAAI,CAACxkE,UAAL,KAAoBz1B,SAAzB,EAAqCyxB,QAAQ,CAACgE,UAAT,GAAsBwkE,IAAI,CAACxkE,UAA3B;AACrC,UAAKwkE,IAAI,CAAC3jE,UAAL,KAAoBt2B,SAAzB,EAAqCyxB,QAAQ,CAAC6E,UAAT,GAAsB2jE,IAAI,CAAC3jE,UAA3B;AAErC,UAAK2jE,IAAI,CAAChkE,YAAL,KAAsBj2B,SAA3B,EAAuCyxB,QAAQ,CAACwE,YAAT,GAAwBgkE,IAAI,CAAChkE,YAA7B;AACvC,UAAKgkE,IAAI,CAACvkE,gBAAL,KAA0B11B,SAA/B,EAA2CyxB,QAAQ,CAACiE,gBAAT,GAA4BukE,IAAI,CAACvkE,gBAAjC;AAC3C,UAAKukE,IAAI,CAACtkE,WAAL,KAAqB31B,SAA1B,EAAsCyxB,QAAQ,CAACkE,WAAT,GAAuBskE,IAAI,CAACtkE,WAA5B;AACtC,UAAKskE,IAAI,CAACrkE,UAAL,KAAoB51B,SAAzB,EAAqCyxB,QAAQ,CAACmE,UAAT,GAAsBqkE,IAAI,CAACrkE,UAA3B;AACrC,UAAKqkE,IAAI,CAACpkE,eAAL,KAAyB71B,SAA9B,EAA0CyxB,QAAQ,CAACoE,eAAT,GAA2BokE,IAAI,CAACpkE,eAAhC;AAC1C,UAAKokE,IAAI,CAACnkE,WAAL,KAAqB91B,SAA1B,EAAsCyxB,QAAQ,CAACqE,WAAT,GAAuBmkE,IAAI,CAACnkE,WAA5B;AACtC,UAAKmkE,IAAI,CAAClkE,YAAL,KAAsB/1B,SAA3B,EAAuCyxB,QAAQ,CAACsE,YAAT,GAAwBkkE,IAAI,CAAClkE,YAA7B;AACvC,UAAKkkE,IAAI,CAACjkE,YAAL,KAAsBh2B,SAA3B,EAAuCyxB,QAAQ,CAACuE,YAAT,GAAwBikE,IAAI,CAACjkE,YAA7B;AAEvC,UAAKikE,IAAI,CAACj/D,SAAL,KAAmBh7B,SAAxB,EAAoCyxB,QAAQ,CAACuJ,SAAT,GAAqBi/D,IAAI,CAACj/D,SAA1B;AACpC,UAAKi/D,IAAI,CAACh/D,kBAAL,KAA4Bj7B,SAAjC,EAA6CyxB,QAAQ,CAACwJ,kBAAT,GAA8Bg/D,IAAI,CAACh/D,kBAAnC;AAC7C,UAAKg/D,IAAI,CAAC/+D,gBAAL,KAA0Bl7B,SAA/B,EAA2CyxB,QAAQ,CAACyJ,gBAAT,GAA4B++D,IAAI,CAAC/+D,gBAAjC;AAC3C,UAAK++D,IAAI,CAAC9+D,iBAAL,KAA2Bn7B,SAAhC,EAA4CyxB,QAAQ,CAAC0J,iBAAT,GAA6B8+D,IAAI,CAAC9+D,iBAAlC;AAE5C,UAAK8+D,IAAI,CAAC3tF,QAAL,KAAkBtM,SAAvB,EAAmCyxB,QAAQ,CAACnlB,QAAT,GAAoB2tF,IAAI,CAAC3tF,QAAzB;AAEnC,UAAK2tF,IAAI,CAACr/D,SAAL,KAAmB,CAAxB,EAA4BnJ,QAAQ,CAACmJ,SAAT,GAAqBq/D,IAAI,CAACr/D,SAA1B;AAC5B,UAAKq/D,IAAI,CAACp/D,QAAL,KAAkB76B,SAAvB,EAAmCyxB,QAAQ,CAACoJ,QAAT,GAAoBo/D,IAAI,CAACp/D,QAAzB;AACnC,UAAKo/D,IAAI,CAACn/D,OAAL,KAAiB96B,SAAtB,EAAkCyxB,QAAQ,CAACqJ,OAAT,GAAmBm/D,IAAI,CAACn/D,OAAxB;AAClC,UAAKm/D,IAAI,CAACxvE,KAAL,KAAezqB,SAApB,EAAgCyxB,QAAQ,CAAChH,KAAT,GAAiBwvE,IAAI,CAACxvE,KAAtB;AAEhC,UAAKwvE,IAAI,CAACzjE,aAAL,KAAuBx2B,SAA5B,EAAwCyxB,QAAQ,CAAC+E,aAAT,GAAyByjE,IAAI,CAACzjE,aAA9B;AACxC,UAAKyjE,IAAI,CAACxjE,mBAAL,KAA6Bz2B,SAAlC,EAA8CyxB,QAAQ,CAACgF,mBAAT,GAA+BwjE,IAAI,CAACxjE,mBAApC;AAC9C,UAAKwjE,IAAI,CAACvjE,kBAAL,KAA4B12B,SAAjC,EAA6CyxB,QAAQ,CAACiF,kBAAT,GAA8BujE,IAAI,CAACvjE,kBAAnC;AAE7C,UAAKujE,IAAI,CAACtjE,SAAL,KAAmB32B,SAAxB,EAAoCyxB,QAAQ,CAACkF,SAAT,GAAqBsjE,IAAI,CAACtjE,SAA1B;AAEpC,UAAKsjE,IAAI,CAACrjE,eAAL,KAAyB52B,SAA9B,EAA0CyxB,QAAQ,CAACmF,eAAT,GAA2BqjE,IAAI,CAACrjE,eAAhC;AAC1C,UAAKqjE,IAAI,CAACpjE,kBAAL,KAA4B72B,SAAjC,EAA6CyxB,QAAQ,CAACoF,kBAAT,GAA8BojE,IAAI,CAACpjE,kBAAnC;AAE7C,UAAKojE,IAAI,CAAC7rE,OAAL,KAAiBpuB,SAAtB,EAAkCyxB,QAAQ,CAACrD,OAAT,GAAmB6rE,IAAI,CAAC7rE,OAAxB;AAElC,UAAK6rE,IAAI,CAACnjE,UAAL,KAAoB92B,SAAzB,EAAqCyxB,QAAQ,CAACqF,UAAT,GAAsBmjE,IAAI,CAACnjE,UAA3B;AAErC,UAAKmjE,IAAI,CAAC5lF,QAAL,KAAkBrU,SAAvB,EAAmCyxB,QAAQ,CAACpd,QAAT,GAAoB4lF,IAAI,CAAC5lF,QAAzB;;AAEnC,UAAK4lF,IAAI,CAACnlE,YAAL,KAAsB90B,SAA3B,EAAuC;AAEtC,YAAK,OAAOi6F,IAAI,CAACnlE,YAAZ,KAA6B,QAAlC,EAA6C;AAE5CrD,UAAAA,QAAQ,CAACqD,YAAT,GAA0BmlE,IAAI,CAACnlE,YAAL,GAAoB,CAAtB,GAA4B,IAA5B,GAAmC,KAA3D;AAEA,SAJD,MAIO;AAENrD,UAAAA,QAAQ,CAACqD,YAAT,GAAwBmlE,IAAI,CAACnlE,YAA7B;AAEA;AAED,OArGY,CAuGb;;;AAEA,UAAKmlE,IAAI,CAACvzD,QAAL,KAAkB1mC,SAAvB,EAAmC;AAElC,aAAM,IAAMqN,IAAZ,IAAoB4sF,IAAI,CAACvzD,QAAzB,EAAoC;AAEnC,cAAMsB,OAAO,GAAGiyD,IAAI,CAACvzD,QAAL,CAAer5B,IAAf,CAAhB;AAEAokB,UAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,IAA4B,EAA5B;;AAEA,kBAAS26B,OAAO,CAACnoC,IAAjB;AAEC,iBAAK,GAAL;AACC4xB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkCwqH,UAAU,CAAEtkF,OAAO,CAAClmC,KAAV,CAA5C;AACA;;AAED,iBAAK,GAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAI+M,KAAJ,GAAYI,MAAZ,CAAoB+4B,OAAO,CAAClmC,KAA5B,CAAlC;AACA;;AAED,iBAAK,IAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAI+E,OAAJ,GAAc8F,SAAd,CAAyBq7B,OAAO,CAAClmC,KAAjC,CAAlC;AACA;;AAED,iBAAK,IAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAIib,OAAJ,GAAcpQ,SAAd,CAAyBq7B,OAAO,CAAClmC,KAAjC,CAAlC;AACA;;AAED,iBAAK,IAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAIwT,OAAJ,GAAc3I,SAAd,CAAyBq7B,OAAO,CAAClmC,KAAjC,CAAlC;AACA;;AAED,iBAAK,IAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAI6G,OAAJ,GAAcgE,SAAd,CAAyBq7B,OAAO,CAAClmC,KAAjC,CAAlC;AACA;;AAED,iBAAK,IAAL;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkC,IAAI0lB,OAAJ,GAAc7a,SAAd,CAAyBq7B,OAAO,CAAClmC,KAAjC,CAAlC;AACA;;AAED;AACC2vB,cAAAA,QAAQ,CAACiV,QAAT,CAAmBr5B,IAAnB,EAA0BvL,KAA1B,GAAkCkmC,OAAO,CAAClmC,KAA1C;AA/BF;AAmCA;AAED;;AAED,UAAKm4F,IAAI,CAAC/yD,OAAL,KAAiBlnC,SAAtB,EAAkCyxB,QAAQ,CAACyV,OAAT,GAAmB+yD,IAAI,CAAC/yD,OAAxB;AAClC,UAAK+yD,IAAI,CAAC9yD,YAAL,KAAsBnnC,SAA3B,EAAuCyxB,QAAQ,CAAC0V,YAAT,GAAwB8yD,IAAI,CAAC9yD,YAA7B;AACvC,UAAK8yD,IAAI,CAAC7yD,cAAL,KAAwBpnC,SAA7B,EAAyCyxB,QAAQ,CAAC2V,cAAT,GAA0B6yD,IAAI,CAAC7yD,cAA/B;;AAEzC,UAAK6yD,IAAI,CAAC1yD,UAAL,KAAoBvnC,SAAzB,EAAqC;AAEpC,aAAM,IAAM+xB,GAAZ,IAAmBkoE,IAAI,CAAC1yD,UAAxB,EAAqC;AAEpC9V,UAAAA,QAAQ,CAAC8V,UAAT,CAAqBxV,GAArB,IAA6BkoE,IAAI,CAAC1yD,UAAL,CAAiBxV,GAAjB,CAA7B;AAEA;AAED,OApKY,CAsKb;;;AAEA,UAAKkoE,IAAI,CAACuyB,OAAL,KAAiBxsH,SAAtB,EAAkCyxB,QAAQ,CAACyF,WAAT,GAAuB+iE,IAAI,CAACuyB,OAAL,KAAiB,CAAxC,CAxKrB,CAwKgE;AAE7E;;AAEA,UAAKvyB,IAAI,CAACrqF,IAAL,KAAc5P,SAAnB,EAA+ByxB,QAAQ,CAAC7hB,IAAT,GAAgBqqF,IAAI,CAACrqF,IAArB;AAC/B,UAAKqqF,IAAI,CAACt/D,eAAL,KAAyB36B,SAA9B,EAA0CyxB,QAAQ,CAACkJ,eAAT,GAA2Bs/D,IAAI,CAACt/D,eAAhC,CA7K7B,CA+Kb;;AAEA,UAAKs/D,IAAI,CAACvhE,GAAL,KAAa14B,SAAlB,EAA8ByxB,QAAQ,CAACiH,GAAT,GAAe4zF,UAAU,CAAEryB,IAAI,CAACvhE,GAAP,CAAzB;AAC9B,UAAKuhE,IAAI,CAACthE,MAAL,KAAgB34B,SAArB,EAAiCyxB,QAAQ,CAACkH,MAAT,GAAkB2zF,UAAU,CAAEryB,IAAI,CAACthE,MAAP,CAA5B;AAEjC,UAAKshE,IAAI,CAACrhE,QAAL,KAAkB54B,SAAvB,EAAmCyxB,QAAQ,CAACmH,QAAT,GAAoB0zF,UAAU,CAAEryB,IAAI,CAACrhE,QAAP,CAA9B;AAEnC,UAAKqhE,IAAI,CAAChhE,OAAL,KAAiBj5B,SAAtB,EAAkCyxB,QAAQ,CAACwH,OAAT,GAAmBqzF,UAAU,CAAEryB,IAAI,CAAChhE,OAAP,CAA7B;AAClC,UAAKghE,IAAI,CAAC/gE,SAAL,KAAmBl5B,SAAxB,EAAoCyxB,QAAQ,CAACyH,SAAT,GAAqB+gE,IAAI,CAAC/gE,SAA1B;AAEpC,UAAK+gE,IAAI,CAAC9gE,SAAL,KAAmBn5B,SAAxB,EAAoCyxB,QAAQ,CAAC0H,SAAT,GAAqBmzF,UAAU,CAAEryB,IAAI,CAAC9gE,SAAP,CAA/B;AACpC,UAAK8gE,IAAI,CAAC7gE,aAAL,KAAuBp5B,SAA5B,EAAwCyxB,QAAQ,CAAC2H,aAAT,GAAyB6gE,IAAI,CAAC7gE,aAA9B;;AACxC,UAAK6gE,IAAI,CAAC5gE,WAAL,KAAqBr5B,SAA1B,EAAsC;AAErC,YAAIq5B,WAAW,GAAG4gE,IAAI,CAAC5gE,WAAvB;;AAEA,YAAK5mB,KAAK,CAACC,OAAN,CAAe2mB,WAAf,MAAiC,KAAtC,EAA8C;AAE7C;AAEAA,UAAAA,WAAW,GAAG,CAAEA,WAAF,EAAeA,WAAf,CAAd;AAEA;;AAED5H,QAAAA,QAAQ,CAAC4H,WAAT,GAAuB,IAAIxyB,OAAJ,GAAc8F,SAAd,CAAyB0sB,WAAzB,CAAvB;AAEA;;AAED,UAAK4gE,IAAI,CAAC3gE,eAAL,KAAyBt5B,SAA9B,EAA0CyxB,QAAQ,CAAC6H,eAAT,GAA2BgzF,UAAU,CAAEryB,IAAI,CAAC3gE,eAAP,CAArC;AAC1C,UAAK2gE,IAAI,CAAC1gE,iBAAL,KAA2Bv5B,SAAhC,EAA4CyxB,QAAQ,CAAC8H,iBAAT,GAA6B0gE,IAAI,CAAC1gE,iBAAlC;AAC5C,UAAK0gE,IAAI,CAACzgE,gBAAL,KAA0Bx5B,SAA/B,EAA2CyxB,QAAQ,CAAC+H,gBAAT,GAA4BygE,IAAI,CAACzgE,gBAAjC;AAE3C,UAAKygE,IAAI,CAACxgE,YAAL,KAAsBz5B,SAA3B,EAAuCyxB,QAAQ,CAACgI,YAAT,GAAwB6yF,UAAU,CAAEryB,IAAI,CAACxgE,YAAP,CAAlC;AACvC,UAAKwgE,IAAI,CAACvgE,YAAL,KAAsB15B,SAA3B,EAAuCyxB,QAAQ,CAACiI,YAAT,GAAwB4yF,UAAU,CAAEryB,IAAI,CAACvgE,YAAP,CAAlC;AAEvC,UAAKugE,IAAI,CAACtgE,WAAL,KAAqB35B,SAA1B,EAAsCyxB,QAAQ,CAACkI,WAAT,GAAuB2yF,UAAU,CAAEryB,IAAI,CAACtgE,WAAP,CAAjC;AACtC,UAAKsgE,IAAI,CAACviE,iBAAL,KAA2B13B,SAAhC,EAA4CyxB,QAAQ,CAACiG,iBAAT,GAA6BuiE,IAAI,CAACviE,iBAAlC;AAE5C,UAAKuiE,IAAI,CAACrgE,WAAL,KAAqB55B,SAA1B,EAAsCyxB,QAAQ,CAACmI,WAAT,GAAuB0yF,UAAU,CAAEryB,IAAI,CAACrgE,WAAP,CAAjC;AACtC,UAAKqgE,IAAI,CAACpgE,oBAAL,KAA8B75B,SAAnC,EAA+CyxB,QAAQ,CAACoI,oBAAT,GAAgCyyF,UAAU,CAAEryB,IAAI,CAACpgE,oBAAP,CAA1C;AAC/C,UAAKogE,IAAI,CAACngE,gBAAL,KAA0B95B,SAA/B,EAA2CyxB,QAAQ,CAACqI,gBAAT,GAA4BwyF,UAAU,CAAEryB,IAAI,CAACngE,gBAAP,CAAtC;AAE3C,UAAKmgE,IAAI,CAAClgE,MAAL,KAAgB/5B,SAArB,EAAiCyxB,QAAQ,CAACsI,MAAT,GAAkBuyF,UAAU,CAAEryB,IAAI,CAAClgE,MAAP,CAA5B;AACjC,UAAKkgE,IAAI,CAAChgE,eAAL,KAAyBj6B,SAA9B,EAA0CyxB,QAAQ,CAACwI,eAAT,GAA2BggE,IAAI,CAAChgE,eAAhC;AAE1C,UAAKggE,IAAI,CAAC//D,YAAL,KAAsBl6B,SAA3B,EAAuCyxB,QAAQ,CAACyI,YAAT,GAAwB+/D,IAAI,CAAC//D,YAA7B;AACvC,UAAK+/D,IAAI,CAAC9/D,eAAL,KAAyBn6B,SAA9B,EAA0CyxB,QAAQ,CAAC0I,eAAT,GAA2B8/D,IAAI,CAAC9/D,eAAhC;AAE1C,UAAK8/D,IAAI,CAACphE,QAAL,KAAkB74B,SAAvB,EAAmCyxB,QAAQ,CAACoH,QAAT,GAAoByzF,UAAU,CAAEryB,IAAI,CAACphE,QAAP,CAA9B;AACnC,UAAKohE,IAAI,CAACnhE,iBAAL,KAA2B94B,SAAhC,EAA4CyxB,QAAQ,CAACqH,iBAAT,GAA6BmhE,IAAI,CAACnhE,iBAAlC;AAE5C,UAAKmhE,IAAI,CAAClhE,KAAL,KAAe/4B,SAApB,EAAgCyxB,QAAQ,CAACsH,KAAT,GAAiBuzF,UAAU,CAAEryB,IAAI,CAAClhE,KAAP,CAA3B;AAChC,UAAKkhE,IAAI,CAACjhE,cAAL,KAAwBh5B,SAA7B,EAAyCyxB,QAAQ,CAACuH,cAAT,GAA0BihE,IAAI,CAACjhE,cAA/B;AAEzC,UAAKihE,IAAI,CAAC7/D,WAAL,KAAqBp6B,SAA1B,EAAsCyxB,QAAQ,CAAC2I,WAAT,GAAuBkyF,UAAU,CAAEryB,IAAI,CAAC7/D,WAAP,CAAjC;AAEtC,UAAK6/D,IAAI,CAAChiE,YAAL,KAAsBj4B,SAA3B,EAAuCyxB,QAAQ,CAACwG,YAAT,GAAwBq0F,UAAU,CAAEryB,IAAI,CAAChiE,YAAP,CAAlC;AACvC,UAAKgiE,IAAI,CAAC/hE,qBAAL,KAA+Bl4B,SAApC,EAAgDyxB,QAAQ,CAACyG,qBAAT,GAAiCo0F,UAAU,CAAEryB,IAAI,CAAC/hE,qBAAP,CAA3C;AAChD,UAAK+hE,IAAI,CAAC9hE,kBAAL,KAA4Bn4B,SAAjC,EAA6CyxB,QAAQ,CAAC0G,kBAAT,GAA8Bm0F,UAAU,CAAEryB,IAAI,CAAC9hE,kBAAP,CAAxC;AAC7C,UAAK8hE,IAAI,CAAC7hE,oBAAL,KAA8Bp4B,SAAnC,EAA+CyxB,QAAQ,CAAC2G,oBAAT,GAAgC,IAAIvxB,OAAJ,GAAc8F,SAAd,CAAyBstF,IAAI,CAAC7hE,oBAA9B,CAAhC;AAE/C,UAAK6hE,IAAI,CAACzhE,cAAL,KAAwBx4B,SAA7B,EAAyCyxB,QAAQ,CAAC+G,cAAT,GAA0B8zF,UAAU,CAAEryB,IAAI,CAACzhE,cAAP,CAApC;AACzC,UAAKyhE,IAAI,CAACxhE,uBAAL,KAAiCz4B,SAAtC,EAAkDyxB,QAAQ,CAACgH,uBAAT,GAAmC6zF,UAAU,CAAEryB,IAAI,CAACxhE,uBAAP,CAA7C;AAElD,UAAKwhE,IAAI,CAAC3/D,eAAL,KAAyBt6B,SAA9B,EAA0CyxB,QAAQ,CAAC6I,eAAT,GAA2BgyF,UAAU,CAAEryB,IAAI,CAAC3/D,eAAP,CAArC;AAC1C,UAAK2/D,IAAI,CAACz/D,YAAL,KAAsBx6B,SAA3B,EAAuCyxB,QAAQ,CAAC+I,YAAT,GAAwB8xF,UAAU,CAAEryB,IAAI,CAACz/D,YAAP,CAAlC;AAEvC,UAAKy/D,IAAI,CAAC/6C,aAAL,KAAuBl/C,SAA5B,EAAwCyxB,QAAQ,CAACytB,aAAT,GAAyBotE,UAAU,CAAEryB,IAAI,CAAC/6C,aAAP,CAAnC;AACxC,UAAK+6C,IAAI,CAAC96C,iBAAL,KAA2Bn/C,SAAhC,EAA4CyxB,QAAQ,CAAC0tB,iBAAT,GAA6BmtE,UAAU,CAAEryB,IAAI,CAAC96C,iBAAP,CAAvC;AAE5C,aAAO1tB,QAAP;AAEA;;;WAED,qBAAa3vB,KAAb,EAAqB;AAEpB,WAAKgT,QAAL,GAAgBhT,KAAhB;AACA,aAAO,IAAP;AAEA;;;WAED,gCAA+BjC,IAA/B,EAAsC;AAErC,UAAM4sH,WAAW,GAAG;AACnB/nD,QAAAA,cAAc,EAAdA,cADmB;AAEnBC,QAAAA,cAAc,EAAdA,cAFmB;AAGnBq0C,QAAAA,iBAAiB,EAAjBA,iBAHmB;AAInBhyE,QAAAA,cAAc,EAAdA,cAJmB;AAKnBy9B,QAAAA,cAAc,EAAdA,cALmB;AAMnBJ,QAAAA,oBAAoB,EAApBA,oBANmB;AAOnBD,QAAAA,oBAAoB,EAApBA,oBAPmB;AAQnBF,QAAAA,iBAAiB,EAAjBA,iBARmB;AASnBC,QAAAA,gBAAgB,EAAhBA,gBATmB;AAUnBH,QAAAA,kBAAkB,EAAlBA,kBAVmB;AAWnBC,QAAAA,mBAAmB,EAAnBA,mBAXmB;AAYnBH,QAAAA,iBAAiB,EAAjBA,iBAZmB;AAanBC,QAAAA,oBAAoB,EAApBA,oBAbmB;AAcnBxoC,QAAAA,iBAAiB,EAAjBA,iBAdmB;AAenB+oC,QAAAA,kBAAkB,EAAlBA,kBAfmB;AAgBnBE,QAAAA,kBAAkB,EAAlBA,kBAhBmB;AAiBnBD,QAAAA,iBAAiB,EAAjBA,iBAjBmB;AAkBnB7vC,QAAAA,QAAQ,EAARA;AAlBmB,OAApB;AAqBA,aAAO,IAAI+3F,WAAW,CAAE5sH,IAAF,CAAf,EAAP;AAEA;;;;EApU2B8lH,M;;IAwUvB+G,W;;;;;;;WAEL,oBAAmBjsH,KAAnB,EAA2B;AAE1B,UAAK,OAAOqoH,WAAP,KAAuB,WAA5B,EAA0C;AAEzC,eAAO,IAAIA,WAAJ,GAAkBC,MAAlB,CAA0BtoH,KAA1B,CAAP;AAEA,OANyB,CAQ1B;AACA;;;AAEA,UAAIqD,CAAC,GAAG,EAAR;;AAEA,WAAM,IAAInD,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG9X,KAAK,CAACI,MAA5B,EAAoCF,CAAC,GAAG4X,EAAxC,EAA4C5X,CAAC,EAA7C,EAAmD;AAElD;AACAmD,QAAAA,CAAC,IAAIkgC,MAAM,CAAC2oF,YAAP,CAAqBlsH,KAAK,CAAEE,CAAF,CAA1B,CAAL;AAEA;;AAED,UAAI;AAEH;AAEA,eAAOisH,kBAAkB,CAAEC,MAAM,CAAE/oH,CAAF,CAAR,CAAzB;AAEA,OAND,CAME,OAAQwD,CAAR,EAAY;AAAE;AAEf,eAAOxD,CAAP;AAEA;AAED;;;WAED,wBAAuB0O,GAAvB,EAA6B;AAE5B,UAAMnS,KAAK,GAAGmS,GAAG,CAACs6G,WAAJ,CAAiB,GAAjB,CAAd;AAEA,UAAKzsH,KAAK,KAAK,CAAE,CAAjB,EAAqB,OAAO,IAAP;AAErB,aAAOmS,GAAG,CAAC9R,KAAJ,CAAW,CAAX,EAAcL,KAAK,GAAG,CAAtB,CAAP;AAEA;;;WAED,oBAAmBmS,GAAnB,EAAwB0mD,IAAxB,EAA+B;AAE9B;AACA,UAAK,OAAO1mD,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAxC,EAA6C,OAAO,EAAP,CAHf,CAK9B;;AACA,UAAK,gBAAgBxB,IAAhB,CAAsBkoD,IAAtB,KAAgC,MAAMloD,IAAN,CAAYwB,GAAZ,CAArC,EAAyD;AAExD0mD,QAAAA,IAAI,GAAGA,IAAI,CAACwD,OAAL,CAAc,yBAAd,EAAyC,IAAzC,CAAP;AAEA,OAV6B,CAY9B;;;AACA,UAAK,mBAAmB1rD,IAAnB,CAAyBwB,GAAzB,CAAL,EAAsC,OAAOA,GAAP,CAbR,CAe9B;;AACA,UAAK,gBAAgBxB,IAAhB,CAAsBwB,GAAtB,CAAL,EAAmC,OAAOA,GAAP,CAhBL,CAkB9B;;AACA,UAAK,aAAaxB,IAAb,CAAmBwB,GAAnB,CAAL,EAAgC,OAAOA,GAAP,CAnBF,CAqB9B;;AACA,aAAO0mD,IAAI,GAAG1mD,GAAd;AAEA;;;;;;IAIIu6G,uB;;;;;AAEL,qCAAc;AAAA;;AAAA;;AAEb;AAEA,aAAK1oE,yBAAL,GAAiC,IAAjC;AAEA,aAAKxkD,IAAL,GAAY,yBAAZ;AACA,aAAKgxD,aAAL,GAAqBjxC,QAArB;AAPa;AASb;;;;WAED,cAAMhR,MAAN,EAAe;AAEd,wFAAYA,MAAZ;;AAEA,WAAKiiD,aAAL,GAAqBjiD,MAAM,CAACiiD,aAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAK9qD,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,kBAAS;AAER,UAAMgD,IAAI,uFAAiB,IAAjB,CAAV;;AAEAA,MAAAA,IAAI,CAAC6+C,aAAL,GAAqB,KAAKA,aAA1B;AAEA7+C,MAAAA,IAAI,CAACqyC,yBAAL,GAAiC,IAAjC;AAEA,aAAOryC,IAAP;AAEA;;;;EAvCoC4rB,c;;IA2ChCovF,oB;;;;;AAEL,gCAAapH,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAMigF,MAAM,GAAG,IAAIgB,UAAJ,CAAgBjhF,KAAK,CAACugF,OAAtB,CAAf;AACAN,MAAAA,MAAM,CAAC6D,OAAP,CAAgB9jF,KAAK,CAAC6zB,IAAtB;AACAosD,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB/jF,KAAK,CAAC2gF,aAA/B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2BhkF,KAAK,CAACygF,eAAjC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAW+1G,IAAX,EAAkB;AAEnC,YAAI;AAEHjE,UAAAA,MAAM,CAAEj/E,KAAK,CAAC1wB,KAAN,CAAaD,IAAI,CAACC,KAAL,CAAY4zG,IAAZ,CAAb,CAAF,CAAN;AAEA,SAJD,CAIE,OAAQjhH,CAAR,EAAY;AAEb,cAAKk9G,OAAL,EAAe;AAEdA,YAAAA,OAAO,CAAEl9G,CAAF,CAAP;AAEA,WAJD,MAIO;AAEN1B,YAAAA,OAAO,CAACkD,KAAR,CAAexB,CAAf;AAEA;;AAED+9B,UAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AAEA;AAED,OAtBD,EAsBG+xG,UAtBH,EAsBeC,OAtBf;AAwBA;;;WAED,eAAOvqB,IAAP,EAAc;AAEb,UAAMgzB,oBAAoB,GAAG,EAA7B;AACA,UAAMC,cAAc,GAAG,EAAvB;;AAEA,eAASC,oBAAT,CAA+BlzB,IAA/B,EAAqCt4F,IAArC,EAA4C;AAE3C,YAAKsrH,oBAAoB,CAAEtrH,IAAF,CAApB,KAAiC3B,SAAtC,EAAkD,OAAOitH,oBAAoB,CAAEtrH,IAAF,CAA3B;AAElD,YAAMk1F,kBAAkB,GAAGoD,IAAI,CAACpD,kBAAhC;AACA,YAAMD,iBAAiB,GAAGC,kBAAkB,CAAEl1F,IAAF,CAA5C;AAEA,YAAMwL,MAAM,GAAGigH,cAAc,CAAEnzB,IAAF,EAAQrD,iBAAiB,CAACzpF,MAA1B,CAA7B;AAEA,YAAM1M,KAAK,GAAGyM,aAAa,CAAE0pF,iBAAiB,CAAC/2F,IAApB,EAA0BsN,MAA1B,CAA3B;AACA,YAAMqpF,EAAE,GAAG,IAAIJ,iBAAJ,CAAuB31F,KAAvB,EAA8Bm2F,iBAAiB,CAAC30D,MAAhD,CAAX;AACAu0D,QAAAA,EAAE,CAAC70F,IAAH,GAAUi1F,iBAAiB,CAACj1F,IAA5B;AAEAsrH,QAAAA,oBAAoB,CAAEtrH,IAAF,CAApB,GAA+B60F,EAA/B;AAEA,eAAOA,EAAP;AAEA;;AAED,eAAS42B,cAAT,CAAyBnzB,IAAzB,EAA+Bt4F,IAA/B,EAAsC;AAErC,YAAKurH,cAAc,CAAEvrH,IAAF,CAAd,KAA2B3B,SAAhC,EAA4C,OAAOktH,cAAc,CAAEvrH,IAAF,CAArB;AAE5C,YAAM20F,YAAY,GAAG2D,IAAI,CAAC3D,YAA1B;AACA,YAAM+xB,WAAW,GAAG/xB,YAAY,CAAE30F,IAAF,CAAhC;AAEA,YAAM4/B,EAAE,GAAG,IAAIv0B,WAAJ,CAAiBq7G,WAAjB,EAA+Bl7G,MAA1C;AAEA+/G,QAAAA,cAAc,CAAEvrH,IAAF,CAAd,GAAyB4/B,EAAzB;AAEA,eAAOA,EAAP;AAEA;;AAED,UAAMpgB,QAAQ,GAAG84E,IAAI,CAAC51C,yBAAL,GAAiC,IAAI0oE,uBAAJ,EAAjC,GAAiE,IAAInvF,cAAJ,EAAlF;AAEA,UAAMv9B,KAAK,GAAG45F,IAAI,CAACjoF,IAAL,CAAU3R,KAAxB;;AAEA,UAAKA,KAAK,KAAKL,SAAf,EAA2B;AAE1B,YAAMqtH,UAAU,GAAGngH,aAAa,CAAE7M,KAAK,CAACR,IAAR,EAAcQ,KAAK,CAACI,KAApB,CAAhC;AACA0gB,QAAAA,QAAQ,CAACshB,QAAT,CAAmB,IAAI7G,eAAJ,CAAqByxF,UAArB,EAAiC,CAAjC,CAAnB;AAEA;;AAED,UAAMjsG,UAAU,GAAG64E,IAAI,CAACjoF,IAAL,CAAUoP,UAA7B;;AAEA,WAAM,IAAM2Q,GAAZ,IAAmB3Q,UAAnB,EAAgC;AAE/B,YAAM/Y,SAAS,GAAG+Y,UAAU,CAAE2Q,GAAF,CAA5B;AACA,YAAIu7F,eAAe,SAAnB;;AAEA,YAAKjlH,SAAS,CAAC25B,4BAAf,EAA8C;AAE7C,cAAM40D,iBAAiB,GAAGu2B,oBAAoB,CAAElzB,IAAI,CAACjoF,IAAP,EAAa3J,SAAS,CAAC2J,IAAvB,CAA9C;AACAs7G,UAAAA,eAAe,GAAG,IAAI32B,0BAAJ,CAAgCC,iBAAhC,EAAmDvuF,SAAS,CAACwzB,QAA7D,EAAuExzB,SAAS,CAACD,MAAjF,EAAyFC,SAAS,CAACsI,UAAnG,CAAlB;AAEA,SALD,MAKO;AAEN,cAAM08G,WAAU,GAAGngH,aAAa,CAAE7E,SAAS,CAACxI,IAAZ,EAAkBwI,SAAS,CAAC5H,KAA5B,CAAhC;;AACA,cAAM8sH,qBAAqB,GAAGllH,SAAS,CAACq8C,0BAAV,GAAuCy1C,wBAAvC,GAAkEv+D,eAAhG;AACA0xF,UAAAA,eAAe,GAAG,IAAIC,qBAAJ,CAA2BF,WAA3B,EAAuChlH,SAAS,CAACwzB,QAAjD,EAA2DxzB,SAAS,CAACsI,UAArE,CAAlB;AAEA;;AAED,YAAKtI,SAAS,CAACgF,IAAV,KAAmBrN,SAAxB,EAAoCstH,eAAe,CAACjgH,IAAhB,GAAuBhF,SAAS,CAACgF,IAAjC;AACpC,YAAKhF,SAAS,CAAC2zB,KAAV,KAAoBh8B,SAAzB,EAAqCstH,eAAe,CAAC72B,QAAhB,CAA0BpuF,SAAS,CAAC2zB,KAApC;;AAErC,YAAK3zB,SAAS,CAAC4zB,WAAV,KAA0Bj8B,SAA/B,EAA2C;AAE1CstH,UAAAA,eAAe,CAACrxF,WAAhB,CAA4B7zB,MAA5B,GAAqCC,SAAS,CAAC4zB,WAAV,CAAsB7zB,MAA3D;AACAklH,UAAAA,eAAe,CAACrxF,WAAhB,CAA4B5jB,KAA5B,GAAoChQ,SAAS,CAAC4zB,WAAV,CAAsB5jB,KAA1D;AAEA;;AAED8I,QAAAA,QAAQ,CAAC4d,YAAT,CAAuBhN,GAAvB,EAA4Bu7F,eAA5B;AAEA;;AAED,UAAMxvF,eAAe,GAAGm8D,IAAI,CAACjoF,IAAL,CAAU8rB,eAAlC;;AAEA,UAAKA,eAAL,EAAuB;AAEtB,aAAM,IAAM/L,KAAZ,IAAmB+L,eAAnB,EAAqC;AAEpC,cAAM0E,cAAc,GAAG1E,eAAe,CAAE/L,KAAF,CAAtC;AAEA,cAAMtxB,KAAK,GAAG,EAAd;;AAEA,eAAM,IAAIE,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGiqB,cAAc,CAAC3hC,MAArC,EAA6CF,CAAC,GAAG4X,EAAjD,EAAqD5X,CAAC,EAAtD,EAA4D;AAE3D,gBAAM0H,WAAS,GAAGm6B,cAAc,CAAE7hC,CAAF,CAAhC;;AACA,gBAAI2sH,gBAAe,SAAnB;;AAEA,gBAAKjlH,WAAS,CAAC25B,4BAAf,EAA8C;AAE7C,kBAAM40D,kBAAiB,GAAGu2B,oBAAoB,CAAElzB,IAAI,CAACjoF,IAAP,EAAa3J,WAAS,CAAC2J,IAAvB,CAA9C;;AACAs7G,cAAAA,gBAAe,GAAG,IAAI32B,0BAAJ,CAAgCC,kBAAhC,EAAmDvuF,WAAS,CAACwzB,QAA7D,EAAuExzB,WAAS,CAACD,MAAjF,EAAyFC,WAAS,CAACsI,UAAnG,CAAlB;AAEA,aALD,MAKO;AAEN,kBAAM08G,YAAU,GAAGngH,aAAa,CAAE7E,WAAS,CAACxI,IAAZ,EAAkBwI,WAAS,CAAC5H,KAA5B,CAAhC;;AACA6sH,cAAAA,gBAAe,GAAG,IAAI1xF,eAAJ,CAAqByxF,YAArB,EAAiChlH,WAAS,CAACwzB,QAA3C,EAAqDxzB,WAAS,CAACsI,UAA/D,CAAlB;AAEA;;AAED,gBAAKtI,WAAS,CAACgF,IAAV,KAAmBrN,SAAxB,EAAoCstH,gBAAe,CAACjgH,IAAhB,GAAuBhF,WAAS,CAACgF,IAAjC;AACpC5M,YAAAA,KAAK,CAACN,IAAN,CAAYmtH,gBAAZ;AAEA;;AAEDnsG,UAAAA,QAAQ,CAAC2c,eAAT,CAA0B/L,KAA1B,IAAkCtxB,KAAlC;AAEA;AAED;;AAED,UAAMs9B,oBAAoB,GAAGk8D,IAAI,CAACjoF,IAAL,CAAU+rB,oBAAvC;;AAEA,UAAKA,oBAAL,EAA4B;AAE3B5c,QAAAA,QAAQ,CAAC4c,oBAAT,GAAgC,IAAhC;AAEA;;AAED,UAAMC,MAAM,GAAGi8D,IAAI,CAACjoF,IAAL,CAAUgsB,MAAV,IAAoBi8D,IAAI,CAACjoF,IAAL,CAAUw7G,SAA9B,IAA2CvzB,IAAI,CAACjoF,IAAL,CAAUy7G,OAApE;;AAEA,UAAKzvF,MAAM,KAAKh+B,SAAhB,EAA4B;AAE3B,aAAM,IAAIW,IAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG87B,MAAM,CAACn9B,MAA5B,EAAoCF,IAAC,KAAKuB,CAA1C,EAA6C,EAAGvB,IAAhD,EAAoD;AAEnD,cAAM+/B,KAAK,GAAG1C,MAAM,CAAEr9B,IAAF,CAApB;AAEAwgB,UAAAA,QAAQ,CAACkhB,QAAT,CAAmB3B,KAAK,CAACvC,KAAzB,EAAgCuC,KAAK,CAACroB,KAAtC,EAA6CqoB,KAAK,CAACtC,aAAnD;AAEA;AAED;;AAED,UAAMH,cAAc,GAAGg8D,IAAI,CAACjoF,IAAL,CAAUisB,cAAjC;;AAEA,UAAKA,cAAc,KAAKj+B,SAAxB,EAAoC;AAEnC,YAAMwI,MAAM,GAAG,IAAIuU,OAAJ,EAAf;;AAEA,YAAKkhB,cAAc,CAACz1B,MAAf,KAA0BxI,SAA/B,EAA2C;AAE1CwI,UAAAA,MAAM,CAACmE,SAAP,CAAkBsxB,cAAc,CAACz1B,MAAjC;AAEA;;AAED2Y,QAAAA,QAAQ,CAAC8c,cAAT,GAA0B,IAAIpa,MAAJ,CAAYrb,MAAZ,EAAoBy1B,cAAc,CAAC7e,MAAnC,CAA1B;AAEA;;AAED,UAAK66E,IAAI,CAAC5sF,IAAV,EAAiB8T,QAAQ,CAAC9T,IAAT,GAAgB4sF,IAAI,CAAC5sF,IAArB;AACjB,UAAK4sF,IAAI,CAAC5lF,QAAV,EAAqB8M,QAAQ,CAAC9M,QAAT,GAAoB4lF,IAAI,CAAC5lF,QAAzB;AAErB,aAAO8M,QAAP;AAEA;;;;EA/MiCwkG,M;;IAmN7B+H,Y;;;;;AAEL,wBAAa9H,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAM6zB,IAAI,GAAK,KAAKA,IAAL,KAAc,EAAhB,GAAuBwzD,WAAW,CAACiB,cAAZ,CAA4Bn7G,GAA5B,CAAvB,GAA2D,KAAK0mD,IAA7E;AACA,WAAK6sD,YAAL,GAAoB,KAAKA,YAAL,IAAqB7sD,IAAzC;AAEA,UAAMosD,MAAM,GAAG,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAAf;AACAN,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2B,KAAKvD,eAAhC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAW+1G,IAAX,EAAkB;AAEnC,YAAItuB,IAAI,GAAG,IAAX;;AAEA,YAAI;AAEHA,UAAAA,IAAI,GAAGvlF,IAAI,CAACC,KAAL,CAAY4zG,IAAZ,CAAP;AAEA,SAJD,CAIE,OAAQz/G,KAAR,EAAgB;AAEjB,cAAK07G,OAAO,KAAKxkH,SAAjB,EAA6BwkH,OAAO,CAAE17G,KAAF,CAAP;AAE7BlD,UAAAA,OAAO,CAACkD,KAAR,CAAe,sCAAsC0J,GAAtC,GAA4C,GAA3D,EAAgE1J,KAAK,CAAC2lF,OAAtE;AAEA;AAEA;;AAED,YAAM15E,QAAQ,GAAGklF,IAAI,CAACllF,QAAtB;;AAEA,YAAKA,QAAQ,KAAK/U,SAAb,IAA0B+U,QAAQ,CAAClV,IAAT,KAAkBG,SAA5C,IAAyD+U,QAAQ,CAAClV,IAAT,CAAc+B,WAAd,OAAgC,UAA9F,EAA2G;AAE1GgE,UAAAA,OAAO,CAACkD,KAAR,CAAe,qCAAqC0J,GAApD;AACA;AAEA;;AAED6yB,QAAAA,KAAK,CAAC1wB,KAAN,CAAaslF,IAAb,EAAmBqqB,MAAnB;AAEA,OA7BD,EA6BGC,UA7BH,EA6BeC,OA7Bf;AA+BA;;;;gFAED,kBAAiBhyG,GAAjB,EAAsB+xG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOl/E,gBAAAA,KAFP,GAEe,IAFf;AAIO6zB,gBAAAA,IAJP,GAIgB,KAAKA,IAAL,KAAc,EAAhB,GAAuBwzD,WAAW,CAACiB,cAAZ,CAA4Bn7G,GAA5B,CAAvB,GAA2D,KAAK0mD,IAJ9E;AAKC,qBAAK6sD,YAAL,GAAoB,KAAKA,YAAL,IAAqB7sD,IAAzC;AAEMosD,gBAAAA,MAPP,GAOgB,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAPhB;AAQCN,gBAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,gBAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,gBAAAA,MAAM,CAAC+D,kBAAP,CAA2B,KAAKvD,eAAhC;AAVD;AAAA,uBAYoBR,MAAM,CAACsI,SAAP,CAAkBp7G,GAAlB,EAAuB+xG,UAAvB,CAZpB;;AAAA;AAYOgE,gBAAAA,IAZP;AAcOtuB,gBAAAA,IAdP,GAccvlF,IAAI,CAACC,KAAL,CAAY4zG,IAAZ,CAdd;AAgBOxzG,gBAAAA,QAhBP,GAgBkBklF,IAAI,CAACllF,QAhBvB;;AAAA,sBAkBMA,QAAQ,KAAK/U,SAAb,IAA0B+U,QAAQ,CAAClV,IAAT,KAAkBG,SAA5C,IAAyD+U,QAAQ,CAAClV,IAAT,CAAc+B,WAAd,OAAgC,UAlB/F;AAAA;AAAA;AAAA;;AAAA,sBAoBQ,IAAIyE,KAAJ,CAAW,qCAAqCmM,GAAhD,CApBR;;AAAA;AAAA;AAAA,uBAwBc6yB,KAAK,CAACwoF,UAAN,CAAkB5zB,IAAlB,CAxBd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WA4BA,eAAOA,IAAP,EAAaqqB,MAAb,EAAsB;AAErB,UAAM71F,UAAU,GAAG,KAAKq/F,eAAL,CAAsB7zB,IAAI,CAACxrE,UAA3B,CAAnB;AACA,UAAM0B,MAAM,GAAG,KAAK49F,WAAL,CAAkB9zB,IAAI,CAAC9pE,MAAvB,CAAf;AACA,UAAMF,UAAU,GAAG,KAAK+9F,eAAL,CAAsB/zB,IAAI,CAAChqE,UAA3B,EAAuCE,MAAvC,CAAnB;AAEA,UAAM7d,MAAM,GAAG,KAAK27G,WAAL,CAAkBh0B,IAAI,CAAC3nF,MAAvB,EAA+B,YAAY;AAEzD,YAAKgyG,MAAM,KAAKtkH,SAAhB,EAA4BskH,MAAM,CAAE5jG,MAAF,CAAN;AAE5B,OAJc,CAAf;AAMA,UAAM5L,QAAQ,GAAG,KAAKo5G,aAAL,CAAoBj0B,IAAI,CAACnlF,QAAzB,EAAmCxC,MAAnC,CAAjB;AACA,UAAM4d,SAAS,GAAG,KAAKi+F,cAAL,CAAqBl0B,IAAI,CAAC/pE,SAA1B,EAAqCpb,QAArC,CAAlB;AAEA,UAAM4L,MAAM,GAAG,KAAK0tG,WAAL,CAAkBn0B,IAAI,CAACv5E,MAAvB,EAA+BuP,UAA/B,EAA2CC,SAA3C,EAAsDpb,QAAtD,EAAgE2Z,UAAhE,CAAf;AACA,UAAM2B,SAAS,GAAG,KAAKi+F,cAAL,CAAqBp0B,IAAI,CAAC7pE,SAA1B,EAAqC1P,MAArC,CAAlB;AAEA,WAAK4tG,aAAL,CAAoB5tG,MAApB,EAA4B0P,SAA5B,EAlBqB,CAoBrB;;AAEA,UAAKk0F,MAAM,KAAKtkH,SAAhB,EAA4B;AAE3B,YAAIuuH,SAAS,GAAG,KAAhB;;AAEA,aAAM,IAAM5sH,IAAZ,IAAoB2Q,MAApB,EAA6B;AAE5B,cAAKA,MAAM,CAAE3Q,IAAF,CAAN,CAAeqQ,IAAf,YAA+BJ,gBAApC,EAAuD;AAEtD28G,YAAAA,SAAS,GAAG,IAAZ;AACA;AAEA;AAED;;AAED,YAAKA,SAAS,KAAK,KAAnB,EAA2BjK,MAAM,CAAE5jG,MAAF,CAAN;AAE3B;;AAED,aAAOA,MAAP;AAEA;;;;iFAED,kBAAkBu5E,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOxrE,gBAAAA,UAFP,GAEoB,KAAKq/F,eAAL,CAAsB7zB,IAAI,CAACxrE,UAA3B,CAFpB;AAGO0B,gBAAAA,MAHP,GAGgB,KAAK49F,WAAL,CAAkB9zB,IAAI,CAAC9pE,MAAvB,CAHhB;AAIOF,gBAAAA,UAJP,GAIoB,KAAK+9F,eAAL,CAAsB/zB,IAAI,CAAChqE,UAA3B,EAAuCE,MAAvC,CAJpB;AAAA;AAAA,uBAMsB,KAAKq+F,gBAAL,CAAuBv0B,IAAI,CAAC3nF,MAA5B,CANtB;;AAAA;AAMOA,gBAAAA,MANP;AAQOwC,gBAAAA,QARP,GAQkB,KAAKo5G,aAAL,CAAoBj0B,IAAI,CAACnlF,QAAzB,EAAmCxC,MAAnC,CARlB;AASO4d,gBAAAA,SATP,GASmB,KAAKi+F,cAAL,CAAqBl0B,IAAI,CAAC/pE,SAA1B,EAAqCpb,QAArC,CATnB;AAWO4L,gBAAAA,MAXP,GAWgB,KAAK0tG,WAAL,CAAkBn0B,IAAI,CAACv5E,MAAvB,EAA+BuP,UAA/B,EAA2CC,SAA3C,EAAsDpb,QAAtD,EAAgE2Z,UAAhE,CAXhB;AAYO2B,gBAAAA,SAZP,GAYmB,KAAKi+F,cAAL,CAAqBp0B,IAAI,CAAC7pE,SAA1B,EAAqC1P,MAArC,CAZnB;AAcC,qBAAK4tG,aAAL,CAAoB5tG,MAApB,EAA4B0P,SAA5B;AAdD,mDAgBQ1P,MAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAoBA,qBAAau5E,IAAb,EAAoB;AAEnB,UAAM9pE,MAAM,GAAG,EAAf;;AAEA,UAAK8pE,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,aAAM,IAAIW,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAMywB,KAAK,GAAG,IAAIu4E,KAAJ,GAAY1F,QAAZ,CAAsBhK,IAAI,CAAEt5F,CAAF,CAA1B,CAAd;AAEAwvB,UAAAA,MAAM,CAAEiB,KAAK,CAACzvB,IAAR,CAAN,GAAuByvB,KAAvB;AAEA;AAED;;AAED,aAAOjB,MAAP;AAEA;;;WAED,wBAAgB8pE,IAAhB,EAAsBv5E,MAAtB,EAA+B;AAE9B,UAAM0P,SAAS,GAAG,EAAlB;AACA,UAAMkpE,KAAK,GAAG,EAAd,CAH8B,CAK9B;;AAEA54E,MAAAA,MAAM,CAACgP,QAAP,CAAiB,UAAWD,KAAX,EAAmB;AAEnC,YAAKA,KAAK,CAACgqE,MAAX,EAAoBH,KAAK,CAAE7pE,KAAK,CAAC9tB,IAAR,CAAL,GAAsB8tB,KAAtB;AAEpB,OAJD,EAP8B,CAa9B;;AAEA,UAAKwqE,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,aAAM,IAAIW,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAM6wB,QAAQ,GAAG,IAAIqoE,QAAJ,GAAeoK,QAAf,CAAyBhK,IAAI,CAAEt5F,CAAF,CAA7B,EAAoC24F,KAApC,CAAjB;AAEAlpE,UAAAA,SAAS,CAAEoB,QAAQ,CAAC7vB,IAAX,CAAT,GAA6B6vB,QAA7B;AAEA;AAED;;AAED,aAAOpB,SAAP;AAEA;;;WAED,yBAAiB6pE,IAAjB,EAAuB9pE,MAAvB,EAAgC;AAE/B,UAAMF,UAAU,GAAG,EAAnB;;AAEA,UAAKgqE,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,YAAMyuH,oBAAoB,GAAG,IAAIzB,oBAAJ,EAA7B;;AAEA,aAAM,IAAIrsH,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAIwgB,QAAQ,SAAZ;AACA,cAAMnP,IAAI,GAAGioF,IAAI,CAAEt5F,CAAF,CAAjB;;AAEA,kBAASqR,IAAI,CAACnS,IAAd;AAEC,iBAAK,gBAAL;AACA,iBAAK,yBAAL;AAECshB,cAAAA,QAAQ,GAAGstG,oBAAoB,CAAC95G,KAArB,CAA4B3C,IAA5B,CAAX;AAEA;;AAED,iBAAK,UAAL;AAECpM,cAAAA,OAAO,CAACkD,KAAR,CAAe,sEAAf;AAEA;;AAED;AAEC,kBAAKkJ,IAAI,CAACnS,IAAL,IAAa+3G,UAAlB,EAA+B;AAE9Bz2F,gBAAAA,QAAQ,GAAGy2F,UAAU,CAAE5lG,IAAI,CAACnS,IAAP,CAAV,CAAwBokG,QAAxB,CAAkCjyF,IAAlC,EAAwCme,MAAxC,CAAX;AAEA,eAJD,MAIO;AAENvqB,gBAAAA,OAAO,CAACC,IAAR,2DAAiEmM,IAAI,CAACnS,IAAtE;AAEA;;AAzBH;;AA6BAshB,UAAAA,QAAQ,CAACxf,IAAT,GAAgBqQ,IAAI,CAACrQ,IAArB;AAEA,cAAKqQ,IAAI,CAAC3E,IAAL,KAAcrN,SAAnB,EAA+BmhB,QAAQ,CAAC9T,IAAT,GAAgB2E,IAAI,CAAC3E,IAArB;AAC/B,cAAK8T,QAAQ,CAAC0c,gBAAT,KAA8B,IAA9B,IAAsC7rB,IAAI,CAACqC,QAAL,KAAkBrU,SAA7D,EAAyEmhB,QAAQ,CAAC9M,QAAT,GAAoBrC,IAAI,CAACqC,QAAzB;AAEzE4b,UAAAA,UAAU,CAAEje,IAAI,CAACrQ,IAAP,CAAV,GAA0Bwf,QAA1B;AAEA;AAED;;AAED,aAAO8O,UAAP;AAEA;;;WAED,wBAAgBgqE,IAAhB,EAAsBnlF,QAAtB,EAAiC;AAEhC,UAAM+c,KAAK,GAAG,EAAd,CAFgC,CAEd;;AAClB,UAAM3B,SAAS,GAAG,EAAlB;;AAEA,UAAK+pE,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,YAAMslH,MAAM,GAAG,IAAI+G,cAAJ,EAAf;AACA/G,QAAAA,MAAM,CAACoJ,WAAP,CAAoB55G,QAApB;;AAEA,aAAM,IAAInU,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAMqR,IAAI,GAAGioF,IAAI,CAAEt5F,CAAF,CAAjB;;AAEA,cAAKqR,IAAI,CAACnS,IAAL,KAAc,eAAnB,EAAqC;AAEpC;AAEA,gBAAMY,KAAK,GAAG,EAAd;;AAEA,iBAAM,IAAI4iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGrR,IAAI,CAACke,SAAL,CAAervB,MAApC,EAA4CwiB,CAAC,EAA7C,EAAmD;AAElD,kBAAMoO,QAAQ,GAAGzf,IAAI,CAACke,SAAL,CAAgB7M,CAAhB,CAAjB;;AAEA,kBAAKwO,KAAK,CAAEJ,QAAQ,CAAC9vB,IAAX,CAAL,KAA2B3B,SAAhC,EAA4C;AAE3C6xB,gBAAAA,KAAK,CAAEJ,QAAQ,CAAC9vB,IAAX,CAAL,GAAyB2jH,MAAM,CAAC3wG,KAAP,CAAc8c,QAAd,CAAzB;AAEA;;AAEDhxB,cAAAA,KAAK,CAACN,IAAN,CAAY0xB,KAAK,CAAEJ,QAAQ,CAAC9vB,IAAX,CAAjB;AAEA;;AAEDuuB,YAAAA,SAAS,CAAEle,IAAI,CAACrQ,IAAP,CAAT,GAAyBlB,KAAzB;AAEA,WAtBD,MAsBO;AAEN,gBAAKoxB,KAAK,CAAE7f,IAAI,CAACrQ,IAAP,CAAL,KAAuB3B,SAA5B,EAAwC;AAEvC6xB,cAAAA,KAAK,CAAE7f,IAAI,CAACrQ,IAAP,CAAL,GAAqB2jH,MAAM,CAAC3wG,KAAP,CAAc3C,IAAd,CAArB;AAEA;;AAEDke,YAAAA,SAAS,CAAEle,IAAI,CAACrQ,IAAP,CAAT,GAAyBkwB,KAAK,CAAE7f,IAAI,CAACrQ,IAAP,CAA9B;AAEA;AAED;AAED;;AAED,aAAOuuB,SAAP;AAEA;;;WAED,yBAAiB+pE,IAAjB,EAAwB;AAEvB,UAAMxrE,UAAU,GAAG,EAAnB;;AAEA,UAAKwrE,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,aAAM,IAAIW,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGs5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,EAAnC,EAAyC;AAExC,cAAMqR,IAAI,GAAGioF,IAAI,CAAEt5F,CAAF,CAAjB;AAEA,cAAMg6G,IAAI,GAAGsH,aAAa,CAACttG,KAAd,CAAqB3C,IAArB,CAAb;AAEAyc,UAAAA,UAAU,CAAEksF,IAAI,CAACh5G,IAAP,CAAV,GAA0Bg5G,IAA1B;AAEA;AAED;;AAED,aAAOlsF,UAAP;AAEA;;;WAED,qBAAawrE,IAAb,EAAmBqqB,MAAnB,EAA4B;AAE3B,UAAMj/E,KAAK,GAAG,IAAd;AACA,UAAM/yB,MAAM,GAAG,EAAf;AAEA,UAAIgzG,MAAJ;;AAEA,eAASqJ,SAAT,CAAoBn8G,GAApB,EAA0B;AAEzB6yB,QAAAA,KAAK,CAACugF,OAAN,CAAcb,SAAd,CAAyBvyG,GAAzB;AAEA,eAAO8yG,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,YAAY;AAEpC6yB,UAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,SAJM,EAIJxS,SAJI,EAIO,YAAY;AAEzBqlC,UAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AACA6yB,UAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,SATM,CAAP;AAWA;;AAED,eAASo8G,gBAAT,CAA2B79G,KAA3B,EAAmC;AAElC,YAAK,OAAOA,KAAP,KAAiB,QAAtB,EAAiC;AAEhC,cAAMyB,GAAG,GAAGzB,KAAZ;AAEA,cAAMmoD,IAAI,GAAG,4BAA4BloD,IAA5B,CAAkCwB,GAAlC,IAA0CA,GAA1C,GAAgD6yB,KAAK,CAAC0gF,YAAN,GAAqBvzG,GAAlF;AAEA,iBAAOm8G,SAAS,CAAEz1D,IAAF,CAAhB;AAEA,SARD,MAQO;AAEN,cAAKnoD,KAAK,CAACiB,IAAX,EAAkB;AAEjB,mBAAO;AACNA,cAAAA,IAAI,EAAE9E,aAAa,CAAE6D,KAAK,CAAClR,IAAR,EAAckR,KAAK,CAACiB,IAApB,CADb;AAENZ,cAAAA,KAAK,EAAEL,KAAK,CAACK,KAFP;AAGNC,cAAAA,MAAM,EAAEN,KAAK,CAACM;AAHR,aAAP;AAMA,WARD,MAQO;AAEN,mBAAO,IAAP;AAEA;AAED;AAED;;AAED,UAAK4oF,IAAI,KAAKj6F,SAAT,IAAsBi6F,IAAI,CAACp5F,MAAL,GAAc,CAAzC,EAA6C;AAE5C,YAAM+kH,OAAO,GAAG,IAAIvB,cAAJ,CAAoBC,MAApB,CAAhB;AAEAgB,QAAAA,MAAM,GAAG,IAAIsE,WAAJ,CAAiBhE,OAAjB,CAAT;AACAN,QAAAA,MAAM,CAAC4E,cAAP,CAAuB,KAAKrE,WAA5B;;AAEA,aAAM,IAAIllH,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG0hF,IAAI,CAACp5F,MAA3B,EAAmCF,CAAC,GAAG4X,EAAvC,EAA2C5X,CAAC,EAA5C,EAAkD;AAEjD,cAAMoQ,KAAK,GAAGkpF,IAAI,CAAEt5F,CAAF,CAAlB;AACA,cAAM6R,GAAG,GAAGzB,KAAK,CAACyB,GAAlB;;AAEA,cAAKC,KAAK,CAACC,OAAN,CAAeF,GAAf,CAAL,EAA4B;AAE3B;AAEA,gBAAMq8G,UAAU,GAAG,EAAnB;;AAEA,iBAAM,IAAIxrG,CAAC,GAAG,CAAR,EAAWgc,EAAE,GAAG7sB,GAAG,CAAC3R,MAA1B,EAAkCwiB,CAAC,GAAGgc,EAAtC,EAA0Chc,CAAC,EAA3C,EAAiD;AAEhD,kBAAMyrG,UAAU,GAAGt8G,GAAG,CAAE6Q,CAAF,CAAtB;AAEA,kBAAM0rG,iBAAiB,GAAGH,gBAAgB,CAAEE,UAAF,CAA1C;;AAEA,kBAAKC,iBAAiB,KAAK,IAA3B,EAAkC;AAEjC,oBAAKA,iBAAiB,YAAYn9G,gBAAlC,EAAqD;AAEpDi9G,kBAAAA,UAAU,CAAC1uH,IAAX,CAAiB4uH,iBAAjB;AAEA,iBAJD,MAIO;AAEN;AAEAF,kBAAAA,UAAU,CAAC1uH,IAAX,CAAiB,IAAIu5F,WAAJ,CAAiBq1B,iBAAiB,CAAC/8G,IAAnC,EAAyC+8G,iBAAiB,CAAC39G,KAA3D,EAAkE29G,iBAAiB,CAAC19G,MAApF,CAAjB;AAEA;AAED;AAED;;AAEDiB,YAAAA,MAAM,CAAEvB,KAAK,CAACpP,IAAR,CAAN,GAAuB,IAAIsQ,MAAJ,CAAY48G,UAAZ,CAAvB;AAEA,WAhCD,MAgCO;AAEN;AAEA,gBAAME,kBAAiB,GAAGH,gBAAgB,CAAE79G,KAAK,CAACyB,GAAR,CAA1C;;AACAF,YAAAA,MAAM,CAAEvB,KAAK,CAACpP,IAAR,CAAN,GAAuB,IAAIsQ,MAAJ,CAAY88G,kBAAZ,CAAvB;AAGA;AAED;AAED;;AAED,aAAOz8G,MAAP;AAEA;;;;uFAED,kBAAwB2nF,IAAxB;AAAA,mCAOgB20B,gBAPhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAOC,kBAAiC79G,KAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEM,OAAOA,KAAP,KAAiB,QAFvB;AAAA;AAAA;AAAA;;AAIQyB,4BAAAA,IAJR,GAIczB,KAJd;AAMQmoD,4BAAAA,IANR,GAMe,4BAA4BloD,IAA5B,CAAkCwB,IAAlC,IAA0CA,IAA1C,GAAgD6yB,KAAK,CAAC0gF,YAAN,GAAqBvzG,IANpF;AAAA;AAAA,mCAQe8yG,MAAM,CAACsI,SAAP,CAAkB10D,IAAlB,CARf;;AAAA;AAAA;;AAAA;AAAA,iCAYOnoD,KAAK,CAACiB,IAZb;AAAA;AAAA;AAAA;;AAAA,+DAcU;AACNA,8BAAAA,IAAI,EAAE9E,aAAa,CAAE6D,KAAK,CAAClR,IAAR,EAAckR,KAAK,CAACiB,IAApB,CADb;AAENZ,8BAAAA,KAAK,EAAEL,KAAK,CAACK,KAFP;AAGNC,8BAAAA,MAAM,EAAEN,KAAK,CAACM;AAHR,6BAdV;;AAAA;AAAA,+DAsBU,IAtBV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPD;AAAA;AAAA;;AAOgBu9G,gBAAAA,gBAPhB;AAAA;AAAA;;AAEOvpF,gBAAAA,KAFP,GAEe,IAFf;AAGO/yB,gBAAAA,MAHP,GAGgB,EAHhB;;AAAA,sBAqCM2nF,IAAI,KAAKj6F,SAAT,IAAsBi6F,IAAI,CAACp5F,MAAL,GAAc,CArC1C;AAAA;AAAA;AAAA;;AAuCEykH,gBAAAA,MAAM,GAAG,IAAIsE,WAAJ,CAAiB,KAAKhE,OAAtB,CAAT;AACAN,gBAAAA,MAAM,CAAC4E,cAAP,CAAuB,KAAKrE,WAA5B;AAEUllH,gBAAAA,CA1CZ,GA0CgB,CA1ChB,EA0CmB4X,EA1CnB,GA0CwB0hF,IAAI,CAACp5F,MA1C7B;;AAAA;AAAA,sBA0CqCF,CAAC,GAAG4X,EA1CzC;AAAA;AAAA;AAAA;;AA4CSxH,gBAAAA,KA5CT,GA4CiBkpF,IAAI,CAAEt5F,CAAF,CA5CrB;AA6CS6R,gBAAAA,GA7CT,GA6CezB,KAAK,CAACyB,GA7CrB;;AAAA,qBA+CQC,KAAK,CAACC,OAAN,CAAeF,GAAf,CA/CR;AAAA;AAAA;AAAA;;AAiDI;AAEMq8G,gBAAAA,UAnDV,GAmDuB,EAnDvB;AAqDcxrG,gBAAAA,CArDd,GAqDkB,CArDlB,EAqDqBgc,EArDrB,GAqD0B7sB,GAAG,CAAC3R,MArD9B;;AAAA;AAAA,sBAqDsCwiB,CAAC,GAAGgc,EArD1C;AAAA;AAAA;AAAA;;AAuDWyvF,gBAAAA,UAvDX,GAuDwBt8G,GAAG,CAAE6Q,CAAF,CAvD3B;AAAA;AAAA,uBAyDqCurG,gBAAgB,CAAEE,UAAF,CAzDrD;;AAAA;AAyDWC,gBAAAA,iBAzDX;;AA2DK,oBAAKA,iBAAiB,KAAK,IAA3B,EAAkC;AAEjC,sBAAKA,iBAAiB,YAAYn9G,gBAAlC,EAAqD;AAEpDi9G,oBAAAA,UAAU,CAAC1uH,IAAX,CAAiB4uH,iBAAjB;AAEA,mBAJD,MAIO;AAEN;AAEAF,oBAAAA,UAAU,CAAC1uH,IAAX,CAAiB,IAAIu5F,WAAJ,CAAiBq1B,iBAAiB,CAAC/8G,IAAnC,EAAyC+8G,iBAAiB,CAAC39G,KAA3D,EAAkE29G,iBAAiB,CAAC19G,MAApF,CAAjB;AAEA;AAED;;AAzEN;AAqD8CgS,gBAAAA,CAAC,EArD/C;AAAA;AAAA;;AAAA;AA6EI/Q,gBAAAA,MAAM,CAAEvB,KAAK,CAACpP,IAAR,CAAN,GAAuB,IAAIsQ,MAAJ,CAAY48G,UAAZ,CAAvB;AA7EJ;AAAA;;AAAA;AAAA;AAAA,uBAmFoCD,gBAAgB,CAAE79G,KAAK,CAACyB,GAAR,CAnFpD;;AAAA;AAmFUu8G,gBAAAA,mBAnFV;AAoFIz8G,gBAAAA,MAAM,CAAEvB,KAAK,CAACpP,IAAR,CAAN,GAAuB,IAAIsQ,MAAJ,CAAY88G,mBAAZ,CAAvB;;AApFJ;AA0C6CpuH,gBAAAA,CAAC,EA1C9C;AAAA;AAAA;;AAAA;AAAA,mDA4FQ2R,MA5FR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAgGA,uBAAe2nF,IAAf,EAAqB3nF,MAArB,EAA8B;AAE7B,eAAS08G,aAAT,CAAwBltH,KAAxB,EAA+BjC,IAA/B,EAAsC;AAErC,YAAK,OAAOiC,KAAP,KAAiB,QAAtB,EAAiC,OAAOA,KAAP;AAEjC8D,QAAAA,OAAO,CAACC,IAAR,CAAc,sEAAd,EAAsF/D,KAAtF;AAEA,eAAOjC,IAAI,CAAEiC,KAAF,CAAX;AAEA;;AAED,UAAMgT,QAAQ,GAAG,EAAjB;;AAEA,UAAKmlF,IAAI,KAAKj6F,SAAd,EAA0B;AAEzB,aAAM,IAAIW,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGq5F,IAAI,CAACp5F,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAMqR,IAAI,GAAGioF,IAAI,CAAEt5F,CAAF,CAAjB;;AAEA,cAAKqR,IAAI,CAACjB,KAAL,KAAe/Q,SAApB,EAAgC;AAE/B4F,YAAAA,OAAO,CAACC,IAAR,CAAc,8CAAd,EAA8DmM,IAAI,CAACrQ,IAAnE;AAEA;;AAED,cAAK2Q,MAAM,CAAEN,IAAI,CAACjB,KAAP,CAAN,KAAyB/Q,SAA9B,EAA0C;AAEzC4F,YAAAA,OAAO,CAACC,IAAR,CAAc,qCAAd,EAAqDmM,IAAI,CAACjB,KAA1D;AAEA;;AAED,cAAMnC,MAAM,GAAG0D,MAAM,CAAEN,IAAI,CAACjB,KAAP,CAArB;AACA,cAAMA,KAAK,GAAGnC,MAAM,CAACoD,IAArB;AAEA,cAAImF,OAAO,SAAX;;AAEA,cAAK1E,KAAK,CAACC,OAAN,CAAe3B,KAAf,CAAL,EAA8B;AAE7BoG,YAAAA,OAAO,GAAG,IAAIyzB,WAAJ,EAAV;AAEA,gBAAK75B,KAAK,CAAClQ,MAAN,KAAiB,CAAtB,EAA0BsW,OAAO,CAACtC,WAAR,GAAsB,IAAtB;AAE1B,WAND,MAMO;AAEN,gBAAK9D,KAAK,IAAIA,KAAK,CAACiB,IAApB,EAA2B;AAE1BmF,cAAAA,OAAO,GAAG,IAAIuiF,WAAJ,EAAV;AAEA,aAJD,MAIO;AAENviF,cAAAA,OAAO,GAAG,IAAInE,OAAJ,EAAV;AAEA;;AAED,gBAAKjC,KAAL,EAAaoG,OAAO,CAACtC,WAAR,GAAsB,IAAtB,CAZP,CAYmC;AAEzC;;AAEDsC,UAAAA,OAAO,CAACvI,MAAR,GAAiBA,MAAjB;AAEAuI,UAAAA,OAAO,CAACxV,IAAR,GAAeqQ,IAAI,CAACrQ,IAApB;AAEA,cAAKqQ,IAAI,CAAC3E,IAAL,KAAcrN,SAAnB,EAA+BmX,OAAO,CAAC9J,IAAR,GAAe2E,IAAI,CAAC3E,IAApB;AAE/B,cAAK2E,IAAI,CAACkB,OAAL,KAAiBlT,SAAtB,EAAkCmX,OAAO,CAACjE,OAAR,GAAkB87G,aAAa,CAAEh9G,IAAI,CAACkB,OAAP,EAAgB+7G,eAAhB,CAA/B;AAElC,cAAKj9G,IAAI,CAAC5J,MAAL,KAAgBpI,SAArB,EAAiCmX,OAAO,CAAC/O,MAAR,CAAeuE,SAAf,CAA0BqF,IAAI,CAAC5J,MAA/B;AACjC,cAAK4J,IAAI,CAAC+B,MAAL,KAAgB/T,SAArB,EAAiCmX,OAAO,CAACpD,MAAR,CAAepH,SAAf,CAA0BqF,IAAI,CAAC+B,MAA/B;AACjC,cAAK/B,IAAI,CAACxJ,MAAL,KAAgBxI,SAArB,EAAiCmX,OAAO,CAAC3O,MAAR,CAAemE,SAAf,CAA0BqF,IAAI,CAACxJ,MAA/B;AACjC,cAAKwJ,IAAI,CAAC1F,QAAL,KAAkBtM,SAAvB,EAAmCmX,OAAO,CAAC7K,QAAR,GAAmB0F,IAAI,CAAC1F,QAAxB;;AAEnC,cAAK0F,IAAI,CAACkD,IAAL,KAAclV,SAAnB,EAA+B;AAE9BmX,YAAAA,OAAO,CAAC/D,KAAR,GAAgB47G,aAAa,CAAEh9G,IAAI,CAACkD,IAAL,CAAW,CAAX,CAAF,EAAkBg6G,gBAAlB,CAA7B;AACA/3G,YAAAA,OAAO,CAAC9D,KAAR,GAAgB27G,aAAa,CAAEh9G,IAAI,CAACkD,IAAL,CAAW,CAAX,CAAF,EAAkBg6G,gBAAlB,CAA7B;AAEA;;AAED,cAAKl9G,IAAI,CAACwB,MAAL,KAAgBxT,SAArB,EAAiCmX,OAAO,CAAC3D,MAAR,GAAiBxB,IAAI,CAACwB,MAAtB;AACjC,cAAKxB,IAAI,CAACnS,IAAL,KAAcG,SAAnB,EAA+BmX,OAAO,CAACtX,IAAR,GAAemS,IAAI,CAACnS,IAApB;AAC/B,cAAKmS,IAAI,CAAC0B,QAAL,KAAkB1T,SAAvB,EAAmCmX,OAAO,CAACzD,QAAR,GAAmB1B,IAAI,CAAC0B,QAAxB;AAEnC,cAAK1B,IAAI,CAACuB,SAAL,KAAmBvT,SAAxB,EAAoCmX,OAAO,CAAC5D,SAAR,GAAoBy7G,aAAa,CAAEh9G,IAAI,CAACuB,SAAP,EAAkB47G,cAAlB,CAAjC;AACpC,cAAKn9G,IAAI,CAACsB,SAAL,KAAmBtT,SAAxB,EAAoCmX,OAAO,CAAC7D,SAAR,GAAoB07G,aAAa,CAAEh9G,IAAI,CAACsB,SAAP,EAAkB67G,cAAlB,CAAjC;AACpC,cAAKn9G,IAAI,CAACyB,UAAL,KAAoBzT,SAAzB,EAAqCmX,OAAO,CAAC1D,UAAR,GAAqBzB,IAAI,CAACyB,UAA1B;AAErC,cAAKzB,IAAI,CAACmC,KAAL,KAAenU,SAApB,EAAgCmX,OAAO,CAAChD,KAAR,GAAgBnC,IAAI,CAACmC,KAArB;AAEhC,cAAKnC,IAAI,CAACkC,gBAAL,KAA0BlU,SAA/B,EAA2CmX,OAAO,CAACjD,gBAAR,GAA2BlC,IAAI,CAACkC,gBAAhC;AAC3C,cAAKlC,IAAI,CAACoC,eAAL,KAAyBpU,SAA9B,EAA0CmX,OAAO,CAAC/C,eAAR,GAA0BpC,IAAI,CAACoC,eAA/B;AAE1C,cAAKpC,IAAI,CAACqC,QAAL,KAAkBrU,SAAvB,EAAmCmX,OAAO,CAAC9C,QAAR,GAAmBrC,IAAI,CAACqC,QAAxB;AAEnCS,UAAAA,QAAQ,CAAE9C,IAAI,CAACrQ,IAAP,CAAR,GAAwBwV,OAAxB;AAEA;AAED;;AAED,aAAOrC,QAAP;AAEA;;;WAED,qBAAa9C,IAAb,EAAmBie,UAAnB,EAA+BC,SAA/B,EAA0Cpb,QAA1C,EAAoD2Z,UAApD,EAAiE;AAEhE,UAAI/N,MAAJ;;AAEA,eAAS0uG,WAAT,CAAsB/hH,IAAtB,EAA6B;AAE5B,YAAK4iB,UAAU,CAAE5iB,IAAF,CAAV,KAAuBrN,SAA5B,EAAwC;AAEvC4F,UAAAA,OAAO,CAACC,IAAR,CAAc,wCAAd,EAAwDwH,IAAxD;AAEA;;AAED,eAAO4iB,UAAU,CAAE5iB,IAAF,CAAjB;AAEA;;AAED,eAASgiH,WAAT,CAAsBhiH,IAAtB,EAA6B;AAE5B,YAAKA,IAAI,KAAKrN,SAAd,EAA0B,OAAOA,SAAP;;AAE1B,YAAKyS,KAAK,CAACC,OAAN,CAAerF,IAAf,CAAL,EAA6B;AAE5B,cAAM5M,KAAK,GAAG,EAAd;;AAEA,eAAM,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGyM,IAAI,CAACxM,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,gBAAMgB,IAAI,GAAG0L,IAAI,CAAE1M,CAAF,CAAjB;;AAEA,gBAAKuvB,SAAS,CAAEvuB,IAAF,CAAT,KAAsB3B,SAA3B,EAAuC;AAEtC4F,cAAAA,OAAO,CAACC,IAAR,CAAc,wCAAd,EAAwDlE,IAAxD;AAEA;;AAEDlB,YAAAA,KAAK,CAACN,IAAN,CAAY+vB,SAAS,CAAEvuB,IAAF,CAArB;AAEA;;AAED,iBAAOlB,KAAP;AAEA;;AAED,YAAKyvB,SAAS,CAAE7iB,IAAF,CAAT,KAAsBrN,SAA3B,EAAuC;AAEtC4F,UAAAA,OAAO,CAACC,IAAR,CAAc,wCAAd,EAAwDwH,IAAxD;AAEA;;AAED,eAAO6iB,SAAS,CAAE7iB,IAAF,CAAhB;AAEA;;AAED,eAASi/G,UAAT,CAAqB3qH,IAArB,EAA4B;AAE3B,YAAKmT,QAAQ,CAAEnT,IAAF,CAAR,KAAqB3B,SAA1B,EAAsC;AAErC4F,UAAAA,OAAO,CAACC,IAAR,CAAc,uCAAd,EAAuDlE,IAAvD;AAEA;;AAED,eAAOmT,QAAQ,CAAEnT,IAAF,CAAf;AAEA;;AAED,UAAIwf,QAAJ,EAAcsQ,QAAd;;AAEA,cAASzf,IAAI,CAACnS,IAAd;AAEC,aAAK,OAAL;AAEC6gB,UAAAA,MAAM,GAAG,IAAIy1E,KAAJ,EAAT;;AAEA,cAAKnkF,IAAI,CAAC8e,UAAL,KAAoB9wB,SAAzB,EAAqC;AAEpC,gBAAK8Z,MAAM,CAACw1G,SAAP,CAAkBt9G,IAAI,CAAC8e,UAAvB,CAAL,EAA2C;AAE1CpQ,cAAAA,MAAM,CAACoQ,UAAP,GAAoB,IAAIjiB,KAAJ,CAAWmD,IAAI,CAAC8e,UAAhB,CAApB;AAEA,aAJD,MAIO;AAENpQ,cAAAA,MAAM,CAACoQ,UAAP,GAAoBw7F,UAAU,CAAEt6G,IAAI,CAAC8e,UAAP,CAA9B;AAEA;AAED;;AAED,cAAK9e,IAAI,CAAC+e,WAAL,KAAqB/wB,SAA1B,EAAsC;AAErC0gB,YAAAA,MAAM,CAACqQ,WAAP,GAAqBu7F,UAAU,CAAEt6G,IAAI,CAAC+e,WAAP,CAA/B;AAEA;;AAED,cAAK/e,IAAI,CAACopB,GAAL,KAAap7B,SAAlB,EAA8B;AAE7B,gBAAKgS,IAAI,CAACopB,GAAL,CAASv7B,IAAT,KAAkB,KAAvB,EAA+B;AAE9B6gB,cAAAA,MAAM,CAAC0a,GAAP,GAAa,IAAI86D,GAAJ,CAASlkF,IAAI,CAACopB,GAAL,CAASrtB,KAAlB,EAAyBiE,IAAI,CAACopB,GAAL,CAAS1P,IAAlC,EAAwC1Z,IAAI,CAACopB,GAAL,CAASzP,GAAjD,CAAb;AAEA,aAJD,MAIO,IAAK3Z,IAAI,CAACopB,GAAL,CAASv7B,IAAT,KAAkB,SAAvB,EAAmC;AAEzC6gB,cAAAA,MAAM,CAAC0a,GAAP,GAAa,IAAI66D,OAAJ,CAAajkF,IAAI,CAACopB,GAAL,CAASrtB,KAAtB,EAA6BiE,IAAI,CAACopB,GAAL,CAASguD,OAAtC,CAAb;AAEA;AAED;;AAED;;AAED,aAAK,mBAAL;AAEC1oE,UAAAA,MAAM,GAAG,IAAIwnB,iBAAJ,CAAuBl2B,IAAI,CAACm2B,GAA5B,EAAiCn2B,IAAI,CAACo2B,MAAtC,EAA8Cp2B,IAAI,CAAC0Z,IAAnD,EAAyD1Z,IAAI,CAAC2Z,GAA9D,CAAT;AAEA,cAAK3Z,IAAI,CAACu2B,KAAL,KAAevoC,SAApB,EAAgC0gB,MAAM,CAAC6nB,KAAP,GAAev2B,IAAI,CAACu2B,KAApB;AAChC,cAAKv2B,IAAI,CAACs2B,IAAL,KAActoC,SAAnB,EAA+B0gB,MAAM,CAAC4nB,IAAP,GAAct2B,IAAI,CAACs2B,IAAnB;AAC/B,cAAKt2B,IAAI,CAACy2B,SAAL,KAAmBzoC,SAAxB,EAAoC0gB,MAAM,CAAC+nB,SAAP,GAAmBz2B,IAAI,CAACy2B,SAAxB;AACpC,cAAKz2B,IAAI,CAAC02B,UAAL,KAAoB1oC,SAAzB,EAAqC0gB,MAAM,CAACgoB,UAAP,GAAoB12B,IAAI,CAAC02B,UAAzB;AACrC,cAAK12B,IAAI,CAACw2B,IAAL,KAAcxoC,SAAnB,EAA+B0gB,MAAM,CAAC8nB,IAAP,GAAc/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB1F,IAAI,CAACw2B,IAAxB,CAAd;AAE/B;;AAED,aAAK,oBAAL;AAEC9nB,UAAAA,MAAM,GAAG,IAAI2oC,kBAAJ,CAAwBr3C,IAAI,CAACsZ,IAA7B,EAAmCtZ,IAAI,CAACuZ,KAAxC,EAA+CvZ,IAAI,CAACwZ,GAApD,EAAyDxZ,IAAI,CAACyZ,MAA9D,EAAsEzZ,IAAI,CAAC0Z,IAA3E,EAAiF1Z,IAAI,CAAC2Z,GAAtF,CAAT;AAEA,cAAK3Z,IAAI,CAACs2B,IAAL,KAActoC,SAAnB,EAA+B0gB,MAAM,CAAC4nB,IAAP,GAAct2B,IAAI,CAACs2B,IAAnB;AAC/B,cAAKt2B,IAAI,CAACw2B,IAAL,KAAcxoC,SAAnB,EAA+B0gB,MAAM,CAAC8nB,IAAP,GAAc/hC,MAAM,CAACiR,MAAP,CAAe,EAAf,EAAmB1F,IAAI,CAACw2B,IAAxB,CAAd;AAE/B;;AAED,aAAK,cAAL;AAEC9nB,UAAAA,MAAM,GAAG,IAAIorG,YAAJ,CAAkB95G,IAAI,CAACjE,KAAvB,EAA8BiE,IAAI,CAAC03D,SAAnC,CAAT;AAEA;;AAED,aAAK,kBAAL;AAEChpD,UAAAA,MAAM,GAAG,IAAImrG,gBAAJ,CAAsB75G,IAAI,CAACjE,KAA3B,EAAkCiE,IAAI,CAAC03D,SAAvC,CAAT;AAEA;;AAED,aAAK,YAAL;AAEChpD,UAAAA,MAAM,GAAG,IAAIgrG,UAAJ,CAAgB15G,IAAI,CAACjE,KAArB,EAA4BiE,IAAI,CAAC03D,SAAjC,EAA4C13D,IAAI,CAAC+c,QAAjD,EAA2D/c,IAAI,CAAC+qC,KAAhE,CAAT;AAEA;;AAED,aAAK,eAAL;AAECr8B,UAAAA,MAAM,GAAG,IAAIqrG,aAAJ,CAAmB/5G,IAAI,CAACjE,KAAxB,EAA+BiE,IAAI,CAAC03D,SAApC,EAA+C13D,IAAI,CAACZ,KAApD,EAA2DY,IAAI,CAACX,MAAhE,CAAT;AAEA;;AAED,aAAK,WAAL;AAECqP,UAAAA,MAAM,GAAG,IAAIyqG,SAAJ,CAAen5G,IAAI,CAACjE,KAApB,EAA2BiE,IAAI,CAAC03D,SAAhC,EAA2C13D,IAAI,CAAC+c,QAAhD,EAA0D/c,IAAI,CAACpK,KAA/D,EAAsEoK,IAAI,CAACq4D,QAA3E,EAAqFr4D,IAAI,CAAC+qC,KAA1F,CAAT;AAEA;;AAED,aAAK,iBAAL;AAECr8B,UAAAA,MAAM,GAAG,IAAI6pG,eAAJ,CAAqBv4G,IAAI,CAACjE,KAA1B,EAAiCiE,IAAI,CAAC2rC,WAAtC,EAAmD3rC,IAAI,CAAC03D,SAAxD,CAAT;AAEA;;AAED,aAAK,YAAL;AAEChpD,UAAAA,MAAM,GAAG,IAAI0rG,UAAJ,GAAiBnoB,QAAjB,CAA2BjyF,IAA3B,CAAT;AAEA;;AAED,aAAK,aAAL;AAECmP,UAAAA,QAAQ,GAAGiuG,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAAtB;AACCsQ,UAAAA,QAAQ,GAAG49F,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAtB;AAED/Q,UAAAA,MAAM,GAAG,IAAIm4E,WAAJ,CAAiB13E,QAAjB,EAA2BsQ,QAA3B,CAAT;AAEA,cAAKzf,IAAI,CAACsf,QAAL,KAAkBtxB,SAAvB,EAAmC0gB,MAAM,CAAC4Q,QAAP,GAAkBtf,IAAI,CAACsf,QAAvB;AACnC,cAAKtf,IAAI,CAACuf,UAAL,KAAoBvxB,SAAzB,EAAqC0gB,MAAM,CAAC6Q,UAAP,CAAkB5kB,SAAlB,CAA6BqF,IAAI,CAACuf,UAAlC;AACrC,cAAKvf,IAAI,CAACwf,QAAL,KAAkBxxB,SAAvB,EAAmC0gB,MAAM,CAAC8Q,QAAP,GAAkBxf,IAAI,CAACwf,QAAvB;AAEnC;;AAED,aAAK,MAAL;AAECrQ,UAAAA,QAAQ,GAAGiuG,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAAtB;AACAsQ,UAAAA,QAAQ,GAAG49F,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAtB;AAEA/Q,UAAAA,MAAM,GAAG,IAAIijB,IAAJ,CAAUxiB,QAAV,EAAoBsQ,QAApB,CAAT;AAEA;;AAED,aAAK,eAAL;AAECtQ,UAAAA,QAAQ,GAAGiuG,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAAtB;AACAsQ,UAAAA,QAAQ,GAAG49F,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAtB;AACA,cAAMpZ,KAAK,GAAGrG,IAAI,CAACqG,KAAnB;AACA,cAAMmY,cAAc,GAAGxe,IAAI,CAACwe,cAA5B;AACA,cAAMC,aAAa,GAAGze,IAAI,CAACye,aAA3B;AAEA/P,UAAAA,MAAM,GAAG,IAAI85E,aAAJ,CAAmBr5E,QAAnB,EAA6BsQ,QAA7B,EAAuCpZ,KAAvC,CAAT;AACAqI,UAAAA,MAAM,CAAC8P,cAAP,GAAwB,IAAI2pE,wBAAJ,CAA8B,IAAIn0F,YAAJ,CAAkBwqB,cAAc,CAAC/vB,KAAjC,CAA9B,EAAwE,EAAxE,CAAxB;AACA,cAAKgwB,aAAa,KAAKzwB,SAAvB,EAAmC0gB,MAAM,CAAC+P,aAAP,GAAuB,IAAI0pE,wBAAJ,CAA8B,IAAIn0F,YAAJ,CAAkByqB,aAAa,CAAChwB,KAAhC,CAA9B,EAAuEgwB,aAAa,CAACoL,QAArF,CAAvB;AAEnC;;AAED,aAAK,KAAL;AAECnb,UAAAA,MAAM,GAAG,IAAIy3E,GAAJ,EAAT;AAEA;;AAED,aAAK,MAAL;AAECz3E,UAAAA,MAAM,GAAG,IAAIy6E,IAAJ,CAAUi0B,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAArB,EAAwCkuG,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAnD,CAAT;AAEA;;AAED,aAAK,UAAL;AAEC/Q,UAAAA,MAAM,GAAG,IAAIs7E,QAAJ,CAAcozB,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAAzB,EAA4CkuG,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAvD,CAAT;AAEA;;AAED,aAAK,cAAL;AAEC/Q,UAAAA,MAAM,GAAG,IAAIq7E,YAAJ,CAAkBqzB,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAA7B,EAAgDkuG,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAA3D,CAAT;AAEA;;AAED,aAAK,YAAL;AACA,aAAK,QAAL;AAEC/Q,UAAAA,MAAM,GAAG,IAAI27E,MAAJ,CAAY+yB,WAAW,CAAEp9G,IAAI,CAACmP,QAAP,CAAvB,EAA0CkuG,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAArD,CAAT;AAEA;;AAED,aAAK,QAAL;AAEC/Q,UAAAA,MAAM,GAAG,IAAIi3E,MAAJ,CAAY03B,WAAW,CAAEr9G,IAAI,CAACyf,QAAP,CAAvB,CAAT;AAEA;;AAED,aAAK,OAAL;AAEC/Q,UAAAA,MAAM,GAAG,IAAI4/D,KAAJ,EAAT;AAEA;;AAED,aAAK,MAAL;AAEC5/D,UAAAA,MAAM,GAAG,IAAI84E,IAAJ,EAAT;AAEA;;AAED;AAEC94E,UAAAA,MAAM,GAAG,IAAI4M,QAAJ,EAAT;AAhMF;;AAoMA5M,MAAAA,MAAM,CAAC/e,IAAP,GAAcqQ,IAAI,CAACrQ,IAAnB;AAEA,UAAKqQ,IAAI,CAAC3E,IAAL,KAAcrN,SAAnB,EAA+B0gB,MAAM,CAACrT,IAAP,GAAc2E,IAAI,CAAC3E,IAAnB;;AAE/B,UAAK2E,IAAI,CAACtF,MAAL,KAAgB1M,SAArB,EAAiC;AAEhC0gB,QAAAA,MAAM,CAAChU,MAAP,CAAcC,SAAd,CAAyBqF,IAAI,CAACtF,MAA9B;AAEA,YAAKsF,IAAI,CAACgC,gBAAL,KAA0BhU,SAA/B,EAA2C0gB,MAAM,CAAC1M,gBAAP,GAA0BhC,IAAI,CAACgC,gBAA/B;AAC3C,YAAK0M,MAAM,CAAC1M,gBAAZ,EAA+B0M,MAAM,CAAChU,MAAP,CAAckiB,SAAd,CAAyBlO,MAAM,CAACW,QAAhC,EAA0CX,MAAM,CAAC3H,UAAjD,EAA6D2H,MAAM,CAAC+J,KAApE;AAE/B,OAPD,MAOO;AAEN,YAAKzY,IAAI,CAACqP,QAAL,KAAkBrhB,SAAvB,EAAmC0gB,MAAM,CAACW,QAAP,CAAgB1U,SAAhB,CAA2BqF,IAAI,CAACqP,QAAhC;AACnC,YAAKrP,IAAI,CAAC1F,QAAL,KAAkBtM,SAAvB,EAAmC0gB,MAAM,CAACpU,QAAP,CAAgBK,SAAhB,CAA2BqF,IAAI,CAAC1F,QAAhC;AACnC,YAAK0F,IAAI,CAAC+G,UAAL,KAAoB/Y,SAAzB,EAAqC0gB,MAAM,CAAC3H,UAAP,CAAkBpM,SAAlB,CAA6BqF,IAAI,CAAC+G,UAAlC;AACrC,YAAK/G,IAAI,CAACyY,KAAL,KAAezqB,SAApB,EAAgC0gB,MAAM,CAAC+J,KAAP,CAAa9d,SAAb,CAAwBqF,IAAI,CAACyY,KAA7B;AAEhC;;AAED,UAAKzY,IAAI,CAACqc,UAAL,KAAoBruB,SAAzB,EAAqC0gB,MAAM,CAAC2N,UAAP,GAAoBrc,IAAI,CAACqc,UAAzB;AACrC,UAAKrc,IAAI,CAACsc,aAAL,KAAuBtuB,SAA5B,EAAwC0gB,MAAM,CAAC4N,aAAP,GAAuBtc,IAAI,CAACsc,aAA5B;;AAExC,UAAKtc,IAAI,CAAC8sC,MAAV,EAAmB;AAElB,YAAK9sC,IAAI,CAAC8sC,MAAL,CAAYmrB,IAAZ,KAAqBjqE,SAA1B,EAAsC0gB,MAAM,CAACo+B,MAAP,CAAcmrB,IAAd,GAAqBj4D,IAAI,CAAC8sC,MAAL,CAAYmrB,IAAjC;AACtC,YAAKj4D,IAAI,CAAC8sC,MAAL,CAAYorB,UAAZ,KAA2BlqE,SAAhC,EAA4C0gB,MAAM,CAACo+B,MAAP,CAAcorB,UAAd,GAA2Bl4D,IAAI,CAAC8sC,MAAL,CAAYorB,UAAvC;AAC5C,YAAKl4D,IAAI,CAAC8sC,MAAL,CAAY1/B,MAAZ,KAAuBpf,SAA5B,EAAwC0gB,MAAM,CAACo+B,MAAP,CAAc1/B,MAAd,GAAuBpN,IAAI,CAAC8sC,MAAL,CAAY1/B,MAAnC;AACxC,YAAKpN,IAAI,CAAC8sC,MAAL,CAAYqrB,OAAZ,KAAwBnqE,SAA7B,EAAyC0gB,MAAM,CAACo+B,MAAP,CAAcqrB,OAAd,CAAsBx9D,SAAtB,CAAiCqF,IAAI,CAAC8sC,MAAL,CAAYqrB,OAA7C;AACzC,YAAKn4D,IAAI,CAAC8sC,MAAL,CAAYhhC,MAAZ,KAAuB9d,SAA5B,EAAwC0gB,MAAM,CAACo+B,MAAP,CAAchhC,MAAd,GAAuB,KAAKswG,WAAL,CAAkBp8G,IAAI,CAAC8sC,MAAL,CAAYhhC,MAA9B,CAAvB;AAExC;;AAED,UAAK9L,IAAI,CAACoc,OAAL,KAAiBpuB,SAAtB,EAAkC0gB,MAAM,CAAC0N,OAAP,GAAiBpc,IAAI,CAACoc,OAAtB;AAClC,UAAKpc,IAAI,CAACuc,aAAL,KAAuBvuB,SAA5B,EAAwC0gB,MAAM,CAAC6N,aAAP,GAAuBvc,IAAI,CAACuc,aAA5B;AACxC,UAAKvc,IAAI,CAACwc,WAAL,KAAqBxuB,SAA1B,EAAsC0gB,MAAM,CAAC8N,WAAP,GAAqBxc,IAAI,CAACwc,WAA1B;AACtC,UAAKxc,IAAI,CAACqC,QAAL,KAAkBrU,SAAvB,EAAmC0gB,MAAM,CAACrM,QAAP,GAAkBrC,IAAI,CAACqC,QAAvB;AACnC,UAAKrC,IAAI,CAACwa,MAAL,KAAgBxsB,SAArB,EAAiC0gB,MAAM,CAAC8L,MAAP,CAAcF,IAAd,GAAqBta,IAAI,CAACwa,MAA1B;;AAEjC,UAAKxa,IAAI,CAAC2P,QAAL,KAAkB3hB,SAAvB,EAAmC;AAElC,YAAM2hB,QAAQ,GAAG3P,IAAI,CAAC2P,QAAtB;;AAEA,aAAM,IAAIhhB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGghB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,EAAvC,EAA6C;AAE5C+f,UAAAA,MAAM,CAACD,GAAP,CAAY,KAAK2tG,WAAL,CAAkBzsG,QAAQ,CAAEhhB,CAAF,CAA1B,EAAiCsvB,UAAjC,EAA6CC,SAA7C,EAAwDpb,QAAxD,EAAkE2Z,UAAlE,CAAZ;AAEA;AAED;;AAED,UAAKzc,IAAI,CAACyc,UAAL,KAAoBzuB,SAAzB,EAAqC;AAEpC,YAAMuvH,gBAAgB,GAAGv9G,IAAI,CAACyc,UAA9B;;AAEA,aAAM,IAAI9tB,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG4uH,gBAAgB,CAAC1uH,MAAtC,EAA8CF,IAAC,EAA/C,EAAqD;AAEpD,cAAMgB,IAAI,GAAG4tH,gBAAgB,CAAE5uH,IAAF,CAA7B;AAEA+f,UAAAA,MAAM,CAAC+N,UAAP,CAAkBtuB,IAAlB,CAAwBsuB,UAAU,CAAE9sB,IAAF,CAAlC;AAEA;AAED;;AAED,UAAKqQ,IAAI,CAACnS,IAAL,KAAc,KAAnB,EAA2B;AAE1B,YAAKmS,IAAI,CAACi7D,UAAL,KAAoBjtE,SAAzB,EAAqC0gB,MAAM,CAACusD,UAAP,GAAoBj7D,IAAI,CAACi7D,UAAzB;AAErC,YAAMoN,MAAM,GAAGroE,IAAI,CAACqoE,MAApB;;AAEA,aAAM,IAAIz5E,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGy5E,MAAM,CAACx5E,MAA5B,EAAoCD,CAAC,EAArC,EAA2C;AAE1C,cAAMi0F,KAAK,GAAGxa,MAAM,CAAEz5E,CAAF,CAApB;AACA,cAAM6uB,KAAK,GAAG/O,MAAM,CAAC8O,mBAAP,CAA4B,MAA5B,EAAoCqlE,KAAK,CAACn0E,MAA1C,CAAd;;AAEA,cAAK+O,KAAK,KAAKzvB,SAAf,EAA2B;AAE1B0gB,YAAAA,MAAM,CAAC23E,QAAP,CAAiB5oE,KAAjB,EAAwBolE,KAAK,CAAC9lE,QAA9B;AAEA;AAED;AAED;;AAED,aAAOrO,MAAP;AAEA;;;WAED,uBAAeA,MAAf,EAAuB0P,SAAvB,EAAmC;AAElC,UAAK3pB,MAAM,CAAC67B,IAAP,CAAalS,SAAb,EAAyBvvB,MAAzB,KAAoC,CAAzC,EAA6C;AAE7C6f,MAAAA,MAAM,CAACgP,QAAP,CAAiB,UAAWD,KAAX,EAAmB;AAEnC,YAAKA,KAAK,CAAC4B,aAAN,KAAwB,IAAxB,IAAgC5B,KAAK,CAAC+B,QAAN,KAAmBxxB,SAAxD,EAAoE;AAEnE,cAAMwxB,QAAQ,GAAGpB,SAAS,CAAEX,KAAK,CAAC+B,QAAR,CAA1B;;AAEA,cAAKA,QAAQ,KAAKxxB,SAAlB,EAA8B;AAE7B4F,YAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd,EAAkE4pB,KAAK,CAAC+B,QAAxE;AAEA,WAJD,MAIO;AAEN/B,YAAAA,KAAK,CAAC+/F,IAAN,CAAYh+F,QAAZ,EAAsB/B,KAAK,CAAC8B,UAA5B;AAEA;AAED;AAED,OAlBD;AAoBA;AAED;;;;WAEA,wBAAgBzvB,KAAhB,EAAwB;AAEvB8D,MAAAA,OAAO,CAACC,IAAR,CAAc,+EAAd;AACA,aAAO,KAAK4pH,eAAL,CAAsB3tH,KAAtB,CAAP;AAEA;;;;EAxgCyB6jH,M;;AA4gC3B,IAAMsJ,eAAe,GAAG;AACvB52H,EAAAA,SAAS,EAAEA,SADY;AAEvBC,EAAAA,qBAAqB,EAAEA,qBAFA;AAGvBC,EAAAA,qBAAqB,EAAEA,qBAHA;AAIvBC,EAAAA,gCAAgC,EAAEA,gCAJX;AAKvBC,EAAAA,gCAAgC,EAAEA,gCALX;AAMvBC,EAAAA,uBAAuB,EAAEA;AANF,CAAxB;AASA,IAAMw2H,gBAAgB,GAAG;AACxBv2H,EAAAA,cAAc,EAAEA,cADQ;AAExBC,EAAAA,mBAAmB,EAAEA,mBAFG;AAGxBC,EAAAA,sBAAsB,EAAEA;AAHA,CAAzB;AAMA,IAAMs2H,cAAc,GAAG;AACtBr2H,EAAAA,aAAa,EAAEA,aADO;AAEtBC,EAAAA,0BAA0B,EAAEA,0BAFN;AAGtBE,EAAAA,yBAAyB,EAAEA,yBAHL;AAItBE,EAAAA,YAAY,EAAEA,YAJQ;AAKtBC,EAAAA,yBAAyB,EAAEA,yBALL;AAMtBE,EAAAA,wBAAwB,EAAEA;AANJ,CAAvB;;IASMo2H,iB;;;;;AAEL,6BAAa9J,OAAb,EAAuB;AAAA;;AAAA;;AAEtB,oCAAOA,OAAP;AAEA,aAAK+J,mBAAL,GAA2B,IAA3B;;AAEA,QAAK,OAAOC,iBAAP,KAA6B,WAAlC,EAAgD;AAE/ChqH,MAAAA,OAAO,CAACC,IAAR,CAAc,6DAAd;AAEA;;AAED,QAAK,OAAOkhH,KAAP,KAAiB,WAAtB,EAAoC;AAEnCnhH,MAAAA,OAAO,CAACC,IAAR,CAAc,iDAAd;AAEA;;AAED,aAAKgR,OAAL,GAAe;AAAE3C,MAAAA,gBAAgB,EAAE;AAApB,KAAf;AAlBsB;AAoBtB;;;;WAED,oBAAY2C,OAAZ,EAAsB;AAErB,WAAKA,OAAL,GAAeA,OAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMrE,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAKhyG,GAAG,KAAKxS,SAAb,EAAyBwS,GAAG,GAAG,EAAN;AAEzB,UAAK,KAAK0mD,IAAL,KAAcl5D,SAAnB,EAA+BwS,GAAG,GAAG,KAAK0mD,IAAL,GAAY1mD,GAAlB;AAE/BA,MAAAA,GAAG,GAAG,KAAKozG,OAAL,CAAaV,UAAb,CAAyB1yG,GAAzB,CAAN;AAEA,UAAM6yB,KAAK,GAAG,IAAd;AAEA,UAAMsK,MAAM,GAAGu0E,KAAK,CAAC10E,GAAN,CAAWh9B,GAAX,CAAf;;AAEA,UAAKm9B,MAAM,KAAK3vC,SAAhB,EAA4B;AAE3BqlC,QAAAA,KAAK,CAACugF,OAAN,CAAcb,SAAd,CAAyBvyG,GAAzB;AAEA+zG,QAAAA,UAAU,CAAE,YAAY;AAEvB,cAAKjC,MAAL,EAAcA,MAAM,CAAE30E,MAAF,CAAN;AAEdtK,UAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,SANS,EAMP,CANO,CAAV;AAQA,eAAOm9B,MAAP;AAEA;;AAED,UAAMkgF,YAAY,GAAG,EAArB;AACAA,MAAAA,YAAY,CAACjJ,WAAb,GAA6B,KAAKf,WAAL,KAAqB,WAAvB,GAAuC,aAAvC,GAAuD,SAAlF;AACAgK,MAAAA,YAAY,CAACnJ,OAAb,GAAuB,KAAKV,aAA5B;AAEAe,MAAAA,KAAK,CAAEv0G,GAAF,EAAOq9G,YAAP,CAAL,CAA2B7I,IAA3B,CAAiC,UAAW8I,GAAX,EAAiB;AAEjD,eAAOA,GAAG,CAACxH,IAAJ,EAAP;AAEA,OAJD,EAIItB,IAJJ,CAIU,UAAWsB,IAAX,EAAkB;AAE3B,eAAOsH,iBAAiB,CAAEtH,IAAF,EAAQ7hH,MAAM,CAACiR,MAAP,CAAe2tB,KAAK,CAACxuB,OAArB,EAA8B;AAAEk5G,UAAAA,oBAAoB,EAAE;AAAxB,SAA9B,CAAR,CAAxB;AAEA,OARD,EAQI/I,IARJ,CAQU,UAAWgJ,WAAX,EAAyB;AAElC9L,QAAAA,KAAK,CAACzjG,GAAN,CAAWjO,GAAX,EAAgBw9G,WAAhB;AAEA,YAAK1L,MAAL,EAAcA,MAAM,CAAE0L,WAAF,CAAN;AAEd3qF,QAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,OAhBD,EAgBIw2G,KAhBJ,CAgBW,UAAW1hH,CAAX,EAAe;AAEzB,YAAKk9G,OAAL,EAAeA,OAAO,CAAEl9G,CAAF,CAAP;AAEf+9B,QAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AACA6yB,QAAAA,KAAK,CAACugF,OAAN,CAAcZ,OAAd,CAAuBxyG,GAAvB;AAEA,OAvBD;AAyBA6yB,MAAAA,KAAK,CAACugF,OAAN,CAAcb,SAAd,CAAyBvyG,GAAzB;AAEA;;;;EA3F8BmzG,M;;AA+FhC,IAAIv6B,QAAJ;;AAEA,IAAM6kC,YAAY,GAAG;AAEpB1+G,EAAAA,UAAU,EAAE,sBAAY;AAEvB,QAAK65E,QAAQ,KAAKprF,SAAlB,EAA8B;AAE7BorF,MAAAA,QAAQ,GAAG,KAAM8kC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAApC,GAAX;AAEA;;AAED,WAAO/kC,QAAP;AAEA,GAZmB;AAcpB58C,EAAAA,UAAU,EAAE,oBAAW1sC,KAAX,EAAmB;AAE9BspF,IAAAA,QAAQ,GAAGtpF,KAAX;AAEA;AAlBmB,CAArB;;IAsBMsuH,W;;;;;AAEL,uBAAaxK,OAAb,EAAuB;AAAA;;AAAA,gCAEfA,OAFe;AAItB;;;;WAED,cAAMpzG,GAAN,EAAW8xG,MAAX,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAyC;AAExC,UAAMn/E,KAAK,GAAG,IAAd;AAEA,UAAMigF,MAAM,GAAG,IAAIgB,UAAJ,CAAgB,KAAKV,OAArB,CAAf;AACAN,MAAAA,MAAM,CAACiE,eAAP,CAAwB,aAAxB;AACAjE,MAAAA,MAAM,CAAC6D,OAAP,CAAgB,KAAKjwD,IAArB;AACAosD,MAAAA,MAAM,CAAC8D,gBAAP,CAAyB,KAAKpD,aAA9B;AACAV,MAAAA,MAAM,CAAC+D,kBAAP,CAA2B,KAAKvD,eAAhC;AACAR,MAAAA,MAAM,CAACc,IAAP,CAAa5zG,GAAb,EAAkB,UAAWrF,MAAX,EAAoB;AAErC,YAAI;AAEH;AACA;AACA,cAAMkjH,UAAU,GAAGljH,MAAM,CAACzM,KAAP,CAAc,CAAd,CAAnB;AAEA,cAAM4Q,OAAO,GAAG2+G,YAAY,CAAC1+G,UAAb,EAAhB;AACAD,UAAAA,OAAO,CAACg/G,eAAR,CAAyBD,UAAzB,EAAqC,UAAWE,WAAX,EAAyB;AAE7DjM,YAAAA,MAAM,CAAEiM,WAAF,CAAN;AAEA,WAJD;AAMA,SAbD,CAaE,OAAQjpH,CAAR,EAAY;AAEb,cAAKk9G,OAAL,EAAe;AAEdA,YAAAA,OAAO,CAAEl9G,CAAF,CAAP;AAEA,WAJD,MAIO;AAEN1B,YAAAA,OAAO,CAACkD,KAAR,CAAexB,CAAf;AAEA;;AAED+9B,UAAAA,KAAK,CAACugF,OAAN,CAAcX,SAAd,CAAyBzyG,GAAzB;AAEA;AAED,OA/BD,EA+BG+xG,UA/BH,EA+BeC,OA/Bf;AAiCA;;;;EAlDwBmB,M;;IAsDpB6K,oB;;;;;AAEL,gCAAa9yE,QAAb,EAAuBC,WAAvB,EAAoD;AAAA;;AAAA,QAAhB+rB,SAAgB,uEAAJ,CAAI;;AAAA;;AAEnD,oCAAO1pE,SAAP,EAAkB0pE,SAAlB;AAEA,aAAK+mD,sBAAL,GAA8B,IAA9B;AAEA,QAAMjgH,MAAM,GAAG,IAAI3B,KAAJ,GAAYlJ,GAAZ,CAAiB+3C,QAAjB,CAAf;AACA,QAAMjtC,MAAM,GAAG,IAAI5B,KAAJ,GAAYlJ,GAAZ,CAAiBg4C,WAAjB,CAAf;AAEA,QAAM+yE,GAAG,GAAG,IAAI3zG,OAAJ,CAAavM,MAAM,CAACvE,CAApB,EAAuBuE,MAAM,CAACnF,CAA9B,EAAiCmF,MAAM,CAAC1L,CAAxC,CAAZ;AACA,QAAM6rH,MAAM,GAAG,IAAI5zG,OAAJ,CAAatM,MAAM,CAACxE,CAApB,EAAuBwE,MAAM,CAACpF,CAA9B,EAAiCoF,MAAM,CAAC3L,CAAxC,CAAf,CAVmD,CAYnD;;AACA,QAAMy7F,EAAE,GAAGr/F,IAAI,CAACyG,IAAL,CAAWzG,IAAI,CAACC,EAAhB,CAAX;AACA,QAAMiY,EAAE,GAAGmnF,EAAE,GAAGr/F,IAAI,CAACyG,IAAL,CAAW,IAAX,CAAhB;;AAEA,aAAKkiE,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0B96D,IAA1B,CAAgC0hH,GAAhC,EAAsCjwG,GAAtC,CAA2CkwG,MAA3C,EAAoDtpH,cAApD,CAAoEk5F,EAApE;;AACA,aAAK12B,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0B96D,IAA1B,CAAgC0hH,GAAhC,EAAsC1xG,GAAtC,CAA2C2xG,MAA3C,EAAoDtpH,cAApD,CAAoE+R,EAApE;;AAjBmD;AAmBnD;;;EArBiCgzG,U;;IAyB7BwE,iB;;;;;AAEL,6BAAa7iH,KAAb,EAAoC;AAAA;;AAAA,QAAhB27D,SAAgB,uEAAJ,CAAI;;AAAA;;AAEnC,oCAAO1pE,SAAP,EAAkB0pE,SAAlB;AAEA,aAAKmnD,mBAAL,GAA2B,IAA3B;AAEA,QAAMrgH,MAAM,GAAG,IAAI3B,KAAJ,GAAYlJ,GAAZ,CAAiBoI,KAAjB,CAAf,CANmC,CAQnC;;AACA,aAAK87D,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0BnkE,GAA1B,CAA+B6K,MAAM,CAACvE,CAAtC,EAAyCuE,MAAM,CAACnF,CAAhD,EAAmDmF,MAAM,CAAC1L,CAA1D,EAA8DuC,cAA9D,CAA8E,IAAInG,IAAI,CAACyG,IAAL,CAAWzG,IAAI,CAACC,EAAhB,CAAlF;;AATmC;AAWnC;;;EAb8BirH,U;;AAiBhC,IAAM0E,SAAS,GAAG,aAAc,IAAItpG,OAAJ,EAAhC;;AACA,IAAMupG,QAAQ,GAAG,aAAc,IAAIvpG,OAAJ,EAA/B;;AACA,IAAMwpG,iBAAiB,GAAG,aAAc,IAAIxpG,OAAJ,EAAxC;;IAEMypG,Y;AAEL,0BAAc;AAAA;;AAEb,SAAKpxH,IAAL,GAAY,cAAZ;AAEA,SAAKuoC,MAAL,GAAc,CAAd;AAEA,SAAK8oF,MAAL,GAAc,KAAd;AAEA,SAAKvtC,OAAL,GAAe,IAAIz7C,iBAAJ,EAAf;AACA,SAAKy7C,OAAL,CAAan3D,MAAb,CAAoB45C,MAApB,CAA4B,CAA5B;AACA,SAAKud,OAAL,CAAa3vE,gBAAb,GAAgC,KAAhC;AAEA,SAAK4vE,OAAL,GAAe,IAAI17C,iBAAJ,EAAf;AACA,SAAK07C,OAAL,CAAap3D,MAAb,CAAoB45C,MAApB,CAA4B,CAA5B;AACA,SAAKwd,OAAL,CAAa5vE,gBAAb,GAAgC,KAAhC;AAEA,SAAKm9G,MAAL,GAAc;AACb5oF,MAAAA,KAAK,EAAE,IADM;AAEbJ,MAAAA,GAAG,EAAE,IAFQ;AAGbC,MAAAA,MAAM,EAAE,IAHK;AAIb1c,MAAAA,IAAI,EAAE,IAJO;AAKbC,MAAAA,GAAG,EAAE,IALQ;AAMb2c,MAAAA,IAAI,EAAE,IANO;AAOb4oF,MAAAA,MAAM,EAAE;AAPK,KAAd;AAUA;;;;WAED,gBAAQpzG,MAAR,EAAiB;AAEhB,UAAM+T,KAAK,GAAG,KAAKs/F,MAAnB;AAEA,UAAMt8G,WAAW,GAAGgd,KAAK,CAAC0W,KAAN,KAAgBzqB,MAAM,CAACyqB,KAAvB,IAAgC1W,KAAK,CAACsW,GAAN,KAAcrqB,MAAM,CAACqqB,GAArD,IACnBtW,KAAK,CAACuW,MAAN,KAAiBtqB,MAAM,CAACsqB,MAAP,GAAgB,KAAKA,MADnB,IAC6BvW,KAAK,CAACnG,IAAN,KAAe5N,MAAM,CAAC4N,IADnD,IAEnBmG,KAAK,CAAClG,GAAN,KAAc7N,MAAM,CAAC6N,GAFF,IAESkG,KAAK,CAACyW,IAAN,KAAexqB,MAAM,CAACwqB,IAF/B,IAEuCzW,KAAK,CAACq/F,MAAN,KAAiB,KAAKA,MAFjF;;AAIA,UAAKr8G,WAAL,EAAmB;AAElBgd,QAAAA,KAAK,CAAC0W,KAAN,GAAczqB,MAAM,CAACyqB,KAArB;AACA1W,QAAAA,KAAK,CAACsW,GAAN,GAAYrqB,MAAM,CAACqqB,GAAnB;AACAtW,QAAAA,KAAK,CAACuW,MAAN,GAAetqB,MAAM,CAACsqB,MAAP,GAAgB,KAAKA,MAApC;AACAvW,QAAAA,KAAK,CAACnG,IAAN,GAAa5N,MAAM,CAAC4N,IAApB;AACAmG,QAAAA,KAAK,CAAClG,GAAN,GAAY7N,MAAM,CAAC6N,GAAnB;AACAkG,QAAAA,KAAK,CAACyW,IAAN,GAAaxqB,MAAM,CAACwqB,IAApB;AACAzW,QAAAA,KAAK,CAACq/F,MAAN,GAAe,KAAKA,MAApB,CARkB,CAUlB;AACA;;AAEAF,QAAAA,iBAAiB,CAAChiH,IAAlB,CAAwB8O,MAAM,CAACG,gBAA/B;;AACA,YAAMmzG,UAAU,GAAGv/F,KAAK,CAACq/F,MAAN,GAAe,CAAlC;AACA,YAAMG,kBAAkB,GAAGD,UAAU,GAAGv/F,KAAK,CAACnG,IAAnB,GAA0BmG,KAAK,CAAC0W,KAA3D;AACA,YAAM+oF,IAAI,GAAKz/F,KAAK,CAACnG,IAAN,GAAaxqB,IAAI,CAAC8nC,GAAL,CAAU/nC,OAAO,GAAG4wB,KAAK,CAACsW,GAAhB,GAAsB,GAAhC,CAAf,GAAyDtW,KAAK,CAACyW,IAA5E;AACA,YAAIipF,IAAJ,EAAUC,IAAV,CAjBkB,CAmBlB;;AAEAT,QAAAA,QAAQ,CAACxpH,QAAT,CAAmB,EAAnB,IAA0B,CAAE6pH,UAA5B;AACAN,QAAAA,SAAS,CAACvpH,QAAV,CAAoB,EAApB,IAA2B6pH,UAA3B,CAtBkB,CAwBlB;;AAEAG,QAAAA,IAAI,GAAG,CAAED,IAAF,GAASz/F,KAAK,CAACuW,MAAf,GAAwBipF,kBAA/B;AACAG,QAAAA,IAAI,GAAGF,IAAI,GAAGz/F,KAAK,CAACuW,MAAb,GAAsBipF,kBAA7B;AAEAL,QAAAA,iBAAiB,CAACzpH,QAAlB,CAA4B,CAA5B,IAAkC,IAAIsqB,KAAK,CAACnG,IAAV,IAAmB8lG,IAAI,GAAGD,IAA1B,CAAlC;AACAP,QAAAA,iBAAiB,CAACzpH,QAAlB,CAA4B,CAA5B,IAAkC,CAAEiqH,IAAI,GAAGD,IAAT,KAAoBC,IAAI,GAAGD,IAA3B,CAAlC;AAEA,aAAK5tC,OAAL,CAAa1lE,gBAAb,CAA8BjP,IAA9B,CAAoCgiH,iBAApC,EAhCkB,CAkClB;;AAEAO,QAAAA,IAAI,GAAG,CAAED,IAAF,GAASz/F,KAAK,CAACuW,MAAf,GAAwBipF,kBAA/B;AACAG,QAAAA,IAAI,GAAGF,IAAI,GAAGz/F,KAAK,CAACuW,MAAb,GAAsBipF,kBAA7B;AAEAL,QAAAA,iBAAiB,CAACzpH,QAAlB,CAA4B,CAA5B,IAAkC,IAAIsqB,KAAK,CAACnG,IAAV,IAAmB8lG,IAAI,GAAGD,IAA1B,CAAlC;AACAP,QAAAA,iBAAiB,CAACzpH,QAAlB,CAA4B,CAA5B,IAAkC,CAAEiqH,IAAI,GAAGD,IAAT,KAAoBC,IAAI,GAAGD,IAA3B,CAAlC;AAEA,aAAK3tC,OAAL,CAAa3lE,gBAAb,CAA8BjP,IAA9B,CAAoCgiH,iBAApC;AAEA;;AAED,WAAKrtC,OAAL,CAAaxlE,WAAb,CAAyBnP,IAAzB,CAA+B8O,MAAM,CAACK,WAAtC,EAAoD0Q,QAApD,CAA8DkiG,QAA9D;AACA,WAAKntC,OAAL,CAAazlE,WAAb,CAAyBnP,IAAzB,CAA+B8O,MAAM,CAACK,WAAtC,EAAoD0Q,QAApD,CAA8DiiG,SAA9D;AAEA;;;;;;IAIIW,K;AAEL,mBAAgC;AAAA,QAAnBC,SAAmB,uEAAP,IAAO;;AAAA;;AAE/B,SAAKA,SAAL,GAAiBA,SAAjB;AAEA,SAAKlR,SAAL,GAAiB,CAAjB;AACA,SAAKmR,OAAL,GAAe,CAAf;AACA,SAAKC,WAAL,GAAmB,CAAnB;AAEA,SAAKC,OAAL,GAAe,KAAf;AAEA;;;;WAED,iBAAQ;AAEP,WAAKrR,SAAL,GAAiBsR,GAAG,EAApB;AAEA,WAAKH,OAAL,GAAe,KAAKnR,SAApB;AACA,WAAKoR,WAAL,GAAmB,CAAnB;AACA,WAAKC,OAAL,GAAe,IAAf;AAEA;;;WAED,gBAAO;AAEN,WAAKE,cAAL;AACA,WAAKF,OAAL,GAAe,KAAf;AACA,WAAKH,SAAL,GAAiB,KAAjB;AAEA;;;WAED,0BAAiB;AAEhB,WAAKM,QAAL;AACA,aAAO,KAAKJ,WAAZ;AAEA;;;WAED,oBAAW;AAEV,UAAIjuB,IAAI,GAAG,CAAX;;AAEA,UAAK,KAAK+tB,SAAL,IAAkB,CAAE,KAAKG,OAA9B,EAAwC;AAEvC,aAAK1zF,KAAL;AACA,eAAO,CAAP;AAEA;;AAED,UAAK,KAAK0zF,OAAV,EAAoB;AAEnB,YAAMI,OAAO,GAAGH,GAAG,EAAnB;AAEAnuB,QAAAA,IAAI,GAAG,CAAEsuB,OAAO,GAAG,KAAKN,OAAjB,IAA6B,IAApC;AACA,aAAKA,OAAL,GAAeM,OAAf;AAEA,aAAKL,WAAL,IAAoBjuB,IAApB;AAEA;;AAED,aAAOA,IAAP;AAEA;;;;;;AAIF,SAASmuB,GAAT,GAAe;AAEd,SAAO,CAAE,OAAOI,WAAP,KAAuB,WAAvB,GAAqCC,IAArC,GAA4CD,WAA9C,EAA4DJ,GAA5D,EAAP,CAFc,CAE4D;AAE1E;;AAED,IAAMM,WAAW,GAAG,aAAc,IAAIr1G,OAAJ,EAAlC;;AACA,IAAMs1G,aAAa,GAAG,aAAc,IAAI75G,UAAJ,EAApC;;AACA,IAAM85G,QAAQ,GAAG,aAAc,IAAIv1G,OAAJ,EAA/B;;AACA,IAAMw1G,cAAc,GAAG,aAAc,IAAIx1G,OAAJ,EAArC;;IAEMy1G,a;;;;;AAEL,2BAAc;AAAA;;AAAA;;AAEb;AAEA,aAAK3yH,IAAL,GAAY,eAAZ;AAEA,aAAKyR,OAAL,GAAe2+G,YAAY,CAAC1+G,UAAb,EAAf;AAEA,aAAKkhH,IAAL,GAAY,SAAKnhH,OAAL,CAAaohH,UAAb,EAAZ;;AACA,aAAKD,IAAL,CAAUE,OAAV,CAAmB,SAAKrhH,OAAL,CAAashH,WAAhC;;AAEA,aAAKz2D,MAAL,GAAc,IAAd;AAEA,aAAK02D,SAAL,GAAiB,CAAjB,CAba,CAeb;;AAEA,aAAKC,MAAL,GAAc,IAAIrB,KAAJ,EAAd;AAjBa;AAmBb;;;;WAED,oBAAW;AAEV,aAAO,KAAKgB,IAAZ;AAEA;;;WAED,wBAAe;AAEd,UAAK,KAAKt2D,MAAL,KAAgB,IAArB,EAA4B;AAE3B,aAAKs2D,IAAL,CAAU5tC,UAAV,CAAsB,KAAK1oB,MAA3B;AACA,aAAKA,MAAL,CAAY0oB,UAAZ,CAAwB,KAAKvzE,OAAL,CAAashH,WAArC;AACA,aAAKH,IAAL,CAAUE,OAAV,CAAmB,KAAKrhH,OAAL,CAAashH,WAAhC;AACA,aAAKz2D,MAAL,GAAc,IAAd;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKA,MAAZ;AAEA;;;WAED,mBAAWr6D,KAAX,EAAmB;AAElB,UAAK,KAAKq6D,MAAL,KAAgB,IAArB,EAA4B;AAE3B,aAAKs2D,IAAL,CAAU5tC,UAAV,CAAsB,KAAK1oB,MAA3B;AACA,aAAKA,MAAL,CAAY0oB,UAAZ,CAAwB,KAAKvzE,OAAL,CAAashH,WAArC;AAEA,OALD,MAKO;AAEN,aAAKH,IAAL,CAAU5tC,UAAV,CAAsB,KAAKvzE,OAAL,CAAashH,WAAnC;AAEA;;AAED,WAAKz2D,MAAL,GAAcr6D,KAAd;AACA,WAAK2wH,IAAL,CAAUE,OAAV,CAAmB,KAAKx2D,MAAxB;AACA,WAAKA,MAAL,CAAYw2D,OAAZ,CAAqB,KAAKrhH,OAAL,CAAashH,WAAlC;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAO,KAAKH,IAAL,CAAUA,IAAV,CAAe3wH,KAAtB;AAEA;;;WAED,yBAAiBA,KAAjB,EAAyB;AAExB,WAAK2wH,IAAL,CAAUA,IAAV,CAAeM,eAAf,CAAgCjxH,KAAhC,EAAuC,KAAKwP,OAAL,CAAa0hH,WAApD,EAAiE,IAAjE;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmBnjG,KAAnB,EAA2B;AAE1B,2FAAyBA,KAAzB;;AAEA,UAAM/vB,QAAQ,GAAG,KAAKwR,OAAL,CAAaxR,QAA9B;AACA,UAAMqpB,EAAE,GAAG,KAAKA,EAAhB;AAEA,WAAK0pG,SAAL,GAAiB,KAAKC,MAAL,CAAYd,QAAZ,EAAjB;AAEA,WAAK7zG,WAAL,CAAiByQ,SAAjB,CAA4BwjG,WAA5B,EAAyCC,aAAzC,EAAwDC,QAAxD;;AAEAC,MAAAA,cAAc,CAAC5sH,GAAf,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAE,CAA5B,EAAgCuX,eAAhC,CAAiDm1G,aAAjD;;AAEA,UAAKvyH,QAAQ,CAACmzH,SAAd,EAA0B;AAEzB;AAEA,YAAMxS,OAAO,GAAG,KAAKnvG,OAAL,CAAa0hH,WAAb,GAA2B,KAAKH,SAAhD;AAEA/yH,QAAAA,QAAQ,CAACmzH,SAAT,CAAmBC,uBAAnB,CAA4Cd,WAAW,CAAC/vH,CAAxD,EAA2Do+G,OAA3D;AACA3gH,QAAAA,QAAQ,CAACqzH,SAAT,CAAmBD,uBAAnB,CAA4Cd,WAAW,CAACzvH,CAAxD,EAA2D89G,OAA3D;AACA3gH,QAAAA,QAAQ,CAACszH,SAAT,CAAmBF,uBAAnB,CAA4Cd,WAAW,CAAC78G,CAAxD,EAA2DkrG,OAA3D;AACA3gH,QAAAA,QAAQ,CAACuzH,QAAT,CAAkBH,uBAAlB,CAA2CX,cAAc,CAAClwH,CAA1D,EAA6Do+G,OAA7D;AACA3gH,QAAAA,QAAQ,CAACwzH,QAAT,CAAkBJ,uBAAlB,CAA2CX,cAAc,CAAC5vH,CAA1D,EAA6D89G,OAA7D;AACA3gH,QAAAA,QAAQ,CAACyzH,QAAT,CAAkBL,uBAAlB,CAA2CX,cAAc,CAACh9G,CAA1D,EAA6DkrG,OAA7D;AACA3gH,QAAAA,QAAQ,CAAC0zH,GAAT,CAAaN,uBAAb,CAAsC/pG,EAAE,CAAC9mB,CAAzC,EAA4Co+G,OAA5C;AACA3gH,QAAAA,QAAQ,CAAC2zH,GAAT,CAAaP,uBAAb,CAAsC/pG,EAAE,CAACxmB,CAAzC,EAA4C89G,OAA5C;AACA3gH,QAAAA,QAAQ,CAAC4zH,GAAT,CAAaR,uBAAb,CAAsC/pG,EAAE,CAAC5T,CAAzC,EAA4CkrG,OAA5C;AAEA,OAhBD,MAgBO;AAEN3gH,QAAAA,QAAQ,CAAC6zH,WAAT,CAAsBvB,WAAW,CAAC/vH,CAAlC,EAAqC+vH,WAAW,CAACzvH,CAAjD,EAAoDyvH,WAAW,CAAC78G,CAAhE;AACAzV,QAAAA,QAAQ,CAAC8zH,cAAT,CAAyBrB,cAAc,CAAClwH,CAAxC,EAA2CkwH,cAAc,CAAC5vH,CAA1D,EAA6D4vH,cAAc,CAACh9G,CAA5E,EAA+E4T,EAAE,CAAC9mB,CAAlF,EAAqF8mB,EAAE,CAACxmB,CAAxF,EAA2FwmB,EAAE,CAAC5T,CAA9F;AAEA;AAED;;;;EAzH0B+X,Q;;IA6HtBumG,K;;;;;AAEL,iBAAa/zH,QAAb,EAAwB;AAAA;;AAAA;;AAEvB;AAEA,aAAKD,IAAL,GAAY,OAAZ;AAEA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKwR,OAAL,GAAexR,QAAQ,CAACwR,OAAxB;AAEA,aAAKmhH,IAAL,GAAY,SAAKnhH,OAAL,CAAaohH,UAAb,EAAZ;;AACA,aAAKD,IAAL,CAAUE,OAAV,CAAmB7yH,QAAQ,CAACg0H,QAAT,EAAnB;;AAEA,aAAKC,QAAL,GAAgB,KAAhB;AAEA,aAAK5mH,MAAL,GAAc,IAAd;AACA,aAAK6mH,MAAL,GAAc,CAAd;AACA,aAAKC,IAAL,GAAY,KAAZ;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA,aAAKC,OAAL,GAAe,CAAf;AACA,aAAK/rH,MAAL,GAAc,CAAd;AACA,aAAK85G,QAAL,GAAgBliH,SAAhB;AACA,aAAKo0H,YAAL,GAAoB,CAApB;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKC,kBAAL,GAA0B,IAA1B;AACA,aAAK1lH,MAAL,GAAc,IAAd;AACA,aAAK2lH,UAAL,GAAkB,OAAlB;AAEA,aAAKC,UAAL,GAAkB,CAAlB;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA,aAAKC,UAAL,GAAkB,KAAlB;AAEA,aAAKC,OAAL,GAAe,EAAf;AA/BuB;AAiCvB;;;;WAED,qBAAY;AAEX,aAAO,KAAKlC,IAAZ;AAEA;;;WAED,uBAAemC,SAAf,EAA2B;AAE1B,WAAKN,kBAAL,GAA0B,KAA1B;AACA,WAAKC,UAAL,GAAkB,WAAlB;AACA,WAAK3lH,MAAL,GAAcgmH,SAAd;AACA,WAAKjC,OAAL;AAEA,aAAO,IAAP;AAEA;;;WAED,+BAAuBkC,YAAvB,EAAsC;AAErC,WAAKP,kBAAL,GAA0B,KAA1B;AACA,WAAKC,UAAL,GAAkB,WAAlB;AACA,WAAK3lH,MAAL,GAAc,KAAK0C,OAAL,CAAawjH,wBAAb,CAAuCD,YAAvC,CAAd;AACA,WAAKlC,OAAL;AAEA,aAAO,IAAP;AAEA;;;WAED,8BAAsBoC,WAAtB,EAAoC;AAEnC,WAAKT,kBAAL,GAA0B,KAA1B;AACA,WAAKC,UAAL,GAAkB,iBAAlB;AACA,WAAK3lH,MAAL,GAAc,KAAK0C,OAAL,CAAa0jH,uBAAb,CAAsCD,WAAtC,CAAd;AACA,WAAKpC,OAAL;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWpC,WAAX,EAAyB;AAExB,WAAKpjH,MAAL,GAAcojH,WAAd;AACA,WAAKgE,UAAL,GAAkB,QAAlB;AAEA,UAAK,KAAKR,QAAV,EAAqB,KAAKkB,IAAL;AAErB,aAAO,IAAP;AAEA;;;WAED,gBAAkB;AAAA,UAAZC,KAAY,uEAAJ,CAAI;;AAEjB,UAAK,KAAKb,SAAL,KAAmB,IAAxB,EAA+B;AAE9BzuH,QAAAA,OAAO,CAACC,IAAR,CAAc,wCAAd;AACA;AAEA;;AAED,UAAK,KAAKyuH,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA;AAEA;;AAED,WAAK2uH,UAAL,GAAkB,KAAKljH,OAAL,CAAa0hH,WAAb,GAA2BkC,KAA7C;AAEA,UAAMtmH,MAAM,GAAG,KAAK0C,OAAL,CAAa6jH,kBAAb,EAAf;AACAvmH,MAAAA,MAAM,CAACzB,MAAP,GAAgB,KAAKA,MAArB;AACAyB,MAAAA,MAAM,CAACqlH,IAAP,GAAc,KAAKA,IAAnB;AACArlH,MAAAA,MAAM,CAACslH,SAAP,GAAmB,KAAKA,SAAxB;AACAtlH,MAAAA,MAAM,CAACulH,OAAP,GAAiB,KAAKA,OAAtB;AACAvlH,MAAAA,MAAM,CAACwmH,OAAP,GAAiB,KAAKC,OAAL,CAAa7F,IAAb,CAAmB,IAAnB,CAAjB;AACA5gH,MAAAA,MAAM,CAACuvB,KAAP,CAAc,KAAKq2F,UAAnB,EAA+B,KAAKC,SAAL,GAAiB,KAAKrsH,MAArD,EAA6D,KAAK85G,QAAlE;AAEA,WAAKmS,SAAL,GAAiB,IAAjB;AAEA,WAAKzlH,MAAL,GAAcA,MAAd;AAEA,WAAK0mH,SAAL,CAAgB,KAAKtB,MAArB;AACA,WAAKuB,eAAL,CAAsB,KAAKnB,YAA3B;AAEA,aAAO,KAAKzB,OAAL,EAAP;AAEA;;;WAED,iBAAQ;AAEP,UAAK,KAAK2B,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA;AAEA;;AAED,UAAK,KAAKwuH,SAAL,KAAmB,IAAxB,EAA+B;AAE9B;AAEA,aAAKI,SAAL,IAAkBvzH,IAAI,CAACc,GAAL,CAAU,KAAKsP,OAAL,CAAa0hH,WAAb,GAA2B,KAAKwB,UAA1C,EAAsD,CAAtD,IAA4D,KAAKJ,YAAnF;;AAEA,YAAK,KAAKH,IAAL,KAAc,IAAnB,EAA0B;AAEzB;AAEA,eAAKQ,SAAL,GAAiB,KAAKA,SAAL,IAAmB,KAAKvS,QAAL,IAAiB,KAAK/0G,MAAL,CAAY+0G,QAAhD,CAAjB;AAEA;;AAED,aAAKtzG,MAAL,CAAYy/B,IAAZ;AACA,aAAKz/B,MAAL,CAAYwmH,OAAZ,GAAsB,IAAtB;AAEA,aAAKf,SAAL,GAAiB,KAAjB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,UAAK,KAAKC,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA;AAEA;;AAED,WAAK4uH,SAAL,GAAiB,CAAjB;AAEA,WAAK7lH,MAAL,CAAYy/B,IAAZ;AACA,WAAKz/B,MAAL,CAAYwmH,OAAZ,GAAsB,IAAtB;AACA,WAAKf,SAAL,GAAiB,KAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,UAAK,KAAKM,OAAL,CAAa9zH,MAAb,GAAsB,CAA3B,EAA+B;AAE9B,aAAK+N,MAAL,CAAY+jH,OAAZ,CAAqB,KAAKgC,OAAL,CAAc,CAAd,CAArB;;AAEA,aAAM,IAAIh0H,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAK+zH,OAAL,CAAa9zH,MAAlC,EAA0CF,CAAC,GAAGC,CAA9C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvD,eAAKg0H,OAAL,CAAch0H,CAAC,GAAG,CAAlB,EAAsBgyH,OAAtB,CAA+B,KAAKgC,OAAL,CAAch0H,CAAd,CAA/B;AAEA;;AAED,aAAKg0H,OAAL,CAAc,KAAKA,OAAL,CAAa9zH,MAAb,GAAsB,CAApC,EAAwC8xH,OAAxC,CAAiD,KAAK6C,SAAL,EAAjD;AAEA,OAZD,MAYO;AAEN,aAAK5mH,MAAL,CAAY+jH,OAAZ,CAAqB,KAAK6C,SAAL,EAArB;AAEA;;AAED,WAAKd,UAAL,GAAkB,IAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAa;AAEZ,UAAK,KAAKC,OAAL,CAAa9zH,MAAb,GAAsB,CAA3B,EAA+B;AAE9B,aAAK+N,MAAL,CAAYi2E,UAAZ,CAAwB,KAAK8vC,OAAL,CAAc,CAAd,CAAxB;;AAEA,aAAM,IAAIh0H,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAK+zH,OAAL,CAAa9zH,MAAlC,EAA0CF,CAAC,GAAGC,CAA9C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvD,eAAKg0H,OAAL,CAAch0H,CAAC,GAAG,CAAlB,EAAsBkkF,UAAtB,CAAkC,KAAK8vC,OAAL,CAAch0H,CAAd,CAAlC;AAEA;;AAED,aAAKg0H,OAAL,CAAc,KAAKA,OAAL,CAAa9zH,MAAb,GAAsB,CAApC,EAAwCgkF,UAAxC,CAAoD,KAAK2wC,SAAL,EAApD;AAEA,OAZD,MAYO;AAEN,aAAK5mH,MAAL,CAAYi2E,UAAZ,CAAwB,KAAK2wC,SAAL,EAAxB;AAEA;;AAED,WAAKd,UAAL,GAAkB,KAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,sBAAa;AAEZ,aAAO,KAAKC,OAAZ;AAEA;;;WAED,oBAAY7yH,KAAZ,EAAoB;AAEnB,UAAK,CAAEA,KAAP,EAAeA,KAAK,GAAG,EAAR;;AAEf,UAAK,KAAK4yH,UAAL,KAAoB,IAAzB,EAAgC;AAE/B,aAAK7vC,UAAL;AACA,aAAK8vC,OAAL,GAAe7yH,KAAK,CAACpB,KAAN,EAAf;AACA,aAAKiyH,OAAL;AAEA,OAND,MAMO;AAEN,aAAKgC,OAAL,GAAe7yH,KAAK,CAACpB,KAAN,EAAf;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,mBAAWoB,KAAX,EAAmB;AAElB,WAAKkyH,MAAL,GAAclyH,KAAd;AAEA,UAAK,KAAK8M,MAAL,CAAYolH,MAAZ,KAAuBh0H,SAA5B,EAAwC,OAJtB,CAI8B;;AAEhD,UAAK,KAAKq0H,SAAL,KAAmB,IAAxB,EAA+B;AAE9B,aAAKzlH,MAAL,CAAYolH,MAAZ,CAAmBjB,eAAnB,CAAoC,KAAKiB,MAAzC,EAAiD,KAAK1iH,OAAL,CAAa0hH,WAA9D,EAA2E,IAA3E;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKgB,MAAZ;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKyB,UAAL,GAAmB,CAAnB,CAAP;AAEA;;;WAED,mBAAWt5D,MAAX,EAAoB;AAEnB,aAAO,KAAKu5D,UAAL,CAAiBv5D,MAAM,GAAG,CAAEA,MAAF,CAAH,GAAgB,EAAvC,CAAP;AAEA;;;WAED,yBAAiBr6D,KAAjB,EAAyB;AAExB,UAAK,KAAKwyH,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA;AAEA;;AAED,WAAKuuH,YAAL,GAAoBtyH,KAApB;;AAEA,UAAK,KAAKuyH,SAAL,KAAmB,IAAxB,EAA+B;AAE9B,aAAKzlH,MAAL,CAAYwlH,YAAZ,CAAyBrB,eAAzB,CAA0C,KAAKqB,YAA/C,EAA6D,KAAK9iH,OAAL,CAAa0hH,WAA1E,EAAuF,IAAvF;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,2BAAkB;AAEjB,aAAO,KAAKoB,YAAZ;AAEA;;;WAED,mBAAU;AAET,WAAKC,SAAL,GAAiB,KAAjB;AAEA;;;WAED,mBAAU;AAET,UAAK,KAAKC,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA,eAAO,KAAP;AAEA;;AAED,aAAO,KAAKouH,IAAZ;AAEA;;;WAED,iBAASnyH,KAAT,EAAiB;AAEhB,UAAK,KAAKwyH,kBAAL,KAA4B,KAAjC,EAAyC;AAExC1uH,QAAAA,OAAO,CAACC,IAAR,CAAc,kDAAd;AACA;AAEA;;AAED,WAAKouH,IAAL,GAAYnyH,KAAZ;;AAEA,UAAK,KAAKuyH,SAAL,KAAmB,IAAxB,EAA+B;AAE9B,aAAKzlH,MAAL,CAAYqlH,IAAZ,GAAmB,KAAKA,IAAxB;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,sBAAcnyH,KAAd,EAAsB;AAErB,WAAKoyH,SAAL,GAAiBpyH,KAAjB;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYA,KAAZ,EAAoB;AAEnB,WAAKqyH,OAAL,GAAeryH,KAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAK2wH,IAAL,CAAUA,IAAV,CAAe3wH,KAAtB;AAEA;;;WAED,mBAAWA,KAAX,EAAmB;AAElB,WAAK2wH,IAAL,CAAUA,IAAV,CAAeM,eAAf,CAAgCjxH,KAAhC,EAAuC,KAAKwP,OAAL,CAAa0hH,WAApD,EAAiE,IAAjE;AAEA,aAAO,IAAP;AAEA;;;;EAhYkB1lG,Q;;AAoYpB,IAAMqoG,SAAS,GAAG,aAAc,IAAI54G,OAAJ,EAAhC;;AACA,IAAM64G,WAAW,GAAG,aAAc,IAAIp9G,UAAJ,EAAlC;;AACA,IAAMq9G,MAAM,GAAG,aAAc,IAAI94G,OAAJ,EAA7B;;AACA,IAAM+4G,YAAY,GAAG,aAAc,IAAI/4G,OAAJ,EAAnC;;IAEMg5G,e;;;;;AAEL,2BAAaj2H,QAAb,EAAwB;AAAA;;AAAA;;AAEvB,oCAAOA,QAAP;AAEA,aAAKk2H,MAAL,GAAc,SAAK1kH,OAAL,CAAa2kH,YAAb,EAAd;AACA,aAAKD,MAAL,CAAYE,YAAZ,GAA2B,MAA3B;;AACA,aAAKF,MAAL,CAAYrD,OAAZ,CAAqB,SAAKF,IAA1B;;AANuB;AAQvB;;;;WAED,sBAAa;AAEZ;;AAEA,WAAKuD,MAAL,CAAYnxC,UAAZ,CAAwB,KAAK4tC,IAA7B;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKuD,MAAZ;AAEA;;;WAED,0BAAiB;AAEhB,aAAO,KAAKA,MAAL,CAAYG,WAAnB;AAEA;;;WAED,wBAAgBr0H,KAAhB,EAAwB;AAEvB,WAAKk0H,MAAL,CAAYG,WAAZ,GAA0Br0H,KAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAmB;AAElB,aAAO,KAAKk0H,MAAL,CAAYI,aAAnB;AAEA;;;WAED,0BAAkBt0H,KAAlB,EAA0B;AAEzB,WAAKk0H,MAAL,CAAYI,aAAZ,GAA4Bt0H,KAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAmB;AAElB,aAAO,KAAKk0H,MAAL,CAAYK,aAAnB;AAEA;;;WAED,0BAAkBv0H,KAAlB,EAA0B;AAEzB,WAAKk0H,MAAL,CAAYK,aAAZ,GAA4Bv0H,KAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAiB;AAEhB,aAAO,KAAKk0H,MAAL,CAAYM,WAAnB;AAEA;;;WAED,wBAAgBx0H,KAAhB,EAAwB;AAEvB,WAAKk0H,MAAL,CAAYM,WAAZ,GAA0Bx0H,KAA1B;AAEA,aAAO,IAAP;AAEA;;;WAED,4BAAoBy0H,cAApB,EAAoCC,cAApC,EAAoDC,aAApD,EAAoE;AAEnE,WAAKT,MAAL,CAAYO,cAAZ,GAA6BA,cAA7B;AACA,WAAKP,MAAL,CAAYQ,cAAZ,GAA6BA,cAA7B;AACA,WAAKR,MAAL,CAAYS,aAAZ,GAA4BA,aAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,2BAAmB5mG,KAAnB,EAA2B;AAE1B,6FAAyBA,KAAzB;;AAEA,UAAK,KAAKykG,kBAAL,KAA4B,IAA5B,IAAoC,KAAKD,SAAL,KAAmB,KAA5D,EAAoE;AAEpE,WAAKl2G,WAAL,CAAiByQ,SAAjB,CAA4B+mG,SAA5B,EAAuCC,WAAvC,EAAoDC,MAApD;;AAEAC,MAAAA,YAAY,CAACnwH,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA4BuX,eAA5B,CAA6C04G,WAA7C;;AAEA,UAAMI,MAAM,GAAG,KAAKA,MAApB;;AAEA,UAAKA,MAAM,CAAC/C,SAAZ,EAAwB;AAEvB;AAEA,YAAMxS,OAAO,GAAG,KAAKnvG,OAAL,CAAa0hH,WAAb,GAA2B,KAAKlzH,QAAL,CAAc+yH,SAAzD;AAEAmD,QAAAA,MAAM,CAAC/C,SAAP,CAAiBC,uBAAjB,CAA0CyC,SAAS,CAACtzH,CAApD,EAAuDo+G,OAAvD;AACAuV,QAAAA,MAAM,CAAC7C,SAAP,CAAiBD,uBAAjB,CAA0CyC,SAAS,CAAChzH,CAApD,EAAuD89G,OAAvD;AACAuV,QAAAA,MAAM,CAAC5C,SAAP,CAAiBF,uBAAjB,CAA0CyC,SAAS,CAACpgH,CAApD,EAAuDkrG,OAAvD;AACAuV,QAAAA,MAAM,CAACU,YAAP,CAAoBxD,uBAApB,CAA6C4C,YAAY,CAACzzH,CAA1D,EAA6Do+G,OAA7D;AACAuV,QAAAA,MAAM,CAACW,YAAP,CAAoBzD,uBAApB,CAA6C4C,YAAY,CAACnzH,CAA1D,EAA6D89G,OAA7D;AACAuV,QAAAA,MAAM,CAACY,YAAP,CAAoB1D,uBAApB,CAA6C4C,YAAY,CAACvgH,CAA1D,EAA6DkrG,OAA7D;AAEA,OAbD,MAaO;AAENuV,QAAAA,MAAM,CAACrC,WAAP,CAAoBgC,SAAS,CAACtzH,CAA9B,EAAiCszH,SAAS,CAAChzH,CAA3C,EAA8CgzH,SAAS,CAACpgH,CAAxD;AACAygH,QAAAA,MAAM,CAACpC,cAAP,CAAuBkC,YAAY,CAACzzH,CAApC,EAAuCyzH,YAAY,CAACnzH,CAApD,EAAuDmzH,YAAY,CAACvgH,CAApE;AAEA;AAED;;;;EA5H4Bs+G,K;;IAgIxBgD,a;AAEL,yBAAaC,KAAb,EAAqC;AAAA,QAAjBC,OAAiB,uEAAP,IAAO;;AAAA;;AAEpC,SAAKC,QAAL,GAAgBF,KAAK,CAACxlH,OAAN,CAAc2lH,cAAd,EAAhB;AACA,SAAKD,QAAL,CAAcD,OAAd,GAAwBA,OAAxB;AAEA,SAAK/kH,IAAL,GAAY,IAAI9L,UAAJ,CAAgB,KAAK8wH,QAAL,CAAcE,iBAA9B,CAAZ;AAEAJ,IAAAA,KAAK,CAACtB,SAAN,GAAkB7C,OAAlB,CAA2B,KAAKqE,QAAhC;AAEA;;;;WAGD,4BAAmB;AAElB,WAAKA,QAAL,CAAcG,oBAAd,CAAoC,KAAKnlH,IAAzC;AAEA,aAAO,KAAKA,IAAZ;AAEA;;;WAED,+BAAsB;AAErB,UAAIlQ,KAAK,GAAG,CAAZ;AACA,UAAMkQ,IAAI,GAAG,KAAKolH,gBAAL,EAAb;;AAEA,WAAM,IAAIz2H,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGqR,IAAI,CAACnR,MAA1B,EAAkCF,CAAC,EAAnC,EAAyC;AAExCmB,QAAAA,KAAK,IAAIkQ,IAAI,CAAErR,CAAF,CAAb;AAEA;;AAED,aAAOmB,KAAK,GAAGkQ,IAAI,CAACnR,MAApB;AAEA;;;;;;IAIIw2H,a;AAEL,yBAAaC,OAAb,EAAsBrT,QAAtB,EAAgCnJ,SAAhC,EAA4C;AAAA;;AAE3C,SAAKwc,OAAL,GAAeA,OAAf;AACA,SAAKxc,SAAL,GAAiBA,SAAjB;AAEA,QAAIyc,WAAJ,EACCC,mBADD,EAECC,WAFD,CAL2C,CAS3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAASxT,QAAT;AAEC,WAAK,YAAL;AACCsT,QAAAA,WAAW,GAAG,KAAKG,MAAnB;AACAF,QAAAA,mBAAmB,GAAG,KAAKG,cAA3B;AACAF,QAAAA,WAAW,GAAG,KAAKG,8BAAnB;AAEA,aAAKzqH,MAAL,GAAc,IAAIF,YAAJ,CAAkB6tG,SAAS,GAAG,CAA9B,CAAd;AACA,aAAK+c,UAAL,GAAkB,CAAlB;AACA;;AAED,WAAK,QAAL;AACA,WAAK,MAAL;AACCN,QAAAA,WAAW,GAAG,KAAKO,OAAnB,CADD,CAGC;AACA;;AACAN,QAAAA,mBAAmB,GAAG,KAAKM,OAA3B;AAEAL,QAAAA,WAAW,GAAG,KAAKM,yBAAnB;AAEA,aAAK5qH,MAAL,GAAc,IAAIsF,KAAJ,CAAWqoG,SAAS,GAAG,CAAvB,CAAd;AACA;;AAED;AACCyc,QAAAA,WAAW,GAAG,KAAKS,KAAnB;AACAR,QAAAA,mBAAmB,GAAG,KAAKS,aAA3B;AACAR,QAAAA,WAAW,GAAG,KAAKS,2BAAnB;AAEA,aAAK/qH,MAAL,GAAc,IAAIF,YAAJ,CAAkB6tG,SAAS,GAAG,CAA9B,CAAd;AA7BF;;AAiCA,SAAKqd,gBAAL,GAAwBZ,WAAxB;AACA,SAAKa,wBAAL,GAAgCZ,mBAAhC;AACA,SAAKa,YAAL,GAAoBZ,WAApB;AACA,SAAKa,UAAL,GAAkB,CAAlB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AAEA,SAAKC,gBAAL,GAAwB,CAAxB;AACA,SAAKC,wBAAL,GAAgC,CAAhC;AAEA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AAEA,G,CAED;;;;;WACA,oBAAYC,SAAZ,EAAuBzqE,MAAvB,EAAgC;AAE/B;AACA;AAEA,UAAMhhD,MAAM,GAAG,KAAKA,MAApB;AAAA,UACC80B,MAAM,GAAG,KAAK64E,SADf;AAAA,UAEC1yG,MAAM,GAAGwwH,SAAS,GAAG32F,MAAZ,GAAqBA,MAF/B;AAIA,UAAI42F,aAAa,GAAG,KAAKL,gBAAzB;;AAEA,UAAKK,aAAa,KAAK,CAAvB,EAA2B;AAE1B;AAEA,aAAM,IAAIl4H,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErCwM,UAAAA,MAAM,CAAE/E,MAAM,GAAGzH,CAAX,CAAN,GAAuBwM,MAAM,CAAExM,CAAF,CAA7B;AAEA;;AAEDk4H,QAAAA,aAAa,GAAG1qE,MAAhB;AAEA,OAZD,MAYO;AAEN;AAEA0qE,QAAAA,aAAa,IAAI1qE,MAAjB;AACA,YAAM2qE,GAAG,GAAG3qE,MAAM,GAAG0qE,aAArB;;AACA,aAAKV,gBAAL,CAAuBhrH,MAAvB,EAA+B/E,MAA/B,EAAuC,CAAvC,EAA0C0wH,GAA1C,EAA+C72F,MAA/C;AAEA;;AAED,WAAKu2F,gBAAL,GAAwBK,aAAxB;AAEA,K,CAED;;;;WACA,4BAAoB1qE,MAApB,EAA6B;AAE5B,UAAMhhD,MAAM,GAAG,KAAKA,MAApB;AAAA,UACC80B,MAAM,GAAG,KAAK64E,SADf;AAAA,UAEC1yG,MAAM,GAAG65B,MAAM,GAAG,KAAKs2F,SAFxB;;AAIA,UAAK,KAAKE,wBAAL,KAAkC,CAAvC,EAA2C;AAE1C;AAEA,aAAKJ,YAAL;AAEA,OAZ2B,CAc5B;;;AAEA,WAAKD,wBAAL,CAA+BjrH,MAA/B,EAAuC/E,MAAvC,EAA+C,CAA/C,EAAkD+lD,MAAlD,EAA0DlsB,MAA1D;;AACA,WAAKw2F,wBAAL,IAAiCtqE,MAAjC;AAEA,K,CAED;;;;WACA,eAAOyqE,SAAP,EAAmB;AAElB,UAAM32F,MAAM,GAAG,KAAK64E,SAApB;AAAA,UACC3tG,MAAM,GAAG,KAAKA,MADf;AAAA,UAEC/E,MAAM,GAAGwwH,SAAS,GAAG32F,MAAZ,GAAqBA,MAF/B;AAAA,UAICksB,MAAM,GAAG,KAAKqqE,gBAJf;AAAA,UAKCO,cAAc,GAAG,KAAKN,wBALvB;AAAA,UAOCnB,OAAO,GAAG,KAAKA,OAPhB;AASA,WAAKkB,gBAAL,GAAwB,CAAxB;AACA,WAAKC,wBAAL,GAAgC,CAAhC;;AAEA,UAAKtqE,MAAM,GAAG,CAAd,EAAkB;AAEjB;AAEA,YAAM6qE,mBAAmB,GAAG/2F,MAAM,GAAG,KAAKq2F,UAA1C;;AAEA,aAAKH,gBAAL,CACChrH,MADD,EACS/E,MADT,EACiB4wH,mBADjB,EACsC,IAAI7qE,MAD1C,EACkDlsB,MADlD;AAGA;;AAED,UAAK82F,cAAc,GAAG,CAAtB,EAA0B;AAEzB;AAEA,aAAKX,wBAAL,CAA+BjrH,MAA/B,EAAuC/E,MAAvC,EAA+C,KAAKmwH,SAAL,GAAiBt2F,MAAhE,EAAwE,CAAxE,EAA2EA,MAA3E;AAEA;;AAED,WAAM,IAAIthC,CAAC,GAAGshC,MAAR,EAAgB36B,CAAC,GAAG26B,MAAM,GAAGA,MAAnC,EAA2CthC,CAAC,KAAK2G,CAAjD,EAAoD,EAAG3G,CAAvD,EAA2D;AAE1D,YAAKwM,MAAM,CAAExM,CAAF,CAAN,KAAgBwM,MAAM,CAAExM,CAAC,GAAGshC,MAAN,CAA3B,EAA4C;AAE3C;AAEAq1F,UAAAA,OAAO,CAAC7kE,QAAR,CAAkBtlD,MAAlB,EAA0B/E,MAA1B;AACA;AAEA;AAED;AAED,K,CAED;;;;WACA,6BAAoB;AAEnB,UAAMkvH,OAAO,GAAG,KAAKA,OAArB;AAEA,UAAMnqH,MAAM,GAAG,KAAKA,MAApB;AAAA,UACC80B,MAAM,GAAG,KAAK64E,SADf;AAAA,UAGCke,mBAAmB,GAAG/2F,MAAM,GAAG,KAAKq2F,UAHrC;AAKAhB,MAAAA,OAAO,CAAC2B,QAAR,CAAkB9rH,MAAlB,EAA0B6rH,mBAA1B,EATmB,CAWnB;;AACA,WAAM,IAAIr4H,CAAC,GAAGshC,MAAR,EAAgB36B,CAAC,GAAG0xH,mBAA1B,EAA+Cr4H,CAAC,KAAK2G,CAArD,EAAwD,EAAG3G,CAA3D,EAA+D;AAE9DwM,QAAAA,MAAM,CAAExM,CAAF,CAAN,GAAcwM,MAAM,CAAE6rH,mBAAmB,GAAKr4H,CAAC,GAAGshC,MAA9B,CAApB;AAEA,OAhBkB,CAkBnB;;;AACA,WAAKo2F,YAAL;;AAEA,WAAKG,gBAAL,GAAwB,CAAxB;AACA,WAAKC,wBAAL,GAAgC,CAAhC;AAEA,K,CAED;;;;WACA,gCAAuB;AAEtB,UAAMO,mBAAmB,GAAG,KAAKle,SAAL,GAAiB,CAA7C;AACA,WAAKwc,OAAL,CAAa7kE,QAAb,CAAuB,KAAKtlD,MAA5B,EAAoC6rH,mBAApC;AAEA;;;WAED,uCAA8B;AAE7B,UAAM5c,UAAU,GAAG,KAAKmc,SAAL,GAAiB,KAAKzd,SAAzC;AACA,UAAMuB,QAAQ,GAAGD,UAAU,GAAG,KAAKtB,SAAnC;;AAEA,WAAM,IAAIn6G,CAAC,GAAGy7G,UAAd,EAA0Bz7G,CAAC,GAAG07G,QAA9B,EAAwC17G,CAAC,EAAzC,EAA+C;AAE9C,aAAKwM,MAAL,CAAaxM,CAAb,IAAmB,CAAnB;AAEA;AAED;;;WAED,0CAAiC;AAEhC,WAAKu3H,2BAAL;;AACA,WAAK/qH,MAAL,CAAa,KAAKorH,SAAL,GAAiB,KAAKzd,SAAtB,GAAkC,CAA/C,IAAqD,CAArD;AAEA;;;WAED,qCAA4B;AAE3B,UAAMsB,UAAU,GAAG,KAAKkc,UAAL,GAAkB,KAAKxd,SAA1C;AACA,UAAMoe,WAAW,GAAG,KAAKX,SAAL,GAAiB,KAAKzd,SAA1C;;AAEA,WAAM,IAAIn6G,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKm6G,SAA1B,EAAqCn6G,CAAC,EAAtC,EAA4C;AAE3C,aAAKwM,MAAL,CAAa+rH,WAAW,GAAGv4H,CAA3B,IAAiC,KAAKwM,MAAL,CAAaivG,UAAU,GAAGz7G,CAA1B,CAAjC;AAEA;AAED,K,CAGD;;;;WAEA,iBAASwM,MAAT,EAAiB2O,SAAjB,EAA4Bo+F,SAA5B,EAAuCr3G,CAAvC,EAA0Co/B,MAA1C,EAAmD;AAElD,UAAKp/B,CAAC,IAAI,GAAV,EAAgB;AAEf,aAAM,IAAIlC,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErCwM,UAAAA,MAAM,CAAE2O,SAAS,GAAGnb,CAAd,CAAN,GAA0BwM,MAAM,CAAE+sG,SAAS,GAAGv5G,CAAd,CAAhC;AAEA;AAED;AAED;;;WAED,gBAAQwM,MAAR,EAAgB2O,SAAhB,EAA2Bo+F,SAA3B,EAAsCr3G,CAAtC,EAA0C;AAEzC2V,MAAAA,UAAU,CAACqpG,SAAX,CAAsB10G,MAAtB,EAA8B2O,SAA9B,EAAyC3O,MAAzC,EAAiD2O,SAAjD,EAA4D3O,MAA5D,EAAoE+sG,SAApE,EAA+Er3G,CAA/E;AAEA;;;WAED,wBAAgBsK,MAAhB,EAAwB2O,SAAxB,EAAmCo+F,SAAnC,EAA8Cr3G,CAA9C,EAAiDo/B,MAAjD,EAA0D;AAEzD,UAAMk3F,UAAU,GAAG,KAAKtB,UAAL,GAAkB51F,MAArC,CAFyD,CAIzD;;AACAzpB,MAAAA,UAAU,CAACokG,uBAAX,CAAoCzvG,MAApC,EAA4CgsH,UAA5C,EAAwDhsH,MAAxD,EAAgE2O,SAAhE,EAA2E3O,MAA3E,EAAmF+sG,SAAnF,EALyD,CAOzD;;AACA1hG,MAAAA,UAAU,CAACqpG,SAAX,CAAsB10G,MAAtB,EAA8B2O,SAA9B,EAAyC3O,MAAzC,EAAiD2O,SAAjD,EAA4D3O,MAA5D,EAAoEgsH,UAApE,EAAgFt2H,CAAhF;AAEA;;;WAED,eAAOsK,MAAP,EAAe2O,SAAf,EAA0Bo+F,SAA1B,EAAqCr3G,CAArC,EAAwCo/B,MAAxC,EAAiD;AAEhD,UAAMn+B,CAAC,GAAG,IAAIjB,CAAd;;AAEA,WAAM,IAAIlC,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErC,YAAM0iB,CAAC,GAAGvH,SAAS,GAAGnb,CAAtB;AAEAwM,QAAAA,MAAM,CAAEkW,CAAF,CAAN,GAAclW,MAAM,CAAEkW,CAAF,CAAN,GAAcvf,CAAd,GAAkBqJ,MAAM,CAAE+sG,SAAS,GAAGv5G,CAAd,CAAN,GAA0BkC,CAA1D;AAEA;AAED;;;WAED,uBAAesK,MAAf,EAAuB2O,SAAvB,EAAkCo+F,SAAlC,EAA6Cr3G,CAA7C,EAAgDo/B,MAAhD,EAAyD;AAExD,WAAM,IAAIthC,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKshC,MAAvB,EAA+B,EAAGthC,CAAlC,EAAsC;AAErC,YAAM0iB,CAAC,GAAGvH,SAAS,GAAGnb,CAAtB;AAEAwM,QAAAA,MAAM,CAAEkW,CAAF,CAAN,GAAclW,MAAM,CAAEkW,CAAF,CAAN,GAAclW,MAAM,CAAE+sG,SAAS,GAAGv5G,CAAd,CAAN,GAA0BkC,CAAtD;AAEA;AAED;;;;KAIF;;;AACA,IAAMu2H,kBAAkB,GAAG,eAA3B;;AACA,IAAMC,WAAW,GAAG,IAAIC,MAAJ,CAAY,MAAMF,kBAAN,GAA2B,GAAvC,EAA4C,GAA5C,CAApB,C,CAEA;AACA;AACA;;;AACA,IAAMG,SAAS,GAAG,OAAOH,kBAAP,GAA4B,GAA9C;;AACA,IAAMI,cAAc,GAAG,OAAOJ,kBAAkB,CAAC18D,OAAnB,CAA4B,KAA5B,EAAmC,EAAnC,CAAP,GAAiD,GAAxE,C,CAEA;AACA;;;AACA,IAAM+8D,YAAY,GAAG,aAAc,mBAAkB7qH,MAAlB,CAAyB8tD,OAAzB,CAAkC,IAAlC,EAAwC68D,SAAxC,CAAnC,C,CAEA;;;AACA,IAAMG,OAAO,GAAG,aAAc,YAAW9qH,MAAX,CAAkB8tD,OAAlB,CAA2B,MAA3B,EAAmC88D,cAAnC,CAA9B,C,CAEA;AACA;;;AACA,IAAMG,SAAS,GAAG,aAAc,6BAA4B/qH,MAA5B,CAAmC8tD,OAAnC,CAA4C,IAA5C,EAAkD68D,SAAlD,CAAhC,C,CAEA;AACA;;;AACA,IAAMK,WAAW,GAAG,aAAc,wBAAuBhrH,MAAvB,CAA8B8tD,OAA9B,CAAuC,IAAvC,EAA6C68D,SAA7C,CAAlC;;AAEA,IAAMM,QAAQ,GAAG,IAAIP,MAAJ,CAAY,KAC1B,GAD0B,GAE1BG,YAF0B,GAG1BC,OAH0B,GAI1BC,SAJ0B,GAK1BC,WAL0B,GAM1B,GANc,CAAjB;;AASA,IAAME,qBAAqB,GAAG,CAAE,UAAF,EAAc,WAAd,EAA2B,OAA3B,CAA9B;;IAEMC,S;AAEL,qBAAaC,WAAb,EAA0B9gE,IAA1B,EAAgC+gE,kBAAhC,EAAqD;AAAA;;AAEpD,QAAMC,UAAU,GAAGD,kBAAkB,IAAIE,eAAe,CAACC,cAAhB,CAAgClhE,IAAhC,CAAzC;AAEA,SAAKmhE,YAAL,GAAoBL,WAApB;AACA,SAAKM,SAAL,GAAiBN,WAAW,CAACO,UAAZ,CAAwBrhE,IAAxB,EAA8BghE,UAA9B,CAAjB;AAEA;;;;WAED,kBAAUz5H,KAAV,EAAiB2H,MAAjB,EAA0B;AAEzB,WAAKonH,IAAL,GAFyB,CAEZ;;AAEb,UAAMgL,eAAe,GAAG,KAAKH,YAAL,CAAkBI,eAA1C;AAAA,UACCnD,OAAO,GAAG,KAAKgD,SAAL,CAAgBE,eAAhB,CADX,CAJyB,CAOzB;;AACA,UAAKlD,OAAO,KAAKt3H,SAAjB,EAA6Bs3H,OAAO,CAAC2B,QAAR,CAAkBx4H,KAAlB,EAAyB2H,MAAzB;AAE7B;;;WAED,kBAAU3H,KAAV,EAAiB2H,MAAjB,EAA0B;AAEzB,UAAMsyH,QAAQ,GAAG,KAAKJ,SAAtB;;AAEA,WAAM,IAAI35H,CAAC,GAAG,KAAK05H,YAAL,CAAkBI,eAA1B,EAA2Cv4H,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9D,EAAsEF,CAAC,KAAKuB,CAA5E,EAA+E,EAAGvB,CAAlF,EAAsF;AAErF+5H,QAAAA,QAAQ,CAAE/5H,CAAF,CAAR,CAAc8xD,QAAd,CAAwBhyD,KAAxB,EAA+B2H,MAA/B;AAEA;AAED;;;WAED,gBAAO;AAEN,UAAMsyH,QAAQ,GAAG,KAAKJ,SAAtB;;AAEA,WAAM,IAAI35H,CAAC,GAAG,KAAK05H,YAAL,CAAkBI,eAA1B,EAA2Cv4H,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9D,EAAsEF,CAAC,KAAKuB,CAA5E,EAA+E,EAAGvB,CAAlF,EAAsF;AAErF+5H,QAAAA,QAAQ,CAAE/5H,CAAF,CAAR,CAAc6uH,IAAd;AAEA;AAED;;;WAED,kBAAS;AAER,UAAMkL,QAAQ,GAAG,KAAKJ,SAAtB;;AAEA,WAAM,IAAI35H,CAAC,GAAG,KAAK05H,YAAL,CAAkBI,eAA1B,EAA2Cv4H,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9D,EAAsEF,CAAC,KAAKuB,CAA5E,EAA+E,EAAGvB,CAAlF,EAAsF;AAErF+5H,QAAAA,QAAQ,CAAE/5H,CAAF,CAAR,CAAcg6H,MAAd;AAEA;AAED;;;;KAIF;AACA;AACA;AACA;AACA;;;IACMR,e;AAEL,2BAAaS,QAAb,EAAuB1hE,IAAvB,EAA6BghE,UAA7B,EAA0C;AAAA;;AAEzC,SAAKhhE,IAAL,GAAYA,IAAZ;AACA,SAAKghE,UAAL,GAAkBA,UAAU,IAAIC,eAAe,CAACC,cAAhB,CAAgClhE,IAAhC,CAAhC;AAEA,SAAK2hE,IAAL,GAAYV,eAAe,CAACW,QAAhB,CAA0BF,QAA1B,EAAoC,KAAKV,UAAL,CAAgBa,QAApD,KAAkEH,QAA9E;AAEA,SAAKA,QAAL,GAAgBA,QAAhB,CAPyC,CASzC;;AACA,SAAK3B,QAAL,GAAgB,KAAK+B,iBAArB;AACA,SAAKvoE,QAAL,GAAgB,KAAKwoE,iBAArB;AAEA;;;;WA0ID;AACA,qCAAwB,CAAE;;;WAC1B,iCAAwB,CAAE,C,CAE1B;;;;WAEA,0BAAkB9tH,MAAlB,EAA0B/E,MAA1B,EAAmC;AAElC+E,MAAAA,MAAM,CAAE/E,MAAF,CAAN,GAAmB,KAAK8yH,YAAL,CAAmB,KAAK3X,YAAxB,CAAnB;AAEA;;;WAED,yBAAiBp2G,MAAjB,EAAyB/E,MAAzB,EAAkC;AAEjC,UAAMwG,MAAM,GAAG,KAAKusH,gBAApB;;AAEA,WAAM,IAAIx6H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG0M,MAAM,CAAC/N,MAA5B,EAAoCF,CAAC,KAAKuB,CAA1C,EAA6C,EAAGvB,CAAhD,EAAoD;AAEnDwM,QAAAA,MAAM,CAAE/E,MAAM,EAAR,CAAN,GAAsBwG,MAAM,CAAEjO,CAAF,CAA5B;AAEA;AAED;;;WAED,gCAAwBwM,MAAxB,EAAgC/E,MAAhC,EAAyC;AAExC+E,MAAAA,MAAM,CAAE/E,MAAF,CAAN,GAAmB,KAAK+yH,gBAAL,CAAuB,KAAKC,aAA5B,CAAnB;AAEA;;;WAED,2BAAmBjuH,MAAnB,EAA2B/E,MAA3B,EAAoC;AAEnC,WAAK+yH,gBAAL,CAAsB7qG,OAAtB,CAA+BnjB,MAA/B,EAAuC/E,MAAvC;AAEA,K,CAED;;;;WAEA,0BAAkB+E,MAAlB,EAA0B/E,MAA1B,EAAmC;AAElC,WAAK8yH,YAAL,CAAmB,KAAK3X,YAAxB,IAAyCp2G,MAAM,CAAE/E,MAAF,CAA/C;AAEA;;;WAED,yCAAiC+E,MAAjC,EAAyC/E,MAAzC,EAAkD;AAEjD,WAAK8yH,YAAL,CAAmB,KAAK3X,YAAxB,IAAyCp2G,MAAM,CAAE/E,MAAF,CAA/C;AACA,WAAK8yH,YAAL,CAAkBrmH,WAAlB,GAAgC,IAAhC;AAEA;;;WAED,oDAA4C1H,MAA5C,EAAoD/E,MAApD,EAA6D;AAE5D,WAAK8yH,YAAL,CAAmB,KAAK3X,YAAxB,IAAyCp2G,MAAM,CAAE/E,MAAF,CAA/C;AACA,WAAK8yH,YAAL,CAAkB/sG,sBAAlB,GAA2C,IAA3C;AAEA,K,CAED;;;;WAEA,yBAAiBhhB,MAAjB,EAAyB/E,MAAzB,EAAkC;AAEjC,UAAMizH,IAAI,GAAG,KAAKF,gBAAlB;;AAEA,WAAM,IAAIx6H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGm5H,IAAI,CAACx6H,MAA1B,EAAkCF,CAAC,KAAKuB,CAAxC,EAA2C,EAAGvB,CAA9C,EAAkD;AAEjD06H,QAAAA,IAAI,CAAE16H,CAAF,CAAJ,GAAYwM,MAAM,CAAE/E,MAAM,EAAR,CAAlB;AAEA;AAED;;;WAED,wCAAgC+E,MAAhC,EAAwC/E,MAAxC,EAAiD;AAEhD,UAAMizH,IAAI,GAAG,KAAKF,gBAAlB;;AAEA,WAAM,IAAIx6H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGm5H,IAAI,CAACx6H,MAA1B,EAAkCF,CAAC,KAAKuB,CAAxC,EAA2C,EAAGvB,CAA9C,EAAkD;AAEjD06H,QAAAA,IAAI,CAAE16H,CAAF,CAAJ,GAAYwM,MAAM,CAAE/E,MAAM,EAAR,CAAlB;AAEA;;AAED,WAAK8yH,YAAL,CAAkBrmH,WAAlB,GAAgC,IAAhC;AAEA;;;WAED,mDAA2C1H,MAA3C,EAAmD/E,MAAnD,EAA4D;AAE3D,UAAMizH,IAAI,GAAG,KAAKF,gBAAlB;;AAEA,WAAM,IAAIx6H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGm5H,IAAI,CAACx6H,MAA1B,EAAkCF,CAAC,KAAKuB,CAAxC,EAA2C,EAAGvB,CAA9C,EAAkD;AAEjD06H,QAAAA,IAAI,CAAE16H,CAAF,CAAJ,GAAYwM,MAAM,CAAE/E,MAAM,EAAR,CAAlB;AAEA;;AAED,WAAK8yH,YAAL,CAAkB/sG,sBAAlB,GAA2C,IAA3C;AAEA,K,CAED;;;;WAEA,gCAAwBhhB,MAAxB,EAAgC/E,MAAhC,EAAyC;AAExC,WAAK+yH,gBAAL,CAAuB,KAAKC,aAA5B,IAA8CjuH,MAAM,CAAE/E,MAAF,CAApD;AAEA;;;WAED,+CAAuC+E,MAAvC,EAA+C/E,MAA/C,EAAwD;AAEvD,WAAK+yH,gBAAL,CAAuB,KAAKC,aAA5B,IAA8CjuH,MAAM,CAAE/E,MAAF,CAApD;AACA,WAAK8yH,YAAL,CAAkBrmH,WAAlB,GAAgC,IAAhC;AAEA;;;WAED,0DAAkD1H,MAAlD,EAA0D/E,MAA1D,EAAmE;AAElE,WAAK+yH,gBAAL,CAAuB,KAAKC,aAA5B,IAA8CjuH,MAAM,CAAE/E,MAAF,CAApD;AACA,WAAK8yH,YAAL,CAAkB/sG,sBAAlB,GAA2C,IAA3C;AAEA,K,CAED;;;;WAEA,6BAAqBhhB,MAArB,EAA6B/E,MAA7B,EAAsC;AAErC,WAAK+yH,gBAAL,CAAsBxuH,SAAtB,CAAiCQ,MAAjC,EAAyC/E,MAAzC;AAEA;;;WAED,4CAAoC+E,MAApC,EAA4C/E,MAA5C,EAAqD;AAEpD,WAAK+yH,gBAAL,CAAsBxuH,SAAtB,CAAiCQ,MAAjC,EAAyC/E,MAAzC;AACA,WAAK8yH,YAAL,CAAkBrmH,WAAlB,GAAgC,IAAhC;AAEA;;;WAED,uDAA+C1H,MAA/C,EAAuD/E,MAAvD,EAAgE;AAE/D,WAAK+yH,gBAAL,CAAsBxuH,SAAtB,CAAiCQ,MAAjC,EAAyC/E,MAAzC;AACA,WAAK8yH,YAAL,CAAkB/sG,sBAAlB,GAA2C,IAA3C;AAEA;;;WAED,2BAAmBmtG,WAAnB,EAAgClzH,MAAhC,EAAyC;AAExC,WAAKonH,IAAL;AACA,WAAKyJ,QAAL,CAAeqC,WAAf,EAA4BlzH,MAA5B;AAEA;;;WAED,2BAAmBmzH,WAAnB,EAAgCnzH,MAAhC,EAAyC;AAExC,WAAKonH,IAAL;AACA,WAAK/8D,QAAL,CAAe8oE,WAAf,EAA4BnzH,MAA5B;AAEA,K,CAED;;;;WACA,gBAAO;AAEN,UAAI8yH,YAAY,GAAG,KAAKL,IAAxB;AACA,UAAMX,UAAU,GAAG,KAAKA,UAAxB;AAEA,UAAMsB,UAAU,GAAGtB,UAAU,CAACsB,UAA9B;AACA,UAAMjY,YAAY,GAAG2W,UAAU,CAAC3W,YAAhC;AACA,UAAI6X,aAAa,GAAGlB,UAAU,CAACkB,aAA/B;;AAEA,UAAK,CAAEF,YAAP,EAAsB;AAErBA,QAAAA,YAAY,GAAGf,eAAe,CAACW,QAAhB,CAA0B,KAAKF,QAA/B,EAAyCV,UAAU,CAACa,QAApD,KAAkE,KAAKH,QAAtF;AAEA,aAAKC,IAAL,GAAYK,YAAZ;AAEA,OAfK,CAiBN;;;AACA,WAAKjC,QAAL,GAAgB,KAAKwC,qBAArB;AACA,WAAKhpE,QAAL,GAAgB,KAAKipE,qBAArB,CAnBM,CAqBN;;AACA,UAAK,CAAER,YAAP,EAAsB;AAErBt1H,QAAAA,OAAO,CAACkD,KAAR,CAAe,6DAA6D,KAAKowD,IAAlE,GAAyE,wBAAxF;AACA;AAEA;;AAED,UAAKsiE,UAAL,EAAkB;AAEjB,YAAIG,WAAW,GAAGzB,UAAU,CAACyB,WAA7B,CAFiB,CAIjB;;AACA,gBAASH,UAAT;AAEC,eAAK,WAAL;AAEC,gBAAK,CAAEN,YAAY,CAACzpG,QAApB,EAA+B;AAE9B7rB,cAAAA,OAAO,CAACkD,KAAR,CAAe,mFAAf,EAAoG,IAApG;AACA;AAEA;;AAED,gBAAK,CAAEoyH,YAAY,CAACzpG,QAAb,CAAsBvB,SAA7B,EAAyC;AAExCtqB,cAAAA,OAAO,CAACkD,KAAR,CAAe,6GAAf,EAA8H,IAA9H;AACA;AAEA;;AAEDoyH,YAAAA,YAAY,GAAGA,YAAY,CAACzpG,QAAb,CAAsBvB,SAArC;AAEA;;AAED,eAAK,OAAL;AAEC,gBAAK,CAAEgrG,YAAY,CAAC1pG,QAApB,EAA+B;AAE9B5rB,cAAAA,OAAO,CAACkD,KAAR,CAAe,gFAAf,EAAiG,IAAjG;AACA;AAEA,aAPF,CASC;AACA;;;AAEAoyH,YAAAA,YAAY,GAAGA,YAAY,CAAC1pG,QAAb,CAAsB8nE,KAArC,CAZD,CAcC;;AACA,iBAAM,IAAI34F,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGu6H,YAAY,CAACr6H,MAAlC,EAA0CF,CAAC,EAA3C,EAAiD;AAEhD,kBAAKu6H,YAAY,CAAEv6H,CAAF,CAAZ,CAAkB0M,IAAlB,KAA2BsuH,WAAhC,EAA8C;AAE7CA,gBAAAA,WAAW,GAAGh7H,CAAd;AACA;AAEA;AAED;;AAED;;AAED;AAEC,gBAAKu6H,YAAY,CAAEM,UAAF,CAAZ,KAA+Bx7H,SAApC,EAAgD;AAE/C4F,cAAAA,OAAO,CAACkD,KAAR,CAAe,sEAAf,EAAuF,IAAvF;AACA;AAEA;;AAEDoyH,YAAAA,YAAY,GAAGA,YAAY,CAAEM,UAAF,CAA3B;AA3DF;;AAgEA,YAAKG,WAAW,KAAK37H,SAArB,EAAiC;AAEhC,cAAKk7H,YAAY,CAAES,WAAF,CAAZ,KAAgC37H,SAArC,EAAiD;AAEhD4F,YAAAA,OAAO,CAACkD,KAAR,CAAe,uFAAf,EAAwG,IAAxG,EAA8GoyH,YAA9G;AACA;AAEA;;AAEDA,UAAAA,YAAY,GAAGA,YAAY,CAAES,WAAF,CAA3B;AAEA;AAED,OA/GK,CAiHN;;;AACA,UAAMC,YAAY,GAAGV,YAAY,CAAE3X,YAAF,CAAjC;;AAEA,UAAKqY,YAAY,KAAK57H,SAAtB,EAAkC;AAEjC,YAAM+6H,QAAQ,GAAGb,UAAU,CAACa,QAA5B;AAEAn1H,QAAAA,OAAO,CAACkD,KAAR,CAAe,iEAAiEiyH,QAAjE,GACd,GADc,GACRxX,YADQ,GACO,wBADtB,EACgD2X,YADhD;AAEA;AAEA,OA5HK,CA8HN;;;AACA,UAAIW,UAAU,GAAG,KAAKC,UAAL,CAAgBC,IAAjC;AAEA,WAAKb,YAAL,GAAoBA,YAApB;;AAEA,UAAKA,YAAY,CAACrmH,WAAb,KAA6B7U,SAAlC,EAA8C;AAAE;AAE/C67H,QAAAA,UAAU,GAAG,KAAKC,UAAL,CAAgBE,WAA7B;AAEA,OAJD,MAIO,IAAKd,YAAY,CAAC/sG,sBAAb,KAAwCnuB,SAA7C,EAAyD;AAAE;AAEjE67H,QAAAA,UAAU,GAAG,KAAKC,UAAL,CAAgBG,sBAA7B;AAEA,OA3IK,CA6IN;;;AACA,UAAIC,WAAW,GAAG,KAAKC,WAAL,CAAiBC,MAAnC;;AAEA,UAAKhB,aAAa,KAAKp7H,SAAvB,EAAmC;AAElC;AAEA,YAAKujH,YAAY,KAAK,uBAAtB,EAAgD;AAE/C;AAEA;AACA,cAAK,CAAE2X,YAAY,CAAC/5G,QAApB,EAA+B;AAE9Bvb,YAAAA,OAAO,CAACkD,KAAR,CAAe,qGAAf,EAAsH,IAAtH;AACA;AAEA;;AAED,cAAK,CAAEoyH,YAAY,CAAC/5G,QAAb,CAAsB2c,eAA7B,EAA+C;AAE9Cl4B,YAAAA,OAAO,CAACkD,KAAR,CAAe,qHAAf,EAAsI,IAAtI;AACA;AAEA;;AAED,cAAKoyH,YAAY,CAACp3F,qBAAb,CAAoCs3F,aAApC,MAAwDp7H,SAA7D,EAAyE;AAExEo7H,YAAAA,aAAa,GAAGF,YAAY,CAACp3F,qBAAb,CAAoCs3F,aAApC,CAAhB;AAEA;AAED;;AAEDc,QAAAA,WAAW,GAAG,KAAKC,WAAL,CAAiBE,YAA/B;AAEA,aAAKlB,gBAAL,GAAwBS,YAAxB;AACA,aAAKR,aAAL,GAAqBA,aAArB;AAEA,OApCD,MAoCO,IAAKQ,YAAY,CAACjvH,SAAb,KAA2B3M,SAA3B,IAAwC47H,YAAY,CAACtrG,OAAb,KAAyBtwB,SAAtE,EAAkF;AAExF;AAEAk8H,QAAAA,WAAW,GAAG,KAAKC,WAAL,CAAiBG,cAA/B;AAEA,aAAKnB,gBAAL,GAAwBS,YAAxB;AAEA,OARM,MAQA,IAAKnpH,KAAK,CAACC,OAAN,CAAekpH,YAAf,CAAL,EAAqC;AAE3CM,QAAAA,WAAW,GAAG,KAAKC,WAAL,CAAiBI,WAA/B;AAEA,aAAKpB,gBAAL,GAAwBS,YAAxB;AAEA,OANM,MAMA;AAEN,aAAKrY,YAAL,GAAoBA,YAApB;AAEA,OAtMK,CAwMN;;;AACA,WAAK0V,QAAL,GAAgB,KAAKuD,mBAAL,CAA0BN,WAA1B,CAAhB;AACA,WAAKzpE,QAAL,GAAgB,KAAKgqE,gCAAL,CAAuCP,WAAvC,EAAsDL,UAAtD,CAAhB;AAEA;;;WAED,kBAAS;AAER,WAAKhB,IAAL,GAAY,IAAZ,CAFQ,CAIR;AACA;;AACA,WAAK5B,QAAL,GAAgB,KAAK+B,iBAArB;AACA,WAAKvoE,QAAL,GAAgB,KAAKwoE,iBAArB;AAEA;;;WA7fD,gBAAeyB,IAAf,EAAqBxjE,IAArB,EAA2BghE,UAA3B,EAAwC;AAEvC,UAAK,EAAIwC,IAAI,IAAIA,IAAI,CAACC,sBAAjB,CAAL,EAAiD;AAEhD,eAAO,IAAIxC,eAAJ,CAAqBuC,IAArB,EAA2BxjE,IAA3B,EAAiCghE,UAAjC,CAAP;AAEA,OAJD,MAIO;AAEN,eAAO,IAAIC,eAAe,CAACJ,SAApB,CAA+B2C,IAA/B,EAAqCxjE,IAArC,EAA2CghE,UAA3C,CAAP;AAEA;AAED;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,0BAAyB7sH,IAAzB,EAAgC;AAE/B,aAAOA,IAAI,CAACqvD,OAAL,CAAc,KAAd,EAAqB,GAArB,EAA2BA,OAA3B,CAAoC28D,WAApC,EAAiD,EAAjD,CAAP;AAEA;;;WAED,wBAAuBhW,SAAvB,EAAmC;AAElC,UAAMuZ,OAAO,GAAG/C,QAAQ,CAACrqH,IAAT,CAAe6zG,SAAf,CAAhB;;AAEA,UAAKuZ,OAAO,KAAK,IAAjB,EAAwB;AAEvB,cAAM,IAAIv2H,KAAJ,CAAW,8CAA8Cg9G,SAAzD,CAAN;AAEA;;AAED,UAAMwZ,OAAO,GAAG;AACf;AACA9B,QAAAA,QAAQ,EAAE6B,OAAO,CAAE,CAAF,CAFF;AAGfpB,QAAAA,UAAU,EAAEoB,OAAO,CAAE,CAAF,CAHJ;AAIfjB,QAAAA,WAAW,EAAEiB,OAAO,CAAE,CAAF,CAJL;AAKfrZ,QAAAA,YAAY,EAAEqZ,OAAO,CAAE,CAAF,CALN;AAKa;AAC5BxB,QAAAA,aAAa,EAAEwB,OAAO,CAAE,CAAF;AANP,OAAhB;AASA,UAAME,OAAO,GAAGD,OAAO,CAAC9B,QAAR,IAAoB8B,OAAO,CAAC9B,QAAR,CAAiBjO,WAAjB,CAA8B,GAA9B,CAApC;;AAEA,UAAKgQ,OAAO,KAAK98H,SAAZ,IAAyB88H,OAAO,KAAK,CAAE,CAA5C,EAAgD;AAE/C,YAAMtB,UAAU,GAAGqB,OAAO,CAAC9B,QAAR,CAAiBgC,SAAjB,CAA4BD,OAAO,GAAG,CAAtC,CAAnB,CAF+C,CAI/C;AACA;AACA;AACA;;AACA,YAAKhD,qBAAqB,CAAC55H,OAAtB,CAA+Bs7H,UAA/B,MAAgD,CAAE,CAAvD,EAA2D;AAE1DqB,UAAAA,OAAO,CAAC9B,QAAR,GAAmB8B,OAAO,CAAC9B,QAAR,CAAiBgC,SAAjB,CAA4B,CAA5B,EAA+BD,OAA/B,CAAnB;AACAD,UAAAA,OAAO,CAACrB,UAAR,GAAqBA,UAArB;AAEA;AAED;;AAED,UAAKqB,OAAO,CAACtZ,YAAR,KAAyB,IAAzB,IAAiCsZ,OAAO,CAACtZ,YAAR,CAAqB1iH,MAArB,KAAgC,CAAtE,EAA0E;AAEzE,cAAM,IAAIwF,KAAJ,CAAW,iEAAiEg9G,SAA5E,CAAN;AAEA;;AAED,aAAOwZ,OAAP;AAEA;;;WAED,kBAAiBH,IAAjB,EAAuB3B,QAAvB,EAAkC;AAEjC,UAAKA,QAAQ,KAAK/6H,SAAb,IAA0B+6H,QAAQ,KAAK,EAAvC,IAA6CA,QAAQ,KAAK,GAA1D,IAAiEA,QAAQ,KAAK,CAAE,CAAhF,IAAqFA,QAAQ,KAAK2B,IAAI,CAACrvH,IAAvG,IAA+G0tH,QAAQ,KAAK2B,IAAI,CAAC/6H,IAAtI,EAA6I;AAE5I,eAAO+6H,IAAP;AAEA,OANgC,CAQjC;;;AACA,UAAKA,IAAI,CAAClrG,QAAV,EAAqB;AAEpB,YAAMwoE,IAAI,GAAG0iC,IAAI,CAAClrG,QAAL,CAAcwrG,aAAd,CAA6BjC,QAA7B,CAAb;;AAEA,YAAK/gC,IAAI,KAAKh6F,SAAd,EAA0B;AAEzB,iBAAOg6F,IAAP;AAEA;AAED,OAnBgC,CAqBjC;;;AACA,UAAK0iC,IAAI,CAAC/6G,QAAV,EAAqB;AAEpB,YAAMs7G,iBAAiB,GAAG,SAApBA,iBAAoB,CAAWt7G,QAAX,EAAsB;AAE/C,eAAM,IAAIhhB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGghB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,EAAvC,EAA6C;AAE5C,gBAAMu8H,SAAS,GAAGv7G,QAAQ,CAAEhhB,CAAF,CAA1B;;AAEA,gBAAKu8H,SAAS,CAAC7vH,IAAV,KAAmB0tH,QAAnB,IAA+BmC,SAAS,CAACv7H,IAAV,KAAmBo5H,QAAvD,EAAkE;AAEjE,qBAAOmC,SAAP;AAEA;;AAED,gBAAMxuD,MAAM,GAAGuuD,iBAAiB,CAAEC,SAAS,CAACv7G,QAAZ,CAAhC;AAEA,gBAAK+sD,MAAL,EAAc,OAAOA,MAAP;AAEd;;AAED,iBAAO,IAAP;AAEA,SApBD;;AAsBA,YAAMyuD,WAAW,GAAGF,iBAAiB,CAAEP,IAAI,CAAC/6G,QAAP,CAArC;;AAEA,YAAKw7G,WAAL,EAAmB;AAElB,iBAAOA,WAAP;AAEA;AAED;;AAED,aAAO,IAAP;AAEA;;;;;;AA4XFhD,eAAe,CAACJ,SAAhB,GAA4BA,SAA5B;AAEAI,eAAe,CAACrzH,SAAhB,CAA0Bq1H,WAA1B,GAAwC;AACvCC,EAAAA,MAAM,EAAE,CAD+B;AAEvCG,EAAAA,WAAW,EAAE,CAF0B;AAGvCF,EAAAA,YAAY,EAAE,CAHyB;AAIvCC,EAAAA,cAAc,EAAE;AAJuB,CAAxC;AAOAnC,eAAe,CAACrzH,SAAhB,CAA0Bg1H,UAA1B,GAAuC;AACtCC,EAAAA,IAAI,EAAE,CADgC;AAEtCC,EAAAA,WAAW,EAAE,CAFyB;AAGtCC,EAAAA,sBAAsB,EAAE;AAHc,CAAvC;AAMA9B,eAAe,CAACrzH,SAAhB,CAA0B01H,mBAA1B,GAAgD,CAE/CrC,eAAe,CAACrzH,SAAhB,CAA0Bs2H,gBAFqB,EAG/CjD,eAAe,CAACrzH,SAAhB,CAA0Bu2H,eAHqB,EAI/ClD,eAAe,CAACrzH,SAAhB,CAA0Bw2H,sBAJqB,EAK/CnD,eAAe,CAACrzH,SAAhB,CAA0By2H,iBALqB,CAAhD;AASApD,eAAe,CAACrzH,SAAhB,CAA0B21H,gCAA1B,GAA6D,CAE5D,CACC;AACAtC,eAAe,CAACrzH,SAAhB,CAA0B02H,gBAF3B,EAGCrD,eAAe,CAACrzH,SAAhB,CAA0B22H,+BAH3B,EAICtD,eAAe,CAACrzH,SAAhB,CAA0B42H,0CAJ3B,CAF4D,EAQzD,CAEF;AAEAvD,eAAe,CAACrzH,SAAhB,CAA0B62H,eAJxB,EAKFxD,eAAe,CAACrzH,SAAhB,CAA0B82H,8BALxB,EAMFzD,eAAe,CAACrzH,SAAhB,CAA0B+2H,yCANxB,CARyD,EAgBzD,CAEF;AACA1D,eAAe,CAACrzH,SAAhB,CAA0Bg3H,sBAHxB,EAIF3D,eAAe,CAACrzH,SAAhB,CAA0Bi3H,qCAJxB,EAKF5D,eAAe,CAACrzH,SAAhB,CAA0Bk3H,gDALxB,CAhByD,EAuBzD,CAEF;AACA7D,eAAe,CAACrzH,SAAhB,CAA0Bm3H,mBAHxB,EAIF9D,eAAe,CAACrzH,SAAhB,CAA0Bo3H,kCAJxB,EAKF/D,eAAe,CAACrzH,SAAhB,CAA0Bq3H,6CALxB,CAvByD,CAA7D;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,oB;AAEL,kCAAc;AAAA;;AAEb,SAAKzB,sBAAL,GAA8B,IAA9B;AAEA,SAAKh7H,IAAL,GAAYN,YAAY,EAAxB,CAJa,CAMb;;AACA,SAAK0qE,QAAL,GAAgBt5D,KAAK,CAAC3L,SAAN,CAAgBpG,KAAhB,CAAsBI,IAAtB,CAA4B+H,SAA5B,CAAhB;AAEA,SAAK4xH,eAAL,GAAuB,CAAvB,CATa,CASa;AAC1B;;AAEA,QAAMn7F,OAAO,GAAG,EAAhB;AACA,SAAK++F,cAAL,GAAsB/+F,OAAtB,CAba,CAakB;;AAE/B,SAAM,IAAI3+B,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG2G,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,KAAKuB,CAA7C,EAAgD,EAAGvB,CAAnD,EAAuD;AAEtD2+B,MAAAA,OAAO,CAAEz2B,SAAS,CAAElI,CAAF,CAAT,CAAegB,IAAjB,CAAP,GAAiChB,CAAjC;AAEA;;AAED,SAAK29H,MAAL,GAAc,EAAd,CArBa,CAqBK;;AAClB,SAAKC,YAAL,GAAoB,EAApB,CAtBa,CAsBW;;AACxB,SAAKjE,SAAL,GAAiB,EAAjB,CAvBa,CAuBQ;;AACrB,SAAKkE,sBAAL,GAA8B,EAA9B,CAxBa,CAwBqB;;AAElC,QAAMn5F,KAAK,GAAG,IAAd;AAEA,SAAKo5F,KAAL,GAAa;AAEZh/E,MAAAA,OAAO,EAAE;AACR,YAAI+nE,KAAJ,GAAY;AAEX,iBAAOniF,KAAK,CAAC0mC,QAAN,CAAelrE,MAAtB;AAEA,SALO;;AAMR,YAAI69H,KAAJ,GAAY;AAEX,iBAAO,KAAKlX,KAAL,GAAaniF,KAAK,CAACo1F,eAA1B;AAEA;;AAVO,OAFG;;AAcZ,UAAIkE,iBAAJ,GAAwB;AAEvB,eAAOt5F,KAAK,CAACi1F,SAAN,CAAgBz5H,MAAvB;AAEA;;AAlBW,KAAb;AAsBA;;;;WAED,eAAM;AAEL,UAAM4+C,OAAO,GAAG,KAAKssB,QAArB;AAAA,UACC6yD,aAAa,GAAG,KAAKP,cADtB;AAAA,UAECQ,KAAK,GAAG,KAAKP,MAFd;AAAA,UAGCQ,WAAW,GAAG,KAAKP,YAHpB;AAAA,UAIC7D,QAAQ,GAAG,KAAKJ,SAJjB;AAAA,UAKCyE,SAAS,GAAGrE,QAAQ,CAAC75H,MALtB;AAOA,UAAIm+H,WAAW,GAAGh/H,SAAlB;AAAA,UACCi/H,QAAQ,GAAGx/E,OAAO,CAAC5+C,MADpB;AAAA,UAECq+H,cAAc,GAAG,KAAKzE,eAFvB;;AAIA,WAAM,IAAI95H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG2G,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,KAAKuB,CAA7C,EAAgD,EAAGvB,CAAnD,EAAuD;AAEtD,YAAM+f,MAAM,GAAG7X,SAAS,CAAElI,CAAF,CAAxB;AAAA,YACCgB,IAAI,GAAG+e,MAAM,CAAC/e,IADf;AAEA,YAAItB,KAAK,GAAGu+H,aAAa,CAAEj9H,IAAF,CAAzB;;AAEA,YAAKtB,KAAK,KAAKL,SAAf,EAA2B;AAE1B;AAEAK,UAAAA,KAAK,GAAG4+H,QAAQ,EAAhB;AACAL,UAAAA,aAAa,CAAEj9H,IAAF,CAAb,GAAwBtB,KAAxB;AACAo/C,UAAAA,OAAO,CAACt/C,IAAR,CAAcugB,MAAd,EAN0B,CAQ1B;;AAEA,eAAM,IAAI2C,CAAC,GAAG,CAAR,EAAWlhB,CAAC,GAAG48H,SAArB,EAAgC17G,CAAC,KAAKlhB,CAAtC,EAAyC,EAAGkhB,CAA5C,EAAgD;AAE/Cq3G,YAAAA,QAAQ,CAAEr3G,CAAF,CAAR,CAAcljB,IAAd,CAAoB,IAAIg6H,eAAJ,CAAqBz5G,MAArB,EAA6Bm+G,KAAK,CAAEx7G,CAAF,CAAlC,EAAyCy7G,WAAW,CAAEz7G,CAAF,CAApD,CAApB;AAEA;AAED,SAhBD,MAgBO,IAAKhjB,KAAK,GAAG6+H,cAAb,EAA8B;AAEpCF,UAAAA,WAAW,GAAGv/E,OAAO,CAAEp/C,KAAF,CAArB,CAFoC,CAIpC;;AAEA,cAAM8+H,gBAAgB,GAAG,EAAGD,cAA5B;AAAA,cACCE,gBAAgB,GAAG3/E,OAAO,CAAE0/E,gBAAF,CAD3B;AAGAP,UAAAA,aAAa,CAAEQ,gBAAgB,CAACz9H,IAAnB,CAAb,GAAyCtB,KAAzC;AACAo/C,UAAAA,OAAO,CAAEp/C,KAAF,CAAP,GAAmB++H,gBAAnB;AAEAR,UAAAA,aAAa,CAAEj9H,IAAF,CAAb,GAAwBw9H,gBAAxB;AACA1/E,UAAAA,OAAO,CAAE0/E,gBAAF,CAAP,GAA8Bz+G,MAA9B,CAboC,CAepC;;AAEA,eAAM,IAAI2C,IAAC,GAAG,CAAR,EAAWlhB,GAAC,GAAG48H,SAArB,EAAgC17G,IAAC,KAAKlhB,GAAtC,EAAyC,EAAGkhB,IAA5C,EAAgD;AAE/C,gBAAMg8G,eAAe,GAAG3E,QAAQ,CAAEr3G,IAAF,CAAhC;AAAA,gBACCi8G,UAAU,GAAGD,eAAe,CAAEF,gBAAF,CAD7B;AAGA,gBAAI7H,OAAO,GAAG+H,eAAe,CAAEh/H,KAAF,CAA7B;AAEAg/H,YAAAA,eAAe,CAAEh/H,KAAF,CAAf,GAA2Bi/H,UAA3B;;AAEA,gBAAKhI,OAAO,KAAKt3H,SAAjB,EAA6B;AAE5B;AACA;AACA;AAEAs3H,cAAAA,OAAO,GAAG,IAAI6C,eAAJ,CAAqBz5G,MAArB,EAA6Bm+G,KAAK,CAAEx7G,IAAF,CAAlC,EAAyCy7G,WAAW,CAAEz7G,IAAF,CAApD,CAAV;AAEA;;AAEDg8G,YAAAA,eAAe,CAAEF,gBAAF,CAAf,GAAsC7H,OAAtC;AAEA;AAED,SAxCM,MAwCA,IAAK73E,OAAO,CAAEp/C,KAAF,CAAP,KAAqB2+H,WAA1B,EAAwC;AAE9Cp5H,UAAAA,OAAO,CAACkD,KAAR,CAAe,sEACd,mFADD;AAGA,SAnEqD,CAmEpD;;AAEF,OAlFI,CAkFH;;;AAEF,WAAK2xH,eAAL,GAAuByE,cAAvB;AAEA;;;WAED,kBAAS;AAER,UAAMz/E,OAAO,GAAG,KAAKssB,QAArB;AAAA,UACC6yD,aAAa,GAAG,KAAKP,cADtB;AAAA,UAEC3D,QAAQ,GAAG,KAAKJ,SAFjB;AAAA,UAGCyE,SAAS,GAAGrE,QAAQ,CAAC75H,MAHtB;AAKA,UAAIq+H,cAAc,GAAG,KAAKzE,eAA1B;;AAEA,WAAM,IAAI95H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG2G,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,KAAKuB,CAA7C,EAAgD,EAAGvB,CAAnD,EAAuD;AAEtD,YAAM+f,MAAM,GAAG7X,SAAS,CAAElI,CAAF,CAAxB;AAAA,YACCgB,IAAI,GAAG+e,MAAM,CAAC/e,IADf;AAAA,YAECtB,KAAK,GAAGu+H,aAAa,CAAEj9H,IAAF,CAFtB;;AAIA,YAAKtB,KAAK,KAAKL,SAAV,IAAuBK,KAAK,IAAI6+H,cAArC,EAAsD;AAErD;AAEA,cAAMK,eAAe,GAAGL,cAAc,EAAtC;AAAA,cACCM,iBAAiB,GAAG//E,OAAO,CAAE8/E,eAAF,CAD5B;AAGAX,UAAAA,aAAa,CAAEY,iBAAiB,CAAC79H,IAApB,CAAb,GAA0CtB,KAA1C;AACAo/C,UAAAA,OAAO,CAAEp/C,KAAF,CAAP,GAAmBm/H,iBAAnB;AAEAZ,UAAAA,aAAa,CAAEj9H,IAAF,CAAb,GAAwB49H,eAAxB;AACA9/E,UAAAA,OAAO,CAAE8/E,eAAF,CAAP,GAA6B7+G,MAA7B,CAXqD,CAarD;;AAEA,eAAM,IAAI2C,CAAC,GAAG,CAAR,EAAWlhB,CAAC,GAAG48H,SAArB,EAAgC17G,CAAC,KAAKlhB,CAAtC,EAAyC,EAAGkhB,CAA5C,EAAgD;AAE/C,gBAAMg8G,eAAe,GAAG3E,QAAQ,CAAEr3G,CAAF,CAAhC;AAAA,gBACCo8G,WAAW,GAAGJ,eAAe,CAAEE,eAAF,CAD9B;AAAA,gBAECjI,OAAO,GAAG+H,eAAe,CAAEh/H,KAAF,CAF1B;AAIAg/H,YAAAA,eAAe,CAAEh/H,KAAF,CAAf,GAA2Bo/H,WAA3B;AACAJ,YAAAA,eAAe,CAAEE,eAAF,CAAf,GAAqCjI,OAArC;AAEA;AAED;AAED,OA3CO,CA2CN;;;AAEF,WAAKmD,eAAL,GAAuByE,cAAvB;AAEA,K,CAED;;;;WACA,mBAAU;AAET,UAAMz/E,OAAO,GAAG,KAAKssB,QAArB;AAAA,UACC6yD,aAAa,GAAG,KAAKP,cADtB;AAAA,UAEC3D,QAAQ,GAAG,KAAKJ,SAFjB;AAAA,UAGCyE,SAAS,GAAGrE,QAAQ,CAAC75H,MAHtB;AAKA,UAAIq+H,cAAc,GAAG,KAAKzE,eAA1B;AAAA,UACCwE,QAAQ,GAAGx/E,OAAO,CAAC5+C,MADpB;;AAGA,WAAM,IAAIF,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG2G,SAAS,CAAChI,MAA/B,EAAuCF,CAAC,KAAKuB,CAA7C,EAAgD,EAAGvB,CAAnD,EAAuD;AAEtD,YAAM+f,MAAM,GAAG7X,SAAS,CAAElI,CAAF,CAAxB;AAAA,YACCgB,IAAI,GAAG+e,MAAM,CAAC/e,IADf;AAAA,YAECtB,KAAK,GAAGu+H,aAAa,CAAEj9H,IAAF,CAFtB;;AAIA,YAAKtB,KAAK,KAAKL,SAAf,EAA2B;AAE1B,iBAAO4+H,aAAa,CAAEj9H,IAAF,CAApB;;AAEA,cAAKtB,KAAK,GAAG6+H,cAAb,EAA8B;AAE7B;AAEA,gBAAMC,gBAAgB,GAAG,EAAGD,cAA5B;AAAA,gBACCE,gBAAgB,GAAG3/E,OAAO,CAAE0/E,gBAAF,CAD3B;AAAA,gBAEC/lE,SAAS,GAAG,EAAG6lE,QAFhB;AAAA,gBAGCS,UAAU,GAAGjgF,OAAO,CAAE2Z,SAAF,CAHrB,CAJ6B,CAS7B;;AACAwlE,YAAAA,aAAa,CAAEQ,gBAAgB,CAACz9H,IAAnB,CAAb,GAAyCtB,KAAzC;AACAo/C,YAAAA,OAAO,CAAEp/C,KAAF,CAAP,GAAmB++H,gBAAnB,CAX6B,CAa7B;;AACAR,YAAAA,aAAa,CAAEc,UAAU,CAAC/9H,IAAb,CAAb,GAAmCw9H,gBAAnC;AACA1/E,YAAAA,OAAO,CAAE0/E,gBAAF,CAAP,GAA8BO,UAA9B;AACAjgF,YAAAA,OAAO,CAACgnB,GAAR,GAhB6B,CAkB7B;;AAEA,iBAAM,IAAIpjD,CAAC,GAAG,CAAR,EAAWlhB,CAAC,GAAG48H,SAArB,EAAgC17G,CAAC,KAAKlhB,CAAtC,EAAyC,EAAGkhB,CAA5C,EAAgD;AAE/C,kBAAMg8G,eAAe,GAAG3E,QAAQ,CAAEr3G,CAAF,CAAhC;AAAA,kBACCi8G,UAAU,GAAGD,eAAe,CAAEF,gBAAF,CAD7B;AAAA,kBAEClhC,IAAI,GAAGohC,eAAe,CAAEjmE,SAAF,CAFvB;AAIAimE,cAAAA,eAAe,CAAEh/H,KAAF,CAAf,GAA2Bi/H,UAA3B;AACAD,cAAAA,eAAe,CAAEF,gBAAF,CAAf,GAAsClhC,IAAtC;AACAohC,cAAAA,eAAe,CAAC54D,GAAhB;AAEA;AAED,WAhCD,MAgCO;AAEN;AAEA,gBAAMrN,UAAS,GAAG,EAAG6lE,QAArB;AAAA,gBACCS,WAAU,GAAGjgF,OAAO,CAAE2Z,UAAF,CADrB;;AAGA,gBAAKA,UAAS,GAAG,CAAjB,EAAqB;AAEpBwlE,cAAAA,aAAa,CAAEc,WAAU,CAAC/9H,IAAb,CAAb,GAAmCtB,KAAnC;AAEA;;AAEDo/C,YAAAA,OAAO,CAAEp/C,KAAF,CAAP,GAAmBq/H,WAAnB;AACAjgF,YAAAA,OAAO,CAACgnB,GAAR,GAdM,CAgBN;;AAEA,iBAAM,IAAIpjD,IAAC,GAAG,CAAR,EAAWlhB,GAAC,GAAG48H,SAArB,EAAgC17G,IAAC,KAAKlhB,GAAtC,EAAyC,EAAGkhB,IAA5C,EAAgD;AAE/C,kBAAMg8G,gBAAe,GAAG3E,QAAQ,CAAEr3G,IAAF,CAAhC;AAEAg8G,cAAAA,gBAAe,CAAEh/H,KAAF,CAAf,GAA2Bg/H,gBAAe,CAAEjmE,UAAF,CAA1C;;AACAimE,cAAAA,gBAAe,CAAC54D,GAAhB;AAEA;AAED,WA/DyB,CA+DxB;;AAEF,SAvEqD,CAuEpD;;AAEF,OAnFQ,CAmFP;;;AAEF,WAAKg0D,eAAL,GAAuByE,cAAvB;AAEA,K,CAED;;;;WAEA,oBAAYhmE,IAAZ,EAAkBghE,UAAlB,EAA+B;AAE9B;AACA;AAEA,UAAMyF,aAAa,GAAG,KAAKnB,sBAA3B;AACA,UAAIn+H,KAAK,GAAGs/H,aAAa,CAAEzmE,IAAF,CAAzB;AACA,UAAMwhE,QAAQ,GAAG,KAAKJ,SAAtB;AAEA,UAAKj6H,KAAK,KAAKL,SAAf,EAA2B,OAAO06H,QAAQ,CAAEr6H,KAAF,CAAf;AAE3B,UAAMw+H,KAAK,GAAG,KAAKP,MAAnB;AAAA,UACCQ,WAAW,GAAG,KAAKP,YADpB;AAAA,UAEC9+E,OAAO,GAAG,KAAKssB,QAFhB;AAAA,UAGCkzD,QAAQ,GAAGx/E,OAAO,CAAC5+C,MAHpB;AAAA,UAICq+H,cAAc,GAAG,KAAKzE,eAJvB;AAAA,UAKC4E,eAAe,GAAG,IAAI5sH,KAAJ,CAAWwsH,QAAX,CALnB;AAOA5+H,MAAAA,KAAK,GAAGq6H,QAAQ,CAAC75H,MAAjB;AAEA8+H,MAAAA,aAAa,CAAEzmE,IAAF,CAAb,GAAwB74D,KAAxB;AAEAw+H,MAAAA,KAAK,CAAC1+H,IAAN,CAAY+4D,IAAZ;AACA4lE,MAAAA,WAAW,CAAC3+H,IAAZ,CAAkB+5H,UAAlB;AACAQ,MAAAA,QAAQ,CAACv6H,IAAT,CAAek/H,eAAf;;AAEA,WAAM,IAAI1+H,CAAC,GAAGu+H,cAAR,EAAwBh9H,CAAC,GAAGu9C,OAAO,CAAC5+C,MAA1C,EAAkDF,CAAC,KAAKuB,CAAxD,EAA2D,EAAGvB,CAA9D,EAAkE;AAEjE,YAAM+f,MAAM,GAAG++B,OAAO,CAAE9+C,CAAF,CAAtB;AACA0+H,QAAAA,eAAe,CAAE1+H,CAAF,CAAf,GAAuB,IAAIw5H,eAAJ,CAAqBz5G,MAArB,EAA6Bw4C,IAA7B,EAAmCghE,UAAnC,CAAvB;AAEA;;AAED,aAAOmF,eAAP;AAEA;;;WAED,sBAAcnmE,IAAd,EAAqB;AAEpB;AACA;AAEA,UAAMymE,aAAa,GAAG,KAAKnB,sBAA3B;AAAA,UACCn+H,KAAK,GAAGs/H,aAAa,CAAEzmE,IAAF,CADtB;;AAGA,UAAK74D,KAAK,KAAKL,SAAf,EAA2B;AAE1B,YAAM6+H,KAAK,GAAG,KAAKP,MAAnB;AAAA,YACCQ,WAAW,GAAG,KAAKP,YADpB;AAAA,YAEC7D,QAAQ,GAAG,KAAKJ,SAFjB;AAAA,YAGCsF,iBAAiB,GAAGlF,QAAQ,CAAC75H,MAAT,GAAkB,CAHvC;AAAA,YAICg/H,YAAY,GAAGnF,QAAQ,CAAEkF,iBAAF,CAJxB;AAAA,YAKCE,gBAAgB,GAAG5mE,IAAI,CAAE0mE,iBAAF,CALxB;AAOAD,QAAAA,aAAa,CAAEG,gBAAF,CAAb,GAAoCz/H,KAApC;AAEAq6H,QAAAA,QAAQ,CAAEr6H,KAAF,CAAR,GAAoBw/H,YAApB;AACAnF,QAAAA,QAAQ,CAACj0D,GAAT;AAEAq4D,QAAAA,WAAW,CAAEz+H,KAAF,CAAX,GAAuBy+H,WAAW,CAAEc,iBAAF,CAAlC;AACAd,QAAAA,WAAW,CAACr4D,GAAZ;AAEAo4D,QAAAA,KAAK,CAAEx+H,KAAF,CAAL,GAAiBw+H,KAAK,CAAEe,iBAAF,CAAtB;AACAf,QAAAA,KAAK,CAACp4D,GAAN;AAEA;AAED;;;;;;IAIIs5D,e;AAEL,2BAAaC,KAAb,EAAoBrlB,IAApB,EAAyE;AAAA,QAA/CslB,SAA+C,uEAAnC,IAAmC;AAAA,QAA7BnjB,SAA6B,uEAAjBnC,IAAI,CAACmC,SAAY;;AAAA;;AAExE,SAAKojB,MAAL,GAAcF,KAAd;AACA,SAAKG,KAAL,GAAaxlB,IAAb;AACA,SAAKylB,UAAL,GAAkBH,SAAlB;AACA,SAAKnjB,SAAL,GAAiBA,SAAjB;AAEA,QAAMlC,MAAM,GAAGD,IAAI,CAACC,MAApB;AAAA,QACCylB,OAAO,GAAGzlB,MAAM,CAAC/5G,MADlB;AAAA,QAECy/H,YAAY,GAAG,IAAI7tH,KAAJ,CAAW4tH,OAAX,CAFhB;AAIA,QAAME,mBAAmB,GAAG;AAC3BjiB,MAAAA,WAAW,EAAEvhH,mBADc;AAE3BwhH,MAAAA,SAAS,EAAExhH;AAFgB,KAA5B;;AAKA,SAAM,IAAI4D,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK0/H,OAAvB,EAAgC,EAAG1/H,CAAnC,EAAuC;AAEtC,UAAM27G,WAAW,GAAG1B,MAAM,CAAEj6G,CAAF,CAAN,CAAYo7G,iBAAZ,CAA+B,IAA/B,CAApB;AACAukB,MAAAA,YAAY,CAAE3/H,CAAF,CAAZ,GAAoB27G,WAApB;AACAA,MAAAA,WAAW,CAACc,QAAZ,GAAuBmjB,mBAAvB;AAEA;;AAED,SAAKC,oBAAL,GAA4BD,mBAA5B;AAEA,SAAKE,aAAL,GAAqBH,YAArB,CA1BwE,CA0BrC;AAEnC;;AACA,SAAKI,iBAAL,GAAyB,IAAIjuH,KAAJ,CAAW4tH,OAAX,CAAzB;AAEA,SAAKM,WAAL,GAAmB,IAAnB,CA/BwE,CA+B/C;;AACzB,SAAKC,iBAAL,GAAyB,IAAzB,CAhCwE,CAgCzC;;AAE/B,SAAKC,qBAAL,GAA6B,IAA7B;AACA,SAAKC,kBAAL,GAA0B,IAA1B;AAEA,SAAK7M,IAAL,GAAYv3H,UAAZ;AACA,SAAKqkI,UAAL,GAAkB,CAAE,CAApB,CAtCwE,CAwCxE;AACA;;AACA,SAAKC,UAAL,GAAkB,IAAlB,CA1CwE,CA4CxE;AACA;;AACA,SAAK9yF,IAAL,GAAY,CAAZ;AAEA,SAAKqyE,SAAL,GAAiB,CAAjB;AACA,SAAK0gB,mBAAL,GAA2B,CAA3B;AAEA,SAAK9yE,MAAL,GAAc,CAAd;AACA,SAAK+yE,gBAAL,GAAwB,CAAxB;AAEA,SAAKC,WAAL,GAAmBvhH,QAAnB,CAtDwE,CAsD3C;;AAE7B,SAAKwhH,MAAL,GAAc,KAAd,CAxDwE,CAwDnD;;AACrB,SAAKj4F,OAAL,GAAe,IAAf,CAzDwE,CAyDnD;;AAErB,SAAKk4F,iBAAL,GAAyB,KAAzB,CA3DwE,CA2DzC;;AAE/B,SAAKC,gBAAL,GAAwB,IAAxB,CA7DwE,CA6D3C;;AAC7B,SAAKC,cAAL,GAAsB,IAAtB,CA9DwE,CA8D7C;AAE3B,G,CAED;;;;;WAEA,gBAAO;AAEN,WAAKrB,MAAL,CAAYsB,eAAZ,CAA6B,IAA7B;;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAO;AAEN,WAAKtB,MAAL,CAAYuB,iBAAZ,CAA+B,IAA/B;;AAEA,aAAO,KAAK18E,KAAL,EAAP;AAEA;;;WAED,iBAAQ;AAEP,WAAKq8E,MAAL,GAAc,KAAd;AACA,WAAKj4F,OAAL,GAAe,IAAf;AAEA,WAAK+E,IAAL,GAAY,CAAZ,CALO,CAKQ;;AACf,WAAK6yF,UAAL,GAAkB,CAAE,CAApB,CANO,CAMe;;AACtB,WAAKC,UAAL,GAAkB,IAAlB,CAPO,CAOgB;;AAEvB,aAAO,KAAKU,UAAL,GAAkBC,WAAlB,EAAP;AAEA;;;WAED,qBAAY;AAEX,aAAO,KAAKx4F,OAAL,IAAgB,CAAE,KAAKi4F,MAAvB,IAAiC,KAAK7gB,SAAL,KAAmB,CAApD,IACN,KAAKygB,UAAL,KAAoB,IADd,IACsB,KAAKd,MAAL,CAAY0B,eAAZ,CAA6B,IAA7B,CAD7B;AAGA,K,CAED;;;;WACA,uBAAc;AAEb,aAAO,KAAK1B,MAAL,CAAY0B,eAAZ,CAA6B,IAA7B,CAAP;AAEA;;;WAED,iBAAS1zF,IAAT,EAAgB;AAEf,WAAK8yF,UAAL,GAAkB9yF,IAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAASqX,IAAT,EAAe47E,WAAf,EAA6B;AAE5B,WAAKlN,IAAL,GAAY1uE,IAAZ;AACA,WAAK47E,WAAL,GAAmBA,WAAnB;AAEA,aAAO,IAAP;AAEA,K,CAED;AAEA;AACA;AACA;;;;WACA,4BAAoBhzE,MAApB,EAA6B;AAE5B,WAAKA,MAAL,GAAcA,MAAd,CAF4B,CAI5B;;AACA,WAAK+yE,gBAAL,GAAwB,KAAK/3F,OAAL,GAAeglB,MAAf,GAAwB,CAAhD;AAEA,aAAO,KAAKuzE,UAAL,EAAP;AAEA,K,CAED;;;;WACA,8BAAqB;AAEpB,aAAO,KAAKR,gBAAZ;AAEA;;;WAED,gBAAQhf,QAAR,EAAmB;AAElB,aAAO,KAAK2f,eAAL,CAAsB3f,QAAtB,EAAgC,CAAhC,EAAmC,CAAnC,CAAP;AAEA;;;WAED,iBAASA,QAAT,EAAoB;AAEnB,aAAO,KAAK2f,eAAL,CAAsB3f,QAAtB,EAAgC,CAAhC,EAAmC,CAAnC,CAAP;AAEA;;;WAED,uBAAe4f,aAAf,EAA8B5f,QAA9B,EAAwC6f,IAAxC,EAA+C;AAE9CD,MAAAA,aAAa,CAACE,OAAd,CAAuB9f,QAAvB;AACA,WAAK+f,MAAL,CAAa/f,QAAb;;AAEA,UAAK6f,IAAL,EAAY;AAEX,YAAMG,cAAc,GAAG,KAAK/B,KAAL,CAAWje,QAAlC;AAAA,YACCigB,eAAe,GAAGL,aAAa,CAAC3B,KAAd,CAAoBje,QADvC;AAAA,YAGCkgB,aAAa,GAAGD,eAAe,GAAGD,cAHnC;AAAA,YAICG,aAAa,GAAGH,cAAc,GAAGC,eAJlC;AAMAL,QAAAA,aAAa,CAACC,IAAd,CAAoB,GAApB,EAAyBK,aAAzB,EAAwClgB,QAAxC;AACA,aAAK6f,IAAL,CAAWM,aAAX,EAA0B,GAA1B,EAA+BngB,QAA/B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,qBAAaogB,YAAb,EAA2BpgB,QAA3B,EAAqC6f,IAArC,EAA4C;AAE3C,aAAOO,YAAY,CAACC,aAAb,CAA4B,IAA5B,EAAkCrgB,QAAlC,EAA4C6f,IAA5C,CAAP;AAEA;;;WAED,sBAAa;AAEZ,UAAMS,iBAAiB,GAAG,KAAK1B,kBAA/B;;AAEA,UAAK0B,iBAAiB,KAAK,IAA3B,EAAkC;AAEjC,aAAK1B,kBAAL,GAA0B,IAA1B;;AACA,aAAKZ,MAAL,CAAYuC,2BAAZ,CAAyCD,iBAAzC;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;AAEA;AACA;AACA;;;;WACA,+BAAuBjiB,SAAvB,EAAmC;AAElC,WAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAK0gB,mBAAL,GAA2B,KAAKG,MAAL,GAAc,CAAd,GAAkB7gB,SAA7C;AAEA,aAAO,KAAKohB,WAAL,EAAP;AAEA,K,CAED;;;;WACA,iCAAwB;AAEvB,aAAO,KAAKV,mBAAZ;AAEA;;;WAED,qBAAa/e,QAAb,EAAwB;AAEvB,WAAK3B,SAAL,GAAiB,KAAK4f,KAAL,CAAWje,QAAX,GAAsBA,QAAvC;AAEA,aAAO,KAAKyf,WAAL,EAAP;AAEA;;;WAED,kBAAUe,MAAV,EAAmB;AAElB,WAAKx0F,IAAL,GAAYw0F,MAAM,CAACx0F,IAAnB;AACA,WAAKqyE,SAAL,GAAiBmiB,MAAM,CAACniB,SAAxB;AAEA,aAAO,KAAKohB,WAAL,EAAP;AAEA;;;WAED,cAAMzf,QAAN,EAAiB;AAEhB,aAAO,KAAK6f,IAAL,CAAW,KAAKd,mBAAhB,EAAqC,CAArC,EAAwC/e,QAAxC,CAAP;AAEA;;;WAED,cAAMygB,cAAN,EAAsBC,YAAtB,EAAoC1gB,QAApC,EAA+C;AAE9C,UAAM8d,KAAK,GAAG,KAAKE,MAAnB;AAAA,UACCpO,GAAG,GAAGkO,KAAK,CAAC9xF,IADb;AAAA,UAECqyE,SAAS,GAAG,KAAKA,SAFlB;AAIA,UAAIjE,WAAW,GAAG,KAAKukB,qBAAvB;;AAEA,UAAKvkB,WAAW,KAAK,IAArB,EAA4B;AAE3BA,QAAAA,WAAW,GAAG0jB,KAAK,CAAC6C,uBAAN,EAAd;AACA,aAAKhC,qBAAL,GAA6BvkB,WAA7B;AAEA;;AAED,UAAMxC,KAAK,GAAGwC,WAAW,CAACU,kBAA1B;AAAA,UACClrF,MAAM,GAAGwqF,WAAW,CAACW,YADtB;AAGAnD,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAagY,GAAb;AACAhY,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAagY,GAAG,GAAG5P,QAAnB;AAEApwF,MAAAA,MAAM,CAAE,CAAF,CAAN,GAAc6wG,cAAc,GAAGpiB,SAA/B;AACAzuF,MAAAA,MAAM,CAAE,CAAF,CAAN,GAAc8wG,YAAY,GAAGriB,SAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAc;AAEb,UAAMuiB,oBAAoB,GAAG,KAAKjC,qBAAlC;;AAEA,UAAKiC,oBAAoB,KAAK,IAA9B,EAAqC;AAEpC,aAAKjC,qBAAL,GAA6B,IAA7B;;AACA,aAAKX,MAAL,CAAYuC,2BAAZ,CAAyCK,oBAAzC;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WAEA,oBAAW;AAEV,aAAO,KAAK5C,MAAZ;AAEA;;;WAED,mBAAU;AAET,aAAO,KAAKC,KAAZ;AAEA;;;WAED,mBAAU;AAET,aAAO,KAAKC,UAAL,IAAmB,KAAKF,MAAL,CAAY6C,KAAtC;AAEA,K,CAED;;;;WAEA,iBAAS70F,IAAT,EAAe80F,SAAf,EAA0BC,aAA1B,EAAyCrK,SAAzC,EAAqD;AAEpD;AAEA,UAAK,CAAE,KAAKzvF,OAAZ,EAAsB;AAErB;AAEA,aAAK+5F,aAAL,CAAoBh1F,IAApB;;AACA;AAEA;;AAED,UAAMsyE,SAAS,GAAG,KAAKwgB,UAAvB;;AAEA,UAAKxgB,SAAS,KAAK,IAAnB,EAA0B;AAEzB;AAEA,YAAM2iB,WAAW,GAAG,CAAEj1F,IAAI,GAAGsyE,SAAT,IAAuByiB,aAA3C;;AACA,YAAKE,WAAW,GAAG,CAAd,IAAmBF,aAAa,KAAK,CAA1C,EAA8C;AAE7C,iBAF6C,CAErC;AAER,SATwB,CAWzB;;;AAEA,aAAKjC,UAAL,GAAkB,IAAlB,CAbyB,CAaD;;AACxBgC,QAAAA,SAAS,GAAGC,aAAa,GAAGE,WAA5B;AAEA,OA/BmD,CAiCpD;;;AAEAH,MAAAA,SAAS,IAAI,KAAKI,gBAAL,CAAuBl1F,IAAvB,CAAb;;AACA,UAAMm1F,QAAQ,GAAG,KAAKC,WAAL,CAAkBN,SAAlB,CAAjB,CApCoD,CAsCpD;AACA;;;AAEA,UAAM70E,MAAM,GAAG,KAAK+0E,aAAL,CAAoBh1F,IAApB,CAAf;;AAEA,UAAKigB,MAAM,GAAG,CAAd,EAAkB;AAEjB,YAAMmyE,YAAY,GAAG,KAAKG,aAA1B;AACA,YAAM8C,cAAc,GAAG,KAAK7C,iBAA5B;;AAEA,gBAAS,KAAK5jB,SAAd;AAEC,eAAK3/G,0BAAL;AAEC,iBAAM,IAAIkmB,CAAC,GAAG,CAAR,EAAWlhB,CAAC,GAAGm+H,YAAY,CAACz/H,MAAlC,EAA0CwiB,CAAC,KAAKlhB,CAAhD,EAAmD,EAAGkhB,CAAtD,EAA0D;AAEzDi9G,cAAAA,YAAY,CAAEj9G,CAAF,CAAZ,CAAkBk5F,QAAlB,CAA4B8mB,QAA5B;AACAE,cAAAA,cAAc,CAAElgH,CAAF,CAAd,CAAoBmgH,kBAApB,CAAwCr1E,MAAxC;AAEA;;AAED;;AAED,eAAKjxD,wBAAL;AACA;AAEC,iBAAM,IAAImmB,IAAC,GAAG,CAAR,EAAWlhB,GAAC,GAAGm+H,YAAY,CAACz/H,MAAlC,EAA0CwiB,IAAC,KAAKlhB,GAAhD,EAAmD,EAAGkhB,IAAtD,EAA0D;AAEzDi9G,cAAAA,YAAY,CAAEj9G,IAAF,CAAZ,CAAkBk5F,QAAlB,CAA4B8mB,QAA5B;;AACAE,cAAAA,cAAc,CAAElgH,IAAF,CAAd,CAAoBogH,UAApB,CAAgC7K,SAAhC,EAA2CzqE,MAA3C;AAEA;;AArBH;AAyBA;AAED;;;WAED,uBAAejgB,IAAf,EAAsB;AAErB,UAAIigB,MAAM,GAAG,CAAb;;AAEA,UAAK,KAAKhlB,OAAV,EAAoB;AAEnBglB,QAAAA,MAAM,GAAG,KAAKA,MAAd;AACA,YAAMmuD,WAAW,GAAG,KAAKwkB,kBAAzB;;AAEA,YAAKxkB,WAAW,KAAK,IAArB,EAA4B;AAE3B,cAAMonB,gBAAgB,GAAGpnB,WAAW,CAACC,QAAZ,CAAsBruE,IAAtB,EAA8B,CAA9B,CAAzB;AAEAigB,UAAAA,MAAM,IAAIu1E,gBAAV;;AAEA,cAAKx1F,IAAI,GAAGouE,WAAW,CAACU,kBAAZ,CAAgC,CAAhC,CAAZ,EAAkD;AAEjD,iBAAK0kB,UAAL;;AAEA,gBAAKgC,gBAAgB,KAAK,CAA1B,EAA8B;AAE7B;AACA,mBAAKv6F,OAAL,GAAe,KAAf;AAEA;AAED;AAED;AAED;;AAED,WAAK+3F,gBAAL,GAAwB/yE,MAAxB;AACA,aAAOA,MAAP;AAEA;;;WAED,0BAAkBjgB,IAAlB,EAAyB;AAExB,UAAIqyE,SAAS,GAAG,CAAhB;;AAEA,UAAK,CAAE,KAAK6gB,MAAZ,EAAqB;AAEpB7gB,QAAAA,SAAS,GAAG,KAAKA,SAAjB;AAEA,YAAMjE,WAAW,GAAG,KAAKukB,qBAAzB;;AAEA,YAAKvkB,WAAW,KAAK,IAArB,EAA4B;AAE3B,cAAMonB,gBAAgB,GAAGpnB,WAAW,CAACC,QAAZ,CAAsBruE,IAAtB,EAA8B,CAA9B,CAAzB;AAEAqyE,UAAAA,SAAS,IAAImjB,gBAAb;;AAEA,cAAKx1F,IAAI,GAAGouE,WAAW,CAACU,kBAAZ,CAAgC,CAAhC,CAAZ,EAAkD;AAEjD,iBAAK2kB,WAAL;;AAEA,gBAAKphB,SAAS,KAAK,CAAnB,EAAuB;AAEtB;AACA,mBAAK6gB,MAAL,GAAc,IAAd;AAEA,aALD,MAKO;AAEN;AACA,mBAAK7gB,SAAL,GAAiBA,SAAjB;AAEA;AAED;AAED;AAED;;AAED,WAAK0gB,mBAAL,GAA2B1gB,SAA3B;AACA,aAAOA,SAAP;AAEA;;;WAED,qBAAayiB,SAAb,EAAyB;AAExB,UAAM9gB,QAAQ,GAAG,KAAKie,KAAL,CAAWje,QAA5B;AACA,UAAM+R,IAAI,GAAG,KAAKA,IAAlB;AAEA,UAAI/lF,IAAI,GAAG,KAAKA,IAAL,GAAY80F,SAAvB;AACA,UAAIW,SAAS,GAAG,KAAK5C,UAArB;AAEA,UAAM6C,QAAQ,GAAK3P,IAAI,KAAKt3H,YAA5B;;AAEA,UAAKqmI,SAAS,KAAK,CAAnB,EAAuB;AAEtB,YAAKW,SAAS,KAAK,CAAE,CAArB,EAAyB,OAAOz1F,IAAP;AAEzB,eAAS01F,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAd,MAAsB,CAApC,GAA0CzhB,QAAQ,GAAGh0E,IAArD,GAA4DA,IAAnE;AAEA;;AAED,UAAK+lF,IAAI,KAAKx3H,QAAd,EAAyB;AAExB,YAAKknI,SAAS,KAAK,CAAE,CAArB,EAAyB;AAExB;AAEA,eAAK5C,UAAL,GAAkB,CAAlB;;AACA,eAAK8C,WAAL,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,KAA9B;AAEA;;AAEDC,QAAAA,WAAW,EAAE;AAEZ,cAAK51F,IAAI,IAAIg0E,QAAb,EAAwB;AAEvBh0E,YAAAA,IAAI,GAAGg0E,QAAP;AAEA,WAJD,MAIO,IAAKh0E,IAAI,GAAG,CAAZ,EAAgB;AAEtBA,YAAAA,IAAI,GAAG,CAAP;AAEA,WAJM,MAIA;AAEN,iBAAKA,IAAL,GAAYA,IAAZ;AAEA,kBAAM41F,WAAN;AAEA;;AAED,cAAK,KAAKzC,iBAAV,EAA8B,KAAKD,MAAL,GAAc,IAAd,CAA9B,KACK,KAAKj4F,OAAL,GAAe,KAAf;AAEL,eAAK+E,IAAL,GAAYA,IAAZ;;AAEA,eAAKgyF,MAAL,CAAY/qH,aAAZ,CAA2B;AAC1BtV,YAAAA,IAAI,EAAE,UADoB;AACR6iI,YAAAA,MAAM,EAAE,IADA;AAE1Bz9G,YAAAA,SAAS,EAAE+9G,SAAS,GAAG,CAAZ,GAAgB,CAAE,CAAlB,GAAsB;AAFP,WAA3B;AAKA;AAED,OAzCD,MAyCO;AAAE;AAER,YAAKW,SAAS,KAAK,CAAE,CAArB,EAAyB;AAExB;AAEA,cAAKX,SAAS,IAAI,CAAlB,EAAsB;AAErBW,YAAAA,SAAS,GAAG,CAAZ;;AAEA,iBAAKE,WAAL,CAAkB,IAAlB,EAAwB,KAAK1C,WAAL,KAAqB,CAA7C,EAAgDyC,QAAhD;AAEA,WAND,MAMO;AAEN;AACA;AACA;AAEA,iBAAKC,WAAL,CAAkB,KAAK1C,WAAL,KAAqB,CAAvC,EAA0C,IAA1C,EAAgDyC,QAAhD;AAEA;AAED;;AAED,YAAK11F,IAAI,IAAIg0E,QAAR,IAAoBh0E,IAAI,GAAG,CAAhC,EAAoC;AAEnC;AAEA,cAAM61F,SAAS,GAAG7iI,IAAI,CAACuC,KAAL,CAAYyqC,IAAI,GAAGg0E,QAAnB,CAAlB,CAJmC,CAIc;;AACjDh0E,UAAAA,IAAI,IAAIg0E,QAAQ,GAAG6hB,SAAnB;AAEAJ,UAAAA,SAAS,IAAIziI,IAAI,CAACiC,GAAL,CAAU4gI,SAAV,CAAb;AAEA,cAAMC,OAAO,GAAG,KAAK7C,WAAL,GAAmBwC,SAAnC;;AAEA,cAAKK,OAAO,IAAI,CAAhB,EAAoB;AAEnB;AAEA,gBAAK,KAAK3C,iBAAV,EAA8B,KAAKD,MAAL,GAAc,IAAd,CAA9B,KACK,KAAKj4F,OAAL,GAAe,KAAf;AAEL+E,YAAAA,IAAI,GAAG80F,SAAS,GAAG,CAAZ,GAAgB9gB,QAAhB,GAA2B,CAAlC;AAEA,iBAAKh0E,IAAL,GAAYA,IAAZ;;AAEA,iBAAKgyF,MAAL,CAAY/qH,aAAZ,CAA2B;AAC1BtV,cAAAA,IAAI,EAAE,UADoB;AACR6iI,cAAAA,MAAM,EAAE,IADA;AAE1Bz9G,cAAAA,SAAS,EAAE+9G,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,CAAE;AAFP,aAA3B;AAKA,WAhBD,MAgBO;AAEN;AAEA,gBAAKgB,OAAO,KAAK,CAAjB,EAAqB;AAEpB;AAEA,kBAAMC,OAAO,GAAGjB,SAAS,GAAG,CAA5B;;AACA,mBAAKa,WAAL,CAAkBI,OAAlB,EAA2B,CAAEA,OAA7B,EAAsCL,QAAtC;AAEA,aAPD,MAOO;AAEN,mBAAKC,WAAL,CAAkB,KAAlB,EAAyB,KAAzB,EAAgCD,QAAhC;AAEA;;AAED,iBAAK7C,UAAL,GAAkB4C,SAAlB;AAEA,iBAAKz1F,IAAL,GAAYA,IAAZ;;AAEA,iBAAKgyF,MAAL,CAAY/qH,aAAZ,CAA2B;AAC1BtV,cAAAA,IAAI,EAAE,MADoB;AACZ6iI,cAAAA,MAAM,EAAE,IADI;AACEqB,cAAAA,SAAS,EAAEA;AADb,aAA3B;AAIA;AAED,SAtDD,MAsDO;AAEN,eAAK71F,IAAL,GAAYA,IAAZ;AAEA;;AAED,YAAK01F,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAd,MAAsB,CAAvC,EAA2C;AAE1C;AAEA,iBAAOzhB,QAAQ,GAAGh0E,IAAlB;AAEA;AAED;;AAED,aAAOA,IAAP;AAEA;;;WAED,qBAAa+1F,OAAb,EAAsBC,KAAtB,EAA6BN,QAA7B,EAAwC;AAEvC,UAAMxmB,QAAQ,GAAG,KAAKojB,oBAAtB;;AAEA,UAAKoD,QAAL,EAAgB;AAEfxmB,QAAAA,QAAQ,CAACkB,WAAT,GAAuBthH,eAAvB;AACAogH,QAAAA,QAAQ,CAACmB,SAAT,GAAqBvhH,eAArB;AAEA,OALD,MAKO;AAEN;AAEA,YAAKinI,OAAL,EAAe;AAEd7mB,UAAAA,QAAQ,CAACkB,WAAT,GAAuB,KAAKgjB,gBAAL,GAAwBtkI,eAAxB,GAA0CD,mBAAjE;AAEA,SAJD,MAIO;AAENqgH,UAAAA,QAAQ,CAACkB,WAAT,GAAuBrhH,gBAAvB;AAEA;;AAED,YAAKinI,KAAL,EAAa;AAEZ9mB,UAAAA,QAAQ,CAACmB,SAAT,GAAqB,KAAKgjB,cAAL,GAAsBvkI,eAAtB,GAAwCD,mBAA7D;AAEA,SAJD,MAIO;AAENqgH,UAAAA,QAAQ,CAACmB,SAAT,GAAuBthH,gBAAvB;AAEA;AAED;AAED;;;WAED,yBAAiBilH,QAAjB,EAA2BiiB,SAA3B,EAAsCC,UAAtC,EAAmD;AAElD,UAAMpE,KAAK,GAAG,KAAKE,MAAnB;AAAA,UAA2BpO,GAAG,GAAGkO,KAAK,CAAC9xF,IAAvC;AACA,UAAIouE,WAAW,GAAG,KAAKwkB,kBAAvB;;AAEA,UAAKxkB,WAAW,KAAK,IAArB,EAA4B;AAE3BA,QAAAA,WAAW,GAAG0jB,KAAK,CAAC6C,uBAAN,EAAd;AACA,aAAK/B,kBAAL,GAA0BxkB,WAA1B;AAEA;;AAED,UAAMxC,KAAK,GAAGwC,WAAW,CAACU,kBAA1B;AAAA,UACClrF,MAAM,GAAGwqF,WAAW,CAACW,YADtB;AAGAnD,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAagY,GAAb;AACAhgG,MAAAA,MAAM,CAAE,CAAF,CAAN,GAAcqyG,SAAd;AACArqB,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAagY,GAAG,GAAG5P,QAAnB;AACApwF,MAAAA,MAAM,CAAE,CAAF,CAAN,GAAcsyG,UAAd;AAEA,aAAO,IAAP;AAEA;;;;;;AAIF,IAAMC,gCAAgC,GAAG,aAAc,IAAIr+H,YAAJ,CAAkB,CAAlB,CAAvD;;IAGMs+H,c;;;;;AAEL,0BAAa5H,IAAb,EAAoB;AAAA;;AAAA;;AAEnB;AAEA,aAAKqG,KAAL,GAAarG,IAAb;;AACA,aAAK6H,kBAAL;;AACA,aAAKC,UAAL,GAAkB,CAAlB;AACA,aAAKt2F,IAAL,GAAY,CAAZ;AACA,aAAKqyE,SAAL,GAAiB,GAAjB;AARmB;AAUnB;;;;WAED,qBAAamiB,MAAb,EAAqB+B,eAArB,EAAuC;AAEtC,UAAM/H,IAAI,GAAGgG,MAAM,CAACtC,UAAP,IAAqB,KAAK2C,KAAvC;AAAA,UACCnoB,MAAM,GAAG8nB,MAAM,CAACvC,KAAP,CAAavlB,MADvB;AAAA,UAECylB,OAAO,GAAGzlB,MAAM,CAAC/5G,MAFlB;AAAA,UAGC65H,QAAQ,GAAGgI,MAAM,CAAChC,iBAHnB;AAAA,UAICJ,YAAY,GAAGoC,MAAM,CAACjC,aAJvB;AAAA,UAKCiE,QAAQ,GAAGhI,IAAI,CAAC/6H,IALjB;AAAA,UAMCgjI,cAAc,GAAG,KAAKC,sBANvB;AAQA,UAAIC,cAAc,GAAGF,cAAc,CAAED,QAAF,CAAnC;;AAEA,UAAKG,cAAc,KAAK7kI,SAAxB,EAAoC;AAEnC6kI,QAAAA,cAAc,GAAG,EAAjB;AACAF,QAAAA,cAAc,CAAED,QAAF,CAAd,GAA6BG,cAA7B;AAEA;;AAED,WAAM,IAAIlkI,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK0/H,OAAvB,EAAgC,EAAG1/H,CAAnC,EAAuC;AAEtC,YAAMk6G,KAAK,GAAGD,MAAM,CAAEj6G,CAAF,CAApB;AAAA,YACC0iH,SAAS,GAAGxI,KAAK,CAACxtG,IADnB;AAGA,YAAIiqH,OAAO,GAAGuN,cAAc,CAAExhB,SAAF,CAA5B;;AAEA,YAAKiU,OAAO,KAAKt3H,SAAjB,EAA6B;AAE5B,YAAGs3H,OAAO,CAACqB,cAAX;AACA+B,UAAAA,QAAQ,CAAE/5H,CAAF,CAAR,GAAgB22H,OAAhB;AAEA,SALD,MAKO;AAENA,UAAAA,OAAO,GAAGoD,QAAQ,CAAE/5H,CAAF,CAAlB;;AAEA,cAAK22H,OAAO,KAAKt3H,SAAjB,EAA6B;AAE5B;AAEA,gBAAKs3H,OAAO,CAACqJ,WAAR,KAAwB,IAA7B,EAAoC;AAEnC,gBAAGrJ,OAAO,CAACqB,cAAX;;AACA,mBAAKmM,mBAAL,CAA0BxN,OAA1B,EAAmCoN,QAAnC,EAA6CrhB,SAA7C;AAEA;;AAED;AAEA;;AAED,cAAMnqD,IAAI,GAAGurE,eAAe,IAAIA,eAAe,CAC9C/D,iBAD+B,CACZ//H,CADY,EACR22H,OADQ,CACA4C,UADhC;AAGA5C,UAAAA,OAAO,GAAG,IAAID,aAAJ,CACT8C,eAAe,CAAC4K,MAAhB,CAAwBrI,IAAxB,EAA8BrZ,SAA9B,EAAyCnqD,IAAzC,CADS,EAET2hD,KAAK,CAACa,aAFG,EAEYb,KAAK,CAACE,YAAN,EAFZ,CAAV;AAIA,YAAGuc,OAAO,CAACqB,cAAX;;AACA,eAAKmM,mBAAL,CAA0BxN,OAA1B,EAAmCoN,QAAnC,EAA6CrhB,SAA7C;;AAEAqX,UAAAA,QAAQ,CAAE/5H,CAAF,CAAR,GAAgB22H,OAAhB;AAEA;;AAEDgJ,QAAAA,YAAY,CAAE3/H,CAAF,CAAZ,CAAkB67G,YAAlB,GAAiC8a,OAAO,CAACnqH,MAAzC;AAEA;AAED;;;WAED,yBAAiBu1H,MAAjB,EAA0B;AAEzB,UAAK,CAAE,KAAKd,eAAL,CAAsBc,MAAtB,CAAP,EAAwC;AAEvC,YAAKA,MAAM,CAAC/B,WAAP,KAAuB,IAA5B,EAAmC;AAElC;AACA;AAEA,cAAM+D,QAAQ,GAAG,CAAEhC,MAAM,CAACtC,UAAP,IAAqB,KAAK2C,KAA5B,EAAoCphI,IAArD;AAAA,cACCqjI,QAAQ,GAAGtC,MAAM,CAACvC,KAAP,CAAax+H,IADzB;AAAA,cAECsjI,cAAc,GAAG,KAAKC,cAAL,CAAqBF,QAArB,CAFlB;;AAIA,eAAKG,WAAL,CAAkBzC,MAAlB,EACCuC,cAAc,IAAIA,cAAc,CAACG,YAAf,CAA6B,CAA7B,CADnB;;AAGA,eAAKC,kBAAL,CAAyB3C,MAAzB,EAAiCsC,QAAjC,EAA2CN,QAA3C;AAEA;;AAED,YAAMhK,QAAQ,GAAGgI,MAAM,CAAChC,iBAAxB,CAlBuC,CAoBvC;;AACA,aAAM,IAAI//H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9B,EAAsCF,CAAC,KAAKuB,CAA5C,EAA+C,EAAGvB,CAAlD,EAAsD;AAErD,cAAM22H,OAAO,GAAGoD,QAAQ,CAAE/5H,CAAF,CAAxB;;AAEA,cAAK22H,OAAO,CAACoB,QAAR,OAAwB,CAA7B,EAAiC;AAEhC,iBAAK4M,YAAL,CAAmBhO,OAAnB;;AACAA,YAAAA,OAAO,CAACiO,iBAAR;AAEA;AAED;;AAED,aAAKC,WAAL,CAAkB9C,MAAlB;AAEA;AAED;;;WAED,2BAAmBA,MAAnB,EAA4B;AAE3B,UAAK,KAAKd,eAAL,CAAsBc,MAAtB,CAAL,EAAsC;AAErC,YAAMhI,QAAQ,GAAGgI,MAAM,CAAChC,iBAAxB,CAFqC,CAIrC;;AACA,aAAM,IAAI//H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9B,EAAsCF,CAAC,KAAKuB,CAA5C,EAA+C,EAAGvB,CAAlD,EAAsD;AAErD,cAAM22H,OAAO,GAAGoD,QAAQ,CAAE/5H,CAAF,CAAxB;;AAEA,cAAK,EAAG22H,OAAO,CAACoB,QAAX,KAAwB,CAA7B,EAAiC;AAEhCpB,YAAAA,OAAO,CAACmO,oBAAR;;AACA,iBAAKC,gBAAL,CAAuBpO,OAAvB;AAEA;AAED;;AAED,aAAKqO,eAAL,CAAsBjD,MAAtB;AAEA;AAED,K,CAED;;;;WAEA,8BAAqB;AAEpB,WAAKkD,QAAL,GAAgB,EAAhB,CAFoB,CAEA;;AACpB,WAAKC,eAAL,GAAuB,CAAvB;AAEA,WAAKX,cAAL,GAAsB,EAAtB,CALoB,CAMpB;AACA;AACA;AACA;AACA;;AAGA,WAAK5K,SAAL,GAAiB,EAAjB,CAboB,CAaC;;AACrB,WAAKwL,gBAAL,GAAwB,CAAxB;AAEA,WAAKlB,sBAAL,GAA8B,EAA9B,CAhBoB,CAgBc;;AAGlC,WAAKmB,oBAAL,GAA4B,EAA5B,CAnBoB,CAmBY;;AAChC,WAAKC,2BAAL,GAAmC,CAAnC;AAEA,UAAM3gG,KAAK,GAAG,IAAd;AAEA,WAAKo5F,KAAL,GAAa;AAEZwH,QAAAA,OAAO,EAAE;AACR,cAAIze,KAAJ,GAAY;AAEX,mBAAOniF,KAAK,CAACugG,QAAN,CAAe/kI,MAAtB;AAEA,WALO;;AAMR,cAAI69H,KAAJ,GAAY;AAEX,mBAAOr5F,KAAK,CAACwgG,eAAb;AAEA;;AAVO,SAFG;AAcZnL,QAAAA,QAAQ,EAAE;AACT,cAAIlT,KAAJ,GAAY;AAEX,mBAAOniF,KAAK,CAACi1F,SAAN,CAAgBz5H,MAAvB;AAEA,WALQ;;AAMT,cAAI69H,KAAJ,GAAY;AAEX,mBAAOr5F,KAAK,CAACygG,gBAAb;AAEA;;AAVQ,SAdE;AA0BZI,QAAAA,mBAAmB,EAAE;AACpB,cAAI1e,KAAJ,GAAY;AAEX,mBAAOniF,KAAK,CAAC0gG,oBAAN,CAA2BllI,MAAlC;AAEA,WALmB;;AAMpB,cAAI69H,KAAJ,GAAY;AAEX,mBAAOr5F,KAAK,CAAC2gG,2BAAb;AAEA;;AAVmB;AA1BT,OAAb;AAyCA,K,CAED;;;;WAEA,yBAAiBtD,MAAjB,EAA0B;AAEzB,UAAMriI,KAAK,GAAGqiI,MAAM,CAAC/B,WAArB;AACA,aAAOtgI,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,KAAKwlI,eAAtC;AAEA;;;WAED,4BAAoBnD,MAApB,EAA4BsC,QAA5B,EAAsCN,QAAtC,EAAiD;AAEhD,UAAMuB,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCO,aAAa,GAAG,KAAKjB,cADtB;AAGA,UAAID,cAAc,GAAGkB,aAAa,CAAEnB,QAAF,CAAlC;;AAEA,UAAKC,cAAc,KAAKjlI,SAAxB,EAAoC;AAEnCilI,QAAAA,cAAc,GAAG;AAEhBG,UAAAA,YAAY,EAAE,CAAE1C,MAAF,CAFE;AAGhB0D,UAAAA,YAAY,EAAE;AAHE,SAAjB;AAOA1D,QAAAA,MAAM,CAAC9B,iBAAP,GAA2B,CAA3B;AAEAuF,QAAAA,aAAa,CAAEnB,QAAF,CAAb,GAA4BC,cAA5B;AAEA,OAbD,MAaO;AAEN,YAAMG,YAAY,GAAGH,cAAc,CAACG,YAApC;AAEA1C,QAAAA,MAAM,CAAC9B,iBAAP,GAA2BwE,YAAY,CAACvkI,MAAxC;AACAukI,QAAAA,YAAY,CAACjlI,IAAb,CAAmBuiI,MAAnB;AAEA;;AAEDA,MAAAA,MAAM,CAAC/B,WAAP,GAAqBsF,OAAO,CAACplI,MAA7B;AACAolI,MAAAA,OAAO,CAAC9lI,IAAR,CAAcuiI,MAAd;AAEAuC,MAAAA,cAAc,CAACmB,YAAf,CAA6B1B,QAA7B,IAA0ChC,MAA1C;AAEA;;;WAED,+BAAuBA,MAAvB,EAAgC;AAE/B,UAAMuD,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCS,kBAAkB,GAAGJ,OAAO,CAAEA,OAAO,CAACplI,MAAR,GAAiB,CAAnB,CAD7B;AAAA,UAECylI,UAAU,GAAG5D,MAAM,CAAC/B,WAFrB;AAIA0F,MAAAA,kBAAkB,CAAC1F,WAAnB,GAAiC2F,UAAjC;AACAL,MAAAA,OAAO,CAAEK,UAAF,CAAP,GAAwBD,kBAAxB;AACAJ,MAAAA,OAAO,CAACx/D,GAAR;AAEAi8D,MAAAA,MAAM,CAAC/B,WAAP,GAAqB,IAArB;AAGA,UAAMqE,QAAQ,GAAGtC,MAAM,CAACvC,KAAP,CAAax+H,IAA9B;AAAA,UACCwkI,aAAa,GAAG,KAAKjB,cADtB;AAAA,UAECD,cAAc,GAAGkB,aAAa,CAAEnB,QAAF,CAF/B;AAAA,UAGCuB,mBAAmB,GAAGtB,cAAc,CAACG,YAHtC;AAAA,UAKCoB,eAAe,GACdD,mBAAmB,CAAEA,mBAAmB,CAAC1lI,MAApB,GAA6B,CAA/B,CANrB;AAAA,UAQC4lI,gBAAgB,GAAG/D,MAAM,CAAC9B,iBAR3B;AAUA4F,MAAAA,eAAe,CAAC5F,iBAAhB,GAAoC6F,gBAApC;AACAF,MAAAA,mBAAmB,CAAEE,gBAAF,CAAnB,GAA0CD,eAA1C;AACAD,MAAAA,mBAAmB,CAAC9/D,GAApB;AAEAi8D,MAAAA,MAAM,CAAC9B,iBAAP,GAA2B,IAA3B;AAGA,UAAMwF,YAAY,GAAGnB,cAAc,CAACmB,YAApC;AAAA,UACC1B,QAAQ,GAAG,CAAEhC,MAAM,CAACtC,UAAP,IAAqB,KAAK2C,KAA5B,EAAoCphI,IADhD;AAGA,aAAOykI,YAAY,CAAE1B,QAAF,CAAnB;;AAEA,UAAK6B,mBAAmB,CAAC1lI,MAApB,KAA+B,CAApC,EAAwC;AAEvC,eAAOslI,aAAa,CAAEnB,QAAF,CAApB;AAEA;;AAED,WAAK0B,gCAAL,CAAuChE,MAAvC;AAEA;;;WAED,0CAAkCA,MAAlC,EAA2C;AAE1C,UAAMhI,QAAQ,GAAGgI,MAAM,CAAChC,iBAAxB;;AAEA,WAAM,IAAI//H,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAGw4H,QAAQ,CAAC75H,MAA9B,EAAsCF,CAAC,KAAKuB,CAA5C,EAA+C,EAAGvB,CAAlD,EAAsD;AAErD,YAAM22H,OAAO,GAAGoD,QAAQ,CAAE/5H,CAAF,CAAxB;;AAEA,YAAK,EAAG22H,OAAO,CAACqB,cAAX,KAA8B,CAAnC,EAAuC;AAEtC,eAAKgO,sBAAL,CAA6BrP,OAA7B;AAEA;AAED;AAED;;;WAED,qBAAaoL,MAAb,EAAsB;AAErB;AACA;AACA;AACA;AACA;AAEA,UAAMuD,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCgB,SAAS,GAAGlE,MAAM,CAAC/B,WADpB;AAAA,UAGCkG,eAAe,GAAG,KAAKhB,eAAL,EAHnB;AAAA,UAKCiB,mBAAmB,GAAGb,OAAO,CAAEY,eAAF,CAL9B;AAOAnE,MAAAA,MAAM,CAAC/B,WAAP,GAAqBkG,eAArB;AACAZ,MAAAA,OAAO,CAAEY,eAAF,CAAP,GAA6BnE,MAA7B;AAEAoE,MAAAA,mBAAmB,CAACnG,WAApB,GAAkCiG,SAAlC;AACAX,MAAAA,OAAO,CAAEW,SAAF,CAAP,GAAuBE,mBAAvB;AAEA;;;WAED,yBAAiBpE,MAAjB,EAA0B;AAEzB;AACA;AACA;AACA;AACA;AAEA,UAAMuD,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCgB,SAAS,GAAGlE,MAAM,CAAC/B,WADpB;AAAA,UAGCoG,kBAAkB,GAAG,EAAG,KAAKlB,eAH9B;AAAA,UAKCmB,gBAAgB,GAAGf,OAAO,CAAEc,kBAAF,CAL3B;AAOArE,MAAAA,MAAM,CAAC/B,WAAP,GAAqBoG,kBAArB;AACAd,MAAAA,OAAO,CAAEc,kBAAF,CAAP,GAAgCrE,MAAhC;AAEAsE,MAAAA,gBAAgB,CAACrG,WAAjB,GAA+BiG,SAA/B;AACAX,MAAAA,OAAO,CAAEW,SAAF,CAAP,GAAuBI,gBAAvB;AAEA,K,CAED;;;;WAEA,6BAAqB1P,OAArB,EAA8BoN,QAA9B,EAAwCrhB,SAAxC,EAAoD;AAEnD,UAAMshB,cAAc,GAAG,KAAKC,sBAA5B;AAAA,UACClK,QAAQ,GAAG,KAAKJ,SADjB;AAGA,UAAI2M,aAAa,GAAGtC,cAAc,CAAED,QAAF,CAAlC;;AAEA,UAAKuC,aAAa,KAAKjnI,SAAvB,EAAmC;AAElCinI,QAAAA,aAAa,GAAG,EAAhB;AACAtC,QAAAA,cAAc,CAAED,QAAF,CAAd,GAA6BuC,aAA7B;AAEA;;AAEDA,MAAAA,aAAa,CAAE5jB,SAAF,CAAb,GAA6BiU,OAA7B;AAEAA,MAAAA,OAAO,CAACqJ,WAAR,GAAsBjG,QAAQ,CAAC75H,MAA/B;AACA65H,MAAAA,QAAQ,CAACv6H,IAAT,CAAem3H,OAAf;AAEA;;;WAED,gCAAwBA,OAAxB,EAAkC;AAEjC,UAAMoD,QAAQ,GAAG,KAAKJ,SAAtB;AAAA,UACC4M,WAAW,GAAG5P,OAAO,CAACA,OADvB;AAAA,UAECoN,QAAQ,GAAGwC,WAAW,CAACtM,QAAZ,CAAqBj5H,IAFjC;AAAA,UAGC0hH,SAAS,GAAG6jB,WAAW,CAAChuE,IAHzB;AAAA,UAICyrE,cAAc,GAAG,KAAKC,sBAJvB;AAAA,UAKCqC,aAAa,GAAGtC,cAAc,CAAED,QAAF,CAL/B;AAAA,UAOCyC,mBAAmB,GAAGzM,QAAQ,CAAEA,QAAQ,CAAC75H,MAAT,GAAkB,CAApB,CAP/B;AAAA,UAQCylI,UAAU,GAAGhP,OAAO,CAACqJ,WARtB;AAUAwG,MAAAA,mBAAmB,CAACxG,WAApB,GAAkC2F,UAAlC;AACA5L,MAAAA,QAAQ,CAAE4L,UAAF,CAAR,GAAyBa,mBAAzB;AACAzM,MAAAA,QAAQ,CAACj0D,GAAT;AAEA,aAAOwgE,aAAa,CAAE5jB,SAAF,CAApB;;AAEA,UAAK58G,MAAM,CAAC67B,IAAP,CAAa2kG,aAAb,EAA6BpmI,MAA7B,KAAwC,CAA7C,EAAiD;AAEhD,eAAO8jI,cAAc,CAAED,QAAF,CAArB;AAEA;AAED;;;WAED,sBAAcpN,OAAd,EAAwB;AAEvB,UAAMoD,QAAQ,GAAG,KAAKJ,SAAtB;AAAA,UACCsM,SAAS,GAAGtP,OAAO,CAACqJ,WADrB;AAAA,UAGCkG,eAAe,GAAG,KAAKf,gBAAL,EAHnB;AAAA,UAKCsB,oBAAoB,GAAG1M,QAAQ,CAAEmM,eAAF,CALhC;AAOAvP,MAAAA,OAAO,CAACqJ,WAAR,GAAsBkG,eAAtB;AACAnM,MAAAA,QAAQ,CAAEmM,eAAF,CAAR,GAA8BvP,OAA9B;AAEA8P,MAAAA,oBAAoB,CAACzG,WAArB,GAAmCiG,SAAnC;AACAlM,MAAAA,QAAQ,CAAEkM,SAAF,CAAR,GAAwBQ,oBAAxB;AAEA;;;WAED,0BAAkB9P,OAAlB,EAA4B;AAE3B,UAAMoD,QAAQ,GAAG,KAAKJ,SAAtB;AAAA,UACCsM,SAAS,GAAGtP,OAAO,CAACqJ,WADrB;AAAA,UAGCoG,kBAAkB,GAAG,EAAG,KAAKjB,gBAH9B;AAAA,UAKCuB,iBAAiB,GAAG3M,QAAQ,CAAEqM,kBAAF,CAL7B;AAOAzP,MAAAA,OAAO,CAACqJ,WAAR,GAAsBoG,kBAAtB;AACArM,MAAAA,QAAQ,CAAEqM,kBAAF,CAAR,GAAiCzP,OAAjC;AAEA+P,MAAAA,iBAAiB,CAAC1G,WAAlB,GAAgCiG,SAAhC;AACAlM,MAAAA,QAAQ,CAAEkM,SAAF,CAAR,GAAwBS,iBAAxB;AAEA,K,CAGD;;;;WAEA,mCAA0B;AAEzB,UAAM/G,YAAY,GAAG,KAAKyF,oBAA1B;AAAA,UACCc,eAAe,GAAG,KAAKb,2BAAL,EADnB;AAGA,UAAI1pB,WAAW,GAAGgkB,YAAY,CAAEuG,eAAF,CAA9B;;AAEA,UAAKvqB,WAAW,KAAKt8G,SAArB,EAAiC;AAEhCs8G,QAAAA,WAAW,GAAG,IAAIgD,iBAAJ,CACb,IAAIt5G,YAAJ,CAAkB,CAAlB,CADa,EACU,IAAIA,YAAJ,CAAkB,CAAlB,CADV,EAEb,CAFa,EAEVq+H,gCAFU,CAAd;AAIA/nB,QAAAA,WAAW,CAACgrB,YAAZ,GAA2BT,eAA3B;AACAvG,QAAAA,YAAY,CAAEuG,eAAF,CAAZ,GAAkCvqB,WAAlC;AAEA;;AAED,aAAOA,WAAP;AAEA;;;WAED,qCAA6BA,WAA7B,EAA2C;AAE1C,UAAMgkB,YAAY,GAAG,KAAKyF,oBAA1B;AAAA,UACCa,SAAS,GAAGtqB,WAAW,CAACgrB,YADzB;AAAA,UAGCP,kBAAkB,GAAG,EAAG,KAAKf,2BAH9B;AAAA,UAKCuB,qBAAqB,GAAGjH,YAAY,CAAEyG,kBAAF,CALrC;AAOAzqB,MAAAA,WAAW,CAACgrB,YAAZ,GAA2BP,kBAA3B;AACAzG,MAAAA,YAAY,CAAEyG,kBAAF,CAAZ,GAAqCzqB,WAArC;AAEAirB,MAAAA,qBAAqB,CAACD,YAAtB,GAAqCV,SAArC;AACAtG,MAAAA,YAAY,CAAEsG,SAAF,CAAZ,GAA4BW,qBAA5B;AAEA,K,CAED;AACA;AACA;;;;WACA,oBAAY5sB,IAAZ,EAAkB6sB,YAAlB,EAAgC1qB,SAAhC,EAA4C;AAE3C,UAAM4f,IAAI,GAAG8K,YAAY,IAAI,KAAKzE,KAAlC;AAAA,UACC2B,QAAQ,GAAGhI,IAAI,CAAC/6H,IADjB;AAGA,UAAI8lI,UAAU,GAAG,OAAO9sB,IAAP,KAAgB,QAAhB,GAA2BsH,aAAa,CAACylB,UAAd,CAA0BhL,IAA1B,EAAgC/hB,IAAhC,CAA3B,GAAoEA,IAArF;AAEA,UAAMqqB,QAAQ,GAAGyC,UAAU,KAAK,IAAf,GAAsBA,UAAU,CAAC9lI,IAAjC,GAAwCg5G,IAAzD;AAEA,UAAMsqB,cAAc,GAAG,KAAKC,cAAL,CAAqBF,QAArB,CAAvB;AACA,UAAIP,eAAe,GAAG,IAAtB;;AAEA,UAAK3nB,SAAS,KAAK98G,SAAnB,EAA+B;AAE9B,YAAKynI,UAAU,KAAK,IAApB,EAA2B;AAE1B3qB,UAAAA,SAAS,GAAG2qB,UAAU,CAAC3qB,SAAvB;AAEA,SAJD,MAIO;AAENA,UAAAA,SAAS,GAAG5/G,wBAAZ;AAEA;AAED;;AAED,UAAK+nI,cAAc,KAAKjlI,SAAxB,EAAoC;AAEnC,YAAM2nI,cAAc,GAAG1C,cAAc,CAACmB,YAAf,CAA6B1B,QAA7B,CAAvB;;AAEA,YAAKiD,cAAc,KAAK3nI,SAAnB,IAAgC2nI,cAAc,CAAC7qB,SAAf,KAA6BA,SAAlE,EAA8E;AAE7E,iBAAO6qB,cAAP;AAEA,SARkC,CAUnC;AACA;;;AACAlD,QAAAA,eAAe,GAAGQ,cAAc,CAACG,YAAf,CAA6B,CAA7B,CAAlB,CAZmC,CAcnC;;AACA,YAAKqC,UAAU,KAAK,IAApB,EACCA,UAAU,GAAGhD,eAAe,CAACtE,KAA7B;AAED,OA5C0C,CA8C3C;;;AACA,UAAKsH,UAAU,KAAK,IAApB,EAA2B,OAAO,IAAP,CA/CgB,CAiD3C;;AACA,UAAMG,SAAS,GAAG,IAAI7H,eAAJ,CAAqB,IAArB,EAA2B0H,UAA3B,EAAuCD,YAAvC,EAAqD1qB,SAArD,CAAlB;;AAEA,WAAKqoB,WAAL,CAAkByC,SAAlB,EAA6BnD,eAA7B,EApD2C,CAsD3C;;;AACA,WAAKY,kBAAL,CAAyBuC,SAAzB,EAAoC5C,QAApC,EAA8CN,QAA9C;;AAEA,aAAOkD,SAAP;AAEA,K,CAED;;;;WACA,wBAAgBjtB,IAAhB,EAAsB6sB,YAAtB,EAAqC;AAEpC,UAAM9K,IAAI,GAAG8K,YAAY,IAAI,KAAKzE,KAAlC;AAAA,UACC2B,QAAQ,GAAGhI,IAAI,CAAC/6H,IADjB;AAAA,UAGC8lI,UAAU,GAAG,OAAO9sB,IAAP,KAAgB,QAAhB,GACZsH,aAAa,CAACylB,UAAd,CAA0BhL,IAA1B,EAAgC/hB,IAAhC,CADY,GAC6BA,IAJ3C;AAAA,UAMCqqB,QAAQ,GAAGyC,UAAU,GAAGA,UAAU,CAAC9lI,IAAd,GAAqBg5G,IAN3C;AAAA,UAQCsqB,cAAc,GAAG,KAAKC,cAAL,CAAqBF,QAArB,CARlB;;AAUA,UAAKC,cAAc,KAAKjlI,SAAxB,EAAoC;AAEnC,eAAOilI,cAAc,CAACmB,YAAf,CAA6B1B,QAA7B,KAA2C,IAAlD;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WACA,yBAAgB;AAEf,UAAMuB,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCiC,QAAQ,GAAG,KAAKhC,eADjB;;AAGA,WAAM,IAAIllI,CAAC,GAAGknI,QAAQ,GAAG,CAAzB,EAA4BlnI,CAAC,IAAI,CAAjC,EAAoC,EAAGA,CAAvC,EAA2C;AAE1CslI,QAAAA,OAAO,CAAEtlI,CAAF,CAAP,CAAa0tC,IAAb;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WACA,gBAAQ20F,SAAR,EAAoB;AAEnBA,MAAAA,SAAS,IAAI,KAAKziB,SAAlB;AAEA,UAAM0lB,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCiC,QAAQ,GAAG,KAAKhC,eADjB;AAAA,UAGC33F,IAAI,GAAG,KAAKA,IAAL,IAAa80F,SAHrB;AAAA,UAICC,aAAa,GAAG/hI,IAAI,CAACgmB,IAAL,CAAW87G,SAAX,CAJjB;AAAA,UAMCpK,SAAS,GAAG,KAAK4L,UAAL,IAAmB,CANhC,CAJmB,CAYnB;;AAEA,WAAM,IAAI7jI,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKknI,QAAvB,EAAiC,EAAGlnI,CAApC,EAAwC;AAEvC,YAAM+hI,MAAM,GAAGuD,OAAO,CAAEtlI,CAAF,CAAtB;;AAEA+hI,QAAAA,MAAM,CAACoF,OAAP,CAAgB55F,IAAhB,EAAsB80F,SAAtB,EAAiCC,aAAjC,EAAgDrK,SAAhD;AAEA,OApBkB,CAsBnB;;;AAEA,UAAM8B,QAAQ,GAAG,KAAKJ,SAAtB;AAAA,UACCyE,SAAS,GAAG,KAAK+G,gBADlB;;AAGA,WAAM,IAAInlI,IAAC,GAAG,CAAd,EAAiBA,IAAC,KAAKo+H,SAAvB,EAAkC,EAAGp+H,IAArC,EAAyC;AAExC+5H,QAAAA,QAAQ,CAAE/5H,IAAF,CAAR,CAAcw0E,KAAd,CAAqByjD,SAArB;AAEA;;AAED,aAAO,IAAP;AAEA,K,CAED;;;;WACA,iBAASmP,aAAT,EAAyB;AAExB,WAAK75F,IAAL,GAAY,CAAZ,CAFwB,CAET;;AACf,WAAM,IAAIvtC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKilI,QAAL,CAAc/kI,MAAnC,EAA2CF,CAAC,EAA5C,EAAkD;AAEjD,aAAKilI,QAAL,CAAejlI,CAAf,EAAmButC,IAAnB,GAA0B,CAA1B,CAFiD,CAEpB;AAE7B;;AAED,aAAO,KAAKj1B,MAAL,CAAa8uH,aAAb,CAAP,CATwB,CASa;AAErC,K,CAED;;;;WACA,mBAAU;AAET,aAAO,KAAKhF,KAAZ;AAEA,K,CAED;;;;WACA,qBAAapoB,IAAb,EAAoB;AAEnB,UAAMsrB,OAAO,GAAG,KAAKL,QAArB;AAAA,UACCZ,QAAQ,GAAGrqB,IAAI,CAACh5G,IADjB;AAAA,UAECwkI,aAAa,GAAG,KAAKjB,cAFtB;AAAA,UAGCD,cAAc,GAAGkB,aAAa,CAAEnB,QAAF,CAH/B;;AAKA,UAAKC,cAAc,KAAKjlI,SAAxB,EAAoC;AAEnC;AACA;AACA;AAEA,YAAMgoI,eAAe,GAAG/C,cAAc,CAACG,YAAvC;;AAEA,aAAM,IAAIzkI,CAAC,GAAG,CAAR,EAAWuB,CAAC,GAAG8lI,eAAe,CAACnnI,MAArC,EAA6CF,CAAC,KAAKuB,CAAnD,EAAsD,EAAGvB,CAAzD,EAA6D;AAE5D,cAAM+hI,MAAM,GAAGsF,eAAe,CAAErnI,CAAF,CAA9B;;AAEA,eAAK8gI,iBAAL,CAAwBiB,MAAxB;;AAEA,cAAM4D,UAAU,GAAG5D,MAAM,CAAC/B,WAA1B;AAAA,cACC0F,kBAAkB,GAAGJ,OAAO,CAAEA,OAAO,CAACplI,MAAR,GAAiB,CAAnB,CAD7B;AAGA6hI,UAAAA,MAAM,CAAC/B,WAAP,GAAqB,IAArB;AACA+B,UAAAA,MAAM,CAAC9B,iBAAP,GAA2B,IAA3B;AAEAyF,UAAAA,kBAAkB,CAAC1F,WAAnB,GAAiC2F,UAAjC;AACAL,UAAAA,OAAO,CAAEK,UAAF,CAAP,GAAwBD,kBAAxB;AACAJ,UAAAA,OAAO,CAACx/D,GAAR;;AAEA,eAAKigE,gCAAL,CAAuChE,MAAvC;AAEA;;AAED,eAAOyD,aAAa,CAAEnB,QAAF,CAApB;AAEA;AAED,K,CAED;;;;WACA,qBAAatI,IAAb,EAAoB;AAEnB,UAAMgI,QAAQ,GAAGhI,IAAI,CAAC/6H,IAAtB;AAAA,UACCwkI,aAAa,GAAG,KAAKjB,cADtB;;AAGA,WAAM,IAAMF,QAAZ,IAAwBmB,aAAxB,EAAwC;AAEvC,YAAMC,YAAY,GAAGD,aAAa,CAAEnB,QAAF,CAAb,CAA0BoB,YAA/C;AAAA,YACC1D,MAAM,GAAG0D,YAAY,CAAE1B,QAAF,CADtB;;AAGA,YAAKhC,MAAM,KAAK1iI,SAAhB,EAA4B;AAE3B,eAAKyhI,iBAAL,CAAwBiB,MAAxB;;AACA,eAAKuF,qBAAL,CAA4BvF,MAA5B;AAEA;AAED;;AAED,UAAMiC,cAAc,GAAG,KAAKC,sBAA5B;AAAA,UACCqC,aAAa,GAAGtC,cAAc,CAAED,QAAF,CAD/B;;AAGA,UAAKuC,aAAa,KAAKjnI,SAAvB,EAAmC;AAElC,aAAM,IAAMqjH,SAAZ,IAAyB4jB,aAAzB,EAAyC;AAExC,cAAM3P,OAAO,GAAG2P,aAAa,CAAE5jB,SAAF,CAA7B;AACAiU,UAAAA,OAAO,CAACmO,oBAAR;;AACA,eAAKkB,sBAAL,CAA6BrP,OAA7B;AAEA;AAED;AAED,K,CAED;;;;WACA,uBAAe3c,IAAf,EAAqB6sB,YAArB,EAAoC;AAEnC,UAAM9E,MAAM,GAAG,KAAKiF,cAAL,CAAqBhtB,IAArB,EAA2B6sB,YAA3B,CAAf;;AAEA,UAAK9E,MAAM,KAAK,IAAhB,EAAuB;AAEtB,aAAKjB,iBAAL,CAAwBiB,MAAxB;;AACA,aAAKuF,qBAAL,CAA4BvF,MAA5B;AAEA;AAED;;;;EAjvB2B9iI,e;;IAqvBvBsoI,O;AAEL,mBAAapmI,KAAb,EAAqB;AAAA;;AAEpB,QAAK,OAAOA,KAAP,KAAiB,QAAtB,EAAiC;AAEhC8D,MAAAA,OAAO,CAACC,IAAR,CAAc,oDAAd;AACA/D,MAAAA,KAAK,GAAG+G,SAAS,CAAE,CAAF,CAAjB;AAEA;;AAED,SAAK/G,KAAL,GAAaA,KAAb;AAEA;;;;WAED,iBAAQ;AAEP,aAAO,IAAIomI,OAAJ,CAAa,KAAKpmI,KAAL,CAAW2V,KAAX,KAAqBzX,SAArB,GAAiC,KAAK8B,KAAtC,GAA8C,KAAKA,KAAL,CAAW2V,KAAX,EAA3D,CAAP;AAEA;;;;;;IAII0wH,0B;;;;;AAEL,sCAAa1nI,KAAb,EAAoBwhC,MAApB,EAAmD;AAAA;;AAAA,QAAvB8hB,gBAAuB,uEAAJ,CAAI;;AAAA;;AAElD,oCAAOtjD,KAAP,EAAcwhC,MAAd;AAEA,aAAKsiB,4BAAL,GAAoC,IAApC;AAEA,aAAKR,gBAAL,GAAwBA,gBAAxB;AANkD;AAQlD;;;;WAED,cAAMn1C,MAAN,EAAe;AAEd,2FAAYA,MAAZ;;AAEA,WAAKm1C,gBAAL,GAAwBn1C,MAAM,CAACm1C,gBAA/B;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO/xC,IAAP,EAAc;AAEb,UAAMwkF,EAAE,yFAAgBxkF,IAAhB,CAAR;;AAEAwkF,MAAAA,EAAE,CAACzyC,gBAAH,GAAsB,KAAKA,gBAA3B;AAEA,aAAOyyC,EAAP;AAEA;;;WAED,gBAAQxkF,IAAR,EAAe;AAEd,UAAMioF,IAAI,0FAAiBjoF,IAAjB,CAAV;;AAEAioF,MAAAA,IAAI,CAAC11C,4BAAL,GAAoC,IAApC;AACA01C,MAAAA,IAAI,CAACl2C,gBAAL,GAAwB,KAAKA,gBAA7B;AAEA,aAAOk2C,IAAP;AAEA;;;;EAzCuC7D,iB;;IA6CnCgyC,iB;AAEL,6BAAaj7H,MAAb,EAAqBtN,IAArB,EAA2Bg8B,QAA3B,EAAqC+T,WAArC,EAAkDv3B,KAAlD,EAA0D;AAAA;;AAEzD,SAAK4mB,mBAAL,GAA2B,IAA3B;AAEA,SAAK9xB,MAAL,GAAcA,MAAd;AACA,SAAKtN,IAAL,GAAYA,IAAZ;AACA,SAAKg8B,QAAL,GAAgBA,QAAhB;AACA,SAAK+T,WAAL,GAAmBA,WAAnB;AACA,SAAKv3B,KAAL,GAAaA,KAAb;AAEA,SAAKlG,OAAL,GAAe,CAAf;AAEA;;;;SAED,aAAiBrQ,KAAjB,EAAyB;AAExB,UAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKqQ,OAAL;AAEtB;;;WAED,mBAAWhF,MAAX,EAAoB;AAEnB,WAAKA,MAAL,GAAcA,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAStN,IAAT,EAAe+vC,WAAf,EAA6B;AAE5B,WAAK/vC,IAAL,GAAYA,IAAZ;AACA,WAAK+vC,WAAL,GAAmBA,WAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAa/T,QAAb,EAAwB;AAEvB,WAAKA,QAAL,GAAgBA,QAAhB;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAUxjB,KAAV,EAAkB;AAEjB,WAAKA,KAAL,GAAaA,KAAb;AAEA,aAAO,IAAP;AAEA;;;;;;IAIIgwH,S;AAEL,qBAAarjH,MAAb,EAAqBC,SAArB,EAA2D;AAAA,QAA3ByG,IAA2B,uEAApB,CAAoB;AAAA,QAAjBC,GAAiB,uEAAX/L,QAAW;;AAAA;;AAE1D,SAAKsF,GAAL,GAAW,IAAIH,GAAJ,CAASC,MAAT,EAAiBC,SAAjB,CAAX,CAF0D,CAG1D;;AAEA,SAAKyG,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAK7N,MAAL,GAAc,IAAd;AACA,SAAK0O,MAAL,GAAc,IAAIH,MAAJ,EAAd;AAEA,SAAK4/B,MAAL,GAAc;AACbtoB,MAAAA,IAAI,EAAE,EADO;AAEbw3D,MAAAA,IAAI,EAAE;AAAE5Y,QAAAA,SAAS,EAAE;AAAb,OAFO;AAGb4V,MAAAA,GAAG,EAAE,EAHQ;AAIbkE,MAAAA,MAAM,EAAE;AAAE9Z,QAAAA,SAAS,EAAE;AAAb,OAJK;AAKboV,MAAAA,MAAM,EAAE;AALK,KAAd;AAQA;;;;WAED,aAAK3yE,MAAL,EAAaC,SAAb,EAAyB;AAExB;AAEA,WAAKC,GAAL,CAASvf,GAAT,CAAcqf,MAAd,EAAsBC,SAAtB;AAEA;;;WAED,uBAAeqjH,MAAf,EAAuBxqH,MAAvB,EAAgC;AAE/B,UAAKA,MAAM,CAACuqB,mBAAZ,EAAkC;AAEjC,aAAKnjB,GAAL,CAASF,MAAT,CAAgBiK,qBAAhB,CAAuCnR,MAAM,CAACK,WAA9C;AACA,aAAK+G,GAAL,CAASD,SAAT,CAAmBtf,GAAnB,CAAwB2iI,MAAM,CAACjmI,CAA/B,EAAkCimI,MAAM,CAAC3lI,CAAzC,EAA4C,GAA5C,EAAkD4lI,SAAlD,CAA6DzqH,MAA7D,EAAsEkB,GAAtE,CAA2E,KAAKkG,GAAL,CAASF,MAApF,EAA6F1e,SAA7F;AACA,aAAKwX,MAAL,GAAcA,MAAd;AAEA,OAND,MAMO,IAAKA,MAAM,CAACwrC,oBAAZ,EAAmC;AAEzC,aAAKpkC,GAAL,CAASF,MAAT,CAAgBrf,GAAhB,CAAqB2iI,MAAM,CAACjmI,CAA5B,EAA+BimI,MAAM,CAAC3lI,CAAtC,EAAyC,CAAEmb,MAAM,CAAC4N,IAAP,GAAc5N,MAAM,CAAC6N,GAAvB,KAAiC7N,MAAM,CAAC4N,IAAP,GAAc5N,MAAM,CAAC6N,GAAtD,CAAzC,EAAuG48G,SAAvG,CAAkHzqH,MAAlH,EAFyC,CAEmF;;AAC5H,aAAKoH,GAAL,CAASD,SAAT,CAAmBtf,GAAnB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAAE,CAAhC,EAAoC4hB,kBAApC,CAAwDzJ,MAAM,CAACK,WAA/D;AACA,aAAKL,MAAL,GAAcA,MAAd;AAEA,OANM,MAMA;AAENlY,QAAAA,OAAO,CAACkD,KAAR,CAAe,+CAA+CgV,MAAM,CAACje,IAArE;AAEA;AAED;;;WAED,yBAAiB6gB,MAAjB,EAA6D;AAAA,UAApCsR,SAAoC,uEAAxB,IAAwB;AAAA,UAAlBkS,UAAkB,uEAAL,EAAK;;AAE5DskG,MAAAA,gBAAe,CAAE9nH,MAAF,EAAU,IAAV,EAAgBwjB,UAAhB,EAA4BlS,SAA5B,CAAf;;AAEAkS,MAAAA,UAAU,CAACyuB,IAAX,CAAiB81E,OAAjB;AAEA,aAAOvkG,UAAP;AAEA;;;WAED,0BAAkBub,OAAlB,EAA+D;AAAA,UAApCztB,SAAoC,uEAAxB,IAAwB;AAAA,UAAlBkS,UAAkB,uEAAL,EAAK;;AAE9D,WAAM,IAAIvjC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG6+C,OAAO,CAAC5+C,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD6nI,QAAAA,gBAAe,CAAE/oF,OAAO,CAAE9+C,CAAF,CAAT,EAAgB,IAAhB,EAAsBujC,UAAtB,EAAkClS,SAAlC,CAAf;AAEA;;AAEDkS,MAAAA,UAAU,CAACyuB,IAAX,CAAiB81E,OAAjB;AAEA,aAAOvkG,UAAP;AAEA;;;;;;AAIF,SAASukG,OAAT,CAAkB5jI,CAAlB,EAAqBC,CAArB,EAAyB;AAExB,SAAOD,CAAC,CAACkqB,QAAF,GAAajqB,CAAC,CAACiqB,QAAtB;AAEA;;AAED,SAASy5G,gBAAT,CAA0B9nH,MAA1B,EAAkCujB,SAAlC,EAA6CC,UAA7C,EAAyDlS,SAAzD,EAAqE;AAEpE,MAAKtR,MAAM,CAAC8L,MAAP,CAAcxb,IAAd,CAAoBizB,SAAS,CAACzX,MAA9B,CAAL,EAA8C;AAE7C9L,IAAAA,MAAM,CAAC63E,OAAP,CAAgBt0D,SAAhB,EAA2BC,UAA3B;AAEA;;AAED,MAAKlS,SAAS,KAAK,IAAnB,EAA0B;AAEzB,QAAMrQ,QAAQ,GAAGjB,MAAM,CAACiB,QAAxB;;AAEA,SAAM,IAAIhhB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnD6nI,MAAAA,gBAAe,CAAE7mH,QAAQ,CAAEhhB,CAAF,CAAV,EAAiBsjC,SAAjB,EAA4BC,UAA5B,EAAwC,IAAxC,CAAf;AAEA;AAED;AAED;AAED;AACA;AACA;AACA;AACA;AACA;;;IAEMwkG,S;AAEL,uBAA8C;AAAA,QAAjCtpH,MAAiC,uEAAxB,CAAwB;AAAA,QAArBC,GAAqB,uEAAf,CAAe;AAAA,QAAZ5S,KAAY,uEAAJ,CAAI;;AAAA;;AAE7C,SAAK2S,MAAL,GAAcA,MAAd;AACA,SAAKC,GAAL,GAAWA,GAAX,CAH6C,CAG7B;;AAChB,SAAK5S,KAAL,GAAaA,KAAb,CAJ6C,CAIzB;;AAEpB,WAAO,IAAP;AAEA;;;;WAED,aAAK2S,MAAL,EAAaC,GAAb,EAAkB5S,KAAlB,EAA0B;AAEzB,WAAK2S,MAAL,GAAcA,MAAd;AACA,WAAKC,GAAL,GAAWA,GAAX;AACA,WAAK5S,KAAL,GAAaA,KAAb;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMk8H,KAAN,EAAc;AAEb,WAAKvpH,MAAL,GAAcupH,KAAK,CAACvpH,MAApB;AACA,WAAKC,GAAL,GAAWspH,KAAK,CAACtpH,GAAjB;AACA,WAAK5S,KAAL,GAAak8H,KAAK,CAACl8H,KAAnB;AAEA,aAAO,IAAP;AAEA,K,CAED;;;;WACA,oBAAW;AAEV,UAAMm8H,GAAG,GAAG,QAAZ;AACA,WAAKvpH,GAAL,GAAWne,IAAI,CAACc,GAAL,CAAU4mI,GAAV,EAAe1nI,IAAI,CAACa,GAAL,CAAUb,IAAI,CAACC,EAAL,GAAUynI,GAApB,EAAyB,KAAKvpH,GAA9B,CAAf,CAAX;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBpY,CAAhB,EAAoB;AAEnB,aAAO,KAAK4hI,sBAAL,CAA6B5hI,CAAC,CAAC5E,CAA/B,EAAkC4E,CAAC,CAACtE,CAApC,EAAuCsE,CAAC,CAACsO,CAAzC,CAAP;AAEA;;;WAED,gCAAwBlT,CAAxB,EAA2BM,CAA3B,EAA8B4S,CAA9B,EAAkC;AAEjC,WAAK6J,MAAL,GAAcle,IAAI,CAACyG,IAAL,CAAWtF,CAAC,GAAGA,CAAJ,GAAQM,CAAC,GAAGA,CAAZ,GAAgB4S,CAAC,GAAGA,CAA/B,CAAd;;AAEA,UAAK,KAAK6J,MAAL,KAAgB,CAArB,EAAyB;AAExB,aAAK3S,KAAL,GAAa,CAAb;AACA,aAAK4S,GAAL,GAAW,CAAX;AAEA,OALD,MAKO;AAEN,aAAK5S,KAAL,GAAavL,IAAI,CAAC2G,KAAL,CAAYxF,CAAZ,EAAekT,CAAf,CAAb;AACA,aAAK8J,GAAL,GAAWne,IAAI,CAACuU,IAAL,CAAW5T,KAAK,CAAEc,CAAC,GAAG,KAAKyc,MAAX,EAAmB,CAAE,CAArB,EAAwB,CAAxB,CAAhB,CAAX;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKrZ,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;AAIF;AACA;AACA;;;IAEM85H,W;AAEL,yBAA4C;AAAA,QAA/B1pH,MAA+B,uEAAtB,CAAsB;AAAA,QAAnB3S,KAAmB,uEAAX,CAAW;AAAA,QAAR9J,CAAQ,uEAAJ,CAAI;;AAAA;;AAE3C,SAAKyc,MAAL,GAAcA,MAAd,CAF2C,CAErB;;AACtB,SAAK3S,KAAL,GAAaA,KAAb,CAH2C,CAGvB;;AACpB,SAAK9J,CAAL,GAASA,CAAT,CAJ2C,CAI/B;;AAEZ,WAAO,IAAP;AAEA;;;;WAED,aAAKyc,MAAL,EAAa3S,KAAb,EAAoB9J,CAApB,EAAwB;AAEvB,WAAKyc,MAAL,GAAcA,MAAd;AACA,WAAK3S,KAAL,GAAaA,KAAb;AACA,WAAK9J,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMgmI,KAAN,EAAc;AAEb,WAAKvpH,MAAL,GAAcupH,KAAK,CAACvpH,MAApB;AACA,WAAK3S,KAAL,GAAak8H,KAAK,CAACl8H,KAAnB;AACA,WAAK9J,CAAL,GAASgmI,KAAK,CAAChmI,CAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBsE,CAAhB,EAAoB;AAEnB,aAAO,KAAK4hI,sBAAL,CAA6B5hI,CAAC,CAAC5E,CAA/B,EAAkC4E,CAAC,CAACtE,CAApC,EAAuCsE,CAAC,CAACsO,CAAzC,CAAP;AAEA;;;WAED,gCAAwBlT,CAAxB,EAA2BM,CAA3B,EAA8B4S,CAA9B,EAAkC;AAEjC,WAAK6J,MAAL,GAAcle,IAAI,CAACyG,IAAL,CAAWtF,CAAC,GAAGA,CAAJ,GAAQkT,CAAC,GAAGA,CAAvB,CAAd;AACA,WAAK9I,KAAL,GAAavL,IAAI,CAAC2G,KAAL,CAAYxF,CAAZ,EAAekT,CAAf,CAAb;AACA,WAAK5S,CAAL,GAASA,CAAT;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKoD,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;AAIF,IAAM+5H,SAAS,GAAG,aAAc,IAAIliI,OAAJ,EAAhC;;IAEMmiI,I;AAEL,kBAAwG;AAAA,QAA3FjnI,GAA2F,uEAArF,IAAI8E,OAAJ,CAAa,CAAE+Y,QAAf,EAAyB,CAAEA,QAA3B,CAAqF;AAAA,QAA9C5d,GAA8C,uEAAxC,IAAI6E,OAAJ,CAAa,CAAE+Y,QAAf,EAAyB,CAAEA,QAA3B,CAAwC;;AAAA;;AAEvG,SAAKqpH,MAAL,GAAc,IAAd;AAEA,SAAKlnI,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AAEA;;;;WAED,aAAKD,GAAL,EAAUC,GAAV,EAAgB;AAEf,WAAKD,GAAL,CAASiN,IAAT,CAAejN,GAAf;AACA,WAAKC,GAAL,CAASgN,IAAT,CAAehN,GAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAeoe,MAAf,EAAwB;AAEvB,WAAKC,SAAL;;AAEA,WAAM,IAAI1f,CAAC,GAAG,CAAR,EAAW4X,EAAE,GAAG6H,MAAM,CAACvf,MAA7B,EAAqCF,CAAC,GAAG4X,EAAzC,EAA6C5X,CAAC,EAA9C,EAAoD;AAEnD,aAAK2f,aAAL,CAAoBF,MAAM,CAAEzf,CAAF,CAA1B;AAEA;;AAED,aAAO,IAAP;AAEA;;;WAED,8BAAsB6H,MAAtB,EAA8BoH,IAA9B,EAAqC;AAEpC,UAAM2Q,QAAQ,GAAGwoH,SAAS,CAAC/5H,IAAV,CAAgBY,IAAhB,EAAuBvI,cAAvB,CAAuC,GAAvC,CAAjB;;AACA,WAAKtF,GAAL,CAASiN,IAAT,CAAexG,MAAf,EAAwBwW,GAAxB,CAA6BuB,QAA7B;AACA,WAAKve,GAAL,CAASgN,IAAT,CAAexG,MAAf,EAAwBiY,GAAxB,CAA6BF,QAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKxa,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;WAED,cAAM6R,GAAN,EAAY;AAEX,WAAK9e,GAAL,CAASiN,IAAT,CAAe6R,GAAG,CAAC9e,GAAnB;AACA,WAAKC,GAAL,CAASgN,IAAT,CAAe6R,GAAG,CAAC7e,GAAnB;AAEA,aAAO,IAAP;AAEA;;;WAED,qBAAY;AAEX,WAAKD,GAAL,CAASM,CAAT,GAAa,KAAKN,GAAL,CAASY,CAAT,GAAa,CAAEid,QAA5B;AACA,WAAK5d,GAAL,CAASK,CAAT,GAAa,KAAKL,GAAL,CAASW,CAAT,GAAa,CAAEid,QAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET;AAEA,aAAS,KAAK5d,GAAL,CAASK,CAAT,GAAa,KAAKN,GAAL,CAASM,CAAxB,IAAiC,KAAKL,GAAL,CAASW,CAAT,GAAa,KAAKZ,GAAL,CAASY,CAA9D;AAEA;;;WAED,mBAAWnC,MAAX,EAAoB;AAEnB,aAAO,KAAKsgB,OAAL,KAAiBtgB,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,CAAjB,GAAsCnF,MAAM,CAAC2G,UAAP,CAAmB,KAAKpF,GAAxB,EAA6B,KAAKC,GAAlC,EAAwCqF,cAAxC,CAAwD,GAAxD,CAA7C;AAEA;;;WAED,iBAAS7G,MAAT,EAAkB;AAEjB,aAAO,KAAKsgB,OAAL,KAAiBtgB,MAAM,CAACmF,GAAP,CAAY,CAAZ,EAAe,CAAf,CAAjB,GAAsCnF,MAAM,CAAC4G,UAAP,CAAmB,KAAKpF,GAAxB,EAA6B,KAAKD,GAAlC,CAA7C;AAEA;;;WAED,uBAAegf,KAAf,EAAuB;AAEtB,WAAKhf,GAAL,CAASA,GAAT,CAAcgf,KAAd;AACA,WAAK/e,GAAL,CAASA,GAAT,CAAc+e,KAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBC,MAAhB,EAAyB;AAExB,WAAKjf,GAAL,CAASid,GAAT,CAAcgC,MAAd;AACA,WAAKhf,GAAL,CAASye,GAAT,CAAcO,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAgBha,MAAhB,EAAyB;AAExB,WAAKjF,GAAL,CAASkf,SAAT,CAAoB,CAAEja,MAAtB;AACA,WAAKhF,GAAL,CAASif,SAAT,CAAoBja,MAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAe+Z,KAAf,EAAuB;AAEtB,aAAOA,KAAK,CAAC1e,CAAN,GAAU,KAAKN,GAAL,CAASM,CAAnB,IAAwB0e,KAAK,CAAC1e,CAAN,GAAU,KAAKL,GAAL,CAASK,CAA3C,IACN0e,KAAK,CAACpe,CAAN,GAAU,KAAKZ,GAAL,CAASY,CADb,IACkBoe,KAAK,CAACpe,CAAN,GAAU,KAAKX,GAAL,CAASW,CADrC,GACyC,KADzC,GACiD,IADxD;AAGA;;;WAED,qBAAake,GAAb,EAAmB;AAElB,aAAO,KAAK9e,GAAL,CAASM,CAAT,IAAcwe,GAAG,CAAC9e,GAAJ,CAAQM,CAAtB,IAA2Bwe,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,IAAa,KAAKL,GAAL,CAASK,CAAjD,IACN,KAAKN,GAAL,CAASY,CAAT,IAAcke,GAAG,CAAC9e,GAAJ,CAAQY,CADhB,IACqBke,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,IAAa,KAAKX,GAAL,CAASW,CADlD;AAGA;;;WAED,sBAAcoe,KAAd,EAAqBvgB,MAArB,EAA8B;AAE7B;AACA;AAEA,aAAOA,MAAM,CAACmF,GAAP,CACN,CAAEob,KAAK,CAAC1e,CAAN,GAAU,KAAKN,GAAL,CAASM,CAArB,KAA6B,KAAKL,GAAL,CAASK,CAAT,GAAa,KAAKN,GAAL,CAASM,CAAnD,CADM,EAEN,CAAE0e,KAAK,CAACpe,CAAN,GAAU,KAAKZ,GAAL,CAASY,CAArB,KAA6B,KAAKX,GAAL,CAASW,CAAT,GAAa,KAAKZ,GAAL,CAASY,CAAnD,CAFM,CAAP;AAKA;;;WAED,uBAAeke,GAAf,EAAqB;AAEpB;AAEA,aAAOA,GAAG,CAAC7e,GAAJ,CAAQK,CAAR,GAAY,KAAKN,GAAL,CAASM,CAArB,IAA0Bwe,GAAG,CAAC9e,GAAJ,CAAQM,CAAR,GAAY,KAAKL,GAAL,CAASK,CAA/C,IACNwe,GAAG,CAAC7e,GAAJ,CAAQW,CAAR,GAAY,KAAKZ,GAAL,CAASY,CADf,IACoBke,GAAG,CAAC9e,GAAJ,CAAQY,CAAR,GAAY,KAAKX,GAAL,CAASW,CADzC,GAC6C,KAD7C,GACqD,IAD5D;AAGA;;;WAED,oBAAYoe,KAAZ,EAAmBvgB,MAAnB,EAA4B;AAE3B,aAAOA,MAAM,CAACwO,IAAP,CAAa+R,KAAb,EAAqBlf,KAArB,CAA4B,KAAKE,GAAjC,EAAsC,KAAKC,GAA3C,CAAP;AAEA;;;WAED,yBAAiB+e,KAAjB,EAAyB;AAExB,UAAM8B,YAAY,GAAGkmH,SAAS,CAAC/5H,IAAV,CAAgB+R,KAAhB,EAAwBlf,KAAxB,CAA+B,KAAKE,GAApC,EAAyC,KAAKC,GAA9C,CAArB;;AACA,aAAO6gB,YAAY,CAAC7D,GAAb,CAAkB+B,KAAlB,EAA0BlgB,MAA1B,EAAP;AAEA;;;WAED,mBAAWggB,GAAX,EAAiB;AAEhB,WAAK9e,GAAL,CAASC,GAAT,CAAc6e,GAAG,CAAC9e,GAAlB;AACA,WAAKC,GAAL,CAASD,GAAT,CAAc8e,GAAG,CAAC7e,GAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,eAAO6e,GAAP,EAAa;AAEZ,WAAK9e,GAAL,CAASA,GAAT,CAAc8e,GAAG,CAAC9e,GAAlB;AACA,WAAKC,GAAL,CAASA,GAAT,CAAc6e,GAAG,CAAC7e,GAAlB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAWoG,MAAX,EAAoB;AAEnB,WAAKrG,GAAL,CAAS0e,GAAT,CAAcrY,MAAd;AACA,WAAKpG,GAAL,CAASye,GAAT,CAAcrY,MAAd;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQyY,GAAR,EAAc;AAEb,aAAOA,GAAG,CAAC9e,GAAJ,CAAQkhB,MAAR,CAAgB,KAAKlhB,GAArB,KAA8B8e,GAAG,CAAC7e,GAAJ,CAAQihB,MAAR,CAAgB,KAAKjhB,GAArB,CAArC;AAEA;;;;;;AAIF,IAAMknI,OAAO,GAAG,aAAc,IAAInsH,OAAJ,EAA9B;;AACA,IAAMosH,SAAS,GAAG,aAAc,IAAIpsH,OAAJ,EAAhC;;IAEMqsH,K;AAEL,mBAA0D;AAAA,QAA7CjrG,KAA6C,uEAArC,IAAIphB,OAAJ,EAAqC;AAAA,QAAtBwnB,GAAsB,uEAAhB,IAAIxnB,OAAJ,EAAgB;;AAAA;;AAEzD,SAAKohB,KAAL,GAAaA,KAAb;AACA,SAAKoG,GAAL,GAAWA,GAAX;AAEA;;;;WAED,aAAKpG,KAAL,EAAYoG,GAAZ,EAAkB;AAEjB,WAAKpG,KAAL,CAAWnvB,IAAX,CAAiBmvB,KAAjB;AACA,WAAKoG,GAAL,CAASv1B,IAAT,CAAeu1B,GAAf;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMqH,IAAN,EAAa;AAEZ,WAAKzN,KAAL,CAAWnvB,IAAX,CAAiB48B,IAAI,CAACzN,KAAtB;AACA,WAAKoG,GAAL,CAASv1B,IAAT,CAAe48B,IAAI,CAACrH,GAApB;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAW/jC,MAAX,EAAoB;AAEnB,aAAOA,MAAM,CAAC2G,UAAP,CAAmB,KAAKg3B,KAAxB,EAA+B,KAAKoG,GAApC,EAA0Cl9B,cAA1C,CAA0D,GAA1D,CAAP;AAEA;;;WAED,eAAO7G,MAAP,EAAgB;AAEf,aAAOA,MAAM,CAAC4G,UAAP,CAAmB,KAAKm9B,GAAxB,EAA6B,KAAKpG,KAAlC,CAAP;AAEA;;;WAED,sBAAa;AAEZ,aAAO,KAAKA,KAAL,CAAWr2B,iBAAX,CAA8B,KAAKy8B,GAAnC,CAAP;AAEA;;;WAED,oBAAW;AAEV,aAAO,KAAKpG,KAAL,CAAWna,UAAX,CAAuB,KAAKugB,GAA5B,CAAP;AAEA;;;WAED,YAAI1hC,CAAJ,EAAOrC,MAAP,EAAgB;AAEf,aAAO,KAAK8P,KAAL,CAAY9P,MAAZ,EAAqB6G,cAArB,CAAqCxE,CAArC,EAAyC4d,GAAzC,CAA8C,KAAK0d,KAAnD,CAAP;AAEA;;;WAED,sCAA8Bpd,KAA9B,EAAqCsoH,WAArC,EAAmD;AAElDH,MAAAA,OAAO,CAAC9hI,UAAR,CAAoB2Z,KAApB,EAA2B,KAAKod,KAAhC;;AACAgrG,MAAAA,SAAS,CAAC/hI,UAAV,CAAsB,KAAKm9B,GAA3B,EAAgC,KAAKpG,KAArC;;AAEA,UAAMmrG,SAAS,GAAGH,SAAS,CAACtvH,GAAV,CAAesvH,SAAf,CAAlB;;AACA,UAAMI,eAAe,GAAGJ,SAAS,CAACtvH,GAAV,CAAeqvH,OAAf,CAAxB;;AAEA,UAAIrmI,CAAC,GAAG0mI,eAAe,GAAGD,SAA1B;;AAEA,UAAKD,WAAL,EAAmB;AAElBxmI,QAAAA,CAAC,GAAGhB,KAAK,CAAEgB,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAT;AAEA;;AAED,aAAOA,CAAP;AAEA;;;WAED,6BAAqBke,KAArB,EAA4BsoH,WAA5B,EAAyC7oI,MAAzC,EAAkD;AAEjD,UAAMqC,CAAC,GAAG,KAAK2mI,4BAAL,CAAmCzoH,KAAnC,EAA0CsoH,WAA1C,CAAV;AAEA,aAAO,KAAK/4H,KAAL,CAAY9P,MAAZ,EAAqB6G,cAArB,CAAqCxE,CAArC,EAAyC4d,GAAzC,CAA8C,KAAK0d,KAAnD,CAAP;AAEA;;;WAED,sBAAczxB,MAAd,EAAuB;AAEtB,WAAKyxB,KAAL,CAAWpgB,YAAX,CAAyBrR,MAAzB;AACA,WAAK63B,GAAL,CAASxmB,YAAT,CAAuBrR,MAAvB;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQk/B,IAAR,EAAe;AAEd,aAAOA,IAAI,CAACzN,KAAL,CAAWlb,MAAX,CAAmB,KAAKkb,KAAxB,KAAmCyN,IAAI,CAACrH,GAAL,CAASthB,MAAT,CAAiB,KAAKshB,GAAtB,CAA1C;AAEA;;;WAED,iBAAQ;AAEP,aAAO,IAAI,KAAKx+B,WAAT,GAAuBiJ,IAAvB,CAA6B,IAA7B,CAAP;AAEA;;;;;;AAIF,IAAMy6H,SAAS,GAAG,aAAc,IAAI1sH,OAAJ,EAAhC;;IAEM2sH,e;;;;;AAEL,2BAAa7hE,KAAb,EAAoB95D,KAApB,EAA4B;AAAA;;AAAA;;AAE3B;AACA,aAAK85D,KAAL,GAAaA,KAAb;;AACA,aAAKA,KAAL,CAAW/3C,iBAAX;;AAEA,aAAKpjB,MAAL,GAAcm7D,KAAK,CAAC1pD,WAApB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;AAEA,aAAKjG,KAAL,GAAaA,KAAb;AAEA,QAAMoT,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AAEA,QAAM2B,SAAS,GAAG,CACjB,CADiB,EACd,CADc,EACX,CADW,EACP,CADO,EACJ,CADI,EACD,CADC,EAEjB,CAFiB,EAEd,CAFc,EAEX,CAFW,EAEP,CAFO,EAEJ,CAFI,EAED,CAFC,EAGjB,CAHiB,EAGd,CAHc,EAGX,CAHW,EAGR,CAAE,CAHM,EAGH,CAHG,EAGA,CAHA,EAIjB,CAJiB,EAId,CAJc,EAIX,CAJW,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAKjB,CALiB,EAKd,CALc,EAKX,CALW,EAKP,CALO,EAKJ,CAAE,CALE,EAKC,CALD,CAAlB;;AAQA,SAAM,IAAI5+B,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAG,CAAf,EAAkBziB,CAAC,GAAG,EAA5B,EAAgCD,CAAC,GAAGC,CAApC,EAAuCD,CAAC,IAAK0iB,CAAC,EAA9C,EAAoD;AAEnD,UAAME,EAAE,GAAK5iB,CAAC,GAAGC,CAAN,GAAYM,IAAI,CAACC,EAAjB,GAAsB,CAAjC;AACA,UAAMqiB,EAAE,GAAKH,CAAC,GAAGziB,CAAN,GAAYM,IAAI,CAACC,EAAjB,GAAsB,CAAjC;AAEAo+B,MAAAA,SAAS,CAACp/B,IAAV,CACCe,IAAI,CAAC+D,GAAL,CAAUse,EAAV,CADD,EACiBriB,IAAI,CAACgE,GAAL,CAAUqe,EAAV,CADjB,EACiC,CADjC,EAECriB,IAAI,CAAC+D,GAAL,CAAUue,EAAV,CAFD,EAEiBtiB,IAAI,CAACgE,GAAL,CAAUse,EAAV,CAFjB,EAEiC,CAFjC;AAKA;;AAEDrC,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BoC,SAA5B,EAAuC,CAAvC,CAAnC;AAEA,QAAM9N,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEnpC,MAAAA,GAAG,EAAE,KAAP;AAActE,MAAAA,UAAU,EAAE;AAA1B,KAAvB,CAAjB;AAEA,aAAK6yG,IAAL,GAAY,IAAI5tC,YAAJ,CAAkB56E,QAAlB,EAA4BsQ,QAA5B,CAAZ;;AACA,aAAKhR,GAAL,CAAU,SAAKkpH,IAAf;;AAEA,aAAK1wH,MAAL;;AAxC2B;AA0C3B;;;;WAED,mBAAU;AAET,WAAK0wH,IAAL,CAAUxoH,QAAV,CAAmB3J,OAAnB;AACA,WAAKmyH,IAAL,CAAUl4G,QAAV,CAAmBja,OAAnB;AAEA;;;WAED,kBAAS;AAER,WAAKqwD,KAAL,CAAW/3C,iBAAX;AAEA,UAAM85G,UAAU,GAAG,KAAK/hE,KAAL,CAAW94C,QAAX,GAAsB,KAAK84C,KAAL,CAAW94C,QAAjC,GAA4C,IAA/D;AACA,UAAM86G,SAAS,GAAGD,UAAU,GAAG1oI,IAAI,CAAC8nC,GAAL,CAAU,KAAK6+B,KAAL,CAAWjgE,KAArB,CAA/B;AAEA,WAAK+hI,IAAL,CAAUl/G,KAAV,CAAgB9kB,GAAhB,CAAqBkkI,SAArB,EAAgCA,SAAhC,EAA2CD,UAA3C;;AAEAH,MAAAA,SAAS,CAACx6G,qBAAV,CAAiC,KAAK44C,KAAL,CAAWrnE,MAAX,CAAkB2d,WAAnD;;AAEA,WAAKwrH,IAAL,CAAUv6G,MAAV,CAAkBq6G,SAAlB;;AAEA,UAAK,KAAK17H,KAAL,KAAe/N,SAApB,EAAgC;AAE/B,aAAK2pI,IAAL,CAAUl4G,QAAV,CAAmB1jB,KAAnB,CAAyBpI,GAAzB,CAA8B,KAAKoI,KAAnC;AAEA,OAJD,MAIO;AAEN,aAAK47H,IAAL,CAAUl4G,QAAV,CAAmB1jB,KAAnB,CAAyBiB,IAAzB,CAA+B,KAAK64D,KAAL,CAAW95D,KAA1C;AAEA;AAED;;;;EA5E4Buf,Q;;AAgF9B,IAAMw8G,SAAS,GAAG,aAAc,IAAI/sH,OAAJ,EAAhC;;AACA,IAAMgtH,WAAW,GAAG,aAAc,IAAIviH,OAAJ,EAAlC;;AACA,IAAMwiH,eAAe,GAAG,aAAc,IAAIxiH,OAAJ,EAAtC;;IAGMyiH,c;;;;;AAEL,0BAAavpH,MAAb,EAAsB;AAAA;;AAAA;;AAErB,QAAM44E,KAAK,GAAG4wC,WAAW,CAAExpH,MAAF,CAAzB;AAEA,QAAMS,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AAEA,QAAM0H,QAAQ,GAAG,EAAjB;AACA,QAAMlJ,MAAM,GAAG,EAAf;AAEA,QAAM5rB,MAAM,GAAG,IAAI3B,KAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAf;AACA,QAAM4B,MAAM,GAAG,IAAI5B,KAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAf;;AAEA,SAAM,IAAIlO,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG24F,KAAK,CAACz4F,MAA3B,EAAmCF,CAAC,EAApC,EAA0C;AAEzC,UAAMq5F,IAAI,GAAGV,KAAK,CAAE34F,CAAF,CAAlB;;AAEA,UAAKq5F,IAAI,CAACxsE,MAAL,IAAewsE,IAAI,CAACxsE,MAAL,CAAYisE,MAAhC,EAAyC;AAExCn0D,QAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACAmlC,QAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACAi8B,QAAAA,MAAM,CAACj8B,IAAP,CAAaqQ,MAAM,CAACvE,CAApB,EAAuBuE,MAAM,CAACnF,CAA9B,EAAiCmF,MAAM,CAAC1L,CAAxC;AACAs3B,QAAAA,MAAM,CAACj8B,IAAP,CAAasQ,MAAM,CAACxE,CAApB,EAAuBwE,MAAM,CAACpF,CAA9B,EAAiCoF,MAAM,CAAC3L,CAAxC;AAEA;AAED;;AAEDqc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAAnC;AACAnkB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAI5B,sBAAJ,CAA4Bf,MAA5B,EAAoC,CAApC,CAAhC;AAEA,QAAM3K,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEzvC,MAAAA,YAAY,EAAE,IAAhB;AAAsBU,MAAAA,SAAS,EAAE,KAAjC;AAAwCC,MAAAA,UAAU,EAAE,KAApD;AAA2DqB,MAAAA,UAAU,EAAE,KAAvE;AAA8E9B,MAAAA,WAAW,EAAE;AAA3F,KAAvB,CAAjB;AAEA,oCAAO7T,QAAP,EAAiBsQ,QAAjB;AAEA,aAAK04G,gBAAL,GAAwB,IAAxB;AAEA,aAAKtqI,IAAL,GAAY,gBAAZ;AAEA,aAAK68H,IAAL,GAAYh8G,MAAZ;AACA,aAAK44E,KAAL,GAAaA,KAAb;AAEA,aAAK5sF,MAAL,GAAcgU,MAAM,CAACvC,WAArB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;AA1CqB;AA4CrB;;;;WAED,2BAAmB6b,KAAnB,EAA2B;AAE1B,UAAMypE,KAAK,GAAG,KAAKA,KAAnB;AAEA,UAAMn4E,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAME,QAAQ,GAAGF,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,CAAjB;;AAEAmqG,MAAAA,eAAe,CAACh7H,IAAhB,CAAsB,KAAK0tH,IAAL,CAAUv+G,WAAhC,EAA8CpS,MAA9C;;AAEA,WAAM,IAAIpL,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAG,CAArB,EAAwB1iB,CAAC,GAAG24F,KAAK,CAACz4F,MAAlC,EAA0CF,CAAC,EAA3C,EAAiD;AAEhD,YAAMq5F,IAAI,GAAGV,KAAK,CAAE34F,CAAF,CAAlB;;AAEA,YAAKq5F,IAAI,CAACxsE,MAAL,IAAewsE,IAAI,CAACxsE,MAAL,CAAYisE,MAAhC,EAAyC;AAExCswC,UAAAA,WAAW,CAACjgI,gBAAZ,CAA8BkgI,eAA9B,EAA+ChwC,IAAI,CAAC77E,WAApD;;AACA2rH,UAAAA,SAAS,CAAC76G,qBAAV,CAAiC86G,WAAjC;;AACA1oH,UAAAA,QAAQ,CAACkb,MAAT,CAAiBlZ,CAAjB,EAAoBymH,SAAS,CAACznI,CAA9B,EAAiCynI,SAAS,CAACnnI,CAA3C,EAA8CmnI,SAAS,CAACv0H,CAAxD;;AAEAw0H,UAAAA,WAAW,CAACjgI,gBAAZ,CAA8BkgI,eAA9B,EAA+ChwC,IAAI,CAACxsE,MAAL,CAAYrP,WAA3D;;AACA2rH,UAAAA,SAAS,CAAC76G,qBAAV,CAAiC86G,WAAjC;;AACA1oH,UAAAA,QAAQ,CAACkb,MAAT,CAAiBlZ,CAAC,GAAG,CAArB,EAAwBymH,SAAS,CAACznI,CAAlC,EAAqCynI,SAAS,CAACnnI,CAA/C,EAAkDmnI,SAAS,CAACv0H,CAA5D;AAEA8N,UAAAA,CAAC,IAAI,CAAL;AAEA;AAED;;AAEDlC,MAAAA,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,EAAoChrB,WAApC,GAAkD,IAAlD;;AAEA,4FAAyBgb,KAAzB;AAEA;;;;EAjF2BksE,Y;;AAsF7B,SAASmuC,WAAT,CAAsBxpH,MAAtB,EAA+B;AAE9B,MAAM0pH,QAAQ,GAAG,EAAjB;;AAEA,MAAK1pH,MAAM,CAAC+4E,MAAP,KAAkB,IAAvB,EAA8B;AAE7B2wC,IAAAA,QAAQ,CAACjqI,IAAT,CAAeugB,MAAf;AAEA;;AAED,OAAM,IAAI/f,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG+f,MAAM,CAACiB,QAAP,CAAgB9gB,MAArC,EAA6CF,CAAC,EAA9C,EAAoD;AAEnDypI,IAAAA,QAAQ,CAACjqI,IAAT,CAAcg1E,KAAd,CAAqBi1D,QAArB,EAA+BF,WAAW,CAAExpH,MAAM,CAACiB,QAAP,CAAiBhhB,CAAjB,CAAF,CAA1C;AAEA;;AAED,SAAOypI,QAAP;AAEA;;IAEKC,gB;;;;;AAEL,4BAAaxiE,KAAb,EAAoByiE,UAApB,EAAgCv8H,KAAhC,EAAwC;AAAA;;AAAA;;AAEvC,QAAMoT,QAAQ,GAAG,IAAIu0F,cAAJ,CAAoB40B,UAApB,EAAgC,CAAhC,EAAmC,CAAnC,CAAjB;AACA,QAAM74G,QAAQ,GAAG,IAAI8J,iBAAJ,CAAuB;AAAEP,MAAAA,SAAS,EAAE,IAAb;AAAmBI,MAAAA,GAAG,EAAE,KAAxB;AAA+BtE,MAAAA,UAAU,EAAE;AAA3C,KAAvB,CAAjB;AAEA,oCAAO3V,QAAP,EAAiBsQ,QAAjB;AAEA,aAAKo2C,KAAL,GAAaA,KAAb;;AACA,aAAKA,KAAL,CAAW/3C,iBAAX;;AAEA,aAAK/hB,KAAL,GAAaA,KAAb;AAEA,aAAKlO,IAAL,GAAY,kBAAZ;AAEA,aAAK6M,MAAL,GAAc,SAAKm7D,KAAL,CAAW1pD,WAAzB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;;AAEA,aAAKiF,MAAL;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjCyC;AA2CvC;;;;WAED,mBAAU;AAET,WAAKkI,QAAL,CAAc3J,OAAd;AACA,WAAKia,QAAL,CAAcja,OAAd;AAEA;;;WAED,kBAAS;AAER,UAAK,KAAKzJ,KAAL,KAAe/N,SAApB,EAAgC;AAE/B,aAAKyxB,QAAL,CAAc1jB,KAAd,CAAoBpI,GAApB,CAAyB,KAAKoI,KAA9B;AAEA,OAJD,MAIO;AAEN,aAAK0jB,QAAL,CAAc1jB,KAAd,CAAoBiB,IAApB,CAA0B,KAAK64D,KAAL,CAAW95D,KAArC;AAEA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE;;;;EAjF6B41B,I;;AAqF/B,IAAM4mG,SAAS,GAAG,aAAc,IAAIxtH,OAAJ,EAAhC;;AACA,IAAMytH,OAAO,GAAG,aAAc,IAAI37H,KAAJ,EAA9B;;AACA,IAAM47H,OAAO,GAAG,aAAc,IAAI57H,KAAJ,EAA9B;;IAEM67H,qB;;;;;AAEL,iCAAa7iE,KAAb,EAAoBj4D,IAApB,EAA0B7B,KAA1B,EAAkC;AAAA;;AAAA;;AAEjC;AACA,aAAK85D,KAAL,GAAaA,KAAb;;AACA,aAAKA,KAAL,CAAW/3C,iBAAX;;AAEA,aAAKpjB,MAAL,GAAcm7D,KAAK,CAAC1pD,WAApB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;AAEA,aAAKjG,KAAL,GAAaA,KAAb;AAEA,QAAMoT,QAAQ,GAAG,IAAI0zF,kBAAJ,CAAwBjlG,IAAxB,CAAjB;AACAuR,IAAAA,QAAQ,CAACwpH,OAAT,CAAkBzpI,IAAI,CAACC,EAAL,GAAU,GAA5B;AAEA,aAAKswB,QAAL,GAAgB,IAAI8J,iBAAJ,CAAuB;AAAEP,MAAAA,SAAS,EAAE,IAAb;AAAmBI,MAAAA,GAAG,EAAE,KAAxB;AAA+BtE,MAAAA,UAAU,EAAE;AAA3C,KAAvB,CAAhB;AACA,QAAK,SAAK/oB,KAAL,KAAe/N,SAApB,EAAgC,SAAKyxB,QAAL,CAAcqD,YAAd,GAA6B,IAA7B;AAEhC,QAAMzT,QAAQ,GAAGF,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,CAAjB;AACA,QAAMzD,MAAM,GAAG,IAAIp2B,YAAJ,CAAkBqb,QAAQ,CAAChJ,KAAT,GAAiB,CAAnC,CAAf;AAEA8I,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAInD,eAAJ,CAAqBQ,MAArB,EAA6B,CAA7B,CAAhC;;AAEA,aAAK3b,GAAL,CAAU,IAAIkjB,IAAJ,CAAUxiB,QAAV,EAAoB,SAAKsQ,QAAzB,CAAV;;AAEA,aAAKxY,MAAL;;AAxBiC;AA0BjC;;;;WAED,mBAAU;AAET,WAAK0I,QAAL,CAAe,CAAf,EAAmBR,QAAnB,CAA4B3J,OAA5B;AACA,WAAKmK,QAAL,CAAe,CAAf,EAAmB8P,QAAnB,CAA4Bja,OAA5B;AAEA;;;WAED,kBAAS;AAER,UAAMyzB,IAAI,GAAG,KAAKtpB,QAAL,CAAe,CAAf,CAAb;;AAEA,UAAK,KAAK5T,KAAL,KAAe/N,SAApB,EAAgC;AAE/B,aAAKyxB,QAAL,CAAc1jB,KAAd,CAAoBpI,GAApB,CAAyB,KAAKoI,KAA9B;AAEA,OAJD,MAIO;AAEN,YAAMquB,MAAM,GAAG6O,IAAI,CAAC9pB,QAAL,CAAc0e,YAAd,CAA4B,OAA5B,CAAf;;AAEA2qG,QAAAA,OAAO,CAACx7H,IAAR,CAAc,KAAK64D,KAAL,CAAW95D,KAAzB;;AACA08H,QAAAA,OAAO,CAACz7H,IAAR,CAAc,KAAK64D,KAAL,CAAWlqB,WAAzB;;AAEA,aAAM,IAAIh9C,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGw7B,MAAM,CAAC/jB,KAA5B,EAAmC1X,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhD,cAAMoN,KAAK,GAAKpN,CAAC,GAAKC,CAAC,GAAG,CAAZ,GAAoB4pI,OAApB,GAA8BC,OAA5C;AAEAruG,UAAAA,MAAM,CAACG,MAAP,CAAe57B,CAAf,EAAkBoN,KAAK,CAAC9B,CAAxB,EAA2B8B,KAAK,CAAC1C,CAAjC,EAAoC0C,KAAK,CAACjJ,CAA1C;AAEA;;AAEDs3B,QAAAA,MAAM,CAACvnB,WAAP,GAAqB,IAArB;AAEA;;AAEDo2B,MAAAA,IAAI,CAAC7b,MAAL,CAAam7G,SAAS,CAACt7G,qBAAV,CAAiC,KAAK44C,KAAL,CAAW1pD,WAA5C,EAA0D0gB,MAA1D,EAAb;AAEA;;;;EAlEkCvR,Q;;IAsE9Bs9G,U;;;;;AAEL,wBAA+E;AAAA;;AAAA,QAAlEh7H,IAAkE,uEAA3D,EAA2D;AAAA,QAAvD+tF,SAAuD,uEAA3C,EAA2C;AAAA,QAAvCntF,MAAuC,uEAA9B,QAA8B;AAAA,QAApBC,MAAoB,uEAAX,QAAW;;AAAA;;AAE9ED,IAAAA,MAAM,GAAG,IAAI3B,KAAJ,CAAW2B,MAAX,CAAT;AACAC,IAAAA,MAAM,GAAG,IAAI5B,KAAJ,CAAW4B,MAAX,CAAT;AAEA,QAAMjI,MAAM,GAAGm1F,SAAS,GAAG,CAA3B;AACA,QAAM3jF,IAAI,GAAGpK,IAAI,GAAG+tF,SAApB;AACA,QAAMp9E,QAAQ,GAAG3Q,IAAI,GAAG,CAAxB;AAEA,QAAM01B,QAAQ,GAAG,EAAjB;AAAA,QAAqBlJ,MAAM,GAAG,EAA9B;;AAEA,SAAM,IAAIz7B,CAAC,GAAG,CAAR,EAAW0iB,CAAC,GAAG,CAAf,EAAkB+rD,CAAC,GAAG,CAAE7uD,QAA9B,EAAwC5f,CAAC,IAAIg9F,SAA7C,EAAwDh9F,CAAC,IAAKyuE,CAAC,IAAIp1D,IAAnE,EAA0E;AAEzEsrB,MAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAEogB,QAAjB,EAA2B,CAA3B,EAA8B6uD,CAA9B,EAAiC7uD,QAAjC,EAA2C,CAA3C,EAA8C6uD,CAA9C;AACA9pC,MAAAA,QAAQ,CAACnlC,IAAT,CAAeivE,CAAf,EAAkB,CAAlB,EAAqB,CAAE7uD,QAAvB,EAAiC6uD,CAAjC,EAAoC,CAApC,EAAuC7uD,QAAvC;AAEA,UAAMxS,KAAK,GAAGpN,CAAC,KAAK6H,MAAN,GAAegI,MAAf,GAAwBC,MAAtC;AAEA1C,MAAAA,KAAK,CAACuiB,OAAN,CAAe8L,MAAf,EAAuB/Y,CAAvB;AAA4BA,MAAAA,CAAC,IAAI,CAAL;AAC5BtV,MAAAA,KAAK,CAACuiB,OAAN,CAAe8L,MAAf,EAAuB/Y,CAAvB;AAA4BA,MAAAA,CAAC,IAAI,CAAL;AAC5BtV,MAAAA,KAAK,CAACuiB,OAAN,CAAe8L,MAAf,EAAuB/Y,CAAvB;AAA4BA,MAAAA,CAAC,IAAI,CAAL;AAC5BtV,MAAAA,KAAK,CAACuiB,OAAN,CAAe8L,MAAf,EAAuB/Y,CAAvB;AAA4BA,MAAAA,CAAC,IAAI,CAAL;AAE5B;;AAED,QAAMlC,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAAnC;AACAnkB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAI5B,sBAAJ,CAA4Bf,MAA5B,EAAoC,CAApC,CAAhC;AAEA,QAAM3K,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEzvC,MAAAA,YAAY,EAAE,IAAhB;AAAsBgC,MAAAA,UAAU,EAAE;AAAlC,KAAvB,CAAjB;AAEA,oCAAO3V,QAAP,EAAiBsQ,QAAjB;AAEA,aAAK5xB,IAAL,GAAY,YAAZ;AAjC8E;AAmC9E;;;EArCuBk8F,Y;;IAyCnB8uC,e;;;;;AAEL,6BAA4G;AAAA;;AAAA,QAA/FzrH,MAA+F,uEAAtF,EAAsF;AAAA,QAAlF0rH,OAAkF,uEAAxE,EAAwE;AAAA,QAApEC,OAAoE,uEAA1D,CAA0D;AAAA,QAAvDptC,SAAuD,uEAA3C,EAA2C;AAAA,QAAvCntF,MAAuC,uEAA9B,QAA8B;AAAA,QAApBC,MAAoB,uEAAX,QAAW;;AAAA;;AAE3GD,IAAAA,MAAM,GAAG,IAAI3B,KAAJ,CAAW2B,MAAX,CAAT;AACAC,IAAAA,MAAM,GAAG,IAAI5B,KAAJ,CAAW4B,MAAX,CAAT;AAEA,QAAM60B,QAAQ,GAAG,EAAjB;AACA,QAAMlJ,MAAM,GAAG,EAAf,CAN2G,CAQ3G;;AAEA,SAAM,IAAIz7B,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAImqI,OAAtB,EAA+BnqI,CAAC,EAAhC,EAAsC;AAErC,UAAMsG,CAAC,GAAKtG,CAAC,GAAGmqI,OAAN,IAAoB5pI,IAAI,CAACC,EAAL,GAAU,CAA9B,CAAV;AAEA,UAAMkB,CAAC,GAAGnB,IAAI,CAACgE,GAAL,CAAU+B,CAAV,IAAgBmY,MAA1B;AACA,UAAM7J,CAAC,GAAGrU,IAAI,CAAC+D,GAAL,CAAUgC,CAAV,IAAgBmY,MAA1B;AAEAkmB,MAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACAmlC,MAAAA,QAAQ,CAACnlC,IAAT,CAAekC,CAAf,EAAkB,CAAlB,EAAqBkT,CAArB;AAEA,UAAMxH,KAAK,GAAKpN,CAAC,GAAG,CAAN,GAAY6P,MAAZ,GAAqBC,MAAnC;AAEA2rB,MAAAA,MAAM,CAACj8B,IAAP,CAAa4N,KAAK,CAAC9B,CAAnB,EAAsB8B,KAAK,CAAC1C,CAA5B,EAA+B0C,KAAK,CAACjJ,CAArC;AACAs3B,MAAAA,MAAM,CAACj8B,IAAP,CAAa4N,KAAK,CAAC9B,CAAnB,EAAsB8B,KAAK,CAAC1C,CAA5B,EAA+B0C,KAAK,CAACjJ,CAArC;AAEA,KAzB0G,CA2B3G;;;AAEA,SAAM,IAAInE,IAAC,GAAG,CAAd,EAAiBA,IAAC,IAAIoqI,OAAtB,EAA+BpqI,IAAC,EAAhC,EAAsC;AAErC,UAAMoN,MAAK,GAAKpN,IAAC,GAAG,CAAN,GAAY6P,MAAZ,GAAqBC,MAAnC;;AAEA,UAAMxE,CAAC,GAAGmT,MAAM,GAAKA,MAAM,GAAG2rH,OAAT,GAAmBpqI,IAAxC;;AAEA,WAAM,IAAI0iB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGs6E,SAArB,EAAgCt6E,CAAC,EAAjC,EAAuC;AAEtC;AAEA,YAAIpc,EAAC,GAAKoc,CAAC,GAAGs6E,SAAN,IAAsBz8F,IAAI,CAACC,EAAL,GAAU,CAAhC,CAAR;;AAEA,YAAIkB,IAAC,GAAGnB,IAAI,CAACgE,GAAL,CAAU+B,EAAV,IAAgBgF,CAAxB;;AACA,YAAIsJ,GAAC,GAAGrU,IAAI,CAAC+D,GAAL,CAAUgC,EAAV,IAAgBgF,CAAxB;;AAEAq5B,QAAAA,QAAQ,CAACnlC,IAAT,CAAekC,IAAf,EAAkB,CAAlB,EAAqBkT,GAArB;AACA6mB,QAAAA,MAAM,CAACj8B,IAAP,CAAa4N,MAAK,CAAC9B,CAAnB,EAAsB8B,MAAK,CAAC1C,CAA5B,EAA+B0C,MAAK,CAACjJ,CAArC,EAVsC,CAYtC;;AAEAmC,QAAAA,EAAC,GAAK,CAAEoc,CAAC,GAAG,CAAN,IAAYs6E,SAAd,IAA8Bz8F,IAAI,CAACC,EAAL,GAAU,CAAxC,CAAJ;AAEAkB,QAAAA,IAAC,GAAGnB,IAAI,CAACgE,GAAL,CAAU+B,EAAV,IAAgBgF,CAApB;AACAsJ,QAAAA,GAAC,GAAGrU,IAAI,CAAC+D,GAAL,CAAUgC,EAAV,IAAgBgF,CAApB;AAEAq5B,QAAAA,QAAQ,CAACnlC,IAAT,CAAekC,IAAf,EAAkB,CAAlB,EAAqBkT,GAArB;AACA6mB,QAAAA,MAAM,CAACj8B,IAAP,CAAa4N,MAAK,CAAC9B,CAAnB,EAAsB8B,MAAK,CAAC1C,CAA5B,EAA+B0C,MAAK,CAACjJ,CAArC;AAEA;AAED;;AAED,QAAMqc,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAAnC;AACAnkB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAI5B,sBAAJ,CAA4Bf,MAA5B,EAAoC,CAApC,CAAhC;AAEA,QAAM3K,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEzvC,MAAAA,YAAY,EAAE,IAAhB;AAAsBgC,MAAAA,UAAU,EAAE;AAAlC,KAAvB,CAAjB;AAEA,oCAAO3V,QAAP,EAAiBsQ,QAAjB;AAEA,aAAK5xB,IAAL,GAAY,iBAAZ;AArE2G;AAuE3G;;;EAzE4Bk8F,Y;;AA6E9B,IAAMivC,GAAG,GAAG,aAAc,IAAIjuH,OAAJ,EAA1B;;AACA,IAAMkuH,GAAG,GAAG,aAAc,IAAIluH,OAAJ,EAA1B;;AACA,IAAMmuH,GAAG,GAAG,aAAc,IAAInuH,OAAJ,EAA1B;;IAEMouH,sB;;;;;AAEL,kCAAatjE,KAAb,EAAoBj4D,IAApB,EAA0B7B,KAA1B,EAAkC;AAAA;;AAAA;;AAEjC;AACA,aAAK85D,KAAL,GAAaA,KAAb;;AACA,aAAKA,KAAL,CAAW/3C,iBAAX;;AAEA,aAAKpjB,MAAL,GAAcm7D,KAAK,CAAC1pD,WAApB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;AAEA,aAAKjG,KAAL,GAAaA,KAAb;AAEA,QAAK6B,IAAI,KAAK5P,SAAd,EAA0B4P,IAAI,GAAG,CAAP;AAE1B,QAAIuR,QAAQ,GAAG,IAAIyc,cAAJ,EAAf;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4B,CAC9D,CAAEvtB,IAD4D,EACtDA,IADsD,EAChD,CADgD,EAE9DA,IAF8D,EAExDA,IAFwD,EAElD,CAFkD,EAG9DA,IAH8D,EAGxD,CAAEA,IAHsD,EAGhD,CAHgD,EAI9D,CAAEA,IAJ4D,EAItD,CAAEA,IAJoD,EAI9C,CAJ8C,EAK9D,CAAEA,IAL4D,EAKtDA,IALsD,EAKhD,CALgD,CAA5B,EAMhC,CANgC,CAAnC;AAQA,QAAM6hB,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEnpC,MAAAA,GAAG,EAAE,KAAP;AAActE,MAAAA,UAAU,EAAE;AAA1B,KAAvB,CAAjB;AAEA,aAAKs0G,UAAL,GAAkB,IAAIjwC,IAAJ,CAAUh6E,QAAV,EAAoBsQ,QAApB,CAAlB;;AACA,aAAKhR,GAAL,CAAU,SAAK2qH,UAAf;;AAEAjqH,IAAAA,QAAQ,GAAG,IAAIyc,cAAJ,EAAX;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4B,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAA5B,EAAkD,CAAlD,CAAnC;AAEA,aAAKkuG,UAAL,GAAkB,IAAIlwC,IAAJ,CAAUh6E,QAAV,EAAoBsQ,QAApB,CAAlB;;AACA,aAAKhR,GAAL,CAAU,SAAK4qH,UAAf;;AAEA,aAAKpyH,MAAL;;AAjCiC;AAmCjC;;;;WAED,mBAAU;AAET,WAAKmyH,UAAL,CAAgBjqH,QAAhB,CAAyB3J,OAAzB;AACA,WAAK4zH,UAAL,CAAgB35G,QAAhB,CAAyBja,OAAzB;AACA,WAAK6zH,UAAL,CAAgBlqH,QAAhB,CAAyB3J,OAAzB;AACA,WAAK6zH,UAAL,CAAgB55G,QAAhB,CAAyBja,OAAzB;AAEA;;;WAED,kBAAS;AAERwzH,MAAAA,GAAG,CAAC/7G,qBAAJ,CAA2B,KAAK44C,KAAL,CAAW1pD,WAAtC;;AACA8sH,MAAAA,GAAG,CAACh8G,qBAAJ,CAA2B,KAAK44C,KAAL,CAAWrnE,MAAX,CAAkB2d,WAA7C;;AACA+sH,MAAAA,GAAG,CAAC9jI,UAAJ,CAAgB6jI,GAAhB,EAAqBD,GAArB;;AAEA,WAAKI,UAAL,CAAgBh8G,MAAhB,CAAwB67G,GAAxB;;AAEA,UAAK,KAAKl9H,KAAL,KAAe/N,SAApB,EAAgC;AAE/B,aAAKorI,UAAL,CAAgB35G,QAAhB,CAAyB1jB,KAAzB,CAA+BpI,GAA/B,CAAoC,KAAKoI,KAAzC;AACA,aAAKs9H,UAAL,CAAgB55G,QAAhB,CAAyB1jB,KAAzB,CAA+BpI,GAA/B,CAAoC,KAAKoI,KAAzC;AAEA,OALD,MAKO;AAEN,aAAKq9H,UAAL,CAAgB35G,QAAhB,CAAyB1jB,KAAzB,CAA+BiB,IAA/B,CAAqC,KAAK64D,KAAL,CAAW95D,KAAhD;AACA,aAAKs9H,UAAL,CAAgB55G,QAAhB,CAAyB1jB,KAAzB,CAA+BiB,IAA/B,CAAqC,KAAK64D,KAAL,CAAW95D,KAAhD;AAEA;;AAED,WAAKs9H,UAAL,CAAgBj8G,MAAhB,CAAwB67G,GAAxB;AACA,WAAKI,UAAL,CAAgB5gH,KAAhB,CAAsBlV,CAAtB,GAA0B21H,GAAG,CAACrqI,MAAJ,EAA1B;AAEA;;;;EAvEmCysB,Q;;AA2ErC,IAAMg+G,OAAO,GAAG,aAAc,IAAIvuH,OAAJ,EAA9B;;AACA,IAAMwuH,OAAO,GAAG,aAAc,IAAItjG,MAAJ,EAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;;;IAEMujG,Y;;;;;AAEL,wBAAa1tH,MAAb,EAAsB;AAAA;;AAAA;;AAErB,QAAMqD,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACA,QAAMnM,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEx2D,MAAAA,KAAK,EAAE,QAAT;AAAmB+mB,MAAAA,YAAY,EAAE,IAAjC;AAAuCgC,MAAAA,UAAU,EAAE;AAAnD,KAAvB,CAAjB;AAEA,QAAMwO,QAAQ,GAAG,EAAjB;AACA,QAAMlJ,MAAM,GAAG,EAAf;AAEA,QAAMqvG,QAAQ,GAAG,EAAjB,CARqB,CAUrB;;AAEAC,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP,CAfqB,CAiBrB;;AAEAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP,CAtBqB,CAwBrB;;AAEAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP,CA7BqB,CA+BrB;;AAEAA,IAAAA,OAAO,CAAE,GAAF,EAAO,IAAP,CAAP;AACAA,IAAAA,OAAO,CAAE,GAAF,EAAO,IAAP,CAAP;AACAA,IAAAA,OAAO,CAAE,GAAF,EAAO,IAAP,CAAP;AACAA,IAAAA,OAAO,CAAE,GAAF,EAAO,IAAP,CAAP,CApCqB,CAsCrB;;AAEAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP;AACAA,IAAAA,OAAO,CAAE,IAAF,EAAQ,IAAR,CAAP,CA1CqB,CA4CrB;;AAEAA,IAAAA,OAAO,CAAE,GAAF,EAAO,GAAP,CAAP;AACAA,IAAAA,OAAO,CAAE,GAAF,EAAO,GAAP,CAAP,CA/CqB,CAiDrB;;AAEAA,IAAAA,OAAO,CAAE,KAAF,EAAS,KAAT,CAAP;AACAA,IAAAA,OAAO,CAAE,KAAF,EAAS,KAAT,CAAP;AAEAA,IAAAA,OAAO,CAAE,KAAF,EAAS,KAAT,CAAP;AACAA,IAAAA,OAAO,CAAE,KAAF,EAAS,KAAT,CAAP;;AAEA,aAASA,OAAT,CAAkB7mI,CAAlB,EAAqBC,CAArB,EAAyB;AAExB6mI,MAAAA,QAAQ,CAAE9mI,CAAF,CAAR;AACA8mI,MAAAA,QAAQ,CAAE7mI,CAAF,CAAR;AAEA;;AAED,aAAS6mI,QAAT,CAAmBp8G,EAAnB,EAAwB;AAEvB+V,MAAAA,QAAQ,CAACnlC,IAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACAi8B,MAAAA,MAAM,CAACj8B,IAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;;AAEA,UAAKsrI,QAAQ,CAAEl8G,EAAF,CAAR,KAAmBvvB,SAAxB,EAAoC;AAEnCyrI,QAAAA,QAAQ,CAAEl8G,EAAF,CAAR,GAAiB,EAAjB;AAEA;;AAEDk8G,MAAAA,QAAQ,CAAEl8G,EAAF,CAAR,CAAepvB,IAAf,CAAuBmlC,QAAQ,CAACzkC,MAAT,GAAkB,CAApB,GAA0B,CAA/C;AAEA;;AAEDsgB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAAnC;AACAnkB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAI5B,sBAAJ,CAA4Bf,MAA5B,EAAoC,CAApC,CAAhC;AAEA,oCAAOjb,QAAP,EAAiBsQ,QAAjB;AAEA,aAAK5xB,IAAL,GAAY,cAAZ;AAEA,aAAKie,MAAL,GAAcA,MAAd;AACA,QAAK,SAAKA,MAAL,CAAY6qB,sBAAjB,EAA0C,SAAK7qB,MAAL,CAAY6qB,sBAAZ;AAE1C,aAAKj8B,MAAL,GAAcoR,MAAM,CAACK,WAArB;AACA,aAAKnK,gBAAL,GAAwB,KAAxB;AAEA,aAAKy3H,QAAL,GAAgBA,QAAhB;;AAEA,aAAKxyH,MAAL,GA9FqB,CAgGrB;;;AAEA,QAAM2yH,YAAY,GAAG,IAAI/8H,KAAJ,CAAW,QAAX,CAArB;AACA,QAAMg9H,SAAS,GAAG,IAAIh9H,KAAJ,CAAW,QAAX,CAAlB;AACA,QAAMi9H,OAAO,GAAG,IAAIj9H,KAAJ,CAAW,QAAX,CAAhB;AACA,QAAMk9H,WAAW,GAAG,IAAIl9H,KAAJ,CAAW,QAAX,CAApB;AACA,QAAMm9H,UAAU,GAAG,IAAIn9H,KAAJ,CAAW,QAAX,CAAnB;;AAEA,aAAKo9H,SAAL,CAAgBL,YAAhB,EAA8BC,SAA9B,EAAyCC,OAAzC,EAAkDC,WAAlD,EAA+DC,UAA/D;;AAxGqB;AA0GrB;;;;WAED,mBAAWv/F,OAAX,EAAoBk9F,IAApB,EAA0BxgH,EAA1B,EAA8B3oB,MAA9B,EAAsC6mB,KAAtC,EAA8C;AAE7C,UAAMlG,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAM+qH,cAAc,GAAG/qH,QAAQ,CAAC0e,YAAT,CAAuB,OAAvB,CAAvB,CAJ6C,CAM7C;;AAEAqsG,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD;AAA6DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD,EARhB,CAQ6E;;AAC1HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD;AAA6DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD,EAThB,CAS6E;;AAC1HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD;AAA6DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD,EAVhB,CAU6E;;AAC1HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD;AAA6DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD,EAXhB,CAW6E;AAE1H;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD;AAA6DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,CAAvB,EAA0BkQ,OAAO,CAACxgC,CAAlC,EAAqCwgC,OAAO,CAACphC,CAA7C,EAAgDohC,OAAO,CAAC3nC,CAAxD,EAfhB,CAe6E;;AAC1HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAhBjB,CAgB+E;;AAC5HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAjBjB,CAiB+E;;AAC5HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAlBjB,CAkB+E;AAE5H;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAtBjB,CAsB+E;;AAC5HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAvBjB,CAuB+E;;AAC5HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAxBjB,CAwB+E;;AAC5HonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD;AAA8DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BkQ,OAAO,CAACxgC,CAAnC,EAAsCwgC,OAAO,CAACphC,CAA9C,EAAiDohC,OAAO,CAAC3nC,CAAzD,EAzBjB,CAyB+E;AAE5H;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD;AAAqDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD,EA7BR,CA6B6D;;AAC1GonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD;AAAqDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD,EA9BR,CA8B6D;;AAC1GonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD;AAAqDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD,EA/BR,CA+B6D;;AAC1GonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD;AAAqDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BotG,IAAI,CAAC19H,CAAhC,EAAmC09H,IAAI,CAACt+H,CAAxC,EAA2Cs+H,IAAI,CAAC7kI,CAAhD,EAhCR,CAgC6D;AAE1G;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C;AAA+ConI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C,EApCF,CAoCiD;;AAC9FonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C;AAA+ConI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C,EArCF,CAqCiD;;AAC9FonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C;AAA+ConI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BpT,EAAE,CAACld,CAA9B,EAAiCkd,EAAE,CAAC9d,CAApC,EAAuC8d,EAAE,CAACrkB,CAA1C,EAtCF,CAsCiD;AAE9F;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2B/7B,MAAM,CAACyL,CAAlC,EAAqCzL,MAAM,CAAC6K,CAA5C,EAA+C7K,MAAM,CAACsE,CAAtD;AAA2DonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2B/7B,MAAM,CAACyL,CAAlC,EAAqCzL,MAAM,CAAC6K,CAA5C,EAA+C7K,MAAM,CAACsE,CAAtD,EA1Cd,CA0CyE;;AACtHonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD;AAAwDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD,EA3CX,CA2CmE;AAEhH;;AAEAonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD;AAAwDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD,EA/CX,CA+CmE;;AAChHonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD;AAAwDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD,EAhDX,CAgDmE;;AAEhHonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD;AAAwDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD,EAlDX,CAkDmE;;AAChHonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD;AAAwDonI,MAAAA,cAAc,CAAC3vG,MAAf,CAAuB,EAAvB,EAA2BlV,KAAK,CAACpb,CAAjC,EAAoCob,KAAK,CAAChc,CAA1C,EAA6Cgc,KAAK,CAACviB,CAAnD,EAnDX,CAmDmE;;AAEhHonI,MAAAA,cAAc,CAACr3H,WAAf,GAA6B,IAA7B;AAEA;;;WAED,kBAAS;AAER,UAAMsM,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMsqH,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAMvkI,CAAC,GAAG,CAAV;AAAA,UAAaoE,CAAC,GAAG,CAAjB,CALQ,CAOR;AACA;;AAEAigI,MAAAA,OAAO,CAACrtH,uBAAR,CAAgClP,IAAhC,CAAsC,KAAK8O,MAAL,CAAYI,uBAAlD,EAVQ,CAYR;;;AAEAiuH,MAAAA,QAAQ,CAAE,GAAF,EAAOV,QAAP,EAAiBtqH,QAAjB,EAA2BoqH,OAA3B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAAE,CAA5C,CAAR;AACAY,MAAAA,QAAQ,CAAE,GAAF,EAAOV,QAAP,EAAiBtqH,QAAjB,EAA2BoqH,OAA3B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,CAAR,CAfQ,CAiBR;;AAEAY,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAAErkI,CAAvC,EAA0C,CAAEoE,CAA5C,EAA+C,CAAE,CAAjD,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqCrkI,CAArC,EAAwC,CAAEoE,CAA1C,EAA6C,CAAE,CAA/C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAAErkI,CAAvC,EAA0CoE,CAA1C,EAA6C,CAAE,CAA/C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqCrkI,CAArC,EAAwCoE,CAAxC,EAA2C,CAAE,CAA7C,CAAR,CAtBQ,CAwBR;;AAEA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAAErkI,CAAvC,EAA0C,CAAEoE,CAA5C,EAA+C,CAA/C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqCrkI,CAArC,EAAwC,CAAEoE,CAA1C,EAA6C,CAA7C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAAErkI,CAAvC,EAA0CoE,CAA1C,EAA6C,CAA7C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqCrkI,CAArC,EAAwCoE,CAAxC,EAA2C,CAA3C,CAAR,CA7BQ,CA+BR;;AAEA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqCrkI,CAAC,GAAG,GAAzC,EAA8CoE,CAAC,GAAG,GAAlD,EAAuD,CAAE,CAAzD,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAAErkI,CAAF,GAAM,GAA3C,EAAgDoE,CAAC,GAAG,GAApD,EAAyD,CAAE,CAA3D,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,IAAF,EAAQV,QAAR,EAAkBtqH,QAAlB,EAA4BoqH,OAA5B,EAAqC,CAArC,EAAwCjgI,CAAC,GAAG,CAA5C,EAA+C,CAAE,CAAjD,CAAR,CAnCQ,CAqCR;;AAEA6gI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAErkI,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAR;AACAilI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsCrkI,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAR;AACAilI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAtC,EAAyC,CAAEjgI,CAA3C,EAA8C,CAA9C,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAtC,EAAyCjgI,CAAzC,EAA4C,CAA5C,CAAR;AAEA6gI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAErkI,CAAxC,EAA2C,CAA3C,EAA8C,CAAE,CAAhD,CAAR;AACAilI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsCrkI,CAAtC,EAAyC,CAAzC,EAA4C,CAAE,CAA9C,CAAR;AACAilI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAtC,EAAyC,CAAEjgI,CAA3C,EAA8C,CAAE,CAAhD,CAAR;AACA6gI,MAAAA,QAAQ,CAAE,KAAF,EAASV,QAAT,EAAmBtqH,QAAnB,EAA6BoqH,OAA7B,EAAsC,CAAtC,EAAyCjgI,CAAzC,EAA4C,CAAE,CAA9C,CAAR;AAEA6V,MAAAA,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,EAAoChrB,WAApC,GAAkD,IAAlD;AAEA;;;WAED,mBAAU;AAET,WAAKsM,QAAL,CAAc3J,OAAd;AACA,WAAKia,QAAL,CAAcja,OAAd;AAEA;;;;EAjOyBukF,Y;;AAsO3B,SAASowC,QAAT,CAAmBprH,KAAnB,EAA0B0qH,QAA1B,EAAoCtqH,QAApC,EAA8CrD,MAA9C,EAAsDzb,CAAtD,EAAyDM,CAAzD,EAA4D4S,CAA5D,EAAgE;AAE/D+1H,EAAAA,OAAO,CAAC3lI,GAAR,CAAatD,CAAb,EAAgBM,CAAhB,EAAmB4S,CAAnB,EAAuBgzH,SAAvB,CAAkCzqH,MAAlC;;AAEA,MAAMsC,MAAM,GAAGqrH,QAAQ,CAAE1qH,KAAF,CAAvB;;AAEA,MAAKX,MAAM,KAAKpgB,SAAhB,EAA4B;AAE3B,QAAMqhB,QAAQ,GAAGF,QAAQ,CAAC0e,YAAT,CAAuB,UAAvB,CAAjB;;AAEA,SAAM,IAAIl/B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGwf,MAAM,CAACvf,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD0gB,MAAAA,QAAQ,CAACkb,MAAT,CAAiBnc,MAAM,CAAEzf,CAAF,CAAvB,EAA8B2qI,OAAO,CAACjpI,CAAtC,EAAyCipI,OAAO,CAAC3oI,CAAjD,EAAoD2oI,OAAO,CAAC/1H,CAA5D;AAEA;AAED;AAED;;AAED,IAAM62H,IAAI,GAAG,aAAc,IAAIzsH,IAAJ,EAA3B;;IAEM0sH,S;;;;;AAEL,qBAAa3rH,MAAb,EAAwC;AAAA;;AAAA,QAAnB3S,KAAmB,uEAAX,QAAW;;AAAA;;AAEvC,QAAMuxB,OAAO,GAAG,IAAIr5B,WAAJ,CAAiB,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,CAAvE,CAAjB,CAAhB;AACA,QAAMs5B,SAAS,GAAG,IAAIv5B,YAAJ,CAAkB,IAAI,CAAtB,CAAlB;AAEA,QAAMmb,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACAzc,IAAAA,QAAQ,CAACshB,QAAT,CAAmB,IAAI7G,eAAJ,CAAqB0D,OAArB,EAA8B,CAA9B,CAAnB;AACAne,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAInD,eAAJ,CAAqB2D,SAArB,EAAgC,CAAhC,CAAnC;AAEA,oCAAOpe,QAAP,EAAiB,IAAIojD,iBAAJ,CAAuB;AAAEx2D,MAAAA,KAAK,EAAEA,KAAT;AAAgB+oB,MAAAA,UAAU,EAAE;AAA5B,KAAvB,CAAjB;AAEA,aAAKpW,MAAL,GAAcA,MAAd;AACA,aAAK7gB,IAAL,GAAY,WAAZ;AAEA,aAAKmU,gBAAL,GAAwB,KAAxB;;AAEA,aAAKiF,MAAL;;AAhBuC;AAkBvC;;;;WAED,gBAAQyH,MAAR,EAAiB;AAEhB,UAAKA,MAAM,KAAK1gB,SAAhB,EAA4B;AAE3B4F,QAAAA,OAAO,CAACC,IAAR,CAAc,qDAAd;AAEA;;AAED,UAAK,KAAK6a,MAAL,KAAgB1gB,SAArB,EAAiC;AAEhCosI,QAAAA,IAAI,CAACE,aAAL,CAAoB,KAAK5rH,MAAzB;AAEA;;AAED,UAAK0rH,IAAI,CAACtrH,OAAL,EAAL,EAAsB;AAEtB,UAAM/e,GAAG,GAAGqqI,IAAI,CAACrqI,GAAjB;AACA,UAAMC,GAAG,GAAGoqI,IAAI,CAACpqI,GAAjB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,UAAMqf,QAAQ,GAAG,KAAKF,QAAL,CAAcC,UAAd,CAAyBC,QAA1C;AACA,UAAM5gB,KAAK,GAAG4gB,QAAQ,CAAC5gB,KAAvB;AAEAA,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACK,CAAjB;AAAoB5B,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACW,CAAjB;AAAoBlC,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACuT,CAAjB;AACxC9U,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAasB,GAAG,CAACM,CAAjB;AAAoB5B,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACW,CAAjB;AAAoBlC,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACuT,CAAjB;AACxC9U,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAasB,GAAG,CAACM,CAAjB;AAAoB5B,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAasB,GAAG,CAACY,CAAjB;AAAoBlC,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACuT,CAAjB;AACxC9U,MAAAA,KAAK,CAAE,CAAF,CAAL,GAAauB,GAAG,CAACK,CAAjB;AAAoB5B,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACY,CAAlB;AAAqBlC,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcuB,GAAG,CAACuT,CAAlB;AACzC9U,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcuB,GAAG,CAACK,CAAlB;AAAqB5B,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcuB,GAAG,CAACW,CAAlB;AAAqBlC,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACwT,CAAlB;AAC1C9U,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACM,CAAlB;AAAqB5B,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcuB,GAAG,CAACW,CAAlB;AAAqBlC,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACwT,CAAlB;AAC1C9U,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACM,CAAlB;AAAqB5B,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACY,CAAlB;AAAqBlC,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACwT,CAAlB;AAC1C9U,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcuB,GAAG,CAACK,CAAlB;AAAqB5B,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACY,CAAlB;AAAqBlC,MAAAA,KAAK,CAAE,EAAF,CAAL,GAAcsB,GAAG,CAACwT,CAAlB;AAE1C8L,MAAAA,QAAQ,CAACxM,WAAT,GAAuB,IAAvB;AAEA,WAAKsM,QAAL,CAAcod,qBAAd;AAGA;;;WAED,uBAAe7d,MAAf,EAAwB;AAEvB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKzH,MAAL;AAEA,aAAO,IAAP;AAEA;;;WAED,cAAMrK,MAAN,EAAcojB,SAAd,EAA0B;AAEzB,0EAAYpjB,MAAZ,EAAoBojB,SAApB;;AAEA,WAAKtR,MAAL,GAAc9R,MAAM,CAAC8R,MAArB;AAEA,aAAO,IAAP;AAEA;;;;EA7FsBq7E,Y;;IAiGlBwwC,U;;;;;AAEL,sBAAa1rH,GAAb,EAAqC;AAAA;;AAAA,QAAnB9S,KAAmB,uEAAX,QAAW;;AAAA;;AAEpC,QAAMuxB,OAAO,GAAG,IAAIr5B,WAAJ,CAAiB,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,CAAvE,CAAjB,CAAhB;AAEA,QAAMs5B,SAAS,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAE,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAE,CAAxB,EAA2B,CAAE,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAE,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAAE,CAAtD,EAAyD,CAAE,CAA3D,EAA8D,CAA9D,EAAiE,CAAE,CAAnE,EAAsE,CAAE,CAAxE,EAA2E,CAAE,CAA7E,EAAgF,CAAE,CAAlF,EAAqF,CAArF,EAAwF,CAAE,CAA1F,EAA6F,CAAE,CAA/F,CAAlB;AAEA,QAAMpe,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AAEAzc,IAAAA,QAAQ,CAACshB,QAAT,CAAmB,IAAI7G,eAAJ,CAAqB0D,OAArB,EAA8B,CAA9B,CAAnB;AAEAne,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BoC,SAA5B,EAAuC,CAAvC,CAAnC;AAEA,oCAAOpe,QAAP,EAAiB,IAAIojD,iBAAJ,CAAuB;AAAEx2D,MAAAA,KAAK,EAAEA,KAAT;AAAgB+oB,MAAAA,UAAU,EAAE;AAA5B,KAAvB,CAAjB;AAEA,aAAKjW,GAAL,GAAWA,GAAX;AAEA,aAAKhhB,IAAL,GAAY,YAAZ;;AAEA,aAAKshB,QAAL,CAAcod,qBAAd;;AAlBoC;AAoBpC;;;;WAED,2BAAmB1O,KAAnB,EAA2B;AAE1B,UAAMhP,GAAG,GAAG,KAAKA,GAAjB;AAEA,UAAKA,GAAG,CAACC,OAAJ,EAAL,EAAqB;AAErBD,MAAAA,GAAG,CAACoB,SAAJ,CAAe,KAAKZ,QAApB;AAEAR,MAAAA,GAAG,CAACiC,OAAJ,CAAa,KAAK2H,KAAlB;AAEA,WAAKA,KAAL,CAAWpjB,cAAX,CAA2B,GAA3B;;AAEA,wFAAyBwoB,KAAzB;AAEA;;;;EAtCuBksE,Y;;IA0CnBywC,W;;;;;AAEL,uBAAa1qH,KAAb,EAA+C;AAAA;;AAAA,QAA3BlS,IAA2B,uEAApB,CAAoB;AAAA,QAAjBT,GAAiB,uEAAX,QAAW;;AAAA;;AAE9C,QAAMpB,KAAK,GAAGoB,GAAd;AAEA,QAAMowB,SAAS,GAAG,CAAE,CAAF,EAAK,CAAE,CAAP,EAAU,CAAV,EAAa,CAAE,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAE,CAA1B,EAA6B,CAAE,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAAE,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,CAAE,CAA3D,EAA8D,CAAE,CAAhE,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,CAAE,CAA3E,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,CAAvF,EAA0F,CAA1F,EAA6F,CAA7F,EAAgG,CAAhG,EAAmG,CAAnG,EAAsG,CAAtG,EAAyG,CAAzG,CAAlB;AAEA,QAAMpe,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BoC,SAA5B,EAAuC,CAAvC,CAAnC;AACApe,IAAAA,QAAQ,CAACod,qBAAT;AAEA,oCAAOpd,QAAP,EAAiB,IAAIojD,iBAAJ,CAAuB;AAAEx2D,MAAAA,KAAK,EAAEA,KAAT;AAAgB+oB,MAAAA,UAAU,EAAE;AAA5B,KAAvB,CAAjB;AAEA,aAAKj3B,IAAL,GAAY,aAAZ;AAEA,aAAKiiB,KAAL,GAAaA,KAAb;AAEA,aAAKlS,IAAL,GAAYA,IAAZ;AAEA,QAAM68H,UAAU,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAE,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAE,CAAxB,EAA2B,CAAE,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAAE,CAA9C,EAAiD,CAAE,CAAnD,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,CAAE,CAA9D,EAAiE,CAAjE,CAAnB;AAEA,QAAMvqG,SAAS,GAAG,IAAItE,cAAJ,EAAlB;AACAsE,IAAAA,SAAS,CAACnD,YAAV,CAAwB,UAAxB,EAAoC,IAAI5B,sBAAJ,CAA4BsvG,UAA5B,EAAwC,CAAxC,CAApC;AACAvqG,IAAAA,SAAS,CAAC3D,qBAAV;;AAEA,aAAK9d,GAAL,CAAU,IAAIkjB,IAAJ,CAAUzB,SAAV,EAAqB,IAAI3G,iBAAJ,CAAuB;AAAExtB,MAAAA,KAAK,EAAEA,KAAT;AAAgBgnB,MAAAA,OAAO,EAAE,GAAzB;AAA8BC,MAAAA,WAAW,EAAE,IAA3C;AAAiDS,MAAAA,UAAU,EAAE,KAA7D;AAAoEqB,MAAAA,UAAU,EAAE;AAAhF,KAAvB,CAArB,CAAV;;AAxB8C;AA0B9C;;;;WAED,2BAAmBjH,KAAnB,EAA2B;AAE1B,UAAIpF,KAAK,GAAG,CAAE,KAAK3I,KAAL,CAAWC,QAAzB;AAEA,UAAK7gB,IAAI,CAACiC,GAAL,CAAUsnB,KAAV,IAAoB,IAAzB,EAAgCA,KAAK,GAAG,IAAR,CAJN,CAIoB;;AAE9C,WAAKA,KAAL,CAAW9kB,GAAX,CAAgB,MAAM,KAAKiK,IAA3B,EAAiC,MAAM,KAAKA,IAA5C,EAAkD6a,KAAlD;AAEA,WAAK9I,QAAL,CAAe,CAAf,EAAmB8P,QAAnB,CAA4BoD,IAA5B,GAAqCpK,KAAK,GAAG,CAAV,GAAgB/0B,QAAhB,GAA2BD,SAA9D,CAR0B,CAQ+C;;AAEzE,WAAK25B,MAAL,CAAa,KAAKtN,KAAL,CAAW7C,MAAxB;;AAEA,yFAAyB4Q,KAAzB;AAEA;;;;EA5CwBsrE,I;;AAgD1B,IAAMuxC,KAAK,GAAG,aAAc,IAAI3vH,OAAJ,EAA5B;;AACA,IAAI4vH,aAAJ,EAAmBC,aAAnB;;IAEMC,W;;;;;AAEL;AAEA,yBAAoK;AAAA;;AAAA,QAAvJlwH,GAAuJ,uEAAjJ,IAAII,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAiJ;AAAA,QAAzHiI,MAAyH,uEAAhH,IAAIjI,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAgH;AAAA,QAAxFlc,MAAwF,uEAA/E,CAA+E;AAAA,QAA5EkN,KAA4E,uEAApE,QAAoE;AAAA,QAA1D++H,UAA0D,uEAA7CjsI,MAAM,GAAG,GAAoC;AAAA,QAA/BksI,SAA+B,uEAAnBD,UAAU,GAAG,GAAM;;AAAA;;AAEnK;AAEA,aAAKjtI,IAAL,GAAY,aAAZ;;AAEA,QAAK8sI,aAAa,KAAK3sI,SAAvB,EAAmC;AAElC2sI,MAAAA,aAAa,GAAG,IAAI/uG,cAAJ,EAAhB;;AACA+uG,MAAAA,aAAa,CAAC5tG,YAAd,CAA4B,UAA5B,EAAwC,IAAI5B,sBAAJ,CAA4B,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAA5B,EAAkD,CAAlD,CAAxC;;AAEAyvG,MAAAA,aAAa,GAAG,IAAI3mC,gBAAJ,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAAhB;;AACA2mC,MAAAA,aAAa,CAAC9tG,SAAd,CAAyB,CAAzB,EAA4B,CAAE,GAA9B,EAAmC,CAAnC;AAEA;;AAED,aAAKzd,QAAL,CAAcrS,IAAd,CAAoBgW,MAApB;;AAEA,aAAK4mB,IAAL,GAAY,IAAIuvD,IAAJ,CAAUwxC,aAAV,EAAyB,IAAIpoE,iBAAJ,CAAuB;AAAEx2D,MAAAA,KAAK,EAAEA,KAAT;AAAgB+oB,MAAAA,UAAU,EAAE;AAA5B,KAAvB,CAAzB,CAAZ;AACA,aAAK8U,IAAL,CAAU53B,gBAAV,GAA6B,KAA7B;;AACA,aAAKyM,GAAL,CAAU,SAAKmrB,IAAf;;AAEA,aAAK+9F,IAAL,GAAY,IAAIhmG,IAAJ,CAAUipG,aAAV,EAAyB,IAAIrxG,iBAAJ,CAAuB;AAAExtB,MAAAA,KAAK,EAAEA,KAAT;AAAgB+oB,MAAAA,UAAU,EAAE;AAA5B,KAAvB,CAAzB,CAAZ;AACA,aAAK6yG,IAAL,CAAU31H,gBAAV,GAA6B,KAA7B;;AACA,aAAKyM,GAAL,CAAU,SAAKkpH,IAAf;;AAEA,aAAKqD,YAAL,CAAmBrwH,GAAnB;;AACA,aAAKswH,SAAL,CAAgBpsI,MAAhB,EAAwBisI,UAAxB,EAAoCC,SAApC;;AA3BmK;AA6BnK;;;;WAED,sBAAcpwH,GAAd,EAAoB;AAEnB;AAEA,UAAKA,GAAG,CAACha,CAAJ,GAAQ,OAAb,EAAuB;AAEtB,aAAKoW,UAAL,CAAgBpT,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AAEA,OAJD,MAIO,IAAKgX,GAAG,CAACha,CAAJ,GAAQ,CAAE,OAAf,EAAyB;AAE/B,aAAKoW,UAAL,CAAgBpT,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AAEA,OAJM,MAIA;AAEN+mI,QAAAA,KAAK,CAAC/mI,GAAN,CAAWgX,GAAG,CAACpH,CAAf,EAAkB,CAAlB,EAAqB,CAAEoH,GAAG,CAACta,CAA3B,EAA+BiE,SAA/B;;AAEA,YAAMnC,OAAO,GAAGjD,IAAI,CAACuU,IAAL,CAAWkH,GAAG,CAACha,CAAf,CAAhB;AAEA,aAAKoW,UAAL,CAAgBsE,gBAAhB,CAAkCqvH,KAAlC,EAAyCvoI,OAAzC;AAEA;AAED;;;WAED,mBAAWtD,MAAX,EAA6E;AAAA,UAA1DisI,UAA0D,uEAA7CjsI,MAAM,GAAG,GAAoC;AAAA,UAA/BksI,SAA+B,uEAAnBD,UAAU,GAAG,GAAM;AAE5E,WAAKlhG,IAAL,CAAUnhB,KAAV,CAAgB9kB,GAAhB,CAAqB,CAArB,EAAwBzE,IAAI,CAACc,GAAL,CAAU,MAAV,EAAkBnB,MAAM,GAAGisI,UAA3B,CAAxB,EAAiE,CAAjE,EAF4E,CAEN;;AACtE,WAAKlhG,IAAL,CAAUld,YAAV;AAEA,WAAKi7G,IAAL,CAAUl/G,KAAV,CAAgB9kB,GAAhB,CAAqBonI,SAArB,EAAgCD,UAAhC,EAA4CC,SAA5C;AACA,WAAKpD,IAAL,CAAUtoH,QAAV,CAAmB1e,CAAnB,GAAuB9B,MAAvB;AACA,WAAK8oI,IAAL,CAAUj7G,YAAV;AAEA;;;WAED,kBAAU3gB,KAAV,EAAkB;AAEjB,WAAK69B,IAAL,CAAUna,QAAV,CAAmB1jB,KAAnB,CAAyBpI,GAAzB,CAA8BoI,KAA9B;AACA,WAAK47H,IAAL,CAAUl4G,QAAV,CAAmB1jB,KAAnB,CAAyBpI,GAAzB,CAA8BoI,KAA9B;AAEA;;;WAED,cAAMa,MAAN,EAAe;AAEd,4EAAYA,MAAZ,EAAoB,KAApB;;AAEA,WAAKg9B,IAAL,CAAU58B,IAAV,CAAgBJ,MAAM,CAACg9B,IAAvB;AACA,WAAK+9F,IAAL,CAAU36H,IAAV,CAAgBJ,MAAM,CAAC+6H,IAAvB;AAEA,aAAO,IAAP;AAEA;;;;EAtFwBr8G,Q;;IA0FpB4/G,U;;;;;AAEL,wBAAwB;AAAA;;AAAA,QAAXt9H,IAAW,uEAAJ,CAAI;;AAAA;;AAEvB,QAAM01B,QAAQ,GAAG,CAChB,CADgB,EACb,CADa,EACV,CADU,EACP11B,IADO,EACD,CADC,EACE,CADF,EAEhB,CAFgB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJA,IAFI,EAEE,CAFF,EAGhB,CAHgB,EAGb,CAHa,EAGV,CAHU,EAGP,CAHO,EAGJ,CAHI,EAGDA,IAHC,CAAjB;AAMA,QAAMwsB,MAAM,GAAG,CACd,CADc,EACX,CADW,EACR,CADQ,EACL,CADK,EACF,GADE,EACG,CADH,EAEd,CAFc,EAEX,CAFW,EAER,CAFQ,EAEL,GAFK,EAEA,CAFA,EAEG,CAFH,EAGd,CAHc,EAGX,CAHW,EAGR,CAHQ,EAGL,CAHK,EAGF,GAHE,EAGG,CAHH,CAAf;AAMA,QAAMjb,QAAQ,GAAG,IAAIyc,cAAJ,EAAjB;AACAzc,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,UAAvB,EAAmC,IAAI5B,sBAAJ,CAA4BmI,QAA5B,EAAsC,CAAtC,CAAnC;AACAnkB,IAAAA,QAAQ,CAAC4d,YAAT,CAAuB,OAAvB,EAAgC,IAAI5B,sBAAJ,CAA4Bf,MAA5B,EAAoC,CAApC,CAAhC;AAEA,QAAM3K,QAAQ,GAAG,IAAI8yC,iBAAJ,CAAuB;AAAEzvC,MAAAA,YAAY,EAAE,IAAhB;AAAsBgC,MAAAA,UAAU,EAAE;AAAlC,KAAvB,CAAjB;AAEA,oCAAO3V,QAAP,EAAiBsQ,QAAjB;AAEA,aAAK5xB,IAAL,GAAY,YAAZ;AAtBuB;AAwBvB;;;;WAED,mBAAWstI,UAAX,EAAuBC,UAAvB,EAAmCC,UAAnC,EAAgD;AAE/C,UAAMt/H,KAAK,GAAG,IAAIc,KAAJ,EAAd;AACA,UAAMpO,KAAK,GAAG,KAAK0gB,QAAL,CAAcC,UAAd,CAAyBrT,KAAzB,CAA+BtN,KAA7C;AAEAsN,MAAAA,KAAK,CAACpI,GAAN,CAAWwnI,UAAX;AACAp/H,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,CAAtB;AACAsN,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,CAAtB;AAEAsN,MAAAA,KAAK,CAACpI,GAAN,CAAWynI,UAAX;AACAr/H,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,CAAtB;AACAsN,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,CAAtB;AAEAsN,MAAAA,KAAK,CAACpI,GAAN,CAAW0nI,UAAX;AACAt/H,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,EAAtB;AACAsN,MAAAA,KAAK,CAACuiB,OAAN,CAAe7vB,KAAf,EAAsB,EAAtB;AAEA,WAAK0gB,QAAL,CAAcC,UAAd,CAAyBrT,KAAzB,CAA+B8G,WAA/B,GAA6C,IAA7C;AAEA,aAAO,IAAP;AAEA;;;WAED,mBAAU;AAET,WAAKsM,QAAL,CAAc3J,OAAd;AACA,WAAKia,QAAL,CAAcja,OAAd;AAEA;;;;EAxDuBukF,Y;;IA4DnBuxC,S;AAEL,uBAAc;AAAA;;AAEb,SAAKztI,IAAL,GAAY,WAAZ;AAEA,SAAKkO,KAAL,GAAa,IAAIc,KAAJ,EAAb;AAEA,SAAK0+H,QAAL,GAAgB,EAAhB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AAEA;;;;WAED,gBAAQnrI,CAAR,EAAWM,CAAX,EAAe;AAEd,WAAK6qI,WAAL,GAAmB,IAAItpC,IAAJ,EAAnB;AACA,WAAKqpC,QAAL,CAAcptI,IAAd,CAAoB,KAAKqtI,WAAzB;AACA,WAAKA,WAAL,CAAiBppC,MAAjB,CAAyB/hG,CAAzB,EAA4BM,CAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,gBAAQN,CAAR,EAAWM,CAAX,EAAe;AAEd,WAAK6qI,WAAL,CAAiBnpC,MAAjB,CAAyBhiG,CAAzB,EAA4BM,CAA5B;AAEA,aAAO,IAAP;AAEA;;;WAED,0BAAkB2hG,IAAlB,EAAwBC,IAAxB,EAA8BhF,EAA9B,EAAkCC,EAAlC,EAAuC;AAEtC,WAAKguC,WAAL,CAAiBC,gBAAjB,CAAmCnpC,IAAnC,EAAyCC,IAAzC,EAA+ChF,EAA/C,EAAmDC,EAAnD;AAEA,aAAO,IAAP;AAEA;;;WAED,uBAAegF,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CpF,EAA3C,EAA+CC,EAA/C,EAAoD;AAEnD,WAAKguC,WAAL,CAAiBE,aAAjB,CAAgClpC,KAAhC,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,KAArD,EAA4DpF,EAA5D,EAAgEC,EAAhE;AAEA,aAAO,IAAP;AAEA;;;WAED,oBAAYuE,GAAZ,EAAkB;AAEjB,WAAKypC,WAAL,CAAiBG,UAAjB,CAA6B5pC,GAA7B;AAEA,aAAO,IAAP;AAEA;;;WAED,kBAAU6pC,KAAV,EAAiBC,OAAjB,EAA2B;AAE1B,eAASC,eAAT,CAA0BC,UAA1B,EAAuC;AAEtC,YAAM59G,MAAM,GAAG,EAAf;;AAEA,aAAM,IAAIxvB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGmtI,UAAU,CAACltI,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,cAAMqtI,QAAO,GAAGD,UAAU,CAAEptI,CAAF,CAA1B;;AAEA,cAAMstI,SAAQ,GAAG,IAAItkC,KAAJ,EAAjB;;AACAskC,UAAAA,SAAQ,CAAC9qC,MAAT,GAAkB6qC,QAAO,CAAC7qC,MAA1B;AAEAhzE,UAAAA,MAAM,CAAChwB,IAAP,CAAa8tI,SAAb;AAEA;;AAED,eAAO99G,MAAP;AAEA;;AAED,eAAS+9G,oBAAT,CAA+Bl9B,IAA/B,EAAqCm9B,SAArC,EAAiD;AAEhD,YAAMC,OAAO,GAAGD,SAAS,CAACttI,MAA1B,CAFgD,CAIhD;AACA;AACA;AACA;;AACA,YAAIqtG,MAAM,GAAG,KAAb;;AACA,aAAM,IAAIx/F,CAAC,GAAG0/H,OAAO,GAAG,CAAlB,EAAqBxpI,CAAC,GAAG,CAA/B,EAAkCA,CAAC,GAAGwpI,OAAtC,EAA+C1/H,CAAC,GAAG9J,CAAC,EAApD,EAA0D;AAEzD,cAAIypI,SAAS,GAAGF,SAAS,CAAEz/H,CAAF,CAAzB;AACA,cAAI4/H,UAAU,GAAGH,SAAS,CAAEvpI,CAAF,CAA1B;AAEA,cAAI2pI,MAAM,GAAGD,UAAU,CAACjsI,CAAX,GAAegsI,SAAS,CAAChsI,CAAtC;AACA,cAAImsI,MAAM,GAAGF,UAAU,CAAC3rI,CAAX,GAAe0rI,SAAS,CAAC1rI,CAAtC;;AAEA,cAAKzB,IAAI,CAACiC,GAAL,CAAUqrI,MAAV,IAAqB10H,MAAM,CAACC,OAAjC,EAA2C;AAE1C;AACA,gBAAKy0H,MAAM,GAAG,CAAd,EAAkB;AAEjBH,cAAAA,SAAS,GAAGF,SAAS,CAAEvpI,CAAF,CAArB;AAA4B2pI,cAAAA,MAAM,GAAG,CAAEA,MAAX;AAC5BD,cAAAA,UAAU,GAAGH,SAAS,CAAEz/H,CAAF,CAAtB;AAA6B8/H,cAAAA,MAAM,GAAG,CAAEA,MAAX;AAE7B;;AAED,gBAAOx9B,IAAI,CAACruG,CAAL,GAAS0rI,SAAS,CAAC1rI,CAArB,IAA8BquG,IAAI,CAACruG,CAAL,GAAS2rI,UAAU,CAAC3rI,CAAvD,EAA+D;;AAE/D,gBAAKquG,IAAI,CAACruG,CAAL,KAAW0rI,SAAS,CAAC1rI,CAA1B,EAA8B;AAE7B,kBAAKquG,IAAI,CAAC3uG,CAAL,KAAWgsI,SAAS,CAAChsI,CAA1B,EAA+B,OAAO,IAAP,CAFF,CAEgB;AAC7C;AAEA,aALD,MAKO;AAEN,kBAAMosI,QAAQ,GAAGD,MAAM,IAAKx9B,IAAI,CAAC3uG,CAAL,GAASgsI,SAAS,CAAChsI,CAAxB,CAAN,GAAoCksI,MAAM,IAAKv9B,IAAI,CAACruG,CAAL,GAAS0rI,SAAS,CAAC1rI,CAAxB,CAA3D;AACA,kBAAK8rI,QAAQ,KAAK,CAAlB,EAAyB,OAAO,IAAP,CAHnB,CAGiC;;AACvC,kBAAKA,QAAQ,GAAG,CAAhB,EAAwB;AACxBvgC,cAAAA,MAAM,GAAG,CAAEA,MAAX,CALM,CAKc;AAEpB;AAED,WA1BD,MA0BO;AAEN;AACA,gBAAK8C,IAAI,CAACruG,CAAL,KAAW0rI,SAAS,CAAC1rI,CAA1B,EAAgC,SAH1B,CAGsC;AAC5C;;AACA,gBAAS2rI,UAAU,CAACjsI,CAAX,IAAgB2uG,IAAI,CAAC3uG,CAAvB,IAAgC2uG,IAAI,CAAC3uG,CAAL,IAAUgsI,SAAS,CAAChsI,CAAtD,IACCgsI,SAAS,CAAChsI,CAAV,IAAe2uG,IAAI,CAAC3uG,CAAtB,IAA+B2uG,IAAI,CAAC3uG,CAAL,IAAUisI,UAAU,CAACjsI,CADxD,EACiE,OAAO,IAAP,CAN3D,CAMwE;AAC9E;AAEA;AAED;;AAED,eAAO6rG,MAAP;AAEA;;AAED,UAAMqC,WAAW,GAAGjC,UAAU,CAACiC,WAA/B;AAEA,UAAMg9B,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAKA,QAAQ,CAAC1sI,MAAT,KAAoB,CAAzB,EAA6B,OAAO,EAAP;AAE7B,UAAKgtI,OAAO,KAAK,IAAjB,EAAwB,OAAOC,eAAe,CAAEP,QAAF,CAAtB;AAGxB,UAAImB,KAAJ,EAAWV,OAAX,EAAoBC,QAApB;AACA,UAAM99G,MAAM,GAAG,EAAf;;AAEA,UAAKo9G,QAAQ,CAAC1sI,MAAT,KAAoB,CAAzB,EAA6B;AAE5BmtI,QAAAA,OAAO,GAAGT,QAAQ,CAAE,CAAF,CAAlB;AACAU,QAAAA,QAAQ,GAAG,IAAItkC,KAAJ,EAAX;AACAskC,QAAAA,QAAQ,CAAC9qC,MAAT,GAAkB6qC,OAAO,CAAC7qC,MAA1B;AACAhzE,QAAAA,MAAM,CAAChwB,IAAP,CAAa8tI,QAAb;AACA,eAAO99G,MAAP;AAEA;;AAED,UAAIw+G,UAAU,GAAG,CAAEp+B,WAAW,CAAEg9B,QAAQ,CAAE,CAAF,CAAR,CAAcvpC,SAAd,EAAF,CAA9B;AACA2qC,MAAAA,UAAU,GAAGf,KAAK,GAAG,CAAEe,UAAL,GAAkBA,UAApC,CAvG0B,CAyG1B;;AAEA,UAAMC,gBAAgB,GAAG,EAAzB;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,SAAJ;AAEAH,MAAAA,SAAS,CAAEE,OAAF,CAAT,GAAuB/uI,SAAvB;AACA8uI,MAAAA,aAAa,CAAEC,OAAF,CAAb,GAA2B,EAA3B;;AAEA,WAAM,IAAIpuI,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG2sI,QAAQ,CAAC1sI,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAoD;AAEnDqtI,QAAAA,OAAO,GAAGT,QAAQ,CAAE5sI,CAAF,CAAlB;AACAquI,QAAAA,SAAS,GAAGhB,OAAO,CAAChqC,SAAR,EAAZ;AACA0qC,QAAAA,KAAK,GAAGn+B,WAAW,CAAEy+B,SAAF,CAAnB;AACAN,QAAAA,KAAK,GAAGd,KAAK,GAAG,CAAEc,KAAL,GAAaA,KAA1B;;AAEA,YAAKA,KAAL,EAAa;AAEZ,cAAO,CAAEC,UAAJ,IAAsBE,SAAS,CAAEE,OAAF,CAApC,EAAoDA,OAAO;AAE3DF,UAAAA,SAAS,CAAEE,OAAF,CAAT,GAAuB;AAAEjrI,YAAAA,CAAC,EAAE,IAAI6lG,KAAJ,EAAL;AAAkBj7F,YAAAA,CAAC,EAAEsgI;AAArB,WAAvB;AACAH,UAAAA,SAAS,CAAEE,OAAF,CAAT,CAAqBjrI,CAArB,CAAuBq/F,MAAvB,GAAgC6qC,OAAO,CAAC7qC,MAAxC;AAEA,cAAKwrC,UAAL,EAAkBI,OAAO;AACzBD,UAAAA,aAAa,CAAEC,OAAF,CAAb,GAA2B,EAA3B,CARY,CAUZ;AAEA,SAZD,MAYO;AAEND,UAAAA,aAAa,CAAEC,OAAF,CAAb,CAAyB5uI,IAAzB,CAA+B;AAAEmL,YAAAA,CAAC,EAAE0iI,OAAL;AAAct/H,YAAAA,CAAC,EAAEsgI,SAAS,CAAE,CAAF;AAA1B,WAA/B,EAFM,CAIN;AAEA;AAED,OA/IyB,CAiJ1B;;;AACA,UAAK,CAAEH,SAAS,CAAE,CAAF,CAAhB,EAAwB,OAAOf,eAAe,CAAEP,QAAF,CAAtB;;AAGxB,UAAKsB,SAAS,CAAChuI,MAAV,GAAmB,CAAxB,EAA4B;AAE3B,YAAIouI,SAAS,GAAG,KAAhB;AACA,YAAIC,QAAQ,GAAG,CAAf;;AAEA,aAAM,IAAIC,IAAI,GAAG,CAAX,EAAcC,IAAI,GAAGP,SAAS,CAAChuI,MAArC,EAA6CsuI,IAAI,GAAGC,IAApD,EAA0DD,IAAI,EAA9D,EAAoE;AAEnEP,UAAAA,gBAAgB,CAAEO,IAAF,CAAhB,GAA2B,EAA3B;AAEA;;AAED,aAAM,IAAIA,KAAI,GAAG,CAAX,EAAcC,KAAI,GAAGP,SAAS,CAAChuI,MAArC,EAA6CsuI,KAAI,GAAGC,KAApD,EAA0DD,KAAI,EAA9D,EAAoE;AAEnE,cAAME,GAAG,GAAGP,aAAa,CAAEK,KAAF,CAAzB;;AAEA,eAAM,IAAIG,IAAI,GAAG,CAAjB,EAAoBA,IAAI,GAAGD,GAAG,CAACxuI,MAA/B,EAAuCyuI,IAAI,EAA3C,EAAiD;AAEhD,gBAAMC,EAAE,GAAGF,GAAG,CAAEC,IAAF,CAAd;AACA,gBAAIE,eAAe,GAAG,IAAtB;;AAEA,iBAAM,IAAIC,KAAK,GAAG,CAAlB,EAAqBA,KAAK,GAAGZ,SAAS,CAAChuI,MAAvC,EAA+C4uI,KAAK,EAApD,EAA0D;AAEzD,kBAAKvB,oBAAoB,CAAEqB,EAAE,CAAC7gI,CAAL,EAAQmgI,SAAS,CAAEY,KAAF,CAAT,CAAmB/gI,CAA3B,CAAzB,EAA0D;AAEzD,oBAAKygI,KAAI,KAAKM,KAAd,EAAsBP,QAAQ;;AAE9B,oBAAKM,eAAL,EAAuB;AAEtBA,kBAAAA,eAAe,GAAG,KAAlB;AACAZ,kBAAAA,gBAAgB,CAAEa,KAAF,CAAhB,CAA0BtvI,IAA1B,CAAgCovI,EAAhC;AAEA,iBALD,MAKO;AAENN,kBAAAA,SAAS,GAAG,IAAZ;AAEA;AAED;AAED;;AAED,gBAAKO,eAAL,EAAuB;AAEtBZ,cAAAA,gBAAgB,CAAEO,KAAF,CAAhB,CAAyBhvI,IAAzB,CAA+BovI,EAA/B;AAEA;AAED;AAED;;AAED,YAAKL,QAAQ,GAAG,CAAX,IAAgBD,SAAS,KAAK,KAAnC,EAA2C;AAE1CH,UAAAA,aAAa,GAAGF,gBAAhB;AAEA;AAED;;AAED,UAAIc,QAAJ;;AAEA,WAAM,IAAI/uI,IAAC,GAAG,CAAR,EAAW4X,EAAE,GAAGs2H,SAAS,CAAChuI,MAAhC,EAAwCF,IAAC,GAAG4X,EAA5C,EAAgD5X,IAAC,EAAjD,EAAuD;AAEtDstI,QAAAA,QAAQ,GAAGY,SAAS,CAAEluI,IAAF,CAAT,CAAemD,CAA1B;AACAqsB,QAAAA,MAAM,CAAChwB,IAAP,CAAa8tI,QAAb;AACAyB,QAAAA,QAAQ,GAAGZ,aAAa,CAAEnuI,IAAF,CAAxB;;AAEA,aAAM,IAAI0iB,CAAC,GAAG,CAAR,EAAWgc,EAAE,GAAGqwG,QAAQ,CAAC7uI,MAA/B,EAAuCwiB,CAAC,GAAGgc,EAA3C,EAA+Chc,CAAC,EAAhD,EAAsD;AAErD4qH,UAAAA,QAAQ,CAACrkC,KAAT,CAAezpG,IAAf,CAAqBuvI,QAAQ,CAAErsH,CAAF,CAAR,CAAc/X,CAAnC;AAEA;AAED,OA9NyB,CAgO1B;;;AAEA,aAAO6kB,MAAP;AAEA;;;;KAIF;;;AAEA,uBAQI,aAAcw/G,eAAe,EARjC;AAAA,IACYC,UADZ,oBACCC,SADD;AAAA,IAEaC,WAFb,oBAECC,UAFD;AAAA,IAGYC,UAHZ,oBAGCC,SAHD;AAAA,IAIaC,WAJb,oBAICC,UAJD;AAAA,IAKgBC,cALhB,oBAKCC,aALD;AAAA,IAMgBC,cANhB,oBAMCC,aAND;AAAA,IAOcC,YAPd,oBAOCC,WAPD;;AAUA,SAASd,eAAT,GAA2B;AAE1B;AAEA,MAAMxiI,MAAM,GAAG,IAAIusG,WAAJ,CAAiB,CAAjB,CAAf;AACA,MAAMm2B,SAAS,GAAG,IAAI7pI,YAAJ,CAAkBmH,MAAlB,CAAlB;AACA,MAAM4iI,UAAU,GAAG,IAAI/iI,WAAJ,CAAiBG,MAAjB,CAAnB;AAEA,MAAM8iI,SAAS,GAAG,IAAIjjI,WAAJ,CAAiB,GAAjB,CAAlB;AACA,MAAMmjI,UAAU,GAAG,IAAInjI,WAAJ,CAAiB,GAAjB,CAAnB;;AAEA,OAAM,IAAIrM,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,GAArB,EAA0B,EAAGA,CAA7B,EAAiC;AAEhC,QAAM2G,CAAC,GAAG3G,CAAC,GAAG,GAAd,CAFgC,CAIhC;;AAEA,QAAK2G,CAAC,GAAG,CAAE,EAAX,EAAgB;AAEf2oI,MAAAA,SAAS,CAAEtvI,CAAF,CAAT,GAAiB,MAAjB;AACAsvI,MAAAA,SAAS,CAAEtvI,CAAC,GAAG,KAAN,CAAT,GAAyB,MAAzB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAF,CAAV,GAAkB,EAAlB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAC,GAAG,KAAN,CAAV,GAA0B,EAA1B,CALe,CAOf;AAEA,KATD,MASO,IAAK2G,CAAC,GAAG,CAAE,EAAX,EAAgB;AAEtB2oI,MAAAA,SAAS,CAAEtvI,CAAF,CAAT,GAAiB,UAAY,CAAE2G,CAAF,GAAM,EAAnC;AACA2oI,MAAAA,SAAS,CAAEtvI,CAAC,GAAG,KAAN,CAAT,GAA2B,UAAY,CAAE2G,CAAF,GAAM,EAApB,GAA6B,MAAtD;AACA6oI,MAAAA,UAAU,CAAExvI,CAAF,CAAV,GAAkB,CAAE2G,CAAF,GAAM,CAAxB;AACA6oI,MAAAA,UAAU,CAAExvI,CAAC,GAAG,KAAN,CAAV,GAA0B,CAAE2G,CAAF,GAAM,CAAhC,CALsB,CAOtB;AAEA,KATM,MASA,IAAKA,CAAC,IAAI,EAAV,EAAe;AAErB2oI,MAAAA,SAAS,CAAEtvI,CAAF,CAAT,GAAmB2G,CAAC,GAAG,EAAN,IAAc,EAA/B;AACA2oI,MAAAA,SAAS,CAAEtvI,CAAC,GAAG,KAAN,CAAT,GAA6B2G,CAAC,GAAG,EAAN,IAAc,EAAhB,GAAuB,MAAhD;AACA6oI,MAAAA,UAAU,CAAExvI,CAAF,CAAV,GAAkB,EAAlB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAC,GAAG,KAAN,CAAV,GAA0B,EAA1B,CALqB,CAOrB;AAEA,KATM,MASA,IAAK2G,CAAC,GAAG,GAAT,EAAe;AAErB2oI,MAAAA,SAAS,CAAEtvI,CAAF,CAAT,GAAiB,MAAjB;AACAsvI,MAAAA,SAAS,CAAEtvI,CAAC,GAAG,KAAN,CAAT,GAAyB,MAAzB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAF,CAAV,GAAkB,EAAlB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAC,GAAG,KAAN,CAAV,GAA0B,EAA1B,CALqB,CAOrB;AAEA,KATM,MASA;AAENsvI,MAAAA,SAAS,CAAEtvI,CAAF,CAAT,GAAiB,MAAjB;AACAsvI,MAAAA,SAAS,CAAEtvI,CAAC,GAAG,KAAN,CAAT,GAAyB,MAAzB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAF,CAAV,GAAkB,EAAlB;AACAwvI,MAAAA,UAAU,CAAExvI,CAAC,GAAG,KAAN,CAAV,GAA0B,EAA1B;AAEA;AAED,GA9DyB,CAgE1B;;;AAEA,MAAM0vI,aAAa,GAAG,IAAIrjI,WAAJ,CAAiB,IAAjB,CAAtB;AACA,MAAMujI,aAAa,GAAG,IAAIvjI,WAAJ,CAAiB,EAAjB,CAAtB;AACA,MAAMyjI,WAAW,GAAG,IAAIzjI,WAAJ,CAAiB,EAAjB,CAApB;;AAEA,OAAM,IAAIrM,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,IAArB,EAA2B,EAAGA,IAA9B,EAAkC;AAEjC,QAAIwB,CAAC,GAAGxB,IAAC,IAAI,EAAb,CAFiC,CAEhB;;AACjB,QAAI2G,EAAC,GAAG,CAAR,CAHiC,CAGtB;AAEX;;AACA,WAAQ,CAAEnF,CAAC,GAAG,UAAN,MAAuB,CAA/B,EAAmC;AAElCA,MAAAA,CAAC,KAAK,CAAN;AACAmF,MAAAA,EAAC,IAAI,UAAL,CAHkC,CAGjB;AAEjB;;AAEDnF,IAAAA,CAAC,IAAI,CAAE,UAAP,CAbiC,CAad;;AACnBmF,IAAAA,EAAC,IAAI,UAAL,CAdiC,CAchB;;AAEjB+oI,IAAAA,aAAa,CAAE1vI,IAAF,CAAb,GAAqBwB,CAAC,GAAGmF,EAAzB;AAEA;;AAED,OAAM,IAAI3G,IAAC,GAAG,IAAd,EAAoBA,IAAC,GAAG,IAAxB,EAA8B,EAAGA,IAAjC,EAAqC;AAEpC0vI,IAAAA,aAAa,CAAE1vI,IAAF,CAAb,GAAqB,cAAiBA,IAAC,GAAG,IAAN,IAAgB,EAA/B,CAArB;AAEA;;AAED,OAAM,IAAIA,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,EAArB,EAAyB,EAAGA,IAA5B,EAAgC;AAE/B4vI,IAAAA,aAAa,CAAE5vI,IAAF,CAAb,GAAqBA,IAAC,IAAI,EAA1B;AAEA;;AAED4vI,EAAAA,aAAa,CAAE,EAAF,CAAb,GAAsB,UAAtB;AACAA,EAAAA,aAAa,CAAE,EAAF,CAAb,GAAsB,UAAtB;;AAEA,OAAM,IAAI5vI,IAAC,GAAG,EAAd,EAAkBA,IAAC,GAAG,EAAtB,EAA0B,EAAGA,IAA7B,EAAiC;AAEhC4vI,IAAAA,aAAa,CAAE5vI,IAAF,CAAb,GAAqB,cAAiBA,IAAC,GAAG,EAAN,IAAc,EAA7B,CAArB;AAEA;;AAED4vI,EAAAA,aAAa,CAAE,EAAF,CAAb,GAAsB,UAAtB;;AAEA,OAAM,IAAI5vI,IAAC,GAAG,CAAd,EAAiBA,IAAC,GAAG,EAArB,EAAyB,EAAGA,IAA5B,EAAgC;AAE/B,QAAKA,IAAC,KAAK,EAAX,EAAgB;AAEf8vI,MAAAA,WAAW,CAAE9vI,IAAF,CAAX,GAAmB,IAAnB;AAEA;AAED;;AAED,SAAO;AACNkvI,IAAAA,SAAS,EAAEA,SADL;AAENE,IAAAA,UAAU,EAAEA,UAFN;AAGNE,IAAAA,SAAS,EAAEA,SAHL;AAINE,IAAAA,UAAU,EAAEA,UAJN;AAKNE,IAAAA,aAAa,EAAEA,aALT;AAMNE,IAAAA,aAAa,EAAEA,aANT;AAONE,IAAAA,WAAW,EAAEA;AAPP,GAAP;AAUA,C,CAED;;;AAEA,SAASC,WAAT,CAAsBC,GAAtB,EAA4B;AAE3B,MAAKzvI,IAAI,CAACiC,GAAL,CAAUwtI,GAAV,IAAkB,KAAvB,EAA+B/qI,OAAO,CAACC,IAAR,CAAc,oDAAd;AAE/B8qI,EAAAA,GAAG,GAAG9uI,KAAK,CAAE8uI,GAAF,EAAO,CAAE,KAAT,EAAgB,KAAhB,CAAX;AAEAf,EAAAA,UAAU,CAAE,CAAF,CAAV,GAAkBe,GAAlB;AACA,MAAMvlI,CAAC,GAAG0kI,WAAW,CAAE,CAAF,CAArB;AACA,MAAMxoI,CAAC,GAAK8D,CAAC,IAAI,EAAP,GAAc,KAAxB;AACA,SAAO4kI,UAAU,CAAE1oI,CAAF,CAAV,IAAoB,CAAE8D,CAAC,GAAG,UAAN,KAAsB8kI,WAAW,CAAE5oI,CAAF,CAArD,CAAP;AAEA,C,CAED;;;AAEA,SAASspI,aAAT,CAAwBD,GAAxB,EAA8B;AAE7B,MAAMxuI,CAAC,GAAGwuI,GAAG,IAAI,EAAjB;AACAb,EAAAA,WAAW,CAAE,CAAF,CAAX,GAAmBM,cAAc,CAAEI,YAAY,CAAEruI,CAAF,CAAZ,IAAsBwuI,GAAG,GAAG,KAA5B,CAAF,CAAd,GAAwDL,cAAc,CAAEnuI,CAAF,CAAzF;AACA,SAAOytI,UAAU,CAAE,CAAF,CAAjB;AAEA;;AAED,IAAIiB,SAAS,GAAG,aAAapqI,MAAM,CAACC,MAAP,CAAc;AAC1CC,EAAAA,SAAS,EAAE,IAD+B;AAE1C+pI,EAAAA,WAAW,EAAEA,WAF6B;AAG1CE,EAAAA,aAAa,EAAEA;AAH2B,CAAd,CAA7B,C,CAMA;;IAEME,kB;;;;;AAEL,gCAAc;AAAA;;AAEblrI,IAAAA,OAAO,CAACkD,KAAR,CAAe,2FAAf;AAFa;AAKb;;;EAP+B80B,c,GAWjC;;;IAEMmzG,Y;;;;;AAEL,0BAAc;AAAA;;AAEbnrI,IAAAA,OAAO,CAACkD,KAAR,CAAe,+EAAf;AAFa;AAKb;;;EAPyB80B,c,GAW3B;;;AAEA,SAASozG,UAAT,GAAsB;AAErBprI,EAAAA,OAAO,CAACkD,KAAR,CAAe,wEAAf;AAEA,C,CAED;;;AAEA,SAASmoI,IAAT,GAAgB;AAEfrrI,EAAAA,OAAO,CAACkD,KAAR,CAAe,kEAAf;AAEA,C,CAED;;;AAEA,SAASooI,qBAAT,GAAiC;AAEhCtrI,EAAAA,OAAO,CAACkD,KAAR,CAAe,+CAAf;AAEA,C,CAED;;;IAEMqoI,4B;;;;;AAEL,wCAAa//H,KAAb,EAAoBC,MAApB,EAA4BwF,OAA5B,EAAsC;AAAA;;AAAA;;AAErCjR,IAAAA,OAAO,CAACkD,KAAR,CAAe,sJAAf;AACA,oCAAOsI,KAAP,EAAcC,MAAd,EAAsBwF,OAAtB;AACA,aAAKU,OAAL,GAAe,CAAf;AAJqC;AAMrC;;;EARyCX,iB,GAY3C;;;IAEMw6H,kB;;;;;AAEL,8BAAap/H,IAAb,EAAmBZ,KAAnB,EAA0BC,MAA1B,EAAkC0F,KAAlC,EAA0C;AAAA;;AAEzCnR,IAAAA,OAAO,CAACC,IAAR,CAAc,gEAAd;AAFyC,gCAGlCmM,IAHkC,EAG5BZ,KAH4B,EAGrBC,MAHqB,EAGb0F,KAHa;AAKzC;;;EAP+BY,gB,GAWjC;;;IAEM05H,a;;;;;AAEL,yBAAar/H,IAAb,EAAmBZ,KAAnB,EAA0BC,MAA1B,EAAkC0F,KAAlC,EAA0C;AAAA;;AAEzCnR,IAAAA,OAAO,CAACC,IAAR,CAAc,wDAAd;AAFyC,gCAGlCmM,IAHkC,EAG5BZ,KAH4B,EAGrBC,MAHqB,EAGb0F,KAHa;AAKzC;;;EAP0BiB,a;;AAW5B,IAAK,OAAO69E,kBAAP,KAA8B,WAAnC,EAAiD;AAEhDA,EAAAA,kBAAkB,CAAC1gF,aAAnB,CAAkC,IAAI2gF,WAAJ,CAAiB,UAAjB,EAA6B;AAAEC,IAAAA,MAAM,EAAE;AACxEu7C,MAAAA,QAAQ,EAAEh9I;AAD8D;AAAV,GAA7B,CAAlC;AAIA;;AAED,IAAK,OAAO47H,MAAP,KAAkB,WAAvB,EAAqC;AAEpC,MAAKA,MAAM,CAACqhB,SAAZ,EAAwB;AAEvB3rI,IAAAA,OAAO,CAACC,IAAR,CAAc,yDAAd;AAEA,GAJD,MAIO;AAENqqH,IAAAA,MAAM,CAACqhB,SAAP,GAAmBj9I,QAAnB;AAEA;AAED;;AAED,SAAS6D,qBAAT,EAAgC/B,WAAhC,EAA6C0B,YAA7C,EAA2DqF,0BAA3D,EAAuFnH,gBAAvF,EAAyGmE,WAAzG,EAAsH9C,WAAtH,EAAmI0H,iBAAnI,EAAsJ+sH,YAAtJ,EAAoK8E,iBAApK,EAAuL3O,aAAvL,EAAsMiH,eAAtM,EAAuNob,cAAvN,EAAuOlG,oBAAvO,EAA6P/kB,cAA7P,EAA6QlZ,QAA7Q,EAAuRhgB,WAAvR,EAAoS0sD,WAApS,EAAiThZ,KAAjT,EAAwTgD,aAAxT,EAAuU5G,YAAvU,EAAqVuC,aAArV,EAAoWpC,WAApW,EAAiX8c,UAAjX,EAA6Xx3I,QAA7X,EAAuY+H,iBAAvY,EAA0ZpI,cAA1Z,EAA0amkG,IAA1a,EAAgbioB,oBAAhb,EAAscunB,IAAtc,EAA4crpH,IAA5c,EAAkd4sH,UAAld,EAA8dtnG,WAAW,IAAI4yE,iBAA7e,EAAggB5yE,WAAhgB,EAA6gBonG,SAA7gB,EAAwhBzwG,eAAxhB,EAAyiBgC,cAAziB,EAAyjBovF,oBAAzjB,EAA+kBvzH,QAA/kB,EAAylByqH,KAAzlB,EAAgmBj8E,MAAhmB,EAAwmBujG,YAAxmB,EAAsnBpuC,aAAtnB,EAAqoBsI,eAAe,IAAIoS,qBAAxpB,EAA+qBpS,eAA/qB,EAAgsBtE,gBAAhsB,EAAktBlpG,iBAAltB,EAAquB2tG,cAAc,IAAIkS,oBAAvvB,EAA6wBlS,cAA7wB,EAA6xBjtG,mBAA7xB,EAAkzB64H,KAAlzB,EAAyzB5iH,KAAzzB,EAAg0B6yG,kBAAh0B,EAAo1Bh0G,eAAp1B,EAAq2ByvF,iBAAr2B,EAAw3BmsB,uBAAx3B,EAAi5BxiB,YAAY,IAAIkR,kBAAj6B,EAAq7BlR,YAAr7B,EAAm8Br9D,UAAn8B,EAA+8BnxC,qBAA/8B,EAAs+BC,qBAAt+B,EAA6/BqyC,WAA7/B,EAA0gCo/E,iBAA1gC,EAA6hCtxH,uBAA7hC,EAAsjCwpG,gBAAtjC,EAAwkCG,iBAAxkC,EAA2lC4b,gBAA3lC,EAA6mC/oH,YAA7mC,EAA2nCC,aAA3nC,EAA0oCC,iBAA1oC,EAA6pCH,YAA7pC,EAA2qCqoG,KAA3qC,EAAkrC4F,SAAlrC,EAA6rC/sG,cAA7rC,EAA6sCiC,iBAA7sC,EAAguC6tG,gBAAgB,IAAIgS,sBAApvC,EAA4wChS,gBAA5wC,EAA8xC6iC,WAA9xC,EAA2yC9wH,aAA3yC,EAA0zCL,gBAA1zC,EAA40C+hF,WAA50C,EAAy1C03C,kBAAz1C,EAA62CC,aAA72C,EAA43ClnB,iBAA53C,EAA+4C0mB,SAA/4C,EAA05CzyI,kBAA15C,EAA86CE,sBAA96C,EAAs8ConH,qBAAt8C,EAA69ClrH,WAA79C,EAA0+CC,kBAA1+C,EAA8/CmoF,YAA9/C,EAA4gDipC,gBAA5gD,EAA8hDsf,sBAA9hD,EAAsjDxrB,mBAAtjD,EAA2kDtX,oBAAoB,IAAI6P,0BAAnmD,EAA+nD7P,oBAA/nD,EAAqpD1yG,UAArpD,EAAiqDoB,cAAjqD,EAAirDE,cAAjrD,EAAisDsI,gBAAjsD,EAAmtDN,gBAAntD,EAAquDG,gBAAruD,EAAuvDspG,aAAvvD,EAAswDpJ,YAAtwD,EAAoxD9nG,UAApxD,EAAgyDkH,gBAAhyD,EAAkzDlG,gCAAlzD,EAAo1DC,gCAAp1D,EAAs3DqzB,KAAt3D,EAA63DlsB,eAA73D,EAA84DgvG,eAAe,IAAIuJ,qBAAj6D,EAAw7DvJ,eAAx7D,EAAy8D0X,UAAz8D,EAAq9D1wH,WAAr9D,EAAk+DqnC,sBAAl+D,EAA0/DE,sBAA1/D,EAAkhEC,sBAAlhE,EAA0iEtjC,SAA1iE,EAAqjEo8F,GAArjE,EAA0jED,OAA1jE,EAAmkEg7C,IAAnkE,EAAykED,UAAzkE,EAAqlE9zC,kBAArlE,EAAymEznG,SAAzmE,EAAonE42C,OAApnE,EAA6nE+7F,iBAA7nE,EAAgpE3oI,KAAhpE,EAAupEC,KAAvpE,EAA8pEhI,YAA9pE,EAA4qED,iBAA5qE,EAA+rEqH,uBAA/rE,EAAwtEF,kBAAxtE,EAA4uEgsI,UAA5uE,EAAwvEtqD,KAAxvE,EAA+vEvmF,aAA/vE,EAA8wEwwH,eAA9wE,EAA+xEmgB,qBAA/xE,EAAszEla,oBAAtzE,EAA40E5b,mBAAmB,IAAIwD,yBAAn2E,EAA83ExD,mBAA93E,EAAm5E8a,iBAAn5E,EAAs6E9F,WAAt6E,EAAm7E94G,UAAn7E,EAA+7EogI,qBAA/7E,EAAs9E/yI,kBAAt9E,EAA0+EE,sBAA1+E,EAAkgF87F,wBAAlgF,EAA4hF4yB,uBAA5hF,EAAqjFob,0BAArjF,EAAilF3tC,aAAjlF,EAAgmF39D,oBAAhmF,EAAsnFE,oBAAtnF,EAA4oFL,mBAA5oF,EAAiqF9iC,OAAjqF,EAA0qFw8F,iBAA1qF,EAA6rFO,0BAA7rF,EAAytFomB,WAAztF,EAAsuFngH,mBAAtuF,EAA2vFC,iBAA3vF,EAA8wFC,iBAA9wF,EAAiyFyB,eAAjyF,EAAkzFN,aAAlzF,EAAi0F2hH,aAAj0F,EAAg1FznB,GAAh1F,EAAq1F+M,aAAa,IAAImT,mBAAt2F,EAA23FnT,aAA33F,EAA04F74E,MAA14F,EAAk5F/0B,SAAl5F,EAA65FC,cAA75F,EAA66FoH,oBAA76F,EAAm8FF,eAAn8F,EAAo9F6rH,KAAp9F,EAA29F8B,UAA39F,EAAu+FjxB,IAAv+F,EAA6+FiuC,KAA7+F,EAAo/F7kE,iBAAp/F,EAAugGg+B,SAAvgG,EAAkhGE,UAAlhG,EAA8hGj+B,kBAA9hG,EAAkjGw3B,QAAljG,EAA4jGD,YAA5jG,EAA0kGx+F,cAA1kG,EAA0lGpE,YAA1lG,EAAwmGmmH,iBAAxmG,EAA2nG/lH,wBAA3nG,EAAqpGF,yBAArpG,EAAgrGC,wBAAhrG,EAA0sGF,yBAA1sG,EAAquG2E,oBAAruG,EAA2vG/F,iBAA3vG,EAA8wG2tH,MAA9wG,EAAsxG+G,WAAtxG,EAAmyGrI,cAAnyG,EAAmzG5nH,QAAnzG,EAA6zGE,YAA7zG,EAA20GD,UAA30G,EAAu1GnC,oBAAv1G,EAA62GD,eAA72G,EAA83G/F,KAA93G,EAAq4GmgC,QAAr4G,EAA+4G23F,cAA/4G,EAA+5G7lH,SAA/5G,EAA06GmC,OAA16G,EAAm7G6e,OAAn7G,EAA47GhxB,WAA57G,EAAy8GmtC,IAAz8G,EAA+8GpI,iBAA/8G,EAAk+GuoC,iBAAl+G,EAAq/GC,oBAAr/G,EAA2gHE,mBAA3gH,EAAgiHK,kBAAhiH,EAAojHN,kBAApjH,EAAwkHE,iBAAxkH,EAA2lHG,oBAA3lH,EAAinHD,oBAAjnH,EAAuoHD,gBAAvoH,EAAypH5tE,WAAzpH,EAAsqHsC,sBAAtqH,EAA8rHhB,YAA9rH,EAA4sH3B,gBAA5sH,EAA8tH0B,iBAA9tH,EAAivHkB,aAAjvH,EAAgwHI,yBAAhwH,EAA2xHF,0BAA3xH,EAAuzHC,yBAAvzH,EAAk1HF,0BAAl1H,EAA82H3B,UAA92H,EAA03HoH,gBAA13H,EAA44H1I,UAA54H,EAAw5H+H,YAAx5H,EAAs6H9F,aAAt6H,EAAq7HmF,wBAAr7H,EAA+8HnH,cAA/8H,EAA+9H4B,aAA/9H,EAA8+HkH,mBAA9+H,EAAmgI8iH,mBAAngI,EAAwhIr0F,QAAxhI,EAAkiIogG,YAAliI,EAAgjI9vH,oBAAhjI,EAAskIi3G,kBAAkB,IAAIyD,wBAA5lI,EAAsnIzD,kBAAtnI,EAA0oIn+G,SAA1oI,EAAqpIM,sBAArpI,EAA6qIE,sBAA7qI,EAAqsIJ,sBAArsI,EAA6tIF,sBAA7tI,EAAqvIyyD,kBAArvI,EAAywI/zD,YAAzwI,EAAuxIC,gBAAvxI,EAAyyI40D,cAAzyI,EAAyzI2mF,kBAAzzI,EAA60I5sC,IAA70I,EAAm1Ih8D,iBAAn1I,EAAs2IsD,KAAt2I,EAA62IqE,aAAa,IAAI0oE,mBAA93I,EAAm5I1oE,aAAn5I,EAAk6I28F,WAAl6I,EAA+6I9gB,UAA/6I,EAA27I2e,gBAA37I,EAA68IhuC,MAA78I,EAAq9I53B,cAAr9I,EAAq+IomE,eAAr+I,EAAs/I9jC,kBAAkB,IAAIyR,wBAA5gJ,EAAsiJzR,kBAAtiJ,EAA0jJgvB,eAA1jJ,EAA2kJoE,eAA3kJ,EAA4lJ9C,aAA5lJ,EAA2mJ10B,oBAA3mJ,EAAioJE,qBAAjoJ,EAAwpJrqF,UAAxpJ,EAAoqJspG,uBAApqJ,EAA6rJF,2BAA7rJ,EAA0tJttH,QAA1tJ,EAAouJoJ,gBAApuJ,EAAsvJrD,UAAtvJ,EAAkwJS,iBAAlwJ,EAAqxJuB,sBAArxJ,EAA6yJH,qBAA7yJ,EAAo0JC,qBAAp0J,EAA21JC,qBAA31J,EAAk3JE,sBAAl3J,EAA04JC,sBAA14J,EAAk6Jb,oBAAl6J,EAAw7JC,oBAAx7J,EAA88JC,oBAA98J,EAAo+JC,oBAAp+J,EAA0/JC,oBAA1/J,EAAghKC,oBAAhhK,EAAsiKC,oBAAtiK,EAA4jKC,oBAA5jK,EAAklKO,gBAAllK,EAAomKf,oBAApmK,EAA0nKH,wBAA1nK,EAAopKD,wBAAppK,EAA8qKL,qBAA9qK,EAAqsKC,qBAArsK,EAA4tKC,qBAA5tK,EAAmvKd,SAAnvK,EAA8vKmB,eAA9vK,EAA+wKC,eAA/wK,EAAgyKJ,uBAAhyK,EAAyzKD,uBAAzzK,EAAk1KJ,oBAAl1K,EAAw2KH,QAAx2K,EAAk3KC,eAAl3K,EAAm4Km+G,iBAAn4K,EAAs5Kj0F,GAAt5K,EAA25KsjH,SAA35K,EAAs6Ktc,aAAt6K,EAAq7KrxH,SAAr7K,EAAg8KC,gBAAh8K,EAAk9K1C,mBAAl9K,EAAu+KU,cAAv+K,EAAu/KuF,gBAAv/K,EAAygL5H,uBAAzgL,EAAkiLw+G,YAAY,IAAI2D,kBAAljL,EAAskL3D,YAAtkL,EAAolLh3G,cAAplL,EAAomLq4F,KAApmL,EAA2mLx9C,WAA3mL,EAAwnLoF,SAAxnL,EAAmoL/W,cAAnoL,EAAmpL09B,cAAnpL,EAAmqLilC,KAAnqL,EAA0qL0L,aAAa,IAAIqD,mBAA3rL,EAAgtLrD,aAAhtL,EAA+tLi4B,SAA/tL,EAA0uLh/B,UAA1uL,EAAsvL50G,SAAtvL,EAAiwLmgG,QAAjwL,EAA2wLowC,cAA3wL,EAA2xLpxC,WAA3xL,EAAwyLhjG,aAAxyL,EAAuzLoc,MAAvzL,EAA+zL4R,MAA/zL,EAAu0L6xF,cAAc,IAAIiD,oBAAz1L,EAA+2LjD,cAA/2L,EAA+3LgzB,SAA/3L,EAA04L1c,mBAA14L,EAA+5LjpB,WAA/5L,EAA46LooB,SAA56L,EAAu7Lue,eAAv7L,EAAw8L/xC,MAAx8L,EAAg9LhzB,cAAh9L,EAAg+L9tE,cAAh+L,EAAg/LM,sBAAh/L,EAAwgMR,cAAxgM,EAAwhM2I,eAAxhM,EAAyiMN,eAAziM,EAA0jMG,eAA1jM,EAA2kM8xH,YAA3kM,EAAylMzxH,eAAzlM,EAA0mMN,eAA1mM,EAA2nMG,eAA3nM,EAA4oM0iH,mBAA5oM,EAAiqM1rH,gBAAjqM,EAAmrMJ,mBAAnrM,EAAwsMnB,KAAxsM,EAA+sM6I,qBAA/sM,EAAsuMo4G,mBAAmB,IAAI6C,yBAA7vM,EAAwxM7C,mBAAxxM,EAA6yMg7B,YAA7yM,EAA2zM/9H,OAA3zM,EAAo0Mq3G,aAAp0M,EAAm1MrU,aAAa,IAAI6C,mBAAp2M,EAAy3M7C,aAAz3M,EAAw4MI,iBAAiB,IAAI0C,uBAA75M,EAAs7M1C,iBAAt7M,EAAy8MzjF,QAAz8M,EAAm9Mr1B,mBAAn9M,EAAw+MD,qBAAx+M,EAA+/MD,iBAA//M,EAAkhN25G,YAAY,IAAIgC,kBAAliN,EAAsjNhC,YAAtjN,EAAokN1+G,SAApkN,EAA+kNykC,qBAA/kN,EAAsmNE,qBAAtmN,EAA6nNL,oBAA7nN,EAAmpNC,2BAAnpN,EAAgrNsrG,OAAhrN,EAAyrNttF,WAAzrN,EAAssNhU,aAAtsN,EAAqtNptC,gBAArtN,EAAuuNU,kBAAvuN,EAA2vNL,eAA3vN,EAA4wNG,qBAA5wN,EAAmyNC,qBAAnyN,EAA0zNN,iBAA1zN,EAA60NnE,YAA70N,EAA21NqR,OAA31N,EAAo2NkW,OAAp2N,EAA62NzH,OAA72N,EAAs3N0sG,mBAAt3N,EAA24NrlB,YAA34N,EAAy5N3G,cAAz5N,EAAy6N99E,mBAAz6N,EAA87NJ,sBAA97N,EAAs9NgzB,qBAAt9N,EAA6+N1yB,0BAA7+N,EAAygO+4H,4BAAzgO,EAAuiOv6H,iBAAviO,EAA0jOs0E,aAA1jO,EAAykOlO,UAAzkO,EAAqlOq6B,iBAArlO,EAAwmOp6G,gBAAxmO,EAA0nOF,mBAA1nO,EAA+oOtG,UAA/oO,EAA2pOuG,eAA3pO,EAA4qOgB,aAA5qO,EAA2rO2B,YAA3rO,EAAysOnC,YAAzsO","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '142';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\nconst mat3 XYZ_TO_REC709 = mat3(\\n    3.2404542, -0.9692660,  0.0556434,\\n   -1.5371385,  1.8760108, -0.2040259,\\n   -0.4985314,  0.0415560,  1.0572252\\n);\\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n   vec3 sqrtF0 = sqrt( fresnel0 );\\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n}\\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n}\\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n}\\nvec3 evalSensitivity( float OPD, vec3 shift ) {\\n   float phase = 2.0 * PI * OPD * 1.0e-9;\\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\\n   xyz /= 1.0685e-7;\\n   vec3 srgb = XYZ_TO_REC709 * xyz;\\n   return srgb;\\n}\\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n   vec3 I;\\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\\n   if ( cosTheta2Sq < 0.0 ) {\\n       return vec3( 1.0 );\\n   }\\n   float cosTheta2 = sqrt( cosTheta2Sq );\\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n   float R21 = R12;\\n   float T121 = 1.0 - R12;\\n   float phi12 = 0.0;\\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n   float phi21 = PI - phi12;\\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n   vec3 phi23 = vec3( 0.0 );\\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n   vec3 phi = vec3( phi21 ) + phi23;\\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n   vec3 r123 = sqrt( R123 );\\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n   vec3 C0 = R12 + Rs;\\n   I = C0;\\n   vec3 Cm = Rs - T121;\\n   for ( int m = 1; m <= 2; ++m ) {\\n       Cm *= r123;\\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n       I += Cm * Sm;\\n   }\\n   return max( I, vec3( 0.0 ) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\nif ( material.iridescenceThickness == 0.0 ) {\\n\\tmaterial.iridescence = 0.0;\\n} else {\\n\\tmaterial.iridescence = saturate( material.iridescence );\\n}\\nif ( material.iridescence > 0.0 ) {\\n\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Uint8Array ) denominator = 255;\n\telse if ( array instanceof Uint16Array ) denominator = 65535;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 33 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = /*@__PURE__*/ new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst {\n\tfloatView: _floatView,\n\tuint32View: _uint32View,\n\tbaseTable: _baseTable,\n\tshiftTable: _shiftTable,\n\tmantissaTable: _mantissaTable,\n\texponentTable: _exponentTable,\n\toffsetTable: _offsetTable\n} = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable,\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_floatView[ 0 ] = val;\n\tconst f = _uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n\treturn _floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r133, c5bb5434555a3c3ddd784944a0a124f996fc721b\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, FlatShading, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n"]},"metadata":{},"sourceType":"module"}